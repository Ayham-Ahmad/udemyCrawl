{
  "courses": [
    {
      "title": "Mastering Elementor Build Stunning WordPress Websites",
      "url": "https://www.udemy.com/course/mastering-elementor-build-stunning-wordpress-websites/",
      "bio": "A Complete Guide to Designing Responsive, Professional WordPress Websites Using Elementor Page Builder",
      "objectives": [
        "How to use Elementor’s drag-and-drop editor to build custom WordPress pages",
        "Designing fully responsive websites that look great on desktop, tablet, and mobile",
        "Creating professional layouts using sections, columns, and widgets",
        "Customizing typography, colors, and backgrounds to match your brand",
        "Using Elementor templates and blocks to speed up your design process",
        "Building dynamic headers, footers, and landing pages",
        "Adding contact forms, image galleries, sliders, and interactive elements",
        "Integrating third-party plugins and tools with Elementor",
        "Managing website design for SEO and fast performance",
        "Creating complete websites without any coding skills"
      ],
      "course_content": {
        "INTRODUCTION": [
          "SETTING UP DOMAIN NAME AND HOSTING"
        ],
        "STARTING WITH WORDPRESS": [
          "WORDPRESS INTERFACE",
          "ADDING MENU BAR",
          "INSTALLING THEMES"
        ],
        "ELEMENTOR": [
          "INSTALLING ELEMENTOR",
          "SITE SETTING",
          "ADDING FIRST ELEMENT",
          "HISTORY AND REVISION",
          "ADDING BUTTON",
          "CREATING ABOUT SECTION",
          "CREATING POST GRID",
          "SLIDE SHOW",
          "TESTIMONIALS",
          "ADJUSTING SPACING",
          "ANIMATION"
        ],
        "MAKING WEBSITE RESPONSIVE": [
          "MAKING WEBSITE RESPONSIVE"
        ]
      },
      "requirements": [
        "Willingness to learn and experiment with design"
      ],
      "description": "Unlock the full potential of your WordPress website using Elementor — one of the most powerful and user-friendly page builders available today. This course is designed to take you from the basics of Elementor to a confident level where you can design professional, fully responsive websites without writing a single line of code.\nWhether you're an aspiring web designer, a business owner looking to manage your own website, or a creative freelancer wanting to build websites for clients, this course provides a practical, hands-on approach to mastering the Elementor interface and features. You’ll explore how Elementor simplifies the web design process with its intuitive drag-and-drop editor, pre-built templates, and powerful widgets that give you complete control over your site’s layout and content.\n\n\nWe’ll guide you through real-world projects and workflows that help you understand not just how Elementor works, but how to use it effectively to bring your design vision to life. From structuring your pages to styling them in a way that reflects your brand or business, you’ll develop the confidence to handle a wide range of website-building tasks on your own.\n\n\nYou don’t need any prior web development or coding experience. Elementor’s visual editor makes the process simple, fast, and fun. By the end of this course, you’ll have all the tools and techniques needed to build beautiful, modern websites that work on any device and deliver a great user experience",
      "target_audience": [
        "Beginners who want to learn how to build websites without coding",
        "Business owners who want to create or manage their own website",
        "Freelancers looking to offer Elementor-based web design services",
        "WordPress users who want to improve their website design skills",
        "Bloggers and content creators who want a visually appealing website",
        "Designers who want to transition into web design with easy tools",
        "Anyone interested in learning how to use Elementor to build stunning, responsive websites"
      ]
    },
    {
      "title": "Laravel - Build Student Result Management System SRMS A-Z",
      "url": "https://www.udemy.com/course/laravel-11-build-student-result-management-system-srms-a-z/",
      "bio": "In This Course, You Will Build a Complete Student Result Management System From Scratch Using Laravel 11/12 and MYSQL",
      "objectives": [
        "Create a Complete Student Result Management Project From Scratch with Laravel 11",
        "Adding Professional Admin Theme for Backend",
        "Adding Professional Theme for Frontend",
        "Laravel 11 Authentication with Breeze",
        "Image Upload System",
        "Change Password Option",
        "Adding Toaster Message And Sweet-Alert"
      ],
      "course_content": {
        "Introduction - Project Overview": [
          "Introduction - Project OverView"
        ],
        "Laravel Version Upgrade": [
          "Use Breeze Package with Laravel 12"
        ],
        "Admin Auth With Breeze - Create Auth For Admin": [
          "Laravel Essential Setup",
          "Install Laravel 11",
          "Create Database",
          "Install Laravel Breeze Package",
          "Seed Admin's Data",
          "Login With Username"
        ],
        "Section 3 Admin Panel Setup": [
          "Exercise Files - Downloadable Resources",
          "Project Theme Overview",
          "Admin Template Setup",
          "Dashboard Segmentation",
          "Admin Logout Option",
          "Customize Login Form",
          "Show Admin Login Credential Error Message",
          "Clean Admin Template"
        ],
        "Admin Profile Update": [
          "Admin Profile Update Part 1",
          "Admin Profile Update Part 2",
          "Admin Profile Update Part 3",
          "Admin Profile Update Part 4",
          "Admin Profile Update Part 5",
          "Adding Toaster Message",
          "Admin Profile Change Password Part 1",
          "Admin Profile Change Password Part 2",
          "Admin Profile Image Update"
        ],
        "Create and Manage Student Classes": [
          "Create Student Class Part 1",
          "Create Student Class Part 2",
          "Manage Student Classes Part 1",
          "Manage Student Classes Part 2",
          "Manage Student Classes Part 3",
          "Manage Student Classes Part 4",
          "Adding Sweet Alert To Our Project"
        ],
        "Create and Manage Student Subjects": [
          "Create Student Subject Part 1",
          "Create Student Subject Part 2",
          "Manage Student Subject Part 1",
          "Manage Student Subject Part 2",
          "Manage Student Subject Part 3"
        ],
        "Subjects Combinations": [
          "Add Subject Combination Part 1",
          "Add Subject Combination Part 2",
          "Manage Subject Combination Part 1",
          "Manage Subject Combination Part 2"
        ],
        "Create and Manage Students": [
          "Create Student Part 1",
          "Create Student Part 2",
          "Manage Student Part 1",
          "Manage Student Part 2",
          "Manage Student Part 3",
          "Manage Student Part 4"
        ],
        "Result Management": [
          "Add Student Result Part 1",
          "Add Student Result Part 2",
          "Add Student Result Part 3",
          "Add Student Result Part 4",
          "Manage Student Result Part 1",
          "Manage Student Result Part 2",
          "Manage Student Result Part 3",
          "Manage Student Result Part 4"
        ]
      },
      "requirements": [
        "You have to know basic PHP",
        "Basic HTML, CSS, Bootstrap",
        "Local Server : Xampp/Wampp/Vertrigo/Mamp",
        "Text Editor/IDE: Sublime Text, Visual Studio Code, PHPStrom etc"
      ],
      "description": "Laravel 11/12 Build Complete Student Result Management System SRMS A-Z\nWelcome to Student Result Management System Complete Course in Laravel 11/12. In this course, I will teach you how to build a full-featured Student Result Management System Application using the Laravel framework.\nIn this course, i will cover everything you need to know to build a fully functional RMS application. including Multiple Advance functionality, and you will build it from scratch. This is no theory base course. This will be a straight forward course that will help you build a complete real-world application.\nWhy We Should Learn Laravel?\nLaravel is a first development life cycle and less code functionality\nit's easy to learn\nmaking web applications faster\nconfiguration error and exception handling\nautomation testing work.\nURL Routing Configuration is very high in Laravel.\nScheduling tasks configuration and management\nIt has a huge community\nUnlimited resource.\nMost importantly it's very easy to get a job if you have Laravel skills.\nWhat is your benefit?\nI guarantee you'll get away with new skills and a deeper understanding of Laravel 11/12 So, what are you waiting for? Enroll in our Laravel 11/12 Build Complete Student Result Management System SRMS A-Z Application course. You will be able to understand how to complete a project from beginning to end, and how to handle project bugs. You will be able to start work for your client. And you can as well add this project to your portfolio and university assignment And most importantly you will get my support within 24 hours. If you have any issues just don't hesitate to let me know about it and I will surely respond to you.\nWhat is the Best Part of this Course?\n\n\nComplete Advance Project With Laravel 11/12\nBuild Complete Result Management System Project A-Z\nAdmin Authentication\nAdvance JavaScript Uses\nImage Upload System\nAdding Professional Theme for Backend\nAdding Professional Theme for Frontend\nAuth with Breeze Package\nPrint Student Result\nAdmin Change Password Option\nLecture By Lecture Project Source Code\nCreate Custom Pagination\nAnd much more functions ..\n\n\nIn this course, I will not just be telling you what to do! But rather how to do it by trying my possible best to explain every step of the way. Learn and apply this to a live project with me.\nIf that sound great to you then go ahead and Click the \"Enroll Now\" button at the top right now!\n\nI will be very excited to see you on the course!\nSincerely,\nMustapha Jibril Muhammad.",
      "target_audience": [
        "Anyone Who want to become Laravel Developer.",
        "Students who want to take their PHP skills to another level should definitely take this course",
        "University Project Assignment",
        "Add This Experience in Work Portfolio"
      ]
    },
    {
      "title": "Design & Code Twitter with Lit JS, CSS & Figma (2022)",
      "url": "https://www.udemy.com/course/twitter-figma-javascript/",
      "bio": "Transfer UI UX Design to Front-End Native Web Development Components with HTML, CSS, JavaScript, Lit JS, & Figma",
      "objectives": [
        "Design Figma components & develop them using JavaScript",
        "Utilize native web component API to develop reusable custom elements",
        "Fast-track native web component development using Lit JS framework",
        "Encapsulate your CSS & JavaScript logic to develop light & dark theme components",
        "Design custom components using Figma Variants & Auto Layout",
        "Learn how to set up a Design System in Figma for the Twitter UI Project"
      ],
      "course_content": {
        "Course Overview & Materials": [
          "Important Figma UI 3 Update",
          "Design Section Overview",
          "Coding Section Overview",
          "Common Shortcuts Before We Start",
          "List of Plugins",
          "Download Course Material Bundled"
        ],
        "Twitter UI - Figma": [
          "Important Figma UI 3 Update",
          "Sidebar Buttons - Figma",
          "Sidebar Navigation - Figma",
          "Sidebar Profile - Figma",
          "Sidebar Dropdown - Figma",
          "Home Header Component - Figma",
          "Tweet Component - Figma",
          "News Feed - Figma",
          "Explore Component - Figma",
          "Notification Component - Figma",
          "Message Component - Figma",
          "Bookmark Component - Figma",
          "List Component - Figma",
          "Profile Component - Figma"
        ],
        "Twitter Sidebar Component": [
          "VS Code Theme & Shortcut Set Up",
          "JavaScript Development Set Up",
          "VS Code Preference Set Up",
          "Sidebar Home in JavaScript",
          "Static CSS Host",
          "Fix Typography Styles",
          "Render Conditionally - JavaScript",
          "Shared CSS in JavaScript",
          "Sidebar Button Components - JavaScript",
          "Sidebar Logo - JavaScript",
          "Button Component - JavaScript",
          "Sidebar Username - JavaScript",
          "SVG Method Refactoring",
          "Nested Typography Component - JavaScript",
          "Sidebar Finalized Layout - CSS",
          "Sidebar Padding Fix - CSS",
          "Sidebar Dropdown - CSS",
          "Sidebar Profile - CSS",
          "Sidebar Event Listener - JavaScript",
          "Fixing Event Listener - JavaScript",
          "CSS and JavaScript Clean Up"
        ],
        "Twitter Newsfeed Component": [
          "Organize JavaScript Modules",
          "Refactor JavaScript Logic",
          "Reuse Component - JavaScript",
          "Trending Info Component - JavaScript",
          "Newsfeed Layout - CSS",
          "Fixing Scrollbar Style - CSS",
          "Newsfeed Responsive - CSS",
          "Minor Fix Sidebar - CSS",
          "New Data Folder",
          "Dynamic Content - JavaScript"
        ],
        "Twitter Home Component": [
          "Figma Variants - JavaScript",
          "Icon Button - JavaScript",
          "Home Component - HTML",
          "Tweet Icon Buttons - SVG",
          "Tweet Card Layout - CSS",
          "CSS Layout Clean Up",
          "Tweet Card Data",
          "Dynamic Tweet Card - JavaScript",
          "Final Thoughts"
        ],
        "Bonus Lecture": [
          "Bonus"
        ]
      },
      "requirements": [
        "Advance knowledge of HTML, CSS, JavaScript",
        "Intermediate understanding of Figma"
      ],
      "description": "In this course we will learn how to use the native web component technology to our advantage.\nDesign beautiful web components for Twitter using Figma\nTransfer all those beautiful designs to front-end code using Lit JS\nCode light & dark user interface for Twitter home page using JavaScript & Figma\n\n\nBefore we dive right into front-end coding, we will first design everything in Figma from scratch.\nNot only will we design components in Figma, but also build a design system for our Twitter UI project\nWe will design reusable color, typography, & shadow styles\nAt the end, we transfer Figma styles to CSS variables\n\nWe will learn how to use Lit JS to develop native shareable components.\nWe will learn how to encapsulate our HTML and CSS into JavaScript classes using Lit JS\nWe will learn how to build simple future-ready native web components\nWe only use pure vanilla JavaScript to create customizable components and scope our CSS styles inside each of them\n\n\nOne of the best practices in front-end development is to reuse code as much as possible. However, transfering design to HTML markup tends to be complex.\nWe will use Lit JS to make our development life easy because it is built on top of native web component API\nSince Lit JS uses native web component API, our development environment is simple yet powerful\nThat means we do not have to worry about Node Modules or JavaScript bundlers to convert our syntax to code",
      "target_audience": [
        "Designers who want to add Twitter Figma Project to their portfolio",
        "Developers who want to transfer Figma components to code",
        "Developers who want to create native custom components from scratch"
      ]
    },
    {
      "title": "ASP.NET MVC by 27 yrs Experience Trainer (Subset course)",
      "url": "https://www.udemy.com/course/asp-net-mvc-online-course/",
      "bio": "Completely practical approach about how Model, View and Controller participate in building Modern Web Applications.",
      "objectives": [
        "Deep Understanding of MVC Design Pattern and comparison with traditional ASP. NET Web Forms.",
        "You will have good knowledge Model, View and Controller individually.",
        "Implement Authentication and Authorization using ASP .NET Identities Framework.",
        "Very good understanding of how Cookies and Session overcome stateless behaviour of HTTP Protocol.",
        "Configuring Web Applications.",
        "Deploying Applications to Server"
      ],
      "course_content": {
        "Prerequisite-Introduction to Web Programming": [
          "Web Programming Introduction"
        ],
        "Introduction to MVC": [
          "Introduction to ASP.NET MVC"
        ],
        "First MVC Application": [
          "First MVC Application"
        ],
        "Introduction Views in MVC Application": [
          "Introduction Views in MVC Application"
        ],
        "Adding and Model in MVC Application": [
          "Adding and Model in MVC Application"
        ],
        "Exploring Controllers": [
          "Controller And ActionResult Types"
        ],
        "Passing Data from Controller to View": [
          "Passing Data from Controller to View"
        ],
        "Action Selectors HttpGet and HttpPost": [
          "Action Selectors HttpGet and HttpPost"
        ],
        "Built in Action Filters": [
          "Built in Action Filters"
        ],
        "Exploring Razor Views": [
          "Razor Introduction and Syntax"
        ]
      },
      "requirements": [
        "Very basic knowledge of HTML and CSS - Initial Videos will provide an Introduction to these topics.",
        "Should have good command over C# Programming Language",
        "Would require Visual Studio and SQL Express"
      ],
      "description": "Mr. Sandeep Soni, Microsoft Certified Trainer and having 26 years of experience has himself participated in architecting and developing a large number of ASP.NET MVC applications and has trained more than 100,000 students. Topics covered are in-depth and not only benefits beginners but also experienced software developers.\n\n\nThis course is a subset of our course \"Deep dive into ASP.NET MVC by 26 yrs Experience Trainer\" and will have 14 hours of video.\nCovering every topic right from basic to in-depth understanding, our online ASP.NET MVC course provides essential knowledge of MVC design pattern and applying its features to developing lightweight but large sized web applications as in modern applications.\n\n\nThe most striking feature of OUR online ASP.NET MVC training is that it includes both theory as well as practical examples for each and every module. In addition to this, the ASP.NET MVC Interview questions provide an effective source for helping our participants to communicate effectively and confidently in any interview.\n\n\nYou can very quickly decide about our QUALITY of content after watching our Preview Videos.\nWhat is ASP.NET MVC:\nThis ASP.NET MVC online training is specially designed for beginners to learn how to build web applications using the MVC framework. Its features make the web application-built structure easier by separating them into three patterns. The separated patterns are:\nModel\nView\nController",
      "target_audience": [
        "Anyone who would like to get into building dynamic web applications from ground up."
      ]
    },
    {
      "title": "Learn Web Development: Beginner to Advanced",
      "url": "https://www.udemy.com/course/learn-web-development-beginner-to-advanced/",
      "bio": "Get Certified as a Web Developer, Learn HTML, CSS, JavaScript, React, node.js, Databases and API",
      "objectives": [
        "Frontend Development – Learn HTML, CSS, JavaScript, and frameworks like Bootstrap & Tailwind to build responsive websites.",
        "Backend Development – Work with Node.js, Express.js, and databases (MongoDB/MySQL) to build server-side applications.",
        "Full-Stack Development – Combine frontend and backend skills to create dynamic, database-driven web applications.",
        "Real-World Projects – Build and deploy multiple hands-on projects to gain practical experience.",
        "Web Development Best Practices – Learn clean coding, debugging, and performance optimization techniques.",
        "Version Control & Deployment – Use Git, GitHub, and hosting platforms like Netlify and Heroku to manage and publish projects.",
        "Career Preparation – Gain insights into freelancing, job opportunities, and industry standards in web development."
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Parfect for you",
          "What you I'll learn",
          "Enroll now to get started"
        ],
        "Web Developmental Fundamentals": [
          "Introduction to Web development Fundamentals",
          "Getting Started",
          "Introduction to HTML",
          "Understanding CSS",
          "JavaScript Concept",
          "Wrap up and Conclusions"
        ],
        "Intermediate Web Development": [
          "Introduction to Intermediate Web Development",
          "Advanced HTML",
          "Advanced CSS",
          "Advanced JavaScript",
          "Wrap up and Conclusion"
        ],
        "Advanced Web Development": [
          "Introduction to Advanced Web Development",
          "React.js",
          "Node.js",
          "Test, Quality assurance and Performance optimization",
          "Introduction to Databases",
          "Understanding APIs",
          "Wrap up and Conclusion"
        ]
      },
      "requirements": [
        "No prior coding experience needed! This course is designed for complete beginners.",
        "A computer (Windows, macOS, or Linux) – You'll need a device to practice coding.",
        "Internet connection – Required for accessing course materials, downloading software, and deploying projects.",
        "Willingness to learn – Stay curious, practice consistently, and be ready to build amazing projects!"
      ],
      "description": "Master Web Development from the Ground Up!\nAre you ready to turn your passion for technology into a rewarding skill set? This all-in-one web development course is your comprehensive guide to going from beginner to advanced, equipping you with everything you need to build stunning, functional, and scalable websites and applications. Whether you're starting from scratch or looking to level up your existing skills, this course is designed to help you succeed.\nBegin your journey with the fundamentals of HTML and CSS, where you’ll learn how to structure web pages and style them with precision. Discover the secrets of responsive design, ensuring your creations look flawless on any device, from desktops to smartphones.\nNext, dive into JavaScript, the language that brings interactivity and dynamism to your projects. Learn how to manipulate the DOM, handle user events, and create engaging features like animations, form validations, and real-time updates.\nBut we don’t stop there. As you progress, you’ll explore modern frameworks and libraries like React, Vue.js, or Angular, which streamline development and help you build complex applications with ease. You’ll also delve into backend development, mastering tools like Node.js, Express, and databases such as MongoDB or SQL. Learn how to create APIs, manage user authentication, and deploy your projects to the cloud.\nThis course isn’t just about theory—it’s hands-on and project-based. You’ll build real-world applications, from simple portfolios to full-stack e-commerce sites, giving you the practical experience and portfolio pieces to showcase your skills.\nWhether you’re aiming to launch a career in tech, start freelancing, or simply bring your own ideas to life, this course is your roadmap to success. With expert instruction, step-by-step guidance, and a supportive learning community, you’ll gain the confidence and expertise to thrive as a professional developer.\nDon’t wait—your journey to web development mastery starts here. Enroll now and take the first step toward building the future of the web!",
      "target_audience": [
        "Beginners & Aspiring Web Developers – No prior experience? No problem! This course starts from scratch and gradually builds up to advanced topics.",
        "Students & Graduates – If you're studying computer science, IT, or any related field, this course will give you practical skills to build real projects.",
        "Job Seekers & Career Changers – Want to switch to a career in web development? This course will provide the necessary skills to land your first job.",
        "Entrepreneurs & Business Owners – Learn how to create and manage your own website without hiring developers.",
        "Freelancers & Side Hustlers – Gain the skills to start offering web development services and build an online portfolio.",
        "Self-Learners & Tech Enthusiasts – If you love learning new tech skills and want to explore the world of coding, this course is for you!"
      ]
    },
    {
      "title": "React and Redux: Learn By Building Real World Projects [13H]",
      "url": "https://www.udemy.com/course/react-and-redux-learn-by-building-real-world-projects/",
      "bio": "Complete React and Redux with hands on app development",
      "objectives": [
        "How to use Components",
        "How to use Props",
        "How to use Clicks",
        "How to use Lists",
        "How to use the Parcel Build Tool",
        "How to use Fetch Requests",
        "How to use React Router components",
        "How to Router an Email App",
        "How to use Redux"
      ],
      "course_content": {
        "Introduction": [
          "Course promo",
          "What Will You Learn"
        ],
        "Components, Props, State, Clicks, Lists": [
          "Create React App",
          "Anatomy of React",
          "Creating Components",
          "Passing Props",
          "Click Events",
          "Mapping Lists Part 1",
          "Mapping Lists Part 2",
          "User Input Text",
          "Adding List Items",
          "Deleting List Items"
        ],
        "Parcel Build Tool and Text Inputs": [
          "Parcel",
          "Range Inputs",
          "Display Filters"
        ],
        "Fetch Requests for APIs": [
          "Dummy Text Intro",
          "Dummy Text Setup",
          "Fetch Requests",
          "Real Time Requests",
          "Loading Indicator and Ternary Statements"
        ],
        "React Router": [
          "React Router Intro",
          "Project In it",
          "Creating Content Components",
          "Routing Components",
          "Router Links"
        ],
        "Router an Email App": [
          "Intro to Inbox",
          "Automating Project Setup",
          "Generating Mock Data",
          "Styling Rows Creating Routes",
          "Routing Reading Emails",
          "Marking Emails as Read",
          "Bugfix Toggling is Read vs Clicking Link to Detail",
          "Selecting Multiple Emails",
          "Keyboard Shortcuts"
        ],
        "Intro to Plain Redux": [
          "Intro to Redux",
          "Stores Actions and Reducers",
          "Creating Simple Counter",
          "Debugging Simple Counter",
          "Command Line Blackjack",
          "Dispatching User Input to Redux",
          "Preventing Errors"
        ],
        "Redux and React": [
          "Setup with Traditional Component",
          "Mapping Redux to Props",
          "React Redux Summary"
        ],
        "React Redux Grocery Cart": [
          "Initial Setup",
          "React Adding and Removing From Cart",
          "Converting React to Redux",
          "Implementing Undo Redo",
          "Action Creators"
        ],
        "Combining Reducers": [
          "Combined Reducer Name Spaces",
          "Integrating React Router Dom",
          "Routing Game Detail View",
          "Creating Teams",
          "Editing Teams",
          "Creating Games",
          "Score Keeping",
          "Complex Data Access",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knolwedge of HTML and CSS is required to complete the course"
      ],
      "description": "[NOTE: This course will be constantly updated & improved as per your feedback. All questions will get answered and the course authors (Joshua & Stephen) will be very present to guide you.]\n\n\nThis course was built by Stephen Geluso & Joshua Evans (Full-Stack Developers with 15 years of experience) and Eduonix Learning Solutions with a simple idea in mind: teach you React & Redux in a practical way, so that you can acquire, test and master your React skills gradually.\nIf you check the course's curriculum, you'll see that you'll learn all these things:\nUsing Components\nUsing Props\nUsing Clicks\nUsing Lists\nUsing the Parcel Build Tool\nUsing Fetch Requests\nUsing React Router components\nUsing Redux\nIn any case, Stephen & Joshua will be here for you and answer any questions you may have, and he'll constantly update and improve the course's content. The goal is to make your learning a very interactive process.\n\n\nSo, what are you waiting?! Get the course NOW!",
      "target_audience": [
        "Anyone who wants to learn how to build websites",
        "Anyone who wants to learn how to use React",
        "Anyone who wants to learn how to use Redux"
      ]
    },
    {
      "title": "Next.js - Build SaaS App with OpenAI GPT & TypeScript",
      "url": "https://www.udemy.com/course/next-js-article-generator-with-openai-mongodb-nextjs-13/",
      "bio": "Learn to build AI-powered T3 full stack app with Next.js 13, OpenAI, GPT, MongoDB, TailwindCSS, Stripe, and TypeScript!",
      "objectives": [
        "Learn how to build fullstack React apps with NextJS 13 & the App Router",
        "Build a cutting-edge article generator powered by OpenAI's ChatGPT",
        "Develop serverless CRUD operations with MongoDB Atlas",
        "Build a modern and powerful full stack app using T3 stack",
        "Implement secure authentication and authorization using Auth0",
        "Handle online payments efficiently with Stripe",
        "Craft a responsive and modern UI using Tailwind CSS and React-Icons",
        "Deploy your feature-rich application on Vercel",
        "Get started with React Server Components, Client Components, data fetching & more!"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of React and JavaScript is required. Nonetheless, an ebook covering that knowledge is provided.",
        "Very little programming experience needed, all concepts will be explained on the go.",
        "A brief knowledge of CSS would be beneficial, however we will use TailwindCSS for great developer experience."
      ],
      "description": "Unlock the Future of Web Development with NextJS 13 & OpenAI (GPT) - Build Your AI-Powered Article Generator!\nWelcome to this cutting-edge course where you'll embark on a journey to create your very own AI-powered article generator named \"Bloggify.\" In this course, we will harness the immense potential of NextJS 13 and the remarkable capabilities of OpenAI's ChatGPT to revolutionize web content generation.\nWhat You'll Achieve: By the end of this comprehensive program, you'll have the expertise to construct an advanced article-generation application that operates seamlessly with NextJS 13, OpenAI, GPT, MongoDB, TailwindCSS, Stripe, and TypeScript.\nCourse Highlights:\nSetting up Your NextJS Development Environment: We kickstart your journey by helping you establish a robust NextJS development environment.\nIntegrating OpenAI's ChatGPT: Dive into the world of artificial intelligence as we integrate OpenAI's ChatGPT to empower your app with dynamic article generation based on user prompts and desired tones.\nMastering MongoDB Atlas: Learn to implement serverless CRUD functionalities using MongoDB Atlas, enabling efficient data management for your application.\nState Management with Recoil: Gain proficiency in state management techniques with Recoil, ensuring a smooth and responsive user experience.\nSecure User Authentication and Authorization with Auth0: Prioritize security by implementing Auth0 for user authentication and authorization.\nSeamless Payment Handling with Stripe: Integrate Stripe into your application to handle payments effortlessly.\nCrafting a Modern UI with Tailwind CSS and React-Icons: Elevate your design skills by creating a sleek and responsive user interface using Tailwind CSS and React-Icons.\nType-Safe Coding with TypeScript: Write type-safe code throughout your project, enhancing code quality and maintainability.\nFrom Development to Deployment: We guide you through every step, from development to deployment on Vercel, ensuring you have a fully functional AI-powered article generator ready for the world to see.\nWho Should Enroll: This course is designed for developers looking to solidify their skills in modern web development technologies, specifically focusing on NextJS v13 and AI integration. Whether you're a seasoned developer or just starting on your web development journey, this course offers valuable insights and hands-on experience.\nWhy Wait? Start Crafting Your Intelligent Article-Generation App Today! Don't miss the opportunity to be at the forefront of web development innovation. Enroll now, and let's embark on this exciting journey together to create your AI-powered article generator. Join us and build the future of web content generation with NextJS 13 and OpenAI's ChatGPT.\nNote: This course covers the latest NextJS v13 App router philosophy, ensuring you're up-to-date with the newest version of this cutting-edge framework. Don't delay your progress; enroll today and step into the future of web development!",
      "target_audience": [
        "People wanting to learn modern JavaScript frameworks like React, Angular, NextJS"
      ]
    },
    {
      "title": "React - Build a Complete E-Commerce Application Step by Step",
      "url": "https://www.udemy.com/course/build-complete-react-application/",
      "bio": "Learn React.js from scratch and build a Complete E-Commerce Front-end Application using React JS, JavaScript and JSX",
      "objectives": [
        "Learn React Fundamentals: SPA, JSX, Components, Hooks, State, Context, Effect, Props, etc.",
        "Convert HTML and CSS Code into JSX Elements and React Components",
        "Create a full E-Commerce Application using React, JavaScript and JSX",
        "Perform CRUD Operations using an Open Source Backend Application (JSON Server)",
        "Implement the Pagination, Search, Sort and Filter Functionalities to Read Data from a REST API",
        "Implement Registration, Authentication and Role based Authorization using JWT",
        "Form Validation: Client-side and Server-side Validation",
        "Upload Images to the REST Server",
        "Send HTTP Requests Using Fetch API: promise-based behavior and async/await calls",
        "Routing using React Router: Create Routes and Protected Routes",
        "Store and Access the Application Data on the Browser in the Local Storage",
        "Add and Use Bootstrap Css, JS and Icons From the CDN"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "E-commerce application demo",
          "About React",
          "Source Code"
        ],
        "React Basics": [
          "Create React Application",
          "Function Components and Class Components",
          "Include Bootstrap CSS, JS and Icons",
          "Convert HTML to JSX",
          "Default Export-Import",
          "Named Export-Import",
          "Use CSS with JSX",
          "JavaScript Arrays",
          "JavaScript Objects",
          "Component parameters - props",
          "List elements",
          "Component State and useState Hook",
          "Controlled Components",
          "Delete Components from a List",
          "Uncontrolled Forms",
          "Controlled Forms",
          "Store Data in the Browser - Local Storage",
          "React Hooks - useEffect Function",
          "React Hooks - useContext Function"
        ],
        "Demo Projects": [
          "TODO List - Introduction and Setup",
          "TODO List - Create Form",
          "TODO List - Create and Render Tasks",
          "TODO List - Update and Delete Tasks",
          "TODO List - Save the Tasks in the Browser (Local Storage)",
          "TODO List - Source Code",
          "Weather App",
          "Weather App - Source Code"
        ],
        "E-Commerce Application Setup": [
          "React App and Bootstrap Setup",
          "Application layout - Navbar and Footer",
          "React Router - Add BrowserRouter",
          "React Router - Add Links"
        ],
        "Perform CRUD Operations on Products": [
          "Introduction",
          "Setup Backend Server",
          "[IMPORTANT] Required Version of JSON Server",
          "Read Products - Create the ProductList Component",
          "Read Products - Fill the Product Table",
          "Configure Backend Server for File Upload and Data Validation",
          "Create Products - Create the Form",
          "Create Products - Submit the Form",
          "Create Products - Show Server-Side Validation Errors",
          "Update Products - Create the EditProduct Component",
          "Update Products - Fill and Submit the Form",
          "Delete Products",
          "Read Products - Add Pagination",
          "Read Products - Add Search Functionality",
          "Read Products - Add Sort Functionality",
          "Read Products - Add Sort Arrow",
          "Home Component - Add Hero Section",
          "Home Component - Show Products",
          "Home Component - Add Pagination",
          "Home Component - Add Filter Functionality",
          "Home Component - Add Sort Functionality",
          "ProductDetails Component - Create the Layout",
          "ProductDetails Component - Read and Render Product Details"
        ],
        "Authentication and Authorization": [
          "Introduction",
          "Setup JWT Authentication Server",
          "Create Register and Login Routes",
          "Create the Register Component",
          "Create the Login Component",
          "Store User Credentials in the Application Memory",
          "Store User Credentials in the Browser (Local Storage)",
          "User Logout",
          "Update the Navbar based on user Authentication and Role",
          "Route Protection Components",
          "Configure JWT Authentication Server - Enable Authorization",
          "Send JWT to Create and Update Products",
          "Send JWT in Delete Requests",
          "UserProfile - Route Setup",
          "UserProfile - Create Skeleton",
          "UserProfile - Show Profile Details",
          "UserProfile - Update Profile",
          "UserProfile - Update Password",
          "UserList - Create the UserList Component",
          "UserList - Show the List of Users",
          "UserList - Add Pagination",
          "UserDetails - Create the UserDetails Component",
          "UserDetails - Show the User Details"
        ],
        "Application Deployment": [
          "Deploy React App on GitHub",
          "Deploy JSON Server"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and JavaScript"
      ],
      "description": "This course is for Beginners to React.js having some knowledge of HTML and JavaScript.\nIn this course, I will show you how to build a complete front-end application using React. This application is also called a Single Page Application (SPA) because it contains a single HTML file that renders different views.\nWe will use \"JSON Server\", which is a REST server, as our backend application. So we will only focus on creating the front-end application. We will perform CRUD (Create, Read, Update and Delete) operations on products by sending HTTP Requests to the backend application using the Fetch API. Then we will add Registration, Authentication and Role-based Authorization using JWT (JSON Web Token).\nIn this course, you will learn:\n- How to create a React Application using JavaScript, JSX and Bootstrap\n- How to create React Components and how to Export/Import them\n- How to pass parameters (props) to React components\n- How to use useful React functions, called Hooks: useState, useEffect and useContext\n- How to use states within function components\n- How to create two types of forms: controlled and uncontrolled forms\n- How to validate forms using client-side validation and server-side validation\n- How to Implement Registration, Authentication and Role-based Authorization using JWT\n- How to perform CRUD operations (Create, Read, Update and Delete) on products using different HTTP requests and the Fetch API\n- How to use pagination (Split data on multiple pages), search, sort and filter functionalities\n- How to upload images to the server\n- How to store and access the application data locally on the browser using the local storage",
      "target_audience": [
        "This course is for anyone who wants to learn React by creating a complete e-commerce application."
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/nextjs-and-react-bootcamp/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Web Design 2021 for Beginners HTML CSS BOOTSTRAP 4 + Project",
      "url": "https://www.udemy.com/course/web-design-for-beginners-html-css-and-bootstrap-4-project/",
      "bio": "Learn HTML, HTML5, CSS, CSS3 and Bootstrap 4 from the scratch and make a professional template project",
      "objectives": [
        "We'll learn HTML",
        "We'll learn HTML5",
        "Create HTML structured pages",
        "We'll learn CSS",
        "Understand how to use CSS properties",
        "We'll learn CSS3",
        "We'll learn BOOTSTRAP 4 from scratch",
        "We'll Create professional bootstrap 4 template"
      ],
      "course_content": {
        "Introduction": [
          "What we will Learn in this course"
        ],
        "HTML Essentials for Beginners": [
          "Introduction To HTML",
          "What I Need?",
          "Global Structure",
          "The Elements",
          "Headings & Paragraphs Tags",
          "Lists",
          "Links",
          "Images",
          "Tables",
          "Forms"
        ],
        "Learn HTML 5": [
          "HTML5 Page Structure",
          "Migrate From Html4",
          "Progress and Meter",
          "HTML5 New Forms email",
          "HTML5 New Forms Tel",
          "HTML5 New Forms color",
          "HTML5 New forms range",
          "HTML5 New forms URL",
          "HTML5 New forms Number",
          "HTML5 New Forms Date Time",
          "HTML5 New Forms Search",
          "Audio",
          "video"
        ],
        "CSS Essentials for Beginners": [
          "Introduction",
          "Inline and Internal Styles and external stylesheet",
          "Selectors",
          "Class Selectors - Id Selectors",
          "Color",
          "Background Color",
          "Text Properties",
          "Text Properties 2",
          "Fonts",
          "Links",
          "Box Model",
          "Content And Padding",
          "Borders",
          "Margins",
          "Dimensions Width and Height",
          "Display Values",
          "Position",
          "Z-index",
          "Floats",
          "Overflow"
        ],
        "Learn CSS3": [
          "Flexbox",
          "Flexbox Content",
          "Flex items",
          "2D transform",
          "3D transform",
          "Transition"
        ],
        "Introduction to Bootstrap 4": [
          "Introduction",
          "The new elements in bootstrap 4",
          "What I need",
          "Grid system part 1",
          "Grid system part 2"
        ],
        "Project Using Bootstrap 4": [
          "Start the template",
          "Upperbar",
          "Navbar",
          "Carousel",
          "Features",
          "About us using jumbotron",
          "Our team",
          "Services",
          "Pricing table",
          "Statistics",
          "Our Skills",
          "Frequently Asked Questions",
          "Latest post using cards",
          "Contact Us",
          "Footer",
          "Copyright Section"
        ]
      },
      "requirements": [
        "computer mobile",
        "Basic knowledge working with text editor"
      ],
      "description": "You can start learning web development from scratch by learning HTML, HTML5, CSS, CSS3 and Bootstrap 4. You don't need a computer science degree,  all you need is a computer\nIn this course:\n- You will learn the basics of HTML and HTML5\n- You will learn the basics of CSS and CSS3\n- You will learn how to code amazing Bootstrap 4 template with HTML5 and CSS3\n- Choose the right Bootstrap element and include them on the Website",
      "target_audience": [
        "Beginners web development and web design"
      ]
    },
    {
      "title": "MERN Stack Movie Reviews and Recommendations App",
      "url": "https://www.udemy.com/course/mern-stack-movie-reviews-and-recommendations-app/",
      "bio": "Build a Full stack Movie Reviews and Recommendations App",
      "objectives": [
        "In this course, you will learn how to use a new front-end tool called VITE and compare it with the popular Create-React-App. You will also learn how to work wit",
        "We will cover how to create separate user interfaces for regular users and admins. To build these interfaces, we will be using a combination of Tailwind CSS for",
        "We will also cover JWT authentication and password hashing using BCrypt. To manage the state of our application, we will use Redux and Redux Toolkit.",
        "For admins, we will cover how to create artists and movies and manage other users in the portal. Only users with admin access will be able to perform CRUD opera",
        "Once a movie is created, it will be listed on the homepage for normal users. Only basic details such as average ratings and movie information will be displayed",
        "Whenever there is any activity related to reviews for a movie, the average rating for that movie will be updated in real-time.",
        "We will also cover how to implement user profile updates and password reset functionality.",
        "Finally, we will cover how to push our code to GitHub and host our application on RENDER IO. Throughout the course, we will provide 24/7 Q&A support to help you"
      ],
      "course_content": {
        "Project Demo": [
          "Project Demo"
        ],
        "Front End Setup": [
          "Introduction",
          "Tailwind Setup",
          "Antd Setup"
        ],
        "Authentication UI": [
          "Register Screen",
          "Login Screen"
        ],
        "Backend Setup": [
          "Node Setup",
          "Mongo Setup"
        ],
        "Authentication Model & APIS": [
          "User Model",
          "Register API",
          "Login API"
        ],
        "Authentication API's Integration": [
          "API Request Setup",
          "Register API Integration",
          "Login Integration",
          "Authentication Module Fixes"
        ],
        "Middlewares": [
          "Auth Middleware",
          "Protected Routes"
        ],
        "Layout and Redux": [
          "Layout",
          "Redux Setup",
          "Show and Hide Loaders"
        ],
        "Artist Model and APIS": [
          "Artist Model",
          "Artist APIS"
        ],
        "Artist UI": [
          "Admin UI Setup",
          "Artist Form",
          "Add Artist",
          "Show Artists",
          "Edit Artists",
          "Delete Artists"
        ]
      },
      "requirements": [
        "Javascript Knowledge",
        "React and Node Basics"
      ],
      "description": "Hello and welcome to the course on building a movie review and recommendation app with the MERN stack!\n\n\nIn this course, you will learn how to use a new front-end tool called VITE and compare it with the popular Create-React-App. You will also learn how to work with complex MongoDB queries, schemas, and models.\nWe will cover how to create separate user interfaces for regular users and admins. To build these interfaces, we will be using a combination of Tailwind CSS for styling purposes and AntD for building UI components.\nWe will also cover JWT authentication and password hashing using BCrypt. To manage the state of our application, we will use Redux and Redux Toolkit.\nFor admins, we will cover how to create artists and movies and manage other users in the portal. Only users with admin access will be able to perform CRUD operations on movies and artists.\nOnce a movie is created, it will be listed on the homepage for normal users. Only basic details such as average ratings and movie information will be displayed on the homepage. To view more information about a movie, users can navigate to the movie info page where they can view details such as cast and crew, posters, and trailers. Users can also submit reviews for a movie on the movie info page. They will be able to update or delete their reviews from their profile.\nWhenever there is any activity related to reviews for a movie, the average rating for that movie will be updated in real-time.\nWe will also cover how to implement user profile updates and password reset functionality.\nFinally, we will cover how to push our code to GitHub and host our application on RENDER IO. Throughout the course, we will provide 24/7 Q&A support to help you along the way. Even beginners will be able to understand and follow along with the course content.\nHere are some additional advantages of using the MERN stack:\nJavaScript is a single language for both frontend and backend: This makes it easier for developers to learn and use the stack, as they only need to learn one language.\nThe MERN stack is well-supported: There are a large number of resources available for developers who use the MERN stack, including documentation, tutorials, and community support.\nThe MERN stack is scalable: It can be used to build small, simple web applications as well as large, complex web applications.\nThe MERN stack is secure: It uses a number of security features, such as authentication and authorization, to protect web applications from attack.\nIf you are looking for a modern, scalable, and secure web development stack, then the MERN stack is a great option.",
      "target_audience": [
        "The intended learners for this course are developers who have some experience working with the MERN stack and want to expand their knowledge and skills. This course is also suitable for beginners who have a basic understanding of React, Node, and MongoDB and want to learn how to build a complex full-stack application.",
        "If you are looking to learn how to use the VITE front-end tool and compare it with Create-React-App, build separate user interfaces for regular users and admins, and implement JWT authentication and password hashing using BCrypt, then this course is for you.",
        "This course is also ideal for those who want to learn how to use Redux and Redux Toolkit for state management and build a movie review and recommendation app with complex MongoDB queries, schemas, and models. By the end of this course, you will have the skills and knowledge needed to create a fully functional application with user profile update, password reset functionality, and real-time updates for movie ratings."
      ]
    },
    {
      "title": "Create Websites and Hybrid APPs with Google Material Design",
      "url": "https://www.udemy.com/course/create-material-designed-websites-and-hybrid-apps/",
      "bio": "Building a Website and Cordova APP using Google Material Design Lite Framework",
      "objectives": [
        "Design Websites using Material Design Lite",
        "Design Cordova APPs using Material Design Lite"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Material Design?",
          "Difference Between Flat Design & Material Design",
          "What Is Material Design Lite?"
        ],
        "Project": [
          "Setting Up A Project",
          "Using Material Design Lite"
        ],
        "Layout": [
          "Adding a Header",
          "Adding Content",
          "Adding a Footer"
        ],
        "Header": [
          "Adding A Title & Rows in A Header",
          "Adding A Menu Button",
          "Adding A Menu List",
          "Adding A Tab Bar In A Header",
          "Adding A Tab Bar Panels",
          "Adding A Badge To A Tab Item",
          "Waterfall Header"
        ],
        "Drawer": [
          "Adding A Drawer Icon",
          "Adding a Drawer",
          "Adding Navigation Links",
          "Adding Logic To Navigation Links"
        ],
        "Footer": [
          "Difference Between Mega Footer & Mini Footer",
          "Adding A Mini Footer Sections",
          "Adding Copyright & Links",
          "Adding A Social Button"
        ],
        "About Me Page": [
          "Adding a Grid",
          "Adding a Card",
          "Adding a Card Title",
          "Adding a Card Image",
          "Adding a Card Text"
        ],
        "Work Page": [
          "Adding A Grid",
          "Adding Cards",
          "Adding Cards Titles",
          "Adding Cards Images",
          "Adding Cards Texts",
          "Adding Cards Actions"
        ],
        "Skills Page": [
          "Adding A Grid",
          "Adding A Data Table"
        ],
        "Contact Page": [
          "Adding A Grid",
          "Adding A Name Field",
          "Adding An Email Field",
          "Adding A Subject Field",
          "Adding A Message Field",
          "Adding A Send Button",
          "Adding A Tooltip",
          "Adding A Progress Bar"
        ]
      },
      "requirements": [
        "HTML",
        "CSS"
      ],
      "description": "Material Design is a design language introduced by Google to unify user experience across all their products on any platform. Material Design is one of those many other types of designing languages like Flat Design, Metro Design, Realism Design etc. Material Design does differ to other types in terms of colors, typography, shapes, patterns and layout. But Material Design adds something very new to design language i.e, Motion and Stacking.\nGoogle encourages developers to use Material Design to design their websites and apps because it let's you create a visual language that synthesizes classic principles of good design with the innovation.\nIn this course you will learn to design websites and hybrid apps using Material Design from scratch. We will create a portfolio site with multiple pages. Then we will learn designing hybrid apps using Material design by deploying the same site on Cordova container. Let's get started.",
      "target_audience": [
        "Anyone who is a Web Developer",
        "Anyone who is a Hybrid App Developer"
      ]
    },
    {
      "title": ".NET Fullstack: Web API, Blazor WebAssembly with MuBlazor",
      "url": "https://www.udemy.com/course/net-fullstack-blazor-webassembly/",
      "bio": "Comprehensive .NET Fullstack Development: From Web API to Blazor with MudBlazor",
      "objectives": [
        "Creating and configuring RESTful APIs with .NET",
        "Implementing CRUD operations",
        "Understanding ORM (Object-Relational Mapping) with Entity FrameworkCore",
        "Configuring Entity FrameworkCore in .NET applications",
        "Code-first approaches",
        "Performing EntityFrameworeCore migrations",
        "Understanding the Repository pattern",
        "Implementing Repository pattern with Entity FrameworkCore",
        "Managing data access logic efficiently",
        "Understanding the Unit of Work pattern",
        "Implementing Unit of Work to manage transactions",
        "Coordinating changes across multiple repositories",
        "Understanding CQRS architecture",
        "Implementing CQRS in .NET applications using MediatR",
        "Separating command and query responsibilities for scalability",
        "Response Wrapper pattern",
        "Building interactive web applications with Blazor WebAssembly",
        "Understanding the component-based architecture",
        "Data binding, event handling, and component communication",
        "Using MudBlazor for material design components in Blazor",
        "Customizing MudBlazor components for a modern UI/UX",
        "Integrating MudBlazor with Blazor applications",
        "Connecting Blazor front-end with .NET Web API back-end",
        "Managing data flow between client and api",
        "Utilizing Dependency Injection for better maintainability in both backend and frontend",
        "Building a fullstack application from scratch",
        "Implementing best practices and industry standards"
      ],
      "course_content": {
        "Demo": [
          "What will be covered",
          "What we will be developing"
        ],
        "Introduction": [
          "Solution and projects design",
          "Base Entity",
          "Bank Entities part 1",
          "Bank Entities part 2"
        ],
        "Repository and Unit Of Work Pattern": [
          "Read Repository definition",
          "Write Repository definition",
          "Unit of Work Definition",
          "Database Context - EfCore",
          "Db Config - Account",
          "Db Config - Holder and Transaction",
          "Read Repository Implementation",
          "Write Repository implementation",
          "Unit Of Work implementation",
          "Garbage Collection",
          "Dependency Injection Container",
          "Database Migration"
        ],
        "Complete Backend Application design": [
          "Response Wrapper",
          "Account Holder Request",
          "Create Account Holder Command",
          "Update Account Holder Command",
          "Delete Account Holder Command",
          "Get Account Holder By Id Query",
          "Get Account Holders Query",
          "Account Holder Controller - Add Endpoint",
          "Account Holder Controller - Complete",
          "DI - MediatR",
          "Controller Endpoint - Testing (Error)",
          "Error Fixing - Unit of Work",
          "Create Account Command part 1",
          "Create Account Command part 2",
          "Add Account endpoint",
          "Add Account endpoint - testing",
          "Enum as string in swagger",
          "Get Account By id query",
          "Get Account by Account Number query",
          "Get Accounts Query",
          "Account Gets endpoints",
          "Account Gets endpoints - Testing",
          "Transaction Request",
          "Transaction Command Part 1",
          "Transaction Command Part 2",
          "Transact endpoint",
          "Transact endpoint - Testing",
          "Get Account Transactions Query",
          "Transact endpoint and testing",
          "Sample Project - Backend Source Code"
        ],
        "Complete Fontend Design - Blazor WebAssembly with MudBlazor": [
          "Blazor Web Assembly Project",
          "Blazor Web Assembly Code structure",
          "Blazor clean up",
          "MainLayout - MudBlazor tags explained",
          "Account Holders Endpoints",
          "Accounts Endpoints",
          "Response Extensions",
          "IAccount Holder Service",
          "Account Holder Service",
          "Service to DI Container and BaseAPI Url",
          "Cors Policy",
          "First Blazor component",
          "Account Holder List Component - OnInitializedAsync Event",
          "Account Holder List Component - Testing",
          "Account Holder List Component - Button",
          "Add Account Holder Dialog - part 1",
          "Add Account Holder Dialog - part 2",
          "Account Holder Dialog Invocation - part 1",
          "Account Holder Dialog Invocation - part 2",
          "Account Holder Dialog Invocation with re-load",
          "Table Actions",
          "Update Account Holder Dialog",
          "Update Account Holder Dialog - Invocation",
          "Delete Confirmation Dialog - Reusable component",
          "Delete Confirmation - Invocation test",
          "Create Account Holder Validation - part 1",
          "Create Account Holder Validation - part 2",
          "Create Account Holder Validation - part 3 (testing)",
          "Create Account Holder Validation - part 4 (testing)",
          "Update Account Holder Validation - Assignment 01",
          "Account Holder List - Styling",
          "Add Account Holder Dialog - Styling",
          "Header Component",
          "Manage Account Holder's Accounts",
          "Manage Account Holder's Accounts - Testing",
          "Header Component - Event Callback",
          "Account Holder Details",
          "Account Holder Details Section - Testing",
          "IAccount Service - Complete",
          "Account List - part 1",
          "Get Account Holder's Account - Query",
          "Get Account Holder's Accounts - Service",
          "Account List component",
          "Account List Component - Usage and Test",
          "Account List Component - Error fixing and Completion",
          "Currency Formatting and alignment",
          "Add Account Dialog component",
          "Add Account Dialog component - Invocation",
          "Add Account Component - Testing",
          "Adorment inclusion",
          "Transact Component",
          "Transact Component - Testing",
          "Transact Component - Validations",
          "Transaction Validation - Testing",
          "Transaction History Component",
          "Transaction History Component - Testing",
          "Sample Project - FullStack Source Code"
        ]
      },
      "requirements": [
        "Basic knowledge of C# syntax and features",
        "Experience with object-oriented programming in C#",
        "Experience using Visual Studio or Visual Studio Code",
        "Knowledge of basic database concepts"
      ],
      "description": "Dive into the world of modern web development with our comprehensive course on fullstack .NET development. This course will guide you through the creation of robust and scalable web applications using a range of powerful tools and frameworks, including .NET Web API, Entity Framework, Blazor WebAssembly, MudBlazor, and essential design patterns like Repository, Unit of Work, and CQRS.\n\n\nStarting with the fundamentals of .NET Web API, you will learn how to build and secure RESTful services. From there, we'll delve into Entity Framework, teaching you how to efficiently manage database interactions using code-first approaches.\nYou'll master the Repository and Unit of Work patterns to ensure your applications are maintainable and scalable.\n\n\nNext, we will explore CQRS to help you design applications that are easy to scale and maintain using MediatR. You'll then transition to the front-end, where you'll build interactive and dynamic user interfaces using Blazor WebAssembly. With MudBlazor, you'll learn to create modern, responsive UI components effortlessly.\n\n\nThroughout the course, you'll integrate your front-end and back-end seamlessly, manage state efficiently, and ensure your applications are robust through thorough testing and debugging.\nYou'll learn how to use FluentValidation in Blazor client site to validate your form fields.\n\n\nBy the end of this course, you will have the skills and knowledge to build fullstack .NET applications that are not only functional but also efficient and visually appealing, preparing you for a successful career in modern web development.",
      "target_audience": [
        "Basic understanding of .NET Web APIs",
        "Basic Understanding of Web application functionality"
      ]
    },
    {
      "title": "Complete Front-End Web Development Course 2025",
      "url": "https://www.udemy.com/course/complete-front-end-web-development-course-2025/",
      "bio": "Master HTML, CSS, and JavaScript by building real-world projects like an Amazon Clone, a Villa Website and more projects",
      "objectives": [
        "Master HTML, CSS, and JavaScript to build modern, responsive websites from scratch.",
        "Develop real-world projects",
        "Understand and apply key front-end concepts",
        "Deploy websites using GitHub Pages, Netlify."
      ],
      "course_content": {
        "HTML": [
          "Introduction",
          "HTML",
          "Project 1",
          "Project 2",
          "Project 3",
          "Project 4"
        ],
        "CSS": [
          "CSS",
          "Project 1"
        ],
        "JavaScript": [
          "JavaScript",
          "Project 1"
        ],
        "Major Project": [
          "Villa",
          "Amazon Clone - Front-End"
        ]
      },
      "requirements": [
        "No prior coding experience is required – perfect for beginners!",
        "A willingness to learn and build multiple hands-on projects."
      ],
      "description": "Become a Front-End Web Developer in 2025!\n\n\nAre you ready to build stunning, responsive, and interactive websites? This course is designed to take you from a beginner to an advanced level in HTML, CSS, and JavaScript, covering everything you need to master front-end development. You’ll gain hands-on experience, build real-world projects, and develop the skills required to land a job in web development.\n\n\nWhat You'll Learn:\nHTML5 – Learn how to structure web pages using clean and semantic markup\nCSS3 – Style your websites beautifully with Flexbox, Grid, and modern techniques\nJavaScript – Make your websites interactive with advanced JavaScript concepts\nProject-Based Learning – Work on real-world projects to build your portfolio\nResponsive Design – Ensure your websites work seamlessly on all devices\n\n\nHands-on Projects:\nAmazon Clone – Build a fully functional e-commerce platform\nVilla Website – Design a professional real-estate website\n4 Mini Projects – Small but essential projects to enhance your skills\nPortfolio Website – Showcase your skills and projects to potential clients or employers\n\n\nWhy Take This Course?\nBeginner-friendly – No prior coding experience needed\nPractical, project-based approach – Learn by doing, not just theory\nCovers the latest web development trends – Stay ahead in the industry\nCareer-Focused – Helps you build a strong portfolio to land a job or freelance work\n\n\nBy the end of this course, you'll have the confidence to build stunning websites from scratch and kickstart your career as a Front-End Developer.",
      "target_audience": [
        "Beginners who want to start their web development journey from scratch.",
        "Students & Freelancers looking to build a portfolio and gain practical experience.",
        "Aspiring Front-End Developers aiming to master HTML, CSS, and JavaScript.",
        "Entrepreneurs & Business Owners who want to create and manage their websites."
      ]
    },
    {
      "title": "Learn to build an Auth0 App using Angular 2",
      "url": "https://www.udemy.com/course/learn-to-build-an-auth0-app-using-angular-2/",
      "bio": "Create to implement Auth0 using Angular 2 in a user based application",
      "objectives": [
        "Learn to build user based systems using Angular 2"
      ],
      "course_content": {
        "Course Intro": [
          "Introduction"
        ],
        "Basic Component Set Up": [
          "Components & Router Setup"
        ],
        "Creating the Service": [
          "Creating the Auth Service",
          "Login, Register & User Profile"
        ],
        "Adding Options": [
          "Auth0 Options",
          "Auth Guard Blocking",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of Angular is required for this course"
      ],
      "description": "Security is important, especially when it comes to sensitive data. From banks to even local news sites, you require creating accounts so that the company can provide you with access and keep your data secure.\nThis is why we have created this comprehensive project based course to help you design an authentication page that will allow your users to create an account and log in every time they want to access their profile.\nThis project will show you how to create a website using bootstrap, incorporate the Auth0 authentication component and create an account. You will also learn how add Auth Guard so that you can restrict access control to certain routes and also go through the Auth0 dashboard to learn how to manage your account.\nAll of this and so much more await you in this course. Let’s get started, already!",
      "target_audience": [
        "Student who want to create a User Login system in Angular 2"
      ]
    },
    {
      "title": "Learn Java with NetBeans!",
      "url": "https://www.udemy.com/course/learnjavawithnetbeans/",
      "bio": "Triple your skills: Learn Java + NetBeans + Basic Debugging",
      "objectives": [
        "Learn Java",
        "Learn Debugging",
        "Learn NetBeans",
        "Learn Programming Basics",
        "Learn Program Flow",
        "Learn About Classes",
        "Learn About Enumerations",
        "Learn About Functions",
        "Learn About Variables",
        "Learn About Error and Exception Handling",
        "Learn How To Read User Input",
        "Learn about Interfaces",
        "Learn About Generics",
        "Learn About Packages"
      ],
      "course_content": {
        "Introduction: Why Learn Java": [
          "Get the Java JDK and NetBeans IDE",
          "Introduction"
        ],
        "Learn The Basics Of Java In NetBeans": [
          "Change Template, Create and Run Your First Program",
          "Your First Program",
          "Understanding the Java Compilation Process and the Virtual Machine",
          "Java Compilation",
          "Blocks, Comments and Statements",
          "Blocks, Comments and Statements",
          "Define, Change and Print Variable Values",
          "Define, Change and Print Variable Values",
          "What's a Data Type",
          "What's a Data Type",
          "Define and Operate on Multiple Variables",
          "Define And Operate On Two Variables",
          "Value Type Variables",
          "Interacting With Users Through The Command Line",
          "Interacting With Users Through The Command Line",
          "Finding Variable Mix and Max Values",
          "Implicit and Explicit Conversions"
        ],
        "Controlling Program Flow": [
          "Coding simple if/else blocks",
          "Coding simple if/else blocks",
          "Coding while loops",
          "Coding while loops",
          "Coding if/else blocks with multiple options",
          "If/else blocks with multiple options",
          "Coding simple for loops to repeat blocks of code, NetBeans",
          "Truly Understand For Loops with Visual Studio",
          "For loops",
          "Do while loops",
          "Do while loops",
          "Coding switch blocks and break statements",
          "Switch blocks"
        ],
        "Operators": [
          "And operator",
          "And operator",
          "Or operator",
          "Or operator",
          "Ternary operator",
          "Ternary operator",
          "Logical negation operator",
          "Logical negation operator",
          "Operators that evaluate and assign in one",
          "Operators that evaluate and assign",
          "Two Types of Division",
          "Two Types Of Division",
          "Control order of operations",
          "Order of operations"
        ],
        "Arrays": [
          "Basic Arrays",
          "Basic Arrays",
          "Arrays and for loops",
          "Arrays and for loops",
          "Reference type variables",
          "Reference type variables",
          "Double arrays",
          "Double arrays"
        ],
        "Object Oriented Programming Basics": [
          "Create and Instantiate a Simple Class",
          "Create and instantiate a simple class",
          "Create a class with one function",
          "Create a class with one function",
          "Create a class with two functions and add formatting",
          "Create a class with two functions and add external functionality",
          "Difference between object and class functions",
          "Difference between object and class functions",
          "Overloading Methods",
          "Create a project with two separate classes",
          "Access modifers",
          "Access Modifers",
          "Access Modifiers Across Packages",
          "Member Variables or Fields and Constructors That Take Arguments",
          "Instance Variables, Two Object Example",
          "Class Level Fields",
          "Member Variables",
          "Inheritance Basics",
          "Inheritance Basics",
          "\"IS A\" Relationship in OOP",
          "Is A Relationships",
          "Enumerations",
          "Enumerations As Data TYpes",
          "Enumerations",
          "Interfaces",
          "Interfaces",
          "For Each Loops",
          "For Each Loops",
          "String Class",
          "String Class",
          "Polymorphism",
          "Interfaces, Example 2",
          "Call Stack",
          "Call Stacks",
          "Generics 1",
          "Generics Quiz",
          "Generics 2",
          "Generic Interfaces With One Class",
          "Generic Interfaces With Three Classes"
        ],
        "Handling Errors and Exceptions Gracefully": [
          "Using Try/Catch/Finally Blocks",
          "Try/Catch/Finally",
          "Throwing Exceptions"
        ],
        "Misc": [
          "Build and Use a Class Library"
        ],
        "Conclusion": [
          "Useful Books"
        ]
      },
      "requirements": [
        "Ability to download and install JDK and Netbeans as one bundle"
      ],
      "description": "Reasons to join today:\n1) This course uses NetBeans. This is a powerful integrated development environment designed especially for developing Java applications.\n2) This course uses a feature of NetBeans called \"Step Into\". This is by far the best way to truly learn programming because it allows you to observe code execution line to line. I promise you'll understand Java, and many generic programming concepts, as NEVER before.\n3) You get 8+ hours of content, and about 140 quiz questions\n4) The course is taught in a way very similar to the popular Microsoft C# course with Visual Studio 2013. That course has 1000+ students already enrolled.\n5) Many of the concepts covered in this course exist in other languages, such as JavaScript and C#, so you're learning something general that can be easily transferred to other languages.\n6) Java is a popular language with many jobs in the marketplace. These are usually jobs that pay very well.\n7) There is a color image of the code to accompany each lesson.\n8) Given the amount of content, number of quizzes, and color images to help you learn, this is BY FAR the best deal on this site. Join today.",
      "target_audience": [
        "Programming Novices"
      ]
    },
    {
      "title": "Twitter API JavaScript Node Exercise",
      "url": "https://www.udemy.com/course/api-javascript/",
      "bio": "Explore the Twitter Developer API connect from your local machine. Use AJAX JavaScript and Node to setup twitter search",
      "objectives": [
        "Navigate the twitter developer API",
        "Query to search Twitter for terms",
        "Setup a mini application to request content from twitter"
      ],
      "course_content": {
        "Introduction to Connecting to Twitter API": [
          "Course Twitter API introduction",
          "Course Development Environment",
          "JavaScript and Node Setup Local Server Nodejs NPM",
          "Explore how to Get Packages NPM",
          "Setup Twitter Developer Application and account",
          "Output Tweet Object as JSON",
          "Setup Index Frontend Code",
          "Output Tweet Data and use with JavaScript",
          "Style and look Nice CSS and frontend view",
          "Post a Tweet from index page",
          "Source Code Review.",
          "Course Resources"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Further Reading and Resources"
        ]
      },
      "requirements": [
        "JavaScript HTML and CSS core fundamentals",
        "Computer Access",
        "Desire to learn about AJAX and APIs"
      ],
      "description": "Perfect course for beginners to explore the MASSIVE twitter API\nThis course will teach you how to setup a local server, connect the Twitter API and return data to output into your web page.\nIts amazing how much information is available on Twitter, connecting the API is easy and can provide real world working experience with JSON AJAX and APIs.  Twitter has a HUGE amount of data within each Tweet Object, getting to know the Twitter API and working with it can provide students with first hand experience that can be used in any number of real world applications.  If you can navigate and output data from this API others are going to be a snap.\nStep by step training - includes everything you need to setup and develop a mini application.  You can then use this as a starting point to explore and extend your skills with the endless possibilities.\nNO WASTED TIME - Core focus is AJAX, JavaScript, JSON and node express server.\nYou will be amazed at how quickly and easily you can be setup to query the API and start retrieving data.  Great for beginners and developers of all skill levels.\nSource code is also included so you can copy and paste the exercise application.\nFriendly helpful guidance is always available in the Q&A section.  Do you have a question help is not far away.\nTaught by an instructor with many years of web development experience, ready to help you learn.\nWhat are you waiting for, nothing to lose take the first step and start having some fun with the Twitter API!!!!",
      "target_audience": [
        "Web developers",
        "Anyone who wants to connect to the Twitter API",
        "Beginners who want to practice with a huge API",
        "Anyone who wants to test Twitter API locally"
      ]
    },
    {
      "title": "REST API, Design, Test, Scale and Deploy",
      "url": "https://www.udemy.com/course/building-robust-apis/",
      "bio": "How to plan, design, build, deploy and scale REST APIs in AWS. (Spring Boot, Python, AWS, Swagger, Postman)",
      "objectives": [
        "Students will get the understanding on how to plan, design and develop RESTFul APIs. This will give them a framework to understand the approach of securing and scaling API.",
        "Learn how to use plan, design and deploy APIs on AWS Elastic Beanstalk, AWS Lambda, AWS API Gateway and AWS Dynamodb"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What are APIs?",
          "API Introduction Quiz"
        ],
        "Planning API": [
          "Planning API - Introduction",
          "API Planning Quiz",
          "Planning API - Designing and Documenting using Swagger",
          "Swagger Quiz"
        ],
        "Coding APIs (Spring Boot)": [
          "Coding APIs - Using Spring Boot - (Introduction)",
          "Coding APIs - Using Spring Boot - Quiz",
          "Coding APIs - Spring Boot - Using Eclipse to Code",
          "Coding APIs - Spring Boot - (Controller)",
          "Coding APIs - Spring Boot - Exception Handling"
        ],
        "Deploying API": [
          "Deploying API - Elastic Beanstalk in AWS",
          "API Management"
        ],
        "Coding API - Python": [
          "Installing Python",
          "Calculator Problem",
          "Coding API - Python - Flask",
          "Create Address Book API"
        ],
        "Securing the API": [
          "Securing the API - Spring JWT",
          "Securing the API - Python - Flask and JWT (Security)"
        ],
        "Coding API - Serverless": [
          "Coding API - Serverless - Introduction",
          "Coding API - Serverless (Lambda)",
          "Coding API - Serverless (Dynamodb)",
          "Coding API - Serverless (API Gateway)",
          "Coding API - Serverless - Post Deployment Options"
        ],
        "Finalize it all": [
          "End of Course Thanks and Recap!!!"
        ]
      },
      "requirements": [
        "This course requires some basic programming experience in Java/Python. To do the exercises one requires Eclipse, Java or Python runtime environment.",
        "Requires an Amazon Web Services account if you want to practice Lambda and Deployment to Elastic Bean Stalk."
      ],
      "description": "Learn how to create scalable REST APIs using Java, Spring, Python and AWS. This course has hands on example and sample code for you to learn Spring Boot, Python Flask and AWS Lambda. This course introduces you to the concepts of YAML documentation using Swagger, Postman for testing APIs. Using JWT adding security to your API. AWS API Gateway to leverage Amazon's infrastructure and Serverless Architecture to build secure and scalable, production grade APIs.",
      "target_audience": [
        "This course is for programmers who are thinking of learning about how to create restful APIs using Java/Python. This is also for learning the techniques to scale, secure and deploy RESTFul APIs using AWS."
      ]
    },
    {
      "title": "Google Maps JavaScript API for Developers",
      "url": "https://www.udemy.com/course/google-maps-for-developers/",
      "bio": "Hands-on course with real projects: markers, clustering, routing, place search, overlay using Google Maps Javascript API",
      "objectives": [
        "Use the Google Maps JavaScript API to embed maps in websites and apps",
        "Add and customize markers, info windows, and interactive overlays",
        "Build routing and directions with driving, walking, and transit modes",
        "Implement marker clustering for handling large sets of map data",
        "Integrate the Places API for location search and place details",
        "Work with geocoding and reverse geocoding to map addresses and coordinates",
        "Overlay real-time data (weather, GeoJSON, custom layers) on maps",
        "Create location-based web apps and dashboards with real-world projects"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML, CSS, and JavaScript",
        "Familiarity with a code editor like VS Code",
        "Some experience working with APIs or JavaScript libraries is helpful, but not required",
        "A Google account to create a Maps API key via Google Cloud Console"
      ],
      "description": "Learn the Google Maps JavaScript API step-by-step and build interactive, real-world maps for your websites and apps.\nNEW: Module 7 – Heatmaps for Density Visualization — visualize data intensity, use real-world datasets, and build interactive heatmap layers in Google Maps!\n\n\nIn this hands-on developer-focused course, you’ll integrate the Google Maps API into web projects, create location-based apps, and add powerful features like markers, clustering, routing, geocoding, and the Places API.\nBy the end of this course, you’ll confidently use the Google Maps JavaScript API to bring maps and location data into your web applications.\n\n\nWhat You’ll Learn:\nIn this practical, hands-on course, you'll learn how to:\nEmbed interactive Google Maps into your website\nAdd custom markers and overlays\nDisplay real-time weather data on the map using external APIs\nLoad GeoJSON files to visualize regions, zones, or country borders\nUse Marker Clustering for maps with many points\nAdd search functionality using the Places API\nDisplay detailed information like name, photos, and ratings for places\nPerform Nearby Searches (e.g., cafes, ATMs)\nShow directions and routes with multiple stops and travel modes\nConvert addresses to coordinates and vice versa using the Geocoding API\nVisualize data density using heatmaps to reveal patterns at a glance.\nLeverage real-time datasets like earthquake data with weighted heatmaps.\nYou’ll work with real-world features used in modern web apps, all with clean, easy-to-follow code.\n\n\nWhy take this course?\nWhether you’re a beginner in APIs or a web developer wanting to add maps to dashboards, this course gives you real-world projects you can showcase. You’ll gain the skills to build interactive maps and location-based apps that go beyond basics.\n\n\nWho This Course Is For\nThis course is designed for:\nWeb developers who want to integrate interactive maps into their apps\nFrontend developers building dashboards, delivery maps, or store locators\nBeginners exploring APIs and map-based features\nAnyone who wants to learn location-based development hands-on\n\n\nWhat You Should Know Before Taking This Course\nYou don’t need to be an expert — but you should know:\nThe basics of HTML, CSS, and JavaScript\nHow to edit simple web pages using a code editor (like VS Code)\nOptional: some familiarity with using APIs or JavaScript libraries\nThis is not a beginner coding course, but everything related to Google Maps is taught clearly, step-by-step.\n\n\nWhat’s Included in This Course\nThe course includes 6 structured modules that cover Google Maps API essentials and real-world use cases:\nModule 1: Core Map Concepts\nSet up your API key and initialize maps\nUnderstand map types, zoom, center, and controls\nWork with coordinates and map styling\nModule 2: Map Events & Overlays\nHandle map events like click, drag, and zoom\nAdd custom markers, icons, and InfoWindows\nUse overlays to show additional visual layers\nModule 3: Dynamic Maps & External Data\nDisplay real-time weather info from external APIs\nIntegrate GeoJSON to draw country borders or custom zones\nUse Marker Clustering to manage large sets of markers efficiently\nShow contextual data using overlays and InfoWindows\nModule 4: Places API Integration\nAdd Autocomplete for place search\nFetch and display place details, ratings, photos\nUse Nearby Search and filter by place type (e.g., cafes, hospitals)\nModule 5: Directions & Routing\nCalculate and show directions between points\nCustomize routes with travel modes and waypoints\nCreate interactive, draggable route maps for better UX\nModule 6: Geocoding & Reverse Geocoding\nConvert an address into latitude/longitude coordinates using the Geocoding API\nInterpret coordinates to get human-readable addresses (reverse geocoding)\nHandle geocoding results and errors gracefully in your app\nBatch geocode multiple locations for scalable data processing\nModule 7 – Heatmaps in Google Maps\nLearn to visualize density on Google Maps via heatmaps: real-data inputs, customization, interactivity, and combining with clustering.\n\n\nWhy Take This Course?\nReal-world focus: No fluff — just practical coding with useful features\nProject-ready code: Use what you learn directly in your apps\nLearn by doing: Build real features step-by-step, not just theory\nBy the end of this course, you’ll be confident in using the Google Maps JavaScript API to create modern, map-based web applications with features like GeoJSON, weather overlays, place search, clustering, and convert clear addresses into map coordinates and retrieve location names programmatically using the Geocoding API—ideal for address-driven features and bulk geocoding.\n\n\nLet’s Get Started!\nJoin now and start building interactive map features with Google Maps API — one project at a time.",
      "target_audience": [
        "Web developers who want to add interactive maps to their projects",
        "Frontend developers building dashboards, delivery zones, or local search tools",
        "Students and hobbyists curious about location-based apps",
        "Anyone who wants to learn Google Maps API through hands-on, real-world examples"
      ]
    },
    {
      "title": "HTML Certification- Practice Tests & Interview Questions",
      "url": "https://www.udemy.com/course/html-certification-practice-tests-interview-questions/",
      "bio": "Prepare for HTML Certification and Interviews with In-Depth Practice Questions.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the \"HTML Certification- Practice Tests & Interview Questions\" course on Udemy! This course is designed to help you enhance your HTML skills by providing you with a comprehensive set of practice tests and interview questions.\nStarting with beginner-level questions, you will gradually progress toward the expert level, gaining confidence with every test. You will get a chance to learn about the fundamentals of HTML, including elements, attributes, forms, tables, multimedia, and more.\nEach section of the course is carefully crafted to simulate real-world scenarios that you are likely to encounter in your web development career. You will learn how to approach complex tasks, break them down into manageable parts, and create efficient and optimized HTML code.\nThe course covers a range of topics that are essential for mastering HTML, including semantic HTML, responsive design principles, accessibility, and best practices for modern web development. You will also get tips on how to ace your job interview and impress your potential employer with your HTML skills.\nBy the end of this course, you will have a solid understanding of HTML and be fully equipped to take on any challenge that comes your way. So, what are you waiting for? Join us now and let's start sharpening your HTML skills with our beginner to expert-level practice tests and interview questions!",
      "target_audience": [
        "This course is tailored for anyone looking to enhance their proficiency in HTML, especially in preparation for job interviews or certification exams. Whether you're a beginner aspiring to enter web development, a seasoned developer aiming to refresh your skills, or an IT professional seeking to solidify your HTML expertise, this course offers a structured approach to deepen your understanding of HTML fundamentals and refine your problem-solving capabilities."
      ]
    },
    {
      "title": "Become PHP Facebook Developer: Password-Less Authentication",
      "url": "https://www.udemy.com/course/php-facebook-developer-password-less-authentication/",
      "bio": "Using Facebook Account Kit, learn how to become a Facebook developer using PHP programming",
      "objectives": [
        "Create Password-Less Authentication Web page using Facebook Account-kit",
        "Learn the basics of PHP programming",
        "Understand basics of HTML and CSS",
        "Working with live web server"
      ],
      "course_content": {
        "Introduction and Course Agenda": [
          "Course Promo",
          "Structure of the Course",
          "Course Agenda"
        ],
        "Fundamentals": [
          "Downloading Xampp",
          "Installing Xampp",
          "Downloading Bootsrap and Atom",
          "Primer HTML & CSS",
          "Your First PHP Program",
          "Understanding PHP Variables",
          "PHP Functions",
          "PHP Functions and Parameters",
          "PHP Objects",
          "PHP Operators",
          "PHP Arrays"
        ],
        "Facebook Account Kit PHP Development": [
          "Creating Facebook Developer Account",
          "Create a Facebook App",
          "Configuring Existing App - PakDelivery",
          "Creating Files on Secure Web Server"
        ],
        "Begin PHP Code": [
          "PHP Code - Begin Code Creation - Session Started",
          "Verify POST Data",
          "Get Access Tokens",
          "Creating HTML Code",
          "Working with STYLE Tag",
          "Main Page Text",
          "Creating Buttons for the Main Login Page",
          "PHP Code for Form Action",
          "PHP Code for Conditionals",
          "PHP Code to Show User Information",
          "PHP Code to Initialize Account Kit",
          "PHP Code for Login Callback",
          "PHP Submission Handler Code"
        ],
        "Troubleshooting, Bug Fixing, and Testing": [
          "Bug Fixing",
          "Testing the Web Page - Facebook Account Kit Password-Less Login"
        ],
        "Conclusion": [
          "Course Conclusion"
        ],
        "Bonus": [
          "Reference List of HTML Tags"
        ],
        "Complete Source Code": [
          "Source Code"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS, SQL, and PHP",
        "Secure Web Server",
        "Fast Internet Connection"
      ],
      "description": "Course Description\nAre you ready to deploy Password-Less Authentication on your secure website?\nWelcome to The Become PHP Facebook Developer: Password-Less Authentication course\n\nIt is a specialized course but with over 40 lessons, you are will not find a course similar to this.\nWe use pure PHP code to deploy Password-Less Authentication using Facebook App and Account-kit.\nIn this course, you'll learn the basics of web server, HTML and CSS including in fundamentals of PHP. This course is not about learning PHP programming or getting to know in-depth HTML and CSS, rather a specialized course on implementing Password-Less Authentication using PHP on your Web Site.\nMastering highly specialized course such as this will give you unique skills that you can use for yourself or your client especially if you are a freelance developer or programmer!\nCourse Structure:\nThis course is divided into two halves. If you are a beginner, you should watch and practice all lessons. If you are already a programmer or have fundamental skills in HTML, CSS, SQL, and PHP, then you should start this course from the second half.\nWe have designed the course especially for beginners and intermediate level students -no matter where you are in your web site development and coding journey—It is for sure that the future belongs to web developers who know how to code real world responsive websites built on Bootstrap framework. Completely hands-on tutorials with practice task is nearly guaranteed to get you a solid career with the industry. We also use state-of-the-art editors such as ATOM that are easy to learn and use.\n\n“This is such an awesome course. I loved every bit of it – Awesome learning experience!” Sami Shah.\n\nJoin thousands of other students and share valuable experience\nGet started today and join thousands of our happy students, many of whom have changed careers, created second incomes or added critical new skills to their tool kits. Our students have become successful programmers and developers managing and creating applications and are earning six figure salaries. Some are freelancing and earning even more with high scaled projects.\nOh, and did I mention you get FREE  hosting for one year – ClayDesk Webhosting Service?\nEnroll now in Become PHP Facebook Developer: Password-Less Authentication course today and revolutionize your learning.\n“Excellent course gives you everything you need to know for working with Docker technology, creating images and containers!”  Waheed Zia\nHappy learning\nTeam ClayDesk",
      "target_audience": [
        "Anyone who wants to learn how to code in PHP",
        "Beginner level programmers who want to use Facebook development",
        "Anyone who wants to deploy Password-Less Authentication on their secure Web Site"
      ]
    },
    {
      "title": "Pro NextJS & TypeScript – Ultimate Social Media App",
      "url": "https://www.udemy.com/course/nextjs-pro-react-query/",
      "bio": "Build a modern social media app with Next.js, React Query, Redux & Socket IO – real-time chat, posts, likes & more.",
      "objectives": [
        "Implement real-time features using WebSockets (Socket IO) for live chat, friends, and more.",
        "Create a powerful authentication system with JWT, and protected routes.",
        "Optimize performance with infinite scrolling, pagination, and query caching using React Query.",
        "Implement likes, comments, friends, conversations, and other key social features.",
        "Manage global and per-page state cleanly with Redux and React Query",
        "Optimize user experience with optimistic updates, and loading states"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Meet the project"
        ],
        "WebSockets Fundamental": [
          "HTTP vs Websocket Protocol",
          "Build a chat app with http protocol",
          "TCP Handshake",
          "HTTP Handshake",
          "Websocket Usecase"
        ],
        "WebSockets in Practice": [
          "Open a ws connection",
          "Send & receive data",
          "What's exactly a socket?",
          "Refactor chat app with websocket protocol"
        ],
        "Socket.IO": [
          "Why we need socket io library?",
          "Setup socket io",
          "Send & receive data",
          "More on send & receive data",
          "Chat App: Send message",
          "Chat App: Broadcasting",
          "Chat App: Room - part 1",
          "Chat App: Room - part 2",
          "Namespace",
          "Chat App: List users online"
        ],
        "Next.js Fundamental: Core Concept": [
          "Resource download",
          "Setup tutorial project",
          "Rule of create page",
          "More on router",
          "Shared layout",
          "Understand route group",
          "Navigate between component",
          "Dynamic route",
          "Client side rendering (CSR) vs Server side rendering (SSR)",
          "Static side generation (SSG)",
          "Incremental static regeneration (ISR)",
          "Understand server component",
          "Understand client component",
          "Hydrate process",
          "Understand client boundary issue",
          "More on client boundary",
          "Handle error",
          "Loading",
          "React suspense"
        ],
        "Next.js Fundamental: Server Action": [
          "IMPORTANT - Note about this section",
          "Server action",
          "Call API in server action",
          "Organize server action file",
          "useFormStatus hook",
          "useActionState hook",
          "Schema validation",
          "Zod",
          "Server action - summary",
          "Redirect"
        ],
        "Next.js Fundamental: Cache": [
          "Difference type of cache",
          "Full route cache",
          "Understand static page & dynamic page",
          "Understand time based validation",
          "Understand on demand validation",
          "Hey! I don't want to use cache",
          "Cache: Summarize"
        ],
        "Setup: Component UI Library, Redux Toolkit, Tanstack React Query, Axios": [
          "Setup project from scratch",
          "Setup component ui library (Material UI)",
          "Understand theme in Material UI",
          "Resource for next lecture",
          "Build a layout",
          "Organize layout",
          "Fix use client tag",
          "Why we need redux & react query?",
          "Setup redux toolkit",
          "Redux provider - wrapper",
          "Setup react query",
          "Setup axios"
        ],
        "Authentication with Json Web Token": [
          "Authentication layout",
          "Build a sign up page",
          "Validation with react hook form",
          "Resource for next lecture",
          "Setup backend",
          "Sign up API",
          "API testing tool",
          "Store user information in redux",
          "Sign in",
          "Setup toastify",
          "Protected page",
          "Persist redux data",
          "Unauthorize page",
          "Logout",
          "Attach token to api request",
          "Handle token expired",
          "Summarize"
        ],
        "Feature: Post": [
          "Post creation modal",
          "Resource for next lecture",
          "Modal UI",
          "Organize page",
          "Resource for next lecture",
          "Background color selector",
          "Handle preview image on modal",
          "Remove preview image",
          "Organize component",
          "Create post",
          "Create post with image",
          "Custom hook for react query",
          "Render posts",
          "Invalidate queries",
          "Resource for next lecture",
          "Format date",
          "Understand infinite scroll pagination",
          "Infinite scroll",
          "useInfiniteScroll hook",
          "Post card component",
          "Binding value to modal",
          "Update post",
          "Change update modal",
          "Delete post",
          "Setup socket context",
          "How to realtime for post create?",
          "Update cache manually technique - real time post create",
          "Real-time: upload media",
          "Real-time: Update post",
          "Fix update image bug",
          "Real-time: replace image",
          "Real-time: delete post"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript and React",
        "Know how to build basic applications with React and TypeScript",
        "Basic experience with NextJS is helpful",
        "Some exposure to React Query & Redux is a plus",
        "Eagerness to learn and build a real-time app!"
      ],
      "description": "Want to build a real-time social media app with modern tools like NextJS, React Query, and Socket IO? This course is for you.\nIn this hands-on project-based course, you’ll build the frontend of a full-featured social media platform from scratch. You’ll implement real-time features such as live chat, reactions, and friends using WebSockets (Socket IO). With React Query, you’ll master efficient data fetching, caching, pagination, and optimistic updates to provide a smooth user experience.\nWe’ll use NextJS App Router, Material UI, and TypeScript to build clean, scalable, and modern UI components. You’ll also implement core social media features like posts, likes, comments, and friends systems with a fully interactive UI.\nWhether you’re an intermediate developer looking to build your portfolio or a React developer aiming to learn advanced tools and patterns — this course will guide you step by step.\nAnother major focus is React Query—one of the most powerful and widely-used libraries for handling server state in modern React apps. You’ll learn how to effectively use it for fetching, caching, and mutating data, along with advanced techniques like:\nOptimistic updates for instant UI feedback\nInfinite scrolling for dynamic feed loading\nThis course isn’t just about building a project—it’s about understanding when, why, and how to use the right tools for building fast, scalable, and real-time frontend applications.\n\nNote: This course does not focus heavily on Server Components, as we are building a social media app—a type of application where data changes frequently and requires real-time updates. Instead, we prioritize the tools and techniques best suited for highly dynamic, interactive user experiences.",
      "target_audience": [
        "React or NextJS developers who want to level up with real-time features",
        "Frontend developers looking to master React Query for data fetching and caching",
        "Anyone curious about building chat apps, and live updates using Socket IO",
        "Intermediate learners ready to go beyond simple CRUD apps",
        "Students or professionals preparing for frontend job interviews and want a strong project in their portfolio"
      ]
    },
    {
      "title": "JavaScript for beginners : Practical project based course",
      "url": "https://www.udemy.com/course/javascript-beginners-projects-learn-by-creating/",
      "bio": "Build 11 Practical Hands-on JavaScript Beginner Projects Step by Step",
      "objectives": [
        "Write JavaScript Syntax",
        "Create and use Variables",
        "Understand and use data types",
        "Understand and use Operators",
        "Understand basic JavaScript event",
        "Use comments in your code",
        "Build a basic calculator",
        "Build a digital clock",
        "Build an image slider",
        "Build an analogue clock",
        "Build a loan calculator",
        "Build a todo list"
      ],
      "course_content": {
        "Introduction to JavaScript": [
          "Introduction",
          "Enhancing Your Learning Experience: Tips for Success in This Course",
          "What is JavaScript",
          "Introduction to JavaScript and its Role in Web Development",
          "Benefits of JavaScript in Web Development",
          "Installing text editors",
          "Installing sublimetext",
          "Javascript syntax",
          "JavaScript Variables",
          "Variable naming convention",
          "JavaScript Data Types",
          "JavaScript Operators",
          "Arithmetic operators",
          "Assignment operators",
          "Operator precedence",
          "JavaScript string operators",
          "JavaScript comparison operators",
          "JavaScript logical operators",
          "JavaScript typeof operators",
          "JavaScript Arrays",
          "JavaScript Conditional statements",
          "JavaScript functions",
          "JavaScript Comments",
          "JavaScript events",
          "Mixing data types",
          "What is Http"
        ],
        "Project 1 Basic Calculator": [
          "What we will create",
          "Design and sketch",
          "Creating directory and files",
          "Creating the calculator structure part1",
          "Creating the calculator structure part 2",
          "Adding functionality with JavaScript",
          "Styling the calculator"
        ],
        "Project 2 : Digital clock": [
          "What we will create",
          "Design and sketch",
          "Creating directory and files",
          "Creating the structure",
          "Adding functionality with JavaScript",
          "Styling the clock"
        ],
        "Project 3: Day of birth calculator": [
          "What we will create",
          "Project design and sketch",
          "Creating directory and files",
          "Creating content with HTML",
          "Adding JavaScript functionality part 1",
          "Adding JavaScript functionality part 2",
          "Adding JavaScript functionality part 3",
          "Adding CSS"
        ],
        "Project 4: Simple Addition App": [
          "What we will create",
          "Creating directory and files",
          "Creating app structure",
          "Styling the app",
          "Adding functionality with JavaScript"
        ],
        "Project 5 : Analogue Clock": [
          "What we will create",
          "Creating directory and files",
          "Creating the canvas object",
          "Creating the clock face",
          "Drawing the clock numbers",
          "Drawing the time and hand"
        ],
        "Project 6 : Image Slider": [
          "What we will create",
          "Creating directory and files",
          "Creating app structure",
          "Styling the app",
          "Adding functionality with JavaScript"
        ],
        "Project 7: Loan Calculator": [
          "What we will create",
          "Creating directory and files",
          "Adding functionality with JavaScript",
          "Styling the app"
        ],
        "Project 8: Quote of the day generator": [
          "What we will create",
          "Creating directory and HTML",
          "Adding CSS",
          "Adding functionality with JavaScript"
        ],
        "Project 9: Tip Calculator": [
          "What we will create",
          "Creating directory and files",
          "Creating the app structure",
          "Styling the app",
          "Adding functionality with JavaScript"
        ]
      },
      "requirements": [
        "You should be able to use a PC at beginner level.",
        "You should be able to use the internet at beginner level."
      ],
      "description": "JavaScript is the most popular scripting language in the world. It is responsible for the interactivity like games, online forms or surveys and other activities user’s can engage with on a website. Most dynamic if not all website contains some element of JavaScript. JavaScript programming language drives millions of interactive web sites, powers fast web servers and can even be used to build desktop and mobile applications.\nJavaScript has become integral to the Internet experience as developers build increased interaction and complexity into their applications. Search engines, ecommerce, content management systems, responsive design, social media and phone apps would not be possible without it.  Developers use JavaScript to build complex interactive websites and browser games, and to connect servers to websites and web applications.\nIn this course we will together create 11 beginner JavaScript projects from scratch. The projects are listed below:\n\n\nAnalogue Clock\nMortgage| Loan Calculator\nQuote of the day app\nDigital calculator\nDigital clock\nTip calculator\nWord count tool\nImage slider\nAddition game\nTodo List App\nDay of birth calculator\n\n\nThe best way to improve your JavaScript skills is by building projects.\n\n\nA good text editor makes writing code fun and productive.  I will be using  a mixture of text editors for this course  .  By the end of this course you will be confident to build more useful projects .",
      "target_audience": [
        "Absolute beginners to JavaScript",
        "Anyone who wants to learn how to code"
      ]
    },
    {
      "title": "Make a Hotel Booking Website using WordPress & Elementor",
      "url": "https://www.udemy.com/course/hotel-booking-website-wordpress-elementor/",
      "bio": "Do You want to create your own booking website with WordPress? I will show you how with NO EXPERIENCE!",
      "objectives": [
        "How to Make A Booking Website With WordPress",
        "How To Make A Wordpress Website",
        "How To Start Their Own Web Design Business",
        "Make Income From Home"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Themes & Plugins Install",
          "Header & Footer",
          "Home Page",
          "About, Services, Contact Page",
          "Booking Plugin & Conclusion"
        ]
      },
      "requirements": [
        "Just a computer and an internet connection"
      ],
      "description": "Learn to Create Premium Hotel Website with WordPress\n- Creating a strong brand identity is one of the important things in the hotel industry as it can help with booking sales and revenue. We know that people will recognize the hotel's brand immediately after hearing about that brand more than 3 times.\n- Increase direct sales is one of the challenging parts for hotels nowadays. Hence, having your own hotel website could be another reason why a hotel website is so much important.\n- With the hotel website, the hotel able to upsell potential guests with attractive packages including tickets, tours, and activities.\n- Through a hotel website, the hotel can provide more attractive offers and benefits,\n\n\nThis course is designed for any kind of hotel business it is perfect for all kind of hotel, resort, chalet, holiday Business and much more like :\nHotel\nHostel\nMotel\nMountain and Lake chalet\nLuxury Apartment\nPrivate Accommodation\nBed and Breakfast ( b&b )\nBooking Online Rooms\nReservation Online System\nResort\nVacation Rooms\nRooms Rental\nHoliday Structures\nTravel Apartments\nBeach Houses\nVacation Rentals\nCabins\nCottages\nAlso, you will also be able to add marketing automations to get more sales faster and create your website app without any coding for both android and ios apps\nTime flies and now technology is rapidly evolving. It is something that is incomprehensible if there is a hotel that thinks they can operate without having a hotel website. Surely they can, but with a hotel website, they can do so much more in getting more sales and revenue.\nEnroll Now",
      "target_audience": [
        "Anyone who wants to learn how to make a WordPress website with no experience",
        "Anyone who wants to make a website the easiest way"
      ]
    },
    {
      "title": "Become a Web Developer:‍ HTML / CSS /JavaScript /Node / etc",
      "url": "https://www.udemy.com/course/become-a-web-developer-html-css-javascript-node-etc/",
      "bio": "Build a Chat App with : (Node.js/Express.js/Socket.io/MongoDB) & Build Website and Web Apps with: HTML/CSS/JavaScript",
      "objectives": [
        "The basics of web development and how the internet works.",
        "How to write well-structured HTML documents.",
        "The use of different HTML tags and elements to structure a webpage.",
        "The fundamentals of CSS for styling web pages.",
        "How to use CSS selectors, properties, and values.",
        "The concept of the CSS box model.",
        "Basics of JavaScript programming language.",
        "Fundamental concepts in JavaScript like variables, data types, arrays, loops, and functions.",
        "How to handle events in JavaScript.",
        "How to build a basic website using HTML, CSS, and JavaScript.",
        "Fundamentals of MongoDB, a NoSQL database.",
        "How to perform CRUD operations in MongoDB.",
        "Basics of Nodejs and its event-driven architecture.",
        "Fundamentals of Expressjs, a popular framework for Nodejs.",
        "How to create a basic server using Node and Express",
        "Understanding and using routes in Expressjs",
        "How to connect MongoDB with Nodejs using Mongoose.",
        "Real-time communication using Socket.o.",
        "Build a real-time chat application using Nodejs, Expressjs, Socketio, and MongoDB.",
        "How to deploy a full-stack web application."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Web Development",
          "Web Development Tools",
          "Note on text editors",
          "Installing Visual Studio Code",
          "Installing Web Browsers",
          "Http vs Https",
          "How the internet works"
        ],
        "Build a Frontend Web Application with : HTML/CSS/JavaScript": [
          "Planning your web application project",
          "Designing your web application project",
          "Choosing assets for your project",
          "Creating project directory",
          "HTML",
          "Anatomy of an HTML Element",
          "Basic structure of an HTML Element",
          "Creating a basic structure of an HTML Element - Part 1",
          "Creating a basic structure of an HTML Element - Part 2",
          "Creating a basic structure of an HTML Element - Part 3",
          "HTML Attributes",
          "Marking Up Text",
          "Creating Links",
          "HTML Comments",
          "Viewing HTML Source Code",
          "What is CSS",
          "Ways to apply CSS",
          "Styling multiple properties",
          "Styling multiple elements",
          "Modifying CSS",
          "CSS basic selectors",
          "CSS Comments",
          "CSS Box Model",
          "CSS Margin and Padding Property",
          "Changing background color",
          "CSS border property",
          "CSS Positioning",
          "CSS display property",
          "CSS font property",
          "Using google fonts",
          "What is JavaScript",
          "Where to place JavaScript",
          "JavaScript Variables",
          "Variable Naming Convention",
          "JavaScript Arrays",
          "Data Types",
          "Mixing Data Types",
          "JavaScript Operators",
          "Arithmetic Operators",
          "Operator Precedence",
          "Comparison Operators",
          "Logical Operators",
          "JavaScript Conditional statements",
          "JavaScript Functions",
          "JavaScript Comments",
          "Linting Tools",
          "JavaScript Events",
          "Changing images on a webpage",
          "Fixing js lint warning - Part 1",
          "Fixing js lint warning - Part 2",
          "Adding welcome message to web page",
          "Project Code"
        ],
        "Build a web Calculator App using: HTML/CSS/JavaScript": [
          "What we will create",
          "Creating project directory",
          "Building the calculator structure with HTML",
          "Styling the calculator with CSS",
          "Adding functionality with JavaScript",
          "Project Code"
        ],
        "Build a Todo List App using: HTML/CSS/JavaScript": [
          "What we will create",
          "Creating project directory",
          "Creating the app structure with HTML",
          "Styling the app with CSS",
          "Adding functionality with JavaScript - Part 1",
          "Adding functionality with JavaScript - Part 2",
          "Project Code"
        ],
        "Build an Interactive Quiz using: HTML/CSS/JavaScript": [
          "What we will create",
          "Creating project directory",
          "Creating app structure with HTML",
          "Styling the app with CSS",
          "Adding functionality with JavaScript - Part 1",
          "Adding functionality with JavaScript - Part 2",
          "Project Code"
        ],
        "Build a count down timer using: HTML/CSS/JavaScript": [
          "What we will create",
          "Creating project directory",
          "Creating app structure with HTML",
          "Styling the app with CSS",
          "Adding functionality with JavaScript",
          "Project Code"
        ],
        "Introduction to MongoDB": [
          "What is MongoDB",
          "Installing MongoDB on Windows",
          "Installing MongoDB on Macs",
          "Modifying environmental variables",
          "Creating a storage directory for MongoDB",
          "Starting and stopping MongoDB",
          "MongoDB Data Types",
          "MongoDB CRUD Operations",
          "Creating a database",
          "Inserting documents in MongoDB",
          "Querying a document in MongoDB",
          "Updating a document",
          "Deleting a document",
          "Dropping a database"
        ],
        "Introduction to Node.js": [
          "What is Node.js",
          "Installing Node.js",
          "What is NPM",
          "Some NPM Commands",
          "Creating a basic Node.js application",
          "Components of a Node.js application",
          "Modules and packages",
          "Installing and using third-party packages"
        ],
        "Introduction to Express.js": [
          "What is Express.js",
          "Installing Express.js",
          "Creating a basic Express.js application",
          "Express application generator",
          "Creating an app with Express generator",
          "What is package.json file",
          "Understanding apps.js",
          "Editing dependencies",
          "Using template engines",
          "How to start Node.js server",
          "How to stop Node.js server",
          "What is Routing",
          "How routing works",
          "Cloning routing functions"
        ],
        "Building a Chat App with :(Node.js/Express.js/Socket.io/MongoDB)": [
          "What we will create",
          "Creating project folder and package json file",
          "Installing Express.js",
          "Installing Postman",
          "Serving static content with Express",
          "Using callback function",
          "Using arrow functions",
          "What is Bootstrap",
          "Creating user interface - Part 1",
          "Creating user interface - Part 2",
          "What is jQuery",
          "Adding jQuery",
          "Creating a get message service - part 1",
          "Creating a get message service - Part 2",
          "Creating a post messages service - Part 1",
          "Creating a post messages service - Part 2",
          "Sending post request",
          "What is Socket.io",
          "Installing Socket.io",
          "Setting Up Socket.io",
          "Emitting messages to client",
          "Note on MongoDB Setup",
          "MongoDB Cloud Setup",
          "MongoDB Cloud Setup - Updated",
          "Creating a new database",
          "Creating a database user",
          "Installing Mongoose",
          "Connecting to mlab",
          "Connecting to mlab Updated",
          "Saving data to MongoDB",
          "Replacing Message Array"
        ]
      },
      "requirements": [
        "The prerequisites are minimal as the course is designed to accommodate beginners who are just getting started in the field of web development. However, there are a few recommendations to help you get the most out of this course:",
        "Basic Computer Skills: You should be comfortable with basic computer skills such as creating folders, downloading and installing software, navigating the file system, etc.",
        "Understanding of How to Use a Web Browser: You should know how to navigate the web, download files, and understand basic internet concepts.",
        "Basic Understanding of Mathematics: You don't need advanced math, but having a basic understanding of concepts like addition, subtraction, multiplication, and division is helpful when learning programming.",
        "Access to a Computer: You will need access to a computer (Windows, Mac, or Linux) to install required software and practice coding. The course involves a lot of hands-on learning.",
        "Internet Connection: As the course is delivered online, you will need a stable internet connection to access the course material, download necessary software and resources, and do research when necessary.",
        "Text Editor: You'll need a text editor to write your code. Some popular options include Visual Studio Code, Atom, and Sublime Text. Many of these are free to download and use.",
        "Time and Dedication: Learning web development is a significant time investment. You should be prepared to dedicate time to watch the lectures, complete assignments, and practice coding on your own.",
        "No Previous Coding Experience Required: This course assumes no previous coding or web development experience. It will start with the very basics and gradually move towards more complex concepts.",
        "Curiosity and Willingness to Learn: Web development is a vast and ever-evolving field. Having a strong curiosity and a willingness to learn and explore new concepts will help you succeed in this course and in the field of web development."
      ],
      "description": "Welcome to \"Become a Web Developer\" – a comprehensive course designed to guide you through the process of creating interactive websites and web applications using a suite of modern technologies including HTML, CSS, JavaScript, Nodejs, Expressjs, Socketio, and MongoDB.\nThis course is designed for learners who are passionate about diving into the world of web development, regardless of previous experience. We'll start with the basics and gradually move towards more complex concepts and projects.\nIn the first few sections, we'll lay the groundwork by exploring what web development is, and how to write and understand code using HTML, CSS, and JavaScript - the three fundamental building blocks of the web. We'll build a sample website and engage in several beginner-friendly web projects like a calculator, quiz app, countdown timer, and todo app .These projects will allow you to consolidate your learning and see how HTML, CSS, and JavaScript work together to build functional, interactive websites.\nNext, we'll delve into back-end development with a focus on Node.js and Express.js. You'll understand the concepts behind server-side programming, creating RESTful APIs, and managing data with MongoDB, a popular NoSQL database.\nThe course reaches its climax with an exciting project where you'll apply everything you've learned. You'll build a real-time chat application using Nodejs, Expressjs, Socketio, and MongoDB. This project will help you understand how all these technologies interact in a full-stack JavaScript environment.\nBy the end of this course, you'll have a robust understanding of web development and a portfolio of projects to showcase your skills. You'll be equipped to build interactive websites and applications, setting you firmly on your path to becoming a proficient web developer. Whether you're looking to start a career in web development, or you're a professional looking to expand your skill set, this course will provide a solid foundation to help you reach your goals.\nEnroll now and start your web development journey!",
      "target_audience": [
        "Beginners to Programming: Individuals with no prior programming experience who are looking to dive into web development from scratch.",
        "Front-End Developers: Developers who are proficient in front-end technologies like HTML, CSS, and JavaScript, and are looking to expand their knowledge into back-end development with Nodejs, Expressjs, and MongoDB.",
        "Career Changers: Individuals considering a career change into the tech industry. Web development is a sought-after skill and this course can provide a comprehensive foundation.",
        "Students and Lifelong Learners: Students studying computer science or related fields, or lifelong learners interested in understanding the inner workings of the web.",
        "Students and Lifelong Learners: Students studying computer science or related fields, or lifelong learners interested in understanding the inner workings of the web.",
        "Designers: Web or UI/UX designers looking to enhance their skill set by understanding how to bring their designs to life through coding.",
        "Non-Technical Roles: People in non-technical roles such as project managers, quality analysts, etc. who work with technical teams and want to better understand web development in order to improve cross-functional communication and collaboration."
      ]
    },
    {
      "title": "Creating a Complete Auth System with PHP, Jquery, Mysql",
      "url": "https://www.udemy.com/course/creating-a-complete-auth-system-with-php-jquery-mysql/",
      "bio": "Are you ready to master the art of creating a robust and secure authentication system? Look no further!",
      "objectives": [
        "Learn about how to make auth system in php",
        "Understand best practice to use for storing data",
        "Working with MySql as relational database management system",
        "Learn to use jquery which is great libarary for creating dynamic ui"
      ],
      "course_content": {
        "Making Auth system from start to finish using PHP, MySql, Jquery, Html, CSS, JS": [
          "Initial Setup to our project",
          "Writing logic for sending OTP through mail in PHP using phpmailer",
          "Making database structure and making sending mail dynamic by ajax call",
          "Storing data in database Learning about mysql and validating OTP from email",
          "Displaying errors if email exists in database downloading extension from vscode",
          "Sending and checking user in database",
          "Checking if otp is matching or not"
        ]
      },
      "requirements": [
        "Basics knowledge of PHP, Html, CSS and Javascript is required"
      ],
      "description": "Are you ready to master the art of creating a robust and secure authentication system? Look no further! Join this comprehensive course and become an AuthMaster.\nIn \"AuthMaster: Creating a Complete Authentication System with PHP, MySQL, and jQuery,\" you will learn how to build a full-fledged authentication system from scratch using the power trio of PHP, MySQL, and jQuery. Whether you're a beginner or an experienced developer looking to enhance your skills, this course will take you on an exciting journey of learning and implementation.\nThroughout this hands-on course, you'll gain practical experience in designing and developing secure user authentication features. From user registration and login functionality to password reset and account activation processes, you'll cover it all. Explore techniques to validate user inputs, securely store passwords, prevent common security vulnerabilities, and more.\nWhat sets this course apart is its emphasis on real-world application. By working on a project-based approach, you'll not only understand the core concepts of authentication but also learn how to implement them in practical scenarios. Create dynamic user interfaces with jQuery, communicate with the server using AJAX, and leverage the power of MySQL to store and retrieve user data efficiently.\nKey features of \"AuthMaster: Creating a Complete Authentication System with PHP, MySQL, and jQuery\" include:\nBuilding a secure user registration system with input validation and data sanitization.\nImplementing a login mechanism with password encryption and secure session management.\nExploring various authentication methods, including email verification and social media logins.\nDesigning a robust password reset feature to ensure user account recovery.\nEnhancing security measures with techniques like CSRF protection and password strength validation.\nImplementing account activation and email notifications for a seamless user experience.\nCreating an intuitive user interface with jQuery for enhanced interactivity and user experience.\nUtilizing MySQL to store user data, manage user sessions, and perform database operations efficiently.\nBy the end of this course, you'll have the skills and confidence to create a complete authentication system that can be integrated into any web application. You'll receive a certificate of completion, showcasing your expertise as an AuthMaster.\nEnroll now and embark on a journey to become a skilled developer who can create robust and secure authentication systems. Join us today and unlock the secrets of building a complete authentication system with PHP, MySQL, and jQuery.\nLet's dive in and become an AuthMaster together!",
      "target_audience": [
        "Aspiring PHP Developer looking for a project to work on",
        "People who are new in web developement",
        "Developer who don't have any or have some experience working with php",
        "People who want to create small project"
      ]
    },
    {
      "title": "Quick Start to gRPC with Python: A 2-Hour Guide",
      "url": "https://www.udemy.com/course/quick-start-to-grpc-with-python-a-2-hour-guide/",
      "bio": "Getting Started with gRPC in Python",
      "objectives": [
        "Students will learn about the concept of gRPC.",
        "will learn about various gRPC communication techniques",
        "will learn about protocol buffers",
        "will learn about gRPC Python syntax."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Concepts and Features of gRPC",
          "Components of gRPC",
          "Setting Up a Python Environment for gRPC"
        ],
        "Basic Syntax of gRPC": [
          "Protocol Buffers",
          "Various Communication Patterns in gRPC",
          "Let's learn about unary streaming",
          "server_streaming and client_streaming",
          "bidirectional streaming"
        ],
        "Various Techniques Used in Communication": [
          "Request Cancellation Techniques",
          "Data Compression Techniques for Efficiency",
          "Interceptors",
          "Error Handling",
          "Checking Server Status",
          "Previewing Information, Reflection",
          "Wait and Keep Alive",
          "Retry Techniques",
          "Utilizing Metadata"
        ]
      },
      "requirements": [
        "basic Python syntax"
      ],
      "description": "Why Take This Course?\nHands-On Learning: This course emphasizes practical, hands-on learning. You'll build real-world gRPC applications in Python.\nFocused and Efficient: We focus on the essential aspects of gRPC, ensuring you get the knowledge you need without unnecessary complexity.\nNo Prior gRPC Experience Required: Designed for beginners with basic Python knowledge, this course requires no prior experience with gRPC.\nKey Learning Points:\nIntroduction to gRPC: Understand what gRPC is and why it is important.\nProtobuf Basics: Learn about Protocol Buffers (protobuf), the language-agnostic binary serialization format used by gRPC.\ngRPC Architecture: Get to know the architecture of gRPC, including clients, servers, and stubs.\nCreating gRPC Services: Step-by-step guide to creating your own gRPC services in Python.\ngRPC Communication Patterns: Explore different communication patterns such as unary, server streaming, client streaming, and bidirectional streaming.\nError Handling and Deadlines: Learn how to handle errors and set deadlines for gRPC calls.\nSecurity in gRPC: Implement security measures such as SSL/TLS encryption for your gRPC services.\n\n\nBy the end of this course, you'll have a solid understanding of gRPC and the skills to implement efficient, scalable, and secure gRPC services in Python.\nJoin us and unlock the potential of gRPC to build robust and high-performance microservices!",
      "target_audience": [
        "A student who wants to learn gRPC with Python."
      ]
    },
    {
      "title": "Real-time Communication using Socket.IO 3.x and Angular 11.x",
      "url": "https://www.udemy.com/course/rtc-socket-io-ng/",
      "bio": "Learn how to use Socket.IO 3.x library for RTC with Angular 11.x Client applications",
      "objectives": [
        "Basics of Socket IO library",
        "Understand Socket IO Server and Client APIs",
        "Understand the problems which you will face while building RTC applications and solutions for each problem",
        "Database communication using Socket IO",
        "How to broadcast messages when data is updated out of Socket IO applications",
        "Learning Server and Client side Socket IO APIs by build number of applications using Express and Angular 9.x frameworks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who should take this course?",
          "Tools and Software required for this course",
          "Introduction to Socket.IO",
          "Let's understand Socket.IO API",
          "Simple example of Socket.IO - Theory",
          "Demo - Simple example of Socket.IO",
          "Creating client application using Angular 9.x - Theory",
          "Demo - Creating client application using Angular 9.x",
          "Demo - Writing service logic",
          "Demo - Writing component logic",
          "Do you see a problem?",
          "Introduction to Namespace and Room",
          "Modify Socket.IO server application",
          "Modify Socket.IO client application",
          "Final test of Fake stock update application",
          "Migrating Socket.IO 2.x to 3.x - Part - I",
          "Demo - Default Namespace Connection in Socket.IO - 2x",
          "Migrating Socket.IO 2.x to 3.x - Part - II",
          "Demo - Migrating Simple example of Socket.IO Server",
          "Demo - Migrating Simple example of Socket.IO Client",
          "Demo - Default Namespace Connection in Socket.IO - 3x",
          "Demo - Default Namespace Connection client app in Socket.IO - 3x"
        ],
        "Let's order Pizza": [
          "Application - we will develop",
          "Introduction to Mongo DB",
          "Writing Mongo DB queries",
          "Creating Socket.IO application using Express JS and Socket.IO - Part I",
          "Creating Socket.IO application using Express JS and Socket.IO - Part II",
          "Creating pizza order application using Angular 9.x",
          "Writing service logic",
          "Writing component logic - Part - I",
          "Writing component logic - Part - II",
          "Final output of the application",
          "What problem we may face?",
          "Migrating Pizza Order Service from Socket.IO 2.x to Socket.IO 3.x",
          "Migrating Pizza Order UI from Socket.IO 2.x to Socket.IO 3.x"
        ],
        "Developing Technology Voting Real-time Dashboard": [
          "How to solve the problem?",
          "Writing Mongo DB queries",
          "Creating REST API using Node JS and Express JS framework",
          "Writing data access logic in REST API",
          "Consuming DAL in REST API and defining route",
          "Creating end user Voting application using Angular 9.x",
          "Add Voting module, service,components and model classes",
          "Writing service logic",
          "Writing component logic",
          "Let's look at SPA code",
          "Configure route and Navigation link",
          "Creating Socket.IO application using Express JS and Socket.IO - Part I",
          "Creating Socket.IO application using Express JS and Socket.IO - Part II",
          "Creating in-house Dashboard application using Angular 9.x",
          "Add Dashboard module, Service and Dashboard Component",
          "Writing service logic",
          "Let's look at SPA code",
          "Introduction to Highcharts library",
          "Visualizing Technology votes using Highcharts chart",
          "Configure route and Navigation link",
          "Final Test of the solution with KPI Chart",
          "Migration Challenge"
        ],
        "Course Conclusion": [
          "Course Conclusion"
        ]
      },
      "requirements": [
        "Good knowledge of Angular 7/8.x and should have experience of building REST APIs using Express framework",
        "Basic understanding of Bootstrap framework [Optional]"
      ],
      "description": "Have you ever thought of building real-time communication applications for your clients or in your organization? Are you tired of writing the same old long polling logic to get the updates from your databases? Do you want to share live updates of the data across two or more than two applications? Do you work with live stocks or tweets kind of applications?\nAs you know our clients or customers would like to get quick and live updates of the information like stocks, currencies, the sales data, tweets etc. Or they want to build live collaborative applications for the customers/in-house applications. This is where we can think of Real-time Communication and we can achieve that using one of the most popular library Socket.IO. Easy to learn and easy to implement.\nThis course is a complete hands-on course where we will take few real-time scenarios and develop several applications step-by-step. At the end of this course, you will have better understanding of Socket.IO library and you will be able use this library to build RTC applications.\nUpdate - This course has been updated to Socket.IO 3.x and Angular 11.x\nAll the examples of this course has been updated from Socket.IO 2.x to Socket.IO 3.x. Also, all the client applications have been migrated from Angular 9.x to Angular 11.x.",
      "target_audience": [
        "Students who want to learn Real-time communication using Socket IO library to enable various scenarios in their applications",
        "Students who want to understand why, where and how to use Socket IO library using various examples"
      ]
    },
    {
      "title": "Build Web Applications with JavaScript step by step",
      "url": "https://www.udemy.com/course/build-web-applications-with-javascript-step-by-step/",
      "bio": "Build and Publish Real World Appliations",
      "objectives": [
        "Learn JavaScript Programming Fundamentals",
        "Build TodoList Web App",
        "Build a Calculator web app",
        "Build a Countdown timer web app",
        "Build a Loan Calculator web app",
        "Build an Analogue Clock Web app",
        "Build a Quiz Web app",
        "Build a word Counting web app",
        "Publish your web apps to the internet"
      ],
      "course_content": {
        "JavaScript Fundamentals": [
          "Introduction",
          "What is JavaScript",
          "The developer Console",
          "The Syntax",
          "Variables",
          "Variable Naming Convention",
          "Statements",
          "Executing a program",
          "Data Types",
          "Mixing Data Types",
          "Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Operator Precedence",
          "String Operators",
          "Comparison Operators",
          "Logical Operators",
          "Arrays",
          "Conditional statements",
          "Functions"
        ],
        "Text editors": [
          "What are Text editors",
          "Please Read",
          "Sublime Text",
          "Atom",
          "Visual Studio Code"
        ],
        "Build a Todo List App": [
          "What we will create",
          "Creating directory and files",
          "Creating the app structure",
          "Styling the app",
          "Adding functionality: Part 1",
          "Adding functionality: Part 2",
          "Project Code"
        ],
        "Build a Calculator": [
          "What we will create",
          "Creating directory and files",
          "Creating app structure",
          "Styling the app",
          "Add functionality",
          "Project Code"
        ],
        "Build a Countdown Timer": [
          "What we will create",
          "Creating directory and files",
          "Creating the app structure",
          "Adding Styling",
          "Adding Functionality",
          "Project Code"
        ],
        "Build an Analogue Clock": [
          "What we will create",
          "Create directory and files",
          "Creating a canvas Object",
          "Creating the clock face",
          "Drawing the clock numbers",
          "Drawing clock time and hand",
          "Project Code"
        ],
        "Build a word count app": [
          "What we will create",
          "Creating a directory and files",
          "Creating app structure",
          "Styling the app",
          "Adding Functionality",
          "Project Code"
        ],
        "Build a quiz app": [
          "What we will create",
          "Creating directory and files",
          "Creating app structure",
          "Styling the app",
          "Adding functionality: Part 1",
          "Adding functionality: Part 2",
          "Project Code"
        ],
        "Build a Loan Calculator": [
          "What we will create",
          "Creating directory and files",
          "Add functionality",
          "Styling the app",
          "Project Code"
        ],
        "Publishing the apps to the public": [
          "Hosting Platforms",
          "What is Git",
          "Installing Git",
          "Git Setup",
          "What is Github",
          "Create a GitHub acount",
          "Creating personal access tokens",
          "Initializing empty git repository",
          "Add files to local repository",
          "Adding files to remote repository",
          "Publishing your app"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML is advised",
        "Basic knowledge of CSS is advised"
      ],
      "description": "JavaScript is a scripting or programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc.\nHTML is the markup language that we use to structure and give meaning to our web content, for example defining paragraphs, headings, and data tables, or embedding images and videos in the page.\nCSS is a language of style rules that we use to apply styling to our HTML content, for example setting background colors and fonts, and laying out our content in multiple columns.\nJavaScript is a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much everything else. (Okay, not everything, but it is amazing what you can achieve with a few lines of JavaScript code.)\nOver the past 20 years or so since when JavaScript was released, it has become the most popular programming language for web development today. You can understand the importance of JavaScript as a web development language from the fact that as per the recent reports, JavaScript is currently being used by more than 94 percent of all the websites.\nJavaScript is a client-side programming language which helps web developer to do Web Application Development and make dynamic and interactive web pages by implementing custom client-side scripts.",
      "target_audience": [
        "Beginners to JavaScript",
        "Beginners to Web Development"
      ]
    },
    {
      "title": "Building Interactive Shiny Web Apps with R Programming",
      "url": "https://www.udemy.com/course/building-interactive-shiny-web-apps-with-r-programming/",
      "bio": "Learn how to build simple to complex web apps using the Shiny framwork in R",
      "objectives": [
        "Understand the two basic components that makes a Shiny App: User Interface and the Server Side.",
        "Learn how to connect and exchange information between these components.",
        "Build Interactive Shiny Apps.",
        "Publish your App on the web for the world to see."
      ],
      "course_content": {
        "Getting Started": [
          "Course Overview",
          "Installing and Loading Shiny"
        ],
        "Building Your First Web App": [
          "Section Overview",
          "Setting up the Shiny App Directory",
          "User Interface",
          "Server Side",
          "Reactive Expressions",
          "Exercises"
        ],
        "Input Functions": [
          "Section Overview",
          "Text Inputs",
          "Numeric Inputs",
          "Date Inputs",
          "Limited Choices Inputs",
          "File and Action Button Inputs",
          "Exercise",
          "Solution"
        ],
        "Output Functions": [
          "Section Overview",
          "textOutput() and renderText()",
          "verbatimTextOutput() and renderPrint()",
          "plotOutput() and renderPlot(), tableOutput() and renderTable()"
        ],
        "BMI Calculator": [
          "Section Overview",
          "BMI User Interface",
          "BMI Function",
          "BMI Server Side",
          "Exercise"
        ],
        "IMDB Movie Explorer": [
          "Section Overview",
          "IMDB Movie Dataset",
          "Page Setup",
          "Sidebar and Main Panel",
          "Filtering with \"dplyr\" package",
          "Movie Explorer Server Side",
          "Exercise"
        ],
        "Publishing Your App": [
          "Publishing Your App"
        ]
      },
      "requirements": [
        "Basic Understanding of R Programming such as variables, functions and R data structures"
      ],
      "description": "If this is your first time using Shiny, welcome!\n\n\nAn R program called Shiny makes it simple to build dynamic, rich web applications.\n\n\nYou may use Shiny to take your R work and make it accessible to the public via a web browser.\n\n\nShiny makes you appear good by making it simple to\ncreate beautiful web apps with the least amount of effort.\n\n\nMost R users before found it challenging to create web apps because of the need to understand web technologies such as HTML, CSS, and JavaScript\n\n\nComplex interactive apps need rigorous interaction flow analysis\nto ensure that only the associated outputs update when an input changes.\n\n\nShiny makes it much simpler for R programmers to develop web applications by:\nsupplying a well-selected group of user interface (UI) methods\nthat provides the HTML, CSS, and JavaScript required for typical jobs\n\n\nThis implies that until you wish to move beyond the fundamentals that Shiny provides for you,\nyou don't need to be familiar with the specifics of HTML, CSS, or JavaScript.\n\n\nShiny enables you to:\n\n\nMake dashboards that track crucial high-level performance\n\n\nSwitch to interactive apps that let users jump to the precise section of the results they have an interest in.\n\n\nUse educational visualizations to explain complex models to a non-technical audience.",
      "target_audience": [
        "Data Analyst/Data Scientists who want to use R to showcase their analysis",
        "Data Analyst/Data Scientists who don't have any knowledge of HTML, CSS and Javascript and want to build a web app",
        "Students/Researchers",
        "Beginner R Programmers"
      ]
    },
    {
      "title": "MERN Stack Complete User Authentication System with JWT",
      "url": "https://www.udemy.com/course/mern-stack-complete-user-authentication-system-with-jwt/",
      "bio": "Build a complete mern stack standard and secured authentication with jwt , bcrypt , crypto , nodemailer",
      "objectives": [
        "Basic Authentication",
        "Password hashing / encryption / decryption",
        "Email verification functionality",
        "Forgot password functionality",
        "JWT authentications",
        "Working with Protected Routes and Public Routes",
        "Handling api requests with auth middlewares"
      ],
      "course_content": {
        "Introduction": [
          "PROMO / Resourses",
          "React App Setup",
          "Tailwind CSS Setup",
          "Tailwind Basics",
          "Other npm modules and Folder Structure"
        ],
        "Login and Register Pages UI": [
          "Login Register - 1",
          "Login Register - 2"
        ],
        "Backend Setup": [
          "Node server setup",
          "Mongo server setup",
          "Node Mongo Connection"
        ],
        "Login Register Backend": [
          "Login Register API",
          "React Node Connection"
        ],
        "Alerts and Duplicate users": [
          "Showing success , error , loading alerts",
          "Duplicate users restriction"
        ],
        "Password Hasing": [
          "Password Hash-1",
          "Password Hash-2"
        ],
        "JWT Backend": [
          "JWT Intro",
          "JWT Implementation"
        ],
        "JWT Frontend": [
          "Public and Protected Routes",
          "JWT Implementation UI - 1",
          "JWT Implementation UI - 2"
        ],
        "Node Mailer": [
          "Node Mailer Basics",
          "Node Mailer Docs"
        ],
        "Email Verification": [
          "Email Verification - 1",
          "Email Verification - 2"
        ]
      },
      "requirements": [
        "React and Node JS Basics"
      ],
      "description": "MERN is one of several variations of the MEAN stack (MongoDB Express Angular Node), where the traditional Angular.js frontend framework is replaced with React.js. Other variants include MEVN (MongoDB, Express, Vue, Node), and any front-end JavaScript framework that can work.\n\n\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nAuthentication is the act of proving an assertion, such as the identity of a computer system user. In contrast with identification, the act of indicating a person or thing's identity, authentication is the process of verifying that identity.\nAuthorization specifies access rights/privileges to resources, which is related to general information security and computer security, and access control in particular. More formally, \"to authorize\" is to define an access policy\n\n\nIn this course, we will learn the following topics\nBasic Authentication\nPassword hashing / encryption / decryption\nEmail verification functionality\nForgot password functionality\nJWT authentications\nWorking with Protected Routes and Public Routes\nHandling API requests with auth middlewares\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\n\n\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.",
      "target_audience": [
        "Full Stack Web Developers",
        "MERN Stack Developers"
      ]
    },
    {
      "title": "Web Development Introduction",
      "url": "https://www.udemy.com/course/web-development-intro/",
      "bio": "Intro to a modern web development workflow using Gulp, Node, npm, Bootstrap, Javascript, jQuery, Vue, React and more.",
      "objectives": [
        "Create a modern development workflow",
        "HTML - anatomy and structure",
        "CSS - cascading and classes",
        "Sass - learn variables and nesting",
        "Bootstrap - RWD, grid and utilities",
        "JavaScript - basics to advanced techniques",
        "jQuery - Bootstrap and beyond",
        "VS Code - tips and customizations",
        "Node - working with modules",
        "npm - installing packages",
        "Gulp - setup a project workflow",
        "Vue - make it awesome with methods",
        "React - working with functions and JSX"
      ],
      "course_content": {},
      "requirements": [
        "Computer & Internet access with the required applications installed.",
        "Helps to have a basic understanding of HTML, but not required.",
        "Desire to learn 😉"
      ],
      "description": "This course is for the beginner who is interested in learning web development. I structured this course to quickly introduce many different aspects of web development and to get you coding and learning immediately.\nMy intention for this course is to help you develop your own ideas and solutions to define your own approach to web development. After you finish this course, you will be able to quickly create a modern website with dynamic content that works on phones, tablets and desktop computers.\nJust like how there are many different applications or tools that can be used to accomplish the same goal, it is the same with web development, there are many ways to achieve the same outcome. In this course you will learn how to use all these tools to develop modern websites.",
      "target_audience": [
        "This course is for the beginner who is interested in learning web development. This course is structured to quickly introduce many different aspects of web development and get you coding and learning immediately."
      ]
    },
    {
      "title": "Angular and NestJS: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/angular-nestjs-advanced/",
      "bio": "Angular Material, Angular Universal, NestJS, Docker, Redis, Stripe, Frontend & Backend Filtering",
      "objectives": [
        "Use Docker",
        "Login with HttpOnly Cookies and Multiple user Scopes",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "Angular Material",
        "Angular Universal"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Nest Admin": [
          "Setup",
          "Docker",
          "Database",
          "TypeORM",
          "Admin Authentication Endpoints",
          "Validations",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Profile",
          "Admin Endpoints",
          "Ambassadors",
          "Products",
          "Orders",
          "Seeding Orders",
          "Exposing Fields",
          "Links",
          "Relations Without Foreign Keys",
          "Shared Module"
        ],
        "Nest Ambassador": [
          "Ambassador Authentication Endpoints",
          "Multiple Routes",
          "Scopes",
          "Revenue",
          "Ambassador Endpoints",
          "Redis",
          "Caching Products",
          "Event Emitters",
          "Searching Products",
          "Sorting Products",
          "Paginating Products",
          "Creating Links",
          "Stats",
          "Rankings",
          "Redis Sorted Sets",
          "Formatting the Rankings"
        ],
        "Nest Checkout": [
          "Checkout Endpoints",
          "Getting Link Data",
          "Creating Orders",
          "Transactions",
          "Stripe",
          "Configuration",
          "Update Rankings",
          "Sending Emails"
        ],
        "Angular Admin": [
          "Setup",
          "Template",
          "Routes",
          "Register",
          "Login",
          "Services",
          "Authenticated User",
          "Logout",
          "Interceptors",
          "Profile",
          "Event Emitters",
          "Users",
          "Angular Material",
          "Mat Paginator",
          "Links",
          "Products",
          "Creating Products",
          "Updating Products",
          "Deleting Products",
          "Orders"
        ],
        "Angular Ambassador": [
          "Setup",
          "Common Files",
          "Navigation",
          "Profile",
          "Header Component",
          "Stats and Rankings",
          "Router Link Options",
          "Backend Products",
          "Lazy Loading",
          "Http Params",
          "Searching Products",
          "Sorting Products",
          "Selecting Products",
          "Generating Links",
          "Frontend Products",
          "Pipes"
        ],
        "Angular Universal Checkout": [
          "Setup",
          "Link Data",
          "Angular Universal",
          "Products",
          "Order Total",
          "Submitting the Form",
          "Stripe"
        ]
      },
      "requirements": [
        "Good understanding of Angular",
        "Good understanding of NestJS"
      ],
      "description": "Learn how to create an Ambassador App using Angular and NestJS. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big NestJS API.\nIn NestJS you will learn:\nUse Docker\nUse TypeORM and connect with MySQL\nUse Typescript\nUse Interceptors and Guards\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nLogin with Scopes\nUse Redis\nUse Stripe\nSending Emails\nFilter Cached products\nIn Angular you will learn:\nAngular CLI\nUse interceptors\nCreate public and private routes\nUse Reactive Forms\nAngular Material\nAngular Universal\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Building Responsive Websites with HTML 5 & CSS3",
      "url": "https://www.udemy.com/course/building-responsive-websites-with-html-5-css3/",
      "bio": "Learning how to build responsive websites has never been easier!",
      "objectives": [
        "Learn the latest techniques for an in-demand skill: building functional, responsive web layouts.",
        "Easy to follow, plain-english instructions make learning how to create websites that possess both beautiful design and powerful function a breeze.",
        "Learn, step-by-step, how to design layouts to fit various device displays, including tablet, smartphone, and desktop screens."
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "A Look At What We'll Build"
        ],
        "Responsive Design Fundamentals": [
          "Key Aspects Of Responsive Design",
          "Determining Device Resolutions To Target",
          "Wireframing Responsive Layouts"
        ],
        "The Basics: Multiple Style Sheets & Media Queries": [
          "The Concept Of Using Multiple CSS Files",
          "Media Queries & Multiple Style Sheets",
          "Building Media Queries Into A Single CSS File",
          "Using Media Query Expressions"
        ],
        "Building HTML Structure & CSS For All Screens": [
          "Setting Up The HTML & CSS Files",
          "Getting Started With The Header",
          "Inserting The Main Nav Menu",
          "Inserting The Search Field",
          "Problems With Applying Floats",
          "Integrating Google Fonts API",
          "Building The Hero Section Structure",
          "Formatting The Hero Section",
          "Inserting & Formatting A Call To Action Button",
          "Building The Features Section, Part One",
          "Building The Features Section, Part Two",
          "Inserting The Organize Section",
          "Building The Share Section",
          "Building The Call To Action Area",
          "Inserting And Formatting The Footer",
          "Finishing Touches For The High Resolution Layout"
        ],
        "Building The Tablet Layout": [
          "Setting Up The Medium Resolution CSS & Testing The Media Query",
          "Formatting The Medium Res Header",
          "Formatting The Medium Res Hero Section",
          "Formatting The Features Section",
          "Formatting The Organize And Share Sections",
          "Building The Get Section & Finishing Up The Medium Res Layout"
        ],
        "Building The Smartphone Layout": [
          "Setting Up The Low Res CSS & Testing The Media Query",
          "Formatting The Low Res Header",
          "Resolving Problems Caused By Floats",
          "Formatting The Low Res Hero Section",
          "Formatting The Features Section",
          "Formatting The Organize And Share Sections",
          "Building The Get Section & Finishing Up The Low Res Layout"
        ],
        "Advanced Techniques For Responsive Design": [
          "Disabling Device Smart Zoom",
          "Testing Your Responsive Layouts",
          "Setting Up Retina Display Graphics"
        ],
        "Wrapping Up": [
          "Where To Go From Here"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A basic understanding of HTML and CSS"
      ],
      "description": "In this hands-on training course, award-winning veteran trainer Geoff Blake shows you, step-by-step, how to build beautifully designed, responsive websites that adjust and function perfectly on smartphones, tablets, and desktop displays. You’ll begin with the fundamentals of responsive design, beginning with multiple style sheets, media queries and various expressions. Next comes the fun part: you’ll be guided through several in-depth chapters that walk you through the responsive design workflow, building HTML structure and CSS formatting for mobile and desktop displays; including tablets, desktop screens, and smartphones. Geoff shows you how to plan out your work, handle common issues that arise in a responsive layout, and how to handle various page components between device displays. Finally, the course closes with additional tricks, advanced techniques, and testing methods to ensure that your layout looks fantastic.",
      "target_audience": [
        "Those looking to build a strong foundation in responsive web layouts"
      ]
    },
    {
      "title": "Introduction to jQuery with Visual Studio 2017 Community",
      "url": "https://www.udemy.com/course/jquerywithvs2017/",
      "bio": "Explore the Power of jQuery",
      "objectives": [
        "Find, download and install Visual Studio 2017",
        "Configure a few features of Visual Studio",
        "Create a web site project in Visual Studio",
        "Describe HTML elements and tags",
        "Describe how HTML renders in a browser",
        "Understand how jQuery and $ are related",
        "Describe how to use selectors",
        "Understand how the this keyword works in jQuery",
        "Understand how list items can be individually selected",
        "Understand how to respond to clicks using jQuery",
        "Explain the importance of matching parenthesis and curly braces",
        "Understand how to nest method or functions",
        "Understand how to chain methods or functions",
        "Describe variables",
        "Understand how Chrome shows the document object model and HTML",
        "Understand how to select elements with id's",
        "Understand how to select tables and table elements",
        "Select child elements",
        "Select elements by attributes",
        "Search attributes on various conditions",
        "Describe how to use the each method",
        "Describe how to use multiple event handlers",
        "Understand how the jQuery object stores elements at indexes",
        "Understand how to use bracket notation with indexes",
        "Describe how to use for loops with jQuery objects",
        "Understand how to use the css method",
        "Describe how to use the addClass method",
        "Understand the difference between live code and comments",
        "Understand how to use class selectors in CSS",
        "Describe how to select new contexts using jQuery",
        "Understand how to generate HTML elements at run time",
        "Understand how to generate interactive HTML elements at run time",
        "Understand how to slice through sets of elements",
        "Describe how to filter matched sets using a variety of selectors",
        "Describe how to use a variety of HTML elements",
        "Describe how to use a variety of property/value pairs in CSS",
        "Understand how jQuery objects are returned and used in various method calls",
        "Describe how jQuery objects can be destroyed with filters and reset with the end method",
        "Understand the difference between this and $(this)",
        "Understand what purpose callback functions serve"
      ],
      "course_content": {
        "Course Overview": [
          "What we're going to learn in this course"
        ],
        "Getting the Tools": [
          "Find, Download and Install Visual Studio 2017 Community",
          "Configure Visual Studio and Chrome to Make Coding Easier",
          "Create and Run a Simple HTML Page"
        ],
        "Learning the Fundamentals of jQuery": [
          "Use the \"alert\" Function to Display a Message",
          "Choose a Paragraph Element and Perform an Action",
          "Understand the jQuery Function in More Detail",
          "Operate on Multiple Matched Elements",
          "View the HTML in Source View and Inspector",
          "Nest Functions",
          "Chain Functions",
          "Understand the \"this\" Keyword"
        ],
        "Complex Selectors": [
          "Manipulate ID Selectors",
          "Manipulate Class Selectors",
          "Select First Matching Elements",
          "Select Child Elements",
          "Select Elements by Attributes",
          "Select Table Elements, 1",
          "Select Table Elements, 2",
          "Search Element Attributes, 1",
          "Search Element Attributes, 2",
          "Select the nth-child Element",
          "Select Elements Based on Index",
          "Select Combinations of Different Elements"
        ],
        "jQuery Functions": [
          "Understand Indexes with the Index Method",
          "Understand Indexes with Square Brackets",
          "Iterate Over Indexes with For Loops",
          "Switch the Selection Context",
          "Create HTML Elements with Styles",
          "Create HTML Elements with Functions, Events and Properties",
          "Slice Through the Matched Set",
          "Filter Matched Sets with Selectors",
          "Filter Matched Sets Sequentially",
          "Filter Matched Sets with Functions",
          "Reducing and Restoring Matched Sets",
          "Search for Contained Text",
          "\"this\" vs. $(this) and get method"
        ],
        "Effects": [
          "Callbacks",
          "Hide and Show",
          "Slide Up and Down",
          "Toggle Classes",
          "Perform a Custom Animation",
          "Queue and Deqeue Animations",
          "Promise Method"
        ],
        "AJAX": [
          "Create and Run Pages with AJAX",
          "Load Page with Get Method"
        ],
        "Events": [
          "Multiple Events with the On Method"
        ],
        "Storage": [
          "Where to go from here"
        ]
      },
      "requirements": [
        "Students must be able to download and install Visual Studio Community 2017",
        "This is a course for beginning students of jQuery.",
        "This is not a course for intermediate students of jQuery.",
        "This is not a course for advanced students of jQuery.",
        "Students should be somewhat familiar with HTML and CSS."
      ],
      "description": "Very Important:\n1. Friends, please take the time to review the curriculum carefully before buying so you can see exactly whether this is the right course for you. Please do not join until you have completed this step.\n2. Please watch the free preview videos so you can see whether the presentation style works for you. Please remember  I am just one person, and I make my videos often after I have been working for many hours already.  PLease do not join until you have completed this step.\n3. If something needs fixing, please let me know. Again, I'm just one person and not a big team of people. I will try to fix it as quickly as possible. Thank you.\nLet's take a look at everything that this course has to offer. JQuery is a library of JavaScript functions. These functions allow programmers to manipulate HTML elements to produce a variety of effects. This course is an introduction to jQuery using Microsoft Visual Studio 2017 Community. This course is not for intermediate or advanced students of jQuery. Each lesson is an HD video. The code samples are created in Visual Studio, and run in Google Chrome. Questions are asked throughout the videos. At those times, please pause and do your best to answer each question. If you have any questions, please be sure to reach out and ask.  I usually respond within 24 hours. Each video is about nine minutes long. The font in each video is big so the code is easy to read. Some of the code samples are simple, and some are complex. Each video usually represents just a few, connected concepts. Thanks for reading, and see you inside!\n\njQuery and related marks are trademarks of the JS Foundation, and this course is not affiliated with or endorsed by the JS Foundation.",
      "target_audience": [
        "This course is for those who want to learn about the fundamentals of jQuery and Visual Studio Community 2017."
      ]
    },
    {
      "title": "ReactJS & Tailwind CSS 4: Build 3 Complete Web Projects",
      "url": "https://www.udemy.com/course/reactjs-tailwind-css-v4-build-3-complete-web-projects/",
      "bio": "Master React 19 & Tailwind CSS 4 by building a responsive Apple Store, Shopping Cart & Portfolio Website from scratch!",
      "objectives": [
        "Master Tailwind CSS v4 updates to build modern, responsive web interfaces with the latest features and best practices.",
        "Learn React 19 by building real-world projects, understanding component structure, state management, and UI design",
        "Create an Apple Products Store with product listings, filtering, and an interactive UI using React and Tailwind CSS.",
        "Design and deploy a responsive Portfolio Website to showcase your skills, featuring animations and modern UI techniques."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Tailwind CSS 4 Update - New Features (Optional)": [
          "How to Install and Use Tailwind CSS 4",
          "Installation & Setup with Vite",
          "@theme Directive",
          "@utility Directive",
          "Default Style Updates",
          "Content Detection",
          "@plugin Directive",
          "Container Queries",
          "3D Transform APIs",
          "Gradient APIs",
          "Shadows and Rings",
          "Other New Features",
          "Migrating"
        ],
        "Apple Products Store": [
          "Project Preview",
          "Installation & Setup",
          "Implementing Zooming Functionality",
          "Creating Navbar",
          "Building the Home Page",
          "Creating the IPhone Page",
          "Building the MacBook Page",
          "Creating the Apple Watch Page",
          "Building the IMac Page",
          "Implementing Smooth Page Transitions",
          "Adding Responsive Design",
          "Creating a Functional Mobile Navbar (Hamburger Menu)"
        ],
        "Shopping Cart": [
          "Project Preview",
          "Installation & Setup",
          "Adding Product Data & Displaying Items",
          "Creating the CartItem Component",
          "Implementing Context API for State Management",
          "Implementing 'Add to Cart' and 'Remove' Functionality",
          "Managing Cart State & Updating Quantities",
          "Creating the Shopping Cart UI",
          "Adding and Removing Cart Items",
          "Calculating Total Price Dynamically",
          "Adding Local Storage Functionality",
          "Making Project Responsive"
        ],
        "Personal Portfolio Website": [
          "Project Preview",
          "Installation & Setup",
          "Building the Navbar & Setting Up the Hero Section",
          "Adding Hover Effects to 'Hello' in the Hero Section",
          "Adding Rotating Animation",
          "Enhancing the Hero Section: Interactive Elements & Animations",
          "Implementing the Dark / Light Mode",
          "Creating the Services Section",
          "Building the Contact Section",
          "Creating Navigation Circles",
          "Implementing Smooth Scrolling Functionality",
          "Making Project Responsive",
          "Adding Loading Functionality"
        ]
      },
      "requirements": [
        "A Code Editor (VS Code Recommended) – Students should have a code editor installed, with VS Code being the preferred choice for its features and extensions.",
        "A Modern Web Browser – A recent version of Chrome, Firefox, Edge, or Safari is needed to test and debug web applications efficiently.",
        "Good Understanding of HTML, CSS, and JavaScript – Prior knowledge of fundamental web development concepts is essential for building React and Tailwind projects.",
        "Basic Knowledge of ReactJS and Tailwind CSS (Optional but Helpful) – Familiarity with React and Tailwind CSS is beneficial but not required, as key concepts will be covered in the course."
      ],
      "description": "Course Description:\nWant to master React 19 and Tailwind CSS v4 while building real-world, fully responsive web projects? This course is the perfect hands-on guide to help you gain practical experience with modern front-end development.\nThroughout the course, you will build three complete projects from scratch, each designed to strengthen your skills and give you real-world coding experience:\nApple Products Store – Learn how to create an interactive product store with dynamic listings, filtering, and a sleek, modern UI.\nShopping Cart System – Build a fully functional shopping cart with add, and remove functionality, while managing state effectively in React.\nPersonal Portfolio Website – Design and deploy a professional portfolio to showcase your work, complete with smooth animations and a mobile-friendly layout.\nWhat Makes This Course Unique?\nBefore diving into the projects, we’ll begin with a concise crash course on Tailwind CSS v4, covering its latest features, updates, and best practices. This will ensure you're up to speed with the newest enhancements and can apply them efficiently in your projects.\nThis course is 100% project-based, meaning you won’t just learn theory—you’ll put your knowledge into action by building real, fully functional applications. Each project will reinforce essential skills such as:\nReact component structure and state management\nOptimizing Tailwind CSS for clean, efficient styling\nCreating interactive UI components with responsiveness in mind\nImplementing modern front-end development workflows\nDeploying your projects for a real-world audience\nWho is This Course For?\nThis course is perfect for:\nFront-end developers looking to build practical, real-world projects.\nWeb developers who want to master React 19 and Tailwind CSS v4.\nBeginners in React & Tailwind who want hands-on experience with step-by-step guidance.\nFreelancers & job seekers looking to expand their portfolio with modern, responsive web applications.\nAnyone passionate about modern web development and eager to create high-quality, professional projects.\nWhat Will You Gain?\nBy the end of this course, you’ll have three complete, responsive web projects to add to your portfolio, along with a strong grasp of React 19 and Tailwind CSS v4. You'll not only improve your coding skills but also gain the confidence to build and deploy your own professional websites with ease.\nStart now and take your web development skills to the next level!",
      "target_audience": [
        "Front-end developers who want to build real-world React and Tailwind CSS projects with modern, responsive UI techniques.",
        "Web developers looking to master Tailwind CSS v4 and React 19 by building practical, hands-on projects from scratch.",
        "Beginners with React and Tailwind CSS who want to gain confidence by creating fully functional, responsive web applications.",
        "Freelancers and job seekers aiming to expand their portfolio with professional projects to showcase their React and Tailwind CSS skills.",
        "Anyone interested in modern web development who wants to learn how to create dynamic and responsive websites with the latest technologies."
      ]
    },
    {
      "title": "The Ultimate Authentication Course with NestJS and VueJS",
      "url": "https://www.udemy.com/course/vue-and-nest-authentication/",
      "bio": "Authenticate with Access & Refresh Tokens, 2FA, Social Authentication with Google etc.",
      "objectives": [
        "Use NodeJS with Typescript",
        "Use TypeORM with MySQL",
        "Use Access & Refresh Tokens",
        "Send Emails",
        "Login using 2 Factor Authentication (2FA) with Google Authenticator",
        "Social Authentication using your Google Account",
        "Use Vue 3 Composition API",
        "Use Vuex"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Big Picture"
        ],
        "NestJS": [
          "Setup",
          "Database",
          "Entities",
          "Controllers",
          "Services",
          "Login",
          "Jwt",
          "Cors",
          "Authenticated User",
          "Refreshing the Token",
          "Logout",
          "Revoking Tokens",
          "Forgot Password",
          "Sending Emails",
          "Reset Password"
        ],
        "Vue": [
          "Setup",
          "Navigation",
          "Register",
          "Login",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Vuex",
          "Forgot Password",
          "Reset Password"
        ],
        "Two Factor Authentication": [
          "Two Factor Authentication",
          "Sending the Authenticator Code",
          "Emitting Data",
          "Authenticator Form",
          "Scanning QR Codes"
        ],
        "Google Authentication": [
          "NestJS Google Authentication",
          "VueJS Google Authentication"
        ]
      },
      "requirements": [
        "Basic Javascript Knowledge"
      ],
      "description": "Welcome to this course where you will learn everything you need to know to secure your VueJS and NestJS app.\nIn NestJS you will learn:\nUse NestJS with Typescript\nUse TypeORM with MySQL\nUse Access & Refresh Tokens\nUse HttpOnly Cookies\nSend Emails\nLogin using 2 Factor Authentication (2FA) with Google Authenticator\nSocial Authentication using your Google Account\nIn Vue you will learn:\nUse Composition API\nCreate components and routes\nConsume API calls\nUse Vuex\nCreate QRCodes\nSocial Authentication using your Google Account\nIf these are what you are looking for then this course is for you.\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "Svelte.js 3 and Sapper Projects",
      "url": "https://www.udemy.com/course/sveltejs-3-and-sapper-projects/",
      "bio": "Build powerful, reactive, great-looking UI web experiences with this front-end compiler and its framework.",
      "objectives": [
        "Build real-life web applications using Svelte and its associated framework, Sapper",
        "Create highly reactive and modular Svelte components that are scalable and reusable within one or more web applications",
        "Explore Svelte’s advanced features that allow us to create and design beautiful and smooth user experiences",
        "Discover Sapper’s great features such as routing, service workers, code-splitting, single-page applications (SPA) or server-side rendered (SSR) applications optimized for SEO",
        "Deploy your apps while connecting them to services such as a database or RESTful APIs",
        "Test Sapper-built applications using Cypress to avoid any regressions"
      ],
      "course_content": {
        "Introduction and Starting Our First Project": [
          "Course Overview",
          "What Is Svelte and Why Should We Learn It?",
          "Setting Up Our Work Environment",
          "Analyzing the Svelte Workspace",
          "Creating a Hierarchy of Components",
          "Starting Our First Project: vCard Generator",
          "Test your knowledge"
        ],
        "Reactivity and Events": [
          "Adding Reactivity with Dynamic Attributes",
          "Reacting to DOM Events",
          "More On Events",
          "Two-Way Binding",
          "Conditional Classes",
          "Test your knowledge"
        ],
        "Enhancing Our Application": [
          "Dispatching Events",
          "Two-Way Binding Between Components",
          "Using Slots",
          "Conditional Rendering",
          "Reactive Statements",
          "Test your knowledge"
        ],
        "Transitions, Animations, and Our Second Project": [
          "Basic Transitions",
          "Enhancing Transitions",
          "Animating Elements",
          "Using Lifecycle Functions",
          "Test your knowledge"
        ],
        "State Management": [
          "State Management with Stores",
          "Using Stores in Our Application",
          "Motion with the Svelte/Motion Module",
          "Connecting To a Database",
          "Options On Deploying Svelte Apps",
          "Test your knowledge"
        ],
        "Sapper Framework": [
          "Starting with Sapper",
          "The Sapper App Structure",
          "Routing",
          "Preloading",
          "Test your knowledge"
        ],
        "Testing and Deploying Our App": [
          "Introduction to Testing with Cypress",
          "Deploying Our App as a Pre-Rendered Static Site",
          "Deploying Our App as a Dynamic SSR App",
          "Course Review",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "primarily suited for web developers who are familiar with Svelte"
      ],
      "description": "This course will take you through three core projects to help you build effective, reactive, and attractive apps with Svelte, demonstrating its intrinsic benefits, including less code and impressive reactivity/state management along the way.\nOur first project, a vCard generator app, will demonstrate the modularity and reactivity web applications you can develop with Svelte. We will build reusable and dynamic components that we will later enhance with more advanced features. Sections on animation and transitions are included to make applications look as good as they perform!\nOur second project will be a fully functional Kanban board application, similar to Trello. This application will also have effective state management, by making use of stores and other key Svelte features.\nOur final application will be based on the previous Kanban board application but making use of Sapper, the official Svelte framework. However, we will build this application with Sapper, the official Svelte framework. We will learn how to create web apps with Sapper and master its most useful features, such as routing and prefetching.\nWe will also provide an introduction to testing Sapper applications with Cypress, and we finish the course by deploying our application in two different ways: as a static page, and as an SEO-optimized server-side rendered (SSR) application.\nAbout the Author\nGermán Mené Santa Olaya is an engineer and a software developer. He loves programming and building web applications using Svelte and Sapper. These front-end tools allow him to build modern and complete web apps in a modular and approachable way. There are endless possibilities when it comes to web applications, and many frameworks and ways to approach them, but he believes that Svelte makes the process easy and scalable. That is the reason why he believes that it will become a mainstream and widely used tool for front-end web development in years to come.",
      "target_audience": [
        "This course is primarily suited for web developers who are familiar with Svelte and want to explore full-length applications in svelte along with sapper."
      ]
    },
    {
      "title": "Oracle ADF 12c Light Course for Certification (1Z0-419 Exam)",
      "url": "https://www.udemy.com/course/oracle-adf-12c-light-course-for-certification/",
      "bio": "Get Oracle ADF 12c Certified and pass 1Z0-419 exam",
      "objectives": [
        "Will know the steps to get ADF 12c certification for 1Z0-419 exam",
        "Download exam (1Z0-419) material which will have 87 questions and their answers",
        "Will get an overview about ADF and you will know how ADF framework is working.",
        "Will be able to create a complete ADF application, because in this course I will create a complete ADF application",
        "How to find the nearest test center and register for 1Z0-419 exam",
        "How the 1Z0-419 exam will look like and what you should do in the test center",
        "How you can get the exam result"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to ADF and JDeveloper",
          "Download and Install JDeveloper 12c",
          "JDeveloper and How to Create ADF Application",
          "MVC Design Pattern",
          "MVC in ADF",
          "Implement MVC in ADF practically in JDeveloper",
          "Download and Install Oracle Database"
        ],
        "Create a Complete ADF Application": [
          "Download School Application Resources",
          "School Application Overview",
          "Creating Database for School Application",
          "Create Model Layer for the Application",
          "Entity Object Configurations",
          "Entity Object Configurations (cont.)",
          "Entity Object Configurations (cont.)",
          "Entity Object Configurations (cont.)",
          "Create View Links Between View Objects",
          "Create Static View Objects",
          "Create List of Values (LOVs)",
          "Create View Criteria",
          "Application Module Configurations",
          "Create Page Template for School Application",
          "Create Page Template for School Application (cont.)",
          "Create School Application JSF Pages",
          "Create JSF Pages and Define Navigation between Pages",
          "Developing School Application Lookups Pages",
          "Developing School Application Lookups Pages (cont.)",
          "Developing School Application Lookups Pages (cont.)",
          "Developing School Application Lookups Pages (cont.)",
          "Developing School Application Search Pages",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Transaction Pages",
          "Developing School Application Transaction Pages (cont.)",
          "Developing School Application Transaction Pages (cont.)",
          "Developing School Application Transaction Pages (cont.)",
          "Developing School Application Dashboard",
          "Developing School Application Dashboard (cont.)",
          "Developing Dashboard Graphs",
          "Developing Dashboard Statistics",
          "Developing Dashboard Statistics (cont.)",
          "Add Security to School Application",
          "Add Security to School Application (cont.)",
          "Developing School Application Login Page",
          "Developing School Application Login Page (cont.)",
          "Developing School Application Login Page (cont.)",
          "Finalize School Application Login Page and Logout",
          "Deploying ADF Application in Weblogic Server"
        ],
        "Oracle ADF 12c Certification": [
          "Introduction to Oracle ADF Certification",
          "Steps to Get Certified",
          "1Z0-419 Exam Questions and Answers"
        ]
      },
      "requirements": [
        "You should have a basic knowledge of java programming language. and it is recommended to have a clue about ADF."
      ],
      "description": "This course will help you to get Oracle ADF 12c Certificate and pass 1Z0-419 exam. From this course you will be able to download 1Z0-419 exam material and give you the guide for how you can register for the exam and how you can get the result of the exam.  This course will target beginners (anyone does not know anything about ADF) and newbies (anyone know what is ADF and he may use it before). For beginners, this course will give an overview about ADF  and how ADF framework is working and by end of the course I will created a complete ADF application. However, I don't recommend beginners to start with this course and they can start with a complete ADF course first, then they can take this course. If you already know ADF and you work on it but you are newbie, this course will be good for you. By end of this course you will know how ADF framework is working and you will know how you can apply for ADF 12c certificate.",
      "target_audience": [
        "Anyone want to be Oracle ADF 12c Certified."
      ]
    },
    {
      "title": "Starting with PHP for beginners",
      "url": "https://www.udemy.com/course/the-essential-guide-to-php/",
      "bio": "Essential guide for beginners in the php world.",
      "objectives": [
        "PHP basics (arrays, functions, conditionals, loops etc)",
        "Working with forms to handle uploads and files",
        "Work with databases and authentication",
        "Get practice by creating a project",
        "A bit of OOP just to keep you interested,"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing on mac"
        ],
        "The basics": [
          "Echo, Print and comment",
          "Variables",
          "If statements",
          "Operators",
          "Logical Operators",
          "Math operators",
          "Switch",
          "Arrays",
          "For loop",
          "Foreach",
          "While loop",
          "Functions",
          "More about arrays",
          "More about arrays..continued",
          "Built in array functions",
          "Other useful functions",
          "PHP and HTML",
          "Working with forms",
          "Getting POST data",
          "Working with dates",
          "Making a countdown",
          "Setting cookies",
          "Getting cookies",
          "Include and require"
        ],
        "Practice project - Who pays the bill": [
          "Introduction",
          "Catching values",
          "Errors and pages",
          "Finishing page 2",
          "Finishing the app",
          "Fixing errors"
        ],
        "Files basics": [
          "Working with files",
          "Writing files",
          "Reading and deleting files",
          "Uploading files",
          "Uploading files 2",
          "Uploading files 3"
        ],
        "Mysql and databases": [
          "Entering MyAdmin",
          "Creating tables",
          "Adding and endpoint",
          "Connecting to our DB",
          "Posting data",
          "Getting data",
          "Updating data",
          "Updating data 2",
          "Deleting records",
          "Most common queries",
          "Most common queries 2",
          "Joining tables",
          "Hashing passwords",
          "Verifying passwords",
          "Setting up Sessions"
        ],
        "Practice project: Flick arena": [
          "Intro",
          "Setting up hosts in MAC",
          "Templating home",
          "Templating admin",
          "Creating the config file",
          "Defining global variables",
          "Adding links",
          "Creating the add user endpoint",
          "Adding user to the DB",
          "Creating the add user function",
          "Creating the add user function 2",
          "Creating the add user function 3",
          "Adding a view all user page",
          "Creating the edit view",
          "Editing users",
          "Log in",
          "Setting up sessions",
          "Protecting routes",
          "Updating user profile",
          "Finishing update profilr",
          "Adding role check",
          "Creating the add post markup",
          "Adding and editor and table",
          "Posto to DB",
          "Uploading images",
          "Uploading images 2",
          "Creating the view all posts",
          "Creating the edit post",
          "Finishing the edit post",
          "Toggle status button",
          "Delete posts button",
          "Delete user button",
          "Getting posts from home",
          "Featured widget",
          "Home blocks",
          "Other posts section",
          "Creating the post section",
          "Search admin posts",
          "Searching users and blocking drafts",
          "Deploying"
        ],
        "OOP basics": [
          "Classes",
          "Constructors and destructors",
          "Inheritance",
          "Modifiers",
          "Scope resolution",
          "Constants",
          "Final keywords",
          "Static properties",
          "Getters and setters"
        ]
      },
      "requirements": [
        "Just HTML and CSS"
      ],
      "description": "Do you want to create web applications with PHP ?. This is the course for you.\nWe will start from the very beginning, from \"I don't even know how to install it….and why should I?“ to actually understand how PHP works and make a real project.\nYou will learn all the logic and practice behind PHP in different modules and as we advance through the course we will be increasing the difficulty.\n\n\nTo sum everything up, you will learn in this course:\nHow to run it in your computer\nUnderstand how use the most basic tools like variables, conditionals..etc\nHandle more complex code working with forms, files, cookies.\nStarting to work with php my admin..\nHow databases, queries and tables work.\nHandle authentication actions like hashing and verifying passwords.\nCreate two practice projects, a tiny one and a bigger one.\nDeploying a project to a hosting service.\n\n\nWhat about the instructor experience ?\nWell I've been around for 13 years now, built lots of applications for small projects and big companies like Citi, Fox, Disney and a lot more.\nToday I work as a developer for a major company developing applications in React or Angular mostly, but I like to teach in my spare time.\nHow about the target audience?\nThis course is for almost everyone, a little bit of Javascript is required.We will use ES6 but you can learn as we go.\nIf you want to take your coding to the next level, this is the course for you.",
      "target_audience": [
        "Beginners"
      ]
    },
    {
      "title": "LEARNING PATH: Go: Advancing into Web Development with Go",
      "url": "https://www.udemy.com/course/learning-path-go-advancing-into-web-development-with-go/",
      "bio": "Harness the power of Go to level up your skillsets in web development and build web apps like a pro",
      "objectives": [
        "Perform DOM operations with GopherJS",
        "Upload client-side image and client-side forms",
        "Create a 3D scene in the web browser",
        "Implement a single page application",
        "Build a feature-rich social media website",
        "Manage requests and responses",
        "Create custom middleware",
        "Build web forms with validation and security in mind",
        "Create functionality to upload and process images and videos",
        "Implement a custom datastore for a relational database, document database, and an in-memory database",
        "Explore the fundamental Concepts of Go",
        "Write a unit test in Golang",
        "Create a simple web server instance for the GopherFace website"
      ],
      "course_content": {
        "Front-End Web Development using Go": [
          "The Course Overview",
          "Introduction to GopherJS",
          "Basic DOM Operations",
          "The jsbuiltin Binding",
          "Making XHR Calls",
          "Rendering Client-Side Templates",
          "Sending Gob Encoded Data over XHR",
          "Websocket Client",
          "Rendering a 3D Gopher",
          "Dynamically Resizing the 3D Gopher",
          "Panning the Camera Around the 3D Gopher",
          "Introduction to Local Storage",
          "Reading and Writing to Local Storage",
          "Instantly Kickstarting Go Projects",
          "Introduction to Single Page Architecture",
          "Implementing Client-Side Routing",
          "Introduction to Template Sets",
          "Implementing Client-Side Templates",
          "The Profile",
          "Profile Image Upload",
          "Finding New Friends",
          "Friends List",
          "The Social Media Feed",
          "Extending GopherFace",
          "Front-End Web Development using Go"
        ],
        "Back-End Web Development using Go": [
          "The Course Overview",
          "Dressing up Your Web App with Templates",
          "Templates in Go",
          "Custom Template",
          "Model View Controller",
          "Request Routing with Gorilla Mux",
          "Middleware",
          "HTTP Request Context",
          "Rest API",
          "Building a Web Form",
          "Extracting Web Form Data",
          "Web Form Validation",
          "Web Form Security",
          "Social Media Post Form",
          "Introduction to File Uploads",
          "Image Upload",
          "Video Upload",
          "Introduction to MySQL",
          "Implementing a MySQL Datastore",
          "Introduction to MongoDB",
          "Implementing a MongoDB Datastore",
          "Introduction to Redis",
          "Implementing a Redis Datastore",
          "TLS Web Server Instance",
          "Verifying User Credentials",
          "Secure Cookie",
          "User Session",
          "Authentication Middleware",
          "Implementing an Asynchronous Task Queue",
          "Image Resizing as an Asynchronous Task",
          "Back-End Web Development using Go"
        ],
        "Go Essentials for Full Stack Web Development": [
          "The Course Overview",
          "A Brief Introduction to Programming",
          "The Gist of Go",
          "Installing Go",
          "Configuring Go",
          "Basics - Variable Declaration, Built-in Types, Constants",
          "Packages",
          "Functions",
          "Conditional and Loops",
          "Command-line Program",
          "Username Syntax Checker",
          "Arrays",
          "Slices",
          "Maps",
          "Types and Interfaces",
          "Social Media Post",
          "Concurrency Versus Parallelism",
          "Goroutines",
          "Channels",
          "Range Over Channels",
          "Mutexes and Wait Groups",
          "Concurrent Pi Computation",
          "The Go Tool Chain",
          "Documentation in Go",
          "Testing in Go",
          "Unit Testing the Username Syntax Checker",
          "An Introduction to HTTP",
          "The net/http Package",
          "A Go Web Server Instance",
          "Go Essentials for Full Stack Web Development"
        ],
        "Go Projects": [
          "Project Showcase",
          "Installing Go",
          "A Simple Static File Server",
          "Accepting Command-line Arguments",
          "Compiling to a Statically Linked Binary",
          "Dynamic Content with Go",
          "Handling GET and POST Requests",
          "Connecting to a Database",
          "Writing Tests in Go",
          "Variadic Functions, Function Chaining, and Callbacks",
          "Logging and Analytics",
          "Error Handling",
          "Advanced Middleware",
          "Usernames and Passwords",
          "The Password Reset E-mail",
          "Sessions",
          "Sessionless, Passwordless Authentication",
          "Web Application Security",
          "JSON in Go",
          "Streams and JSON",
          "Buffers",
          "Image Handling",
          "Concurrency",
          "A Simple Chat Server",
          "An Advanced Chat Server",
          "Real-time Notifications",
          "Deployment Options",
          "Automated Deployments",
          "Continuous Integration",
          "Debugging",
          "Reflection",
          "Performance",
          "Go Projects"
        ]
      },
      "requirements": [
        "This Learning Path provides a pragmatic approach to learning frontend web development using Go. Each video provides in-depth knowledge on a topic with a number of hands-on examples. As you progress through the Learning Path, we continue to elevate your skills to the next level. Filled with hands-on examples, this Learning Path will help you learn how to perform real-time web development using Go. You will learn to build various applications and enhance them."
      ],
      "description": "Go is one of the most powerful, efficient, and highly-performant programming languages. Go has seen an increased rate of adoption mainly because it is lightweight, easy to use, and displays great robustness when performing in a variety of domains. Go is a modern language, created by a team of researchers from Google that is an ideal choice for all the levels of web development. Go is not only a powerful tool that can be utilized on the server-side but one that can be utilized on the client-side as well. If you're interested to imbibe the skills of Go programming language and become a full-stack web developer, then you should opt for this Learning Path.\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are:\nBuild a feature-rich social media website\nBuild functionality for user authentication and session management\nCreate a simple web server instance for the GopherFace website\nBuild your first real-time web application: a chat server\nLet’s take a quick look at your learning journey. In this Learning Path, you will be provided deep insight into frontend web development using Go. It starts off by covering the fundamental mechanics of frontend web development such as performing common DOM operations, accessing native JavaScript functionality, making XHR calls, rendering templates on the client-side, transmitting Gob encoded data, and communicating over a WebSocket connection. You will then demonstrate how to create a single page application by implementing client-side routing and directly rendering templates in the web browser itself. Utilizing the valuable knowledge presented in this Learning Path, you will be able to build GopherFace, a fully functioning social media website with incredible features.\nFurther, you will learn backend web development using Go. You will go through essential concepts which include web templates, the model view controller pattern, managing requests and responses, and building web forms. You will also learn how to create real-world solutions such as uploading image/video files, implementing a datastore for a variety of databases (relational, document, and in-memory), creating secure cookies, implementing authentication middleware, and implementing an asynchronous task queue to perform long-running tasks in the background.\nIn addition to getting you up to speed with backend web development practices, this Learning Path will also provide you with helpful advice and techniques that will guide you on your way to becoming a successful Go programmer.\nThe projects also demonstrate the key features of Go in action, such as concurrency, and will start to explore the rich ecosystem of open source libraries and frameworks that are being continually developed for the language.\nBy the end of this Learning Path, you will learn the tricks to build robust, secure, and fully-featured applications for the web. You will have everything you need to go out into the wild with Go to build projects of your own and become a full-stack Go web developer.\nMeet Your Experts:\nWe have combined the best works of the following esteemed authors to ensure that your learning journey is smooth:\nKamesh Balasubramanian is the founder and CEO of Wirecog, LLC. He is the inventor of Wireframe Cognition (Wirecog), an award-winning, patented technology that allows machines to understand wireframe designs and produce source code from them. Kamesh has over 20 years' software development experience and has implemented numerous solutions in the advertising, entertainment, media, publishing, hospitality, videogame, legal, and government sectors. He is an award-winning, professional member of the Association for Computing Machinery and an InfyMaker Award winner. He was recognized as a Maker of Change at the 2016 World Maker Faire in New York and, upon request, has demonstrated Wirecog at MIT.\nBen Tranter is a developer with nearly six years’ experience. He has worked with a variety of companies to build applications in Go, in the areas of data mining, web back ends, user authentication services, and developer tools, and is a contributor to a variety of open source Go projects.\nRostislav Dzinko is a software architect who has been working in the software development industry for more than six years. He was one of the first developers who started working with the Go language far earlier than the first official public release of Go 1.0 took place. Rostislav uses the Go language daily and has successfully used it in production for more than two years, building a broad range of software from high-load web applications to command-line utilities. He has a Master’s degree in Systems Engineering and has completed a PhD thesis.",
      "target_audience": [
        "This course is targeted at Go developers interested in learning how to use Go to build powerful web applications, and who want to learn full-stack web development using Go. Anyone who want to harness the power of Go, both on the backend and frontend, to create sophisticated, efficient, and production-ready web applications will also benefit from this Learning Path."
      ]
    },
    {
      "title": "Full-Stack Development for Beginner: React, Next.js, Node.js",
      "url": "https://www.udemy.com/course/full-stack-development-for-beginner-react-nextjs-nodejs/",
      "bio": "Become a Full-Stack Web Developer and Build 5 Real Projects with React, Next.js, Node.js, REST API, AI Integration, more",
      "objectives": [
        "Build a Products List App – React core (JSX, Components, Props, State, Hooks), project structure, component organization, styling approaches.",
        "Build a Todo List App – Forms with React-Hook-Form & Yup, validation, error handling, API calls with fetch/Axios, CRUD operations.",
        "Build an AI Chatbot App – Integrate ChatGPT, Gemini, DeepSeek, Claude & Grok APIs for real-time conversations.",
        "Build a Contacts List App – Next.js basics: setup, Pages & Layouts, Navigation, Dynamic Routes, data fetching (Server/Client), Suspense, debugging.",
        "Build a Movies REST API – Node.js fundamentals, Event Loop, Async/Await, modules, HTTP core, REST routes (GET/POST/PUT/DELETE), query filters.",
        "And much more to enhance your skills as a Full Stack developer."
      ],
      "course_content": {
        "Introduction": [
          "Course Requirements",
          "How to Study on Udemy",
          "How to Use Code Examples from Github",
          "GitHub Source Code Examples"
        ],
        "REACT BASIC: Getting Started": [
          "Introduction",
          "What is React",
          "Environment Setup",
          "Master React Fundamentals with Maya (your AI Mentor)",
          "Creating React Application",
          "Application Structure",
          "Cleaning Up Application",
          "Developer Tools",
          "Test"
        ],
        "REACT BASIC: Creating Component": [
          "Introduction",
          "Your First Component",
          "Importing and Exporting Components",
          "Writing Markup with JSX",
          "Using Variables in JSX",
          "Test"
        ],
        "REACT BASIC: Adding Interactivity": [
          "Introduction",
          "Passing Props to a Component",
          "Component Props Manipulations",
          "Responding to Events",
          "Rendering List",
          "Fragment Component",
          "Conditional Rendering",
          "Test"
        ],
        "REACT BASIC: Styling in React": [
          "Introduction",
          "Using Inline Styles",
          "Using CSS Files",
          "Using CSS Modules",
          "Using Global CSS Styles",
          "Alternative Styling Options",
          "Test"
        ],
        "REACT BASIC: Managing State": [
          "Introduction",
          "Component life-cycle and state",
          "Component state vs local variables",
          "Using useState hook",
          "Batch updating of useState",
          "Test"
        ],
        "REACT BASIC: Managing Complex State": [
          "Introduction",
          "Updating Objects in State",
          "Adding/Deleting items in Array State",
          "Updating items in Array State",
          "Test"
        ],
        "REACT FORMS: Working with Form Controls": [
          "Setting Up New Application via Vite",
          "Create Application Layout for To-Do List",
          "Creating a Form to Add New To-Do’s",
          "Structuring and Styling Form Fields",
          "Handling Form Submission with onSubmit",
          "Storing Form Data in the State"
        ],
        "REACT FORMS: Displaying To-Do List": [
          "Expanding/Collapsing Additional Form Fields",
          "Creating and Displaying To-Do List",
          "Structuring and Styling To-Do List",
          "Move Static Data about Priorities into Variables",
          "Updating To-Do Status with Controlled Components"
        ],
        "REACT FORMS: Advancing To-Do List Functionality": [
          "Preparing Components for Editing functionality",
          "Displaying an Edit Form for To-Do’s",
          "Allowing User to Edit Items in a List",
          "Adding Delete Functionality to Remove Items",
          "Display Filtering Options for To-Do List",
          "Move Static Data about Filters into Variables",
          "Allowing User to Filter Items in List"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML/CSS",
        "Basic knowledge of JavaScript (we provide reading materials for those who are not familiar with JavaScript)"
      ],
      "description": "Become a Full-Stack Developer by building real-world projects with React, Next.js, Node.js, and REST APIs. In this course, you’ll learn modern web development step by step — from frontend basics to backend APIs.\nYou will start by mastering React fundamentals (JSX, Virtual DOM, Components, Props, State, Hooks, Events, Effects, Styling).\nNext, you’ll build apps with Next.js (Pages, Layouts, Routing, Navigation, Dynamic Segments, Server/Client Data Fetching, Suspense, Loading states).\nFinally, you’ll use Node.js to create REST APIs (HTTP core, Modules, Async/Await) and connect them to your frontend.\nBy the end of this course, you will know how to:\nBuild Frontend Apps with React\nConnect to third-party APIs including AI APIs\nDevelop Full-Stack projects with Next.js\nCreate REST APIs with Node.js\nWhat's in this course?\nREACT BASIC Module\nLearn the Core Skills of React. Work through Practical Examples.\nUnderstand React key concepts: JSX, DOM, Virtual DOM, Component-Based Architecture.\nSet up development environment (Browser, VS Code Editor, Node.js, npm).\nDebug React applications using Developer Tools.\nCreate Components and write JSX markup. Import & Export Components.\nShare Data between Components via Props and Events. Conditional rendering.\nStyling components via Inline Styles, CSS Files and CSS Modules. Alternative Approaches.\nUnderstand Component Life-Cycle. Props vs State vs Variables.\nREACT FORMS & API Modules\nBuild a functional To-Do List using Forms, Data Validation & API Integration.\nSet up React application via Vite.\nHandle Form Submission, store Form Data in the Component State.\nRender Lists in React. Controlled and Uncontrolled Components.\nImplement Filtering, Editing and Deleting List Items. Handle Input Fields Changes.\nForm Data Validation, Errors Handling via react-hook-form and yup libraries.\nAPI interaction via fetch and axios library. HTTP methods (GET, POST, PUT, DELETE).\nOrganizing of API calls. Handle API error mesages. Add Loading Spinner.\nCreate and using of React Custom Hooks. Using useEffect hook.\nAI CHATBOT Module\nBuild a real-time AI Chatbot with React.js, ChatGPT, Gemini AI & DeepSeek.\nGenerative AI and Pricing Models for popular AI API’s.\nCreate and style Chatbot Layout. Handle Chat Interactions via Component State.\nOverview of Popular AI Models. Getting API keys for AI API’s.\nConnect ChatGPT, Gemini and DeepSeek AI Models the for Chatting.\nImplement Streaming Messages. Handle and Debug API’s Errors.\nAdd support of Dark Mode, Markdown, Messages Auto-Scrolling and Auto-Resizable Inputs.\nBuild a Responsive Sidebar to Display All Chats with ability to Switch Between Them and Start New Chat Conversations.\nNEXTJS BASIC Module\nBuild server-side Contacts App with Next.js.\nLearn what Next.js is, why it’s popular, and how to set up your first project.\nExplore project structure, clean up starter code, and style your application.\nBuild Pages, Layouts, add Navigation, including Nested Pages and Layouts.\nWork with Dynamic Routes and Search Params to create flexible web apps.\nUnderstand how Server and Client Components work together in Full-Stack apps.\nFetch data in Server Components with Loading states and in Client Components with Suspense.\nNODEJS BASIC Module\nBuild REST API for Movies with Node.js.\nLearn what Node.js is, why it’s popular, and how to set up your first project\nInitialize a project with NPM and understand the difference between Node.js and the Browser\nExplore the Event Loop, work with Promises, and use Async/Await for asynchronous code\nUnderstand ES and CommonJS modules with practical code examples\nWork with the HTTP core module, REST APIs, URLs, Query Strings, and Environment Variables\nBuild complete REST API routes with GET, POST, PUT, DELETE, and filtering by query\nThis Course includes\nTheory and Practice: Lectures with many practical examples (3-10 min lessons duration).\nSource Code Examples: Full access to source code for all projects and exercises (practice on your own).\nUdemy Certificate: which you will receive after completing the course.\nSupport: If you have any questions, we will always be willing to answer them.\nMeet your instructor!\nDmytro Vasyliev - Senior Front-end Engineer with more than 10 years of professional experience in developing complex Web Applications. I have extensive experience with React and other frameworks, having used it in various projects to build dynamic and efficient user interfaces.\nDo you need to be concerned?\nThis course comes with a 30-day money-back guarantee.\nJoin our course today to learn how to build your first application in React!",
      "target_audience": [
        "Students who want to learn modern Full-Stack Web Development with React, Next.js, and Node.js.",
        "Beginners who already know JavaScript or React and want to become Full-Stack Developers.",
        "Frontend developers who want to add Backend Skills, build Full-stack apps with Next.js, and create REST APIs.",
        "Developers from other frameworks (Nuxt.js, Angular, Vue, Django) who want to explore React & Next.js."
      ]
    },
    {
      "title": "Build AI Content Generation SaaS with Laravel 12,ChatGPT API",
      "url": "https://www.udemy.com/course/ai-content-generation-saas-with-laravel-chatgpt-api/",
      "bio": "In This Course You Will Master AI Content Generation with Laravel 12 & ChatGPT API Build Complete SaaS Application A-Z",
      "objectives": [
        "Build AI Content Generation SaaS with Laravel 12 & ChatGPT API",
        "Build Basic Dynamic Company Website With Laravel 12",
        "Two-Factor Authentication",
        "Multi - User Authentication",
        "Setup Frontend and Backend Theme",
        "Setup ChatGpt API in Laravel Project",
        "Check ChatGpt API in Postman",
        "Generate Content with Templates",
        "Generate Content Export to Txt file",
        "Purchases PDF Invoice Page Setup",
        "Generate Content With AI",
        "Create AI Agent",
        "User Generate Documents",
        "User Package Upgrade Billing System Setup",
        "Build AI Chat Assistants",
        "Chat Conversation with AI Assistants",
        "Build Image Generate with ChatGpt API",
        "Build Text to Audio mp3 Generator with ChatGpt API",
        "User Access Limitations"
      ],
      "course_content": {},
      "requirements": [
        "You have to know basic PHP",
        "Basic HTML, CSS, Bootstrap",
        "Local Server : Xampp/Wampp/Vertrigo/Mamp",
        "Text Editor/IDE: Sublime Text, Visual Studio Code, PHPStrom etc"
      ],
      "description": "Unlock the Power of AI with Laravel 12 and ChatGPT API to Build a Cutting-Edge SaaS Application\nAre you ready to dive into the future of web development and DevOps? In this comprehensive Udemy course, Build AI Content SaaS with Laravel 12 & ChatGPT API for DevOps, you’ll learn to create a fully functional AI-powered content generation SaaS application from scratch. Designed for beginners to advanced developers, this course combines the robust Laravel 12 framework with the transformative capabilities of the ChatGPT API to build a scalable, secure, and innovative platform. Whether you’re a freelancer, entrepreneur, or DevOps enthusiast, this course will equip you with in-demand skills to excel in 2025’s AI-driven tech landscape.\nWhy Learn AI and ChatGPT API for DevOps?\nArtificial Intelligence is revolutionizing web development and DevOps. The ChatGPT API, powered by OpenAI, enables developers to integrate advanced AI features like content generation, chat assistants, and automation into applications. In 2025, businesses are investing heavily in AI-driven solutions, making skills in AI, Laravel, and DevOps highly sought-after (34 Web Development Trends In 2025 | LambdaTest). This course empowers you to build a SaaS platform that leverages AI for content creation, streamlining workflows, and enhancing user experiences, giving you a competitive edge in the job market or entrepreneurial ventures.\nWhat You’ll Learn\nThis hands-on course guides you step-by-step through building a complete AI Content Generation SaaS application, integrating Laravel 12, ChatGPT API, and DevOps practices. By the end, you’ll have a portfolio-worthy project and the skills to create modern, AI-powered applications. Here’s what you’ll master:\nBuild a Dynamic Company Website with Laravel 12: Create a professional, responsive website to serve as the foundation for your SaaS platform, using Laravel’s powerful MVC architecture and Blade templating.\nImplement Two-Factor and Multi-User Authentication: Secure your application with robust authentication systems, including two-factor authentication (2FA) and multi-user roles for different access levels.\nSet Up ChatGPT API in Laravel: Learn to integrate the ChatGPT API into your Laravel project, configuring API keys and testing endpoints using Postman for seamless connectivity.\nGenerate Content with Templates: Build reusable templates for generating dynamic content, such as blog titles, ideas, paragraphs, articles, grammar checkers, and text summaries, all powered by ChatGPT.\nExport Content to Text Files: Enable users to save generated content as downloadable .txt files, enhancing usability and functionality.\nCreate AI-Driven Content: Develop advanced AI content generation features, leveraging ChatGPT to produce high-quality, context-aware outputs for various use cases.\nBuild AI Agents and Chat Assistants: Create intelligent AI agents and interactive chat assistants to provide real-time user support and engagement within your SaaS platform.\nLive Chat Conversations: Implement live chat functionality with AI assistants, enabling dynamic, conversational user experiences.\nGenerate Images with ChatGPT API: Integrate image generation capabilities (via compatible APIs like DALL·E) to create visuals from text prompts, adding versatility to your platform.\nText-to-Audio MP3 Generator: Build a feature to convert text to audio files using AI, perfect for creating podcasts, voiceovers, or narrated content.\nDevOps Integration: Apply DevOps practices to streamline development, testing, and deployment, ensuring your SaaS app is scalable and production-ready.\nCourse Features\nPractical Projects: Build a complete AI Content Generation SaaS and a dynamic company website, ready to deploy or showcase in your portfolio.\nStep-by-Step Guidance: Follow clear, beginner-friendly tutorials that progress to advanced topics, suitable for all skill levels.\nDownloadable Resources: Access code snippets, templates, and setup guides to accelerate your learning.\nReal-World Applications: Learn to create features that businesses demand, such as AI content tools and chat assistants, aligned with 2025 trends (Top 15 Web Development Trends To Expect In 2025 | DigitalSilk).\nLifetime Access: Revisit lessons anytime to reinforce your skills or update your project with new features.\nWho This Course Is For\nWeb Developers: Enhance your Laravel skills and add AI expertise to your toolkit.\nDevOps Professionals: Learn to integrate AI into development workflows for efficient, scalable applications.\nEntrepreneurs: Build a marketable SaaS product to launch your own business.\nFreelancers: Stand out with in-demand skills in AI, Laravel, and DevOps.\nBeginners to Advanced Learners: No prior AI experience required—just basic knowledge of PHP and Laravel.",
      "target_audience": [
        "Developers eager to learn Laravel 12 and ChatGPT API through a practical project.",
        "How to Generate Content With ChatGPT API",
        "Interested to learn new Technology in modern era",
        "Professionals aiming to enhance their Laravel skills for career growth."
      ]
    },
    {
      "title": "Website Development With MODX CMS",
      "url": "https://www.udemy.com/course/website-development-with-modx-cms/",
      "bio": "Learn to create websites with MODX, from beginning to end, with no prior knowledge.",
      "objectives": [
        "Develop websites with MODX"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is MODX?",
          "Why is MODX better than WordPress"
        ],
        "Getting started with MODX": [
          "Setting up a server and installing MODX with the MODX cloud",
          "Installing MODX manually",
          "MODX admin panel (manager)",
          "Installing Extras (plugins)",
          "Output \"Hello World\" with MODX",
          "Creating our first template"
        ],
        "Creating your first MODX site": [
          "Adding an external CSS file",
          "Coding the header",
          "Dynamic navigation with Wayfinder",
          "MODX Chunks",
          "Template Variables - adding a hero text and image",
          "Creating different page templates and assigning a default one",
          "Friendly URLs",
          "Linking internal pages",
          "Adding a contact form with FormIt Extra",
          "Finishing the footer"
        ],
        "Intermediate MODX techniques": [
          "Content and resource types",
          "MODX Snippets",
          "Global variables with ClientConfig",
          "Grouping content with Collections Extra",
          "MODX site pre-launch checklist"
        ],
        "Bonus section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "Little PHP"
      ],
      "description": "Warning: I am no longer providing help or support for this course.\nTired of outdated MODX tutorials? Want a hands-on, practical approach to learning how to master the famous content management system (CMS)? Then this course is for you!\nWe are going to go from the basics like \"What is a CMS?\" to grouping data in Collections and launching our very first MODX site.\nYou don't need to have previous experience with a CMS in order to learn how to work with MODX for this course.\nAll examples are practical and taken from real-life MODX websites I have built.",
      "target_audience": [
        "WordPress developers",
        "Drupal Developers",
        "Freelance designers",
        "Freelance web developers",
        "Web design agencies employees"
      ]
    },
    {
      "title": "Markdown crash course with Obsidian, Hugo, and Ghost",
      "url": "https://www.udemy.com/course/markdown-crash-course-with-obsidian-hugo-and-ghost/",
      "bio": "Master Markdown and apply your knowledge to Obsidian for note taking, Hugo and Ghost for website creation",
      "objectives": [
        "Markdown basics and advanced uses",
        "How to write README files in git repositories",
        "Use Markdown to write notes in Obsidian",
        "Use Markdown to create static websites with Hugo",
        "Use Markdown to create blogs with Ghost"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "What is Markdown? and why should I learn it?",
          "Tools of the trade"
        ],
        "Markdown Basics": [
          "Headings",
          "Bold, Italics, and strikeout",
          "Horizontal lines",
          "Lists",
          "Tables",
          "Highlighting and code formatting",
          "Hyperlinks",
          "Images"
        ],
        "Markdown applications": [
          "Hugo",
          "Ghost",
          "Obsidian"
        ]
      },
      "requirements": [
        "Some technical background is preferred but not required.",
        "In the Hugo lecture, I assume that you have worked with the command line before (Windows, Linux, or mac)"
      ],
      "description": "Markdown is among the hottest trends today. Almost anything that has to do with technical writing is using Markdown for editing. The reason is simple; Markdown is very easy, less verbose than HTML and yet very powerful.\nWhether you are a technical writer, a developer, a DevOps engineer, or anyone who sees the potential of using Markdown for technical writing, this course was created specifically for you.\nThis class is divided into two main parts. The first one covers Markdown's syntax. For example, how Markdown deals with headers, how to insert tables, hyperlinks, images, how to create tables and more.\nThe second part of this course is about the practical use of Markdown. We cover three of the most well-known applications that rely on Markdown:\n- Obsidian - the famous note-taking app\n- Hugo - The blazingly fast state website generator (don't worry if you don't know what that is. We cover it in detail in an entire lecture).\n- Ghost - A content management system like WordPress but it relies on Markdown for writing posts.\nYou may notice that the course is relatively short. This is intentional. I know how precious your time is. I'm also a student myself and I find that many courses waste a lot of time just to appear lengthy with no real value. This course is not one of those. I only give you what you need to master the skill or the tool that I'm teaching.\nNow, feel free to watch the free preview lectures that I've made available. If you like what you see, then why don't you just hit the Enroll button? You have nothing to lose. You enjoy a 30-day money back guaranteed by Udemy. Go ahead and enroll now. I'll be waiting for you in lecture one.",
      "target_audience": [
        "Anyone who wants to learn technical writing",
        "Obsidian users who want to unlick the power of Markdown in notetaking",
        "IT professionals who want to know how to write professional-looking README files for online Git repositories"
      ]
    },
    {
      "title": "Build Hotel Booking App Using SpringBoot, React,Payment 2025",
      "url": "https://www.udemy.com/course/build-a-hotel-booking-platform-using-springboot-react-2025/",
      "bio": "Build a full-stack hotel booking and management app with Spring Boot, React, payments, email, auth, and notifications.",
      "objectives": [
        "Build a full-stack hotel booking platform using Spring Boot and React",
        "Implement secure JWT-based authentication and role-based authorization",
        "Integrate payment gateways for secure online transactions",
        "Automate email notifications",
        "Apply front-end security measures to protect sensitive data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Design Flow"
        ],
        "Project Setup and Core Architecture(Models, DTO's, Repositories, Exceptions)": [
          "Create Project & Add Dependencies",
          "Structure Packages",
          "Model Mapper Config",
          "Entities and Enums",
          "DTO's",
          "Repositories",
          "Exceptions"
        ],
        "Security (Implementing Application Security)": [
          "Auth User and Security User Details",
          "JWT(Json Web Token) Util",
          "Auth and Security Filter",
          "Cors Config"
        ],
        "Notification Module (Email Service)": [
          "Email Notification Service"
        ],
        "User Module (User Service, Controller and API Testing)": [
          "User Service",
          "User Controller",
          "User API Testing"
        ],
        "Room Module (Room Service, Controller, Api Testing)": [
          "Room Service",
          "Room Controller",
          "Room API Testing"
        ],
        "Booking Module (Booking Service, Controller and API Tests)": [
          "Booking Service",
          "Booking Controller",
          "Booking API Tests",
          "Modify RoomTypes"
        ],
        "Payment Module": [
          "Payment Service",
          "Payment Controller"
        ],
        "FRONTEND: Create Project, install Dependencies, Write API and Guard Service": [
          "Create Project & Add Dependency",
          "Structure Folder",
          "Api Service",
          "Guard Service"
        ],
        "Navigation & Auth Pages": [
          "Navbar & Footer",
          "Registration Page",
          "Login Page"
        ]
      },
      "requirements": [
        "Basic Knowledge of Spring Boot: Familiarity with Spring Boot is required to follow along with the back-end development sections. If you’re new to Spring Boot, I recommend taking my free beginner Spring Boot course available here on Udemy",
        "Basic JavaScript and React Understanding",
        "A Computer with Internet Access",
        "Tools and IDEs: Installation of tools like IntelliJ IDEA (or any preferred IDE for Java), Visual Studio Code (or your choice of IDE for React), and MySQL Workbench is recommended",
        "Enthusiasm to Learn"
      ],
      "description": "Are you ready to master full-stack development by building a professional hotel booking platform? This course is designed to take you step-by-step through creating a robust, secure, and feature-rich application using Spring Boot and React, with real-world tools and techniques for a complete development experience.\nWhat You'll Learn:\nBack-End Development: Build a secure and scalable API with Spring Boot for handling user authentication, hotel bookings, and payments.\nFront-End Development: Create a modern, responsive UI with React, ensuring a seamless user experience.\nAuthentication and Authorization: Implement JWT (JSON Web Token) for secure user authentication and role-based authorization.\nDatabase Design: Use MySQL for database management, with explanations of ERD diagrams and database relationships.\nPayment Integration: Seamlessly integrate payment gateways using Stripe for secure online transactions across the globe.\nEmail and Notifications: Automate email notifications with JavaMailSender.\nFrontend Security: Use CryptoJS to encrypt sensitive data, ensuring maximum security on the front end.\nDatabase Relationships: Understand and design complex relationships between entities like users, bookings, and payments in the database.\nWhy Choose This Course?\nThis course is packed with hands-on lessons, starting from project setup to deployment. By the end, you’ll have built a complete hotel booking platform with the following features:\nJWT-based authentication and secure role-based access.\nA fully functioning booking system with payment integration.\nAutomated email notifications and in-app real-time notifications.\nPayment Integration\nSecure front-end and back-end communication using CryptoJS and Spring Security.\nDatabase design principles with ERD diagrams and relationship modeling.\nWho Should Take This Course?\nAspiring developers looking to master full-stack development.\nDevelopers wanting to learn secure authentication, payment integration, and email systems.\nAnyone interested in building a hotel booking platform from scratch for personal or commercial use.\nAdditional Highlights:\nComprehensive project-based learning approach.\nReal-world tools like JWT, CryptoJS, and MySQL explained.\nDownloadable resources and a step-by-step guide.\nEnroll today and transform your skills into creating a fully functional, scalable, and secure hotel booking platform!",
      "target_audience": [
        "Back-End Developers",
        "Intermediate Developers",
        "Aspiring Full-Stack Developers",
        "Students and Enthusiasts",
        "If you’re looking to build your own hotel booking platform or similar systems"
      ]
    },
    {
      "title": "Fullstack Development with Angular17 SpringBoot3 Bootstrap5",
      "url": "https://www.udemy.com/course/fullstack-development-with-angular17-springboot3-bootstrap5/",
      "bio": "Become fullstack developer by building real world projects using Angular-17, Springboot-3 and Bootstrap-5",
      "objectives": [
        "You will learn about the concepts of Angular 17",
        "You will learn about the concepts of Springboot API development",
        "You will develop a complete frontend using Bootstrap 5 and Angular 17",
        "You will develop REST API using Springboot 3 and Maven and Java 17",
        "You will learn to use Postman tool",
        "You will learn to integrate the Angular app with Springboot REST API",
        "You will learn about debugging and troubleshooting techniques.",
        "You will get the complete source code"
      ],
      "course_content": {
        "Introduction & Installation": [
          "Course Introduction",
          "About your Instructor",
          "Introduction to Angular Framework",
          "Requirements for getting started",
          "Installing Nodejs and VS Code Editor"
        ],
        "Developing Backend REST API with Java 17 and SpringBoot 3": [
          "Installing Java and IDE",
          "Installing Postman Tool",
          "Installing MySQL Database Server",
          "Creating SpringBoot project with required dependencies",
          "Importing Project to IDE and Setting JDK",
          "Adding H2 Database Spring Data JPA configuration",
          "Creating the JPA Entity class with different fields",
          "Creating the DTO class for presentation layer",
          "Layered architecture and various packages",
          "Creating the Repository Interface",
          "Creating Controller class",
          "Developing POST API Endpoint",
          "Developing the GET All API endpoint",
          "Developing GET Detail API Endpoint",
          "Developing UPDATE API Endpoint",
          "Developing DELETE API and PathVariable VS RequestParam",
          "Return 204 as status code after deletion",
          "Developing PATCH API Endpoint",
          "Declaring the Service Layer Abstract Methods",
          "Adding Service Impl methods and Integration with Controller",
          "Saving the Data into the Database using Repository",
          "Getting All Data From the Database using Repository",
          "Get Detail from Database using Repository",
          "Full Update in Database using Repository",
          "Partial Update in Database using Repository",
          "Delete data from Database using Repository",
          "Implement Search functionality End to End",
          "Test CREATE and GET ALL API with POSTMAN Tool",
          "Setting Postman Variable and Testing GET Detail API",
          "Testing Search API",
          "Testing Full Update, Partial Update and Delete API",
          "Code Improvement to avoid returning null response",
          "Creating Converter to make code reusable",
          "Testing the complete functionality",
          "Create Database on MySQL DB Server",
          "Profiles in Springboot, Setup MySQL DB Profile",
          "Concept of Spring Profile",
          "Testing All APIs with MySQL Database",
          "Enabling CORS"
        ],
        "Developing Frontend with Angular 17 and Integrating with Springboot REST API": [
          "Generating new angular app",
          "Opening the project in VS Code editor",
          "Installing bootstrap sweetalert2 and axios",
          "How Angular works and various files and folders",
          "Setting up Bootstrap and using it",
          "Generate Environment files and Add different configurations",
          "Update main.ts file with environment and axios configurations",
          "Create all the required components with ng commands",
          "Why use Service and Generate Service class",
          "What is Interface in typescript and generating new interface",
          "Adding fields to interface based on REST API",
          "Adding functions for all items and item details in Service class",
          "Adding functions for create item, update item, delete item in Service class",
          "Create new module",
          "Add configuration to the newly created Item Module",
          "Adding Routing for the Item module and components",
          "Registering Custom Module to App module",
          "Updating App Component and Testing the Routing",
          "Calling Get All Items API from Overview Items component typescript file",
          "Working of styling the Items Overview component",
          "Looping the items array an testing the functionality",
          "Implementing the Delete Item functionality",
          "Working on Create Item Typescript changes to make API call",
          "Working on the Markup and Styling of Create Item functionality",
          "Testing the Create Item functionality",
          "Working on Edit Item typescript file",
          "Debugging and fixing the runtime error",
          "Implementing the Update Item function the component",
          "Working on Html of edit item and debugging and testing",
          "Working on Item Details functionality typescript changes",
          "Showing Item Detail data on the page"
        ],
        "Source code": [
          "Code base"
        ]
      },
      "requirements": [
        "Basics of HTML, CSS, JavaScript and Java"
      ],
      "description": "In this course you will learn to develop fullstack applications using Angular-17, Springboot-3, Bootstrap-5 and MySQL.\nYou will learn to troubleshoot and debug end to end and fix issue.\nYou will also get the complete source code.\nFull-stack development with Angular, Spring Boot, and Bootstrap combines robust technologies to create versatile and efficient web applications. Angular, a TypeScript-based front-end framework, ensures dynamic and responsive user interfaces, while Spring Boot, a Java-based framework, streamlines server-side development with its simplicity and scalability. Bootstrap, a front-end framework, enhances the application's design and responsiveness, facilitating a seamless user experience across devices.\nThis technology stack's future job prospects are promising, as businesses increasingly prioritize web applications that deliver both functionality and a polished user interface. Full-stack developers versed in Angular, Spring Boot, and Bootstrap possess a valuable skill set that aligns with industry demands. The modularity and flexibility of these technologies allow developers to adapt to evolving market needs, making them sought-after candidates.\nFurthermore, the combination of Angular, Spring Boot, and Bootstrap supports the development of scalable and maintainable applications, contributing to long-term viability. As digital transformation accelerates across industries, the demand for skilled full-stack developers is likely to grow. Professionals proficient in this stack can expect to find opportunities in various sectors, ranging from e-commerce and finance to healthcare and beyond. In essence, mastering Full-stack development with Angular, Spring Boot, and Bootstrap positions individuals for a dynamic and prosperous career in the ever-evolving landscape of web development.",
      "target_audience": [
        "Anyone who wants to develop fullstack applications using Angular and Springboot"
      ]
    },
    {
      "title": "Test Driven Stripe Checkout with Laravel",
      "url": "https://www.udemy.com/course/test-driven-stripe-checkout-with-laravel/",
      "bio": "Learn how to integrate a third party API using Test Driven Development",
      "objectives": [
        "Create Feature & Unit tests for your projects",
        "Apply Test Driven Development best practices",
        "Implement a simple shopping cart in session",
        "Create a checkout page using Stripe Checkout API",
        "Create integration tests for Stripe's API",
        "Create a simple store application"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Project Setup",
          "The First Test",
          "Passing The Test"
        ],
        "Shopping Cart": [
          "Testing The Cart",
          "The Cart View",
          "The Cart Class"
        ],
        "Purchases": [
          "Purchase Test",
          "Purchase Products",
          "Fake Payments"
        ],
        "Orders": [
          "Create Orders",
          "Order Products"
        ],
        "Payments": [
          "Stripe Payments",
          "Real Charges"
        ],
        "User Interface": [
          "Product List",
          "Cart Content",
          "Checkout",
          "Order Confirmation"
        ],
        "Conclusion": [
          "Thank You!"
        ]
      },
      "requirements": [
        "You should be familiar with Laravel 5.5 at a beginner level.",
        "You should have Laravel Homestead already installed"
      ],
      "description": "Integrating a third party API into your project can be complicated. Even more so if you want to use Test Driven Development. In this course we will examine a simple approach to test your integration with Stripe\nCreate a Shopping Cart with Stripe Checkout using TDD and Laravel\nBy the end of this course, you will acquire sufficient knowledge on:\nFeature, Unit and Integration Testing\nTest Driven Development\nStripe API\nDevelop faster and deliver better products\nBy using Test Driven Development and integration testing, you will feel much more confident about your final product and its interactions with a third party API, knowing that it has been thoroughly tested and it works as intended.",
      "target_audience": [
        "PHP developers who want to apply Test Driven Development techniques in Laravel",
        "PHP developers that want to use Stripe Checkout as their payment service"
      ]
    },
    {
      "title": "Docker Architecture and Containers Hands On",
      "url": "https://www.udemy.com/course/docker-containers-in-depth/",
      "bio": "Learn Docker Architecture and from Microsoft Certified Trainer with 22 years of experience",
      "objectives": [
        "Perfect understanding of Containers and Docker Architecture and Taxonomy",
        "Use Windows Images and Container",
        "Develop Docker Custom Images for .NET Core Applications",
        "Understand and use Multi-Stage Builds",
        "Use Docker Volume for sharing and persisting data",
        "Run Multi-container applications using Docker Compose",
        "Docker Registry - Docker Hub and Microsoft Azure Container Registry"
      ],
      "course_content": {
        "Introduction to Docker": [
          "What is Virtual Machine"
        ],
        "Containers and Comparision with VM": [
          "Containers and Comparision with VM"
        ],
        "What is Docker and its Benefits": [
          "What is Docker and its Benefits"
        ],
        "Docker Architecture and Taxonomy": [
          "Docker Architecture and Taxonomy"
        ],
        "Docker objects and related terms": [
          "Docker objects and related terms"
        ],
        "Working with Docker image and Containers": [
          "Installing Docker for Windows"
        ],
        "Understanding and Pulling Windows Images": [
          "Understanding and Pulling Windows Images"
        ],
        "Executing Commands using Windows Containers": [
          "Executing Commands using Windows Containers"
        ],
        "Interactively Running a Container": [
          "Interactively Running a Container"
        ],
        "Commit Container to Create an Image": [
          "Commit Container to Create an Image"
        ]
      },
      "requirements": [
        "Programming using C#",
        "Visual Studio Code and Instructions to Install will be provided",
        "Docker for Windows and Instructions to Install will be provided."
      ],
      "description": "Docker is an open platform for developing, shipping, and running applications. The Docker platform uses the Docker Engine to quickly build and package apps as Docker images created using files written in the Docker file format that then is deployed and run in a layered container.\n\n\nIt's the most comprehensive course covering every topic of Docker on Windows and Lynx. Every module of this course is having practical demos of the in-depth concepts covered.\n\n\nThe specialty of this course is that all topics are covered from basic to advanced level and in very simple language which anyone can understand.\n\n\nOn completion of this course you will be ready to build and deploy your applications in Docker Container.\n\n\nTrust me I will create your love towards Docker which has already become the most important part of Application Development and DevOps Lifecycle.\nSo, why not start now and get ready for something impeccable and unavoidable.\n\n\nWish You Happy Learning.",
      "target_audience": [
        "C# Programmers looking for building Modern Applications",
        "It's the first step towards learning Microservices based application."
      ]
    },
    {
      "title": "The Wordpress Course",
      "url": "https://www.udemy.com/course/the-wordpress-course/",
      "bio": "Learn the fundamentals to design your own websites using Wordpress, Elementor, and Astra so you can take on clients.",
      "objectives": [
        "How to custom design Wordpress websites for your brands and clients.",
        "How to setup Wordpress locally on your computer for FREE.",
        "How to design, build, and deploy responsive Wordpress websites that work on ever device (web, tablet, mobile).",
        "Different Themes such as Wordpress 2020 and Astra.",
        "Different design, email, backup, migration, and security Plug-ins.",
        "How to design pages with Elementor and Elementor Pro.",
        "Differences between Wordpress dot com and Wordpress dot org.",
        "Resources to get free and premium themes and plug-ins.",
        "How to add animations to elements on a page.",
        "Lectures on different Wordpress concepts and features."
      ],
      "course_content": {
        "Introduction to Course": [
          "Overview of Course"
        ],
        "What is Wordpress?": [
          "What is Wordpress.com?",
          "Login to Wordpress.com",
          "What is Wordpress.org?"
        ],
        "Local by Flywheel": [
          "Download Local by Flywheel",
          "Install Local",
          "Create new Wordpress Site",
          "Explore New Local Website",
          "View Created Site"
        ],
        "Wordpress Administrative Portal": [
          "Dashboard",
          "Posts",
          "Media",
          "Pages",
          "Comments",
          "Appearance",
          "Plugins",
          "Users",
          "Tools",
          "Settings"
        ],
        "Build a Site using Wordpress 2020 Theme and Elementor": [
          "Build a Coming Soon Page",
          "Update Coming Soon Page",
          "Build a Home Page",
          "Build an About Page",
          "Display About Navigation Menu Link",
          "Build a Services Page",
          "Build a Contact Page",
          "Clean Up Site Part 1",
          "Clean Up Site Part 2",
          "Clean Up Site Part 3",
          "Add a Blog Page"
        ],
        "Themes In-depth": [
          "Free Themes",
          "Display Blog with Free Theme",
          "Premium Themes",
          "Elementor Template Kits",
          "Astra Theme (Free)"
        ],
        "Plugins In-depth": [
          "Elementor Plugin",
          "SEO Plugin",
          "Backups Plugin",
          "Email Plugin",
          "Security Plugin",
          "Migration Plugin",
          "Contact Form Plugin"
        ],
        "Hosting": [
          "Wordpress Hosting"
        ],
        "Resources": [
          "Wordpress.org and Wordpress.com Links",
          "Elementor and Elementor Pro Links",
          "Redcel.io for free Consultation on your Product",
          "Envato Elements Link for Assets"
        ],
        "Extend Website": [
          "Elementor Pro Plugin",
          "Elementor Pro Header",
          "Elementor Pro Footer",
          "Update Blog with Astra Theme"
        ]
      },
      "requirements": [
        "Have a computer (PC or Mac).",
        "Have access to internet connection such as WiFi.",
        "No Prior Knowledge of Wordpress is needed.",
        "No coding experience!",
        "No need to worry about domains and hosting as this course explains that.",
        "Be motivated to want to create a Wordpress website."
      ],
      "description": "The Wordpress Course - Get up and running without the fluff.\nWith technology constantly changing, Wordpress has been around for many years and will continue to be one of the main ways for websites to be developed. More than 1/3 of all websites on the internet are built on Wordpress. With the plethora of themes both free and premium, plug-ins, and different ways to customize a Wordpress website leaves many people hesitant to spend time learning this skill set.\nIn this Course you will be able to learn what Wordpress is, why you should learn it, and quickly get up and running building a site you can launch and add to your portfolio. I will teach you this all within 3 hours.\nNOTE: This course will always be updated to cover the latest version of WordPress. Covers WordPress 5.0 and later.\nThe goal of this course is to provide anyone with an invaluable skill set to quickly learn how to make amazing Wordpress websites without any code. In this course I will take you on a step-by-step journey learning new technologies without the need to spend countless hours prepping. The Wordpress course assumes no prior knowledge to building or designing websites which allows me to teach you the essentials needed without the added fluff.\nAll you will need is a computer and internet connection. Thats it!\nI will walk you through creating a Wordpress website using amazing themes and plug-ins with a FREE Wordpress environment that you can install on your computer saving you costs on hosting and domain name purchasing. This course also provides additional lectures if you decide you want to host and launch your website.\nThis course uses the Wordpress 2020 and Astra themes with a free plug-in Elementor to show you do not have to be a developer in order to make custom websites for your brands or clients.\nWhat will I learn?\nIntroduction to Course\nWhat is Wordpress\nLocal by Flywheel\nWordpress Administrative Portal\nBuild a Site using Wordpress 2020 Theme and Astra\nThemes In-depth\nPlugins In-depth\nHosting\nResources\nExtend Website\nYou will be guided through the fundamentals without the extraneous detail so you can get up and running quickly building Wordpress websites from start to finish. Information covered will consist of how to create beautiful, responsive designs that will work across all devices showing off uniqueness and professionalism.\nThere are no additional costs in the course. Each section progresses on the knowledge necessary to start designing a Wordpress website while providing additional information and bonus lectures on if you were to upgrade to premium themes and plug-ins.\nThis course is taught by Wordpress teacher Samuel Bifalco, who has a decade of experience product managing websites and mobile applications spanning an array of frameworks, libraries, and technologies. In the last five years many Wordpress websites have been custom developed using what you will learn in this course to grow your brand and client presence.",
      "target_audience": [
        "Beginner Wordpress product managers, business professionals, designers, and developers.",
        "An Entrepreneur wanting to learn a new skill to build a personal site for a brand or take extend their services and take on clients.",
        "Designers that want to use Wordpress to create beautiful looking websites.",
        "Developers wanting to design websites without code.",
        "Learn a skill without paying any additional costs.",
        "Learn Wordpress quickly without the fluff.",
        "Frustrated people spending long hours learning tutorials, this course is 4:26 minutes.",
        "Learn how to make money using your new skill."
      ]
    },
    {
      "title": "How To Add Google Authentication To a Website",
      "url": "https://www.udemy.com/course/how-to-add-google-authentication-to-a-website/",
      "bio": "Create a login on any website using any Google account and capture all the information you need.",
      "objectives": [
        "To create a Google Login system for a website",
        "To understand how to apply these skills to any website"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction"
        ],
        "How To Add Google Authentication To a Website": [
          "Google Keys",
          "Create a Database",
          "Structure",
          "Composer",
          "Database",
          "Setting Up Google Authentication",
          "Markup",
          "Signing In",
          "Signing Out",
          "Storing Users"
        ],
        "Conclusion": [
          "Finishing Up"
        ]
      },
      "requirements": [
        "A computer"
      ],
      "description": "Have you ever logged in to a website for the first time by simply clicking a 'Signin with Google' button? Ever wonder how they did that? This course walks you through the process of developing an integrated Google login system for any website from scratch.\nThis course includes everything you'll ever need to know about creating an integrated Google Signin system, including source files to make the development process more efficient. You don't even have to write the code yourself.\nA basic knowledge of web development is suggested for this course. The technologies used in this course are PHP and MySQL.",
      "target_audience": [
        "Web developers",
        "Entrepreneurs",
        "Back-end developers"
      ]
    },
    {
      "title": "OpenAI API with Node.JS Bootcamp: ChatGPT API, GPT-4, DALL·E",
      "url": "https://www.udemy.com/course/openai-nodejs-masterclass/",
      "bio": "Explore the Power of AI in NodeJS: Learn GPT-4, Prompt Engineering, DALL·E 3, Whisper, Fine-tuning and More!",
      "objectives": [
        "Understanding of the OpenAI Ecosystem",
        "Integration of OpenAI Technologies in NodeJS Applications",
        "Prompt Engineering & GPT Parameters",
        "Fine-Tuning OpenAI Models",
        "Building Visual Applications with DALL-E 2 & 3",
        "Create Voice-to-Text and Text-to-Voice using Whisper and TTS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Software Installations": [
          "Installing Visual Studio Code",
          "Installing Node.js and NPM",
          "Installing OpenAI library"
        ],
        "Configuration and Overview": [
          "Configuring and Getting OpenAI API Keys",
          "Overview of the Models Part 1",
          "Overview of the Models Part 2",
          "Note: Recent Updates from OpenAI"
        ],
        "Text-based Models [GPT-4, GPT-3.5 & More]": [
          "Interacting with Text-based Models Part 1",
          "Interacting with Text-based Models Part 2",
          "GPT 4 & GPT 4 Vision",
          "Streaming and Chat Completion Chunks",
          "GPT Parameters - Temperature, Top-p, Frequency Penalty, Presence Penalty, etc."
        ],
        "Prompt Engineering": [
          "Basics of Prompt Engineering",
          "Prompt Engineering Overview and Techniques",
          "Delimiters in Prompt Engineering",
          "Structured Outputs in Prompt Engineering",
          "Structured Outputs - Practical Example (Pizza Delivery)",
          "Few Shot Prompts, Zero Shot CoT, Self-Consistency, etc."
        ],
        "Whisper & TTS": [
          "Whisper API - Introduction and Usage",
          "Whisper API - Pizza Delivery Example",
          "Text to Speech (TTS) API"
        ],
        "DALL·E 2 & 3": [
          "DALL·E Introduction and Overview",
          "Creating Images using DALL·E API",
          "Creating Better Images using DALL·E",
          "Editing Images using DALL·E API",
          "Creating Variations using DALL·E API",
          "A Peek at DALL·E 3"
        ],
        "Fine-tuning": [
          "Introduction to Fine-tuning",
          "Preparing Datasets",
          "Uploading Datasets",
          "Creating a Fine-tune Job",
          "Using the Fine-tuned Model"
        ]
      },
      "requirements": [
        "Basics of JavaScript Programming Language"
      ],
      "description": "Transform Your NodeJS Applications with AI: Master OpenAI's APIs including GPT-4, GPT-4 Vision, DALL-E, and Whisper\nDive into the realm of AI with the OpenAI NodeJS Masterclass, a comprehensive course designed to equip you with the skills to integrate OpenAI's groundbreaking APIs into your NodeJS applications. This course, freshly recorded with the latest features of GPT-4, offers an in-depth exploration of the OpenAI ecosystem, tailored for NodeJS developers.\nWhat You Will Learn:\nUnderstanding OpenAI Ecosystem: Gain a solid foundation in the capabilities of OpenAI's suite, including GPT 4, DALL-E, and Whisper.\nNodeJS and OpenAI API Integration: Learn to seamlessly incorporate OpenAI APIs into your NodeJS projects, managing API calls and responses effectively.\nPrompt Engineering: Hone your skills in crafting prompts that leverage AI models for improved outputs in diverse scenarios.\nFine-Tuning AI Models for Specific Needs: Learn to customize OpenAI models for particular requirements, enhancing their effectiveness in your applications.\nGPT Parameters: Master the art of tweaking AI parameters such as Temperature, Frequency Penalty and Top-p, ensuring tailored responses from your AI models.\nVisual Applications with DALL-E: Discover how to use DALL-E APIs to create unique images and artworks directly within NodeJS applications.\nVoice and Text Interactions with Whisper: Implement text-to-voice and voice-to-text features to enhance user interaction and accessibility in your projects.\nWhy This Course?\nThis provides an extensive understanding and practical knowledge of OpenAI's APIs essential for NodeJS developers. You'll explore the intricacies of integrating AI into web applications, enhancing user experience, and unlocking new possibilities in your projects.\nWho Should Enroll:\nNodeJS developers seeking to integrate AI into their applications\nSoftware engineers and full-stack developers wanting to add AI capabilities to their skillset.\nEnthusiasts and hobbyists interested in applying AI in web technologies.\nEntrepreneurs and startup teams aiming to leverage AI for innovative product features.\nStudents and academic researchers looking to deepen their AI integration knowledge.\nAnalysts and data scientists interested in the application of AI in data analysis and visualization.\nEmbark on Your AI Journey:\nJoin the OpenAI NodeJS Masterclass and start transforming your NodeJS projects with the power of AI. Enroll today to step into the future of AI-driven development!",
      "target_audience": [
        "NodeJS/JavaScript Developers looking to integrate AI capabilities into their web applications or services."
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/html-and-css-from-basic-to-advanced/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Advanced Java Programming with Eclipse",
      "url": "https://www.udemy.com/course/advanced-java-programming-with-eclipse/",
      "bio": "Learn the Sought After Java Skills you Need for a Programming Career",
      "objectives": [
        "Learn many advanced Java methods",
        "Get comfortable with the popular IDE, Eclipse",
        "Learn how to scan, process and store data",
        "Read and write to documents through code and user input",
        "OOP, Object Orientated Programming, where you create your own objects and classes"
      ],
      "course_content": {
        "Advanced Methods": [
          "Introduction to Course",
          "Introduction to Section 1",
          "The toUpperCase Method",
          "The toLowerCase Method",
          "The isLetter method and Boolean Variables",
          "The isDigit Method",
          "The isWhiteSpace Method",
          "The Length Method",
          "The compareTo Method",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "Substring and indexOf": [
          "Introduction",
          "An Introduction to the Substring",
          "Substring Practice",
          "An Introduction to the indexOf method",
          "indexOf Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "The Scanner": [
          "Introduction",
          "Scanner Introduction",
          "Scanner Practice",
          "Changing Delimiters and Basic Error",
          "File Reading Introduction",
          "File Reading Preparation",
          "File Reading Practice",
          "Print Writer Introduction",
          "Print Writer Practice",
          "The Try and Catch Statement",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "Arrays and the Split Method": [
          "Introduction",
          "Arrays Introduction",
          "One-Dimensional Array Practice",
          "Two-Dimensional Array Practice",
          "Split Method Introduction",
          "Split Method Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "Object Orientated Programming": [
          "Introduction",
          "An Introduction to Classes and OOP",
          "Class and Void Method Creation",
          "Typed Method Creation",
          "Private Variables Practice",
          "Scanner Method and Object Practice",
          "OOP Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "You will need a computer",
        "The Eclipse IDE",
        "And know the basic fundamentals on Java programming"
      ],
      "description": "Welcome to my Advanced course on Java Programming with Eclipse!\nMy name is Matthew Dewey. I am an experienced programmer, having received several accolades on programming in my formal education as well as taught several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in an easy and fun manner. In this course I do just that and with one of the most useful IDEs coupled with the Java programming language.\nJava, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving Java over any other language. Of course, it goes without saying that Java is an excellent language, but do you know what is required of you in a programming career?\nThere are many skills in programming that are required in any form of the field, but what I plan to to teach you in this course is exactly what you will find on many job requirements as well as many advanced methods that will no doubt help you in the future. I speak of OOP, Object Orientated Programming, in addition I included data processing and storage.\nData is important in the technological world that we live in, but what we use is processed data, so you, as the budding programmer need to know this as well. I show you how to scan through large amounts of data with ease as well as extract specific types and process it as well.\nWhat about Eclipse? A popular, widely used IDE that many large applications have been created in over the years. Do you know how to use it to its full potential? Well, in this course we will go through several projects that will help you get truly comfortable with the IDE as well as more adept at program creation.\nIn short, you will learn:\nAdvanced Java Methods\nData Collection\nData Processing and Storage\nData Extraction\nData Scanning\nOOP, Object Orientated Programming\nand BONUS tips and methods!\nGo no further if you're looking for the course that will take you from a novice to an expert! With my course I can guarantee that the knowledge you learn will help you in your career or further studies on Java programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Java programmers seeking advanced knowledge on the Java programming language",
        "Java programmers looking to advance in the field"
      ]
    },
    {
      "title": "Django Rest Framework with Docker: A Practical Guide",
      "url": "https://www.udemy.com/course/django-admin/",
      "bio": "Django, Docker, Authentication and Authorisation, Upload Images, Export CSV Files",
      "objectives": [
        "How to create APIs with Django Rest Framework",
        "Use Docker",
        "Create protected routes",
        "Login with HttpOnly Cookies",
        "Use APIViews, ViewSets, Generic API Views",
        "Authorize users for different routes",
        "Upload Images",
        "Export CSV files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Django": [
          "Installation",
          "Docker",
          "Frontend",
          "Migrations",
          "Rest API",
          "Models",
          "Serializers",
          "Write Only Fields",
          "Hashing Passwords",
          "Login",
          "Generate JWT Token",
          "Getting the Authenticated User",
          "Logout",
          "Foreign Keys",
          "Fixtures",
          "Getting Permissions",
          "ViewSets",
          "Roles",
          "Related Fields",
          "Completing Roles",
          "Generic Views",
          "Pagination",
          "Update Request Data",
          "Profile",
          "User Permissions",
          "Products",
          "Product Routes",
          "Uploading Images",
          "Orders",
          "Serializer Method Fields",
          "Export CSV",
          "Raw SQL Queries",
          "View Permissions",
          "CORS",
          "Testing the Frontend"
        ]
      },
      "requirements": [
        "Beginner Python Developers"
      ],
      "description": "Learn how to create an Admin App using Django Rest Framework.\nIn this tutorial you will learn:\nHow to create APIs with Django Rest Framework\nUse Docker\nCreate protected routes\nLogin with HttpOnly Cookies\nUse APIViews, ViewSets, Generic API Views\nAuthorize users for different routes\nUpload Images\nExport CSV files\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner Python Developers"
      ]
    },
    {
      "title": "Build fullstack app with Node.Js, Loopback4, React and Hooks",
      "url": "https://www.udemy.com/course/loopback-and-react/",
      "bio": "Modern ways to build full-stack web applications with Node.js, Loopback 4, Typescript, React, Mysql, React Hooks",
      "objectives": [
        "Build REST APIs with Typescript",
        "Build APIs with Loopback 4",
        "Build Frontend with React",
        "Learn React Hooks",
        "Learn Redux in depth",
        "Build full-stack application with React, React Hooks, Redux, Nodejs",
        "Connect Frontend app with Backend Application",
        "Typescript Fundamentals"
      ],
      "course_content": {
        "Nodejs Basics (Optional)": [
          "Introduction to Nodejs",
          "Sending HTML in Response",
          "Reading and Writing Files",
          "Creating Custom Module"
        ],
        "NPM The Node Package Manager": [
          "Running Node App using Npm scripts",
          "Installing External Dependencies",
          "Package Dependencies",
          "Sementic Versioning",
          "Listing package details",
          "Upgrading Local Packages",
          "Publish your custom Module to NPM",
          "Updating your published module"
        ],
        "Express Basics and REST API BASICS": [
          "Introduction",
          "What is REST API",
          "Creating Web Server in Express",
          "Set Enviroment Variables",
          "Route Parameters",
          "GET API Endpoint",
          "POST API Endpoint",
          "DELETE API Endpoint",
          "Update API Endpoint"
        ],
        "Typescript Fundamentals": [
          "Typescript Setup",
          "Basic Types",
          "Types in Typescript",
          "Operators, Decisions and Loops",
          "Functions Basics",
          "Interfaces",
          "Classes",
          "Modules",
          "Generics Types",
          "Generics in more depth"
        ],
        "Typescript Generics": [
          "01-What are Generics",
          "02-Typescript Setup and Installation",
          "03-Generic Function",
          "04-Generic Function T Array Type",
          "05-Generic Function with Multiple Type Variables",
          "06-Generic Constraints",
          "07-Generic Interfaces to describe Object Properties",
          "08-Create Interface to describe Function Type",
          "09-Generic Classes and Interfaces"
        ],
        "Typescript Decorators": [
          "01-Introduction-to-decorators",
          "02-Arguments in Method Decorators",
          "03-Configurable Decorator using Decorator Factory",
          "04-Property-Decorator",
          "05-Parameter-Decorator",
          "06-Class Decorator"
        ],
        "Getting started with Loopback 4": [
          "Introduction to Loopback 4",
          "Getting started with Loopback 4"
        ],
        "CRUD with Loopback 4": [
          "01-What is Loopback Model",
          "02-Creating-your-first-Loopback-model",
          "03-Creating Datasource",
          "04-Creating Repository for CRUD Operations",
          "05-Creating Controller to define REST API Operations",
          "06-Test Loopback REST APIs using Explorer",
          "07-Digging into Loopback Repositories"
        ],
        "Connecting with Databases": [
          "01-Installing-MysQL-Server",
          "02-Connecting Mysql Database with Loopback",
          "03-Set id property to Auto-Increment"
        ],
        "Relations": [
          "01-Implement HasMany Relation",
          "02-Implement BelongsTo Relation",
          "03-Implement HasOne Relationship"
        ]
      },
      "requirements": [
        "Knowledge of Javascript is important"
      ],
      "description": "LoopBack is an award-winning, highly extensible, open-source Node.js and TypeScript framework based on Express. It enables you to quickly create APIs and microservices composed from backend systems such as databases and SOAP or REST services.\nThe diagram below demonstrates how LoopBack serves as a composition bridge between incoming requests and outgoing integrations. It also shows the different personas who are interested in various capabilities provided by LoopBack.\nReact is an open-source, front end, JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications\nHooks are the new feature introduced in the React 16.8 version. It allows you to use state and other React features without writing a class. Hooks are the functions which \"hook into\" React state and lifecycle features from function components. It does not work inside classes.\nTypeScript extends JavaScript by adding types.\nBy understanding JavaScript, TypeScript saves you time catching errors and providing fixes before you run code.\nAny browser, any OS, anywhere JavaScript runs. Entirely Open Source.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the Chrome V8 engine and executes JavaScript code outside a web browser\nMySQL is an open-source relational database management system. Its name is a combination of \"My\", the name of co-founder Michael Widenius's daughter, and \"SQL\", the abbreviation for Structured Query Language.\nWe are going to combine these tools and build a full-stack sample application. By the end of this course, you will be able to contribute to any open source project in MERN stack. You will learn the real world applications of React, Readux, Hooks and Node.js",
      "target_audience": [
        "Developers who want to learn how to build fullstack applications with Javascript",
        "Developers who want to learn MERN Stack application",
        "Developers who want to learn how to build backend apis with Typescript"
      ]
    },
    {
      "title": "RESTful Web API Design with Node.js - Second Edition",
      "url": "https://www.udemy.com/course/restful-web-api-design-with-nodejs-second-edition/",
      "bio": "Explore the practical side of REST to build data-centric applications with Node",
      "objectives": [
        "Know what an API is and how it is used in client-server communication",
        "Explore HTTP requests and responses and find out about the various fields that make up these requests and responses",
        "Understand the architectural constraints and properties that make an API RESTful",
        "Use Twitter’s API to tweet and search for tweets",
        "Store Twitter’s data in our database to minimize the use of Twitter’s API",
        "Use Async.js to handle Twitter’s API constraints",
        "Test APIs using Postman and Apache Benchmark",
        "Build the API on the server using Express.js and MongoDB",
        "Find out about the Facebook Graph API, and its structure, resources, and permissions",
        "Be introduced to GitHub API, its use of different representations, the PATCH verb, HATEOAS, and conditional requests",
        "Get security tips to prevent session hijacking vulnerabilities"
      ],
      "course_content": {
        "REST Fundamentals": [
          "The Course Overview",
          "What Is an API?",
          "Communication via HTTP",
          "Identifying REST Resources",
          "Properties of RESTful APIs",
          "Setting Up the Environment"
        ],
        "Consuming a RESTful API": [
          "A Look at OAuth 1.0a",
          "Sample Application Code Architecture",
          "Creating an OAuth Login Request",
          "Getting an Access Token",
          "Exploring Twitter’s REST API",
          "Accessing Cursored Collections with Async.js",
          "Choosing a Database",
          "Saving Data in MongoDB"
        ],
        "Building a RESTful API": [
          "Designing the API Specifications",
          "Creating the API Handlers",
          "Acceptance Testing with Postman",
          "Load Testing and Going Multicore",
          "Testing User-Perceived Performance"
        ],
        "APIs in the Real World": [
          "Facebook Graph API",
          "GitHub API",
          "IFTTT"
        ],
        "Best Practices": [
          "Security Considerations",
          "Documentation",
          "Versioning",
          "Caching",
          "Reliability"
        ]
      },
      "requirements": [
        "Knowledge of REST or HTTP is not essential as this course provides all the background information required to get you started."
      ],
      "description": "RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet. Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end.\nThis video course gives you an overview of a RESTful API and goes through the logical steps of building one. It explores three different APIs, focusing on their similarities and differences to effectively implement one.\nWe’ll start off by defining APIs, showing you how they can be built on top of HTTP, and listing the properties that make an API RESTful. We will develop Twitter Notes, a web application that lets its users leave notes for their Twitter friends. We will use Twitter’s API to implement a login flow and then design a web API. In addition to using Twitter’s API, we will take a closer look at two other real-world APIs—Facebook API and GitHub API. Finally, we’ll look at some best practices to keep the APIs secure, maintainable, and performing.\nBy the end of this course, you will have a good grasp of APIs, HTTP, REST, OAuth 1.0a, API testing, and site reliability, performance, and security. Since the course explores three different REST APIs, you will reach a level where you will be comfortable using any RESTful API, even if it does not have an SDK.\nAbout the Authors\nSaleh Hamadeh works as a full-stack software developer at Redfin, a startup that it is using technology to reinvent real-estate. Earlier in his career, Saleh worked at Yahoo! and BrainJocks. During his college years, Saleh served as president of gt-web dev, a Georgia Tech student organization that teaches web development. He is passionate about the future of the web and wants to continue to work and learn in this field.",
      "target_audience": [
        "This video course is for Node.js developers who know JavaScript and are familiar with HTML and CSS."
      ]
    },
    {
      "title": "Become a ReactJS Developer in 30 days (2025)",
      "url": "https://www.udemy.com/course/master-reactjs-in-30-days/",
      "bio": "Master ReactJS step-by-step in 30 days.",
      "objectives": [
        "Create dynamic web apps using the latest in web technology",
        "Acquire the programming skills needed to obtain a software engineering job",
        "Practice your skills with many large projects, exercises, and quizzes",
        "Master the fundamentals concepts behind React and Redux"
      ],
      "course_content": {
        "Day 1 : Introduction to React": [
          "What is React?",
          "Why React?"
        ],
        "Day 2 : Setup Your First React Project": [
          "Setup React (ViteJS)",
          "Setup React (create-react-app)"
        ],
        "Day 3 : JSX & ReactDOM": [
          "What is JSX?",
          "ReactDOM",
          "Import React"
        ],
        "Day 4 : React Functional Component": [
          "Functional Component",
          "Functional Components"
        ],
        "Day 5 : React Component (Class)": [
          "Class Components",
          "Create a Component Class"
        ],
        "Day 6: Rendering Arrays & Mapping components": [
          "Rendering arrays",
          "Mapping components"
        ],
        "Day 7: Conditional Rendering": [
          "Conditional Rendering"
        ],
        "Day 8 : Props & Destructuring props": [
          "Props",
          "Props & Destructuring props",
          "Passing data to component using props"
        ],
        "Day 9: Spreading objects as props": [
          "Key Prop",
          "Spreading objects as props"
        ],
        "Day 10: useState | React Hook #1": [
          "Why Use Hooks?",
          "Read state and set state"
        ]
      },
      "requirements": [
        "A Mac or Windows Computer"
      ],
      "description": "Congratulations!\nYou've found the most popular, most complete, and most up-to-date resource online for learning ReactJS  in 30 Days!\n\nThousands of other engineers have learned React, and you can too. This course uses a time-tested, battle-proven method to make sure you understand exactly how React work, and will get you a new job working as a software engineer or help you build that app you've always been dreaming about.\n\nThe difference between this course and all the others: you will understand the design patterns used by top companies to build massively popular web apps.\n\nReact is the most popular Javascript library of the last five years, and the job market is still hotter than ever. Companies large and small can't hire engineers who understand React and Redux fast enough, and salaries for engineers are at an all time high. It's a great time to learn React!\n\nWhat will you build?\nThis course features an ample number of videos with dozens of custom diagrams to help you understand how React work. No prior experience with either is necessary. Through tireless, patient explanations and many interesting practical examples, you'll learn the fundamentals of building dynamic and live web apps using React.\nEach topic included in this course is added incrementally, to make sure that you have a solid foundation of knowledge. You'll find plenty of discussion added in to help you understand exactly when and where to use each feature of React.\nMy guarantee to you: there is no other course online that teaches more features of React. This is the most comprehensive resource there is.\n\n\nBelow is a partial list of the topics you'll find in this course:\nMaster the fundamental features of React, including JSX, state, and props\nFrom square one, understand how to build reusable components\nDive into the source code of Redux to understand how it works behind the scenes\nTest your knowledge and hone your skills with numerous coding exercises\nIntegrate React with advanced browser features, even geolocation API's!\nUse popular styling libraries to build beautiful apps\nMaster different techniques of deployment so you can show off the apps you build!\nSee different methods of building UI's through composition of components\n\n\nBesides just React, you'll pick up countless other tidbits of knowledge, including ES2015 syntax, popular design patterns, even the clearest explanation of the keyword 'this' in Javascript that you'll ever hear.\nThis is the course I wanted to take when I first learned React: complete, up-to-date, and clear.",
      "target_audience": [
        "Programmers looking to learn React",
        "Developers who want to grow out of just using jQuery",
        "Engineers who have researched React but have had trouble mastering some concepts"
      ]
    },
    {
      "title": "Django 4 - Build Portfolio Project with Bootstrap 5",
      "url": "https://www.udemy.com/course/django-3-build-portfolio-project-with-django-from-scratch/",
      "bio": "Learn Django 4 by Building a Portfolio project and Designing it with Bootstrap 5. Step by Step guide to Django 4.",
      "objectives": [
        "You will build a complete portfolio website from scratch using Django 4 and Bootstrap 5, gaining practical experience and tangible results.",
        "The course covers all essential aspects, including project setup, database management, front-end development, and customization of Django Admin.",
        "Learn each concept and technique in well explained, clear and easy-to-follow manner, ensuring that you can grasp the material even if you're new to Django.",
        "Real-world examples and exercises are provided throughout the course to reinforce your understanding and enable you to apply your skills to different scenarios.",
        "You will learn how to seamlessly integrate Bootstrap 5 into your Django project, allowing you to create visually appealing and responsive portfolio pages.",
        "Discover how to customize the Django Admin interface, making content management and project administration more efficient and user-friendly.",
        "Learn how to create project models, perform database migrations, and effectively manage your project data within Django.",
        "Utilize Django templates to render dynamic content and present your projects in an engaging manner on the front-end.",
        "The course emphasizes techniques and strategies to optimize your portfolio website for search engines, improving its visibility and ranking in search results.",
        "You will have a polished and professional portfolio website that showcases your projects effectively, leaving a lasting impression on clients and employers.",
        "Gain access to supplementary materials, code examples, and support from the instructor and community to enhance your learning experience.",
        "You'll be well-equipped to advance your career as a web developer or freelancer, as portfolios are a crucial asset in the industry."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Using Exercise Files",
          "Skills & Tools Required",
          "Install & Setup Django Project",
          "Project Folder Structure",
          "Section 1: Quiz"
        ],
        "Setting up Projects App": [
          "Creating a New App in Django 3",
          "Registering The Projects App",
          "Creating Home Page",
          "Creating About Page",
          "Section 2: Quiz"
        ],
        "Django Databases": [
          "Creating Project Models",
          "Selecting Database for Django",
          "Django Migrations",
          "Creating Superuser for Django",
          "Adding Projects App to Django Admin",
          "Adding Projects to Database",
          "Setting Titles in Django Admin",
          "Adding Filter in Django Admin",
          "Section 3: Quiz"
        ],
        "Display Data on Front-End": [
          "Setting-up Views for Front-End",
          "Display Data with Django Templates",
          "Integrating Bootstrap 5 in Django",
          "Customizing Bootstrap Template",
          "Add Static Images in Django",
          "Collect Static in Django",
          "Displaying Profile Image in Front-Page",
          "Adding Static CSS & JS Files",
          "Showing Title in Cards from Database",
          "Displaying The Project Images",
          "Section 4: Quiz"
        ],
        "Display Single Project": [
          "Updating Veiws.py for Single Project",
          "Updating Urls.py for Single Project",
          "Customizing Project Details Page",
          "Finishing The Project with Linking to Details Page",
          "Section 5: Quiz"
        ]
      },
      "requirements": [
        "A solid understanding of Python programming is essential for learning Django. You should be familiar with Python concepts such as variables, data types, control structures (if statements, loops), functions, and object-oriented programming (classes, objects, inheritance).",
        "Having a basic understanding of web development concepts like HTML, CSS, and HTTP will provide a strong foundation for learning Django. Knowledge of HTML markup, CSS styling, and the client-server model will help you understand how Django interacts with the web.",
        "Familiarity with Bootstrap 5, a popular front-end framework, will be beneficial. Understanding Bootstrap's grid system, components, and utility classes will allow you to leverage its power to create responsive and visually appealing web pages."
      ],
      "description": "Hey guys, welcome to \"Django 4 - Build Portfolio Project with Bootstrap 5 (2024)\" – the ultimate course to unleash your web development potential! Are you ready to create a stunning portfolio project using Django 4 and Bootstrap 5? Join me on this exciting journey as we dive into the world of web development and transform your coding skills into a masterpiece.\nIn this hands-on course, we'll start by setting up Django 4 and organizing our project folder structure. With every step, you'll gain confidence as we dive into creating a new app and registering it in Django. From there, we'll build the foundation by crafting the captivating home page and informative about page, showcasing your unique style and creativity.\nBut that's just the beginning! We'll move on to creating project models and selecting the perfect database for our Django project. With Django migrations, you'll learn how to manage and evolve your database schema effortlessly. And let's not forget about the crucial superuser creation – you'll have complete control over your project.\nNext, we'll enhance the administration of your projects by adding them to Django Admin. With titles and filters, you'll have a polished and intuitive interface to manage your projects effortlessly. But we won't stop there. It's time to shift our focus to the front-end and learn how to set up views, display data with Django templates, and seamlessly integrate Bootstrap 5 to create stunning and responsive web pages.\nWe'll add static images, collect them, and even display your profile image on the front page. With static CSS and JS files, you'll have the power to customize and tailor your project to perfection. Our cards will showcase project titles directly from the database, grabbing attention with elegance. And when it comes to displaying project images, we'll ensure they shine, leaving a lasting impression on your visitors.\nBut we won't stop until we've covered it all. We'll update views and URLs for single project display, customizing the project details page to captivate your audience. And finally, we'll finish the project with seamless navigation, linking it all together for a seamless user experience.\nBy the end of this course, you'll possess the skills and confidence to build a portfolio project that will impress potential clients and employers alike. So why wait? Enroll now and unlock the power of Django 4 and Bootstrap 5. Together, we'll dive in a thrilling web development journey that will shape your future success.\nLet's bring your dreams to life – one line of code at a time!",
      "target_audience": [
        "Aspiring Web Developers: If you aspire to become a web developer and want to learn how to build a portfolio project using Django 4 and Bootstrap 5, this course is perfect for you.",
        "Python Developers: If you're a Python developer looking to expand your skillset and venture into web development, this course is tailor-made for you.",
        "Front-End Developers: If you have a background in front-end development and want to enhance your skills by adding back-end capabilities, this course will provide you with the necessary knowledge.",
        "Django Beginners: If you're new to Django and want to learn it from scratch while working on a practical project, this course is an ideal starting point.",
        "Web Development Enthusiasts: If you have a passion for web development and enjoy learning new technologies and frameworks, this course is a perfect fit.",
        "Freelancers and Entrepreneurs: If you're a freelancer or entrepreneur who wants to develop your own web applications or offer web development services, this course will equip you with the necessary skills."
      ]
    },
    {
      "title": "Master Next.js 15 - Build and Deploy an E-Commerce Project",
      "url": "https://www.udemy.com/course/master-nextjs-15-the-missing-guide/",
      "bio": "The only course you need to learn Next quicky! Learn Stripe, Prisma, Auth.js and shadcn/ui!",
      "objectives": [
        "Build production-ready e-commerce apps using Next.js 15 App Router, Server Components, and modern full-stack patterns",
        "Master Prisma ORM with PostgreSQL for type-safe database operations, complex relationships, and efficient queries",
        "Implement Stripe payment processing, NextAuth.js authentication, and user account management with order history",
        "Deploy Next.js 15 apps to production with SEO optimization, ISR caching, error handling, and performance best practices"
      ],
      "course_content": {
        "Welcome!": [
          "Welcome in the Course!",
          "The Project Demo",
          "Why This Course? The \"Missing Guide\" Explained",
          "Tech Stack & Prerequisites"
        ],
        "Environment Setup": [
          "Section Intro & Objectives",
          "Project Creation",
          "Quick Into to Docker & Docker Compose",
          "VSCode & GitHub Copilot (OPTIONAL)",
          "Running Postgres Using Docker",
          "Setting Up Prisma",
          "Summary & Troubleshooting"
        ],
        "Product Listing Feature": [
          "File-Based Routing in App Router",
          "Home Page and Server Components in Next.js",
          "Type Safety and Mock Data",
          "Display Products in a Grid",
          "Powerful Image Component",
          "Responsive Images",
          "More Products, Responsive Grid, Lazy Loading",
          "Format the Price",
          "Summary"
        ],
        "Database & Product Data": [
          "Section Intro & Objectives",
          "Product Model and Migration",
          "Product & Categories: Relations",
          "Creating and Running a Seeding Script",
          "Seeding: Prisma Client, Deleting Data & Inserting Categories",
          "Seeding: Adding Products",
          "Next.js Prisma Client Quirk",
          "Fetching Products in Server Component",
          "Summary"
        ],
        "Adding shadcn/ui, Suspense, Pagination": [
          "What is shadcn/ui?",
          "Setting Up & Understanding shadcn/ui Basics",
          "Enhancing the Product Card",
          "What's Loading UI?",
          "Creating the Loading UI for Products",
          "Adding Loading Skeleton for Products",
          "Paginating Products",
          "Adding Pagination Links",
          "Search Params & Dynamic APIs",
          "Using Suspense with searchParams",
          "Summary"
        ],
        "Product Page & Dynamic Routes": [
          "Using and Understanding Server Actions",
          "Dynamic Routes - Product Page",
          "404 Custom Page",
          "Loading Category & Improving Product Page UI",
          "Loading State for Product",
          "Adding Metadata and SEO Optimization",
          "Product Page with Images",
          "Adding Product Inventory",
          "Product Inventory UI and Image Fix",
          "Add to Cart Placeholder",
          "Summary"
        ],
        "Navigation Layout Enhancements": [
          "Dark and Light Mode: Next Themes",
          "Implementing Theme Toggle",
          "Adding Navigation Bar",
          "Adding Icons to Navigation Bar",
          "Mobile Only Navigation Menu - Explained",
          "Creating the Mobile Navigation using Sheet",
          "Mobile Navigation Content",
          "Adding Footer and Fixing Layout Issues",
          "Improving Navigation with Breadcrumbs",
          "Fixing Layout Issues & Adding Breadcrumbs Skeleton",
          "Summary"
        ],
        "Search Feature": [
          "How Search will Work?",
          "Creating and Placing a Search Input",
          "Search Input Logic",
          "Creating a Dummy Search Results Page",
          "Working Search Feature",
          "Fixing UI/UX Issues"
        ],
        "Categories & Product Discovery": [
          "Section Intro & Objectives",
          "Products by Category Page",
          "Adding Basic Sorting Feature to Product List",
          "Category List Sidebar (using Suspense)",
          "Nested Layout with Categories and Sorting",
          "A Case for Server/Client Wrapper",
          "Server Wrapper for CategorySidebar",
          "Sorting Controls in Layout",
          "Sorting Working on Search Page",
          "A Case for Extracting Common Code",
          "Common ProductList and getProducts Server Action",
          "Refactoring Pages to use getProducts"
        ],
        "Cart Feature": [
          "Designing & Migrating the Cart Database Schema",
          "Cart Feature Strategy: Handling Anonymous Users & Cookies",
          "Why Custom Types? Typing Our Cart with Prisma's GetPayload",
          "Finding the Right Cart: Reading Cookies with the getCart Utility",
          "Starting Fresh: The getOrCreateCart Database Utility",
          "Adding & Updating Items: The Core addToCart Logic",
          "Putting it Together: AddToCartButton",
          "Implementing the Navbar Cart Counter",
          "Understanding Data Cache and Revalidation",
          "Cart Counter not Updating? Revalidate Tags",
          "Suspending Cart Indicator"
        ]
      },
      "requirements": [
        "Basic React knowledge (components, hooks, props)",
        "No Next.js experience needed - you'll learn everything from App Router fundamentals to advanced patterns"
      ],
      "description": "Build Production-Ready Next.js 15 Apps!\nStop learning Next.js through disconnected tutorials. Master the entire framework by building one comprehensive e-commerce platform that demonstrates every essential Next.js 15 pattern.\nWhat You'll Build\nA complete e-commerce application featuring:\nProduct catalog with server-side pagination and category filtering\nDynamic product pages with SEO optimization and static generation\nShopping cart with persistent state and Server Actions\nUser authentication system with NextAuth.js\nOrder management with Stripe payment integration\nProtected user accounts with order history\nMobile-responsive design with modern UI components\nMaster Next.js 15's Core Features\nApp Router & Rendering Patterns\nServer Components for fast initial page loads and SEO\nClient Components for interactive UI elements\nStatic Site Generation with generateStaticParams\nIncremental Static Regeneration for cached content updates\nStreaming with Suspense for progressive loading\nAdvanced Data Handling\nServer Actions replacing traditional API routes\nPrisma ORM with complex database relationships\nType-safe database queries with full TypeScript integration\nEfficient caching strategies using Next.js built-in tools\nProduction-Ready Features\nDynamic SEO with generateMetadata and structured data\nPayment processing with Stripe checkout sessions and webhooks\nAuthentication & authorization with role-based access\nError handling and loading states\nProduction deployment to Vercel with PostgreSQL\nComplete Tech Stack You'll Master\nNext.js 15: App Router, Server Components, Server Actions, ISR\nTypeScript: End-to-end type safety\nPrisma & PostgreSQL: Modern database layer with relationships\nStripe: Production-ready payment processing\nNextAuth.js: Complete authentication system\nTailwind CSS + Shadcn/UI: Modern component library\nReact Hook Form + Zod: Type-safe form handling\nFrom Development to Production\nLearn the complete development lifecycle:\nDatabase design and migrations with Prisma\nPerformance optimization with caching and ISR\nSEO implementation with metadata and sitemaps\nProduction builds and deployment strategies\nError boundaries and graceful error handling\nWho This Course Is For\nDevelopers who know React basics but want to master Next.js 15\nThose tired of toy examples and ready for production patterns\nAnyone building e-commerce, SaaS, or data-driven applications\nDevelopers who want to understand modern full-stack architecture\nWhat Makes This Different\nOne comprehensive project that teaches everything interconnected, not isolated features. You'll understand how Server Components, database queries, authentication, and payments work together in a real application.\nProduction-focused: Every pattern taught is one you'll actually use in professional projects.\nModern Next.js 15: Built specifically for the latest App Router patterns and Server Components.\nReady to build Next.js applications with confidence? Join the course and master the framework through hands-on practice.",
      "target_audience": [
        "React developers ready to master Next.js 15 for building professional full-stack applications like e-commerce platforms, SaaS products, or data-driven sites"
      ]
    },
    {
      "title": "PHP for Beginners - Food Order Website Project",
      "url": "https://www.udemy.com/course/php-for-beginners-food-order-website-project/",
      "bio": "PHP for Beginners: Build a Real World Project from Scratch using PHP and MySQL",
      "objectives": [
        "You will learn to create Food Ordering Website with PHP and MySQL",
        "You will learn to create Admin Panel (Website Manager)",
        "You will learn to use Database (MySQL)",
        "You will learn to use Forms to Submit data to Database",
        "You will learn to Encrypt Password",
        "You will learn about PHP Security",
        "You will learn to write reusable, more maintainable code using programming standards",
        "You will learn all aspects of a basic web application in PHP: login, CRUD operations, uploading files, etc.",
        "You will learn to create Summary Dashboard using PHP and SQL Query",
        "You will learn to integrate already designed themes"
      ],
      "course_content": {
        "Project Initiation": [
          "Database Creation and Admin Section Layout Design",
          "Download Website Template"
        ],
        "Admin Module (Backend)": [
          "Add and Display Admins",
          "Update/Delete Admin and Change Admin Password"
        ],
        "Authentication and Authorization": [
          "Login/Logout - Authentication, Page Access Control - Authorization",
          "Error Fixing!"
        ],
        "Category Module (Backend)": [
          "Add and Display Category",
          "Delete and Update Category"
        ],
        "Food Module (Backend)": [
          "Add and Display Foods",
          "Delete and Update Food"
        ],
        "Connecting Frontend and Backend": [
          "Displaying Categories and Foods on Frontend",
          "Adding Search Food Feature and Also Display Foods based on Category Selected",
          "Adding Food Order Feature and Managing Order from Backend",
          "Creating Summary Dashboard on Admin Panel"
        ],
        "Extra Class": [
          "Securing PHP Code",
          "Congratulations !"
        ]
      },
      "requirements": [
        "Access to Computer (Windows, Mac or Linux)",
        "Basic Understanding of HTML and CSS"
      ],
      "description": "So you want to get into Web development, but not sure where to start.\nYou may have tried some PHP and MySQL following YouTube tutorials, but found confusing or incomplete.\nBut now decided to follow a professional developer who can guide you from the beginning to the state where you can feel confident to develop real world projects by yourself.\nThen this course is the one for you. Here, you will learn from the beginning and implement all the concepts of programming.\nLike if-else conditional structures, loops (For, While, etc.), integrate database, learn SQL query and implement with PHP, etc.\n\n\nWhy PHP?\nPHP is one of the most popular programming language in the world. The duo, PHP and MySQL is used widely all over the world and can power huge web applications as well. Some of the examples include Facebook, Wordpress CMS, Magento, Slack, Upwork, Spotify, etc.\nAccording to a report by W3, over 78.9% of websites with a server-side language use PHP.\n\n\nNot only the popularity, it's easier to get started as well.\nTo learn PHP, you don't need high configuration tech devices and apps unlike any other programming language.\nYou can start with a working computer and a simple text editor like Sublime or Visual Studio Code.\n\n\nThis PHP covers following and some more\nUsing Database (MySQL) in PHP\nCreating Real World Project with PHP\nCreating Admin Panel with PHP to Manage Website\nLogin - Log Out with PHP\nForm Submissions in PHP\nSecurity in PHP\nConstants in PHP\nSessions in PHP\nUploading Files/Images in PHP\nRenaming Files/Images while Uploading Files in PHP\nIntegrating Already Made Website Designs with PHP\nConverting HTML Pages to PHP\nCustom Search Feature in PHP\nCreating Summary Dashboard using PHP and SQL Query\nAnd much much more .....\nPlease look at all the lectures to see more things that are covered.",
      "target_audience": [
        "PHP beginners who want to create real world projects.",
        "Aspiring PHP Web Developers"
      ]
    },
    {
      "title": "Building a eCommerce Website from Scratch",
      "url": "https://www.udemy.com/course/building-a-e-commerce-website-from-scratch/",
      "bio": "Start Selling Your Products Worldwide",
      "objectives": [
        "Develop E-Commerce website from Scratch",
        "Learn PHP",
        "Learn MySQL",
        "Learn Web Designing",
        "Learn Paypal API"
      ],
      "course_content": {
        "Getting started": [
          "Introduction to the Course",
          "Setting up Environment",
          "Setting up our code for workspace"
        ],
        "Building Registration System": [
          "Layout Design for Registration",
          "Forms in Depth",
          "Getting User Registered into our website"
        ],
        "Building Login System": [
          "Understanding the Logic Behind Login",
          "Finishing the Login",
          "Expertise into session and cookies",
          "Making the user login and logout"
        ],
        "Control Panel Creation": [
          "Setting Up Powerful backend to manage store",
          "Creating admin login into backend and managing admin profile",
          "Managing shop settings"
        ],
        "Blog Management": [
          "Understanding the flow of blog management",
          "Managing blog categories",
          "Advanced actions on blog categories",
          "Creating new blog posts",
          "Managing blog posts",
          "Writing comments on blogs",
          "Latest blog liesting on the home page and category page",
          "Showing blog single post on the front page",
          "Blog front comments management"
        ],
        "Newsletter": [
          "Newsletter basics",
          "Newsletter subscription using deep down AJAX",
          "Subscriber listing for backend",
          "Finishing with the newsletter"
        ],
        "Building Static Page": [
          "Basics of Static Page Management",
          "Backend for Managing static pages",
          "Showing static pages on the front",
          "Basics of static blocks management",
          "Developing backend for managing static blocks",
          "Calling static blocks on the front",
          "Finishing with static blocks"
        ],
        "Dynamic": [
          "Managing the support E-Mail",
          "Making the support information dynamic",
          "Understanding how E-Commerce works"
        ],
        "Category and Sub-Category": [
          "Adding Product Categories and Subcategories",
          "Checking the already existance",
          "Listing Manageable Category and Subcategory tree",
          "Editing and Managing Categories and Subcategories"
        ],
        "Product Attributes": [
          "Understanding the Product Attributes",
          "Managing Product Attributes from Backend"
        ]
      },
      "requirements": [
        "Windows, OS X or Linux",
        "Code Editor",
        "Internet"
      ],
      "description": "With \"Building a E-Commerce Website from Scratch\", you will learn everything about internals of E-Commerce Websites, even if you've never build one before!\nThe full course has several video lectures, divided into several chapters. Each chapter will give you a new level of knowledge in E-Commerce Website development. We'll start from the basics of E-Commerce Website development to more advanced and the most popular algorithms used now a days.\n\"E-Commerce Website Development\" will give you a new perspective on how the Internet works and after you completed the course you will be able to create your own E-Commerce website with the latest technology and algorithms and sell your products. Hope you enjoy!\nNOTE: In order to keep you up to date in the world of E-Commerce Website Development all the chapters will be updated regularly with new lectures, projects, quizzes and any changes in future versions of all the programming languages covered on the course.\nWelcome to \"Building a E-Commerce Website from Scratch\"",
      "target_audience": [
        "Anyone interested in Learning to Build Websites",
        "Anyone who wants to become a Web Developer"
      ]
    },
    {
      "title": "Become a Modern Web Developer",
      "url": "https://www.udemy.com/course/become-a-modern-web-developer/",
      "bio": "Learn cutting edge web development skills to stay ahead of your peers",
      "objectives": [
        "The topics in this course bundle include:",
        "Angular 2",
        "Node.js",
        "MongoDB",
        "Ruby on Rails",
        "Python Web Development with Flask and Django",
        "Bootstrap 4",
        "Sass for CSS",
        "Dart Web App Development",
        "MySQLi",
        "Docker Containerization"
      ],
      "course_content": {
        "Node.js: Introduction": [
          "Welcome to Node.js- Simple & Complete!",
          "How This Will Go",
          "Project Introduction",
          "Set Up",
          "Section Summary"
        ],
        "Node.js: Discover Node.js": [
          "Section Introduction",
          "What are Node.js & Express?",
          "Try Node from Command Line",
          "Set up a Node.js app",
          "Use GIT with C9.io",
          "Section Summary"
        ],
        "Node.js: Work with Express": [
          "Section Introduction",
          "Get Express set up",
          "Create an NPM Start script",
          "Routing with Express",
          "Section Summary"
        ],
        "Node.js: Kickstart a Node Web App": [
          "Section Introduction",
          "Use a Bootstrap Template",
          "Configuring Resources",
          "Manage UI Components with Bower",
          "Section Summary"
        ],
        "Node.js: Work with Gulp": [
          "Section Introduction",
          "Use JSHint in Gulp",
          "Inject dependencies with Wiredep",
          "Injection with Gulp-Inject",
          "Watch Changes with Nodemon",
          "Section Summary"
        ],
        "Node.js: Work with Node Templating Engines": [
          "Section Introduction",
          "Review of Templating Engine Options",
          "Begin with EJS",
          "Put EJS to Work",
          "Section Summary"
        ],
        "Node.js: More Express Routing": [
          "Section Introduction",
          "Use a Router",
          "New Pages",
          "Separate code into different files",
          "Wire our new pages back to Express & Node",
          "Section Summary"
        ],
        "Node.js: Use a database with Node.js": [
          "Section Introduction",
          "Get MongoDB setup and installed",
          "Get Events data ready to be inserted into MongoDB",
          "Write code to insert our data into MongoDB.",
          "Query MongoDB and display results in our page.",
          "Section Summary"
        ],
        "Node.js: Course Wrap-up": [
          "Section Introduction",
          "What Now?",
          "Section Summary"
        ],
        "Angular 2: Introducing Angular2": [
          "Section Introduction",
          "Say Hello To Angular2",
          "How this course works",
          "The Course Project",
          "Section Summary"
        ]
      },
      "requirements": [
        "Before taking this course, a student should ideally (but not absolutely) have some experience in: Creating web UI’s with normal Javascript tools (i.e. jQuery, Bootstrap, ASP.NET, AngularJS, etc.) Programming with a common object-oriented or scripting language (i.e. Java, C#, Python, PHP, etc.) JavaScript development of complete client-side solutions."
      ],
      "description": "Are you a web developer, but are having a hard time keeping up with all the latest development tools coming out? Are you new to web development and want to dive straight into cutting edge, modern web development tools? If so, then this course bundle is for you.\nStay Ahead of the Curve\nIf you’re a web developer you know your world is changing fast. We developed this course bundle with you in mind.  We’ve hand selected only the hottest and most functional tools used in web development today so you can stay comfortably ahead of your peers for years to come.\nWhat You'll Learn\nThe topics in this course bundle include:\nAngular 2\nNode.js\nMongoDB\nRuby on Rails\nPython Web Development with Flask and Django\nBootstrap 4\nSass for CSS\nDart Web App Development\nMySQLi\nDocker Containerization\nAnd more\nMake More Money\nWe all want to make more money, and this course bundle will greatly expand your development skills so you can make more money. As a web developer, you need to change with the times or you’ll be left in the dust.\nWhat Do I Need to Know to Take This Course?\nA familiarity with general programming and web development techniques is recommended to get the most out of this course bundle.\nEnroll Today\nYou know you need to upgrade your web development skills to stay relevant. Don’t wait. Enroll in the Become a Modern Web Developer course bundle today.",
      "target_audience": [
        "This course was built for web developers who design and build UI/UX solutions for mobile and the web.",
        "This course is designed for those developers who want to design with new languages as easily as they can with other JavaScript frameworks."
      ]
    },
    {
      "title": "How to Build REST Application with Golang",
      "url": "https://www.udemy.com/course/building-restful-in-golang/",
      "bio": "Go: the Great Stack for RESTful Services",
      "objectives": [
        "In the end of my course you will learn how to build a RESTful API with Go. You used MongoDB as the data store for the RESTful API application in which you organized the application logic into multiple packages to easily maintain the application."
      ],
      "course_content": {
        "Getting Started Building RESTful in Go": [
          "Introduction",
          "Routing",
          "Connection to database, model task",
          "Model tasks, creating methods",
          "Controller task",
          "Curl, testing API"
        ]
      },
      "requirements": [
        "You should have basic level of knowledge in CRUD, mongoDB and go language"
      ],
      "description": "How to Build RESTful Applications with Golang\nIn this comprehensive course, you will learn how to design and implement scalable, efficient web services using the REST architectural style. RESTful systems communicate over the Hypertext Transfer Protocol (HTTP), leveraging standard HTTP verbs such as GET, POST, PUT, and DELETE to manipulate resources. You’ll explore the six essential REST constraints defined by Roy Fielding:\nUniform Interface\nStatelessness\nCacheability\nClient-Server Architecture\nLayered Systems\nCode on Demand (optional)\nThese principles ensure scalability, reliability, and simplicity in distributed applications by promoting loose coupling and clear communication between components. Understanding these constraints is critical for building well-architected APIs that can scale and perform efficiently under heavy loads.\nThe course emphasizes Go (Golang) as a powerful technology stack for building microservices and RESTful APIs. Go’s design philosophy encourages the creation of small, reusable software components, which are composed to build maintainable and scalable applications. You’ll get hands-on experience writing idiomatic Go code and structuring projects following best practices and industry standards.\nWith Go’s strong support for concurrency, fast compilation times, and minimal runtime overhead, you’ll build high-performance microservices suitable for modern distributed environments. By course completion, you’ll confidently create robust RESTful applications in Go, ready to deploy efficiently in real-world projects and production environments with ease.",
      "target_audience": [
        "It can be helpful from high school level"
      ]
    },
    {
      "title": "CSS Floating Layouts",
      "url": "https://www.udemy.com/course/css-floating-layouts/",
      "bio": "Gain clarity and skill with CSS floats!",
      "objectives": [
        "A clear, demystified approach to building floating layouts. You’ll be feeling like a pro in no time!"
      ],
      "course_content": {
        "Welcome To CSS Floating Layouts!": [
          "Introduction",
          "A Note About Set Up"
        ],
        "CSS Float Fundamentals": [
          "Basic Floating",
          "Using Floats On Multiple Items",
          "Introducing Clear",
          "A Practical Example: Creating A Thumbnail Gallery With Float And Clear"
        ],
        "Building A Flexible Layout": [
          "Creating The Basic Structure",
          "Setting Properties And Testing The Layout",
          "Inserting The Header",
          "Inserting The Footer And Finalizing",
          "Understanding How The Layout Works"
        ],
        "Building A Combination Flexible / Fixed Layout": [
          "Building The Basic Layout Structure",
          "Adding In Some Dummy Content",
          "Setting Properties, Part 1",
          "Setting Properties, Part 2",
          "Final Layout Options"
        ],
        "Building A Fixed Layout": [
          "Setting Up The Stucture",
          "Setting Properties, Part 1",
          "Setting Properties, Part 2",
          "Final Layout Options"
        ],
        "Still Want More? Check Out These Exclusive Bonus Lessons!": [
          "Building Dreamweaver CS3/CS4 Essential’s Layouts Using Floats, Part 1",
          "Building Dreamweaver CS3/CS4 Essential’s Layouts Using Floats, Part 2",
          "Creating Floating Layouts In Dreamweaver"
        ],
        "Conclusion": [
          "Wrapping It Up"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic computer skills"
      ],
      "description": "Ever struggled trying to figure out how to build a floating layout using only elements and CSS? CSS Floating Layouts takes the mystery and headache away, and shows you how to build amazing CSS-based floating layouts from the ground up. With Geoff Blake’s trademark non-jargonny approach, you’ll have fun and learn a heap as you discover the world of floating layouts. You’ll learn about floats and clears, then delve into creating three different types of layouts: flexible layouts, fixed layouts, and combination flexible/fixed layouts…all from scratch, all with floats, all by hand!",
      "target_audience": [
        "Those looking to build a strong foundation in CSS and web layouts"
      ]
    },
    {
      "title": "Become a React JS and State Management Superhero + Projects",
      "url": "https://www.udemy.com/course/become-a-react-js-and-state-management-superhero-projects/",
      "bio": "Become a react, context api and redux toolkit superhero",
      "objectives": [
        "Learn the core React JS features (components, props, state,...) by building projects",
        "Learn how to manage state first in the old way, then see how we can transform that into the new ways",
        "Learn how to setup and use Context API professionally",
        "Learn Redux toolkit, used by many companies and become a hot cake in the market",
        "Learn how to persist state and data even after refreshing the page",
        "Learn how to THINK and build out logical solutions step-by-step in order to solve a specific problem",
        "Learn how to write clean working code",
        "Learn how to choose between Context and Redux for each project"
      ],
      "course_content": {
        "Introduction": [
          "Welcome and Projects showcase",
          "Setup"
        ],
        "Master React Core Features: Project Listify v1.0": [
          "Helloworld",
          "Components",
          "Setting The Background",
          "Header UI",
          "Single Task UI",
          "Props and Reusable Icon",
          "Task Refactor",
          "useState Hook Hidden Truth",
          "Making Task Reusable",
          "Add Task",
          "Save Task",
          "Edit and Delete Task",
          "Mark Task As Complete"
        ],
        "Master Context API: Project Listify v2.0": [
          "Context Setup",
          "Context in Action"
        ],
        "Master Redux Toolkit: Project Listify v3.0": [
          "Redux Fundamentals and Secret",
          "Redux Setup",
          "Bring Redux into our App",
          "Implementing our Functions with Redux",
          "Persisting State"
        ],
        "Context or Redux? Which should I use?": [
          "Context or Redux? Which should I use?"
        ]
      },
      "requirements": [
        "Little or no experience in react as every explanation is beginner friendly",
        "Little experience in html, css and javascript"
      ],
      "description": "In this course, you will learn how to build beautiful, interactive, and functional user interfaces with React JS. You will learn the basics of React, including components, props, state, hooks, event handling, and more. You will also learn how to use state management libraries like Context API and Redux to manage complex states.\nIn addition to the theoretical concepts, you will also build several projects to solidify your learning.\n\n\nYou will build the following projects (3)\nListify v1\nListify v2\nListify v3\nIn this course, you will also learn how to use pure CSS to create beautiful and responsive UIs. This course requires logical thinking javascript skills which you're going to learn. Have you ever felt overwhelmed with implementing logic? You're going to learn how to implement the logic for specific functionalities step-by-step\n\n\nBy the end of the course, you will be a React JS, Context API, and Redux toolkit superhero, able to build high quality projects and rightly manage its states.\n\n\nIn this course, you’re going to\nLearn the core React JS features (components, props, state,...) by building projects\nLearn how to manage state first in the old way, then see how we can transform that into the new ways\nLearn how to setup and use Context API professionally\nLearn Redux toolkit, used by many companies and become a hot cake in the market lol…\nLearn how to persist state and data even after refreshing the page\nLearn how to THINK and build out logical solutions step-by-step in order to solve a specific problem\nLearn how to write clean working code\nLearn how to choose between Context or Redux",
      "target_audience": [
        "Beginner HTML, CSS and Javascript developer who wants to learn ReactJS",
        "Beginner ReactJS developer who wants to become a ReactJS Superhero",
        "Experienced React developer who wants to review React and some core features"
      ]
    },
    {
      "title": "Blog Creation with Google Blogger Template & Basic WordPress",
      "url": "https://www.udemy.com/course/blog-creation-with-google-blogger-template-basic-wordpress/",
      "bio": "Complete beginners class on blog creation using Google Blogger Template and basic WordPress for absolute beginners",
      "objectives": [
        "Become a professional Web Developer and get hired",
        "build a complete blog site in this course",
        "how to monetize your blog",
        "how to select between different themes",
        "how to upload YouTube videos on your blog",
        "how to make amazing posts on your blog",
        "learn blog design from start to finish"
      ],
      "course_content": {
        "Google Blogger Template Design for Beginners": [
          "Getting Started With Blog Creation",
          "Master Blog Environment",
          "How To Select Theme For Your Blog",
          "Getting Started With Blog Design",
          "How To Add Header And Background Image",
          "How To Upload Your Profile Photo In Blogger Soho Theme",
          "How To Post Image And Text On Your Blog",
          "How To Upload Youtube Video On Your Blog page",
          "How To Add Links And More On Blog",
          "How To Create Different Pages Comment Share Your Post And Attract Traffic",
          "Blog Management",
          "Blog Monetization"
        ],
        "Basic WordPress Development for Beginners": [
          "WordPress account creation and activation",
          "Master general WordPress environment",
          "How to manage and monitor views on your WordPress site",
          "WordPress customization",
          "How to select colors and backgrounds in WordPress development",
          "How to select different fonts for your WordPress site",
          "How to add Header image on your WordPress site",
          "How to work with menus and background image in WordPress",
          "How to customize Homepage Contact page and About page Homepage in WordPress",
          "How to manage widgets and add YouTube videos on your WordPress sites",
          "WordPress plugins and how to use them",
          "Congratulations! Keep Learning..."
        ]
      },
      "requirements": [
        "You must have a gmail account",
        "A computer (Windows/Mac/Linux) with internet only",
        "No previous coding experience is needed",
        "Be ready to learn an insane amount of awesome stuff"
      ],
      "description": "In this course, you will learn the specific technologies that are the most in demand in the industry right now. These include tools and technologies used by the biggest tech companies like Google, Facebook, Instagram, etc… It’s geared specifically for people that want to learn employable skills in 2020.\nWhen you're learning to program you often have to sacrifice learning the exciting and current technologies in favor of the \"beginner friendly\" classes. With this course, you get the best of both worlds. This is a course designed for the complete beginner, yet it covers some of the most exciting and relevant topics in the industry.\n\n\nThroughout the course we cover tons of tools and technologies including:\nYou will build a complete blog site in this course\nYou will learn how to monetize your blog\nYou will learn how to select between different themes\nYou will learn how to upload YouTube videos on your blog\nYou will learn how to make amazing posts on your blog\nYou will learn blog design from start to finish\nEmenwa Global instructors are industry experts with years of practical, real-world experience building software at industry leading companies. They are sharing everything they know to teach thousands of students around the world, just like you, the most in-demand technical and non-technical skills (which are commonly overlooked) in the most efficient way so that you can take control of your life and unlock endless exciting new career opportunities in the world of technology, no matter your background or experience.",
      "target_audience": [
        "This course if for anyone who wants to start his own business or become a freelancer",
        "This course is for anyone who wants to learn about web development, regardless of previous experience",
        "Developers who want to learn REAL industry skills that are necessary to get hired as a web developer and earn a higher salary"
      ]
    },
    {
      "title": "JavaScript YouTube API Course",
      "url": "https://www.udemy.com/course/javascript-youtube-api-course/",
      "bio": "Explore how to connect to web API's like YouTube and get data from the API place it on your web page using JavaScript",
      "objectives": [
        "How to use JavaScript",
        "How to create elements dynamically",
        "Manipulate elements using JavaScript",
        "Explore JavaScript Document Object Model"
      ],
      "course_content": {
        "Connect to the YouTube API with JavaScript output JSON data to webpage": [
          "YouTube API Introduction",
          "Web Dev Setup",
          "YouTube Google Developers Console get API key and Connect",
          "JavaScript AJAX YouTube Data",
          "Source Code and Resource Links Youtube API connection from JavaScript AJAX"
        ],
        "Introduction to connecting to the YouTube API": [
          "Please note this section is from the previous version of the course",
          "Setup web Page",
          "YouTube API key",
          "Source Code",
          "Create Fetch request",
          "Source Code",
          "Event Handler",
          "Source Code",
          "Handle Response Data",
          "Source Code",
          "JavaScript Map Prototype",
          "Source Code",
          "Fetch Update",
          "Source Code",
          "Next Page",
          "Source Code",
          "Next Page 2",
          "Source Code",
          "Code Review YouTube API"
        ],
        "Bonus Section": [
          "bonus Lecture",
          "Comprehensive Downloads and Examples: Additional Resources for Enhanced Course U"
        ]
      },
      "requirements": [
        "Fundamental JavaScript concepts",
        "Access to computer",
        "Use of editor to write code",
        "HTML and CSS knowledge"
      ],
      "description": "Explore how you can use JavaScript fetch method to connect to an API like YouTube and get data back to add to your web projects.\nSource Code and resources are included to get you started quickly.\nCourse is designed to highlight using JavaScript to make a connection to the YouTube API - JavaScript IS A Prerequisite TO THIS COURSE *****Beginner JavaScript knowledge is required ***** as the course covers only JavaScript relevant to the using Fetch and manipulating elements with object data.  Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\nNo libraries, no shortcuts just learning JavaScript making it DYNAMIC and INTERACTIVE web application.\nCourse Covers\nWeb page setup for prepare to receive content\nGetting YouTube API key and resources for more information about the YouTube API\nHow to use the JavaScript Fetch method\nDOM event handler click event on element\nGet JSON data as JavaScript Object\nUsing JavaScript Map Prototype to built a custom array object\nFetch Update with elements and event trigger\nHandling multiple pages with next and previous\nAll this and more\nStep by step learning with all steps included.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building your own version of the application today!!!!",
      "target_audience": [
        "Beginners to JavaScript",
        "Anyone who wants to practice writing JavaScript",
        "Developers who want to connect to web api's like YouTube",
        "Web developers",
        "Beginners to JavaScript curious about Document Object Model and JavaScript Methods"
      ]
    },
    {
      "title": "Using ASP.Net Blazor for Absolute Beginners",
      "url": "https://www.udemy.com/course/using-aspnet-blazor-for-absolute-beginners/",
      "bio": "Full Stack Development with ASP.Net Blazor for absolute beginners",
      "objectives": [
        "Create Blazor app with custom component",
        "Create Single page website using Blazor",
        "Deploy website",
        "Using DI, Parameters, Event handling, and Forms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Blazor?",
          "Hosting Models"
        ],
        "Create & Understood Structure": [
          "Client-side app",
          "Server-side app",
          "Hosted app"
        ],
        "Manage Component - 1": [
          "Create Blazor Component",
          "Using C# in Component",
          "Code Behind Component",
          "Using Parameters",
          "Component Life Cycle",
          "Data Binding",
          "Event Handling",
          "Event Handler in Parameter"
        ],
        "Manage Component - 2": [
          "Render Raw HTML",
          "Using child contents",
          "Using RenderFragment",
          "Generic Template",
          "Using RenderTreeBuilder",
          "ShouldRender & StateHasChanged"
        ],
        "Manage Component - 3": [
          "Using Cascading Values",
          "Multiple Cascading Parameters",
          "Events in Cascade Value",
          "Using @key",
          "Using @attribute"
        ],
        "Layout & Routing": [
          "Master Layout",
          "Routing",
          "URL helpers"
        ],
        "Manage Forms": [
          "Using EditForm",
          "Form Validation",
          "Using @ref"
        ],
        "Dependency Injection & JSInterop": [
          "DI with Default Service",
          "DI with Custom Service",
          "Call JavaScript Function",
          "Call C# from JavaScript"
        ],
        "Misc": [
          "Debug Application",
          "Decompile DLL",
          "Deploy Application"
        ],
        "Upgrade to new Version": [
          "Upgrade to 3.0",
          "What's new in 3.0",
          "Upgrade to 3.1 Preview-1"
        ]
      },
      "requirements": [
        "Basic concepts of C#",
        "Basic ASP .Net development",
        "Visual Studio 2019"
      ],
      "description": "Note: This course is designed for ASP.Net core 3.0 Preview 7, And later upgraded to APS.Net core 3.1 Preview 1.\nBlazor is Framework came under ASP.Net core application. It is released with .Net core 3.\nTill now we are using JavaScript frameworks for creating User Interface for applications.\nWith Blazor, now we can create a user interface with C# too. Developers do not need to depend on just JavaScript or its frameworks.\nBlazor takes advantage of Web assemblies, which allows running assembly on the browser itself. And almost modern browsers support this feature.\nThroughout this series, I am going to teach you how to create your own custom Blazor components and handle data, parameters, events, and more.\n\n\nThe course outline includes:\nIntroduction to Blazor and Web Assembly. And understood how it works.\nCheck a different kind of hosting models supported by Blazor for creating applications.\nUnderstood how to use Parameters to pass a value to the component.\nBind fields and attach events on controls.\nUse RenderFragments to generate templates.\nUnderstood cascade parameter and pass multiple values.\nUse routings for the component. Using URL Helper generate URLs for any component.\nCreate and validate forms before sending the request to the server-side.\nUse dependency injection with built-in service as well as custom service.\nUse JavaScript interop to execute C# code from JavaScript and vice-versa.\nAnd learn how to deploy an application for both hosting models.\nAnd Extended sessions for how to upgrade to the final version of 3.0 and 3.1 previews.",
      "target_audience": [
        "This is for newbies who want to learn Blazor",
        "Developer who know C# & ASP .Net and want to use those skills for frontend too",
        "Person who want to create custom Blazor components",
        "Developer who want to create Single page site without using JavaScript"
      ]
    },
    {
      "title": "Build a Responsive Portfolio Project in React from Scratch",
      "url": "https://www.udemy.com/course/build-a-responsive-portfolio-project-in-react-from-scratch/",
      "bio": "Build a complete multi page portfolio in react from scratch without using frameworks",
      "objectives": [
        "CSS Positions with real-time examples",
        "A brief understanding of position absolute and relative.",
        "CSS Flex Boxes",
        "Transitions , Transforms and Web Kits",
        "Neuromorphic Designs and Box shadows",
        "By the end of this course, you will have your own portfolio from scratch in React JS without any external CSS libraries.",
        "React, Single Page Applications",
        "React Components",
        "React Routing",
        "Full Downloadable Resources along with Images, static files."
      ],
      "course_content": {
        "Introduction": [
          "React app setup",
          "Pages and Folder Structure"
        ],
        "Home Page Intro Section": [
          "Intro Section Skeleton",
          "Intro Section Styling"
        ],
        "Header": [
          "Header position and Menu Icon",
          "Header Styling",
          "Making Header and Intro Responsive"
        ],
        "3D Image Courosel": [
          "Image Courosel Part-1",
          "Image Courosel Part-2"
        ],
        "Tech Stack In Home page": [
          "Javascript Section",
          "Tech Stack",
          "Who I am I"
        ],
        "Projects Page": [
          "Projects Intro",
          "Projects List - 1",
          "Projects List - 2",
          "Projects List Animations"
        ],
        "Courses Page": [
          "Courses Intro",
          "Courses Intro - 2",
          "Why choose us - 1",
          "Why choose us - 2",
          "Courses List"
        ],
        "Contact Us Page": [
          "Contact Page - 1",
          "Contact page 2"
        ],
        "Footer": [
          "Footer Part-1",
          "Footer Part-2"
        ],
        "Fixes and Deployemnt": [
          "Adding AOS animations",
          "CSS Fixes",
          "Deployment"
        ]
      },
      "requirements": [
        "Basic Knowledge Of React"
      ],
      "description": "React is a free and open-source front-end JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.\nHii Guys,\nIn this course, we will build a complete responsive multipage portfolio from scratch in react.\nSo you will be learning the different topics involved in React JS and CSS. We are not using any external libraries for styling . We will write everything from scratch.\nThe topics we will refer to from React and CSS in this course are\nReact, Single Page Applications\nImportance of having a personal portfolio\nReact Components\nReact Routing\nReact States\nCSS Classes and Ids\nCSS Positions with real-time examples\nA brief understanding of position absolute and relative.\nMaking the layouts responsive with a grid system.\nCSS Transitions and Transforms.\nCSS Webkits and Keyframes\nCSS Animations\nAnimate On Scroll\nNeuromorphic Designs and Box shadows\nBy the end of this course, you will have your own portfolio from scratch in React JS without any external CSS libraries.\nComplete Source with Git Repository.\nFull Downloadable Resources along with Images, static files.\n24/7 Q/A Support\nCascading Style Sheets is a style sheet language used for describing the presentation of a document written in a markup language such as HTML. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.",
      "target_audience": [
        "Javascript Developers",
        "React Developers",
        "Front End Developers"
      ]
    },
    {
      "title": "Modern HTML CSS Projects-Video Background Glass Morphism CSS",
      "url": "https://www.udemy.com/course/modern-html-css-projects-video-background-glass-morphism-css/",
      "bio": "Modern HTML,CSS Video Background website & Projects| Learn through modern and latest HTML, CSS, Bootstrap Projects 2021.",
      "objectives": [
        "Project based teaching to sharpen your HTML, CSS, Bootstrap skills",
        "Build Transparent Login & Sign Up Form",
        "Learn how to add Video Background on website",
        "Build Glass Morphism website using HTML, CSS and Bootstrap",
        "Modern Hover Effects on Cards",
        "Learn how to add Glow Effect on Card",
        "Modern Unique Animated Responsive Navbar with Header",
        "Glassmorphism Effects",
        "Flexbox Projects",
        "Dashboard Design"
      ],
      "course_content": {
        "Course Overview": [
          "Overview"
        ],
        "Html, Css & Bootstrap Refresher": [
          "Html Introduction",
          "Install Code Editor and Extensions",
          "Html Basic Examples",
          "Text Formating",
          "Bootstrap basic classes and Columns",
          "Bootstrap Card and Form",
          "Css Info Part 1",
          "Css Info Part 2"
        ],
        "Project Transparent Login & Sign Up Form": [
          "Project Overview",
          "Boiler Plate",
          "Add Background Video",
          "Create Login Form",
          "Style the Login Form",
          "Sign Up Form"
        ],
        "Project Card Hover Glow Effect": [
          "Project Overview",
          "Card Html Part",
          "Start Styling Our Card",
          "Add Glow Hover Effect - part 1",
          "Add Glow Hover Effect - part 2"
        ],
        "Project Unique Modern Animated Responsive Navbar with Header": [
          "Project Overview",
          "Modern Unique Responsive Navbar with header part 1",
          "Modern Unique Responsive Navbar with header part 2",
          "Modern Unique Responsive Navbar with header part 3"
        ],
        "Project Travel Video Background, Glass morphism website": [
          "Project Overview Travel Website",
          "Files & Folder Structure",
          "Set Video Background",
          "Make Our Glass Navbar",
          "Navbar Links & Social Icons",
          "Main Navigation Section",
          "Make Our Navbar Sticky",
          "Service Section",
          "About Us Section",
          "Add the Smooth Scrolling Effect",
          "Testimonial Section",
          "Contact US Glass Form",
          "Add Map & Icons",
          "Make Our Glass Footer"
        ],
        "Project Modern Pet Website": [
          "1-Project Overview",
          "2-Responsive Sticky Navbar",
          "3-Intro Section",
          "4-Pet Food & Activities Exercise Section",
          "5-Award Section",
          "6-Our Services Section",
          "7-Happy Section",
          "8-Pricing Table Section",
          "9-Teach Your Pet Section",
          "10-Our Team Section",
          "11-Check In Time Section",
          "12-Dogs & Cat Section",
          "13-Quote Section",
          "14-Contact Form Section",
          "15-Footer and Smooth Scroll Effect"
        ],
        "Modern Dashboard Design Project Using Flexbox": [
          "Project Overview",
          "2-Side Bar Structure",
          "3-Side Bar Styling",
          "4-Navigation",
          "5-Top Bar",
          "6-Right Bottom",
          "7-Scroll Cards",
          "Message Side"
        ]
      },
      "requirements": [
        "Basic knowledge of html, css, bootstrap",
        "Eager to learn something new"
      ],
      "description": "Are you looking for a practical course that will teach you how to build modern website ? In this course, you'll build an amazing looking responsive website amazing hands on practical projects in which we have video background, Glass Morphism website design Effect, Flexbox Projects and much more which is trending in 2022.\nDid you learn web development but you don't know how to start building a modern looking website using html css and bootstrap ?\nIn this course we'll use your knowledge to build a website.\nDo you need to be professional ? We will build a professional modern website and learn how we add some cool css effect so that we can use it in our website to look our website modern and professional.\n\n\nCourse Projects and Flow\n1-Html, CSS, Bootstrap Refresher its a project based course so not focus in details\n2-Video Background Login Sign Up Project Using Html, CSS & Bootstrap\n3-Card Hover Glow Effect Project Using Html & CSS\n4-Modern & Unique Animated Responsive Navbar with Header\n5-Travel Video Background, Glass morphism website Using Html, CSS & Bootstrap\n6-Complete Modern Pet Website website Using Html, CSS & Bootstrap\n7-Modern Dashboard Design Using Flexbox\n\n\nTravel Video Background, Glass morphism website\nWe'll add the Video Background by using HTML5, CSS3 and Bootstrap\nWe'll add the Glass Navbar by using HTML5, CSS3 and Bootstrap\nWe'll add the Glass Home section by using HTML5, CSS3 and Bootstrap\nWe'll add the Glass Service section by using HTML5, CSS3 and Bootstrap\nWe'll add the Glass About Us section by using HTML5, CSS3 and Bootstrap\nWe'll add the Glass Testimonial section by using HTML5, CSS3 and Bootstrap\nWe'll add the Glass Contact Us form by using HTML5, CSS3 and Bootstrap\nWe'll add the Glass Map by using HTML5, CSS3 and Bootstrap\nWe'll add the Glass Footer by using HTML5, CSS3 and Bootstrap\nWe'll test the responsive design of the website many times\nWe'll add JS for the Navbar so that our Navbar becomes sticky on the top when we scroll\nWe'll add JS animations to the website so that we have a smooth scrolling effect in our website\n\n\nModern Pet Website\nWe'll add the Responsive Sticky Navbar by using HTML5, CSS3 and Bootstrap\nWe'll add the Intro Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Pet Food & Activities Exercise Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Award Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Services Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Happy Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Pricing Table Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Teach Your Pet Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Our Team Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Check In time Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Dogs & Cat Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Quote Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Contact Form Section by using HTML5, CSS3 and Bootstrap\nWe'll add the Footer and Smooth Scroll Effect by using HTML5, CSS3 and Bootstrap.\nModern Dashboard Design Using Flexbox\n1. We'll build the Side Bar using HTML5, CSS3\n2. We'll build the Navigation using HTML5, CSS3\n3. We'll build the Top Bar using HTML5, CSS3\n4. We'll build the Right Bottom Bar using HTML5, CSS3\n5. We'll build the Scroll Cards using HTML5, CSS3\n6. We'll build the Message Side using HTML5, CSS3\n\n\n\n\nSo why are you waiting for ENROLL NOW and start building modern website and CSS Effects in your website.\nSee you in my course!!!",
      "target_audience": [
        "Person who want to know how we build modern website.",
        "Person who want to know how we build glass morphism website.",
        "Person who want to know how we create Transparent Login Sign Up Form.",
        "Person who want to know how we add modern css animation, hover effects, glow effect, glassmorphism effect in web projects.",
        "Person who want to learn through modern and latest projects",
        "Project based learning course"
      ]
    },
    {
      "title": "Zero to Hero NextJS 14 course for real project development",
      "url": "https://www.udemy.com/course/practical-nextjs-14-mastery-course-for-beginners/",
      "bio": "Learn NextJS 14 and Bootstrap 5 with practical examples after this course you will be ready to build real world projects",
      "objectives": [
        "You will learn to create new next js 14.0 application",
        "You will learn to use Bootstrap5 and next js 14.0 together",
        "You will learn about working of Next js app",
        "You will learn about app router in Next JS",
        "You will learn how to apply animation",
        "You will learn when to use Server component and when to use Client component",
        "You will learn how to use Client component and Server components together",
        "You will learn to develop REST API's in Next JS",
        "You will also learn to consume REST API in your NEXT JS project",
        "You will also learn to make calls to other microservices."
      ],
      "course_content": {
        "Introduction & Installation": [
          "Course Introduction",
          "Software Installation",
          "About your Instructor",
          "What is NextJS and How its different then ReactJS",
          "Creating and Running the Next App",
          "Understanding the folder structure of the next app",
          "Adding Bootstrap to the next app"
        ],
        "Understanding NextJS 14.0 and its concepts": [
          "Understanding the flow of Next App",
          "How Routing works in NextJS",
          "File Based Routing in NextJS",
          "Using Different Fonts in NextJS",
          "Creating reusable Components in NextJS",
          "Server side rendering VS Client side rendering",
          "use client VS use server"
        ],
        "Project Development with NextJS 14 & Bootstrap 5": [
          "Developing Navbar - Part-1",
          "Developing Navbar - Part-2",
          "Navbar Navigation using Link tag in NextJS",
          "Styling Hero Section - Part-1",
          "Page specific css file and its usage",
          "Using Images in Next JS",
          "Designing the Footer section",
          "Using Icons in Next JS",
          "Animations in NextJS - Part-1",
          "Animations in NextJS - Part-2",
          "Blog Page designing Card",
          "Blog Page Make Server Side API call",
          "Rendering the API data on to the Card component",
          "Displaying Remote Server Image in NextJS app",
          "Styling the Card component"
        ],
        "Caching and Different Templates in NextJS": [
          "Caching data in NextJS",
          "Loading Template in NextJS",
          "Layout Template for specific pages in NextJS",
          "Error Template in NextJS"
        ],
        "Dynamic Routing and Passing Data between Components in NextJS": [
          "Dynamic and Nested Routing in NextJS",
          "Dynamic Routing on the Blog Detail page",
          "Passing data between page in NextJS",
          "Fetching Blog Detail data from API server side",
          "Styling and Displaying data on Blog Detail page",
          "Not Found Template in NextJS",
          "Navigating from one page to another through Javascript",
          "Passing data through query params"
        ],
        "Client and Server side Components, Using both together": [
          "When to Use Server and Client side components",
          "Example of Using Client and Server components together",
          "Designing Product Page",
          "Making API call From Client Component",
          "Displaying Product List on Client Component",
          "Fetching data in Server Component and Rendering server side",
          "Using client and server component together - part-1"
        ],
        "Developing REST API in NEXT JS": [
          "Understanding the working of NextJS REST API",
          "Creating the NextJS application with Create Next App",
          "Next JS Working and Folder structure",
          "Developing our First REST API",
          "GET API to fetch all Users from Remote microservice",
          "Integrating Frontend and Backend REST API to show all Users on Page fetched",
          "POST API to create new User - Part-1",
          "POST API to create new User by making Remote microservice call - Part-2",
          "PUT API passing dynamic params and request",
          "Doing Validation for Request Data in backend API",
          "PUT API to update a User by making Remote microservice call",
          "DELETE API to delete a user by calling remote microservice",
          "GET API to fetch Details of one user"
        ],
        "Using MongoDB and Mongoose with NextJS 14": [
          "MongoDB vs MySQL and SQL vs NoSQL and Mongoose",
          "ORM vs ODM and writing queries in MongoDB compass",
          "Installing mongoose and connecting to mongodb from application",
          "Create new mongoose schema for User model",
          "Save user to database"
        ],
        "Source Code": [
          "Frontend Source Code",
          "Backend Source Code"
        ]
      },
      "requirements": [
        "Basics of HTML , CSS, ReactJS"
      ],
      "description": "In this course you will learn NextJS 14 along with Bootstrap5. You will learn different NextJS concepts like routing, API development, making calls to other microservices, Client side rendering, Server side rendering, combining client side and server side components. You will also learn various techniques of passing data between components and how to use bootstrap and animation. After this course you will ready to work in NextJS 14 in any company and also build any real world project.\nREACT JS & NEXT JS are hot in the Job Market - Easily get Job or Upgrade your salary by switching to new Job\nFollowing are the topics you will learn in this course:\nWhat is NextJS\nNextJS Vs ReactJS\nCreating NextApp understanding its working\nAdding Fonts, Icons, Bootstrap, Animations\nClient side Vs Server side rendering\nDifferent types of Templates & Layouts in Next JS\nRouting - File based & Dynamic\nPassing data between pages\nBest way of using client and server components together in real time situation\nMaking REST API calls from UI and showing on response data on UI\nDeveloping REST API’s like GET POST PUT DELETE\nValidation of DATA\nCalling other API from our Backend API - Microservice\nUnderstanding about NoSQL, MongoDB and Mongoose\nIntegrating MongoDB to our Next App\nUpdating our REST API to connect to Database and store data using Mongoose.\nComplete Handson\nProject based\nSource code provided\nStep by Step explanation of concepts with handson practical examples.\n\nNext.js is a powerful and popular open-source React framework that enables developers to build modern and efficient web applications. Launched by Vercel, Next.js simplifies the React development process by providing a robust structure and a range of built-in features.\nOne of Next.js' key strengths is its support for server-side rendering (SSR) and static site generation (SSG). This means that web pages can be pre-rendered on the server, enhancing performance and search engine optimization. Additionally, Next.js supports client-side rendering, offering flexibility in choosing the rendering method that best suits a project's needs.\nThe framework's automatic code splitting allows for optimized loading times, ensuring that only the necessary code is sent to the client. With a strong focus on developer experience, Next.js provides a wealth of features, including hot module replacement, automatic routing, and a plugin system for extensibility.\nNext.js is a feature-rich React framework that simplifies the development of web applications. Some of its key features include:\nServer-Side Rendering (SSR): Next.js enables SSR, allowing web pages to be pre-rendered on the server before being sent to the client. This enhances performance and improves search engine optimization.\nStatic Site Generation (SSG): In addition to SSR, Next.js supports SSG, where pages can be generated at build time. This approach is useful for content that doesn't change frequently, resulting in faster page loads.\nAutomatic Code Splitting: Next.js automatically splits code into smaller chunks, sending only the necessary code to the client. This leads to improved loading times and a better user experience, especially on slower networks.\nClient-Side Rendering (CSR): While SSR and SSG are emphasized, Next.js also supports traditional client-side rendering when needed, offering flexibility in choosing the rendering approach based on specific use cases.\nRouting: Next.js has automatic route handling based on the file system, making it intuitive for developers. Custom routes can also be configured easily, allowing for more complex application structures.\nAPI Routes: Next.js simplifies the creation of API endpoints by providing a straightforward way to build serverless functions within the project. This facilitates seamless communication between the client and server.\nHot Module Replacement (HMR): Developers benefit from HMR, which allows for real-time code updates without requiring a full page refresh. This feature speeds up the development process and enhances the developer experience.\nMiddleware Support: Next.js supports middleware, allowing developers to execute custom logic before handling a request. This is particularly useful for tasks like authentication and data fetching.\nBuilt-in CSS Support: Next.js provides built-in support for styling with CSS, whether it's traditional CSS, CSS Modules, or popular CSS-in-JS solutions like styled-components.\nTypeScript Support: Next.js seamlessly integrates with TypeScript, providing static typing for enhanced code quality and developer productivity.",
      "target_audience": [
        "Anyone who wants to develop fullstack applications with NextJS 14.0"
      ]
    },
    {
      "title": "GCP Cloud Digital Leader - Premium practice test - 2025",
      "url": "https://www.udemy.com/course/gcp-cloud-digital-leader-premium-practice-test-2023/",
      "bio": "Premium Practice Tests for Google Cloud Digital Leader Certification, questions, keywords, explanations, references",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Last update: January 2025\n\n\nGoogle Cloud Digital Leader (GCDL) certification is a professional-level certification that demonstrates an individual's ability to design, develop, and manage solutions using Google Cloud technology. The certification covers a wide range of Google Cloud products and services, including infrastructure, platform, and application services. To earn the GCDL certification, individuals must pass the Google Cloud Digital Leader Exam, which tests their practical knowledge and real-world experience with Google Cloud. This certification is ideal for IT professionals, developers, and solution architects who want to demonstrate their expertise in cloud computing and enhance their career opportunities in the industry.\nThis premium test is a type of assessment that provides a higher level of service, accuracy, and quality compared to practice tests. Our GCDL premium test has detailed answers, additional resources, and outlined keywords, so all these things should effectively teach you first, and then help to pass certification.\nIn this test set, we have developed a unique approach - keywords, an additional source of knowledge that helps to quickly analyze any question to identify the most important phrases that will easily help find answers.\n\n\nQUESTION EXAMPLE\nQuestion:\nA client with an on-premises data center that wants to adopt the public cloud, work with multiple cloud providers, and continue using open-source container technologies.\n\nWhich product would you recommend?\n\nAnswers:\n- Anthos operates by using containers as its primary workload.\n- Kubernetes is a platform that primarily runs containers for their main tasks.\n- Cloud Run enables the use of containers and allows for serverless scaling.\n- AppEngine Flexible Environment can run containers.\n\nExplanation:\nKeywords:\non-premises data center: The client currently has their own data center infrastructure.\nadopt the public cloud: The client wants to transition to using cloud services.\nwork with multiple cloud providers: The client wants to use services from different cloud providers.\nopen-source container technologies: The client wants to continue using container technologies based on open-source software.\n\n\nReferences:\nAnthos - link\n\n\nExplanation:\nAnthos provides a unified management system for infrastructure and applications across various environments, including on-premises, edge, and multiple public clouds. It utilizes a control plane backed by Google Cloud to ensure consistent operations at scale.\nWhile Kubernetes is technically possible, it would require complex manual setup and monitoring.\nCloud Run and AppEngine Flexible are limited to use within Google Cloud.\nIn the context of Google Cloud, Anthos is synonymous with multi-cloud.\nWhen faced with multiple viable options, consider choosing the one with lower cost/effort, although this criteria is not explicitly mentioned.",
      "target_audience": [
        "cloud developer, business analyst, it manager, quality assurance"
      ]
    },
    {
      "title": "What’s New in Bootstrap 4",
      "url": "https://www.udemy.com/course/bootstrap4/",
      "bio": "Learn what changes and new features are coming in the Bootstrap 4 responsive framework and be able to use them yourself!",
      "objectives": [
        "Learn and understand what the changes and latest new features for the new Bootstrap 4 ALPHA release are.",
        "Use your new skills to begin testing the framework yourself and possibly aid in its future development!",
        "Know where to go for additional resources on web development topics introduced through the course.",
        "Have demo files to experiment with and a boiler plate template to explore the framework through."
      ],
      "course_content": {
        "Introduction to Bootstrap": [
          "Introduction",
          "Following along with the demos"
        ],
        "What Has Changed": [
          "Moving from LESS to SASS",
          "Customizing SASS with variables",
          "From px to rem and em",
          "Improved Grid System",
          "Improved Media Queries",
          "HTML Resets and Reboot",
          "Refactored JavaScript Plugins with ES2015",
          "What has been dropped"
        ],
        "What Is New": [
          "Opt-in Flexbox support",
          "Cards - A replacement for wells and panels",
          "Improved Tooltips with tether.js",
          "Improved Form styles with WTF Forms",
          "Margin and Padding Classes",
          "New Display Headings",
          "Outline Button Classes",
          "A New Responsive Embed Size",
          "Future Additions"
        ],
        "In Closing": [
          "Recap and Closing"
        ]
      },
      "requirements": [
        "You should already be familiar with basic web development or the concepts behind using the Bootstrap framework.",
        "You should have a text editor or other program installed if you wish to play with the demo files. However, we will cover a free suggestion in lecture 2 if you don't.",
        "We will be looking at files on a GitHub repo, so having some idea what Github is may be useful, but not required for viewing."
      ],
      "description": "This course is designed to take you through all the biggest changes and new features coming in the Bootstrap 4 Alpha release. There are 20 lectures making up about an 40 minutes of video content that will cover each feature or change through detailed explanation of the subject matter and demoing of its implementation in code samples. The course is structure to first take you through the major changes you should be aware of, and then introduce you to the newest features being added. You should take this course if you're interested in keeping up with the latest trends in web development, want to help test and develop one of the most popular responsive frameworks used in web design, or are just curious on what is coming down the pipe for Bootstrap.",
      "target_audience": [
        "This Bootstrap 4 course is meant for individuals with a basic understanding of the Bootstrap Framework, or previous use in developing with it.",
        "Although concepts regarding ES2015 and SASS are introduced, we only touch on them, and the lesson will attempt to explain the basics necessary to understand how it impacts the Bootstrap Framework.",
        "This course is probably not for you if this is your first time looking into Web Development, or if you have no idea what the Bootstrap framework does."
      ]
    },
    {
      "title": "Building a WordPress Theme from Scratch",
      "url": "https://www.udemy.com/course/building-a-wordpress-theme-from-scratch/",
      "bio": "A-Z Guide for Creating WordPress Theme",
      "objectives": [
        "Develop WordPress Theme",
        "Plugins",
        "Posts and Pages",
        "Photoshop",
        "Much More"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you should know?"
        ],
        "Getting Started": [
          "A few things before getting started"
        ],
        "Static HTML": [
          "Creating Static HTML files and getting familiar with Files Hierarchy",
          "Completing the HTML Section"
        ],
        "Designing with CSS": [
          "Designing the Header",
          "Setting Up Logo and Navigation",
          "Working with sidebar",
          "Designing and Indenting main Content",
          "Setting up footer and characters designing",
          "Final Touches"
        ],
        "Starting From Scratch Theme": [
          "Starting From the Scratch Theme"
        ],
        "Template Hierarchy": [
          "Template Heirarchy"
        ],
        "Conversion to Wordpress Theme": [
          "Starting Conversion from HTML",
          "Completing the Conversion",
          "Reviewing the first look of our theme after changes",
          "Sidebar",
          "Menus",
          "Recent Posts",
          "Clearing the mess"
        ],
        "Creating Pages": [
          "Setting Up Home Page Statically",
          "Creating About Page Statically",
          "Setting Home Page Dynamically Part 1",
          "Setting Home Page Dynamically Part 2",
          "Setting Home Page Dynamically Part 3",
          "Creating About Page Dynamically",
          "Creating Contact Us Page"
        ],
        "Usage of Plugins": [
          "Installing Plugin and Evaluating Contact Page"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Web Server",
        "Code Editor"
      ],
      "description": "Did you know that 20-30%%%% of all websites on the Internet are powered by the Wordpress platform?\nOne of the reasons behind the success of Wordpress is it's flexibility, which allows developers to give superpowers to any website on a modular and easy manner.\nIn this course we'll cover the art and science of Wordpress Theme Development from scratch. By developing a Simple Template. we will cover everything you need to know to be able to create awesome themes that will run on the WordPress installation.\nIf you're using WordPress, you've probably spent an inordinately long period of time searching for a theme you like, only to feel like you've been looking at the same thing in a variety of colors. Maybe it's time you learned to create your own WordPress theme.\nThis course will help you learn to build your first, basic WordPress theme. We'll get under the hood and take a look at how a basic theme works (it's a mixture of HTML, CSS, and PHP) and create a basic, widgetized theme.",
      "target_audience": [
        "Anyone Interested in developing WordPress Theme"
      ]
    },
    {
      "title": "Mastering Flask",
      "url": "https://www.udemy.com/course/mastering-flask/",
      "bio": "Leverage the small but powerfully-formed Flask framework and its extensibility",
      "objectives": [
        "Build a real-world application that adheres to best practices using Flask",
        "Use Virtualenv to incorporate dependency isolation",
        "Work with SQLAlchemy while learning database concepts",
        "See how to customize Jinja templates to work with dynamic pages",
        "Create secure forms using WTForms",
        "Modularize your code with Blueprints",
        "Work with Flask Login and Flask Principal to secure our app",
        "Add a REST API to our app to allow programmers to easily build off the platform the app is building",
        "Create an administrator interface using Flask Admin",
        "Speed up the working of the app with Flask Debug Toolbar, Flask Cache, and Flask Assets",
        "Implement asynchronous programming using Celery",
        "Make the app robust by performing various tests on it",
        "Deploy the app to platforms such as AWS, Heroku, and simple VPS with Nginx and Gunicorn"
      ],
      "course_content": {
        "An Advanced Introduction to Flask": [
          "The Course Overview",
          "A High-level Reintroduction into Flask",
          "Dependency Isolation with virtualenv"
        ],
        "Accessing the Database": [
          "Connecting to the Database",
          "Creating Models",
          "Accessing Data",
          "Creating and Querying One-to-Many Relationships",
          "Creating and Querying Many-to-Many Relationships",
          "Advanced Queries"
        ],
        "Advanced View Usage": [
          "Loops and Control Structures",
          "Creating and Validating Forms with WTForms"
        ],
        "Restructuring an App with Blueprints": [
          "Creating Flask Blueprints",
          "Restructuring Our Files"
        ],
        "Securing the App": [
          "Installing and Configuring Flask-Login",
          "Handling Passwords with Flask Login",
          "Creating Login and Registration Pages",
          "Adding User Permissions"
        ],
        "Creating a REST API": [
          "What Is REST?",
          "Using Flask-RESTful"
        ],
        "Creating an Admin Interface": [
          "Setting Up",
          "Interfacing with Models",
          "File Storage and Retrieval"
        ],
        "Extending Our App": [
          "Flask Debug Toolbar",
          "Flask Cache",
          "Flask Assets"
        ],
        "Asynchronous Programming with Celery": [
          "Installing and Understanding Celery",
          "Writing Tasks in Celery",
          "Periodic Tasks in Celery"
        ],
        "Testing Our App": [
          "What Is Unit Testing?",
          "Testing Our Models",
          "Testing URLs",
          "Testing Code Coverage"
        ]
      },
      "requirements": [
        "This fast-paced, example-based video course starts with an advanced overview of Flask core concepts, moves on to advanced functionality, and finishes up with a running application that can serve as a blueprint for further studying or production development."
      ],
      "description": "Flask is a small and powerful web development framework for Python. It is called a micro-framework as it aims to keep the core simple but extensible. Even though it’s called a micro-framework, it is no way lacking in functionality, and allows you to develop applications very quickly, primarily through the development of a small codebase.\nThis course will take you deep into the world of using Flask and its ecosystem of extensions to create web applications. We’ll walk through creating a simple IMDB clone from scratch. We’ll start by creating the boilerplate code and use Virtualenv to create an isolated development environment. You’ll then learn to work with the database using SQLAlchemy. After that, we’ll display our data to the end user using WTForms.\nWe’ll restructure and modularize our code using Blueprints. Our site will be secured using the extensions Flask-Login and Flask-Principal. After that, we’ll create a RESTful API of our app. We’ll then give admin functionality and extend our app using various flask extensions. We’ll incorporate Celery to make our tasks asynchronous. We’ll walk you through performing unit test of our app, and then test our SQLAlchemy models. We’ll also test the URLs and finally, we’ll test how much of our code isn’t being tested. All these tests will make our app secure. Finally, we’ll deploy our Flask app to various options that are available.\nThis course will give you an in-depth understanding of how to use Flask and its strong extensibility for more complex web applications.\nAbout The Author\nAlexander Putilin is a professional programmer and has several years of experience in languages such as Python and C++. He has worked for a lot of years in Yandex, a Russian multinational technology company specializing in Internet-related services and products. He worked in the Search Engine department on various parts of Yandex's search engine.\nJack Stouffer is a programmer who has several years of experience in designing web applications. He switched to Flask three years ago for all his projects. He currently works for Apollo America in Auburn Hills, Michigan, and writes internal business tools and software using Python, Flask, and JavaScript. Jack is a believer and supporter of open source technology.\nWhen he released his Flask examples with the recommended best practices on GitHub, it became one of the most popular Flask repositories on the site. Jack has also worked as a reviewer for Flask Framework Cookbook, Packt Publishing.",
      "target_audience": [
        "This course is for Python web developers who have developed web applications with Flask and are well-versed in its core functionality."
      ]
    },
    {
      "title": "Complete Node.js Bootcamp: From Basics to Advanced",
      "url": "https://www.udemy.com/course/complete-nodejs-bootcamp-from-basics-to-advanced/",
      "bio": "Start coding with Node.js learn backend development, build APIs & create full-stack apps from scratch with hands-on",
      "objectives": [
        "Understanding The Role of Node.js in Modern Web Development",
        "V8 JavaScript Engine",
        "Node.js Event Loop in Detail",
        "File System (fs) Module: Reading and Writing Files",
        "Path Module: Working With File Paths",
        "HTTP Module: Creating a Basic Web Server",
        "Understanding Package.json and Semantic Versioning",
        "Callbacks, Promises, and Async/Await",
        "Handling Errors in Asynchronous Code",
        "Working with Readable and Writable Streams",
        "Creating an HTTP Server With Node js",
        "Handling Routes and Requests",
        "Connecting to a NoSQL Database (MongoDB)",
        "Connecting to a SQL Database (MySQL/PostgreSQL)",
        "Understanding Buffers and Streams",
        "Creating APIs with Node js",
        "Testing APIs with Postman"
      ],
      "course_content": {
        "Introduction to Node.js": [
          "Setting up The Development Environment"
        ],
        "The Node.js Runtime": [
          "The V8 JavaScript Engine",
          "The Event-Driven, Non-Blocking I/O Model",
          "The Node.js Event Loop in Detail"
        ],
        "Core Modules": [
          "File System (fs) Module: Reading and Writing Files",
          "Path Module: Working With File Paths",
          "HTTP Module: Creating a Basic Web Server",
          "URL Module: Parsing and Formatting URLs"
        ],
        "NPM (Node Package Manager)": [
          "Installing and Managing Packages",
          "Using NPX for Running Tools"
        ],
        "Asynchronous Programming in Node.js": [
          "Callbacks, Promises, and Async/Await",
          "Understanding the Async Nature of Node.js",
          "Handling Errors in Asynchronous Code"
        ],
        "Working with Events and Streams": [
          "EventEmitter Class: Creating and Handling Custom Events",
          "Working with Readable and Writable Streams",
          "Building Efficient Data Pipelines"
        ],
        "Building and Managing Servers": [
          "Creating an HTTP Server With Node js",
          "Handling Routes and Requests",
          "Sending Responses and Managing Headers"
        ],
        "Working with Databases": [
          "Connecting to a NoSQL Database (MongoDB)",
          "Connecting to a SQL Database (MySQL/PostgreSQL)"
        ],
        "File Handling and Buffering": [
          "Reading and Writing Large Files Efficiently"
        ],
        "Building RESTful APIs": [
          "Creating APIs with Node js",
          "Callbacks, Promises, and Async/Await",
          "Testing APIs with Postman"
        ]
      },
      "requirements": [
        "A solid understanding of JavaScript fundamentals (variables, functions, objects, arrays, asynchronous JS basics).",
        "Basic understanding of HTML and CSS is helpful for full-stack context, but not strictly required for the backend focus."
      ],
      "description": "Are you ready to become a confident and highly skilled Node.js developer?\n\n\nWelcome to the \"Complete Node.js Bootcamp,\" the ultimate hands-on course designed to take you from an absolute beginner to an advanced Node.js expert. Whether you're looking to kickstart your backend development career, enhance your existing web development skills, or build powerful, scalable server-side applications, this comprehensive bootcamp is for you.\n\n\nNode.js is a powerful, open-source, server-side runtime environment that allows you to build fast, scalable network applications using JavaScript. Its non-blocking, event-driven architecture makes it perfect for data-intensive real-time applications, making it one of the most in-demand technologies in the modern web development landscape. Mastering Node.js opens up a world of opportunities in backend development, microservices, APIs, and more!\n\n\nWhat You'll Learn & Achieve:\n\n\nThis bootcamp is meticulously structured to provide you with a deep understanding of Node.js, covering everything from the foundational concepts to advanced, real-world application development. By the end of this course, you will be able to:\n\n\nMaster Node.js Fundamentals: Understand core concepts like the event loop, modules, file system, and streams.\nBuild Robust RESTful APIs: Design, develop, and secure powerful APIs using Express.js.\nDatabase Integration (MongoDB & Mongoose): Learn to connect your Node.js applications to NoSQL databases, perform CRUD operations, and model your data effectively.\nAuthentication & Authorization: Implement secure user authentication (JWT, sessions) and authorization mechanisms from scratch.\nError Handling & Debugging: Develop robust applications with professional error handling strategies and master debugging techniques.\nAsynchronous JavaScript: Deep dive into Promises, Async/Await, and their practical applications in Node.js.\nDeployment Strategies: Learn how to deploy your Node.js applications to popular cloud platforms like Heroku or AWS.\nSecurity Best Practices: Understand and implement common security measures to protect your applications from vulnerabilities.\nAdvanced Node.js Concepts: Explore topics like WebSockets for real-time communication, GraphQL (introduction), and advanced middleware patterns.\nBuild Multiple Real-World Projects: Apply your knowledge by building practical, production-ready applications that you can add to your portfolio.\nDon't just learn Node.js, master it! Enroll in the \"Complete Node.js Bootcamp: From Basics to Advanced\" today and unlock your potential as a top-tier backend developer.",
      "target_audience": [
        "Looking to become full-stack developers by adding Node.js to your skillset.",
        "Learn the fundamentals and advanced topics of Node.js for a robust career.",
        "Want to refresh your Node.js knowledge or dive into modern features and best practices.",
        "If you have an idea for an app that needs a powerful backend, this course is for you!"
      ]
    },
    {
      "title": "Starting with JSON",
      "url": "https://www.udemy.com/course/starting-with-json/",
      "bio": "JSON ... and much, much more!",
      "objectives": [
        "Learn the world's standard data format: JSON!",
        "Learn JSON syntax for objects and arrays",
        "Understand JavaScript and JSON's relationship",
        "Use JSON with Java and the GSON library",
        "Learn the data types that JSON employs",
        "Learn to use JSON API's",
        "Understand JSON Databases and their benefits",
        "Learn how to use JSON utilities to validate your work",
        "Discover the benefits of a JSON data integration",
        "Understand JSON-based configuration files in frameworks and libraries ... and much, much more!"
      ],
      "course_content": {
        "Welcome to Starting With JSON": [
          "Course Introduction",
          "Learning JSON",
          "JSON Defined",
          "JSON Structure",
          "JSON Data Types",
          "JSON & JavaScript",
          "JSONP"
        ],
        "Using Git": [
          "Using JSON",
          "JSON & Java",
          "GSON Library",
          "JSON Databases",
          "JSON Configuration Files",
          "JSON & API's",
          "JSON Utilities",
          "JSON Utilities"
        ]
      },
      "requirements": [
        "Before taking this course, a student should ideally (but not absolutely) have:",
        "A at least a modest knowledge of HTML and JavaScript. Ideally, the student should be familiar with JavaScript frameworks and libraries and the Java programming language. If the student has only some, or even none of these skills, he/she will still benefit from this course greatly, but may need to pause a video in progress to perform some additional background research. This is encouraged, as it'll only make for a better overall experience and net benefit.",
        "NO JSON EXPERIENCE IS REQUIRED!!!"
      ],
      "description": "Any IT professional or casual developer anticipating a solid understanding of how JSON works in open-sourced and private development projects needs to go through this course and absorb all of its content. Anyone desiring to learn how JSON is implemented in software needs the knowldege and demonstrations presented in this course.  This not only includes web, mobile, and service application developers, but also architects, UI designers, testers, and administrators. This course provides a solid understanding of how to effectively participate in a project leveraging JSON data structures.",
      "target_audience": [
        "This course was built for software developers who need to understand how to work with JSON data structures in all development efforts, regardless of language, framework, or library used.",
        "This course is designed for those developers who need to learn JSON to be able to effectively participate in projects implementing the technology. Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how JSON is structured and used in a software development environment."
      ]
    },
    {
      "title": "NPM Mastery: Learn how to work with NPM like a Professional",
      "url": "https://www.udemy.com/course/npm-basics/",
      "bio": "Learn about NPM, NPX, node modules, lockfiles, scripts and more!",
      "objectives": [
        "Learning to use npm in everyday projects",
        "Understanding the basics of how npm works",
        "Some under-the-hood npm things",
        "All about latest npm 6.x and above things",
        "Managing packages, node_modules, package-lock and more",
        "Understanding npx and how it works"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to series",
          "What is NPM? How is it related to Node?",
          "NPM vs Yarn",
          "Installing NPM and Node on your system"
        ],
        "NPM Versioning": [
          "Why Node versioning is required?",
          "Managing multiple Node versions using `n`"
        ],
        "NPM Modules": [
          "What is an NPM module?",
          "How does NPM install module?",
          "package.json file",
          "Exploring package.json",
          "Installing module",
          "Removing module",
          "Local v/s global modules"
        ],
        "NPM Dependencies": [
          "Intro to NPM dependencies",
          "Semantic Versioning",
          "All about package-lock.json",
          "Semantic versioning in package.json",
          "dependencies",
          "devDependencies",
          "peerDependencies"
        ],
        "NPM Scripts": [
          "NPM scripts intro",
          "What are NPM scripts?",
          "All about NPX"
        ],
        "Misc intro": [
          "Section intro",
          "Changing global packages installation location",
          "NPM cache",
          "Finishing course"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "NPM is a great tool used all around the web development ecosystem. Whether it's frontend or backend, Node or React, Angular, or TypeScript, you're gonna make use of NPM all along. It is a great idea to add this useful tool to your bucket of mastery as it will save you a ton of time while working/building/running your apps.\nWe would be going over the core basics of NPM and how it works:\n1. What is NPM and how it works\n2. Understanding under the hood things with NPM\n3. Working with NPX\n4. Package and package-lock files, why they're needed\n5. Useful NPM commands\n6. Local, global node modules\n7. Caching, moving global modules directories, and more\n\n\nIf you want to be a good web developer in 2020, this tool is a must to know in-depth! This course is regularly updated and maintained to always keep you on the edge! Best practices and latest toolkit included.",
      "target_audience": [
        "Anyone who wants to strengthen their NPM skills",
        "Anyone who wants to become frontend/backend/fullstack and wants to add NPM to their toolkit"
      ]
    },
    {
      "title": "Python Django Full Social Media Course",
      "url": "https://www.udemy.com/course/django-full-social-media-course/",
      "bio": "Learn Django by Building a Social Media Web Application From Scratch",
      "objectives": [
        "How To Build Web Applications With Django",
        "User Authentication",
        "How To Use Database In Django",
        "Complete a case study to manage a project from conception to completion"
      ],
      "course_content": {
        "Course Introduction": [
          "Python Django Full Social Media Course",
          "Intro and Project Demo"
        ],
        "Django Introduction": [
          "What is Django?",
          "Creating Our Django Project",
          "URL Routing For Our Project"
        ],
        "Frontend Setup": [
          "Template Setup",
          "Static Files Setup"
        ],
        "User Authentication": [
          "Creating a Profile Model",
          "User Signup",
          "User Login and Logout"
        ],
        "Social Media Features": [
          "Account Settings",
          "Uploading Post",
          "Post Feed",
          "Like Posts",
          "Profile Page",
          "Profile Page 2",
          "Follow and Unfollow Users",
          "Post Feed Updated",
          "Download Images Of Post",
          "Search For Users",
          "User Suggestion"
        ],
        "Final Review": [
          "Final Review"
        ]
      },
      "requirements": [
        "Python"
      ],
      "description": "About this course\nIn this course, you'll learn Django from the basics using the project-based approach. You will learn how to build a social media web app where a user can interact with other people.\n\n\nWhy Django?\nDjango is one of the most popular python frameworks. If you know python, and you are interested in web development, then Django is the best choice for you. Lot's of developers and companies choose to use Django because of it is an high level framework which allows you to build complex applications quickly. There are various companies who use Django as part of their tech stack, some of them are Instagram, Spotify, Mozilla and lots more. Still contemplating on learning Django? Just go for it.\n\n\nAll the concepts in this course are thought in great depth. There is a total of 22 lectures in this course, in which 20 of that is actual teaching. The source code to the full project is also available in the course which you can use easily get the code to everything we are going to build. All lectures are explained thoroughly to make you easily understand how to work with the Django framework, and the aim of this course is for you to be able to build your own projects with the knowledge you've learnt.",
      "target_audience": [
        "Python developers curious about web development"
      ]
    },
    {
      "title": "Mastering Maintainable React",
      "url": "https://www.udemy.com/course/mastering-maintainable-react/",
      "bio": "Empowering Test-Driven Development and Refactoring Techniques",
      "objectives": [
        "Apply principles of maintainable code to write React components and files that are easy to modify and understand over time.",
        "Use best practices for organizing and structuring React applications to promote maintainability and scalability.",
        "Identify and avoid common code patterns and anti-patterns in React that can lead to unmaintainable code.",
        "Refactor existing React code to improve maintainability and reduce technical debt, using techniques such as code smells identification and refactoring patterns.",
        "Appreciate the importance of maintainable code and its impact on the long-term success of a React application, and work towards continuous improvement."
      ],
      "course_content": {
        "To make the most of it, you are expected to Try to finish all the exercises in": [
          "Introduction to Maintainable React",
          "The most valuable outcome from completing the course",
          "How to get the most out of this course"
        ],
        "Let's align on some fundamentals": [
          "Introduction to basic ES6 features",
          "ES6 - variable declarations: var, let and const",
          "ES6 - play with objects and arrays",
          "Basic JavaScript ES6 features",
          "Introduction to the collection API (filter, map, reduce)",
          "Collection API examples",
          "Exercise - Try ES6 features in a sandbox",
          "A minimal guide to Typescript",
          "TypeScript 101",
          "React in 5 minutes",
          "Quiz - A quick JS and TS quiz",
          "Exercise - Practice writing a simple component"
        ],
        "Introduction to code smells": [
          "Introduction to code smells",
          "Code smell - raw JS loop and collection APIs",
          "Code smells - a real-world scenario",
          "Quiz - A quick code smells quiz"
        ],
        "Refactorings - the cure for code smells": [
          "Introduction of refactorings",
          "Top ten common refactorings explained",
          "Refactoring - Extract Function",
          "Refactoring - Boolean Parameter",
          "Refactoring - ES6 destructuring assignment",
          "Quiz - A quick refactorings quiz",
          "Refactoring - Extract Component",
          "Refactoring - Move Component",
          "Demonstration of common Refactoring usages"
        ],
        "The best gift to developers - Tests": [
          "Benefits of having tests",
          "How to write a test?",
          "Basic usage of Jest",
          "Mock and Stub in jest",
          "Quiz - mock and stub",
          "Test runner + test cases + code structure",
          "Exercise - try it yourself"
        ],
        "Test-Driven Development": [
          "What is Test-Driven Development",
          "The first TDD journey - A project effort tracker",
          "The first TDD journey - Refactoring a bit further",
          "How to implement task tracking with TDD",
          "TDD with React component - implement a simple Header Component",
          "TDD with React Component - implement user interaction",
          "Exercise - fix the failed test and refactoring",
          "Quiz - Test-Driven Development"
        ],
        "Clean code in React": [
          "Common Design Principles",
          "Single Responsibility Principle",
          "Composable Design",
          "Layering application in React",
          "Quiz - Design principles"
        ],
        "Set up the project locally": [
          "Using create-react-app to create your application",
          "Walk through the project structure",
          "Additional resources"
        ],
        "Project - Todo list": [
          "The project we'll build",
          "Feature - Add a Todo to a list",
          "Refactoring - Extract sub-components",
          "Feature - Complete an item when clicked",
          "Refactoring - Custom Hooks for Managing states",
          "Feature - Add summary information to Todo List",
          "Refactoring - Reduce duplication and extract more sub-components",
          "Feature - Search by keyword",
          "Feature - Enhance accessibility",
          "Exercise - It's your turn"
        ],
        "Project - Direct To Boot": [
          "The brief of Direct To Boot",
          "Direct to boot - Feature introduction",
          "Network-relate status statechart",
          "Feature - the I'm here button - happy path",
          "Introduce mirage.js",
          "Feature - Error handling",
          "Refactoring - extract hooks",
          "Feature - I'm Here - retry",
          "Use react-query to simplify the network statuses check",
          "Fix all the tests with React-Query",
          "Feature - Notify the store",
          "Final refactoring",
          "Quiz - mocking network",
          "Extra readings for this chapter"
        ]
      },
      "requirements": [
        "This Maintainable React course assumes basic knowledge of JavaScript concepts, such as variables, functions, arrays, objects.",
        "A section in the course ensures that participants have the necessary knowledge to fully understand and engage with the more advanced content."
      ],
      "description": "Maintainable React is a comprehensive course designed to teach you the best practices for writing clean, maintainable code in React. Whether a beginner or an experienced developer, this course will give you the tools and knowledge to write high-quality, maintainable React code. Join me and take your React skills to the next level!\n\n\nA few highlights of the course are:\nClean Code & Refactoring\nThe course covers refactoring, a technique for improving the design and structure of existing code. This is an essential skill for developers, allowing them to maintain and improve their code over time.\n\n\nTest-Driven Development\nThe course covers TDD, a software development approach that emphasizes writing automated tests before writing code. This is a highly sought-after skill in the industry and can help students improve the quality and maintainability of their code.\n\n\nFeatures From Real Projects\nThe course includes real-world project examples, which will help students understand how to apply the concepts they are learning in a practical setting and help them get more confident with the material.\n\n\nThe primary benefit of this course is that the code smells and refactorings presented are derived from real-world React projects. Since these techniques address actual problems, participants can immediately apply what they learn to their projects and experience the benefits firsthand.\n\n\nThe Maintainable React course is heavily focused on hands-on coding. In addition to watching video demonstrations, participants will be expected to complete exercises to solidify their understanding of the material. It is essential that exercises are constructed as the course progresses, and participants are encouraged to apply the techniques learned in their projects to experience the benefits firsthand.",
      "target_audience": [
        "Beginner React developers looking to improve their skills",
        "React developers looking to work on larger applications and write maintainable code"
      ]
    },
    {
      "title": "WebVR - Virtual Reality with A-Frame from Scratch",
      "url": "https://www.udemy.com/course/webvr-virtual-reality-with-a-frame-from-scratch/",
      "bio": "Learn the basics to develop your own Virtual Reality (VR) Websites. Compatible with Oculus Rift and HTC VIve",
      "objectives": [
        "Create webs with 3D elements",
        "The necessary elements and components to 3D",
        "What are 360º degree images and how to add them to your web",
        "Create interactive scenes in 3D"
      ],
      "course_content": {
        "Introduction": [
          "What are WebVR and A-Frame",
          "Text Editor: Brackets",
          "How to use A-Frame"
        ],
        "Basic concepts about A-Frame": [
          "Position | Position an object",
          "Rotation | Rotate an object",
          "Scale | Scale an object",
          "Primitives vs Entities",
          "Camera",
          "Apply textures and normal maps to an object",
          "Plane | Create the ground",
          "Sky | Sky and 360º images",
          "Open the Visual Inspector"
        ],
        "Import 3D Models to A-Frame": [
          "Import glTF Objects",
          "Import OBJ Objects"
        ],
        "Animations": [
          "Introduction to animations",
          "Attribute",
          "Begin and Delay",
          "Fill",
          "Direction",
          "Easing"
        ],
        "Illumination": [
          "Spot Light",
          "Ambient Light",
          "Directional Light",
          "Hemisphere Light",
          "Point Light",
          "Shadows"
        ],
        "Interacting with objects": [
          "Primitive Cursor",
          "Add Click event",
          "Using Fuse event",
          "MouseEnter and MouseLeave events",
          "Getting additional information about events"
        ],
        "Movement": [
          "Movement and alternatives to default camera"
        ]
      },
      "requirements": [
        "Basic knowledge regarding HTML is recommended (it is not necessary)",
        "Basic understanding of informatics and internet"
      ],
      "description": "In this course you will learn the basic notions of A-Frame, with which you will be able to create web pages which are totally or partially in Virtual Reality (VR).\nWhat will we cover in this course?\nThe most important primitive components of A-Frame\nCreate entities\nInsert 360º images in our Web\nCreate scenes\nAdd texture to objects\nImport 3D objects in formats .obj and .glTF\nAnimate objects\nOpen and use the Visual Inspector\nUsing this WebVR framework, creating projects in virtual reality for a web will be really easy. Who knows if you end up in love with A-Frame and become a WebVR Developer!",
      "target_audience": [
        "Those who are interested in learning",
        "Those interested in Virtual Reality",
        "People interested in creating web content and virtual reality"
      ]
    },
    {
      "title": "React JS Development 2025: Comprehensive Practice Test",
      "url": "https://www.udemy.com/course/react-js-development-best-comprehensive-practice-test/",
      "bio": "Elevate Your Front-End Skills: Master React JS with Practice Test for Career Success",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Dive into the world of professional web application development with React JS Development 2024: Comprehensive Practice Test. This meticulously designed course-cum-practice test is your ticket to mastering React JS, offering a nuanced understanding vital for both burgeoning and adept developers aiming for career advancement.\nLeverage a uniquely practice-heavy approach combined with project-based learning, enriched with in-depth and detailed explanations across all topics. We delve deep into React JS, an indispensable framework for modern front-end development, equipping you with the knowledge and skills required to navigate the complexities of building professional web applications.\n\n\nThe curriculum is strategically divided to cover all crucial aspects of React JS development:\n- React Fundamentals: Solidify your grasp on foundational elements including JSX, components, and props, essential for everyday coding in React.\n- React State and Lifecycle: Gain in-depth insights into the dynamism of React applications, focusing on state management and lifecycle methods, crucial for elevating from a novice to a seasoned developer.\n- React Routing and State Management: Understand the intricacies of navigating between views and managing application states, a requirement for crafting scalable and maintainable SPAs.\n-Advanced Topics in React: Venture into the depth of React with advanced concepts such as hooks, context API, higher-order components, and sophisticated patterns, paving the way for tackling complex development challenges.\n\n\nGoals:\n- Acquire the ability to implement common libraries and technologies such as React Router, Redux, Redux Toolkit, React Query, React Hook Form, and styled-component libraries to build full-fledged applications.\n- Master front-end development focusing on creating back-ends with databases and APIs for a full-stack development understanding.\n- Navigate through the complexity of building real-world features (authentication, data sorting/filtering/pagination, and dark mode implementations), ensuring you are job-ready for advanced development roles.\n\nEnroll now to transform your capabilities and confidences in front-end development, making you ready for the challenges of modern web application projects and demanding technical interviews.",
      "target_audience": [
        "Aspiring Developers: Begin your advanced development journey in React JS and front-end technologies.",
        "Job Seekers: Arm yourself with the detailed knowledge and practical experience needed for technical interviews.",
        "Experienced Developers: Enhance your React JS skills and stay ahead in the fast-evolving front-end development landscape.",
        "Coding Enthusiasts: Take on the challenge of decoding algorithms and improving your problem-solving prowess within React JS frameworks."
      ]
    },
    {
      "title": "The Ultimate Authentication Course with Django and VueJS",
      "url": "https://www.udemy.com/course/vue-django-authentication/",
      "bio": "Authenticate with Access & Refresh Tokens, 2FA, Social Authentication with Google etc.",
      "objectives": [
        "Use Django Rest Framework",
        "Connect Django with MySQL",
        "Use Access & Refresh Tokens",
        "Use HttpOnly Cookies",
        "Send Emails",
        "Login using 2 Factor Authentication (2FA) with Google Authenticator",
        "Social Authentication using your Google Account",
        "Use Vue 3 Composition API",
        "Use Vuex"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Big Picture"
        ],
        "Django login with Access & Refresh Tokens": [
          "Setup",
          "Database",
          "Models",
          "Views",
          "Serializers",
          "Serializer Methods",
          "Login",
          "Jwt",
          "Cors",
          "Authenticated User",
          "Middlewares",
          "Refreshing the Token",
          "Logout",
          "Revoking Tokens",
          "Forgot Password",
          "Sending Emails",
          "Reset Password",
          "Exception Handler"
        ],
        "VueJS login with Access & Refresh Tokens": [
          "Setup",
          "Navigation",
          "Register",
          "Login",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Vuex",
          "Forgot Password",
          "Reset Password"
        ],
        "Two Factor Authentication": [
          "Two Factor Authentication",
          "Sending the Authenticator Code",
          "Emitting Data",
          "Authenticator Form",
          "Scanning the QR Code"
        ],
        "Google Authentication": [
          "Django Google Authentication",
          "VueJS Google Authentication"
        ]
      },
      "requirements": [
        "Javascript Knowledge",
        "Python Knowledge"
      ],
      "description": "Welcome to this course where you will learn everything you need to know to secure your VueJS and Django app.\nIn Django you will learn:\nUse Django Rest Framework\nConnect Django with MySQL\nUse Access & Refresh Tokens\nUse HttpOnly Cookies\nSend Emails\nLogin using 2 Factor Authentication (2FA) with Google Authenticator\nSocial Authentication using your Google Account\nIn Vue you will learn:\nUse Composition API\nCreate components and routes\nConsume API calls\nUse Vuex\nCreate QRCodes\nSocial Authentication using your Google Account\nIf these are what you are looking for then this course is for you.\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Python Developers",
        "Javascript Developers"
      ]
    },
    {
      "title": "Fetch Api data with React",
      "url": "https://www.udemy.com/course/fetch-api-data-with-react/",
      "bio": "Learn how to create a React Project that fetches api data",
      "objectives": [
        "Learn how to fetch api data using React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Create the Starting Project",
          "Building the Frontend Interface",
          "Fetching the API",
          "Displaying the API data",
          "Search for multiple api results",
          "Display the searched results",
          "All Project Files"
        ]
      },
      "requirements": [
        "Should be familiar with basics of React"
      ],
      "description": "In this course you are going to learn how to fetch Api data using React\nWe are going to use the free Chuck Norris API, where you will be able to search for different keywords, and get back some jokes related to the category you just searched.\nAnd finally don’t worry I will cover every single detail so you guys can easily follow along, even if you have little experience, I will add the full code in the end of the course!\nBy taking this course you will learn:\nLearning outcome:\nHow to work with an API\nHow to Fetch API data with React\nHow to select multiple results\nand much more…",
      "target_audience": [
        "React developers who want to learn how to work with Apis"
      ]
    },
    {
      "title": "How to Build Scalable Front End Applications with Vue JS",
      "url": "https://www.udemy.com/course/how-to-build-scalable-front-end-applications-with-vue-js/",
      "bio": "Building Large Applications with Vue JS, Schema-Driven Design, Dynamic Layout Injection From Back End Schema, JavaScript",
      "objectives": [
        "How to build scalable front end applications",
        "What is Schema-Driven design",
        "How to make single responsible components",
        "What is application development process and complexity in a real company",
        "How to Structure a Large Scale Vue JS applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Scalable Applications (Why and How)": [
          "Definitions, Problems, Solutions"
        ],
        "Definition of the Project (Film-Centre)": [
          "Film-Centre project definiitions",
          "Translating UI into JSON schema"
        ],
        "Initialization & Setup": [
          "Prerequisites",
          "Installing Vuetify",
          "Installing JSON-Server to run a quick API"
        ],
        "Static implementation of layouts": [
          "Defining App routes and corresponding components",
          "Creating static components of HomeView",
          "Creating static FilmsView layouts",
          "Creating static FilmView layouts"
        ],
        "Creating a powerful Object-Oriented Client API library": [
          "Creating a robust Object-Oriented Client API",
          "Creating APIs for products, users and app-schema",
          "Improve our API client using factory pattern"
        ],
        "Dynamic Injection of layout using schema-driven approach": [
          "Schema-Driven creation of HomeView components",
          "Schema-Driven creation of Header and Footer",
          "Schema-Driven creation of FilmsView",
          "Schema-Driven creation of FilmView",
          "quickly creating UsersView & conclusion"
        ]
      },
      "requirements": [
        "Having minimum knowledge of front end development",
        "Having decent knowledge of Javascript",
        "Having minimum knowledge of Back-End API",
        "Having decent knowledge of Vue JS"
      ],
      "description": "Take your front end development to the next level with Scalable Front End – the only course designed to give you the skills necessary to build dynamic, scalable apps. Learn how to use schema-driven design, control UI elements using back end JSON schema, and master design patterns like multi-service/multi-template design patterns. And that's just the beginning! With Scalable Front End, you'll be equipped with the knowledge and tools to optimize your software development cycle in big companies. Start your journey today!\n\n\nLearn the fundamentals, dive into coding in the Vue JS framework and get hands-on experience with a challenging schema-driven design project to understand how to create a large Vue JS application. With this course, you'll have all the skills you need to build powerful and dynamic applications and take your career to the next level.\n\n\nDevelop your front-end skills effortlessly and quickly with Scalable Front End! Master all the powerful strategies and techniques to build advanced web applications without having to worry about any particular framework. With this course, you can apply the same methods for React JS, Angular JS, or whatever your next project may be. Join us and start making the most out of your front-end development!\n\n\nThis course is created to help front-end developers and engineer take their skills in a more advanced level and build full dynamic scalable applications. The course starts with some theoretical explanation of the software production cycle and then dives into coding in the Vue JS framework by implementing a challenging schema-driven design project called \"Film-Centre\" to show the different and powerful strategies to build scalable front-end applications. We will analyze complex layouts and functionalities and translate them into JSON schema. Later implement the UI statically, next we will use our quick API endpoint created by the JSON server to return our JSON schema and build our application with different advanced methods.\n\n\nWho is this course for?\n- Any front end developer (vue, react, angular) willing to know how to design complex, scalable front end applications.\n- Any back end developer who wants to be one step ahead of others by knowing the secret of coordination of UI elements from the back end.\n- Anyone interested to know what are the exact expectations of a company from a senior front-end developer\n- Anyone stuck with heavy and complex projects willing to know the secret of building flexible, scalable, and maintainable applications.\n\n\nThe Github repo links is included as a resource from section 4 and so on as well as in the last lecture.\n\n\nWhat technology and framework are used?\n- Vue JS\n- Vuetify\n- Javascript\n- Sass\n\n\nwhat design pattern do we use?\n- Singleton\n-  Factory\n- Schema-Driven Design\n- Single Component Design\n\n\nWhat is schema-driven design?\nIt is a new modern approach in software development to give control and flexibility to the layouts.\n\n\nIs schema-driven design relevant to XML schema?\nThey are not wholly relevant but have some similarities.",
      "target_audience": [
        "Any individual with the knowledge of front-end, back-end and any software engineer willing to know how to build scalable applications is welcome to this course",
        "Intermidiate front end developer looking to sharpen their skills",
        "Back end developer looking to know how to implement UI schema design",
        "Experienced Front end engineer looking to build more complex and scalable applications",
        "JavaScript Learners interested in learning advanced topic",
        "Vue Js developers interested in advanced component creation techniques"
      ]
    },
    {
      "title": "Facebook Application Development completely from scratch",
      "url": "https://www.udemy.com/course/facebook-application-development-completely-from-scratch/",
      "bio": "A complete guide for learning , creating and publishing Facebook applications via Facebook platform.",
      "objectives": [
        "Note: THE COURSE CONTENT IS OUTDATED... STAY TUNED FOR THE NEW CONTENT...",
        "In this course you will learn development of facebook apps completely from the ground up",
        "By the end of this course you will be able to make your own unique and innovative applications for facebook",
        "In this course you will learn how facebook developers earn money from their facebook applications",
        "You will learn some important and secret concepts of facebook graph API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Pre-requisites"
        ],
        "Getting Started With PHP SDK": [
          "Introduction to Facebook Application Development",
          "Premium or Free way of creating Facebook Apps",
          "Configuring Heroku for the creation of your first Facebook App",
          "Downloading and Configuring PHP SDK",
          "Providing Logging-in Option in Facebook App",
          "Logging out of the Facebook App"
        ],
        "Working With Open GRAPH Data": [
          "Accessing Open Graph Data",
          "Working with Open Graph API",
          "Open Graph Sub Paths",
          "Referring to official documentation"
        ],
        "Working With User Data": [
          "Using User data in Facebook Application",
          "Embedding your Flash Game with your Facebook App in simplest way",
          "Applying CSS on user data information"
        ],
        "Using FQL": [
          "Understanding FQL",
          "Using FQL Language in Practical",
          "Embedding FQL with Facebook Application"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Exercise Files": [
          "Zip Archive of Exercise Files"
        ]
      },
      "requirements": [
        "Basic Knowledge of PHP , HTML and CSS",
        "Basic Knowledge of Facebook Usage",
        "Basic Understanding of SQL lanuage",
        "Little knowledge of linux commands"
      ],
      "description": "Note: THE COURSE CONTENT IS OUTDATED... STAY TUNED FOR THE NEW CONTENT...\nIf you want to learn Facebook application development completely from the start and ground-up , then this is the course for you. It is a perfect course for beginners to start out with the best. In this course you will learn the best and innovative way to learn Facebook application development. Unlike other courses in the market, this course doesn't focus on quantity but quality with innovation. The course contents are simple and clear and will give you a good understanding scenario of Facebook application development\nIn the current era of technology , if you want to earn money and want to be successful , then you can join this course which would help you to learn all the techniques and methods that are required to build an app for Facebook and then you would be able to earn money on the app you have created.\nThis course contains how you can setup and configure a free way to create Facebook application unlike in other courses in the market which always show you the premium way of creating Facebook apps.\nThis course would introduce you to Open Graph API , which is the core part of Facebook application development and would teach you how to access Facebook user's data via Open Graph of Facebook\nFQL is introduced in this course , which helps you out to select user's data from Facebook database and in this course it has been taught perfectly with examples.\nSo don't think too much, you can always refund your money, if you don't like this course . Don't miss the chance and grab it.",
      "target_audience": [
        "This course is for Beginners and Intermediate ones",
        "This course is for Freelancers and Web Developers",
        "This course is for those who want to earn money by developing facebook apps."
      ]
    },
    {
      "title": "Modern JavaScript Mastery: A Complete Guide",
      "url": "https://www.udemy.com/course/javascript-basics-for-beginners-u/",
      "bio": "A Comprehensive Journey Through JavaScript for Developers",
      "objectives": [
        "All core features and concepts you need to know in modern JavaScript development",
        "All about variables, functions, objects and arrays,DOM,BOM,OOP,Api",
        "Write solid JavaScript code",
        "Learn problem-solving skills"
      ],
      "course_content": {
        "Introduction": [
          "introduction",
          "History of JavaScript",
          "JavaScript Implementation Tutorial",
          "Add Html Tags in JavaScript Tutorial",
          "Inside which HTML element do we put the JavaScript?",
          "JavaScript Comments Tutorial"
        ],
        "Basic of javascript": [
          "JavaScript Variables Tutorial",
          "JavaScript Variables ( Let & Const ) Tutorial",
          "JavaScript Data Types Tutorial",
          "JavaScript Arithmetic Operators Tutorial",
          "JavaScript Assignment Operators Tutorial",
          "JavaScript with Google Chrome Console Tutorial part 1",
          "JavaScript with Google Chrome Console Tutorial part 2"
        ],
        "JavaScript If Statement": [
          "JavaScript Comparison Operators Tutorial",
          "JavaScript If Statement Tutorial",
          "JavaScript Logical Operators Tutorial",
          "JavaScript If Else Statement Tutorial",
          "JavaScript If Else If Statement Tutorial",
          "JavaScript Conditional Ternary Operator Tutorial",
          "JavaScript Switch Case Tutorial"
        ],
        "JavaScript Alert Box And Confirm ,Prompt Tutorial": [
          "JavaScript Alert Box Tutorial",
          "JavaScript Confirm Box Tutorial",
          "JavaScript Prompt Box Tutorial"
        ],
        "JavaScript function events and loops": [
          "JavaScript Functions Tutorial",
          "JavaScript Functions with Parameters",
          "JavaScript Functions with Return Value Tutorial",
          "JavaScript Global & Local Variable Tutorial",
          "JavaScript Events Tutorial",
          "JavaScript While Loop Tutorial",
          "JavaScript Do While Loop Tutorial",
          "JavaScript For Loop Tutorial",
          "JavaScript Break & Continue Statement Tutorial",
          "Find Even & Odd Numbers with Loops",
          "JavaScript Nested Loop Tutorial"
        ],
        "JavaScript Arrays Tutorial": [
          "JavaScript Arrays Tutorial",
          "JavaScript Create Arrays Method - II Tutorial",
          "introduction Multidimensional Arrays",
          "Multidimensional Arrays with nested loop",
          "JavaScript Modify & Delete Array Elements Tutorial",
          "JavaScript Array Sort & Reverse Tutorial",
          "JavaScript Array Pop & Push Tutorial",
          "JavaScript Array Shift & Unshift Tutorial",
          "JavaScript Array Concat & Join Tutorial",
          "JavaScript Array Slice & Splice Tutorial",
          "JavaScript isArray Tutorial",
          "JavaScript Array indexOf & lastIndexOf Tutorial",
          "JavaScript Array Includes Method Tutorial",
          "JavaScript Array Some & Every Methods Tutorial",
          "JavaScript Array find & findIndex Tutorial",
          "JavaScript Array Filter Tutorial",
          "JavaScript Array toString, valueOf & fill Methods"
        ],
        "JavaScript loop object and method": [
          "JavaScript forEach Loop Tutorial",
          "JavaScript Objects Tutorial",
          "JavaScript Objects Tutorial - II",
          "JavaScript Array of Objects Tutorial",
          "JavaScript Const Variable with Array & Objects",
          "JavaScript For in Loop Tutorial",
          "JavaScript Map Method Tutorial",
          "JavaScript String Methods Tutorial Part 1",
          "JavaScript String Methods Tutorial Part 2",
          "JavaScript String Methods Tutorial Part 3",
          "JavaScript Number Methods Tutorial",
          "JavaScript Math Methods Tutorial",
          "JavaScript Date Methods Tutorial"
        ],
        "Javascript DOM": [
          "JavaScript DOM Introduction Tutorial",
          "JavaScript DOM Targeting Methods Tutorial",
          "JavaScript DOM Targeting Methods Tutorial part2",
          "JavaScript DOM Get Methods Tutorial",
          "JavaScript DOM Set Methods Tutorial",
          "JavaScript DOM querySelector & querySelectorAll Tutorial",
          "JavaScript DOM CSS Styling Methods Tutorial",
          "JavaScript addEventListener Method Tutorial",
          "JavaScript addEventListener Method Tutorial part 2",
          "JavaScript classList Methods Tutorial",
          "JavaScript parentElement & parentNode Method Tutorial",
          "JavaScript Children & childNodes Methods Tutorial",
          "JavaScript firstChild & lastChild Method Tutorial",
          "JavaScript nextSibling & previousSibling Method Tutorial",
          "JavaScript createElement & createTextNode Tutorial",
          "JavaScript appendChild & insertBefore Tutorial",
          "JavaScript insertAdjacentElement & insertAdjacentHTML Tutorial",
          "JavaScript replaceChild & removeChild Tutorial",
          "JavaScript cloneNode Tutorial",
          "JavaScript Contains Method Tutorial",
          "JavaScript hasAttribute & hasChildNodes Tutorial",
          "JavaScript isEqualNode Tutorial",
          "JavaScript Form Events Tutorial",
          "JavaScript Form Events Tutorial part 2",
          "JavaScript setInterval & clearInterval Tutorial"
        ],
        "JavaScript BOM": [
          "JavaScript BOM Introduction Tutorial",
          "JavaScript Window Height & Width Method Tutorial",
          "JavaScript Window Open & Close Method",
          "JavaScript Window moveBy & moveTo Tutorial",
          "JavaScript resizeBy & resizeTo Tutorial",
          "JavaScript scrollBy & scrollTo Tutorial",
          "JavaScript Location Object Tutorial",
          "JavaScript History Object Tutorial"
        ],
        "Advance JavaScript": [
          "Advance JavaScript - Let & Const Variable Tutorial",
          "Template Strings Tutorial",
          "Arrow Functions Tutorial",
          "Rest Operator Tutorial",
          "Spread Operator Tutorial",
          "Object Literals Tutorial",
          "Destructuring Array Tutorial",
          "Destructuring objects in javascript"
        ]
      },
      "requirements": [
        "No coding experience is required to take this course.",
        "Basic understanding of HTML and CSS helps but is NOT required"
      ],
      "description": "Welcome to \"Modern JavaScript Mastery: A Complete Guide\" a comprehensive and beginner-friendly course designed to introduce you to the fundamental concepts of JavaScript programming. Whether you're an aspiring web developer, a student looking to expand your skill set, or a professional seeking to enhance your proficiency, this course is your gateway to the exciting world of JavaScript.\nOverview: JavaScript is a versatile and widely-used programming language that powers the interactivity and dynamic features of modern websites. In this course, we will start from the very basics and gradually guide you through the essential principles of JavaScript, enabling you to build a solid foundation for more advanced programming tasks.\nKey Learning Objectives:\nIntroduction to JavaScript:\nUnderstand the role of JavaScript in web development.\nExplore the history and evolution of the language.\nSetting Up Your Development Environment:\nLearn how to set up a code editor for JavaScript development.\nUnderstand the basics of using a web browser for testing and debugging.\nVariables and Data Types:\nGrasp the concept of variables and how to declare them.\nExplore different data types, including numbers, strings, and booleans.\nControl Flow and Conditional Statements:\nMaster the use of conditional statements such as if, else, and switch.\nUnderstand how to control the flow of your program.\nLoops:\nLearn about loops and their role in repetitive tasks.\nExplore for, while, and do-while loops.\nFunctions:\nUnderstand the concept of functions and their importance in modular programming.\nLearn how to create and invoke functions.\nArrays and Objects:\nExplore arrays and objects, fundamental data structures in JavaScript.\nUnderstand how to manipulate and iterate through arrays.\nIntroduction to the Document Object Model (DOM):\nLearn about the DOM and its role in web development.\nUnderstand how JavaScript interacts with HTML and CSS to create dynamic web pages.\nEvents and Event Handling:\nExplore the concept of events and how to handle them using JavaScript.\nLearn how to create interactive user experiences through event-driven programming.\nIntroduction to Asynchronous Programming:\nUnderstand the basics of asynchronous programming using callbacks and promises.\nExplore the importance of asynchronous programming in web development.\nMethodology: This course adopts a hands-on approach to learning, with a combination of interactive lectures, coding exercises, and real-world examples. Each module is designed to build upon the previous one, ensuring a gradual and comprehensive understanding of JavaScript fundamentals. Throughout the course, you will have the opportunity to apply your knowledge through practical projects, solidifying your skills and boosting your confidence as a JavaScript developer.\nPrerequisites: No prior programming experience is required, making this course suitable for absolute beginners. A basic understanding of HTML and CSS will be beneficial, but not mandatory.\nOutcome: By the end of this course, you will have a strong foundation in JavaScript programming, empowering you to create dynamic and interactive elements on websites. Whether you aspire to pursue a career in web development or simply want to expand your coding skills, \"JavaScript Basics for Beginners\" is your stepping stone to success in the world of programming.",
      "target_audience": [
        "Anyone who wants to become a web developer",
        "Beginner web development students who have no or only little JavaScript experience",
        "Everyone interested in learning JavaScript and all about how it works"
      ]
    },
    {
      "title": "SQL Developer Skills For Beginners",
      "url": "https://www.udemy.com/course/sql-developer-skills-for-beginners/",
      "bio": "Learn SQL Developer Skills",
      "objectives": [
        "Create Databases",
        "Create Tables",
        "Write T-SQL Queries",
        "Design Databases",
        "Design Tables",
        "Create Views",
        "Create Constraints"
      ],
      "course_content": {
        "Database Basics": [
          "Introduction",
          "Database Concepts",
          "Hierarchical database",
          "Relational Databases",
          "RDBMS",
          "Flat File Databases"
        ],
        "Setting Up Development Environment": [
          "System Requirements",
          "Microsoft SQL Server Express 2014 Download",
          "Microsoft SQL Server Express 2014 Installation",
          "Download Sample Database",
          "Install Sample Database",
          "SSMS Tool",
          "MSDN Virtual Labs ( No Installation Required )"
        ],
        "Functions": [
          "AVG",
          "MAX",
          "MIN",
          "COUNT",
          "SUM",
          "Grouping Data"
        ],
        "Developing Databases and Tables with SQL": [
          "Schemas",
          "Designing and Creating Databases",
          "Designing and Creating Tables",
          "Primary Keys",
          "Foreign Key",
          "Views",
          "Creating Stored Procedures"
        ],
        "Joining Tables": [
          "Intro",
          "Why are Table Joins Used",
          "INNER Join",
          "LEFT OUTER Join",
          "RIGHT OUTER Join",
          "Summary"
        ],
        "T-SQL Refresher": [
          "What is T-SQL",
          "T-SQL INSERT Query",
          "T-SQL DELETE Query",
          "T-SQL UPDATE Query",
          "T-SQL DISTINCT and TOP Query",
          "Using Aliases",
          "T-SQL Comments",
          "T-SQL SELECT Query",
          "ORDER BY Clause with T-SQL",
          "Using Comparison Filters with T-SQL",
          "Using Equality Filters with T-SQL",
          "Using String Comparison with T-SQL",
          "Using Logical Operators with T-SQL",
          "Null Comparisons",
          "Thank You"
        ]
      },
      "requirements": [
        "How to use a computer and Internet",
        "Determination to Learn"
      ],
      "description": "SQL Developers are in demand due to the increasing reliance on data.\nBecoming a SQL developer can be a very rewarding and fulfilling career.\nThe path is relatively easy compared to other technical careers.\nMicrosoft SQL Server is among the top 3 relational database management systems in the world\nand getting the skills to becoming an SQL Server developer will serve you well and open many job opportunities .\nThe advantage of this course is the amazing virtual labs facilities that is available for free from Microsoft. The virtual labs comes with Microsoft Server 2012 and also Microsoft SQL Server 2016 and various instances of SQL Server like SQL Server Analysis Server (SSAS), SQL Server Reporting Service (SSRS),SQL Server Integration service  (SSIS). The virtual labs is ideal because it is free and gives you an environment that mirrors a real world production SQL Server environment. I strongly urge you to take advantage of this opportunity as I do not know how long Microsoft will have these virtual labs available for. All you require to access the virtual labs is a web browser . It does not matter if you are using a mac , Pc or Linux and there is absolutely nothing for you to install. The lab exercise you will perform in this course using the virtual labs are similar to a real world SQL Server production environment.\nWhat you will learn in this course includes:\nHow to create databases\nHow to create Tables\nHow to deseign databases\nHow to design Tables\nHow to create flat file database\nHow to use SSMS Tool\nHow to write basic T-SQL Queries\nI look forward to seeing on the course.\nThank You",
      "target_audience": [
        "Anyone interested in learning something new"
      ]
    },
    {
      "title": "Learning Path: Python Web Development",
      "url": "https://www.udemy.com/course/python-web-development-a/",
      "bio": "Learn how to create scalable and powerful web applications by using the robust frameworks such as Flask and Django!",
      "objectives": [
        "Understand the fundamental capabilities of the Flask framework",
        "Build a real-world application that adheres to best practices using Flask",
        "Ensure that the app is robust by performing various tests on it and then deploy it",
        "Make the app robust by performing various tests on it",
        "Explore Django’s automated admin interface to manage your app’s content",
        "Create and use your own custom middleware for a Django app",
        "Delve into advance database modeling to build a custom database field for your Django application"
      ],
      "course_content": {
        "Web API Development with Flask": [
          "The Course Overview",
          "Setting Up Flask and Creating Your First Flask Application",
          "Custom Routing Configuration",
          "Flask Template Usage",
          "Flask Flash Messages and Custom Error Pages",
          "CRUD and REST Basics",
          "Using SQLAlchemy for Model Mapping",
          "Implementing Create",
          "Implementing Read",
          "Implementing Update",
          "Implementing Delete",
          "Hypermedia",
          "Implementing Pagination",
          "RESTful Authentication",
          "HTTP Caching",
          "Error Handling in RESTful APIs",
          "Guidelines for Building Large Projects",
          "Why Use HTTPS?",
          "Token Authentication",
          "Usage of Cookies",
          "Storing Passwords",
          "Using the Flask Test Client",
          "Testing Custom Flask Routes",
          "Testing CRUD",
          "Testing Authentication"
        ],
        "Mastering Flask": [
          "The Course Overview",
          "A High-level Reintroduction into Flask",
          "Dependency Isolation with virtualenv",
          "Connecting to the Database",
          "Creating Models",
          "Accessing Data",
          "Creating and Querying One-to-Many Relationships",
          "Creating and Querying Many-to-Many Relationships",
          "Advanced Queries",
          "Loops and Control Structures",
          "Creating and Validating Forms with WTForms",
          "Creating Flask Blueprints",
          "Restructuring Our Files",
          "Installing and Configuring Flask-Login",
          "Handling Passwords with Flask Login",
          "Creating Login and Registration Pages",
          "Adding User Permissions",
          "What Is REST?",
          "Using Flask-RESTful",
          "Setting Up",
          "Interfacing with Models",
          "File Storage and Retrieval",
          "Flask Debug Toolbar",
          "Flask Cache",
          "Flask Assets",
          "Installing and Understanding Celery",
          "Writing Tasks in Celery",
          "Periodic Tasks in Celeryl",
          "What Is Unit Testing?",
          "Testing Our Models",
          "Testing URLs",
          "Testing Code Coverage",
          "Preparing Dependencies for Deploying",
          "Using a Simple VPS",
          "Using Amazon Web Services",
          "Using Heroku",
          "Where Do I Go from Here?"
        ],
        "Learning Django Web Development": [
          "The Course Overview",
          "Installing Django and Creating Our Project",
          "Understanding Apps",
          "Creating Our Models",
          "Using the Built-in Admin Interface",
          "What Are Views?",
          "Using Django Templates",
          "Generic Display Views",
          "Template Inheritance and Parent Templates",
          "The User’s Model",
          "Changing Our Models",
          "Creating a Custom Profile",
          "Generic Form Views",
          "Enabling the Django Debug Toolbar",
          "Understanding Related Data",
          "Customizing Our Home Page View's Query",
          "Introducing WSGI",
          "Understanding Deployment",
          "Deploying Our Application",
          "Wrapping Up"
        ],
        "Mastering Django Web Development": [
          "The Course Overview",
          "Extending Class-based Views",
          "Using Mixins",
          "Custom Class-based Views",
          "Creating a Switchboard View",
          "What Is Middleware?",
          "Creating a Custom Middleware",
          "Exception Handling Middleware",
          "Creating Template Filters",
          "Creating Custom Template Tags",
          "Using Tastypie to Create a REST API",
          "Complex Queries with Our API",
          "Authentication and CRUD Support",
          "Generic Relationships",
          "Formsets for Data Management",
          "Advanced Queries with Q()",
          "Low-level Caching",
          "Caching with Middleware",
          "Using the Template Cache",
          "Model Managers",
          "Using a Model Manager to Create New Objects",
          "Creating manage.py Commands"
        ]
      },
      "requirements": [
        "A basic knowledge of Python",
        "A computer with Python installed on it",
        "Internet connectivity"
      ],
      "description": "Are you new to Python and are yet to explore all that it can do? Yes, Python has more to it than just data science and application programming. With the help of frameworks like Flask and Django, it can also build scalable web applications. The following are some popular web applications that are majorly written using Python or Django:\nPinterest\nInstagram\nPrezi\nPython has two powerful frameworks: Flask and Django. The question is which framework should we choose? A common route is to begin building small, interesting projects with a simple framework, like Flask, and move on to Django as you begin to grasp the basics.\nThis Learning Path is designed to mold you to a complete Python web developer.\nYes, this is not a course; it is a Learning Path.\nWhat this essentially means is that it contains multiple video courses that are logically tied together to provide you with a larger learning curve.\nLet’s dig into what this Learning Path does. Since you already know the basics of Python, you are no stranger to the fact it is an immensely powerful language. With the basics in place, this Learning Path takes a hands-on approach and demonstrates how to build fully functional real-time applications from scratch. The Learning Path begins with building interesting projects with Flask, gradually introduces the more challenging framework—Django—and then moves on to the complex concepts in it. It covers concepts such as how to build up and structure an effective web API that can be used by any client application accessing it over the HTTP protocol, and how to use the Flask and Django ecosystem efficiently to create web applications.\nSo after completing this Learning Path, you should be able to create web applications as good as any of the popular applications mentioned above. Yay!\nAbout the author:\nFor this Learning Path, we have combined the best works of five extremely esteemed authors: Gergo Bogdan, Alexander Putilin, Jack Stouffer, Matthew Nuzum, and Kevin Veroneau.\nGergo Bogdan is a software engineer with over 8 years of experience in the IT industry. He has vast expertise in multiple technologies, including .NET to Python, JavaScript, and Java.\n\nAlexander Putilin is a professional programmer and has several years of experience in languages such as Python and C++. He has worked for a lot of years in specializing in Internet-related services and products. He has also worked in the Search Engine department.\n\nJack Stouffer is a programmer who has several years of experience in designing web applications. He switched to Flask three years ago for all his projects.\nMatthew Nuzum has been developing web applications since 1999 and has worked for several start-ups including Canonical, the makers of Ubuntu, as well as Fortune 500 companies. He has a passion for helping others learn new technologies and has written numerous tutorials and help documents as well as running a web-focused user group based in his hometown.\n\nKevin Veroneau is a very active Python and Django developer who has worked for many start-ups, has an active Python blog, and has worked on a magnitude of Python projects over the years.",
      "target_audience": [
        "The Learning Path is aimed at Python developers who are interested in building web applications. But if you are here to learn how to build powerful web applications like the popular ones mentioned previously but are clueless of what Python is, do not worry as Python is one of the simplest languages to learn."
      ]
    },
    {
      "title": "Build Complex Fullstack E-Commerce Project Using Cursor AI",
      "url": "https://www.udemy.com/course/building-complex-fullstack-e-commerce-with-ai/",
      "bio": "Master AI-Driven Development Using Cursor AI. Build Complex E-Commerce Under 2 Hours uisng NextJS | MongoDB |Payment",
      "objectives": [
        "Build a full-stack e-commerce application using AI-powered development with Cursor AI",
        "Integrate Next.js for frontend and backend, and use MongoDB for database management",
        "Implement secure user authentication, product management, and payment gateway integration",
        "Implement AI-driven styling for a modern, responsive, and visually appealing e-commerce UI",
        "Learn pro tips to maximize AI efficiency, automate tasks, and accelerate development with best practices"
      ],
      "course_content": {
        "GETTING STARTED": [
          "Final Project Demo",
          "Project's PRD-Product Requirements Document",
          "Configuring Cursor for this Project",
          "Project Structure",
          "User Authentication",
          "User Dashboard",
          "Mongodb Connection String"
        ],
        "PRODUCT MANAGEMENT": [
          "Product Management",
          "Category and product Management",
          "Multiple image uploads",
          "Restructuring Admin Dashboard",
          "Product Update and Deleting",
          "Updating and Deleting of category",
          "Products Out of Stock",
          "Bulk Operations",
          "Bulk import-export products (CSVExcel)",
          "Update Category",
          "Fetching and fixing updating of categories",
          "Creating of products with new category update",
          "Integrating AI-Product Description Generator",
          "Most Viewed Products",
          "Products Best Selling",
          "Products Analytics Dashboard with Graphs",
          "Home Page Product Lists & Prodocut Details"
        ],
        "PAYMENT INTEGRATION (STRIPE) & CART MANAGEMENT": [
          "Payment Integration",
          "Fixed cart page error",
          "Including Product attribute in Cart Page",
          "Fixed cart page error",
          "Integrating Stripe key",
          "Verifying Payment"
        ],
        "CUSTOMER DASHBOARD": [
          "Implementing Customer Address",
          "Customer's Orders",
          "Product Wishlist",
          "Fetching and Adding customers",
          "Account settings-Customers",
          "User Dashboard Account Summary",
          "Admin Account Summary",
          "Restructure User Dashboard Navigation Links"
        ],
        "OTHER PRODUCT FEATURES IMPLEMENTATIONS": [
          "How to style using Cursor ai-Implementing Public Navbar",
          "Products list page with filtering",
          "Products at Hero Section",
          "Category Carousel",
          "Deal of the day",
          "Product Quick View",
          "Flash sales sections",
          "Most Viewed Products Section",
          "Flash sales page"
        ],
        "HOW TO USE AI FOR STYLING": [
          "Navbar Redesigned",
          "Show Coupon codes",
          "Remove Product lists from homepage-Redesigned Product Details",
          "Footer & Displaying total cart items",
          "Redesign Cart Page",
          "Redesign Checkout page",
          "Redesign Reviews",
          "Redesign Admin and User Dashboard Sidebar",
          "Redesign Login and Register page",
          "Redesign Admin Account summary",
          "Redesign Product pages",
          "Redesign Product Out Of Stock Page",
          "Redesign Bulk Operations Page"
        ]
      },
      "requirements": [
        "Basic programming knowledge is helpful but not required. This course is beginner-friendly",
        "A computer with internet access to install and run development tools",
        "Familiarity with JavaScript and React is a plus but not mandatory. AI tools simplify the process",
        "No prior AI experience needed. You’ll learn how to leverage AI for faster development"
      ],
      "description": "Are you ready to harness the power of AI to build a complex full-stack e-commerce application in record time? This course will guide you step by step in developing a fully functional e-commerce platform using Cursor AI, Next.js, MongoDB, and advanced payment integration—all in under 2 hours.\nWith the rise of AI-driven development, traditional coding is evolving. Cursor AI accelerates the development process, automating repetitive tasks and enhancing efficiency. You'll learn how to build an end-to-end e-commerce solution, from user authentication and product management to payment processing and order management.\nWhat You Will Learn:\nAI-powered development with Cursor AI\nNext.js for frontend and backend integration\nMongoDB for efficient database management\nImplementing secure user authentication\nManaging products, orders, and payments\nIntegrating payment gateways for seamless transactions\nOptimizing performance and scalability\nDeploying the application for real-world use\nWhy Take This Course?\nThis course is perfect for developers who want to fast-track e-commerce development using AI. Whether you’re a beginner or an experienced developer, you’ll gain hands-on experience in building scalable applications with the latest technologies.\nBy the end of this course, you’ll have a fully functional AI-powered e-commerce store ready to launch. Start building smarter, faster, and more efficiently today with AI-driven development.",
      "target_audience": [
        "Developers and entrepreneurs wanting to build AI-powered e-commerce apps.",
        "Beginners looking to learn AI-driven web development easily.",
        "Experienced developers seeking faster e-commerce development with AI",
        "Freelancers and business owners wanting to create online stores quickly",
        "Anyone curious about using AI to build any kind of project"
      ]
    },
    {
      "title": "CSS3 Certification Prep: Comprehensive Practice Tests",
      "url": "https://www.udemy.com/course/css3-certification-prep-comprehensive-practice-tests/",
      "bio": "Your Ultimate Guide to CSS3 Certification Success",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Prepare for your CSS3 certification with our \"CSS3 Certification Prep: Comprehensive Practice Tests\" course. This all-inclusive course is designed to help you master CSS3 through six comprehensive practice tests, covering essential and advanced topics to ensure you're fully equipped for your certification exam.\nCourse Highlights:\nCSS3 Fundamentals: Dive into the basics with practice questions on syntax, selectors, colors, units, and the box model. This foundational test helps you build a solid understanding of CSS3 essentials.\nLayout Techniques: Test your knowledge of layout methods including Flexbox, CSS Grid, positioning, and floating. Gain proficiency in creating flexible and responsive layouts with detailed practice scenarios.\nStyling Text and Fonts: Explore typography basics, web fonts, and text effects. This test covers everything you need to style text effectively, from font properties to advanced text transformations.\nAdvanced CSS3 Features: Master dynamic CSS3 capabilities with practice questions on transitions, animations, transformations (2D and 3D), and custom properties (CSS variables). Enhance your ability to create interactive and visually appealing designs.\nResponsive Design: Evaluate your skills in creating adaptable designs with media queries, mobile-first strategies, and responsive layouts. This test ensures you can design web pages that look great on any device.\nAdvanced Selectors and Pseudo-Classes: Delve into complex selectors and pseudo-classes with practice on attribute selectors, pseudo-classes, and pseudo-elements. Learn to apply advanced styling techniques to refine your CSS skills.\nEach practice test is crafted to simulate the real certification exam environment, helping you assess your knowledge and identify areas for improvement. Detailed explanations are provided for every question to enhance your understanding and problem-solving skills.\nWhy Enroll?\nBuild a strong foundation and advance your CSS3 expertise.\nSimulate the certification exam experience with realistic practice tests.\nGain confidence with targeted preparation and comprehensive explanations.\nAchieve your CSS3 certification goals with thorough practice and insights.\nStart your journey towards CSS3 certification success today. Enroll now to access all six practice tests and gain the confidence you need to excel in your exam.",
      "target_audience": [
        "Those studying web development or design who wish to enhance their CSS3 expertise through practical exam practice.",
        "Individuals eager to master advanced CSS3 features and responsive design techniques to improve their web development skills."
      ]
    },
    {
      "title": "Next.js 14 Event Booking Application",
      "url": "https://www.udemy.com/course/nextjs-14-event-booking-application/",
      "bio": "Build a real-time Event Booking App with latest and cutting-edge technologies Next JS , MongoDB , Clerk Auth , Next UI",
      "objectives": [
        "Building a real world project with Next 14",
        "Using latest concepts of Next JS like app router , api routes , middlewares , layouts etc",
        "Working with Clerk Auth for Authentication , Authorization and Protected Routes",
        "Working with MongoDB for efficient data storage and retrieval.",
        "Connect with firebase and nextjs for media upload functionality",
        "Deploying nextjs applications to vercel",
        "Master nextjs server components by building all the pages using SSR"
      ],
      "course_content": {
        "Introduction": [
          "Project Setup",
          "Folder Structure and NPM Modules",
          "Next UI",
          "Overriding Next UI"
        ],
        "Authentication": [
          "Clerk Auth Intro",
          "Implement Authentication - 1",
          "Implement Authentication - 2"
        ],
        "Mongo DB Connection": [
          "Connect Next App to Mongo DB",
          "User Model",
          "Store Current User To Mongo DB"
        ],
        "Layout": [
          "Layout - Part 1",
          "Layout Part - 2"
        ],
        "Add Event UI": [
          "Intro",
          "Add Event Page",
          "Event Form Steps",
          "Event Form - General Details",
          "Event Form - Guests",
          "Event Form - Location , Date , Time",
          "Event Form - Firebase Integration",
          "Event Form - Media",
          "Event Form Step - Ticket types",
          "Event Form Final Structure"
        ],
        "Add Event API": [
          "Event Model",
          "Add Event API"
        ],
        "Edit and Delete Events": [
          "Get Events",
          "Show Events",
          "Edit Event - 1",
          "Edit Event - 2",
          "Delete Event"
        ],
        "Show Events": [
          "Show Events in Homepage",
          "Single Event Page",
          "Show Ticket Types",
          "Calculate Total Amount"
        ],
        "Payment Gateway Integration": [
          "Stripe Intro",
          "Get Client Secret",
          "Make Payment",
          "Save Booking",
          "Adjust tickets limits"
        ],
        "Show Bookings": [
          "User Bookings",
          "Admin Bookings"
        ]
      },
      "requirements": [
        "Next JS Basics",
        "React",
        "Core Javascript"
      ],
      "description": "Hello, Welcome to the course Next.js 14 Event Booking App\nCertainly, I'd be happy to elaborate on the features included in the Next JS v14 Event Booking Application 2023 course.\n\n\nCreate a new Next.js app and understand the folder structure: Begin by setting up a Next.js application, gaining a comprehensive understanding of its folder organization to ensure a solid foundation for development.\nImplement authentication, authorization, and protected routes: Secure your application by incorporating robust authentication and authorization mechanisms, and establish protected routes to control access to different parts of the app based on user roles.\nConnect our Next.js app to MongoDB: Integrate MongoDB as the database for your Next.js application, ensuring seamless communication and efficient data storage.\nA user with admin access will be able to create, edit, and delete new events: Grant administrative users the capability to manage events by creating, modifying, or removing them, providing full control over the event management process.\nOnce an event is created, it will be available to end users for booking: Enable events to be immediately accessible for booking by end users upon creation, fostering a streamlined and user-friendly booking experience.\nEnd users can view all available events in the portal and book events by paying online using the Stripe payment gateway: Enhance user experience by presenting a comprehensive list of available events, and facilitate online bookings with secure payments through the integration of the Stripe payment gateway.\nEnd users can view their booked events after booking: Allow end users to conveniently track and view the events they have booked, providing transparency and easy access to their event history.\nAdmin can view all user bookings: Provide administrators with a centralized view of all user bookings, facilitating efficient management and oversight of the booking system.\nAdmin can cancel bookings and release tickets based on end user requests: Empower administrators to respond to end user requests by canceling bookings and releasing tickets when necessary, ensuring flexibility and customer satisfaction.\nAdmin can view reports for every event, such as the number of tickets sold and the revenue collected, etc.: Enable administrators to access comprehensive reports for each event, including key metrics such as ticket sales and revenue, allowing for informed decision-making and event performance analysis.",
      "target_audience": [
        "Next JS Developers",
        "Fullstack Developers",
        "Frontend Developers"
      ]
    },
    {
      "title": "HTML,CSS,JS and Projects (Flexbox&Grid)",
      "url": "https://www.udemy.com/course/uwdbc-ultimate-web-development-boot-camp-2021/",
      "bio": "Practical Web Development with Basics, Examples and Complete Projects - Build 5 Websites",
      "objectives": [
        "HTML",
        "CSS",
        "Floating Layouts",
        "Flex Box",
        "CSS Grid",
        "CSS Animations",
        "SASS",
        "Responsive Web Design",
        "Java Script",
        "JavaScript Animations",
        "Web Development Projects"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites are required.",
        "A Computer or a laptop (Windows or Mac)"
      ],
      "description": "Web Development has always been in demand and a must have skill whether you are looking to have a career in web development, or build web site for you.\nUltimate Web Development Development Boot Camp is build on a practical approach taking you through the basics, implementing the knowledge through examples and then each topic is followed by a Complete Web Site Project.\nWhether you are new to programming, already know about the web development and want to take your skills to the advanced level or you are good at web development and looking to have practical projects experience, this course is for you.\nA quick bird eye view of the course contents is given below for your reference.\nIntroduction of World Wide Web\nHow to get the best out of this course\nCoding Environment Setup\nHTML Crash Course\nCSS Crash Course (including CSS Animations)\nCSS Layouts\nCSS Floats\n[PROJECT # 1] DATA CONSULTANTS - Website landing page for a technology company DATA CONSULTANTS with complete design and developed using CSS Floats layout. The project includes responsive web design for the site the work on all different screen sizes.\nCSS Flex Box\n[PROJECT # 2] DRIVE EASY - Website landing page for a driving school company DRIVE EASY with complete design and developed using CSS Flex Box layout. The project includes responsive web design for the site the work on all different screen sizes.\nCSS Grid\n[PROJECT # 3] HOME SERVICES GROUP - Website landing page for a home services company HOME SERVICES GROUP with complete design developed using CSS Grid layout. The project includes responsive web design for the site the work on all different screen sizes.\nResponsive Web Design\nSASS Crash Course\n[PROJECT # 4] WOOD FURNITURE - Website landing page for a wood furniture company WOOD FURNITURE with complete design developed using SASS and various CSS layout techniques i.e. CSS Floats, CSS Flex Box and CSS Grid. The project includes responsive web design for the site the work on all different screen sizes.\nJavaScript Crash Course\n[PROJECT # 5] DEAL SALE - Website landing page for a company offering best deals in town named DEAL SALE with complete design and developed using SASS and JavaScript with various CSS layout techniques i.e CSS Floats, CSS Flex Box and CSS Grid.\nWhat Next - Where to go from here?\n\n\nENROLL NOW and get Life Time access to a complete range of web development resources and projects.",
      "target_audience": [
        "You are completely new to programming",
        "You want to learn about web development",
        "You already know a little about the web development and take your web development skills to advanced level",
        "You way of learning is going through the basics with practical examples and complete projects",
        "You already are good at web development and want to practice with the help of complete projects"
      ]
    },
    {
      "title": "Build a Complete Inventory System Using SpringBoot & React",
      "url": "https://www.udemy.com/course/develop-a-complete-inventory-system-using-springboot-react/",
      "bio": "Build a full-stack inventory management system from scratch with Spring Boot, React, and MySQL, focusing on hands-on dev",
      "objectives": [
        "Learn how to build a full-stack Inventory Management System using Spring Boot, React, and MySQL",
        "Understand JWT authentication and role-based access control for secure user management.",
        "Implement pagination, filters, and advanced database relationships in backend APIs.",
        "Create a dynamic, responsive frontend with React, including data visualization with charts and graphs.",
        "Learn to encrypt tokens in frontend for security concerns"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create-Project, Entities, DTO's, Repositories & Exceptions": [
          "Create Project & Add Dependencies",
          "Connect To Database",
          "Structure Project",
          "Write Entities",
          "DTO's",
          "Create Repositories",
          "Exceptions"
        ],
        "Security Configurations": [
          "Auth User",
          "Custom User Details",
          "JWT Utils",
          "Auth Filter",
          "Security Filter",
          "Cors Config"
        ],
        "Specification Filter": [
          "Specification"
        ],
        "User Service, Controller & Test": [
          "User Service",
          "Auth and Users Controllers",
          "Users Endpoints Postman Test"
        ],
        "Category Service, Controller and Test": [
          "Category Service Implementation",
          "Category Controller",
          "Category Endpoints Test(Postman)"
        ],
        "Supplier Service, Controller Endpoints and Test": [
          "Supplier Service",
          "Supplier Controller",
          "Supplier Endoints Testing"
        ],
        "Product Service, Controller and Test": [
          "Product Service",
          "Product Controller",
          "Product Endpoints Testing"
        ],
        "Transaction Service, Controller and Test": [
          "Transaction Service",
          "Transaction Controller",
          "Transaction API Testing",
          "Logged In User API and Test"
        ],
        "Frontend: Create Project, Services, Layout, Pagination": [
          "Create Project & Install Dependencies",
          "ApiService",
          "Sidebar Component",
          "Layout Component",
          "Pagination Component"
        ]
      },
      "requirements": [
        "Basic knowledge of Java and JavaScript is helpful but not required",
        "Familiarity with HTML, CSS, and SQL is required."
      ],
      "description": "Are you ready to build a powerful, secure, and fully functional Inventory Management System from the ground up? This in-depth, hands-on course will take you through every essential step in developing a full-stack application using Spring Boot, React, and MySQL—covering everything you need to create a professional-grade project that’s ready for real-world use.\nIn this course, you’ll master both backend and frontend development to create a comprehensive system with secure authentication, data encryption, and dynamic data visualization. We’ll start with setting up and configuring a scalable Spring Boot API and gradually advance to implementing a responsive React interface and securing it with industry-best practices.\nWhat You'll Build and Learn in This Course\nDesign a Robust Backend with Spring Boot:\nDatabase Design & Relationships: Learn to design an efficient MySQL database, setting up one-to-many and many-to-many relationships to manage complex inventory data.\nCRUD Operations with Pagination: Implement Create, Read, Update, Delete (CRUD) operations and enhance user experience by adding pagination on the backend.\nDynamic Filtering with Specifications: Use Spring Boot Specifications to build flexible, customizable filters, allowing users to search and sort items efficiently.\nSpring Security & JWT: Secure your application with Spring Security, enabling role-based access control, authentication, and JWT for session management.\nAuthorization, Roles & Permissions: Implement comprehensive authorization logic, setting up roles and permissions to control access for different user types.\nBuild an Interactive Frontend with React:\nResponsive UI & Dashboard Design: Use React to create a user-friendly, responsive inventory dashboard, making it easy for users to manage stock and track data visually.\nCharts & Graphs: Integrate charts and graphs to display inventory statistics, providing insights into stock levels, sales trends, and more.\nSecurity & Data Encryption: Use crypto-js to encrypt sensitive data on the frontend, adding an extra layer of security to user information and transactions.\nAPI Integration: Seamlessly connect your frontend with your backend API, ensuring smooth, reliable data flow between client and server.\nWhy This Course?\nWhether you’re a developer looking to build a real-world project or a beginner eager to advance your skills, this course is designed to provide you with hands-on experience in both backend and frontend development. You’ll gain the skills to set up, manage, and secure a full-stack application and implement features that are used in professional inventory management systems.\nCourse Highlights:\nDesign a relational database with MySQL and learn to manage complex table relationships.\nImplement Spring Boot Specifications for customized data filtering.\nEnable secure authentication and role-based permissions using Spring Security and JWT.\nBuild a dynamic, interactive inventory dashboard with charts and graphs.\nLearn frontend encryption techniques with  for enhanced security.\nStructure and manage API calls effectively between React and Spring Boot.\nBy the end of this course, you'll have a fully operational inventory management system that you can showcase in your portfolio, complete with secure login, role-based access, data visualization, and more. This course will be your stepping stone into advanced full-stack development, equipping you with in-demand skills to build high-quality, professional applications.\nEnroll now and take the next step in your development journey.",
      "target_audience": [
        "This course is designed for beginner to intermediate developers who want to expand their skills in full-stack web development, especially those interested in learning how to integrate Spring Boot, React, and MySQL to build secure and scalable applications. Ideal for anyone looking to gain hands-on experience with backend development, security practices, and dynamic frontend designs"
      ]
    },
    {
      "title": "Big Data and Hadoop : Interactive Intense Course",
      "url": "https://www.udemy.com/course/big-data-and-hadoop/",
      "bio": "Managing Big data using Hadoop tools like MapReduce, Hive, Pig, hBase and many more and Able to crack Cloudera CCA 175.",
      "objectives": [
        "In late 1990s, Developers and Programmers were generating data through coding, in late 2000s everyone on Social media generating data on FB, Twitter, Insta etc and these days Machines are generating data which overall creating a Huge Volume of data which cannot be handled easily through traditional databases, so after completion of this course you'll be able to do that using HADOOP as your platform.",
        "Able to crack Cloudera CCA 175 Certification"
      ],
      "course_content": {},
      "requirements": [
        "Well, it's say that you need to have a knowledge of basics of Core Java and SQL, but when taking course from me, you don't require anything but just English to understand my lectures because everything will be covered here.",
        "Get familiarize with Cloudera CDH.",
        "Work on Hadoop tools like, Hive, MapReduce, Sqoop, Impala, Beeline, etc",
        "NO JAVA REQUIRED IN MY COURSE",
        "Introduction to Apache Spark and Scala, Machine Learning Libraries ( MLLib ), etc"
      ],
      "description": "This is an interactive lecture of one of my Big data and Hadoop class where everything is covered from the scratch and also you will see students asking doubts so you can clear those concepts here as well.\nStudents will be Able to crack Cloudera CCA 175 Certification after successful completion and with little practice.\nTools covered :\n1. Sqoop\n2. Flume\n3. MapReduce\n4. Hive\n5. Impala\n6. Beeline\n7. Apache Pig\n8. HBase\n9. OOZIE\n10. Project on a real data set.",
      "target_audience": [
        "Students who want to step into Big Data, want to know how to Analyse, work on and manage it."
      ]
    },
    {
      "title": "Latest Practice Tests AWS Certified Cloud Practitioner -2023",
      "url": "https://www.udemy.com/course/latest-practice-tests-aws-certified-cloud-practitioner-2023/",
      "bio": "6 AWS Certified Cloud Practitioner Practice Tests CLF-C01 + References + Detailed Explanation",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "In This course you will get 6 AWS Certified Cloud Practitioner CLF-C01 Practice Tests with explanation to gain the knowledge along with references.\nThe AWS Certified Cloud Practitioner offers a foundational understanding of AWS Cloud concepts, services, and terminology. This is a good starting point for individuals in non-technical roles with no prior IT or cloud experience or for those with on-premises IT experience looking for basic AWS Cloud fluency. This certification can give candidates the confidence to tackle role-based AWS Certifications.\nThe AWS Certified Cloud Practitioner (CLF-C01) exam is intended for individuals who can effectively demonstrate an overall knowledge of the AWS Cloud independent of a specific job role. The exam validates a candidate’s ability to complete the following tasks:\nExplain the value of the AWS Cloud\nUnderstand and explain the AWS shared responsibility model\nUnderstand security best practices\nUnderstand AWS Cloud costs, economics, and billing practices\nDescribe and position the core AWS services, including compute, network, databases, and storage\nIdentify AWS services for common use cases\nTo earn this certification, you will need to take and pass the AWS Certified Cloud Practitioner exam (CLF-C01). The exam features a combination of two question formats: multiple choice and multiple response.\nThis certification is intended for candidates who may be:\nFrom a non-IT background and exploring a career in the AWS Cloud\nIn sales/marketing/business analyst roles looking to communicate more effectively with stakeholders and customers about the AWS Cloud\nIn on-premises IT or cloud roles, but new to AWS Cloud, and need a primer before diving into role-based AWS Certifications.",
      "target_audience": [
        "Beginner to Expert level of AWS Enthusiasts"
      ]
    },
    {
      "title": "Angular 17, Python Fast API and MySQL Full-Stack App",
      "url": "https://www.udemy.com/course/angular-17-python-fast-api-and-mysql-full-stack-app/",
      "bio": "learn to create a full stack web application from scratch using Angular 17, Python Fast API and MySQL",
      "objectives": [
        "learn to create a full stack web application from scratch using Angular 17, Python Fast API and MySQL",
        "fullstack web development",
        "mysql db design and table creation",
        "angular 17 ui development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Install and Setup Environment": [
          "Install MySQL",
          "Install Python",
          "Install Fast API",
          "Install Node JS",
          "Install Angular 17",
          "Install Visual Studio Code",
          "Install Postman"
        ],
        "Database : My SQL": [
          "Create database tables"
        ],
        "Backend : Python FAST API": [
          "Create Python Fast API project"
        ],
        "Frontend : Angular 17": [
          "Create Angular 17 project"
        ]
      },
      "requirements": [
        "basic html, css, javascript and python"
      ],
      "description": "Hello Everyone, and welcome to this course on Angular 17, Python Fast API and MySQL full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n\n\n* MySQL for the database.\n* Python Fast API for the back end web development.\n* And the latest Angular 17 for the front end web development.\n\n\n-We will first start with installing and setting up the environment needed for our database, back end project and front end project.\n-Then we will develop REST API end points using Python FAST API module.\n-Finally we will be using Angular 17 to design the front end part of our App.\n\n\nWe are going to build a very simple todo application to manage the tasks. It is going to be very minimalistic in order to focus on the bigger picture of integrating the database, backend and frontend to create a simple full stack application from scratch quickly.\nThis is requires beginner knowledge of Python and basic html CSS and Java script as well.\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        "python developers, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "React JS 2025 Build Complete AI Powered Movie Application",
      "url": "https://www.udemy.com/course/react-js-complete-ai-movie-application/",
      "bio": "In This Course, You Will Build Complete AI Powered Movie Listing Application with React JS And Build It From Scratch",
      "objectives": [
        "Build Complete Ai Powered Movie Application",
        "React js Fundamental",
        "Design Total Application with Material UI From Scratch",
        "Fully Responsive Application for Any Device",
        "User Authentication Login Register",
        "User Authentication Logout",
        "Resume Practical eBook",
        "React Redux Setup",
        "Filter and Search Option",
        "Pagination Setup",
        "Favorited and Watch listed Options",
        "AI Voice Feature Setup",
        "Deployment to Web Server",
        "Dark and Light Mode Setup",
        "Learn how to implement Async/Await, React Router 6, Axios",
        "Work With third party API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome to the Course",
          "Need Your Support",
          "My Mission"
        ],
        "React Fundamentals React Structure": [
          "React Introduction",
          "Create New React App Using Vite",
          "Project Run And Build Command",
          "Dive Inside React Project Structure",
          "Organizing File Folders",
          "Best VS Code Extensions And Settings For React Development",
          "Primary Understanding On Component Part 1",
          "Primary Understanding On Component Part 2"
        ],
        "JSX And Conventions": [
          "JSX And Conventions",
          "JSX Short Hand If else",
          "JSX Immediately invoked function",
          "JSX Loop Inside",
          "JSX Conditional Rendering Using If Else",
          "JSX Conditional Rendering Using Switch Statement",
          "JSX Conditional Rendering Using Ternary Operator",
          "JSX Conditional Rendering Using Logical And And",
          "JSX Conditional Rendering Using Immidiatly Invoked Function"
        ],
        "Manage React Component": [
          "Passing Properties to Child Component",
          "Passing Simple String to Child Component",
          "Passing Object to Child Component",
          "Passing Function to Child Component",
          "Managing Click Event",
          "Managing Form Submit"
        ],
        "React Routing": [
          "Applying React Router Dom",
          "Link And NavLink For Router",
          "Browser Router VS HashRouter",
          "Passing Parameter Via Naviagation"
        ],
        "React Hook & State Management": [
          "[Hook] Meet With Hook",
          "[Hook] useRef InnerText InnerHTML",
          "[Hook] useRef Working With Attribute",
          "[Hook] useRef Working With Input Element",
          "[Hook] useRef Working With CSS Class",
          "[Hook] useRef Caching Expensive Computation",
          "[Hook] useState Understading Inside",
          "[Hook] useState Working With Immutable Object",
          "[Hook] useState Working With Immutable Array Part 1",
          "[Hook] useState Working With Immutable Array Part 2",
          "[Hook] useState Managing Form Like Pro Part 1",
          "[Hook] useState Managing Form Like Pro Part 2",
          "[Hook] useEffect understanding arguments and uses",
          "[Hook] useEffect calling api using promises",
          "[Hook] useEffect calling api usig async await"
        ],
        "Build AI Powered Movie App - Welcome to the Course": [
          "Welcome to the Course",
          "Project Excise File - Downloadable Resource",
          "Environment Setup",
          "Visual Studio Code Setup"
        ],
        "Resume Practical eBook": [
          "The Tech Resume Practical eBook"
        ],
        "Project Initialization & Setup": [
          "The Beginning",
          "GitHub Setup",
          "Dependencies"
        ],
        "Code Architecture": [
          "Intro & Documentation",
          "Component Structure & Routing",
          "Styling Setup"
        ]
      },
      "requirements": [
        "Basic Understanding of JavaScript",
        "Good Grasp of Material UI",
        "HTML and CSS Knowledge",
        "Basic Command Line Knowledge"
      ],
      "description": "React JS 2024: Build Complete AI-Powered Movie Application\nUnlock the full potential of React JS in 2024 with our hands-on course, designed to help you master the art of building a complete AI-powered movie application. Whether you're a beginner or an experienced developer, this course offers a deep dive into the latest React JS techniques and best practices for creating dynamic, interactive web applications.\nWhat You Will Learn:\nReact JS Fundamentals: Build a solid foundation with React JS and understand its core concepts, components, and lifecycle methods.\nAI Integration: Learn how to seamlessly integrate AI technologies to enhance user experiences and make your application smarter.\nState Management: Master state management using Redux Toolkit and Context API to manage complex application states.\nReal-time Data Fetching: Utilize APIs and real-time data fetching with Axios and RTK Query to provide up-to-date movie information.\nRouting and Navigation: Implement robust navigation with React Router, allowing users to explore various sections of your movie app.\nUser Authentication: Set up secure user authentication and authorization to protect user data and enhance app security.\nResponsive Design: Create a responsive and mobile-friendly interface to ensure a seamless experience on any device.\nWhy Choose This Course?\nBy the end of this course, you will have the skills and knowledge to build your own AI-powered movie application using React JS. Stay ahead of the curve in 2024 by learning the latest trends and techniques in web development. This course is perfect for developers looking to enhance their React JS skills and build sophisticated, real-world applications.\nEnroll now and take the first step towards becoming a React JS expert in the rapidly evolving world of AI-powered web development!\nIn this course, you will not just learn you actually doing it. Learn and apply this to a live project with me.\nSound Great right?\nClick the \"Enroll Now\" button at the top right now!\n\nI am excited to see you on the course!\nSincerely,\nKazi Ariyan",
      "target_audience": [
        "Aspiring entrepreneurs planning to launch online marketplaces.",
        "Students studying web development or related fields",
        "Freelancers looking to expand their service offerings",
        "Add This Experience in Work Portfolio",
        "University Project Assignment"
      ]
    },
    {
      "title": "C# Cross-Platform Tricks: Run ASP.NET Applications On Linux",
      "url": "https://www.udemy.com/course/csharp-cross-platform-tricks-run-aspnet-applications-on-linux/",
      "bio": "This course will teach you how to get your ASP.NET web applications up and running on a Linux system",
      "objectives": [
        "Learn how to run ASP.NET applications on Linux",
        "Become familiar with popular Linux distributions",
        "Which parts of the .NET Framework are implemented in Mono?",
        "Build a Linux virtual machine from scratch.",
        "The pros and cons of the Mono Framework.",
        "Run cross-platform code on Windows and Linux.",
        "Migrate ASP.NET applications from Windows to Linux",
        "Handy tips for writing cross-platform C# code",
        "... and much more!"
      ],
      "course_content": {
        "Introduction": [
          "Course Intoduction",
          "Introducing Cross-Platform .NET",
          "Background Info - About Me"
        ],
        "Installing The Mono Framework On Linux": [
          "Section Introduction",
          "A Choice Of Linux Distributions",
          "A Choice Of Virtual Machines",
          "Installing The Virtual Machine",
          "Installing Ubuntu Server",
          "The Linux Architecture",
          "Installing The Mono Framework",
          "Compiling And Running A Simple Application",
          "Section Recap",
          "Installing The Mono Framework On Linux"
        ],
        "Mono On Linux vs .NET On Windows": [
          "Section Introduction",
          "The Limitations Of The Mono Framework",
          "The Linux Path Separator Is Different",
          "The Linux Filesystem Is Case Sensitive",
          "You Cannot Use Absolute Paths",
          "Section Recap",
          "Mono On Linux vs .NET On Windows"
        ],
        "Installing MonoDevelop On Linux": [
          "Section Introduction",
          "Installing The Ubuntu Desktop",
          "Installing The Virtualbox Extensions",
          "A Walkthrough Of The Ubuntu Desktop",
          "Installing MonoDevelop",
          "Revisiting HelloWorld In MonoDevelop",
          "Section Recap",
          "Installing MonoDevelop On Linux"
        ],
        "Running ASP.NET Applications On Linux": [
          "Section Intro",
          "Installing The XSP4 Webserver",
          "A REST File Service On Linux",
          "Razor Rockstars On Linux",
          "An Email Contact Manager On Linux",
          "The Northwind Database Viewer On Linux",
          "Section Recap",
          "Running ASP.NET Applications On Linux"
        ],
        "Final Words": [
          "Course Recap",
          "Bonus Offer"
        ]
      },
      "requirements": [
        "You need a Windows, Mac or Linux laptop with Microsoft Visual Studio, Xamarin Studio or Monodevelop",
        "You should be a beginner, intermediate, or advanced C# developer",
        "That's it!"
      ],
      "description": "BEST COURSE CHOICE for beginners and intermediate C# developers who want to take their skills to the next level and learn how to run ASP.NET applications on Linux.\nIn this course I will teach you how to build a Linux virtual machine from scratch, install the Mono Framework, set up a nice integrated development environment, and install and run a couple of ready-made ASP.NET applications.\nBy the end of the course you will be fluent in running ASP.NET applications on Linux. You will be aware of the scope and power of the Mono Framework, and you will know how to write cross-platform code that runs on Windows and Linux.\nWhy should you take this course?\nYou should take this course if you are a beginner or intermediate C# developer and want to learn how to run your code on Linux. This might seem daunting, but all of my lectures are very easy to follow and I explain everything clearly. You'll have no trouble following along.\nOr maybe you're working in a startup and need to host your C# apps in the cloud? With the cross-platform tricks in this course you can host your code on a cheap Linux provider.\nAct now\nThis course today contains over 4 hours of video content. Enroll now to benefit from the current price and get free lifelong access to all future materials.",
      "target_audience": [
        "Beginner, intermediate, and advanced C# programmers who want to learn how to run ASP.NET applications on Linux.",
        "Developers who are working on a cross-platform application that needs to run on both Windows and Linux.",
        "Professionals in a startup needing to host C# code on cheap Linux cloud providers"
      ]
    },
    {
      "title": "Google Sites Complete Guide: Step by Step From Zero to Pro",
      "url": "https://www.udemy.com/course/google-sites-complete-guide-step-by-step-from-zero-to-pro/",
      "bio": "Create stunning websites with Google Sites for Free. No Coding. Only drag & drop. Unlimited fast & secured websites!",
      "objectives": [
        "Create your own website using Google Sites",
        "Walk-through of Google Sites dashboard",
        "Embed items into a Google Site",
        "Place images, video, text, and more on a Google Site",
        "Use other Google Services to connect to Google Sites",
        "Header Customization in Google Sheet",
        "Learn Footer, Pages & Layouts in Google Sites",
        "Setting Up Contact, About & other Pages",
        "Creating & Playing with Themes",
        "Publishing & Sharing your Google Sites",
        "Restoring & Duplicating Google Sites",
        "Setting up Custom Domain easily",
        "Connecting Google Analytics to track visitors"
      ],
      "course_content": {
        "Introduction to Google Sheets": [
          "Google Sites Complete Guide: Step by Step From Zero to Pro (Promo)",
          "What is Google Sites ?",
          "Google Sites Requirements",
          "Dashboard Quick Tour"
        ],
        "Header Customization in Google Sheet": [
          "Header Related Settings",
          "Header Background Image"
        ],
        "Text Box, Images & Embed Options": [
          "Options: Discussed",
          "Section Options"
        ],
        "Footer, Pages & Layouts in Google Sites": [
          "Creating Footer",
          "Creating Pages",
          "Creating Layouts"
        ],
        "Setting Up Contact Page": [
          "Adding Contact Form",
          "Adding Google Map"
        ],
        "Placeholders, CTA & Collapse Elements": [
          "Working with Placeholders",
          "Working with CTA",
          "Working with Collapse"
        ],
        "Google Products Integrations": [
          "Easily to Setup Integration",
          "Integrations Implementation",
          "Using Announcement Banners"
        ],
        "Themes in Google Sheets": [
          "Google Default Themes",
          "Create Custom Themes"
        ],
        "Publishing & Sharing Google Sites": [
          "Publish Google Sites",
          "Sharing Google Sites"
        ],
        "Restoring & Duplicating in Site": [
          "Restoring in Google Sheet",
          "Duplicating in Google Sheet"
        ]
      },
      "requirements": [
        "No prior experience is necessary",
        "Internet access and a browser"
      ],
      "description": "Welcome to this course, Google Sites Complete Guide: Step by Step From Zero to Pro\nCreating & designing your own website can be difficult if you don't have the knowledge, time, or money to invest, luckily Google Sites is a free alternative that allows ANYONE to create a website quickly and easily.\nIn this course you will learn:\nCreate your own website using Google Sites\nEmbed items into a Google Site\nConnecting Google Analytics to track visitors\nSetting up Custom Domain easily\nRestoring & Duplicating Google Sites\nPublishing & Sharing your Google Sites\nCreating & Playing with Themes\nSetting Up Contact, About & other Pages\nLearn Footer, Pages & Layouts in Google Sites\nHeader Customization in Google Sheet\nUse other Google Services to connect to Google Sites\nPlace images, video, text, and more on a Google Site\nThis class is designed to cut the fluff and get your right into building and creating your own website! Through easy to follow tutorials, you will be a webmaster in no time. This course will show you the ins and outs of Google Sites so that you can create exactly what you want.\nGOOGLE SITES is a boon! One of the best FREE applications available from Google. If you want a quick and easy way of creating a website, just use Google sites. It may not have all the bell and whistles but all intent and purposes, you can create a fully functional website in no time. This is not an exaggeration. Google site really is a very simple application that enables anyone to create a high professional website. Give it a try.\nEnroll today inside this course, Google Sites Complete Guide: Step by Step From Zero to Pro\nSo what are you waiting for? Enroll today!\nEnroll Now!",
      "target_audience": [
        "Someone looking to build their own webpage",
        "Anyone interested in using Google Sites"
      ]
    },
    {
      "title": "Modern JavaScript from Beginner to Advanced",
      "url": "https://www.udemy.com/course/modern-javascript-and-nodejs-from-beginner-to-advanced/",
      "bio": "Learn JavaScript by building real-world apps and creating a beautiful portfolio of projects! Perfect for beginners!",
      "objectives": [
        "Learn everything there is to know about Javascript - from scratch!",
        "JavaScript Basics & Fundamentals",
        "DOM Manipulation",
        "Master the DOM (document object model) WITHOUT jQuery",
        "Learn the power of JSON",
        "Learn to user the Browser Local Storage",
        "OOP ES5 prototypes & ES6 / ES2015 classes",
        "Create real life Applications",
        "Master the latest JS features like async and arrow functions",
        "Node js"
      ],
      "course_content": {
        "Introduction": [
          "Setting up the Environment",
          "Starter File and Course Instructions"
        ],
        "The Console": [
          "First steps in the console"
        ],
        "JavaScript Fundamentals": [
          "Some valuable words of advice for beginners",
          "What is JavaScript (JS)? & Why learn JavaScript?"
        ],
        "Variables": [
          "What are variables?",
          "var let & const"
        ],
        "JavaScript Data": [
          "Data Types",
          "Reference Data Type",
          "Converting Data Types"
        ],
        "JavaScript Math Object": [
          "The Math Object"
        ],
        "JavaScript Strings": [
          "Strings",
          "Template Strings (Template Literals)"
        ],
        "JavaScript Arrays": [
          "Working with Arrays",
          "JavaScript All Array Methodes"
        ],
        "Object Literals": [
          "What are Object Literals?",
          "Adding and Updating Properties of Objects",
          "Nested Arrays & Objects"
        ],
        "Date And Time": [
          "JavaScript Date and Time Functionalities"
        ]
      },
      "requirements": [
        "Basic HTML / CSS knowledge",
        "Basic PC or Mac knowledge"
      ],
      "description": "JavaScript is one of the top in demand programming languages and it is climbing to the very top!\nWhy Learn JavaScript ?\nThis is a simple to answer, go to google and type in the search bar \"Top 10 programming languages\" if JavaScript is in the top 5 then take the Course. Not convinced, then go to google and type in the search bar \"The 10 most in-demand programming languages for developers at top companies\" if JavaScript is in the top 5 then take the Course.\n\n\nWho this course is for:\nLearning JavaScript for the first time? Already using JavaScript and want to master the language? This course is for you!\nThis course if for anyone who wants to use JavaScript to launch an application, switch careers, or freelance as a JavaScript developer.\n\n\nWhat is JavaScript ?\nJavaScript is a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much everything else. .\n\n\nWhat is Node.js?\nNode.js is an open-source, cross-platform, JavaScript runtime environment (Framework) that executes JavaScript code outside a web browser. Node.js lets developers use JavaScript to write command line tools and for server-side scripting—running scripts server-side to produce dynamic web page content before the page is sent to the user's web browser. Consequently, Node.js represents a \"JavaScript everywhere\" paradigm unifying web-application development around a single programming language, rather than different languages for server- and client-side scripts.\n\n\n------ Course Structure ------\nThis course consists of Theoretical and practical parts with Projects. The first half of the course focuses on teaching you the basic syntax of JavaScript. In the first half of the course are many programming exercises and small projects, so you can test your new-found knowledge out. Each of these videos can be easily referenced in the future, so you can always come back and brush up on some topic whenever needed.\n\n\n------ What You'll Learn ------\nMaster the basics of the language, easily understanding variables, objects, arrays, and functions\nUnderstand how to design the structure of the code you write, leading to beautiful and easy-to-read programs\nLeverage JavaScript's built-in methods to increase your productivity regardless of what libraries or frameworks you use\nDevelop practical skills around higher-order functions that you will utilize for years to come\nObserve how the JavaScript and browser work together, and how to increase the performance of JS code\nBuild awesome projects to fill your personal portfolio\nBuild command line tools from scratch using Node JS\nFetch and manage information from third-party API's",
      "target_audience": [
        "Beginner JavaScript",
        "Beginner front end developers",
        "advanced Javascript developers",
        "node js",
        "javascript",
        "web developers",
        "junior web developer",
        "front end",
        "back end",
        "front end web developer",
        "beck end web developer"
      ]
    },
    {
      "title": "Learn Spark and Hadoop Overnight on GCP",
      "url": "https://www.udemy.com/course/learn-spark-and-hadoop-overnight-on-gcp/",
      "bio": "Learn Hands-on by Building Your Own System on Spark and Hadoop",
      "objectives": [
        "For E-Commerce Data Load and Operation Setting Up Hadoop and Spark",
        "Up and Running With Spark on GCP"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Hadoop and Spark is required"
      ],
      "description": "This is a comprehensive hands on course on Spark Hadoop\nIn this course we focused on Big Data and open source solutions around that.\nWe require these tools for our E-commerce end of Project CORE (Create your Own Recommendation Engine) is one of its kind of project to learn technology End-to-End\nWe will explore Hadoop one of the prominent Big Data solution\nWe will look Why part and How part of it and its ecosystem, its Architecture and basic inner working and will also spin our first Hadoop under 2 min in Google Cloud\nThis particular course we are going to use in Project CORE which is comprehensive project on hands on technologies. In Project CORE you will learn more about Building you own system on Big Data, Spark, Machine Learning, SAPUI5, Angular4, D3JS, SAP® HANA®\nWith this Course you will get a brief understanding on Apache Spark™, Which is a fast and general engine for large-scale data processing.\nSpark is used in Project CORE to manage Big data with HDFS file system, We are storing 1.5 million records of books in spark and implementing collaborative filtering algorithm.\nSpark offers over 80 high-level operators that make it easy to build parallel apps. And you can use it interactively from the Scala, Python and R shells.\nSpark powers a stack of libraries including SQL and DataFrames, MLlib for machine learning, GraphX, and Spark Streaming. You can combine these libraries seamlessly in the same application.\nRuns Everywhere - Spark runs on Hadoop, Mesos, standalone, or in the cloud.",
      "target_audience": [
        "Hadoop Learners",
        "Hadoop Developers"
      ]
    },
    {
      "title": "CSS Grid Masterclass",
      "url": "https://www.udemy.com/course/css_grid/",
      "bio": "CSS Grid: The most powerful CSS layout system including responsiveness, positioning, layering etc.",
      "objectives": [
        "CSS Grid",
        "Responsiveness",
        "Native CSS grid system",
        "FR unit",
        "Grid gap",
        "Auto-fit and auto-fill",
        "Implicit grid",
        "Content based size",
        "Positioning",
        "Layering",
        "Accessibility"
      ],
      "course_content": {},
      "requirements": [
        "HTML",
        "CSS"
      ],
      "description": "This is the most advanced and detailed resource online for learning about CSS Grid.\nCSS Grid is a native grid system for CSS. That means you can now create rows and columns natively without relying on 3rd party frameworks or writing loads of boilerplate code. It is also very versatile, allowing you to create all kinds of layout configurations easily.\nThis course is designed to teach you CSS Grid in an easy and straightforward manner.\nI will teach you the foundations of the technology, how to set up your project, creating your first grid and loads of other foundational concepts that you will use extensively in your projects. We will also cover in depth advanced topics like responsiveness, layering and many more.\nPerhaps the best part of this course is the final project. I have put a lot of effort into this project, to make sure you get a realistic, commercial level experience building a website from scratch.\nI will answer all your queries and questions, and if you run into any issues I am here to help you. And remember it has a 30 day money back guarantee so take a look at the course and check out the preview videos.\nI have no doubt that by the end of this course you will feel confident in your ability to use CSS Grid in your next project.",
      "target_audience": [
        "Beginner web developers",
        "Intermediate web developers"
      ]
    },
    {
      "title": "Realtime Chat with Laravel-Livewire: Tall App from Scratch",
      "url": "https://www.udemy.com/course/realtime-chat-with-laravel-livewire-tall-app-from-scratch/",
      "bio": "Master real-time chat apps with Laravel, Livewire, Tailwind, and Alpine.js for seamless interactivity",
      "objectives": [
        "Gain a comprehensive understanding of Laravel, Livewire, and the TALL-Stack and their role in building modern web applications.",
        "You will Learn the principles of real-time communication using WebSockets and how to integrate them into a Laravel application.",
        "You will Master the use of Livewire components to create interactive and dynamic user interfaces.",
        "You will Learn how to make your frontend and backend communicate and share information, enabling the creation of a powerful chat system.",
        "Build a fully functional chat application with features like real-time updates, message history, message read updates, deleting conversations and messages, and",
        "Together we'll Explore advanced topics such as broadcasting notifications, multi-level queries, and securing the chat application.",
        "We'll Leverage the power of Tailwind CSS and Alpine. js to create visually appealing and responsive user interfaces.",
        "Learn and apply best practices for code organization and maintainability within the Laravel Livewire ecosystem.",
        "By the end of this course you will gain the confidence to create your own real-time chat applications using Laravel, Livewire, and the TALL-Stack."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of web development concepts",
        "Familiarity with HTML and CSS",
        "Basic knowledge of PHP and Laravel",
        "You will need a computer or laptop with internet access",
        "Code editor (e.g., Visual Studio Code, Sublime Text)",
        "you will need to a modern web browser (e.g., Google Chrome, Mozilla Firefox) installed on your computer",
        "Make sure PHP and Composer is already installed on your computer - you need to have at least php 8x and composer 2.x.x in order for us seamlessly install Lavavel and dependency packages"
      ],
      "description": "Take your development skills to the next level and master the art of building real-time chat applications with the cutting-edge technologies of Laravel, Livewire, and the powerful TALL-Stack (Tailwind CSS, Alpine.js, Laravel, and Livewire). Join me on a transformative journey that empowers you to create dynamic and interactive chat systems.\n\n\nBy enrolling in this course, you will gain the knowledge and expertise to harness the true potential of Laravel and Livewire, combining their strengths to create a robust, efficient, and interactive chat application. Laravel, renowned as one of the most popular PHP frameworks, provides a solid foundation for your project, while Livewire brings simplicity and interactivity to the forefront.\n\n\nBut it doesn't stop there. With the inclusion of Tailwind CSS, you will have the tools to design captivating and user-friendly interfaces that will leave a lasting impression on your users. Tailwind CSS offers a utility-first approach, enabling you to effortlessly style your chat application and ensure it is responsive across different devices and screen sizes.\n\n\nThroughout the course, we provide comprehensive lesson files and resources, ensuring a seamless learning experience. You can easily follow along with the provided files, allowing you to watch the videos at your own pace. Additionally, all the code from the course is available on our GitHub resource link, providing you with access to the full codebase for future reference and exploration.\n\n\nNow is the time to embark on this exhilarating journey of building an amazing and responsive real-time chat application. Don't miss out on this opportunity to enhance your development skills and create an application that will impress both clients and users alike. Join us today and let's unlock the potential of Laravel, Livewire, and the TALL-Stack together.",
      "target_audience": [
        "Beginner Developers: If you have a basic understanding of web development concepts and want to expand your knowledge by diving into real-time chat application development, this course is a perfect fit for you. It provides a comprehensive introduction to Laravel, Livewire, and the TALL-Stack, allowing you to build practical chat applications from scratch.",
        "Intermediate Developers: If you already have experience with PHP and Laravel, and want to learn how to leverage these technologies to create dynamic and interactive chat applications, this course will provide you with advanced techniques and best practices. You will explore real-time communication using WebSockets, enhance user interfaces with Livewire components, and implement advanced features like notifications and multi-level queries.",
        "Web Development Enthusiasts: If you are passionate about web development and enjoy exploring new frameworks and technologies, this course offers an opportunity to expand your skill set. By mastering Laravel, Livewire, and the TALL-Stack, you will gain valuable knowledge that can be applied to a wide range of web development projects."
      ]
    },
    {
      "title": "Official Next Js Tutorial Code Along - React Web Development",
      "url": "https://www.udemy.com/course/official-next-js-tutorial-code-along-react-web-development/",
      "bio": "Modern 2023 Next.js Industry Level - Build React Web Applications - Javascript - Web Development",
      "objectives": [
        "Web development fundamentals: minification, code bundling, code splitting, run time environments, compilers and engines, JavaScript essentials, and DOM",
        "Next Js Fundamentals: routing, layouts, data fetching, and deployment",
        "Industry Level Best Practices: how to develop and structure Next js and React projects and optimize web applications",
        "Github Real World Simulated Practice: how to use GitHub to create repositories, push and merge code, and use code reviews.",
        "Learn the core concepts of Next js including: SSR to CSR and ISR",
        "Understand how to pre render with Next Js to improve web development performance",
        "In demand Job Skills for Next Js"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed however Web Development fundamentals and JavaScript a big plus"
      ],
      "description": "Next Js is a high in-demand job skill today for Web Development and this course will focus on what companies are truly looking for as a developer.\nNext.js is the most popular React framework for building high-performance and scalable web applications. It is used by companies like Netflix, Airbnb, and Twitch to power their websites and apps. But why is the real question here in which this course aims to guide you forward.\nThis course is a code along of the Official Tutorial of Next Js provided by Vercel to offer the most comprehensive and up-to-date Next.js tutorial on Udemy. It is designed to teach you everything you need to know to build high-performance and scalable React web applications with Next.js.\nThere are too many devs out there using Next Js simply for its maintainable code structures and default routing benefits, or because their team uses it without really understanding how to leverage its true potential to creating industry efficient and lightening speed web applications.\nReact fundamentals: Core React Component Development and State Management with the Virtual Dom including CSR practices and hydration hybrids.\nNext.js fundamentals: Learn the core concepts of Next.js, such as server-side rendering (SSR), client-side rendering (CSR), static site generation (SSG), and incremental static regeneration (ISR).\nPre-rendering: Understand how Next.js pre-renders pages to improve performance and SEO.\nDynamic routes: Learn how to create dynamic routes in Next.js to handle different types of content, such as blog posts, product pages, and user profiles.\nIndustry-level best practices: Discover the best practices for developing Next.js applications in the real world.\nWhat makes this course different from others?\nComprehensive coverage: This course covers extensively pre-rendering, SSR, CSR, dynamic routes, and all the other things that make Next.js so powerful. This will give you the knowledge and skills you need to demonstrate in job interviews why Next.js is so valuable and how to use it hands-on.\nHands-on learning: You will be coding along with the instructor to build a fully deployed blog CMS application with dynamic routes and SSR. By the end of the course, you will have a working blog that you can deploy to production.\nSolid foundation: This course covers extensively key React JavaScript essentials like destructuring, closures, state, and components, as well as key web development basics from the DOM to the virtual DOM. This makes it a great course for beginners who want to learn Next.js, as well as more experienced developers who want to learn more about the latest Next.js features and best practices.\nModular format: This course is a code along step-by-step course, but it is done in a modular format. This means that advanced developers can easily skip the videos that are basic refreshers and just focus on the sections that they are interested in.\nWhy am I the right teacher for you?\nMy name is Clarian, I've worked as a head engineer with top tech and entertainment companies around the world for over 15 years, tech developer, Co-founder for million plus businesses built from scratch, consultant in the space for billion plus tech companies, and I am fully passionate and dedicated to what I teach. My courses and programming is published world wide including on highly regarded computer science publications such as Safari O'Reilly\nI have recently been spending my time building comprehensive training models with clear explanations to help others evolve and grow by demystifying common misconceptions and problems.\nFrom Junior to Senior: Progressively Advanced Topics\nStarting from the junior level, we will guide you through a carefully designed learning path, ensuring that you build a strong foundation. We will cover the fundamentals of React and Next Js, gradually progressing to highly advanced topics that will prepare you to tackle complex real-world projects.\nWhat will you learn in this course?\nWeb Development fundamentals:\nMinification\nCode Bundling\nCode Splitting\nRun Time Envs\nCompilers and Engines\nJavascript Essentials\nDom Fundamentals\nNext.js fundamentals:\nServer-side rendering (SSR)\nClient-side rendering (CSR)\nStatic site generation (SSG)\nIncremental static regeneration (ISR)\nRouting\nLayouts\nData fetching\nDeployment\nPre-rendering:\nHow Next.js pre-renders pages\nBenefits of pre-rendering\nHow to pre-render pages in Next.js\nDynamic routes:\nWhat are dynamic routes?\nHow to create dynamic routes in Next.js\nBenefits of using dynamic routes\nIndustry-level best practices\nHow to structure your Next.js and React applications\nHow to write reusable code\nHow to optimize your Next.js applications for performance and SEO\nBuilding a blog CMS application:\nCreating a new Next.js project\nSetting up routing and layouts\nFetching data from an API\nDisplaying data in React components\nDeploying the application to production\nGitHub for real-world flow:\nWhat is GitHub?\nHow to create a GitHub repository\nHow to push and merge code\nHow to use code reviews\nKey React JavaScript essentials:\nDestructuring\nClosures\nState\nComponents\nWho should take this course?\nThis course is ideal for:\nBeginners who want to learn Next.js\nExperienced developers who want to learn more about the latest Next.js features and best practices\nYou're sitting in a job interview for a React developer position. The interviewer asks you about your experience with Next.js. You don't just say blankly its a framework for React that provides a default structure for the code. Instead you confidently explain the core concepts of Next.js, such as SSR, CSR, SSG, and ISR. You also discuss the benefits of using Next.js to build high-performance and scalable web applications.\nThe interviewer is impressed\nEnroll today and start your journey to leveling up",
      "target_audience": [
        "Junior developers looking to build a strong foundation in Next Js and advance their React skills.",
        "Intermediate React developers seeking to master Next Js and excel in high-level React and Next js interviews.",
        "Senior web developers aiming to stay updated with modern Next Js concepts and industry requirements.",
        "Developers looking to enhance their understanding of advanced Next Js topics, such as rendering, dynamic routing, and more"
      ]
    },
    {
      "title": "AI-Powered JavaScript, Vue and React Apps with Google Gemini",
      "url": "https://www.udemy.com/course/gen-ai-in-javascript-react-and-vue-innovative-web-apps-with-gemini-sdk/",
      "bio": "Build AI Chatbots and Integrate Gen AI Features into your Web Apps using JavaScript SDKs from Google Gemini",
      "objectives": [
        "Integrate Generative AI into Web Apps: Learn how to use Google AI JavaScript SDKs to add AI features to your Apps",
        "Build AI-Powered Web Projects: Develop three practical projects, including a science facts generator, a chatbot assistant, and a document/image processing app",
        "Customize AI Responses with JSON: Master JSON schema to control and refine AI-generated outputs for structured and meaningful user interactions",
        "Secure AI Integrations in Web Apps: Understand security best practices for handling API keys and safely integrating AI models into your front-end and Apps",
        "Enhance User Experience with AI: Use AI for content generation, chat automation, document summarization, and recommendation engines to create engaging web apps"
      ],
      "course_content": {
        "Getting Started with AI JavaScript SDKs": [
          "Course Introduction",
          "Setting Up The Environment",
          "Getting Started with Project #1: Science Facts Generator",
          "Google AI SDK Code",
          "Integrating the Google AI SDK",
          "Implementing Error Handling",
          "Working With JSON Structured Responses",
          "Presenting the AI-Generated Categories",
          "Selecting a Category",
          "Generating the Category-Based Science Fact",
          "Exercise: How to Use Content Generation on Real-World Scenarios"
        ],
        "Chatbot Assistants & Streamed Responses": [
          "Project #2: The Chat Assistant - HTML & CSS Parts",
          "Collecting User Messages",
          "Code for the Next Lesson",
          "Starting the Chat With Google AI",
          "Handling API Errors",
          "Feeding the Model with the Business Information",
          "Adding a Loader to the Chat",
          "Adding Streamed Responses",
          "Final Improvements to the chat"
        ],
        "Vision Capabilities for Image & Video Prompts": [
          "Project #3: Image and Document Processing",
          "Creating a New React Project",
          "CSS Code For the Project",
          "The Basic Components of the Project",
          "The File Upload Functionality",
          "Passing the File to the Summary Component",
          "Getting the Summary From Google AI",
          "Adding a Loader to the Summary Component",
          "Displaying the Image Preview to Users",
          "Working with PDF Documents",
          "CSS For the Chat Component",
          "The Chat Component",
          "The Chat Functionality",
          "Chatting with Google AI",
          "Exercise: How to Use Chat Assistant on Real-World Scenarios"
        ],
        "Keeping Your API Keys Safe": [
          "Security Issues with API Keys in Web Apps",
          "Secure Gen AI Integration with Firebase Vertex AI"
        ],
        "Quiz Generator with Vue JS": [
          "CSS Code for the Project",
          "Creating a New Vue JS Project with Vite",
          "The Start Screen of the Application",
          "Getting the Quiz Topic From the User",
          "Getting the Quiz Question from Google Gemini",
          "Getting Structured JSON Responses",
          "Changing Screens with Declarative UI",
          "Presenting The Question to the User",
          "Writing The Logic to Control the Current Question",
          "Presenting the Options to the User",
          "Selecting and Submitting an Answer",
          "Ending the Quiz",
          "Presenting the Results",
          "Final Improvements - Error Handling and The Restart Button"
        ]
      },
      "requirements": [
        "HTML & CSS – Basic web development skills to structure and style your applications.",
        "JavaScript – Basic understanding of variables, functions and async operations.",
        "React or Vue (Optional) – If you want to follow along with the React/Vue examples, basic familiarity with components and state management is helpful.",
        "No AI or Machine Learning experience is required! This course focuses on using ready-made AI SDKs to enhance web applications without needing deep AI expertise."
      ],
      "description": "Generative AI in JavaScript, Vue & React Apps: Full Guide with 4 Projects\nImagine leveraging the power of Generative AI technologies to bring innovation into your web applications.\nIn this course, you’ll learn how to integrate Google Gemini JavaScript SDKs directly into your Web Applications, transforming them into intelligent, interactive experiences.\nWhat You'll Build\nThroughout this course, you’ll create 4 hands-on projects that showcase real-world applications of AI, from simple HTML & CSS projects to React and Firebase environments. Each project is designed to help you build practical skills that will set you apart as a developer. Here are just a few examples of what you’ll work on:\nContent Generation – Create a science facts generator based on the category chosen by the user.\nChatbot Assistant – Set up a conversational chatbot that can answer questions, provide guidance, or hold a friendly chat, following business guidelines and information.\nDocument Processing – Analyze images and pdf documents, summarize them and answer any questions from the user about it.\nQuiz Generator – Create an interactive quiz for any topic entered by the user.\nThese projects will empower you to build AI-powered features that are both useful and engaging, giving you a portfolio that demonstrates your expertise in applied AI.\nCustomizing AI Responses with JSON Schema\nOne of the most powerful aspects of this course is learning how to customize AI responses using JSON schema. You’ll gain control over the structure and format of AI-generated content, enabling you to adapt it to a wide range of use cases.\nWith JSON schema, the possibilities are endless—whether you're building educational tools, storytelling apps, or task assistants, you’ll have the skills to shape AI outputs exactly as you envision.\nExecuting Cloud Functions with AI\nIn this course, you’ll also learn how to execute cloud functions to expand the capabilities of your applications, allowing you to trigger AI tasks in response to user actions and automate backend workflows. By combining Firebase and AI, you’ll be able to create powerful, data-driven applications with real-time insights.\nExample Projects for Cloud Functions\nPersonalized Recommendation Engine – Use AI to analyze user behavior and generate tailored recommendations, enhancing user engagement.\nAutomated Content Analysis – Build a backend service that evaluates user-generated content, provides real-time sentiment analysis, and offers insights to users.\nThese examples demonstrate the versatility and power of cloud functions, enabling you to create AI-enhanced applications that are both interactive and scalable.",
      "target_audience": [
        "Beginner JavaScript developers curious about integrating Gen AI into their projects",
        "Frontend developers looking to add AI-powered features to their web apps",
        "React & Vue developers who want to leverage AI APIs and SDKs",
        "Tech professionals exploring AI-driven web app ideas",
        "Tech learners & students wanting an easy intro to AI in web development"
      ]
    },
    {
      "title": "Java Web Application Development (Adv Java)",
      "url": "https://www.udemy.com/course/java-web-application-development-adv-java/",
      "bio": "Servlets and JSP",
      "objectives": [
        "Student can create own web application",
        "Student will be able to know how to utilize the various available resources like xml,html,jsp etc without need of other's help."
      ],
      "course_content": {
        "JDBC": [
          "Introduction To JDBC"
        ],
        "How To Establish Connection JDBC": [
          "How To Establish Connection JDBC"
        ],
        "Executing DML Commands": [
          "Executing DML Commands"
        ],
        "Executing Queries": [
          "Executing Queries"
        ],
        "Prepared Statements": [
          "Prepared Statements"
        ],
        "Stored Procedures and Callable Statements": [
          "Stored Procedures and Callable Statements"
        ],
        "Batch Execution and Auto Increment Column": [
          "Batch Execution and Auto Increment Column"
        ],
        "Working With Binary Data Blob Column": [
          "Working With Binary Data Blob Column"
        ],
        "Transaction Management In JDBC": [
          "Transaction Management In JDBC"
        ],
        "Web Programming Introduction and Servlets": [
          "Introduction to CGI"
        ]
      },
      "requirements": [
        "core java and knowledge of database."
      ],
      "description": "Advanced Java Training is designed for those Java\n\nprogrammers who already have strong programming skills on JSE (Java\nStandard edition) and want to learn the advanced features of Java SE.All the concepts\nof advanced java are taught in detail and enthusiasm is generated in\nstudents to practically learn the subject. By opting this you will be\nable develop any kind of web based applications.",
      "target_audience": [
        "fresher/college student",
        "who wants to develope web application using java."
      ]
    },
    {
      "title": "HTML5 Canvas Graphics and Animations",
      "url": "https://www.udemy.com/course/html5-canvas-graphics-and-animations/",
      "bio": "Your very own digital canvas!",
      "objectives": [
        "Set up and configure a HTML5 Canvas project.",
        "Draw lines, rectangles, curves, and arcs with JavaScript.",
        "Compose basic forms to create other shapes.",
        "Style and change color for your drawing tools.",
        "Utilize images and transformations for the canvas.",
        "Animate drawings."
      ],
      "course_content": {
        "HTML5 Canvas Graphics and Animations": [
          "Overview",
          "Introduction to the Canvas Element",
          "Drawing Lines and Rectangles",
          "Drawing Lines and Rectangles Pt. 2",
          "Drawing Curves and Arcs",
          "Drawing Curves and Arcs Pt. 2",
          "Drawing Curves and Arcs Pt. 3",
          "Creating Other Shapes",
          "Creating Other Shapes Pt. 2",
          "Drawing Styles and Colors",
          "Drawing Styles and Colors Pt.2",
          "Drawing Text",
          "Drawing Gradients",
          "Drawing Gradients Pt. 2",
          "Using Images",
          "Using Images Pt. 2",
          "Using Images: Grayscale Filter",
          "Using Transformations",
          "Using Transformations Pt. 2",
          "Clipping and Composites",
          "Clipping and Composites Pt. 2",
          "More About Animations",
          "More About Animations Pt. 2",
          "Let's Build It: Particles Everywhere",
          "Let's Build It: Particles Everywhere Pt. 2",
          "Responding to Events"
        ]
      },
      "requirements": [
        "Familiarity with JavaScript.",
        "Understanding of using JavaScript to manipulate DOM elements."
      ],
      "description": "HTML5 Canvas Graphics and Animations\nHTML5 Canvas elements bring art and animation to the browser. In this series, we explore the capabilities of the HTML5 Canvas element in conjunction with JavaScript. This includes simple \"pen\" drawings, image displaying, image manipulation, and animations. Knowing HTML5 Canvas provides a great way to start with in-browser games as well as expressing those artistic desires. Hope to see you there!\nCourse Format\n•          Binge-worthy TV shows! Watch comprehensive, in-depth episodes that use a talk show-like format to keep you engaged while learning.\n•          You can pick and choose episodes or you can watch as a complete series.\n•          A little humor, anecdotes, and real-world examples.\nOther Courses\nReady to become a DevPro? Get more DevProTV training with a variety of topics. Join Justin and DevProTV to level up your programming prowess!\nUpdates and Versions\nThe programming world updates at a break neck pace. As a result, there are times that certain tools, editors, libraries have changed. While syntax or names may change, the foundations remain the same. Though we hope to keep things updated, there may be time before that can occur. I recommend seeing if you can translate between changes and if all fails, ask questions!",
      "target_audience": [
        "Web developers with an interest in drawing and coloring HTML elements.",
        "Artists looking to access the web browser as a medium."
      ]
    },
    {
      "title": "Master AI: A Beginner’s Guide to Coding with Cursor",
      "url": "https://www.udemy.com/course/master-ai-a-beginners-guide-to-coding-with-cursor/",
      "bio": "For creators, solopreneurs, and aspiring developers. Create your own websites and web apps.",
      "objectives": [
        "Understanding the role of AI in software development",
        "Gaining proficiency in using Cursor, an AI-assisted coding tool",
        "Mastering basic coding concepts",
        "Applying AI-assisted coding techniques to practical projects"
      ],
      "course_content": {
        "Introduction to AI in Software Development": [
          "Introduction to AI in Software Development",
          "What is AI?",
          "Why Use AI for Coding?",
          "Top AI Models in Programming"
        ],
        "Getting Started with Cursor": [
          "Getting Started with Cursor",
          "What is Cursor?",
          "Setting Up Cursor",
          "Setup After Installation",
          "Navigating the Interface"
        ],
        "Basic Coding Concepts": [
          "Basic Coding Concepts",
          "Understanding Programming Languages - Text",
          "Writing Your First Program",
          "Writing Your First Program - Text",
          "Using Next.js, React, and Tailwind CSS",
          "Using Next.js, React, and Tailwind CSS - Text",
          "Exploring Astro",
          "Exploring Astro - Text"
        ],
        "AI-Assisted Coding": [
          "AI-Assisted Coding",
          "How Cursor Enhances Your Coding",
          "Using AI to Generate Code",
          "AI-Powered Debugging"
        ],
        "Practical Projects for Beginners": [
          "Building a Simple Calculator",
          "Building a Simple Calculator - Text",
          "Creating a Todo List App - Text",
          "Creating a Todo List App",
          "Your First Website",
          "Your First Website - Text"
        ],
        "Learning Resources and Next Steps": [
          "Expanding Your Knowledge",
          "Joining a Community",
          "Youtubers",
          "X.com",
          "Continuous Learning"
        ],
        "Frequently Asked Questions": [
          "Common Issues and Fixes"
        ]
      },
      "requirements": [
        "No Programming Experience required"
      ],
      "description": "Are you struggling to start coding or find traditional learning methods too overwhelming? Imagine if you could unlock the power of AI to make coding easier and more enjoyable.\nIntroducing ‘Master AI: A Beginner’s Guide to Coding with Cursor’ !\nA comprehensive course designed specifically for creators, solopreneurs, and aspiring developers. With this guide, you’ll learn how to harness the power of AI to write code efficiently, even if you’re just starting out.\nWhat if coding could feel less like a challenge and more like a creative process? That’s exactly what this course offers. Whether you’re brand new to software development or looking to enhance your skills, we’ll guide you through using Cursor, an AI-powered code editor that accelerates your workflow by providing intelligent code suggestions and real-time debugging.\nHere’s a sneak peek at what’s inside:\n• Introduction to AI in Software Development: Understand how AI can assist in writing and debugging code, making coding accessible to everyone, regardless of experience level.\n• Getting Started with Cursor: We’ll show you how to set up Cursor and start coding. This tool accelerates your development workflow by providing code suggestions that save you time and help you learn faster.\n• Basic Coding Concepts: Dive into essential languages like HTML, CSS, and JavaScript with clear, step-by-step examples. Build a strong foundation while seeing firsthand how Cursor’s AI capabilities enhance your learning.\n• AI-Assisted Coding: Learn how to use Cursor’s AI to write code, debug errors, and refactor your projects. This isn’t just theory; it’s hands-on learning that will make you more efficient and confident in your coding abilities.\n• Practical Projects: Apply what you’ve learned with real-world projects like building a calculator, creating a to-do list app, and launching your first website. This is where theory turns into practical skills.\n• Learning Resources and Next Steps: Your journey doesn’t end here. Access additional resources and communities to continue expanding your knowledge.\n• FAQ: Answers to common challenges that beginners face, helping you overcome obstacles with ease.\nWhy choose this course?\nPicture yourself confidently writing and refining code without the usual frustrations. Our course provides:\n• No Prior Experience Required: We start with the basics, ensuring that even total beginners can follow along.\n• Step-by-Step Guidance: From setting up Cursor to writing your first lines of code, every step is clearly explained.\n• Hands-On Projects: Apply your knowledge through practical projects that reinforce what you’ve learned. By the end, you’ll have built tangible projects, including a fully functional website.\n• Continuous Learning: We offer recommended resources and communities so that you can keep growing beyond the course.\nThousands of learners just like you have transformed their coding journey with Cursor’s AI-powered capabilities. Imagine the ease and satisfaction of coding with AI by your side. Here’s what one of our beginners had to say: “This course made coding accessible and fun. I never thought I could learn to code so quickly and effectively!”\nReady to start your AI coding journey?\nSign up today to ‘Master AI: A Beginner’s Guide to Coding with Cursor’ and experience the difference. To get the most out of the course, you’ll need Cursor’s Pro Plan ($20/month), but don’t worry – you can start with a free 2-week trial and cancel anytime if it’s not for you.\nUnlock the power of AI in coding and take the first step toward mastering software development. Get started now and see how effortless and enjoyable coding can be with AI by your side!",
      "target_audience": [
        "Beginner developers wanting to learn the basics of Cursor"
      ]
    },
    {
      "title": "Full Redux Course-Redux from Beginner To Advanced Level 2022",
      "url": "https://www.udemy.com/course/redux-for-beginners-with-basic-application-with-react/",
      "bio": "Learn Redux Fundamentals and Basics With A Project",
      "objectives": [
        "Get A Knowledge Of How To Build Things With Redux",
        "Get Knowledge Of How To Build The React Redux Applications",
        "Prepare for Real Time Redux Apps",
        "Learn Redux Toolkit"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome"
        ],
        "Installations and Folder Structure": [
          "Basic Terminologies",
          "Setup For The Project"
        ],
        "Building Counter Application": [
          "Counter App With Redux!",
          "Using The ReduxToolkit"
        ],
        "Diving Into Advanced Project - Shopping Cart Application": [
          "Introduction To The Shopping Cart App",
          "Installation and Setup",
          "Creating Auth Slice For Login & Logout",
          "Creating Cart Slice For Cart State",
          "Displaying Cart Items",
          "Adding Remove and Add To Cart Functionality From Cart",
          "Fixing Cart Icon and Total Price",
          "Creating Logout Functionality"
        ],
        "Asynchronous Tasks With Redux - Shopping Cart Application": [
          "Setting Up Firebase",
          "Sending HTTP Requests",
          "Creating Notifications For HTTP Requests",
          "Using Redux Thunk!",
          "Fetching Cart Data From Firebase"
        ],
        "Thank You": [
          "Thank You and Summary!"
        ]
      },
      "requirements": [
        "Basic Knowledge of ReactJS is Required"
      ],
      "description": "Hey Everyone,\nThis course is for those who know ReactJS and wants to learn Redux. We have designed this course as Beginner Friendly and Even If you know Redux, then you can take this as a Refresher and we have used Redux Toolkit also for the State Management. And We are using Thunk Pattern As Well for HTTP Requests and Asynchronous Tasks.\n\n\nRedux: Redux is an open-source JavaScript library for managing and centralizing application states. It is most commonly used with libraries such as React or Angular for building user interfaces. Similar to Facebook's Flux architecture, it was created by Dan Abramov and Andrew Clark.\nReact - Redux:  React Redux is the official React binding for Redux. It allows React components to read data from a Redux Store, and dispatch Actions to the Store to update data. Redux helps apps to scale by providing a sensible way to manage the state through a unidirectional data flow model. React Redux is conceptually simple. It subscribes to the Redux store, checks to see if the data which your component wants have changed, and re-renders your component.\nRedux-Toolkit: Redux Toolkit is the official, opinionated, batteries-included toolset for efficient Redux development. It is intended to be the standard way to write Redux logic, and we strongly recommend that you use it.\nIt includes several utility functions that simplify the most common Redux use cases, including store setup, defining reducers, immutable update logic, and even creating entire \"slices\" of state at once without writing any action creators or action types by hand. It also includes the most widely used Redux addons, like Redux Thunk for async logic and Reselects for writing selector functions, so that you can use them right away.\n\n\nWhat you will learn:\nBasics of Redux\nRedux States\nRedux Stores\nHandling Data with only one store\nHandling Multiple Reducers\nRedux Toolkit Uses\nManaging Slices\nUsing Dispatch\nUsing useSelectors\nProviding App Wide State\nAdvanced Redux\nAdvanced Concepts\nRedux States\nMultiple Slices\nAsynchronous Tasks With Redux\nHandling HTTP requests\nManaging Notifications States\nUsing Firebase For Requests\nFirebase Realtime Database\nStoring and Fetching Cart Data in Firebase\nNow there is so much introduction. Let's see you in the course.",
      "target_audience": [
        "Beginner who want to learn Redux With ReactJS"
      ]
    },
    {
      "title": "Chatbots : Building chatbot with Oracle Digital Assistant",
      "url": "https://www.udemy.com/course/chatbots-building-chatbot-with-oracle-digital-assistant-l/",
      "bio": "Oracle Digital Assistant",
      "objectives": [
        "Understand the working principle of chatbots",
        "chatbots concepts like Intents, Entities & Dialogs",
        "Build your own chatbot using Oracle Digital Assistant",
        "OBotML & conversation Designer tool"
      ],
      "course_content": {
        "Course Overview": [
          "Course Overview"
        ],
        "Oracle Cloud": [
          "Create account on Oracle cloud",
          "Overview of Oracle Cloud Digital Assistant"
        ],
        "Chat Bot": [
          "What is Chat Bot?",
          "Creating instance of Oracle Digital Assistant",
          "Digital Assistant"
        ],
        "Components of chat bot": [
          "Skills",
          "Intents",
          "Entities"
        ],
        "Chat bot flow": [
          "OBotML & dialogflow",
          "Building conversation with Conversation designer"
        ],
        "Integration": [
          "Integrate skill with Assistant",
          "Conclusion"
        ]
      },
      "requirements": [
        "Nothing required!!"
      ],
      "description": "Chatbots are software agents capable of having interaction with human. The demand for chatbots are increasing everyday and the reason behind this is not implausible. They can also greatly build your brand so it is not surprise that being able to create a chatbot is a very lucrative skill.\n\n\nOracle Digital Assistant is the platform which allows user to utilize Artificial Intelligence without the coding background. After this course you will be able to build chatbot, will can learn by itself by leveraging on Oracle's  Natural Language Processing (NLP) capabilities.\n\n\nIn this course you will learn how to:\nUnderstand the working principle of chatbots.\nBuild your own Chatbot using Oracle Digital Assistant.\nYou will also learn ObotML & Oracle conversation designer tool",
      "target_audience": [
        "Anybody interested in Computer Software",
        "People interested in Artificial Intelligence",
        "People interested in building chatbots",
        "People interested in learning Oracle Digital Assistant"
      ]
    },
    {
      "title": "JavaScript: Core And Advanced Techniques",
      "url": "https://www.udemy.com/course/javascript-core-and-advanced-techniques/",
      "bio": "Become A Pro Developer In JS By Understanding The Core JS Concepts Which You Will Never Find On Most Of The Tutorials.",
      "objectives": [
        "Become an advanced, confident, and modern JavaScript developer",
        "Understanding the basic building blocks of functions, Concept of hoisting.",
        "Function Context, Concept and caveat of using \"this\"",
        "Understanding the concepts of constructor functions",
        "Details about the function arguments and explaining the \"arguments\" keyword",
        "Understanding of Closure problems and its implementation.",
        "Concepts of inheritance and prototypical inheritance in JS",
        "Understanding and enforcing function context.",
        "Solving a real world problem using all the techniques covered."
      ],
      "course_content": {
        "Welcome! Getting started..": [
          "Introduction",
          "Our Goal",
          "READ: Before You Start",
          "WATCH: Before You Start"
        ],
        "Depth Of Functions": [
          "Some Helper Methods",
          "Defining functions, function scope and function hoisting",
          "Named functions, Functions as objects",
          "ES6: Functions",
          "QUIZ: Can you cache the results of this function?"
        ],
        "Context Of The Function": [
          "Context",
          "QUIZ: How can we implement looping with a callback?",
          "ES6: Context"
        ],
        "Object Instantiation & Functions As Class Template": [
          "Function & Instantiation"
        ],
        "Function Arguments & Parameters": [
          "Flexible Arguments",
          "QUIZ: Convert array-like objects into actual arrays. Can any built-in methods help?",
          "QUIZ: Implement a multiplication function (first argument by largest number).",
          "ES6: Parameters"
        ],
        "Usage Of Spread Operator": [
          "Copy And Clone Array and Object",
          "Pass Array To Params Using Spread Oprators"
        ],
        "Closures": [
          "Closures",
          "QUIZ: A Counter Dilemma, Function to increment counter.",
          "Explanation Of Closures Problem",
          "ES6: variables: let & const"
        ],
        "Prototypes & Inheritance": [
          "Importance Of Prototypes",
          "Inheritance",
          "QUIZ: Let's try our hand at inheritance.",
          "Built-in Prototypes"
        ],
        "Object Instantiation & Classes": [
          "ES6: Class & Instantiation",
          "ES6: Class Inheritance"
        ],
        "Enforcing Function Context": [
          "Enforcing Function Context - Part 1",
          "Enforcing Function Context - Part 2",
          "Enforcing Function Context - Part 3",
          "ES6: Enforcing Function Context"
        ]
      },
      "requirements": [
        "Basic Understanding of any programming language.",
        "Any computer and OS will work — Windows, macOS or Linux.",
        "A basic understanding of HTML and CSS is a plus, but not a must!"
      ],
      "description": "Hello Everyone,\nWelcome to your first step on the path to becoming a JavaScript ninja! In this course, I'll be teaching you many core concepts and advanced techniques of my absolute favorite language (JavaScript!).\n\n\nYou will learn modern JavaScript step-by-step. I will guide you through practical and fun code examples, and important theories about how JavaScript works behind the scenes.\n\n\nYou will also learn how to think like a developer, how to plan features, how to architect your code, how to debug code, and a lot of other real-world skills that you will need in your developer job.\n\n\n\n\nWho this course is for:\nThose who already have programming skills and wants to become an expert in JavaScript\nFront-end/Back-end developers who want to level up their JavaScript knowledge using modern, cutting-edge techniques\n\n\nRequirement:\nBasic Understanding of any programming language.\nAny computer and OS will work — Windows, macOS, or Linux.\nA basic understanding of HTML and CSS is a plus, but not a must!\n\n\nWhy am I the right JavaScript teacher for you?\nMy name is Taha Shahid, I'm an experienced web developer,  I have been teaching on-site Programming/Development courses since 2013 to thousands of Students, always listening to feedback and understanding exactly how students actually learn.\nRecently, I took all my teaching experience to build this JavaScript course. It's the most in-depth JavaScript course that you will find on Udemy.",
      "target_audience": [
        "Everyone wants to make a career in Web Development"
      ]
    },
    {
      "title": "Building & Consuming REST APIs in Python with Django",
      "url": "https://www.udemy.com/course/building-consuming-rest-apis-in-python-with-django/",
      "bio": "Build professional REST APIs with Django and integrate it with React",
      "objectives": [
        "Set up your own application project in Django",
        "Organize your Django project development and production environment",
        "Write Django views and use routes to handle incoming requests",
        "Create your own Django templates for your Python web API and learn to use template filters and tags",
        "Work with RESTful APIs in Django",
        "Quickly build clean APIs with the Django REST Framework",
        "Design the user interface of your application using React components",
        "Integrate Django APIs with your React frontend to build a bookmarking application"
      ],
      "course_content": {
        "Building REST APIs with Python": [
          "The Course Overview",
          "The Bigger Picture",
          "Your Development Environment",
          "Installing PostgreSQL",
          "Django Projects and Apps",
          "Using the Django Development Environment",
          "MVC and MVT Framework",
          "Creating and Working with Models",
          "Migrations and Database Queries",
          "Writing Our First View",
          "Routing and HTTP Methods",
          "Using Templates",
          "Testing",
          "Exploring RESTful APIs",
          "Writing a Simple Hello World API",
          "Exploring the DRF",
          "Serializing Models",
          "Refactoring Our API with the DRF",
          "Generic Django REST Framework Views",
          "Extra Viewset Actions and Routers",
          "Testing the API",
          "Test Your Knowledge"
        ],
        "Consuming Python APIs with React": [
          "The Course Overview",
          "The Big Picture",
          "Single-Page Applications and Frontend Frameworks",
          "JavaScript Tooling and NodeJS",
          "Setting Up React",
          "Employing Components for Building Your UI",
          "Data and State",
          "Routing",
          "Testing",
          "Handling Authentication",
          "Create and Read Operations",
          "Routing and User Bookmarks",
          "Updating Bookmarks and Notes",
          "Bookmark Comments and Delete Operations",
          "Custom REST Operations",
          "Deployment Considerations",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Working knowledge of Python is required."
      ],
      "description": "One of the best things about Python is that it fits well into any web developer skill set. With the help of Django, Python’s high-end web framework, you can rapidly develop your own websites and build web APIs that are clean and easy to maintain, all while allowing you to integrate your Python code with powerful JavaScript frameworks. If you are a web developer who wants to build full-stack Python apps by creating APIs in Django and then integrating it with React, a frontend JavaScript framework, then go for this course.\nThis comprehensive 2-in-1 course is a step-by-step tutorial which is a perfect course to create and learn the use of Django REST APIs to make fully-functioning Python applications. You will first set up the development environment for your application. You will then build the backend of your application by creating RESTful APIs in Django. Next, you will learn to build and use React components for designing the UI of your application, and work with React code’s data and state to determine the behavior of it. Finally, you will learn to integrate your Django RESTful APIs with the React frontend to build a complete bookmarking application.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nIn the first course, Building REST APIs with Python, you will delve into key aspects such as code reusability, deployment, and maintaining your application. You will learn production server configuration and bundle technologies with Python along with React to provide an end-to-end web development solution. You will learn to create REST APIs in Django.\nIn the second course, Consuming Python APIs with React, you will start by quickly setting up your JavaScript tools and Node.js, as well as React.js for building a bookmarking application project. You will then put together your basic frontend code for interacting with your Django backend. You will also learn to build and use React components for your application's UI, and work with your React code's data and state to determine how your application behaves. Next, you will explore routing and event handling for your application. You will delve into backend interaction details, such as authentication for login. Finally, you will learn to consume your Django resources and also create, update, and delete item data. Alongwith, you will  also learn specific tasks such as managing your bookmarks and counting and collecting likes and comments on your bookmarks.\nBy the end of this course, you will be able to build your RESTful APIs using Django and integrate it into your projects with ease.\n\nAbout the Authors :\nWayne Merry:\nCPA Work Experience:\n- Financial Controller HOPE worldwide Australia (Development and benevolence charity) 2013-2017 and consultant to HOPE worldwide Papua New Guinea\n- Investment manager Mimas Lapetus Trust 2005-2012\n- General Manager Merry's Specialties 2003-2004\n- Trading Systems project lead Bourse Data 1998-2003\n- Industrial Systems manager United Weighing Australia 1995-1998\nEducation:\n- BA App Sci (Computer Technology) 1991-1994\n- Masters of Entrepreneurship and Innovation (Hnrs) 2004-2008\n- Masters of Professional Accounting and Masters of International Finance (2010-2012)\nInterests:\n- Bush Search and Rescue 2009 (developed GPS field training software using Django—first used 2011, and still in use)\n- Third-world charity program implementation, reporting, and management\n- He works too hard to listen to much music, but he loves listening to techno while programming in Django!",
      "target_audience": [
        "This course is for Django developers who want to have a taste of real-world full-stack development, integrating a Python backend with a React frontend."
      ]
    },
    {
      "title": "HTML5 Essentials and Advanced Interview Questions",
      "url": "https://www.udemy.com/course/html5-essentials-and-advanced-practices/",
      "bio": "A Complete Journey through HTML5 Essentials and Advanced Topics Exam",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Welcome to \"HTML5 Essentials and Advanced Practices,\" your ultimate guide to mastering HTML5. This course is designed to take you through the fundamental and advanced aspects of HTML5, ensuring you develop both a solid understanding and practical skills.\nWe begin with an Introduction to HTML5, where you will learn about its evolution and significance in modern web development. Next, you'll dive into the Basic HTML Structure, understanding how to set up your HTML documents correctly. You'll explore various Elements and Tags, along with their Attributes, which are the building blocks of web pages.\nWe'll cover Lists, Tables, and Forms and Input Types to help you create well-structured content and user-friendly forms. You'll also learn about Semantic HTML for better SEO and accessibility. Multimedia elements like Audio and Video, Canvas and SVG for graphics, and the Geolocation API will be explored to enhance your web pages.\nThe course includes advanced topics such as the Drag and Drop API, Local Storage, Web Workers, and WebSockets. You'll learn about Responsive Design with Media Queries, Flexbox and Grid Layouts for modern layouts, and HTML5 Forms and Validation for better user input handling. We'll delve into Microdata and SEO, Offline Applications with AppCache, and various Advanced APIs like Battery and Vibration.\nOther critical areas include Performance Optimization, Accessibility Best Practices, Progressive Web Apps (PWA) Basics, HTML5 Game Development Basics, Service Workers and Caching Strategies, and Push Notifications. You'll also discover the potential of WebVR and 3D Graphics, Mobile Web App Development, and HTML5 Security Features.\nThe course addresses Internationalization and Localization, HTML5 Testing and Debugging, and integrating HTML5 with CSS3 and JavaScript. Finally, we cover HTML5 Best Practices for Code Structure and Semantics and explore Emerging HTML5 Features and Future Trends.\nThis course ensures a deep understanding of HTML5, preparing you to build robust, modern web applications.",
      "target_audience": [
        "Beginners looking to start their journey in web development with HTML5",
        "Intermediate developers seeking to deepen their understanding of HTML5 features and techniques",
        "Professionals aiming to update their skills with the latest HTML5 advancements",
        "Anyone interested in building modern, responsive web applications and websites using HTML5"
      ]
    },
    {
      "title": "Practical guide for creating Prestashop 1.7 module",
      "url": "https://www.udemy.com/course/prestashop-module-comments/",
      "bio": "Create a Reviews modules for Prestashop 1.7",
      "objectives": [
        "Create Prestashop 1.7 module from scratch",
        "Use the Widget API",
        "Manipulate the database during module installation",
        "Export comments as CSV"
      ],
      "course_content": {},
      "requirements": [
        "Understand Prestashop module logic",
        "Have experience with Smarty template engine"
      ],
      "description": "This course is created to teach you step by step how to create a commenting system for Prestashop 1.7.\n\n\nIt has two parts front and back;\nFront\n\n\nStore visitors will be able to express their ideas about the store products by leaving a comment\n\n\nBack\nStore ower / administrator will have the full control to remove any abuse comment or approve it, once approved the comment will show up in the product page",
      "target_audience": [
        "Prestashop developers"
      ]
    },
    {
      "title": "Deno For Web Developers",
      "url": "https://www.udemy.com/course/deno-for-web-developers/",
      "bio": "The comprehensive practical guide to Deno for web developers. Learn the core and build real world app.",
      "objectives": [
        "Build real-world REST APIs using Oak framework",
        "Integrate Stripe for payment system",
        "Store images on Cloudinary",
        "Pagination",
        "Send email using SendGrid",
        "Deno APIs (Deno Global + Web APIs + Standard Library)",
        "Build admin area for products / orders / users management",
        "Read File / Write File",
        "Manage modules and dependencies in Deno",
        "Build basic REST APIs without framework",
        "Learn how to handle error in Oak server",
        "Lean to integrate PostgreSQL in Deno",
        "Integrate JWTs (access token / refresh token) for Authentication / Authorization"
      ],
      "course_content": {},
      "requirements": [
        "A computer: macOS, Windows, or Linux",
        "Know/Understand Javascript",
        "Basic knowledge of NodeJS will help",
        "Basic understanding of Typescript will help, but not required as you can use Javascript"
      ],
      "description": "*** This course has been 100% re-recorded in April 2021 ***\nUse Deno v1.8.0\nThis course will guild you on how to use Deno in modern web development. We are going to learn Deno's basics and then use the knowledge to build a real-world application.\n# The contents covered in this course are:\nWhat is Deno?\nCommand Line Interface\nDeno APIs / Web APIs / Standard Library\nRead File / Write File\nModules And Dependencies Management\nHTTP Server\nRequest / Response / Routing\nUsing Oak Framework\nError Handling\nAuthentication / Authorization / Reset Password\nJWTs Refresh Token / Access Token\nWorking with Database (PostgreSQL)\nSending Email Using SendGrid\nValidating Request Body\nFile Upload to Cloudinary\nPagination\nAdd to Cart\nPayment System with Stripe\nAdmin Area\n# What are we going to build?\nA full-fledged REST APIs for An eCommerce Application\n===========================================================================\n*** The below contents are now legacy ***\nThis course will guild you on how to use/integrate modern and well-established technologies such as Deno.js, GraphQL, NextJS, and PostgreSQL to build a professional, real-world full-stack application.\n# What are we going to build?\nA full-stack JWT authentication system\n# What topics this course will cover?\nCreate a web server with Deno.js and Oak framework\nCreate GraphQL server with Oak GraphQL library\nSetup PostgreSQL database and connect to the server\nWrite GraphQL API (schema, queries, mutations)\nHow to use Oak middleware function\nHow to manipulate Oak Context and use it to pass data between middleware\nHow to use Cookies\nHow to create, send, and validate JWT token\nPerform PostgreSQL Create, Read, Update, Delete (CRUD) operations\nHow to send email in Deno.js\nHow to connect NextJS application with Deno web server using Apollo Client (v3)\nFetch data from GraphQL API with Apollo Client Hooks (useQuery, useMutation)\nHow to write Apollo Hooks as custom hook function\nHow to fetch data from GraphQL API on server-side in NextJS\nManage state with React Context API\nHow to protect route on client-side in NextJS\nHow to protect route on server-side in NextJS",
      "target_audience": [
        "All level of JavaScript web developers"
      ]
    },
    {
      "title": "Complete HTML and CSS - Web Development Essential Skills",
      "url": "https://www.udemy.com/course/complete-html5-css3-course-newbie-to-pro/",
      "bio": "Learn how to build modern day HTML Sites and Apps using HTML and CSS. From Complete Beginner to Pro Web Developer!",
      "objectives": [
        "Understand HTML Basics",
        "Learn how to create Websites for clients and customers",
        "Work with core HTML Tags to build Modern Web Apps",
        "Separate Styling using Styles Sheets and Selectors",
        "Apply Styling using CSS",
        "Building and Style HTML Forms, Buttons, Tables and Lists",
        "Apply Gradient Styling and Images to Backgrounds",
        "Using Shadows and Glows on Text and Elements",
        "Building Menus and Dropdown Menus",
        "Build a complete Modern Day Website"
      ],
      "course_content": {},
      "requirements": [
        "The ability to learn quickly, want to make money from web design and perhaps most importantly, have a can-do attitude",
        "The desire to become a professional web developer",
        "Internet Connection",
        "PC or Apple Mac"
      ],
      "description": "HTMLand CSSare the core languages any Web Developerneeds if they want to monetise their skillset.\nAll Website and an increasing number of Mobile apps are built using these fundamentalbut easy-to-use languages. This course will quickly and comprehensively equip you with the skills you need to get you on your way to becoming a professional Web Developer.\nWeb Development Essential Skills - Complete HTML and CSS- teaches you everything you need to know to master HTML and CSS and start building Web Apps and Mobiles today!\nAssuming no prior knowledge, I will show you how to get the tools and apply pro techniques to make your code clean, easy to maintain and robust.\nAll you need is a Windows PC or Apple Mac running OSX and an internet connection - This course will show you how to get all the other tools you need - FOR FREE!\nI'll take you step by step through the most important skills including\nEverything a beginner could ever wish to know about HTML and CSS\nCore HTML Tags and how to use them\nApply CSS Styling\nSeparating Style from Content\nUsing CSS Selectors\nWorking with Links, Positioning, Tables & forms\nBuilding Styled Buttons\nBuilding Multi Level Menu\nIn this course, you'll go through each element HTML in turn, and walk through all the options for styling elements using CSS Selectors and Style Sheets to create clean and easy to maintain HTML Apps.\nYou'll also walk through recreating some of the web’s most iconic websites.\nBy the end of the course, you'll be fully confident and know everything you need to get started on your way to being a top class, professional web developer!\nAnd of course, being part of Udemy you get:\nFREE lifetime accessto this course\nALL future lectures and upgrades (of which there will be many!) included for free\nUdemy's Unconditional 30 day money back guarantee - so there's NO risk",
      "target_audience": [
        "Complete Beginners",
        "Web Design Students",
        "Web Developers",
        "Bloggers",
        "App Developers",
        "Mobile App Developers (HTML)",
        "ASP.NET Developers"
      ]
    },
    {
      "title": "Creating Smart Maps with Python and Leaflet Windows Version",
      "url": "https://www.udemy.com/course/creating-smart-maps-with-python-and-leaflet-windows-version/",
      "bio": "Learn GeoDjango, by building a Web GIS Application",
      "objectives": [
        "Be able to create a Full-stack web GIS application from scratch",
        "Build a Full-stack Django Application",
        "Be able to use a 3rd party JavaScript charting library",
        "Geodjango Application Development for Windows",
        "PostGIS for Windows"
      ],
      "course_content": {},
      "requirements": [
        "A basic knowledge of Python, Javascript, and GIS",
        "A Windows operating system",
        "Some coding experience"
      ],
      "description": "Welcome to the Creating Smart Maps with Python and Leaflet Windows Version course. We'll be building a python GIS application from scratch using a variety of open source technologies. The purpose of this course and many more to follow, is to learn to create geospatial analytics and convert it into a functional application.\n\n\nIn our use case we will be working with residential water consumption data and  we will be applying  data processing techniques to extract transform and load the data into our spatial database. Once we have processed and cleaned the data, we will use it as a data source for building our GeoDjango Web Map Application.\n\n\nWe will be powering our application with a PostgreSQL and PostGIS database. In the Front-End we'll use Bootstrap, JavaScript, Leaflet and Ajax. On the server side we'll be using Python and Django combined with use of scientific libraries like pandas, for our data transformation and conversion operations. The operating system that we will be working on is Windows 10 and Server 2016.\n\n\nSome skills that you can expect to derive after completing the course are the following:\nYou will learn how to build a Spatial Database using Postgresql and PostGIS.\nYou will learn how to create charts with Chart.js.\nYou will learn to build Web Maps with Leaflet.js.\nYou will learn how to build REST API Endpoints.\nYou will learn some JavaScript programming.\nYou will learn how to build Web Applications using the Django MVC framework.",
      "target_audience": [
        "Beginner and advanced developers",
        "The curious mind"
      ]
    },
    {
      "title": "Angular and ASP.Net Core Integration",
      "url": "https://www.udemy.com/course/angular-and-aspnet-core/",
      "bio": "Tips and Tricks to Integrate Angular and ASP.Net Core",
      "objectives": [
        "Introducing the Angular-Net Configuration Tool",
        "Multiple Angular Projects in the Angular Workspace",
        "Debug Vs Release Abstraction",
        "Utilizing Git Hooks",
        "Hooks to Create the Angular Release Build",
        "Features of the Angular Release Build",
        "Before Build Hook",
        "Passing Parameters to the Server",
        "How to integrating Angular with the ASP .Net Core framework",
        "Passing WebAPI exception information back to the client",
        "Opening Developer Tools Automatically",
        "Setting TypeScript Breakpoints in Visual Studio",
        "Multiple Angular Projects, Same Codebase",
        "Performance Markers",
        "Quicker Deployment using Visual Studio",
        "Visual Studio File Nesting",
        "Expand-Collapse TypeScript Regions"
      ],
      "course_content": {
        "Angular: ASP.Net Core Overview": [
          "Welcome",
          "Introduction",
          "Target Audience",
          "Introducing the Angular.Net Configuration Tool",
          "Demo Creating an Angular.Net Project",
          "Multiple Angular Projects, Same Codebase",
          "At the Time this course was created",
          "Requirements for the Angular-Net Solution",
          "Features of the Angular-Net Application",
          "The Angular.Net Configuration Tool Demo",
          "Build using the Angular-Net Configuration Tool"
        ],
        "Angular: Overcoming Common Obstacles": [
          "Welcome",
          "The Angular.Net Configuration Tool Summary",
          "Debug Vs Release Abstraction",
          "Utilizing Git Hooks",
          "Hooks to Create the Angular Release Build",
          "Features of the Angular Release Build",
          "A Before Build Hook",
          "Passing Parameters to the Server"
        ],
        "Angular: Increasing Your Productivity in Visual Studio": [
          "Welcome",
          "WebAPI Exceptions",
          "Opening Developer Tools Automatically",
          "Integrated Debugging TypeScript with .Net",
          "Multiple Angular Projects, Same Codebase",
          "Scope to This",
          "Performance Markers",
          "Starting without Building C#",
          "Quicker Deployment using Visual Studio",
          "Visual Studio File Nesting",
          "Expand-Collapse TypeScript Regions"
        ]
      },
      "requirements": [
        "Knowledge of Visual Studio",
        "Experience with C#",
        "Understanding of TypeScript",
        "Exposure to Angular 2+"
      ],
      "description": "There is a lot of confusion about how to integrate Angular and ASP.Net Core. A big part of the problem is a lack of resources and limited understanding of how to integrate these 2 awesome technologies, Angular on the front-end and ASP.Net Core on the back-end.\nThe big problem, is that the industry has always tried to simplify the solution by compartmentalizing the technologies. But knowing how to integrate technologies is the key to performance, and making an application easy to maintain. This mean you must have a good understanding of the backend technologies, the development environment, as well as the frontend technologies.\nWhy do you think Microsoft seems behind in the integration of Angular on the front-end? Hmm… Could it be that the newer technologies have us dropping down to the command line? Why do we need to drop down to the command line anyway? Could it be the only way to be compatible across multiple platforms? Are there Microsoft developers that like to drop down to the command line? Can I do my complete development, without dropping down to the command line? Watch this course, and I will show you how!",
      "target_audience": [
        "Developers who want to integrate the Angular CLI with the ASP-Net Core CLI"
      ]
    },
    {
      "title": "Docker Masterclass: Hands-on DevOps™ for Developers",
      "url": "https://www.udemy.com/course/docker-for-beginners-intermediate-hands-on-devops/",
      "bio": "Learn Docker with hands-on coding exercises. Take your DevOps Skill to the next level. Complete Docker for DevOps Course",
      "objectives": [
        "Basic introduction of what docker is",
        "Linus features that docker uses to pull off what it does( Namespaces, cgroups)",
        "Linux capabilities",
        "Docker filesystem",
        "Basics of AWS ECS container orchestrator",
        "Docker Compose"
      ],
      "course_content": {
        "Docker for DevOps Introduction": [
          "docker_intro_1",
          "docker_intro_2",
          "docker_intro_3",
          "docker_intro_4",
          "docker_intro_5"
        ],
        "Wetting Our Beaks": [
          "wetting_our_beaks_1",
          "wetting_our_beaks_2",
          "wetting_out_beaks_3",
          "wetting_our_beaks_4",
          "wetting_our_beaks_5",
          "wetting_our_beaks_6",
          "Wetting_our_beaks_7",
          "wetting_out_beaks_8"
        ],
        "Digging Deeper": [
          "digging_deeper_1_intro",
          "digging_deeper_2_cgroups",
          "digging_deeper_3",
          "digging_deeper_4",
          "digging_deeper_5",
          "digging_deeper_6",
          "digging_deeper_7",
          "digging_deeper_8_cgroups_memory_1",
          "digging_deeper_9_cgroups_memory_2",
          "digging_deeper_10_namespaces_intro",
          "digging_deeper_11_tcpdump",
          "digging_deeper_12_namespaces_subnetting_arp",
          "digging_deeper_13_veth_bridge_namespace",
          "digging_deeper_14_networking_namespace",
          "digging_deeper_15_docker_networking_namespace",
          "digging_deeper_16_pid_namespacing",
          "digging_deeper_17_mount_namespace",
          "digging_deeper_18_user_namespaces"
        ],
        "Linux Capabilities": [
          "capabilities_1",
          "capabilities_2",
          "capabilities_3"
        ],
        "Docker Compose": [
          "docker-compose-intro-1",
          "docker-compose-2-handson",
          "docker-compose-3-networking"
        ],
        "Docker file system": [
          "docker-filesystem-overlay-intro",
          "docker-filesystem-usage",
          "docker-filesystem-caching.mp4",
          "docker-filesystem-minimal-containers"
        ],
        "Container orchestrators": [
          "container_orchestrator_introduction_1",
          "container_orchestrator_ecs_intro_2",
          "container_orchestrator_ecs_3",
          "container_orchestrator_ecs_4",
          "container_orchestrator_ecs_5"
        ],
        "Docker daemon": [
          "dockerd_1_intro",
          "dockerd_2_communication"
        ]
      },
      "requirements": [
        "Intermediate knowledge of linux",
        "Basic understanding of programming",
        "Basic understanding of aws will help in the section about ECS"
      ],
      "description": "Docker and other containerization tools have taken the devops world by storm. Knowing at least the basics of docker has become mandatory for any role of software development you are in. However, for devops engineers/ site reliability engineers, a more detailed understanding of docker and other containerization technologies are desired. It does not entirely cut it to know just how to run basic commands on docker and make it work.\nThis course focuses on how docker works under the hood. It will guide you through the internal workings of the docker daemon and it’s interaction with the linux operating system step by step and explain how docker uses various linux kernel functionalities to make and run containers.\n\n\nBesides a look at how docker operates under the hood, we will also take a look at basic docker commands, structure of build files etc-. We will also take a look at how to use docker compose to stand up a basic development environment for micro services. We will also look at building minimal container images to save on network throughput, disk size and also faster deployments. We will also be looking at what container orchestrators are and will have a hands-on session about the amazon ECS container orchestrator.\nA bit of networking and linux knowledge is assumed for this course. Linux knowledge will help you all throughout the course and networking knowledge will come in handy when we cover the concepts pertaining to networking namespaces.\nCourse Details:\nDescription\nIntroduction and why we chose linux for the course.\nDescription on what docker is and why we use it\nBirds eye view of various components in docker and it's interaction with OS\nDiffererence between user-space and kernel-space\nDifference between containers and virtual machines.\nDockerfile, Docker images, Base image, docker pull\ndocker build, Running docker without root privileges\ndocker history command, From construct, ENV construct\nLabel construct, RUN construct, WORKDIR construct\nADD construct, COPY construct, EXPOSE construct, ENTRYPOINT construct, CMD construct, docker run command\ndocker repositories,docker hub, docker push,How is traffic routed to docker container?\ndocker ps command, sending signals to a process( docker kill, dockerstop)\nHow docker containers handle signals.\nIntroduction to how docker works under the hood\nIntroduction to cgroups\nCgroups cpu- hands on 1\nCgroups cpu- hands on 2\nCgroups cpu- hands on 3(cpu shares)\nCgroups cpu- hands on 4( cpuset + cpu share)\nHow docker restricts cpu using cgroups.\nIntroduction to cgoups memory subsystem\nCgroups memory subsystem hands-on\nIntroduction to namespaces\nBasic networking and tcpdump\nIp subnetting and arp\nip,veth pairs, linux software bridge\nHands-on networking namespace.\nHow docker uses networking namespace\nPid namespaces hands-on\nMount namespaces hands-on\nUser namespaces hands-on\nIntroduction to linux capabilities + hands on\nCapabilities in docker\nRunning docker containers as root\nDocker compose introduction\nBringing up an application\nEmbedded dns, docker networks\nIntroduction to overlayfs\nHow docker uses overlayfs\nHow to take advantage of caching in docker builds\nBuilding minimal containers in docker\nContainer orchestrators introduction\nOverview of ECS orchestrator\nHands on(part 1)\nHands on(part 2)\nECS under the hood.\nIntroduction to docker daemon\nCommunicating to docker daemon over tcp/unix socket.",
      "target_audience": [
        "Devops Engineers looking to get deep into what docker is and actually understanding how it works",
        "Anyone curious about the whole of docker ecosystem and how it works",
        "System Administrators",
        "Cloud Infrastructure Engineers",
        "Developers looking to increase their productivity",
        "Developers looking to understand how Docker works",
        "Beginning and advanced Docker users looking to improve their skills",
        "Network admins looking to break into the world of Docker development"
      ]
    },
    {
      "title": "Blazor and .NET Core Web API Full Stack Web Development",
      "url": "https://www.udemy.com/course/blazor-and-net-core-web-api-full-stack-web-development/",
      "bio": "learn to create a full stack web application from scratch using .NET Core Web API and Blazor.",
      "objectives": [
        "Full Stack Web Development",
        "Blazor Front End Web Development",
        ".NET Core Web API Backend Web Development with SQL Server, Mongo DB, My SQL and Postgre SQL",
        "Build RESTful APIs"
      ],
      "course_content": {
        "Blazor, .NET Core & Microsoft SQL Server": [
          "Introduction",
          "Setup Environment",
          "Backend : .NET Core & MSSQL",
          "Frontend : Blazor",
          "Project Files"
        ],
        "Blazor, .NET Core & Mongo DB": [
          "Introduction",
          "Setup Environment",
          "Backend : .NET Core & Mongo DB",
          "Frontend : Blazor",
          "Project Files"
        ],
        "Blazor, .NET Core & MySQL": [
          "Introduction",
          "Setup Environment",
          "Backend : .NET Core & MySQL",
          "Frontend : Blazor",
          "Project Files"
        ],
        "Blazor, .NET Core & PostgreSQL": [
          "Introduction",
          "Setup Environment",
          "Backend : .NET Core & PostgreSQL",
          "Frontend : Blazor",
          "Project Files"
        ]
      },
      "requirements": [
        "basic html, css, javascript and c# programming"
      ],
      "description": "The demand for a Full-Stack Web Developer is the highest compared to any technology professional. They are paid exceptionally well both in the companies and also as freelancers.\nThis is due to the fact that full-stack web developers have diverse set of skills.\nThey are good at Database Development.\nBackend Development.\nAnd also in Front End Development.\nIn this course, you will learn full stack web development with Blazor for the frontend and .Net Core Web API for the backend.\nWe will build the same backend project with different databases such as Microsoft SQL Server, My SQL, Mongo DB and Postgre SQL.\nSections in this Master Course:\n1) Blazor, .NET Core Web API and Microsoft SQL Server.\n2) Blazor, .NET Core Web API and Mongo DB.\n3) Blazor, .NET Core Web API and Postgre SQL.\n4) Blazor, .NET Core Web API and My SQL.\nWith Blazor, you will learn to\n* Add routing to our app.\n* Add bootstrap table with custom sorting and filtering features.\n* Add modal pop up window with drop down and date picker.\n* We will also learn how to upload an image and save it in the backend sever.\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        ".net developers, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "JavaScript Game Create a flying bird game fun learn DOM",
      "url": "https://www.udemy.com/course/learn-javascript-game-course/",
      "bio": "Use JavaScript connect with Elements and create a game while practicing learning JavaScript and Document Object Model",
      "objectives": [
        "How to use JavaScript",
        "How to create elements dynamically",
        "Manipulate elements using JavaScript",
        "Explore JavaScript Document Object Model"
      ],
      "course_content": {
        "Introduction to JavaScript building a Flying bird game from scratch": [
          "Flying Bird Game Introduction",
          "HTML CSS and JavaScript - Game Setup Structure",
          "Source Code",
          "Add Event Listeners - JavaScript element interaction",
          "Source Code",
          "Keyboard event tracking - JavaScript KeyPress Events",
          "Source Code",
          "Add element to page - JavaScript Create Elements - createElement Method",
          "Source Code",
          "JavaScript RequestAnimationFrame",
          "Source Code",
          "Move Conditions - JavaScript Game logic",
          "Source Code",
          "Wing Movements - Boolean values JavaScript",
          "Source Code",
          "Scoring and gravity - JavaScript game enhancements",
          "Source Code",
          "Game End Conditions - Game over with JavaScript",
          "Source Code",
          "Create Obstacles - Element creation using JavaScript",
          "Source Code",
          "Moving Obstacles - Select Element and update style properties JavaScript",
          "Source Code",
          "Checking Collision Detection - JavaScript element properties check",
          "Source Code",
          "Handle Game Over on collision",
          "Game Code Review - Review game source code HTML CSS and JavaScript",
          "Bonus Add Color - Generate random color value JavaScript",
          "Source Code and Download"
        ],
        "Bonus content and next steps": [
          "Bonus Lecture",
          "Supplementary Downloads and Examples: Expanded Educational Resources for Advance"
        ]
      },
      "requirements": [
        "Fundamental JavaScript concepts",
        "Access to computer",
        "Use of editor to write code",
        "HTML and CSS knowledge"
      ],
      "description": "Fun and exciting way to practice JavaScript while building an interactive game from scratch.\nLearn how to apply JavaScript - connect to elements - update and manipulate element content and attributes - create interaction with event listeners - create content dynamically - all done in a step by step format so you can learn explore and create your own version of the game.  Apply what you learn to your JavaScript projects to master working with the DOM.\nExplore how you can apply JavaScript to :\nSelect elements from the web page\nCreate global variables and objects to use for game play\nAdd event listeners to create interactive content\nListen for keypress and apply the results in your code\nAdd classes and remove classes from elements\nCreate elements dynamically on the fly with JavaScript\nAppend new elements to existing webpage elements\nUse offset values of elements within code\nUpdate element style values to produce animation\nUse of awesome JavaScript methods like getBoundingClientRect()\nSmooth animations with requestAnimationFrame()\nCheck for element overlap and collision detection\nHow to build your game to be dynamic with flexible variables\nand much more.\nSource Code is included so you can try it for yourself, what is covered in the lessons.\nNo libraries, no shortcuts just learning JavaScript making it DYNAMIC and INTERACTIVE web application.\nStep by step learning with all steps included.\nBeginner JavaScript knowledge is required as the course covers only JavaScript relevant to the building of the game.  Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\nTaught by a professional instructor with over 18 years of experience ready to help you learn.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building your own version of the game today!!!!",
      "target_audience": [
        "Beginners to JavaScript",
        "Anyone who wants to practice writing JavaScript",
        "Web developers",
        "Anyone who wants to learn to make a JavaScript game without any libraries",
        "Beginners to JavaScript curious about Document Object Model and JavaScript Methods"
      ]
    },
    {
      "title": "GraphQL with Apollo and Express: A Hands-On Approach",
      "url": "https://www.udemy.com/course/graphql-with-apollo-and-express-a-hands-on-approach/",
      "bio": "GraphQL with Apollo, Express, TypeORM, Postgres, Docker, and JWT: A Hands-On Approach",
      "objectives": [
        "Build GraphQL APIs with Apollo Server and Express",
        "Understand the fundamentals of GraphQL and how to structure a schema",
        "Learn how to use TypeScript with GraphQL and build strongly-typed schemas",
        "Integrate TypeORM with GraphQL to connect to a PostgreSQL database",
        "Implement real-time features with SocketIO",
        "Perform database migrations with TypeORM to keep your schema up-to-date"
      ],
      "course_content": {
        "Graphql": [
          "Introduction to Graphql",
          "working with Graphql Queries",
          "Adding Mutations"
        ],
        "Typescript": [
          "Installing and Configuring Typescript",
          "Basic typescript",
          "advanced typescript"
        ],
        "working with apollo Server": [
          "Creating the Graphql Schema",
          "Auth resolver",
          "generate Typescript files from schema automatically",
          "setup our Apollo-express server",
          "run and test our api"
        ],
        "Authentication": [
          "Install & config typeorm",
          "user entity",
          "create user method | user.service",
          "app Data source",
          "signup resolver",
          "signin resolver",
          "working with the graphql context"
        ],
        "Docker": [
          "What is Docker?",
          "Install docker linux",
          "Images to containers",
          "containers to images"
        ],
        "working with postgres": [
          "running postgres database with docker",
          "test graphql endpoint",
          "from postgres container to image"
        ],
        "merge schemas and resolvers": [
          "define the room schema",
          "auto generate and merge schemas",
          "create the room resolver",
          "merge resolvers",
          "create the room entity",
          "create & update room | room service",
          "createRoom resolver 1/2",
          "createRoom resolver 2/2",
          "create getRooms resolver",
          "test graphql endpoint"
        ],
        "validation with class-validator": [
          "Implement validation with class validator",
          "catch validation errors"
        ],
        "use Socket io": [
          "why we should use socket io",
          "join rooms with socketio",
          "emit message to a specific room",
          "Test socket Io server"
        ],
        "database migrations": [
          "database migration with Typerom"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript and NodeJs",
        "amiliarity with ExpressJs is helpful, but not required",
        "Understanding of RESTful APIs is beneficial, but not necessary",
        "Basic knowledge of TypeScript is a plus, but not mandatory, as the course covers fundamentals of TypeScript as well",
        "A computer with a modern web browser, NodeJs, and npm installed is required"
      ],
      "description": "Welcome to The Ultimate GraphQL and Apollo Server Course with Express and TypeScript! This comprehensive course is designed to teach you everything you need to know to build powerful APIs using GraphQL, Apollo Server, Express, and TypeScript.\nThis course is not meant to teach you everything about GraphQL, but it is meant to teach you how to use GraphQL with Apollo and how to use advanced tools and technologies to build powerful APIs. We start with the basics and gradually build up to advanced topics, so even if you're new to GraphQL and Apollo Server, you'll be able to follow along.\nThroughout the course, we'll cover key concepts like queries, mutations, and schemas, but we'll also dive deep into advanced topics like SocketIo, JWT, and database migration with TypeORM. You'll learn how to work with TypeORM and use Postgres with Docker, giving you the tools you need to build scalable and efficient APIs.\nWe believe that this course is the ultimate resource for developers looking to master GraphQL and Apollo Server with TypeScript and Express. The content is comprehensive, the teaching is clear, and the skills you'll learn are in high demand in the job market.\nBy the end of the course, you'll have the skills and knowledge to build your own GraphQL API using Apollo Server and Express with TypeScript, as well as advanced features like SocketIo and database migration with TypeORM. You'll also be able to confidently work with GraphQL and Apollo Server in your own projects.\nSo if you're ready to take your API development skills to the next level, enroll now for The Ultimate GraphQL and Apollo Server Course with Express and TypeScript today!",
      "target_audience": [
        "Web developers who want to learn how to build GraphQL APIs with Apollo Server and advanced tools like TypeORM, TypeScript, Docker, and PostgreSQL",
        "JavaScript developers who are interested in learning about GraphQL and its advantages over traditional RESTful APIs",
        "Developers who want to improve their skills in TypeScript and learn how to use it with GraphQL and TypeORM",
        "Developers who want to learn best practices for building scalable and maintainable GraphQL API"
      ]
    },
    {
      "title": "React Native: React Native with Hooks and Context",
      "url": "https://www.udemy.com/course/react-native-react-native-with-hooks-and-context/",
      "bio": "Learn React Hooks and Context with my React Hooks and Context course and leverage your web skill set",
      "objectives": [
        "Learning React Native is a great avenue through which to gain experience developing mobile apps.",
        "This React Native with Hooks and Context course is for programmers who want to learn React, React-Native",
        "React Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android",
        "Created by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting android, ios",
        "Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.",
        "Businesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native.",
        "Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms",
        "React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and Mongo",
        "Run Android and IOS simulator on computer",
        "Expo installation",
        "Run Expo App on Mobile Device",
        "JSX syntax and expressions",
        "ES6 syntax",
        "See the content on the simulator",
        "Styling with React-Native and flex-box rules",
        "State and Props systems",
        "Reusable components",
        "Introduction of Hooks and Context",
        "Create Context with Class Based and Functional Components",
        "How to Consume Context in Class Based and Functional Components",
        "How to Use Multiple Context",
        "Hooks Functions (useState, useEffect, useReducer, useContext...)",
        "How to Create Reducer",
        "How to Use Reducer",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "React Native expo, react native cli, react native hooks and react native context",
        "Reach another app on the phone from the React-Native app"
      ],
      "course_content": {
        "What We Will Learn in React Native with Hooks and Context Course?": [
          "What We Will Learn in This React Native Course?",
          "Introduction to Hooks and Context",
          "FAQ about React Native, Hooks and Context"
        ],
        "Context API Project": [
          "Let's Create First Application",
          "What Is Context API and Why We Use It?",
          "Context and Provider",
          "Context Provider",
          "Accessing Context",
          "Let's Access Context Data from TodoList Component",
          "Accessing Context with Context Consumer",
          "react-native hooks and context Quiz",
          "quiz"
        ],
        "How To Update Context": [
          "Updating Context Data",
          "Creating Multiple Contexts",
          "quiz"
        ],
        "Consume Multiple Context": [
          "Consuming Multiple Contexts",
          "quiz"
        ],
        "Hooks": [
          "Intro to Hooks",
          "Setup Hooks Project",
          "UseState Hooks",
          "UseState with Forms",
          "UseEffect Hook",
          "Hooks with Context",
          "Consuming Multiple Context with useContext",
          "react-native hooks and context Quiz -2"
        ],
        "Context With Functional Component": [
          "Creating Context with Functional Components",
          "Hooks and Context",
          "Adding New Todo with Hooks and Context",
          "react-native hooks and context Quiz -3",
          "quiz"
        ],
        "Reducers": [
          "Remove Todo",
          "Use Reducers",
          "Adding a Reducer",
          "Move useReducer Into Its Own File",
          "quiz"
        ],
        "What We Learn in This React Native with Hooks and Context Course": [
          "What We Have Learned?"
        ],
        "Extra": [
          "React Native: React Native with Hooks and Context"
        ]
      },
      "requirements": [
        "JavaScript + HTML + CSS fundamentals are absolutely required but you do not need to be an expert",
        "Basic ES6 knowledge would be beneficial but not required",
        "React and React-Native knowledge",
        "A computer with access to the internet",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "No prior React and React-Native knowledge, you learn complete react native",
        "Desire to learn React Native",
        "Desire to learn mobile development with full React Native course",
        "Desire to learn react native hooks, react native context, react native cli, react native expo",
        "Desire to learn mobile app development"
      ],
      "description": "Hello there,\nWelcome to React Native: React Native with Hooks and Context course.\nLearn React Native with Hooks and Context and leverage your existing web skills. Build user-friendly web apps with React\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that. React is all you need to create awesome mobile apps that work on both Android and iOS.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\nThis reactnative course is for all levels. To be able to take this course, all you need is a basic understanding of JavaScript.\nIn the react native from scratch course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer.\nLater on the react native app course, we are going to learn the basics of React and React Navigation. JSX, 'props system' and 'state system' are going to be crystal clear for you at the end of the course.  You are going to learn the latest React features \"Hooks and Context\" system.\nWe are going to create two nice looking app, will guide you to learn \"Hooks and Context\" in a very detailed way. You are going to learn how to use \"state\" in functional components with the \"Hooks\" system and with \"Context API\" you won't need any third-party package to manage the Application state.\nWe tried to tell all complex topics in very detail on the react hooks course. We used some diagrams to tell some important topics and created a nice-looking mobile application. expo\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize React.  In this course, we will be teaching React by creating various projects.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer. You will always have up-to-date content for this course at no extra charge.\nIn the course, we are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer. Besides, with the Expo app, you will be able to run your apps on your own mobile device as well.\nYou are going to learn the latest React features of the Hooks and Context system. We are going to create two nice-looking apps, to show Hooks and Context; in a very detailed way. You are going to learn how to use and state in functional components with Hooks system and with Context API you won't need any third-party package to manage the Application state.\nWe tried to explain all complex topics in very detail on the course. I used some diagrams to tell some important topics and created a nice-looking mobile application. In the course, we created our applications with expo-cli.\nAt the end of the course, you will learn\nHow to use the flex-box system,\nCreating your own mobile app both with react-native-cli and expo-cli,\nCreating Context with Class-Based and Functional Components,\nHow to Consume Context in Class-Based and Functional Components,\nHow to Use Multiple Context in one single component,\nHooks Functions(useState, useEffect, useReducer, useContext...),\nCreating Reducer and Using Reducer is going to be clear for you.\nreact native hooks\nreact native web\nreact native expo\nreact native context\nlearn react native from scratch\nreact native redux\nreact native for web\n\"react native\"\nreactnative cli\nreact native with hooks\nreact hook\nreact native hook\nreact native hooks and context\nreact native web app\nreact and react native\nreact native typescript\nreact context\nreact native scratch\nreact native native\nreact native firebase\nreact and reactnative\nreact mobile\nreactive native\nreact.js\nreactnative codepush\nmobile react native\nreact hooks postgresql\nreaxt native\nredux toolkit\n\n\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increases its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developer's expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and React is easy to understand for beginners.\nThis course starts with the very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practice.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our  React Native: React Native with Hooks and Context course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to become an React Developer",
        "Programmers who want to learn React, React-Native",
        "Someone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications,",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "Anyone who wants to create mobile applications with both react-native-cli and Expo-cli",
        "Anyone who wants to learn latest React features Hooks and Context system",
        "Programmers who want to learn React, React-Native and Hooks and Context",
        "Anyone who wants to learn latest React features \"Hooks and Context\" system",
        "Anyone who wants to learn React Hooks & Class-based Components",
        "Anyone planning a job transformation and wants to become a React developer",
        "Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.",
        "Anyone who want to take their web development skills to the next level and learn a future-proof technology"
      ]
    },
    {
      "title": "Spring Framework for Beginners",
      "url": "https://www.udemy.com/course/spring-framework-for-beginners/",
      "bio": "Master core concepts such as Spring MVC and Dependency injection and start building your next generation Spring App",
      "objectives": [
        "Master core concepts of Spring framework",
        "Learn all about Spring MVC framework",
        "Understand Dependency injection and logic flow",
        "Learn to build real world apps with Spring"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Intro"
        ],
        "Spring Basics": [
          "Overview of Spring",
          "Maven & IDE"
        ],
        "XML dependence Injection": [
          "Beans XML File",
          "Spring Core Theory",
          "Bean Definition Constructors",
          "Ref in constructors",
          "Inner Beans & More on ref",
          "idref overview",
          "Aliases & More On idref",
          "Collection Injection",
          "Autowiring XML",
          "Intro to Scopes",
          "Bean Scopes"
        ],
        "Spring MVC": [
          "MVC Example",
          "What is MVC_",
          "DispatcherServlet & ViewResolver",
          "The Model"
        ],
        "JSP Basics": [
          "JSP Basics",
          "JSP Theory & Declarations",
          "JSP Directives & Implicit Objects",
          "Iterating over Lists in JSP"
        ],
        "Rest API Basics": [
          "Intro to Rest APIs",
          "Building a rest API",
          "Using Request Methods"
        ],
        "Conclusion": [
          "Logging",
          "Outro",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic Knowledge of Java is required to complete the course",
        "Working knowledge of JSP and servlets will help but is not necessary"
      ],
      "description": "Learn Spring Framework in a simple and easy manner with this comprehensive course!\nAny newbie Java Developer knows that it isn’t the easiest language to code programs and apps in, which means that building an application is a long and tedious job. The Spring Framework was designed to ease just that.\nThe Spring Framework is an open source application framework on the Java Platform, which allows Java developers to build applications on the Java EE (Enterprise Edition) platform. This amazing Java framework is great for building powerful applications in Java.\nWhile it was designed as a way to simplify the early J2EE specifications, it now plays a more bigger role complementary role to Java EE, where it embraces and integrates with the platform specification. In addition to being a brilliant framework for building Java Enterprise applications, it is also has a relatively small footprint of 2 MB.\nBecause of its complex nature, we have designed the perfect Spring Framework course to help make learning this amazing framework easier. This course has been designed to help breakdown the Framework into simple and easy to understand segments.\nHowever, the course does expect you to have some experience with Java and XML, but you don’t need any prior knowledge of Spring Framework. Spring is a pretty neat framework if you want to build dynamic and robust websites on the Java platform. And this course will get you on track to doing just that. Using a practical approach to development in Spring, you will learn exactly how to start coding your applications in Java using Spring.\nThe course will start at the very beginning by delving directly into the core of the Spring Framework, where you will learn the different bits and pieces that make the framework. From there you’ll look a number of different subjects such as Dependency Injection, the Spring MVC (Model-View Controller), REST, etc.\nYou will also learn about JSP, which control the visuals of the application as well as how to configure a logger into the application. At the end of this course, you will have learnt exactly how the Spring Framework works and how you can use it to build dynamic and robust applications.\nSo, what are you waiting for? Enroll Now and we’ll see you on the other side.",
      "target_audience": [
        "Anyone who wants to master professional spring development will find this course very useful"
      ]
    },
    {
      "title": "Next.js 14 Real-Time Chat App using Socket IO",
      "url": "https://www.udemy.com/course/nextjs-14-real-time-chat-app-using-socket-io/",
      "bio": "Build real time chat application using Next JS , Socket IO , Clerk , Firebase",
      "objectives": [
        "Implement CLERK Authentication for sign-up and sign-in.",
        "Logged in users will be able to see all the list of users who registered in the application",
        "If any user want to chat with other user , they have to add the user to chats list",
        "Users can create one-to-one chat and also group chats.",
        "Users can able to update their profile picture , create groups , edit groups.",
        "Users can see unread messages count in chats-list for every chat.",
        "Integrating socket io in-order to make all the chat functionalities real time.",
        "Once the socket io is integrated , users will be able to send and receive the messages in real-time.",
        "Recipient users can see the typing animation if any user is typing in that chat.",
        "Read Receipts functionality for the messages."
      ],
      "course_content": {},
      "requirements": [
        "React Basics",
        "Next Basics"
      ],
      "description": "Hello, Welcome to the course Next.js 14 Real-Time Chat App\nCertainly, I'd be happy to elaborate on the features included in the Next.js 14  Real-Time Chat App course.\nTech Stack\n\n\nLearn Next JS 14 Latest Features like App Router , Server Actions , Middlewares etc.\nImplement Clerk Authentication .\nWorking with SOCKET IO to perform all real-time tasks.\nDeploying Next JS App to Vercel and Node App to Render\nWorking with combination of both client and server components\nUsing Tailwind CSS in-order to override Ant Design default styling and building custom components\n\n\nProject\n\n\nImplement CLERK Authentication for sign-up and sign-in.\nLogged in users will be able to see all the list of users who registered in the application\nIf any user want to chat with other user , they have to add the user to chats list\nUsers can create one-to-one chat and also group chats.\nUsers can able to update their profile picture , create groups , edit groups.\nUsers can see unread messages count in chats-list for every chat.\nIntegrating socket io in-order to make all the chat functionalities real time.\nOnce the socket io is integrated , users will be able to send and receive the messages in real-time.\nRecipient users can see the typing animation if any user is typing in that chat.\nRead Receipts functionality for the messages.\n\n\n\n\nNext.js is an open-source, objective-coded framework for web developers created by Kotlin JS developers. It is used to create server-rendered React applications and can be used with modern JavaScript languages like TypeScript, GraphQL, and React components.\nNext.js allows developers to create web applications to a high standard with pre-built features such as routing, file-based routing, webpack dev server, hot module replacement, static exports, and code splitting.\nNext.js works well for building static sites and progressive web apps that are SEO-friendly, accessible, and fast.",
      "target_audience": [
        "Fullstack Developers",
        "Nextjs Developers"
      ]
    },
    {
      "title": "Salesforce Lightning Web Component ( LWC ) Masterclass",
      "url": "https://www.udemy.com/course/salesforce-lightning-web-component-lwc-masterclass/",
      "bio": "Learn from an industry expert on the best practices covering all important topics required for your career",
      "objectives": [
        "Introduction and event setup",
        "LWC function unification",
        "Loop style",
        "LDS forms",
        "LDS Programmatically",
        "Wire",
        "Wire property/functions",
        "Event Declaratively",
        "Event Programmatically",
        "Pubsub singleton",
        "LMS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Event Setup",
          "LWC Function Unification",
          "Loop Style",
          "LDS Forms",
          "LDS Programmatically",
          "Wire",
          "Wire Property/Functions",
          "Event Declaratively",
          "Event Programmatically",
          "Pubsub Singleton",
          "LMS"
        ]
      },
      "requirements": [
        "Basic understanding of Salesforce Apex and SOQL is preferred"
      ],
      "description": "Introducing Lightning Web Components\nNow you can build Lightning components using two programming models: Lightning Web Components, and the original model, Aura Components. Lightning web components are custom HTML elements built using HTML and modern JavaScript. Lightning web components and Aura components can coexist and interoperate on a page. To admins and end users, they both appear as Lightning components.\nLightning Web Components uses core Web Components standards and provides only what’s necessary to perform well in browsers supported by Salesforce. Because it’s built on code that runs natively in browsers, Lightning Web Components is lightweight and delivers exceptional performance. Most of the code you write is standard JavaScript and HTML.\nLWC framework is a new programming model to develop Salesforce Lightning Components. This course is designed to help you understand three basic things:\nWhat are Lightning Web Components?\nWhy Salesforce has introduced the Lightning web component framework?\nHow can you develop Lightning web components?\n\n\nIntended Audience:\n· Salesforce Professionals\n· UI and UX developers\n· Experienced Professionals\n· Salesforce Developers and Admins\n· Students and Fresh Graduates\n\n\nNumber of Sessions : 11\nNumber of Hrs: 15 hours\n\n\nCourse Outline\n· Introduction and event setup\n· LWC function unification\n· Loop style\n· LDS forms\n· LDS Programmatically\n· Wire\n· Wire property/functions\n· Event Declaratively\n· Event Programmatically\n· Pubsub singleton\n· LMS\n\n\nLWC is still new in the market and learning LWC can make you a Salesforce gem and can give your resume another dimension.\nIf you are new to any web development framework, please do not worry as the course will start from very basic (ground 0) to help you understand how can you start coding web components",
      "target_audience": [
        "• Salesforce Professionals",
        "• Experienced Professionals",
        "• UI and UX developers",
        "• Salesforce Developers and Admins",
        "• Students and Fresh Graduates"
      ]
    },
    {
      "title": "How to use VestaCP, CyberPanel, Hestia to Run Multiple Sites",
      "url": "https://www.udemy.com/course/vultr-centos-7-vesta-tutorial-run-multiple-sites/",
      "bio": "This VPS Course Will Show You How to Setup & Run Multiple Sites on Your VPS Using VestaCP, HestiaCP or Cyberpanel",
      "objectives": [
        "How to run multiple websites on a VPS using CentOS 7/8 or Ubuntu with VestaCP , HestiaCP or Cyberpanel as the Control Panel, Cloudflare as your DNS provider.",
        "All websites we'll setup will use Let's Encrypt",
        "All websites will be PHP based running on Ngnx and PHP-FPM setup",
        "For the most part we'll use Putty on Windows for the server setup",
        "You'll learn how to run multiple websites on full domains and subdomains using cloudflare for all DNS",
        "How to setup Centos 8 and Install Cyberpanel",
        "How to install WordPress on Cyberpanel or Migrate WordPress from VestaCP to CyberPanel.",
        "How to install and use hestiaCP to run WordPress"
      ],
      "course_content": {},
      "requirements": [
        "Know how to use a Windows PC",
        "Be keen in following instructions and guides",
        "Have internet connectivity for logging into your VPS account",
        "Be open minded and willing to ask questions in case you are stuck"
      ],
      "description": "This course will show you how to setup and run Multiple Websites on your VPS (Virtual Private Server) or VDS (Virtual Dedicated Server). I will be using Vultr as the VPS. I will also use Contabo in the HestiaCP section.\nBy the end of this course you will be able to run multiple, PHP, HTML, CSS, JS websites on your server.  You will be able to create multiple domains and sub-domains while using Cloudflare for your DNS.\n\n\nFull disclosure, I am using a Windows computer, hence throughout the setup process , I will be using Putty on a Windows PC.  You can still follow along via Terminal on Mac or Linux. In the HestiaCP section I used Git Bash which is just like using Terminal, so following along will be easy regardless of your platform.\nUpdate :\nI have added videos for Linux and Mac Users. You can follow along using terminal.\nI have added videos for setting up Centos 8 and installing Cyberpanel.\nI have added a new section for HestiaCP. I would highly encourage you to use HestiaCP instead of VestaCP\n\n\nThe ultimate goal of this VPS course is to enable you run, multiple sites on a VPS account. The skills learned here are transferable to other VPS providers. In the course we'll use  Vultr and Conatbo (HestiaCP section).\n\n\nNote that I may still add more videos in this course to update it with new panels. I will keep adding the videos in case of any updates or changes in the Web server setup.\n\n\nJoin this course now, and start watching it today.\n\n\nFeel free to join the course without hesitation.",
      "target_audience": [
        "Anyone who wants to run multiple websites on a VPS",
        "Anyone who wants to run multiple websites on VPS using VestaCp,HestiaCP or Cyberpanle",
        "Anyone who wants to move from Shared Hosting to VPS Hosting",
        "Windows, Mac and Linux users who want to setup a Linux server and install a Free Control panel.",
        "Anyone who wants to learn how to run WordPress on a VPS such as Vultr or Contabo"
      ]
    },
    {
      "title": "HTML5 Certification Prep: Comprehensive Practice Tests",
      "url": "https://www.udemy.com/course/html5-certification-prep-comprehensive-practice-tests/",
      "bio": "Your Path to HTML5 Certification: Practice Questions and Insights",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you ready to ace your HTML5 certification exam? Our course, \"HTML5 Certification Prep: Comprehensive Practice Tests\", is designed to guide you through a rigorous and insightful preparation journey.\nIn this course, you'll find a wealth of practice questions that mirror the format and content of real certification exams. Each question is crafted to reinforce your understanding of HTML5 concepts and help you master the skills necessary for certification.\nWhat You’ll Learn:\nDetailed Practice Tests: Engage with a series of challenging practice questions covering all key HTML5 topics.\nComprehensive Review: Gain insights into correct answers and explanations to enhance your understanding of HTML5 standards.\nTest-Taking Strategies: Develop effective strategies to approach multiple-choice questions with confidence.\nWhy This Course?\nRealistic Exam Simulation: Our practice tests reflect the actual certification exam format, giving you a realistic preview of what to expect.\nExpert Insights: Learn from carefully crafted questions that cover essential HTML5 features, including new elements, attributes, and best practices.\nFlexible Learning: Study at your own pace with access to practice tests and explanations anytime, anywhere.\nWhether you’re a beginner aiming to start your HTML5 certification journey or an experienced developer looking to refresh your knowledge, this course provides the tools and insights you need to succeed.\nEnroll today and take the next step towards mastering HTML5 with confidence!",
      "target_audience": [
        "Students and Learners preparing for exams or certifications in web development and design.",
        "IT Professionals those who want to add HTML5 certification to their skill set for career advancement.",
        "Aspiring HTML5 Developers those looking to deepen their understanding and preparation for HTML5 certification."
      ]
    },
    {
      "title": "Redux Beginner Guide with React Hooks",
      "url": "https://www.udemy.com/course/react-redux-hooks/",
      "bio": "Redux Beginner Guide with React Hooks. Master Redux with React Hooks",
      "objectives": [
        "Learn Redux concepts such as Action, Reducer, Store, Middleware, Dispatch, Async Action, Redux logger, and Redux-thunk",
        "Build the React app with latest hooks and redux state management library",
        "Learn to implement the best practices when handling application-level state with Redux in React Hooks.",
        "Start with Redux basic concepts and then implement Redux with React hooks by building the real-world app",
        "Learn to make use of redux-thunk middleware to make your action creator asynchronous.",
        "Handle Application level state in single global store state object tree"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation and Tools Used": [
          "Install Node.js and npm",
          "Tools used in this course"
        ],
        "Modern Javascript Concepts": [
          "Promise vs Async Await",
          "Spread Operator",
          "Object and Array Desctructuring"
        ],
        "Redux Basics": [
          "Before we start",
          "Redux : What and Why",
          "Redux Actions",
          "Redux Reducers",
          "Redux : dispatch Action",
          "Multiple Reducers",
          "Redux Middleware",
          "Async Action and Redux Thunk"
        ],
        "Redux with React Hooks": [
          "Getting Started with React",
          "App Header",
          "Setting up Dummy API Server",
          "Get task Action and Reducer",
          "Redux DevTools",
          "Dispatch Get Task Action",
          "List task: useSelector Hook",
          "Get Task Loader State",
          "Redux Logger",
          "Toast UI",
          "Add Task : Action and Reducer",
          "Add Task Form UI",
          "Dispatch Add Task",
          "Update/Improve Task List UI",
          "Delete Task Feature",
          "Modify/Update Task Status feature",
          "Time Travel Debugging"
        ],
        "SOURCE CODE": [
          "SOURCE CODE",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Basics of javascript"
      ],
      "description": "Master Redux with the latest React Hooks.\n\nWhat is Redux?\n\nA Predictable State Container for JS Apps\n\n♦ Redux helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test.\n♦ Centralizing your application's state and logic enables powerful capabilities like undo/redo, state persistence, and much more.\n♦ The Redux DevTools make it easy to trace when, where, why, and how your application's state changed. Redux's architecture lets you log changes, use \"time-travel debugging\", and even send complete error reports to a server.\n♦ Redux works with any UI layer and has a large ecosystem of add-ons to fit your needs.\n\nWhat is React?\n\nA JavaScript library for building user interfaces\n\n♦ Declarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.\n♦ Component-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.\n♦ Learn Once, Write Anywhere.\n\nWhat is React-Redux?\n\n♦ React Redux is maintained by the Redux team, and kept up-to-date with the latest APIs from Redux and React.\n♦ Designed to work with React's component model. You define how to extract the values your component needs from Redux, and your component receives them as props.\n♦ Creates wrapper components that manage the store interaction logic for you, so you don't have to write it yourself.\n♦ Automatically implements complex performance optimizations, so that your own component only re-renders when the data it needs has actually changed.\n\nYou will learn the following things in the course:\n\n♦ Build the React app with hooks and redux state management library.\n♦ Learn redux concepts such as Action, Reducer, State, Middleware, Dispatch, Async Action, Redux logger, and Redux-thunk.\n♦ Learn to implement the best practices when handling application-level state with redux in react.\n♦ Learn to make use of redux-thunk middleware to make your action creator asynchronous.\n♦ Feel Confident with Redux Concepts and its integration with React Hooks.\n♦ Learn the best practices to update the global state from reducers.\n♦ Learn to debug the react app state with redux dev tools.\n♦ Start with redux concepts basic and then implement redux with react hooks by building the real-world app.\n♦ and much more.",
      "target_audience": [
        "Developers looking to learn and master Redux with Latest React Hooks"
      ]
    },
    {
      "title": "Learn to Build WebVR applications by doing real projects",
      "url": "https://www.udemy.com/course/learn-to-build-webvr-applications/",
      "bio": "Learn by creating 10 real world WebVR applications with three.js which is used in Aframe and ReactVR",
      "objectives": [
        "Learn to use Threejs for VR (which is also used in Aframe & ReactVR)",
        "Understand basics of VR",
        "Build 360 media players",
        "Load and play positional audio",
        "Load and view 3D models",
        "Create simple VR games",
        "Learn to build effects in VR",
        "Build a movie theatre in VR",
        "Create lighting effects with threejs",
        "Add text interfaces in VR"
      ],
      "course_content": {
        "Setting up for the course": [
          "Accessing Course Files",
          "Viewing the project on local server"
        ],
        "Build and Learn": [
          "Building your first VR app",
          "Building a 360 Video Player",
          "Making a Movie Theatre with WebVR",
          "Making Snowfall Effect in VR",
          "Building an Image Gallery in VR with Lighting Effects",
          "Public Speaking Trainer in VR",
          "Creating Where's Waldo VR Game",
          "Car Showroom in VR",
          "Creating Nightclub in VR with Positional Audio",
          "Creating a Shopping Experience in VR"
        ]
      },
      "requirements": [
        "Interest in Virtual Reality",
        "Basic Javascript knowledge or willingness to learn it",
        "Willingness to learn new skills and technologies"
      ],
      "description": "Let's face it, developing for VR is hard, especially WebVR. There are so many paths that you can take, each with it's own set of tools.\n\nOn top of all this, web is evolving. It is no different with WebVR.\nIt can be overwhelming. Where do I start? What should I learn first. And because of the current state of VR, WebVR is being updated and support on browsers are being added.\nLearn the right thing. That is the difference between creating your application and wasting a lot of time. You can spend a lot of time reading and playing with tools and yet complete nothing.\nThis is why you need some structure for learning. There are many things to learn when it comes to WebVR. You'll need to know about WebGL, Three.js, 3D models, shaders, projections and so on.\nEven if you want to develop with a framework like Aframe or ReactVR, you need to learn three.js to create custom components and use it to it's full potential.\nThat is why this course is designed around three.js. Three.js is a library which helps to interact with WebGL, which is the cornerstone of WebVR.\nAnd unlike courses where you learn a lot of theory and do no projects, we'll learn to create by doing 10 real world projects. And as a bonus, you can download all the source code and use it in your personal and commercial applications.\nI've spend over 300 hours ($30,000) worth of consulting time in to making these course for you. I did it because I want each and every one of you to make full use of WebVR. Virtual reality is an emerging platform and it is here to stay.\nThose who get into WebVR now will have an unfair advantage in the future.\nYou can click on Buy Now to get the course.\nNo prior WebVR knowledge necessary to start.\n\nThere is no fluff in the videos, only pure value and straight to the point. So you can get to building WebVR applications as quickly as possible.\nAnd you'll be able to download the source code for all projects and use it for personal and commercial projects!\n\nTestimonials\n\"Rison is a true frontiersman in the area of WebVR, I recommend anyone interested in learning this important new tech to follow his work.\"\nBen Erwin, Entrepreneur and Web Developer\n\"Rison has done an amazing job building my website utilizing VR functionality. He is very responsive and has gone above and beyond to understand my objectives and execute a design and interface that is both unique and cutting edge. He has worked with me on my timeline and is very reasonably priced.\nI would definitely work with Rison again and highly recommend him to anyone looking to learn new skills in VR, build a website or VR applications!\"\nCliff Gladstone, CEO of 360 Entertainment",
      "target_audience": [
        "VR enthusiasts",
        "Front-end web developers",
        "3D artists",
        "Web designers",
        "Game designers",
        "Game developers",
        "Anyone who want to learn about WebVR and Threejs"
      ]
    },
    {
      "title": "Build a Full-Stack MERN Blog Website with Admin Dashboard",
      "url": "https://www.udemy.com/course/build-a-full-stack-mern-blog-website-with-admin-dashboard/",
      "bio": "Build a real full-stack React.js applications with Node.js, Express.js, MongoDB, Mongoose, JWT Authentication, etc.",
      "objectives": [
        "Build frontend with React Js, Tailwind CSS, Redux, Redux RTK Quary toolkit",
        "Build backend with Node, Express js, MongoDB, Mongoose, JWT(JSON Web Tokens), bcryptjs and more",
        "Build an entire project from scratch!",
        "Learn how to implement Authentication & Authorization",
        "Make blog page editor feature to create or update blog",
        "Admin dashboard pannel to manage blogs, users, and everything"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Before You Get Started",
          "Install node js",
          "Install VS Code on Windows/PC",
          "Connect MongoDB and Mongoose"
        ],
        "Backend Development": [
          "Basic Express Js Server Setup",
          "Dotenv and cors",
          "Create A Blog Model using mongoose",
          "Basic Blog Routes Setup and Testing",
          "Download Postman and Test API",
          "Post a Blog to Database Collection",
          "Get all Blogs from Database",
          "Search and Category Filtering using query",
          "Get a Single Blog by id",
          "Update a Blog Post",
          "Delete a Blog Post",
          "Get all Related Blogs (exclude the current blog)",
          "Create a Model for Comment",
          "Post a New Comment",
          "Get all the Comments Count using countDocuments() method",
          "Modify the blog routes for single post and delete post"
        ],
        "Authentication and Authorization": [
          "Create a User Model",
          "Register as A User",
          "How to Hash Password using bycrpt",
          "Login as a User using email and password",
          "Generate JWT token using middleware",
          "Logout a user",
          "Get all Users from DB",
          "Delete a User from db",
          "Update a User Role",
          "Refactor Blog Routes and Model",
          "VerifyToken Middleware for Securing Private Routes",
          "isAdmin Verification when Posting, Updating and Deleting Blog",
          "Upload Blogs data to Mongodb"
        ],
        "Get Started with Frontend Development": [
          "Setup a React Project using Vite",
          "Install and Configure Tailwind CSS",
          "Customize theme and Colors",
          "React Router DOM setup",
          "Project Structure and Outlet",
          "Create Navbar Component",
          "Make Navbar Mobile Responsive",
          "Hero Section with Swiper js",
          "Create Blog and Search Component",
          "Redux and redux toolkit setup",
          "Fetch Data and Show on Blog card",
          "Single Blog API and Route Setup",
          "Blog Details Content page",
          "Comment Card component",
          "Post A Comment section",
          "part-16-related blog section"
        ],
        "Auth, User Login, Register and Comment Funtionality": [
          "Create Login and Register page",
          "Auth Api Setup",
          "Login Funtionality and Get token on Browser Cookies",
          "Modify and Show User profile on Navbar",
          "Create Comment API and Post Comment after Login",
          "Modify Blog API"
        ],
        "Superb Admin Dashboard": [
          "Create your Admin Dashboard",
          "Admin Navigation Routes and Page setup",
          "Setup Private Routes",
          "Admin Dashboard Page",
          "Blog Graph Chart design using recharts",
          "Add New Blog Post from Dashboard",
          "Manage Blog Post",
          "Update Blog Post",
          "Manage User and Update User Role"
        ],
        "Project Deployment": [
          "How to Run Your Project",
          "How to Deploy Your Project on Vercel"
        ]
      },
      "requirements": [
        "Basic knowledge about React js (Optional)",
        "Basic Tailwind CSS (ex: margin, padding, background color, text color, etc)",
        "NO expert React knowledge or MERN knowledge is required",
        "No backend knowledge required"
      ],
      "description": "Are you ready to take your web development skills to the next level? In this course, we'll build a full-stack MERN blog website, a real-world project valued at $250 on Upwork. Whether you're a beginner or an experienced developer, this course will guide you through creating a powerful, feature-rich blog platform from scratch.\n\n\nWhat You'll Learn\n\n\nFrontend Development:\nReact: Master the fundamentals and advanced concepts of React.\nTailwind CSS: Style your application efficiently with this utility-first CSS framework.\nRedux & Redux RTK Query Toolkit: Manage state and handle API requests seamlessly.\nLogin & Registration: For login and registration will generate token and set it to cookies.\nRole-Based Dashboard: We will implement private routing to give access based on user role.\n\n\nBackend Development:\nNode.js & Express.js: Set up a robust backend server.\nMongoDB & Mongoose: Work with a NoSQL database and an elegant object data modeling library.\nJWT Authentication: Implement secure authentication and authorization.\nBcrypt: Ensure user password security with hashing techniques.\nMVC Architecture Pattern: We will follow the Model, the View, and the Controller  architecture pattern to structure our backend project\n\n\nAdmin Dashboard:\nAdmin Panel: Create an admin dashboard to post, manage, and update blogs.\nUser Management: Control user access and manage overall functionality.\n\n\nCourse Highlights\nReal-World Project: Build a project that can be sold or showcased in your portfolio.\nComprehensive Learning: Gain hands-on experience with both frontend and backend technologies.\nStep-by-Step Guidance: Follow detailed instructions and best practices.\nAdmin Functionality: Learn to create and manage an admin panel for complete control over your application.\n\n\nWhy Take This Course?\nThis course offers a complete, in-depth look at modern web development using the MERN stack. By the end, you'll have a fully functional blog website and the skills to build and manage your own web projects. Plus, you'll gain insights into best practices for both frontend and backend development, making you a versatile and valuable developer in today's job market.\nJoin us on this exciting journey to become a proficient full-stack developer. Enroll now and start building your professional blog website today!",
      "target_audience": [
        "Freshers who want to get hired as an intern or full-time role.",
        "Junior developer who wants to bring his skill to the next level",
        "Using basic React js knowledge who want learn how to build a fullstack app",
        "Advanced React developers who are interested in connecting React apps to Node/ Express"
      ]
    },
    {
      "title": "Build Car Dealer website in Django 3.0",
      "url": "https://www.udemy.com/course/build-car-dealer-website-in-django-3/",
      "bio": "Build functionalities with Django on HTML theme",
      "objectives": [
        "How to install,create and activate virtual environment",
        "How to create Django project",
        "How to create Django app",
        "How to connect HTML template with Django backend",
        "How to build filter form",
        "How to add pagination",
        "How to paginate filtered results",
        "How to embed google maps",
        "How to build working contact form"
      ],
      "course_content": {
        "Car Dealer website": [
          "Introduction",
          "Setup project",
          "Connect static",
          "Customize home page",
          "Create base template",
          "About us page",
          "Create models",
          "Show models",
          "Customize models",
          "Slider",
          "Customize slider",
          "Filter form",
          "Customize form",
          "Show form results",
          "Customize form results",
          "Absolute url",
          "Customize detail page",
          "Customizing detail page finished",
          "Pagination",
          "Pagination second part",
          "Inventory page",
          "Dealers page",
          "Contact page",
          "Contact page functions",
          "Outro"
        ]
      },
      "requirements": [
        "Basic Django knowledge",
        "Linux system"
      ],
      "description": "In this course you will learn how to build website for car dealer in Django from scratch, how to create and show models, how to use django-filters to filter models, how to add pagination on filtered results, how to build working contact form and embedd google maps on your website.",
      "target_audience": [
        "Intermediate Django developers, who knows basics and want to build something real world"
      ]
    },
    {
      "title": "ANGULAR : Advanced level",
      "url": "https://www.udemy.com/course/angular-professional-level/",
      "bio": "Angular : an awesome framework for building single-page applications",
      "objectives": [
        "In this course, you're going to learn everything you need to build professional web applications using Angular, step by step.",
        "You will learn a lot of basics and advanced features angular offers, and by the end of this course you'll therefore be an advanced angular developper.",
        "You'll have much more than just a solid understanding of Angular, and you'll be able to delve into more challenging projects.",
        "We're not going to stay at the basic level; instead, we are going to dive into advanced features and try to apply them in this web application."
      ],
      "course_content": {
        "Introduction": [
          "Course presentation",
          "The backend application",
          "Note"
        ],
        "Installation and configuration": [
          "Installation and configuration"
        ],
        "Running the application": [
          "Running the application"
        ],
        "Components": [
          "Components"
        ],
        "Code quality": [
          "Code quality"
        ],
        "Routing": [
          "Notes",
          "Routing"
        ],
        "Angular Material": [
          "Angular Material",
          "Notes",
          "Create a form with Angular Material"
        ],
        "FormGroup": [
          "Create a FormGroup"
        ],
        "Services": [
          "Create a service"
        ],
        "Attribute directives ngStyle": [
          "Notes",
          "Attribute directives ngStyle"
        ]
      },
      "requirements": [
        "Programming basics"
      ],
      "description": "Welcome to this tutorial designed to help you learn how to develop a professional web application using Angular.\nAngular is an excellent application design framework and development platform that allows you to create highly reactive and responsive single-page applications.\nIn this course, you will learn everything you need to build professional web applications using Angular, step by step.\nYou will cover both the basics and advanced features that Angular offers, and by the end of this course, you will become an advanced Angular developer.\nWe won't linger on the basic level; instead, we'll dive into advanced features and apply them in this web application.\nI've incorporated all my knowledge and experience as a developer who has extensively worked with Angular into this course, aiming to provide you with the best possible learning experience.\nBy the end of the course, you'll have a solid foundation and much more. You'll be well-prepared to delve deeper into Angular and, if your goal is to apply for Angular developer positions, you'll be ready for that too.\nYou will explore all the core features Angular has to offer, and by the course's conclusion, you'll be capable of building amazing applications on your own.\nI'm excited to welcome you to this course and can't wait to get started together with you.",
      "target_audience": [
        "FrontEnd developer",
        "FullStack developer",
        "Web developer",
        "developer",
        "programmer",
        "designer",
        "Software engineer",
        "Angular developer"
      ]
    },
    {
      "title": "Introduction to the Astro web framework",
      "url": "https://www.udemy.com/course/introduction-to-the-astro-web-framework/",
      "bio": "Create fast, content-driven websites with this pioneering web framework",
      "objectives": [
        "Understand the three rendering modes that Astro offers: static, server and hybrid",
        "Understand and apply the islands architecture pioneered by Astro",
        "Learn how to create Astro components",
        "Learn how to create endpoints for APIs or for static files",
        "Learn how to use the special template directives that Astro provides",
        "Learn how to apply middleware logic",
        "Learn different ways of applying CSS",
        "Learn how to enable and apply view transitions",
        "Understand content collections and when to use them",
        "Learn how to enable SPA mode (singe-page app) with view transitions",
        "Learn how to create static and dynamic page routes",
        "Learn about Astro's support for HTML streaming",
        "Learn how to extend the functionalilty of Astro with integrations",
        "Evaluate the features of the Astro web framework"
      ],
      "course_content": {
        "Getting started": [
          "Welcome",
          "Exploring a new Astro project",
          "Telemetry data",
          "Trying out the npm scripts",
          "Setting up the code environment"
        ],
        "Basics": [
          "Rendering modes: static, server, hybrid",
          "Astro components",
          "Page routes",
          "Islands architecture"
        ],
        "Beyond the basics": [
          "Overview of the demo app",
          "More on CSS",
          "Using the URL as state",
          "Images",
          "Content collections",
          "More on page layouts",
          "Server-side rendering",
          "Endpoints",
          "Form submissions",
          "Middleware",
          "HTML streaming",
          "View transitions"
        ],
        "Conclusion": [
          "Next steps"
        ]
      },
      "requirements": [
        "Familiarity with HTML, CSS and JavaScript as the course will only focus on features specific to the Astro framework",
        "Basic familiarity with TypeScript"
      ],
      "description": "Astro is quickly becoming the preferred framework for creating fast, content-driven websites. Astro can be used for static site generation (SSG), server-side rendering (SSR) or a combination of both.  As a framework, Astro can be used on its own or in combination with popular UI libraries like React, Vue, Svelte and Solid. We can even create web pages containing components from multiple, different UI libraries making Astro the ideal framework for creating micro frontends. Used by some of the top companies in the world, learning Astro will be a valuable addition to your skillset as a web developer.\n\n\nMaster the basics of Astro through simple coding examples\nLearn how to create Astro components\nLearn how to use Astro's file-based routing to create static and dynamic page routes\nLearn how to enable client-side routing with View Transitions\nDiscover the benefits of the islands architecture pioneered by Astro\nManage web content with Astro's content collections and schema validation\nCreate API endpoints and learn how to apply middleware logic\nLearn about Astro's support for HTML streaming\n\n\nThis course introduces you to the features and capabilities of the Astro web framework without taking too much of your time.\nWatch or follow along with simple coding examples and cement your understanding of the concepts with the recap section after every coding lecture.\nBy the end of the course you will have a thorough understanding of the basics of Astro.",
      "target_audience": [
        "Web developers looking to learn the basics of the Astro web framework within a short time",
        "Technical Leads and Solution Architects looking to evaluate the benefits of the Astro web framework within a short time"
      ]
    },
    {
      "title": "LEARNING PATH: Powerful User Interfaces with Unity & Canvas",
      "url": "https://www.udemy.com/course/learning-path-powerful-user-interfaces-with-unity-canvas/",
      "bio": "Build the finest gaming interfaces with Unity and Canvas",
      "objectives": [
        "Learn to create screen space and world space UIs with Canvas",
        "Explore Unity’s new layout and anchoring system",
        "Learn various UI graphics components and UI control components",
        "Know how to animate the canvas",
        "Craft reusable UI elements such as modal dialog and character dialog windows",
        "Prepare UI for different resolutions and to target multiple platforms",
        "Learn to create responsive designs for multiple screen types",
        "Write editor scripts to automate master styles and extend the UI"
      ],
      "course_content": {
        "Developing your First Canvas": [
          "The Course Overview",
          "Creating a Countdown Timer",
          "Making a Basic Menu",
          "Building a Heads-Up-Display",
          "Making a Main Menu",
          "Creating a New Game Screen",
          "Building a Load Menu",
          "Making an Options Menu",
          "Navigating between Menus",
          "Raycasts and Navigation",
          "Animating the Main Menu",
          "Making a Screen Transition",
          "Developing your First Canvas"
        ],
        "Enhancement with Unity UI Advanced": [
          "The Course Overview",
          "Using World Space Canvases",
          "Creating a Damage Indicator",
          "Modal Dialogs",
          "Creating a Chat Dialog",
          "Displaying an Inventory",
          "Dragging and Dropping Items",
          "Shopping Around",
          "Responsive Design",
          "Targeting Different Devices",
          "Using the Video Player",
          "Extending Unity's UI",
          "Automating Master's Style",
          "Enhancement with Unity UI Advanced"
        ]
      },
      "requirements": [
        "Working knowledge on Unity is required."
      ],
      "description": "Unity is one of the most exciting and popular game engine in the gaming industry. Unity will ease your way of creating highly-optimized and beautiful 2D and 3D games by speeding up your development process. Canvas is a virtual learning environment that has been adopted by organizations of all kinds. Its flexibility and ease of use are unparalleled, and it has proved especially useful in situations where collaboration between individuals and in groups, with feedback on many different levels, is a must. So, if you want to become an expert in building interactive user interfaces with Unity and Canvas, then you should surely go for this Learning Path.\nPackt’s Video Learning Path is a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are:\n● Learn to build the gaming interface by adding basic elements to Canvas\n● Animate Canvas elements and develop reusable UIs to cut down on development time\n● Create responsive UI for different resolutions and platforms by using the new video component offered by  Unity 5.6\nLet's take a quick look at your learning journey. This Learning Path starts off by diving deep into the entire Unity UI system. You will then walk through the core components and elements which will enable you to build exciting games using Unity. You will also understand how unity’s components and elements interact with each other.\nNext, you will explore animating a Canvas. You will learn how to create reusable UI elements. You will also learn to design a game in Unity that will run on multiple devices. Finally, you will learn UI editing and scripting.\nBy the end of this Learning Path, you will have a strong understanding of how the UI system works as a whole.\nMeet Your Expert: We have the best work of the following esteemed author to ensure that your learning journey is smooth:\nKeith O’Malley is a Unity and Web developer/designer who loves coffee, music and games. He likes to be able to do everything, with a background in Web, VR and Graphic Design. He has been studying and working in multimedia for 6 years, including image manipulation, vector graphics photoshop/illustrator and sketch, making games and VR experiences in Unity, using IOT hardware such as Arduino's and creating a variety of web programming languages and frameworks. Keith graduated with a first class honours in multimedia programming from IADT in June 2016, and has two student of the year awards, one from the same degree and another from a Creative Multimedia Diploma completed in 2013.",
      "target_audience": [
        "This Learning Path is for C# developers having good knowledge on Unity and want to take their UI development skills to the next level by building amazing user interfaces."
      ]
    },
    {
      "title": "Backend Web Development Bootcamp - From Beginner to Expert",
      "url": "https://www.udemy.com/course/backend-web-development-bootcamp/",
      "bio": "Master Backend Development with Node js, MongoDB, Mongoose, SQL, GraphQL, TypeScript, and Microservices Architecture.",
      "objectives": [
        "Node js Foundations: Grasp event-driven architecture, non-blocking I/O, and building RESTful APIs.",
        "Database Integration: Master MongoDB, Mongoose, SQL, and GraphQL for seamless data management.",
        "Microservices Architecture: Create scalable, modular systems perfect for large applications.",
        "Real-Time Applications: Use WebSockets to build powerful real-time features.",
        "TypeScript in Node.js: Write cleaner, more maintainable, and error-free code.",
        "Advanced Topics: Dive deep into authentication, caching, performance optimization, and security best practices."
      ],
      "course_content": {
        "Introduction": [
          "Course Content Plan",
          "Introduction to Node JS",
          "Understanding Node.js Architecture",
          "Install Node JS",
          "Run Your First Node Program",
          "Working with Core Modules",
          "Node.js Module System (CommonJS vs ES Modules (ESM))",
          "The fs Module (File System)",
          "The path Module",
          "The os Module",
          "The http Module",
          "How to Create Your Own Custom Modules",
          "Understanding NPM (Node Package Manager)",
          "Install and Verify Node js and NPM (optional video)",
          "Initializing a New Project with npm init",
          "Understanding the package.json File",
          "Managing Dependencies",
          "Essential npm Commands",
          "Installing Packages (locally, globally or a specific version)",
          "Semantic Versioning (SemVer)",
          "Practical Project: Update Package Version using Semantic Versioning",
          "The package-lock.json File",
          "Security and Auditing",
          "Event Emitter in Node js",
          "Project: Create a Simple Chat Server using Event emitter",
          "Streams in Node js",
          "Work with Readable Streams",
          "Writable Streams",
          "Duplex Streams",
          "Transform Stream",
          "Handling Large Files with Streams",
          "Project: File Streaming Application",
          "Create a HTTP Server using http Module",
          "Handling Requests and Sending Responses [using Postman for api testing]",
          "Routing Basics (different page \"home\", \"about\", \"contact\" page, not found page)",
          "Practical Project: Basic Blog Server with Routing",
          "Working with Buffers: Encoding Decoding Data (with \"uft-8\", \"base64\" etc)",
          "Project: File Encoding and Decoding",
          "Project: Embaded Image in HTML",
          "Building Your Own CLI Tools with Node.js",
          "Accepting User Input with Arguments (process.argv)",
          "Creating an Interactive CLI with readline",
          "Publish Your First Package to NPM Registry & Distributing the CLI Tool",
          "PROJECT DEMO: Create NPM Package and Publish It to NPM Registry",
          "Project: Create an Another Package and Publish it on NPM Registry",
          "DEMO: Create NPM Package Like Lodash",
          "Project: Create & Publish Your Own NPM Package Like Lodash",
          "Download Source Code"
        ],
        "Get Started with Express JS": [
          "What is Express Js and Why Use It",
          "Setup Your First Express js Server",
          "Basic Express Server Explained",
          "Understanding the Project Folder Structure",
          "Express JS Routing and Basic Route Methods",
          "Basic Routes in Express js with Example",
          "Dynamic Routes with Route Paramenters",
          "Query Strings for Search and Category based Filtering",
          "Organizing Routes into Separate Files",
          "Project: Simple Blog API with Express js",
          "Blog API Project part-2",
          "Middleware in Express js",
          "Typesof Middleware",
          "Custom Middleare and Its Uses",
          "Built-in Middleware",
          "Third-party Middleware",
          "Project: Create an Activity Logger Middleware",
          "Understanding req and res Objects",
          "Sending Different Types of Responses",
          "Setting Headers and Cookies"
        ],
        "Learn TypeScript Full Course": [
          "TypeScript Course Plan",
          "TypeScript Course Overview",
          "Introduction to TypeScript",
          "Installing TypeScript & Compiling .ts file",
          "Type Annotations and Basic Types: string, number and boolean",
          "Arrays and Tuples",
          "any, unknown, void, null, and undefined type",
          "Type inference",
          "Project: Create a simple student profile with types.",
          "Functions in TypeScript",
          "Optional and Default Parameters",
          "Function Return types",
          "Arrow functions",
          "Project: Build a calculator with typed functions.",
          "Object structure typing",
          "Type Aliases for Complex Objects",
          "Optional Properties using (?) mark",
          "Project: Create a Type Aliase for a Blog Post",
          "Interfaces vs Type Aliases: Syntax comparison and Use-cases",
          "Extending interfaces",
          "Project: Building a User Profile using Interface and Type Aliases",
          "Advanced Types: Union (|) and Intersection (&) types",
          "Literal types",
          "Type Narrowing: from General to a Specific Type",
          "Type guards: typeof, in operator and instanceof",
          "Custom Type Guard: Create Your Own Type Checker",
          "TypeScript OOP: Defining classes",
          "Constructor and Modifiers (public, private, protected)",
          "Understanding Inheritance",
          "Implements keyword",
          "Project: Vehicle Management System",
          "TypeScript Generics: Generic functions and interfaces",
          "Constraints to Add Limits on Your Generics",
          "Project: Generic API Response Handler",
          "Working with Enums: Numeric and string enums",
          "Define Const enums",
          "Project: Blog Post Status using Enums",
          "Modules and Namespaces"
        ],
        "Build an E-Commerce API (Nodejs, Express,MongoDB, Mongoose, JWT,Zod, TypeScript)": [
          "Project Overview",
          "How to Setup Project",
          "Create a Express Js Server",
          "Connect MongoDB using Mongoose",
          "Understanding the Rules of Modular Design Pattern",
          "Create Product Interface",
          "Create Product Model and Mongoose Schema",
          "Make Zod Validation Schema for Products",
          "Get All Product Routes",
          "Get Single Product by Id Route",
          "Update and Delete Product Route",
          "Order Interface, Model, Zod Schema",
          "Make Order Routes",
          "Create User Interface, Model, Validation and Register User Routes",
          "User Login Route",
          "Auth and Admin Middleware for Projecting Routes",
          "Deployment on Vercel and Test API",
          "Download Source Code"
        ],
        "Important Notice | Must Read This": [
          "Important Notice"
        ]
      },
      "requirements": [
        "No prior experience in backend development or Node js—we’ll guide you every step of the way! If you’re ready to learn, this course will equip you with everything needed to succeed.",
        "Basic Programming Knowledge of JavaScript",
        "A Computer with Internet Access"
      ],
      "description": "Unlock the secrets of backend development and become a skilled backend developer with this all-inclusive course. Designed for beginners and experienced developers alike, this course takes you step-by-step through the essentials of building scalable and efficient backend systems.\nYou’ll learn:\nThe foundations of Node js: event-driven architecture, non-blocking I/O, and building RESTful APIs.\nDatabase Integration: Master MongoDB, Mongoose, SQL, and GraphQL for robust data management.\nMicroservices Architecture: Create scalable, modular backend systems for large applications.\nReal-Time Applications: Build powerful real-time features using WebSockets.\nTypeScript in Node js: Write cleaner, more maintainable code with TypeScript.\nAdvanced topics like authentication, caching, performance optimization, and security best practices.\nHands-On Projects\nDevelop a fully functional e-commerce backend.\nCreate a real-time chat app with WebSocket.\nBuild a microservices-based system with service discovery and load balancing.\nImplement authentication systems using JWT and OAuth.\nExplore smaller projects to reinforce every concept.\nWhy Take This Course?\nBackend development is the backbone of every application, from small startups to large enterprises like Netflix, LinkedIn, and Walmart. By mastering backend development, you’ll open doors to high-paying jobs and exciting career opportunities.\nWho Should Enroll?\nBeginners aiming to break into backend development.\nFrontend developers transitioning to full-stack development.\nIntermediate developers expanding their skill set with advanced backend topics.\nAnyone passionate about building robust, scalable backend systems.\nJoin this transformative learning journey and build the skills to create powerful backend systems that drive modern applications!",
      "target_audience": [
        "Beginners starting their backend development journey.",
        "Frontend developers transitioning to full-stack development.",
        "Intermediate developers diving into advanced backend topics.",
        "Anyone passionate about building high-performance, scalable backend systems."
      ]
    },
    {
      "title": "Get A Web Developer Job - The Tips, Tricks & Tech Revealed",
      "url": "https://www.udemy.com/course/get-a-web-dev-job/",
      "bio": "Get the Web Developer Job you Always Wanted! Learn the Secrets & Tech to Succeed - Includes free Portfolio and Resume!",
      "objectives": [
        "Students will know how to build a strong personal portfolio.",
        "Students will know how to write a killer resume.",
        "Participants will understand how to network and approach recruiters.",
        "Students will understand how to use Github & Github desktop to effectively show off their projects.",
        "Students will have a portfolio they can work upon and send to potential employers."
      ],
      "course_content": {
        "Welcome!": [
          "Introduction",
          "About Me",
          "What Are We Going to Learn?"
        ],
        "Git/GitHub": [
          "Why Git?",
          "Getting Started with GitHub",
          "GitHub Desktop",
          "Why Github?",
          "Practice, Practice, Practice.",
          "The Little Details Matter!",
          "Getting Online on GitHub Pages"
        ],
        "Build A Portfolio": [
          "Portfolio 101"
        ],
        "Buzzwords and Tech": [
          "Fundamentals",
          "SASS - An Intro",
          "SASS - Use on our portfolio",
          "BEM",
          "Frameworks - Bootstrap Intro",
          "Bootstrap Examples",
          "Javascript Frameworks"
        ],
        "Write a Killer Resume": [
          "Resume 101",
          "Free Resume Template",
          "Writing a Personal Statement",
          "Personal Statement Example",
          "Key Skills",
          "Past Experiences"
        ],
        "How To Network Effectively": [
          "Why Should I Network? - The Benefits",
          "Personal Branding",
          "LinkedIn Success",
          "LinkedIn Tactics",
          "Instagram",
          "Instagram Profiles",
          "Instagram Assignment"
        ],
        "The Infamous Coding Interview": [
          "First Impressions are Everything!",
          "Talking About Your Work",
          "The Coding Test",
          "Code Test 1 - Junior Questions",
          "Code Test 2 - Junior Project",
          "Code Test 3 - Mid Questions",
          "Code Test 4 - Mid Project",
          "Other Code Test Resources"
        ],
        "Course Outro": [
          "What Happens Next?"
        ]
      },
      "requirements": [
        "A basic understanding of HTML/CSS is good, but not necessary."
      ],
      "description": "Want To Start Your New Career As A Web Developer But Lacking Confidence? Applied For Jobs But Never Heard Anything Back? Got an Interview and Don't Know How to Approach It? Want to Learn to Code But Don't Know Where to Start?\nThis is the course for you!!!\nINCLUDED!...\nA stunning portfolio students can edit and call their own! No coding experience necessary to get a beautiful website.\nA designed coding style resume.\nAccess to an Open Source project on GitHub that everyone can be involved with! Build your resume up with awesome experience.\nOver a hundred real interview questions collected from all of the interviews I have had!\nA selection of real world code tests to download and complete in your own time. Practice the sort of questions and projects you are likely to be asked!\nIn this course, you are going to learn every tip and trick that you need to land yourself a web developer job. We are going to cover:\nVersion Control - What is it? How should we use it? Learn how to use Git/GitHub (Get access to an open source project that you can put on your resume!)\nPortfolios - How to make them the best we can (Included is a free stunning mobile responsive template you can edit and call your own)\nThe Tech Employers Want - Learn about the tech that companies want you to be able to use and learn what you should be focusing on learning - SASS, BEM and Bootstrap.\nResumes - How to really make them stand out! (Included is an awesome designed resume template you can make your own)\nNetworking - Learn how to network effectively. We talk about building a brand, and get you set up on the industries favourite LinkedIn and Instagram. Learn how to start creating a personal brand and get a shout out on completion of our Instagram assignment!\nInterviews - Find out how to succeed at interviews and about the dreaded Coding Test. Practice makes perfect, and included is a extensive list of real interview questions which is CONSTANTLY being updated! Tackle two real life examples of a code test!!\n--------------------------------------------------------\nMy name is James Bedford, I am a 27 year old Web Developer. I started working as a freelance web designer 13 years ago, and at the age of 14 I sold my first website. It has been a long running love of mine, and something that I have always done. Currently I run my own consultancy company and do contract work as well as advise individual companies on how to improve their online presence.\nI am passionate about getting people into code and teaching them the most effective ways of learning and succeeding at programming. This comes from my days in education and studying Computer Science: I had trouble throughout my studies, and found much better success working off my own back rather than the content being taught in lessons. I find actually building items over and over and over to be more beneficial to me and this is what I want to share with everyone.\nI am firmly of the belief that programming is only as hard as you make it. You just need to figure out how best to learn it.\nThis is why I have put together a course to talk about the things that aren't often taught in the coding world - the soft skills necessary to get yourself into a new career. I run through right from the start, where you should learn and what you should learn, right up to applying for jobs and getting your first freelance contracts!\nStudents will get some excellent resources, as well as knowledge from several experienced developers and career people. As well as this, students will get continued support on their learning, and if you ever need to know anything or require help then please feel free to get in touch.\nRegards,\nJames.",
      "target_audience": [
        "Someone who is looking at getting a job in web development but doesn't know where to start.",
        "People who have tried applying for web development jobs but are having no success.",
        "People who are looking at advancing their web development career."
      ]
    },
    {
      "title": "Become a pro at the LAMP-stack, learn the LAMP-stack with AI",
      "url": "https://www.udemy.com/course/become-a-pro-at-the-lamp-stack/",
      "bio": "Master Full Stack Development with the LAMP Stack: Linux, Apache, MySQL, PHP",
      "objectives": [
        "How to setup your own LAMP-environment using docker",
        "Linux - What it is and some basic comands",
        "Apache basics",
        "MySQL - How to work with MySQL",
        "PHP - What is this and how do we program in this",
        "Create a project using the LAMP Stack"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Linux": [
          "What is linux?",
          "Setting up our linux environment on windows",
          "Folder structure in linux",
          "Some basic commands in linux",
          "Linux Quiz"
        ],
        "Apache": [
          "What is apache?",
          "Installing apache on our linux system",
          "How do we setup a website in apache",
          "Apache Quiz"
        ],
        "MySQL": [
          "What is MySQL?",
          "Installing MySQL",
          "Setting up our first database and one table",
          "Performing a CRUD in MySQL",
          "MySQL Quiz"
        ],
        "Installing PHP on our local environment": [
          "What PHP is",
          "Installing PHP in our local environment"
        ],
        "PHP Basics": [
          "Variables, Echo / Print, and Die",
          "Data Types",
          "Conditional Statements",
          "Switch Statement",
          "Arrays and loops",
          "Functions",
          "PHP Quiz"
        ],
        "Extra: API:s": [
          "What is an API?",
          "The difference between REST and SOAP"
        ],
        "Project: Create a simple calculator in PHP": [
          "Setting up our website in apache",
          "Adding our HTML",
          "Adding our PHP code"
        ],
        "Project: ChatBot using ChatGPT, Javascript & PHP": [
          "Setting up our website in apache",
          "Adding our HTML",
          "Adding the JavaScript",
          "Fixing small errors in our Javascript",
          "Coding our chatbot class",
          "Settting up our ENV-file and testdata-file",
          "Setting up our message manager"
        ]
      },
      "requirements": [
        "No programming experience neede. You will learn everything you need to know in this course"
      ],
      "description": "Unlock the potential of full stack development by mastering the LAMP stack (Linux, Apache, MySQL, and PHP)! This comprehensive course is designed to equip you with the essential skills to build dynamic, database-driven websites and applications from scratch.\nWhat You’ll Learn:\n1. Linux:\nWhat is Linux, and why it’s essential for developers.\nStep-by-step guide to setting up a local Linux environment on your Windows machine.\nUnderstanding Linux’s folder structure.\nKey Linux commands to streamline your development process.\n2. Apache:\nIntroduction to Apache: The foundation of modern web servers.\nHow to install Apache in your local Linux environment.\nSetting up websites in Apache, including virtual hosts and configuration.\n3. MySQL:\nWhat is MySQL, and how it powers dynamic websites.\nInstalling MySQL with all necessary extensions.\nCreating your first database and table from scratch.\nPerforming a full CRUD (Create, Read, Update, Delete) operation in MySQL.\n4. PHP:\nIntroduction to PHP: The backend language of choice.\nInstalling PHP and essential extensions in your development environment.\nPHP fundamentals: Syntax, variables, functions, and more.\nHands-On Projects:\nBuild a Simple Calculator using PHP to perform basic mathematical operations.\nCreate an AI Chatbot by integrating OpenAI with PHP, JavaScript, HTML, and CSS.\nThroughout the course, you’ll also take quizzes to reinforce what you’ve learned and ensure you’re ready to apply your skills in real-world projects.",
      "target_audience": [
        "Developers and devops who want to learn the LAMP stack"
      ]
    },
    {
      "title": "Next.js & MERN Stack: Master Modern Auth with NextAuth, JWT",
      "url": "https://www.udemy.com/course/nextjs-mern-stack-the-ultimate-authentication-blueprint/",
      "bio": "Learn Email/Password, Google & GitHub Sign-In, Secure JWT, Role-Based Dashboards, reCAPTCHA & More!",
      "objectives": [
        "User Registration and Login",
        "Google reCAPTCHA Integration",
        "NextAuth Integration",
        "Brute Force Attack Prevention",
        "Account Activation",
        "Social Login with Six Platforms",
        "Cookie Management",
        "Google Analytics Setup",
        "Password Recovery and Reset",
        "Protected Pages",
        "Admin Dashboard",
        "User Dashboard",
        "User Profile Management",
        "User Device Details Tracking",
        "Last Login Details"
      ],
      "course_content": {
        "Introduction": [
          "project showcase",
          "installation dependencies part_1",
          "need your support",
          "installation dependencies part_2"
        ],
        "home component": [
          "home component part_1",
          "home component part_2",
          "home component part_3"
        ],
        "Register page": [
          "register component part_1",
          "register component part_2",
          "register component part_3",
          "register component part_4",
          "password hide and show",
          "check-password-strength",
          "google reCAPTCHA",
          "google reCAPTCHA protectionpopup",
          "register handlesubmit function",
          "BeatLoader",
          "user model",
          "database connection",
          "register api",
          "recaptcha verifivation",
          "user save in database",
          "database error fix"
        ],
        "Activate account": [
          "activation link",
          "activate account page",
          "activate account api",
          "activate account api part_2",
          "activation account message error fix"
        ],
        "Login page": [
          "Login page"
        ],
        "next-auth": [
          "next-auth install",
          "next-auth configuration part_1",
          "next-auth configuration part_2",
          "login with next-auth"
        ],
        "Brute Force Attack Prevention": [
          "login attempt model",
          "brute force attack part_1",
          "brute force attack part_2",
          "brute force attack part_3",
          "brute force attack part_4"
        ],
        "Social Login with Six Platforms": [
          "login with six plateform",
          "client id and secret key",
          "login with six platform part_2",
          "login with google part_1",
          "login with google part_2",
          "login with discord",
          "login with X",
          "login with github",
          "login with auth0"
        ],
        "Csrf Token": [
          "csrf token"
        ],
        "Forgot password Page": [
          "Forgot password Page",
          "forgot-password api",
          "forgot-password send email"
        ]
      },
      "requirements": [
        "Basic Knowledge of JavaScript",
        "Material-Ui",
        "HTML and CSS Fundamentals",
        "Basic Understanding of Web Development",
        "Nodejs Basics",
        "Reactjs Basics",
        "Nextjs Basics",
        "Mongodb Bascis",
        "Git and Version Control",
        "Computer",
        "Code Editor",
        "Nodejs and npm",
        "Git"
      ],
      "description": "Welcome to \"Next.js 14: Advanced Authentication with Next.js & MERN Stack\" – a comprehensive guide to mastering secure user authentication in modern web applications. This course is designed for developers at all levels who want to implement robust authentication systems using Next.js and the powerful MERN (MongoDB, Express, React, Node.js) stack.\nWhat You'll Learn:\n\n\nDisplaying Last Logins:\nThe \"last login\" feature in an application tracks and displays the most recent login times for a user. This is useful for providing users with information about their recent activity and for security purposes\nEmail OTP Authentication: Utilize Nodemailer to send one-time passwords (OTPs) via email, ensuring secure user verification and account management.\nUser Registration and Login:\nBuild secure and efficient user registration and login systems from scratch.\nUnderstand the principles of secure password handling and authentication best practices.\nNextAuth Integration:\nLearn to configure and utilize NextAuth for managing authentication in Next.js applications.\nCustomize authentication flows and manage user sessions effectively.\nSocial Login with Six Platforms:\nImplement social login options using major platforms such as Google, Facebook, Twitter, GitHub, LinkedIn, and Apple.\nSimplify the user onboarding process with OAuth protocols.\nGoogle reCAPTCHA Integration:\nProtect your application from spam and abuse with Google reCAPTCHA.\nImplement reCAPTCHA to enhance the security of your registration and login forms.\nCookie Management:\nUnderstand the role of cookies in web applications.\nSecurely handle cookies for authentication and session management.\nGoogle Analytics Setup:\nIntegrate Google Analytics to track user interactions and gather valuable insights.\nUtilize analytics data to improve user experience and application performance.\nBrute Force Attack Prevention:\nImplement security measures to block users after multiple failed login attempts.\nSafeguard your application against brute force attacks and unauthorized access.\nPassword Recovery and Reset:\nDevelop a secure \"Forgot Password\" functionality.\nUse Nodemailer to send password reset emails and allow users to reset their passwords.\nAccount Activation:\nImplement email-based account activation to ensure genuine user registrations.\nSecure the registration process by verifying user email addresses.\nProtected Pages:\nRestrict access to certain pages based on user roles and authentication status.\nEnsure only authorized users can access sensitive information and functionality.\nAdmin Dashboard:\nCreate a comprehensive admin dashboard for managing users and application settings.\nProvide administrators with the tools to monitor and control application activities.\nUser Dashboard:\nDevelop a user dashboard where users can manage their profile and settings.\nEnhance user experience by providing personalized content and options.\nUser Profile Management:\nAllow users to view and edit their profile information.\nEnsure data integrity and security while handling user information.\nUser Device Details Tracking:\nCollect and store user device details (e.g., browser type, OS, IP address) for enhanced security and analytics.\nMonitor and analyze user sessions based on device information.\n\n\nWho This Course Is For:\nAspiring Web Developers: Beginners looking to start their journey in web development with a focus on user authentication.\nIntermediate Web Developers: Developers aiming to enhance their skills with advanced authentication techniques and security practices.\nFrontend and Backend Developers: Those wanting to expand their knowledge and integrate robust authentication systems in their applications.\nFull-Stack Developers: Developers seeking to deepen their understanding of user authentication and improve their web applications' security.\nProject Managers and Tech Enthusiasts: Individuals who want to understand the technical aspects of user authentication to better oversee and manage development projects.\nWhy Enroll:\nHands-On Learning: Gain practical experience through real-world projects and examples.\nComprehensive Coverage: Learn everything from basic login systems to advanced social logins and security measures.\nExpert Guidance: Benefit from step-by-step instructions and detailed explanations to help you master the concepts.\nCareer Advancement: Enhance your resume and skill set, making you a more competitive candidate in the job market.\nCommunity Support: Join a community of learners to share ideas, ask questions, and get support throughout the course.\nBy the end of this course, you'll have the skills and confidence to implement secure and efficient user authentication and management systems in your web applications. Join us and take your web development skills to the next level!",
      "target_audience": [
        "Aspiring Web Developers",
        "Intermediate Web Developers",
        "Frontend Developers",
        "Backend Developers",
        "Full-Stack Developers",
        "Tech Enthusiasts",
        "Students and Educators",
        "Freelance Developers"
      ]
    },
    {
      "title": "Mastery Of Bootstrap 5 - Unlock Bootstrap From Basic To Pro",
      "url": "https://www.udemy.com/course/mastery-of-bootstrap-unlock-bootstrap-from-basic-to-pro/",
      "bio": "Easy Step-by-Step Guide To Gain Practical Mastery of Bootstrap 5 || Creating Responsive Web Layouts",
      "objectives": [
        "Learn how to link Bootstrap in your projects using Bootstrap CDN or by using the downloaded complete Bootstrap folder.",
        "Customization of Bootstrap with the manipulation of CSS properties, variables and classes",
        "Learn how to use Bootstrap's responsive Stack (Horizontal/Vertical Stack) to design website layouts",
        "Learn how to use Bootstrap's Row columns and Flex design to create different website layouts",
        "Master the Bootstrap's JavaScript responsive navbar, navs, pills and tabs, offcanvas, dropdown menu.",
        "Understand the mastery of Bootstrap's 12 column-grid system to design different website layouts",
        "Explore how to structure Bootstrap's alert, modal, toast, popover, tooltips.",
        "Mastery of Bootstrap's carousel and how to customize it",
        "Use Bootstrap's classes (icons, links, float, sizing, spacing, text, bg-color, display, position, border) to style your elements quickly and efficiently.",
        "Master the art of using Bootstrap to structure pagination, buttons, badges, progress bar, breadcrumb",
        "Mastery of Bootstrap's flexible scrollspy, accordion, collapse layouts.",
        "Apply Bootstrap's classes to structure Table, List groups, Cards, Forms"
      ],
      "course_content": {},
      "requirements": [
        "You already know how to code with HTML and CSS. You have a good understanding of CSS",
        "Already know how to work with Flexbox, though not a must.",
        "You will need a laptop that has a code editor installed - e.g. Visual Studio Code, Sublime text, etc. I will be using Visual Studio Code"
      ],
      "description": "I'm thrilled to have you here!!! This is a COMPREHENSIVE Bootstrap 5  course\n**Please Note: This Bootstrap course DOES NOT INCLUDE  Loops, SASS, Maps or Modifiers or Mixins Customization. This course DOES NOT INCLUDE installing Bootstrap through NPM.\nThank you for purchasing this comprehensive Bootstrap course.  In this course, we will be able to demystify Bootstrap and understand the why behind the what in Bootstrap 5.\nI can't wait to guide you through this powerful tool that will transform your web development skills using the Bootstrap framework. If you're a beginner in Bootstrap and you are trying to get a grip of website layout development or you are an experienced developer looking to upgrade your front-end skills, this course is designed to provide you with a solid foundation and practical knowledge to build stunning, responsive websites with ease.\nAt the end of this course:\n- You will be able to design and craft a premium website with different pages using the functionality of Bootstrap framework\nWhy this course?\n- Learn how to link Bootstrap in your projects using Bootstrap CDN or locally by using the downloaded complete Bootstrap folder.\n- Customize Bootstrap classes, variables, properties with the use of CSS\n- Understand the mastery of Bootstrap's 12 column-grid system to design different website layouts\n- Learn how to use Bootstrap's Row columns and Flex design to create different website layouts\n- Learn how to use Bootstrap's responsive Stack (Horizontal/Vertical Stack) to design website layouts\n- Mastery of Bootstrap's carousel and how to customize it\n- Mastery of Bootstrap's scrollspy, accordion, collapse layouts.\n- Explore how to structure Bootstrap's alert, modal, toast, popover, tooltips.\n- Master the Bootstrap's responsive navbar, nav, pills and tabs, offcanvas, dropdown menu.\n- Apply Bootstrap's classes to structure Table, List groups, Cards, Forms\n- Master the art of using Bootstrap to structure pagination, buttons, badges, progress bar, breadcrumb\n- Use Bootstrap's classes (icons, links, float, sizing, spacing, text, bg-color, display, position, border) to style your elements quickly and efficiently\n\n\nWhy Bootstrap?\nBootstrap is the most popular front-end development framework in the world. Bootstrap can help you create a great website and get your website up and running in a short period of time. Bootstrap is very easy to get started – all you need is a good understanding of HTML and CSS.\nWith Bootstrap, you can achieve a consistent and professional-looking design across your mobile application. It offers a set of predefined styles and themes that can be easily customized to match your brand's identity. Bootstrap is created with modern web browsers in mind and it is compatible with all modern browsers such as Chrome, Firefox, Safari, Internet Explorer, etc.\nWith Bootstrap, developers can save time and effort by utilizing pre-designed components, as well as the grid system for creating responsive layouts. It also provides numerous styling options and utilities to enhance the overall appearance and functionality of websites.\nBootstrap is widely used by web developers to streamline the web development process and create consistent and visually appealing user interfaces.\nThe grid system in Bootstrap 5.* comes with a new, more flexible layout. It introduces a new gap utility and no longer relies on floats.\nThere are lot more things you can do with Bootstrap.\nYou can easily create responsive websites.\nYou can work with text utilities, shadow, opacity, border, links, background colours, etc.\nYou can quickly create multi-column layout with pre-defined classes.\nYou can quickly create different variation of navigation bar.\nEnroll now and enjoy the trip into Bootstrap 5 Framework.",
      "target_audience": [
        "This course is structured for a web design enthusiast looking to upgrade your Bootstrap skills, and for any front-end web developer who needs a solid foundation and practical knowledge to build responsive websites with Bootstrap.",
        "This course is for beginners in Bootstrap BUT you need to have a good understanding of CSS"
      ]
    },
    {
      "title": "Replacing jQuery with Vanilla JavaScript",
      "url": "https://www.udemy.com/course/not-jquery/",
      "bio": "Vanilla JS instead of an additional 30 kB from jQuery, DOM API, modern browsers, Babel, polyfills, fetch, Promise",
      "objectives": [
        "You'll get an overview of the newest JS (ES6+) and browsers API",
        "You'll learn when it's not worth using jQuery",
        "You'll see how to use the newest JavaScript in the older browsers"
      ],
      "course_content": {
        "Introduction": [
          "First words"
        ],
        "Then and now": [
          "Intro",
          "jQuery then",
          "jQuery now"
        ],
        "DOM manipulation": [
          "Intro",
          "The structure of the next lectures",
          "class - jQuery",
          "class - JavaScript",
          "Can I use this?",
          "Copying HTML elements - jQuery",
          "Copying HTML elements - JavaScript",
          "Wrapping HTML elements - jQuery",
          "Wrapping HTML elements - JavaScript",
          "Wrapping - when jQuery wins",
          "Inserting one element into another",
          "Inserting near the existing elements",
          "Removing HTML elements",
          "Replacing the elements",
          "Attribute vs. property",
          "Other attributes"
        ],
        "CSS, selectors, animations": [
          "Intro",
          "CSS - jQuery",
          "CSS - JavaScript (getter)",
          "CSS - JavaScript (setter)",
          "Dimensions",
          "CSS finished",
          "Selectors",
          "Effects",
          "Traversing"
        ],
        "Events, forms": [
          "Intro",
          "jQuery events",
          "Events examples",
          "$.ready",
          "Forms - serialize",
          "Forms - val"
        ],
        "Better building blocks - Web Components": [
          "Intro",
          "What are they?",
          "customElements",
          "GitHub case",
          "HTML Templates",
          "Shadow DOM"
        ],
        "AJAX, Deferred": [
          "Intro",
          "Browser API",
          "async, await",
          "Callbacks & Deferred objects - jQuery",
          "Promise - JavaScript"
        ],
        "All the rest from jQuery": [
          "Intro",
          "Data - jQuery",
          "Dataset - JS",
          "Queue",
          "Core",
          "Internals, Properties",
          "Miscellaneous, Utilities"
        ],
        "Cross-browser & older browsers without jQuery": [
          "Intro",
          "Support table",
          "Chromium",
          "Shims",
          "Polyfills",
          "Babel",
          "Demo application",
          "Babel configuration 1/2",
          "Babel configuration 2/2 (core-js)",
          "Babel - working example"
        ],
        "Last words": [
          "Congratulations!",
          "Bonus lecture: courses, materials"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge",
        "Basic jQuery knowledge",
        "Willingness to learn about the latest JS mechanisms"
      ],
      "description": "How about jQuery? I think all the front-end developers have heard about the library using dollar sign as its main function...\nShould we include jQuery in the new project? Is this still needed? In what cases? What were the advantages of jQuery and are they still important?\nThis course focuses on the newest JavaScript and browsers mechanisms, which can replace jQuery:\nclassList,\nquerySelector,\nforEach,\ndataset,\nURLSearchParams,\nfetch,\nPromise,\nspread operator\nIt also shows additional features and tools, which can help even together with jQuery, e.g. async/await or Animate.css.\nThere are well-known examples of the companies removing jQuery from their front-end parts. GitLab and GitHub to name a few. Moreover, the latter one switched from jQuery to Web Components, which are explained in detail in one of the course sections.\nAt the end of the course, you can find a solution for one of the biggest front-end problems - how to achieve a fully cross-browser solution and old browsers support (yes, including IE8). It's doable thanks to polyfills and Babel or TypeScript. And the example project is well-explained in the course.",
      "target_audience": [
        "Those who still uses jQuery",
        "Those who don't know how to live without jQuery",
        "Front-end developers who want to learn the latest JS mechanisms"
      ]
    },
    {
      "title": "AWS CloudFormation Master Class With YAML and JSON [2022]",
      "url": "https://www.udemy.com/course/aws-cloudformation-masterclass/",
      "bio": "This is a master class in AWS CloudFormation with YAML and JSON templates [Updated in June 2022]",
      "objectives": [
        "Thorough practical knowledge in AWS CloudFormation",
        "Hands-on exercises for every concept taught in every lecture",
        "Downloadable CloudFormation templates.",
        "Production quality templates are used to explain the concepts.",
        "Reflection of years of rich experience of the instructor."
      ],
      "course_content": {
        "Introduction": [
          "About The Course",
          "What Will You Gain",
          "Table Of Contents"
        ],
        "Infrastructure As Code": [
          "Infrastructure As Code",
          "What Is Cloudformation"
        ],
        "Introduction To Templates": [
          "Introduction To Templates",
          "Exercise: Create An EC2 Instance"
        ],
        "More About Templates": [
          "More About Templates",
          "Parameters in CloudFornation",
          "Exercise: Parameters",
          "Intrinsic Functions",
          "Mappings in CloudFormation",
          "Exercise: Mappings",
          "Conditions in CloudFormation",
          "Exercise: Conditions",
          "Metadata in CloudFormation",
          "Outputs in CloudFormation",
          "Exercise: Outputs"
        ],
        "Working With Stacks": [
          "Working With Stacks",
          "Exercise: Stack",
          "Working With Nested Stacks",
          "Exercise: Nested Stack"
        ],
        "Change Set": [
          "Change Set",
          "Exercise: ChangeSet"
        ],
        "CloudFormation Designer": [
          "CloudFormation Designer Tool",
          "Exercise: CloudFormation Designer Tool"
        ],
        "Bringing Existing Resources into CloudFormation": [
          "Bringing Existing Resources Into CloudFormation",
          "Exercise: Bringing Existing Resources Into CloudFormation"
        ],
        "Drift Detection": [
          "Drift Detection",
          "Exercise: Drift Detection"
        ],
        "Bootstrapping And Helper Scripts": [
          "CloudFormation Helper Scripts",
          "Bootstrapping in CloudFormation",
          "Exercise: Bootstrapping"
        ]
      },
      "requirements": [
        "Basic understanding of AWS"
      ],
      "description": "Welcome to the master class of AWS CloudFormation. This course offers you a thorough knowledge in CloudFormation where every important aspect has been discussed in great details. The rich and extensive experience of the instructor in CloudFormation is reflected in this course.\nAfter completing this course, you will be able to create CloudFormation templates for managing the infrastructure needs of any large organization. Moreover, you will feel extremely confident on hearing the word 'CloudFormation'.\nCracking any job interview in CloudFormation will be a cake walk for you.\n\n\nAWS CloudFormation is a service that helps you model and set up your AWS resources so that you can spend less time managing those resources and more time focusing on your applications that run in AWS. You create a template that describes all the AWS resources that you want (like Amazon EC2 instances or Amazon RDS DB instances), and CloudFormation takes care of provisioning and configuring those resources for you. You don't need to individually create and configure AWS resources and figure out what's dependent on what; CloudFormation handles that.\n\n\nReuse your CloudFormation template to create your resources in a consistent and repeatable manner. To reuse your template, describe your resources once and then provision the same resources over and over in multiple regions.",
      "target_audience": [
        "AWS Solution Architects, Developers and DevOps engineers"
      ]
    },
    {
      "title": "Tailwind CSS 4: Build 5 Web Projects with React & Tailwind",
      "url": "https://www.udemy.com/course/tailwind-css-4-build-5-complete-projects-with-react/",
      "bio": "Master Tailwind CSS 4 & React by Building 5 Real-World Projects | Learn Modern UI Design & Responsive Web Development",
      "objectives": [
        "Master Tailwind CSS 4 – Learn all the new features, improvements, and best practices for building modern, responsive UIs efficiently.",
        "Build 5 Real-World Projects – Gain hands-on experience by creating five fully functional projects, focusing on practical use cases of Tailwind CSS 4.",
        "Enhance React Skills – Strengthen your React knowledge while integrating Tailwind CSS to build dynamic and interactive user interfaces.",
        "Optimize for Performance & Accessibility – Understand how to write clean, maintainable, and optimized Tailwind CSS code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Tailwind CSS 4 Crash Course: New Features (Optional)": [
          "How to Install and use Tailwind CSS 4",
          "Installation & Setup with Vite",
          "@theme Directive",
          "@utility Directive",
          "Default Style Updates",
          "Content Detection",
          "@plugin Directive",
          "Container Queries",
          "3D Transform APIs",
          "Gradient APIs",
          "Shadows & Rings",
          "Other New Features",
          "Migrating v3 - v4"
        ],
        "Project - Authentication Forms": [
          "Project Preview",
          "Installation & Setup",
          "Building Authentication Forms"
        ],
        "Project - FAQ Accordion": [
          "Project Preview",
          "Installation & Setup",
          "Setting Up the FAQ Header & Controls",
          "Implementing Dark/Light Theme Toggle",
          "Displaying Questions & Answers",
          "Implementing Expand/Collapse Functionality",
          "Adding Local Storage Functionality"
        ],
        "Project - Website Header with Dark/Light Theme Toggle": [
          "Project Preview",
          "Installation & Setup",
          "Creating the Dark/Light Theme Toggle",
          "Designing the Banner Elements",
          "Bouncing Badges and Local Storage"
        ],
        "Project - 5-Star Rating System": [
          "Project Preview",
          "Installation & Setup",
          "Building the Rating System"
        ],
        "Project - Image Slider": [
          "Building Image Slider"
        ]
      },
      "requirements": [
        "Basic HTML & CSS Knowledge – Familiarity with HTML and CSS is helpful, but you don’t need to be an expert.",
        "Basic JavaScript Understanding – Knowing JavaScript fundamentals will make it easier to follow along, but beginners can still learn as they go.",
        "Familiarity with React (Optional) – Some experience with React is beneficial, but each project will guide you through integrating Tailwind CSS with React step by step.",
        "A Code Editor (VS Code Recommended) – You’ll need a text editor like VS Code for writing and managing your project files.",
        "Basic Tailwind CSS Knowledge Recommended – While you don’t need prior Tailwind CSS experience, having a basic understanding of utility-first CSS frameworks is beneficial."
      ],
      "description": "Tailwind CSS has completely revolutionized the way we style websites, and now with the release of Tailwind CSS 4, it’s faster, more powerful, and more efficient than ever before. If you’re looking to stay ahead of the curve and master the latest version of Tailwind, this course is exactly what you need.\nIn this hands-on course, you’ll explore and implement the newest features of Tailwind CSS 4 while building five real-world projects with React. Instead of just covering the theory, you’ll be working on practical projects that demonstrate the full potential of this brand-new version. Tailwind CSS 4 introduces significant improvements that enhance performance, simplify the development process, and offer even greater flexibility for building modern UI components. You’ll learn how to fully utilize these features to create stunning, responsive, and highly optimized web applications.\nEach project in this course has been carefully designed to showcase the power and efficiency of Tailwind CSS 4. You'll build a hero section with a dark/light mode toggle, create interactive authentication forms, implement a dynamic 5-star rating system, develop an FAQ accordion, and design a smooth slider with transitions. These projects will not only help you master Tailwind CSS 4 but also improve your React skills as you integrate the two seamlessly.\nIf you’re a front-end developer eager to stay updated with the latest CSS technologies, a React developer looking to build better UI, or simply someone who wants to create modern, responsive websites effortlessly, this course will give you everything you need. You’ll learn how to build scalable and maintainable designs using Tailwind CSS 4 while keeping your workflow efficient and your codebase clean.\nBy the end of this course, you’ll have a solid understanding of how to use Tailwind CSS 4’s newest features, how to style web applications more efficiently, and how to build sleek, professional-looking projects with minimal effort. Whether you’re a beginner or an experienced developer, this course is packed with valuable insights and practical knowledge that will help you design faster and better than ever before.\nJoin me on this exciting journey and be one of the first to master Tailwind CSS 4 while building beautiful, functional web applications. Let’s get started and bring your UI skills to the next level!",
      "target_audience": [
        "Front-End Developers Looking to Master Tailwind CSS 4 – If you're a front-end developer who wants to stay up to date with the latest Tailwind CSS 4 features and best practices, this course is perfect for you.",
        "React Developers Who Want to Build Modern UI – If you’re familiar with React and want to enhance your UI skills with Tailwind CSS 4, this course will help you build beautiful and responsive interfaces efficiently.",
        "Web Developers Seeking Practical, Hands-On Learning – This course is ideal for developers who prefer learning by building real-world projects rather than just theory. You’ll create five projects that can be used in your portfolio.",
        "Anyone Looking to Improve Their CSS Workflow – If you're tired of writing custom CSS and want a more efficient way to style web applications, this course will introduce you to the power of utility-first CSS with Tailwind."
      ]
    },
    {
      "title": "Full Stack Web and Hybrid Mobile App Development With React",
      "url": "https://www.udemy.com/course/full-stack-web-and-hybrid-mobile-app-development-with-react/",
      "bio": "React, React-Native, Spring Boot, Spring Security, Intellij, MySQL, Liquibase, Multiplatform mobile application",
      "objectives": [
        "Full Stack Web and Multiplatform Mobile App Development",
        "React And React-Native",
        "Spring Boot, Spring Security, Spring MVC Architecture"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Server Side": [
          "Prerequests For Server Side",
          "Install And Enable Lombok",
          "Server Side Source Code",
          "Spring Overview",
          "Server Side Overview",
          "Create Project with Spring Initializer",
          "Why Did We Choose Gradle? Isn't Maven most common one?",
          "Configuration",
          "Entity Diagram",
          "Hibernate Overview",
          "User Model Class",
          "Do you want to learn more about ID Generated Strategies? - Optional",
          "Product Model Class",
          "Transaction Model Class",
          "Liquibase Overview",
          "Liquibase Implementation For User",
          "Liquibase Implementation For Product And Transaction",
          "JPA Repository Overview",
          "User Repository Implementation",
          "Product And Transaction Repository Implementation",
          "User Service Implementation",
          "Product Service Implementation",
          "Transaction Service Implementation",
          "Controller Overview",
          "Rest Controller Overview",
          "User Controller Implementation",
          "Admin Controller Implementation",
          "Spring Security Overview",
          "User Details Service Implementation - Spring Security",
          "Spring Security Configuration Overview",
          "Web Security Configuration Implementation - Spring Security",
          "Json Web Token (JWT) Overview",
          "JWT Installation And Configuration",
          "JWT Provider Implementation",
          "JWT Authentication Filter Implementation",
          "How can we run Spring Boot Application?",
          "Test Server Side"
        ],
        "Client Side (Frontend) and Server Side Integration (Backend)": [
          "Integration - How can we reach to Backend on the Frontend?"
        ],
        "Client Side": [
          "Prerequests For Client Side",
          "Source Code For Client Side",
          "React Overview",
          "Client Side Overview",
          "Installation",
          "Getting Start to React Project - How React works?",
          "Configuration",
          "Create Model Classes For React",
          "Observables Overview",
          "Axios Promise Overview",
          "User Service Implementation",
          "Login Component Implementation",
          "Register Component Implementation",
          "Profile Component Implementation",
          "Home Component Implementation",
          "Detail Component Implementation",
          "Admin Service Implementation",
          "Admin Component Implementation",
          "Create User Modal Component",
          "Create Delete Modal Component",
          "NotFound And Unathorized Component Implementation",
          "React Router Implementation",
          "Guards - Overview",
          "Authentication Guard Implementation",
          "Navigation Bar For User And Admin Panel",
          "Active Tab Implementation",
          "Test It"
        ],
        "Mobile Side": [
          "Prerequests For Mobile Side",
          "Source Code For Mobile Side",
          "React Native Overview",
          "Mobile Side Overview",
          "Installation",
          "Debugging And Building",
          "Configuration And Template Pages",
          "Create React-Native Model Classes",
          "User Menu Panel",
          "Admin Menu Panel",
          "Index Stylesheet",
          "Customize Menu Content",
          "React-Native Router Implementation",
          "User Service Implementation",
          "Login Page Implementation",
          "Register Page Implementation",
          "Custom Navigation Header",
          "Home Page Implementation",
          "Product Page Implementation",
          "Detail Page Implementation",
          "Admin Service Implementation",
          "Admin Page Implementation",
          "User Page Implementation",
          "Test React-Native Application"
        ],
        "Result": [
          "Source Code For All System"
        ]
      },
      "requirements": [
        "Basic Java Knowledge",
        "Basic Javascript Knowledge"
      ],
      "description": "In this course, we will develop full stack web and multiplatform(ios, android) application. Whole development will be implemented step by step.\nWe will create a product purchase system. This sytem will include basic CRUD operations like:\nCreate product,\nUpdate product\nDelete product\nList product\nCreate User\nUpdate User\nDelete User\nList User\n...\nWe will go on with three main components on our development:\nServer Side: Spring Boot, Spring Security, MySQL, Liquibase...\nClient Side: React, User Interface (UI), Javascript, npm, nodejs...\nMobile side: React-Native, Android, IOS...\nIn this course, we will create a big project. This project will include backend, frontend and mobile-side. We will integrate all of them with rest api architecture. Spring boot will serve the rest api endpoints. Frontend I mean React will consume these endpoints and serve them from the web browsers... Mobile-side I mean React-native will consume these endpoints and serve them from the mobile applications... We will implement them one by one and step by step.\nWe will also see the similarities on front end and mobile side. Because as architecture they use similar architecture. They will use react infrastructure and nodejs...\nWe will see on both side role base operations also. So we will support the crud operations... So you will learn the basic and enough knowledge to build an application on backend, frontend and mobile side.",
      "target_audience": [
        "All developers curious about react and react-native"
      ]
    },
    {
      "title": "React Native - First Steps",
      "url": "https://www.udemy.com/course/react-native-first-steps/",
      "bio": "This course smoothly introduces you to React Native and turns you from a web developer to a web and mobile app developer",
      "objectives": [
        "React Native basics",
        "Debugging React Native apps",
        "Creating beautiful UI with material library",
        "Network requests and fetching",
        "Adding and linking custom native modules",
        "Publishing app on App Store",
        "Publishing app on Google Play Store"
      ],
      "course_content": {
        "Introduction": [
          "Course kickoff!",
          "React Native in a nutshell"
        ],
        "Setting up development environment": [
          "Choosing a text editor",
          "Installing node and npm",
          "Setting up react native",
          "Creating a react native project"
        ],
        "Hello RN!": [
          "Hello World",
          "Running on iOS [ Mac only ]",
          "Running on Android"
        ],
        "Introducing React": [
          "ReactJS overview",
          "JSX",
          "Components",
          "Props",
          "State"
        ],
        "Jokes Application": [
          "Introduction - Creating a joke application",
          "Code for this application",
          "Debugging React Native application",
          "Project structure",
          "Adding Material UI Library to enhance app look",
          "Styles",
          "Fetching jokes using public API and handling errors",
          "Enhancing UI",
          "Adding navigation to the app",
          "Creating Settings page",
          "Async Storage React Native",
          "Finishing application!"
        ],
        "Publishing": [
          "Generating android production build",
          "Generating iOS production build",
          "Where to go from here?"
        ]
      },
      "requirements": [
        "JavaScript (ES6)",
        "ReactJS is recommended, but not necessary"
      ],
      "description": "Hi! Welcome to React Native - First Steps course. This course would introduce you smoothly to React Native and you would be creating your first react native application in no time! Take this course if:\nYou want to learn React Native but have rarely worked with it\nYou want to create mobile applications that work on Android, iOS, Windows, etc. using a shared codebase.\nYou like working with JavaScript\nSome more points about this course:\nThis course is beginner focused, so please do not expect advanced stuff like creating custom native modules or exploring React Native bridge, stuff like that.\nThe course is guaranteed to cover at least 2 patch cycles of RN releases. Currently: v0.58.0 [ January 2019 Release ]\nThe course is constantly updated with new content, project, modules, etc. So that's a very large supply of updated material/content/projects for one time subscription!",
      "target_audience": [
        "ReactJS developers curious about mobile app development",
        "Developers looking to use their JavaScript skills to create truly native mobile apps",
        "Web developers who want to start creating native mobile apps"
      ]
    },
    {
      "title": "Complete Guide to Setup AWS SES Email Server with WordPress",
      "url": "https://www.udemy.com/course/complete-guide-to-setup-aws-ses-email-server-with-wordpress/",
      "bio": "Avoid WordPress Emails Going To Spam folder by using affordable Amazon SES (Simple Email Service) to send your emails.",
      "objectives": [
        "Gain knowledge about World-Class Email Service like Amazon SES",
        "Understand various reason why you do not get WordPress Emails in your Inbox",
        "Understand how Amazon SES provides highest degree of Email Deliverability",
        "Learn get started with Amazon AWS and SES service.",
        "Easily connect your WordPress with Amazon SES",
        "Learn both, Email and Domain Verification for Amazon SES.",
        "Learn AWS SES Bounce and Complaints Best Practices",
        "Learn to increase the Email Sending Limits by moving your Amazon SES Account out of the Sandbox"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of WordPress is helpful, but not required.",
        "No prior knowledge of Amazon AWS or Simple Email Service(SES) is required."
      ],
      "description": "** Updated Oct 2018 – This course covers The Complete Guide to Setup AWS SES Email Server with WordPress. Learn how to Avoid WordPress Emails Going To Spam folder by using affordable Amazon SES (Simple Email Service) to send your emails!! **\nGuaranteed, No more WordPress Emails going to Spam.\nSo your WordPress emails are going to Spam folder, even when you are using best highly paid Email Services? Are you frustrated because you need to check your spam every now and then?\nWell!! Worry not, We have the Best Cost efficient Solution to your problem. Start using Amazon SES for your WordPress Emails.\nAmazon Simple Email Service, is a cloud-based email service for your WordPress which ensures highest degree of deliverability of emails. It is a part of world-class Amazon services infrastructure which is  robust and highly reliable. Unlike other email services, you only pay for what you use. Amazon SES allows you to get all your email statistics with just few clicks.\nGetting all your WordPress Emails in Inbox is harder than you think. Your recipient's ISP or Hosting server, might identify your WordPress emails as Spam and may not deliver it to recipient's Inbox even though you have send it without any error. This is the common problem with WordPress Emails and to fix this most of our WordPress Users are using SMTP solutions. But most of the time, they end up paying high amount for few emails.\n\nBut you have a better option now, Amazon SES is perfect for Sending WordPress Emails because\n\nAmazon SES is cost-efficient, highly reliable\nAmazon SES provide best SMTP Email Solution for WordPress\nAmazon SES maintains the highly valued Sender Reputation for you.\nAmazon SES verifies your identity and makes sure that other hosting server never marks you as a spammer\nEmails send from Aamzon SES are identified as Emails originating from valid location which avoid being spammed.\nAmazon SES provides Email Sending Statistics to understand Bounce and Complaint Email Addresses\nYou can send around 10000 email for just $1*\nand many more...\nAfter the completion of this course, you will have all required skills and knowledge to\n\nQuick start amazing Email Service like Amazon SES for your WordPress.\nGet started with your Amazon AWS account to take advantage of various Amazon Services\nUse Amazon Simple Email Service (SES) 10000 email for just $1*\nCreate your own Amazon SES Account\nUse one of the best SMTP solutions for your WordPress\nTroubleshoot WordPress Email going to the Spam issue\nConfigure WordPress SMTP settings\nPerform Email and Domain Verification for Amazon SES\nConnect WordPress with Amazon SES\nUnderstand Amazon SES Best Practices to avoid Bounce and Complaint email\nIncrease your SES Email sending limits\nSend emails to unverified email ids\nMove Amazon SES account out of the Sandbox\nI appreciate that you took a moment to check out this course.\n\nI am sure you are interested to learn the new Email Sending Service for your WordPress blog or Site which ensures highest deliverability. So why wait any longer to take advantage of the world class Amazon Cloud Infrastructure for Sending WordPress Emails?\nForget your old school Email Services for Wordpress, Click on \"Take This Course\" button to join the course and have a sigh of relief because now you will never check your Spams for your WordPress Emails.\nThank You!",
      "target_audience": [
        "Anyone who wants to use Amazon Simple Email Service for WordPress",
        "Anyone Who wants more reliable Email Service for Wordpress",
        "Anyone wants to stop WordPress Emails going to spam folder",
        "Anyone who wants to stop WordPress sending spam mails to their email list or customers",
        "Anyone who wants to know how to increase the email sending limit for Amazon SES",
        "Anyone who wants to send large volume of emails with high deliverability",
        "Anyone who is looking for the most cost-efficient Email Service for WordPress emails",
        "Digital marketers who use WordPress mails for marketing"
      ]
    },
    {
      "title": "React 19 Mastery: Build Modern Web Apps with Latest Features",
      "url": "https://www.udemy.com/course/react-mastery/",
      "bio": "Learn React 19 from scratch: Hooks, API calls, state management, routing, forms, and real-world project building",
      "objectives": [
        "Build real-world web applications using React 19’s latest features and patterns",
        "Understand JSX, props, component architecture, and reusable UI patterns",
        "Use React hooks like useState, useEffect, and the new use() API for logic and data",
        "Fetch, cache, and manage API data efficiently with Axios and TanStack Query",
        "Implement routing, navigation, and dynamic pages using React Router",
        "Build responsive and modern UIs using Tailwind CSS",
        "Manage global state with React Context and shared data between components",
        "Build and validate forms using React 19 form actions and controlled inputs",
        "Handle loading, errors, conditional rendering, and async flows cleanly",
        "Deploy a fully functional e-commerce-like React app with a cart and checkout flow"
      ],
      "course_content": {
        "React Fundamentals": [
          "Introduction",
          "What is React?",
          "Creating a React App",
          "Project Structure",
          "React Components",
          "React Ecosystem"
        ],
        "Building a React App": [
          "Project setup with React 19",
          "Setting up Tailwind CSS",
          "JSX and Components",
          "Understanding Props",
          "Prop Types",
          "Intro to Hooks and State",
          "Filtering Data with State",
          "Refactoring"
        ],
        "Interacting with APIs": [
          "Fetching Data with Axios",
          "Introduction to APIs",
          "Handling the Loading State",
          "use() API",
          "TanStack Query",
          "Filtering Data through API",
          "Enhancing the Filtering Functionality",
          "Sorting",
          "Extracting an HTTP Client",
          "Custom Hooks",
          "Skeleton Loaders"
        ],
        "Routing & Navigation": [
          "Setting up React Router",
          "Navigation",
          "Dynamic Routing",
          "Page Links",
          "Invalid Routes",
          "Final Notes"
        ],
        "State Management": [
          "Introduction to State Management",
          "Creating a Context Provider",
          "Add to Cart Functionality with useContext API",
          "CSS in JS and Styled Components",
          "Building a Shopping Cart Component",
          "Updating Cart Items and Quantities",
          "Displaying Total Cart Items",
          "Persisting State in Local Storage"
        ],
        "Forms & User Input Handling": [
          "Introduction to Forms",
          "Checkout Page Details",
          "Cart Summary",
          "Checkout Form",
          "Form Actions",
          "Checkout Success Page",
          "Deployment",
          "Course Recap"
        ]
      },
      "requirements": [
        "No prior React experience is needed — we'll start from the basics and build up. Basic knowledge of HTML, CSS, and JavaScript is recommended so you can follow along comfortably. You’ll just need a computer, a modern browser, and a code editor like VS Code to get started."
      ],
      "description": "Welcome to the React 19 Mastery Course — the most up-to-date and practical guide to learning React in 2024 and beyond.\nThis course is perfect for both beginners and developers who want to sharpen their React skills by building real-world applications with the latest React 19 features. Whether you're starting from scratch or revisiting React with the new compiler and updates, this course walks you through everything step by step — without fluff.\nYou’ll start with the fundamentals of React, including JSX, components, props, and hooks. Then, you’ll dive into real data fetching with Axios, build dynamic UIs, and manage state effectively using Context API.\nWe’ll also cover the new use() hook, form actions, and React 19’s compiler optimizations, so you’re learning the most modern, production-ready patterns used by top companies today.\nYou’ll build an entire e-commerce-like app with product listing, filtering, a shopping cart, checkout flow, and form submission. Along the way, you’ll learn key skills like routing, conditional rendering, context API, and working with APIs the right way.\nBy the end of this course, you'll not only understand React 19 — you’ll have built a fully functional app and be ready to use React confidently in real-world projects.\nLet’s build together. See you inside!",
      "target_audience": [
        "Perfect for beginners who know some HTML, CSS, and JavaScript and want to dive into modern frontend development",
        "Great for self-taught developers who’ve struggled with outdated or overly theoretical React tutorials",
        "Helpful for intermediate devs looking to upgrade to the latest React 19 features like the use hook and form actions",
        "Ideal for aspiring frontend developers who want to build a strong portfolio and understand how real apps are structured"
      ]
    },
    {
      "title": "React & Redux Hero: Build secured , scalable Web App !!",
      "url": "https://www.udemy.com/course/react-redux-hero-build-secured-scalable-web-app/",
      "bio": "Learn advanced React application structuring, coding patterns, performance optimizations , authentication and security.",
      "objectives": [
        "Writing production grade frontend code",
        "Correct way of handling Authentication and Authorization on frontend",
        "Using advanced hooks and writing custom hooks in React",
        "Real world Usecases of Context API of React",
        "Improving your code structuring to make the application Scalable and Maintainable",
        "Performance handing / Debounce / Throttling / Optimistic updates / Caching",
        "Errors and edge case handling",
        "Most important: Thinking as a Senior developer"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of React will be required",
        "Code along , all instructions are step by step"
      ],
      "description": "Unlock the full potential of ReactJS and Redux with this comprehensive and hands-on course. Designed for intermediate to advanced developers, this course goes beyond the basics to equip you with the skills to build scalable, efficient, and secure React applications. We will be following a clear and organized path dealing with real-world use cases and developing solutions to handle them\nThe following are the key items that will be the point of focus in this course.\n\n\nCoding Patterns for Efficiency: Discover powerful coding patterns and techniques that streamline your development workflow. Explore the latest advancements in React, including hooks, context, and functional components, to write cleaner, more efficient code.\nPerformance Optimizations: Learn how to optimize your React applications for speed and responsiveness. Delve into performance bottlenecks, use memoization techniques and implement lazy loading to create blazing-fast user experiences.\nAuthentication Implementation: Master the implementation of user authentication in React applications. Understand the intricacies of OAuth, JWT, and session-based authentication, and learn how to integrate them seamlessly into your projects.\nSecurity Best Practices: Elevate your React applications to the highest standards of security. Explore common vulnerabilities and implement robust security measures, such as input validation, secure communication practices, and protecting against Cross-Site Scripting (XSS) and Cross-Site Request Forgery (CSRF) attacks.\n\n\nWhy Choose \"Mastering React\"?\nPractical Hands-On Projects: Apply your knowledge through hands-on projects that simulate real-world scenarios, ensuring you gain practical experience.\nExpert-Led Instruction: Benefit from the expertise of industry professionals who guide you through the intricacies of advanced React concepts and best practices.\nCareer-Ready Skills: Gain the skills and confidence to tackle complex React projects, making you stand out in the competitive field of web development.\nLifetime Access: Enjoy lifetime access to course materials, updates, and a supportive community of learners to keep your skills sharp and up-to-date.\n\n\nSample reviews of my other courses\n--- Write stuff here",
      "target_audience": [
        "Junior and Intermediate developers looking to advance their skills",
        "Developers wanting to know what to take care when writing production code",
        "Companies , who want to train developers to follow high programming standards",
        "Developers who are interested in know how to further enhance performance of their projects"
      ]
    },
    {
      "title": "SvelteKit Course: Build a Complete Netflix Clone Web Project",
      "url": "https://www.udemy.com/course/sveltekit-masterclass-build-20-complete-sveltekit-projects/",
      "bio": "Learn SvelteKit by building a Netflix clone with TypeScript, Tailwind CSS, and public APIs. A complete hands-on project!",
      "objectives": [
        "How To Build A Fully Functional Netflix Clone Web App From Scratch Using SvelteKit.",
        "Integrate The TMDb API To Fetch Real-World Movie And TV Show Data Dynamically.",
        "Recreate Netflix’s Exact User Interface Design, Including Carousels, Animations, And Layouts.",
        "Implement Core Netflix Functionalities Like Search, Genre Filtering, And Personalized Recommendations.",
        "Develop Responsive Designs That Ensure The App Works Seamlessly On All Devices, From Mobile To Desktop.",
        "Utilize TypeScript For Writing Clean, Type-Safe, And Scalable Code.",
        "Master Tailwind CSS To Create Modern, Maintainable, And Efficient Styling.",
        "Structure Your Project Code Effectively For Readability And Maintainability.",
        "Debug And Troubleshoot Issues To Create A Production-Ready Web App.",
        "Deploy The Netflix Clone To Vercel For Live Hosting And User Accessibility.",
        "Use GitHub For Version Control, Collaboration, And Showcasing Your Project Portfolio.",
        "Learn Best Practices For Working With APIs, Including Fetching, Handling, And Displaying Data Dynamically.",
        "Understand How To Create Reusable Components To Speed Up Development And Maintain Consistency.",
        "Gain Practical Experience In Building Advanced Real-World Web Applications With Modern Tools And Technologies.",
        "Enhance Your Portfolio With A Professional-Grade Project That Demonstrates Your Ability To Replicate Complex, Real-World Applications."
      ],
      "course_content": {
        "Benefits of Svelte-kit and Create Svelte-kit Project": [
          "Benefits of Svelte Kit Part - 1",
          "Overview of Svelte and Svelte Kit Part - 2",
          "Setting Up Dev Environment Create Svelte-Kit Project Part - 3"
        ],
        "Svelte Kit Component": [
          "Svelte Kit First Component Part - 4",
          "Svelte Kit Short Hands Part - 5"
        ],
        "Svelte Kit Reactivity": [
          "Svelte Kit Reactivity Part - 6",
          "Svelte Kit Reactivity With Arrays Part - 7"
        ],
        "Svelte Kit Props": [
          "Svelte Kit Props Part - 8"
        ],
        "Svelte Kit Routing": [
          "Routing Pages Part - 9",
          "Layouts Part - 10",
          "Dynamic Routes Part - 11",
          "Nested Routes Layouts Part - 12",
          "Routes Parameters Wild Card Routes Part - 13"
        ],
        "Svelte Kit Stores": [
          "Writable Stores Part - 14",
          "Derived Stores Part - 15"
        ],
        "Fetch API in Svelte Kit Server and Client Side": [
          "Using Fetch in Svelte Kit (Client Side) Part - 16",
          "Using Fetch in Svelte Kit (Server Side) Part - 17",
          "API Routes Svelte Kit Part - 18",
          "Using API Routes Svelte Kit Part - 19"
        ],
        "Forms in Svelte Kit": [
          "Forms in Svelte Kit Part - 20",
          "Form Submit Handle in Svelte Kit Part - 21",
          "Form Validations Client Side Part - 22",
          "Form Validations Third Party Libs Part - 23",
          "SSR In Svelte Kit Part - 24"
        ],
        "Svelte-kit Netflix Clone Project-1": [
          "Svelte-kit Netflix Clone Project - Source Code",
          "Netflix Clone Project - Live Demo",
          "Project Initialization Part - 1",
          "Get TMDB API Key Part - 2",
          "Setting Common Styles and Header Part - 3",
          "Header Navbar Part - 4",
          "Header Search Part - 5",
          "Header Custom Styles Part - 6",
          "Header Scroll Styles Part - 7",
          "Header Responsive Part - 8",
          "Header Responsive CSS Part - 9",
          "Custom API Wrapper Part - 10",
          "API_Testing With Custom Wrapper Part - 11",
          "Passing Data To Components Part - 12",
          "Mapping Data In Hero Section Part - 13",
          "Hero Section Design Part - 14",
          "Hero Section Final Design Part - 15",
          "Creating Types Part - 16",
          "Setting Up Additional TMDB API Part - 17",
          "Using Additional TMDB API Part - 18",
          "Mapping Additional TMDB API Data Part - 19",
          "Designing Custom Carousel Part - 20",
          "Custom Carousel Functionality Part - 21",
          "Custom Carousel Map Data Part - 22",
          "Enhance Custom Carousel Function and Card Component Design Part - 23",
          "Image Fallback Helper Design Part - 24",
          "Custom Video Player Design Part - 25",
          "Custom Video Player Implementation Part - 26",
          "Custom Video Player Custom Events Part - 27",
          "Get Trailer API Part - 28",
          "Get Trailer API Helper Part - 29",
          "Custom Player Trailer Map Part - 30",
          "Custom Player Volume Control Part - 31",
          "PopOver Card Component Design Part - 32",
          "PopOver Card Additional Buttons Part - 33",
          "PopOver Card Component Design V2 Part - 34",
          "PopOver Card Test Part - 35",
          "PopOver Card Styles Part - 36",
          "PopOver Card State Part - 37",
          "PopOver Card Positioning Part - 38",
          "PopOver Card Data Map Part - 39",
          "PopOver Card Trailer Part - 40",
          "Watch Page Part - 41",
          "Watch Page Functionality Part - 42",
          "My List Functionality Part - 43",
          "My List Page Part - 44",
          "Popover Card Bug Fix Page Part - 45",
          "Modal Component Part - 46",
          "Modal Component Structure Part - 47",
          "Modal Component Styles Part - 48",
          "Modal Component Functionality Part - 49",
          "Modal Component Data Map Part - 50",
          "Modal Component Data Map v2 Part - 51",
          "Modal Component Data Map v3 Part - 52",
          "Modal Component Custom Animations Functionalities Part - 53",
          "Modal Component State Part - 54",
          "Modal Component Fetch Movie Data Part - 55",
          "Modal Component Fetch Movie API Route Part - 56",
          "Modal Component Fetch Similar Movie API Route Part - 57",
          "Modal Component Buttons Functionality Route Part - 58",
          "Modal Mapping Similar Movies Part - 59",
          "Similar Movies Component Part - 60",
          "Similar Movies Component Styles Part - 61",
          "Search Functionality Part - 62",
          "Testing Search Functionality Part - 63",
          "Custom 404 Component Part - 64",
          "Deploy To Vercel Part - 65"
        ]
      },
      "requirements": [
        "Students Don't Need To Have Any Prior Knowledge To Take This Course; They Will Learn Everything From It."
      ],
      "description": "Welcome to the SvelteKit Course: Build a Complete Netflix Clone Web App Project, where you will learn to build a fully functional and visually identical Netflix clone using modern tools and frameworks like SvelteKit, TypeScript, and Tailwind CSS. This course offers hands-on experience, guiding you through the process of creating a Netflix clone that replicates the original app’s design, features, and responsiveness.\nWe’ll leverage the TMDb (The Movie Database) API to power the application with real-world movie and TV show data. This course is perfect for anyone looking to learn API integration, responsive design, and deployment strategies while working on a real-world project.\n\n\nKey Features of the Netflix Clone Project:\nTMDb API Integration: Use the TMDb API to fetch and display trending movies, TV shows, and genres in real time.\nNetflix UI Recreation: Rebuild Netflix’s user interface with the exact same design, layouts, and animations.\nResponsive Design: Create a Netflix clone that looks and works seamlessly across all devices, from mobile to desktop.\nCore Functionality: Implement essential features like search, carousels, user-specific recommendations, and content previews.\nModern Tech Stack: Utilize SvelteKit, TypeScript, and Tailwind CSS for clean, maintainable, and scalable code.\nWhat You’ll Learn:\nBest practices for writing high-quality code in TypeScript.\nHow to deploy your Netflix clone project to Vercel for live hosting.\nVersion control using GitHub to manage and showcase your project.\n\n\nBy the end of this course, you will have a professional-grade Netflix clone web app in your portfolio, showcasing your ability to build advanced, real-world projects with cutting-edge web technologies. Enroll now and take your skills to the next level!",
      "target_audience": [
        "Aspiring Web Developers Who Want To Build Real-World Projects Using Modern Technologies Like SvelteKit And TypeScript.",
        "Frontend Developers Eager To Recreate Netflix’s Exact Design And User Experience.",
        "Frontend Developers Looking To Enhance Their Skills With Advanced Styling Using Tailwind CSS.",
        "Beginners Interested In Learning How To Build A Complete Web Application From Start To Finish.",
        "Students And Professionals Seeking To Expand Their Portfolios With A High-Quality Netflix Clone Web App.",
        "API Integration Learners Who Want Hands-On Experience Working With Real Data From TMDb API.",
        "Freelancers Who Wish To Master Responsive Web Design For Any Device.",
        "Developers Interested In Learning How To Host Applications On Platforms Like Vercel.",
        "GitHub Users Who Want To Practice Version Control And Code Deployment For Collaborative Projects.",
        "Technology Enthusiasts Excited About Exploring The Potential Of SvelteKit For Building Scalable Web Applications."
      ]
    },
    {
      "title": "Learn Laravel with a case study (Feb 2024)",
      "url": "https://www.udemy.com/course/learn-laravel-with-a-case-study/",
      "bio": "Mastering Laravel: Build an Employee Star Management System with RESTful APIs, Eloquent Models, and Form Validation",
      "objectives": [
        "Develop Proficiency in Laravel Fundamentals",
        "Build RESTful APIs in Laravel",
        "Master Eloquent ORM for Database Interaction",
        "Implement Form Handling and Validation",
        "Create a Complete Employee Star Management System"
      ],
      "course_content": {
        "Lesson 1": [
          "Introduction to Laravel Framework",
          "Practice 1-1: Installing and Configuring XAMPP, Composer, Vscode",
          "Practice 1-2: Creating Simple Laravel Application",
          "Practice of 1-3: Creating Laravel Application using Controller and Blade templat",
          "Lesson 1: Introduction to Laravel"
        ],
        "Lesson 2": [
          "Form Handling and Validation",
          "Practice 2-1: Creating Forms and validating the form.",
          "Practice 2-2: Working with forms to make it interactive",
          "Lesson 2: Form Handling and Validation"
        ],
        "Lesson 3": [
          "RESTful APIs in Laravel",
          "Practice 3-1: Sending Emails from Laravel Application",
          "Practice 3-2: Registration, Email Verification, Forget and Reset Password",
          "Practice 3-3: Implementing a RESTful API for managing tasks",
          "Lesson 3: RESTful APIs in Laravel"
        ],
        "Lesson 4": [
          "Performing Database Operations using Eloquent models",
          "Practice 4-1: Creating a Database and Create migrations to create database table",
          "Practice 4-2: Perform CRUD operations using Eloquent models",
          "Lesson 4: Performing Database Operations using Eloquent models"
        ],
        "Lesson 5": [
          "Case study - Employee star management system",
          "Practice 5-1: Case study - Employee star management system",
          "Admin Module",
          "Team Incharge Module",
          "Team Member Module"
        ]
      },
      "requirements": [
        "Basic Understanding of PHP",
        "Web Development Basics",
        "Basic SQL Knowledge",
        "Composer Installation & A Local Development Environment"
      ],
      "description": "Unlock the full potential of Laravel with our comprehensive Udemy course! Delve into the intricacies of web development as you construct an Employee Star Management System using Laravel's state-of-the-art functionalities. Whether you're a seasoned developer or a novice, this course offers immersive learning in RESTful APIs, Eloquent models, and seamless form validation. Explore the elegance of Laravel's MVC architecture and effortlessly execute database operations. With clear, step-by-step instructions, you'll craft a tangible project that highlights your expertise.\nBut that's not all! Gain insights into advanced topics such as authentication, authorization, and deploying your application to production servers. Dive deep into Laravel's ecosystem, leveraging its powerful tools and libraries to build robust, scalable applications with ease. Plus, join a vibrant community of learners and industry professionals, exchanging ideas and collaborating on exciting projects.\nTailored for web developers, PHP enthusiasts, and budding programmers, this course seamlessly merges theory with practical application, empowering you to create cutting-edge, scalable applications. Elevate your proficiency, streamline your coding workflow, and embark on a transformative journey to Laravel mastery. Enroll now and unlock the keys to advanced web development!\n\n\nWhat are you waiting for?\n\n\nEvery day is a missed opportunity for learning.\n\n\nEnroll now and kickstart your journey to success!!!\n\n\nHurry up!!!",
      "target_audience": [
        "Web Developers and Programmers",
        "PHP Developers Interested in Laravel",
        "Intermediate Laravel Developers",
        "Students and Aspiring Developers"
      ]
    },
    {
      "title": "Full Stack Airline Booking App: Java, Spring Boot & React",
      "url": "https://www.udemy.com/course/full-stack-airline-booking-app-java-spring-boot-react/",
      "bio": "Go full-stack! Create an airline booking app with Spring Boot & React frontend, covering user auth, search, and booking.",
      "objectives": [
        "Develop a Robust Spring Boot RESTful API: Students will learn to design, implement, and secure a production-ready backend using Java and Spring Boot",
        "Build a Dynamic React Single Page Application (SPA): Students will gain expertise in building a modern, interactive user interface with React effectively",
        "Implement Comprehensive Security & Authentication: Students will master advanced security concepts by integrating Spring Security and JWT (JSON Web Tokens)",
        "Integrate Advanced Features for Real-World Apps: Students will learn to incorporate essential functionalities such as email notifications",
        "Manage Relational Databases: Students will acquire practical skills in setting up and interacting with both MySQL and PostgreSQL databases to store data"
      ],
      "course_content": {
        "Introduction": [
          "Project Overview",
          "Design Overview"
        ],
        "Setup Project": [
          "Create Project",
          "Add External Dependencies",
          "Connect To Database",
          "Packages"
        ],
        "Configs & Enums": [
          "Model Mapper Config",
          "Enums"
        ],
        "Models & DTO's": [
          "Role Entity & DTO",
          "User Entity & DTO",
          "Airport Entity & DTO",
          "Flight Entity & DTO",
          "Booking Entity & DTO",
          "Passengers Entity & DTO",
          "Email Entity & DTO",
          "Registration & Login DTO",
          "Create Flight DTO",
          "Booking Req & Response DTO"
        ],
        "Repositories": [
          "Role & User Repo",
          "Airport & Flight Repo",
          "Booking & Passengers Repo"
        ],
        "Exceptions": [
          "Exceptions & Advisor",
          "Custom Auth Exceptions"
        ],
        "Security": [
          "Auth User",
          "Custom User Details",
          "JWT(Token) Utils Class",
          "Auth Filter",
          "Security Filter",
          "Cors Config"
        ],
        "Email": [
          "Email Setup",
          "Send Email Testing",
          "Email Custom Templates",
          "Email Notification Service"
        ],
        "Role Module (Service, Controller, Test)": [
          "Role Service",
          "Role Controller",
          "Role API tests"
        ],
        "Users Module(Service, Controller, Tests)": [
          "Auth Service",
          "Auth Controller",
          "Auth API Test",
          "Users Service",
          "Users Controller",
          "Users API tests"
        ]
      },
      "requirements": [
        "Foundational Java Knowledge",
        "Basic JavaScript Knowledge",
        "HTML & CSS Basics",
        "You'll need an IDE like IntelliJ IDEA (Community Edition is sufficient) and VS Code",
        "Have MySQL or PostgreSQL setup (local installation or cloud-based)"
      ],
      "description": "This isn't just another tutorial; it's a deep dive into building an enterprise-grade application with all the bells and whistles. We'll meticulously craft both the backend with Spring Boot and the dynamic single-page application (SPA) frontend with React, ensuring seamless communication and a rich user experience. From user authentication and authorization to complex booking flows and role-based access, you'll gain hands-on expertise with cutting-edge technologies.\nHere's what you will master in this course:\nRobust Backend Development with Java & Spring Boot:\nRESTful API Design & Implementation: Create clean, efficient, and well-structured APIs for handling flights, bookings, users, and more.\nDatabase Management: Seamlessly integrate and interact with MySQL and PostgreSQL databases, mastering data persistence and relationships.\nSpring Security & JWT: Implement advanced security features using Spring Security for authentication and authorization, securing your APIs with JSON Web Tokens (JWT) for stateless, secure communication.\nUser & Role Management: Build robust systems for handling different user types: Customer, Admin, and Pilot roles, each with specific permissions and access levels.\nEmail Communication: Integrate JavaMailSender to send automated notifications, including custom email templates for booking confirmations, password resets, and more.\nDynamic Frontend Development with React:\nSingle Page Application (SPA) Architecture: Learn to build a highly responsive and interactive user interface using React.\nState Management: Effectively manage complex application state, ensuring a smooth user experience as data flows through the app.\nAPI Integration: Connect your React frontend to the Spring Boot backend, making asynchronous requests and handling responses efficiently.\nComponent-Based Design: Develop reusable and modular React components for a scalable and maintainable codebase.\nComprehensive UI Features: Implement essential functionalities for searching flights, selecting seats, managing bookings, and user profiles.\nCore Application Features You Will Build:\nUser Registration & Login (with JWT authentication)\nRole-based Authorization (Customer, Admin, Pilot)\nFlight Search & Filtering (with various criteria)\nSeat Selection & Reservation\nBooking Creation & Management\nUser Profile Management\nAdmin Dashboards for flight and user management\nPilot-specific functionalities\nBeyond the Code:\nGain a detailed explanation of architectural patterns and best practices for full-stack development.\nUnderstand the entire development lifecycle from backend API creation to frontend UI implementation and data flow.\nLearn how to structure your projects for scalability, maintainability, and future growth.\nWhether you're an aspiring full-stack developer looking to build your first major project, a backend developer wanting to learn modern frontend, or a frontend developer eager to dive into robust backend systems, this course provides the practical, hands-on experience you need. Enroll now and start building your impressive Airline Booking App!",
      "target_audience": [
        "Aspiring Full-Stack Developers",
        "Backend Java Developers",
        "Computer Science Students & Graduates",
        "Developers Aiming for Enterprise-Level Projects",
        "Frontend React Developers"
      ]
    },
    {
      "title": "Master Front End Web Development-Build 3 Portfolio Projects",
      "url": "https://www.udemy.com/course/master-front-end-web-development-build-3-portfolio-projects/",
      "bio": "Build 3 Different Portfolio's in Plain HTML-CSS , React , Tailwind CSS",
      "objectives": [
        "Writing CSS in Plain HTML  , React , Tailwind CSS",
        "Advantages of Tailwind CSS over Pure CSS",
        "CSS Colours , Heights , Widths , Sizes , Flexboxes and Alignments , Positions (Static , Relative , Absolute) , Keyframes and Animations",
        "Bootstrap and Overriding bootstrap classes",
        "Inline styling and External Styling",
        "Resources and Deployment for 3 Projects"
      ],
      "course_content": {
        "Promo & Resourses": [
          "Introduction"
        ],
        "Portfolio with HTML & CSS": [
          "Portfolio 1 - Promo",
          "Project Setup",
          "Header Part - 1",
          "Header Part - 2",
          "Intro Part - 1",
          "Intro Part - 2",
          "Intro Part - 3",
          "Services Part - 1",
          "Services Pat - 2",
          "Skills",
          "Experience",
          "Projects Part - 1",
          "Projects - Part 2",
          "Projects Part - 3",
          "Contact Form",
          "Footer",
          "Hyperlinks for menus",
          "Deployment"
        ],
        "Portfolio with React - Part 1": [
          "React App Setup",
          "Routing and Folder Structure",
          "Intro Section - 1",
          "Intro Section - 2",
          "Header position and Menu",
          "Header styling",
          "Header responsiveness",
          "Image courosel - 1",
          "Image courosel - 2",
          "JS Section",
          "Techstack",
          "Who I am I"
        ],
        "Portfolio with React Part - 2": [
          "Projects Intro",
          "Projects List - 1",
          "Projects List -2",
          "Projects List - 3",
          "Courses Intro - 1",
          "Courses Intro - 2",
          "Why choose us - 1",
          "Why choose us - 2",
          "Courses List",
          "Contact Page - 1",
          "Contact Page - 2",
          "Footer Part - 1",
          "Footer Part - 2",
          "Adding animations",
          "CSS Fixes",
          "Deployment"
        ],
        "Tailwind Basics": [
          "Tailwind Demo",
          "Colors",
          "Heights and Widths",
          "Spaces",
          "Buttons and Borders",
          "Flexboxes",
          "Grids and Responsiveness"
        ],
        "Portfolio with Tailwind Part - 1": [
          "Tailwind Config",
          "Project Folder Structure",
          "Layout",
          "Navbar - 1",
          "Navbar - 2",
          "Navbar - 3",
          "Home page intro - 1",
          "Homepage intro - 2",
          "Technologies Part - 1",
          "Technologies Part - 2",
          "JS Buff - 1",
          "JS Buff - 2",
          "Dev Stack",
          "Dev Info Blob"
        ],
        "Portfolio with React and Tailwind - 2": [
          "Projects Intro",
          "Projects Static Data",
          "Show Projects",
          "Hover Effect",
          "Courses Intro",
          "Courses Representation",
          "Contact page intro",
          "Contact form",
          "Footer part - 1",
          "Footer part - 2",
          "Animations and bug fixes",
          "Deployment to netlify"
        ]
      },
      "requirements": [
        "Basic Javascript"
      ],
      "description": "Hi Guys ,\nWelcome to the course  ' Master Front End Web Development-Build 3 Portfolio Projects '\nIn this course you will learn how to build and deploy your own portfolio with 3 different tech stacks. The styling and theme will be completely different in every project.\nWe will use the following tech stacks in our 3 projects.\n1. HTML , CSS , Bootstrap\n2.React and Pure CSS\n3.React and Tailwind CSS\nThis is the one and only course to master your CSS skills in different platforms. Because the css will be same behind the scenes but in actual implementation it will be difficult.\n\n\nWe will learn the following the following topics by the end of the course.\n1 . Writing CSS in Plain HTML  , React , Tailwind CSS\n2. Advantages of Tailwind CSS over Pure CSS\n3. CSS Colours , Heights , Widths , Sizes\n4. Flexboxes and Alignments\n5. Bootstrap and Overriding bootstrap classes\n6. Inline styling and External Styling\n7. Positions (Static , Relative , Absolute)\n8. Keyframes and Animations\n9. Single page applications and Components\n10 . States and Props\n11 . Tailwind Installation and Configuration\n12 . Working with tailwind css and pure css simultatniously\n12 . Deployment to netlify\n\n\nHTML\nThe HyperText Markup Language, or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets and scripting languages such as JavaScript.\nCSS\nCascading Style Sheets is a style sheet language used for describing the presentation of a document written in a markup language such as HTML. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.\nBootstrap\nBootstrap is a free and open-source CSS framework directed at responsive, mobile-first front-end web development. It contains CSS and JavaScript-based design templates for typography, forms, buttons, navigation, and other interface components.",
      "target_audience": [
        "Front End Developers",
        "React Developers",
        "UI Developers",
        "Students who what to master front end web development"
      ]
    },
    {
      "title": "MEAN Stack Angular Material Node.js Angular App [2022]",
      "url": "https://www.udemy.com/course/mean-fullstack-with-angular-material/",
      "bio": "Develop a Fullstack application using Angular, Node.js and Angular Material UI Library",
      "objectives": [
        "Create an Web Application of type eCommerce Using the MEAN Stack and Angular Material",
        "Choose between Backend or Frontend development or do Both (Fullstack) thanks to the course resources that wiil be available",
        "Learn Backend development with Node js",
        "Learn Mongoose Commands and Queries to be able to communicate with your Database",
        "Learn to Implement Authentication based on JWT",
        "Learn how to encrypt passwords using Bcrypt",
        "Learn File Upload of images using Multer",
        "Animate your components to make them move on your page",
        "Learn how to integrate Angular Material components to your API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is this course meant for and What is Angular Material ?",
          "Softwares needed"
        ],
        "Backend : Getting started": [
          "Our first route",
          "Environment Variables",
          "Morgan and introduction to Postman",
          "npm Packages",
          "Connection to MongoDB Atlas",
          "Model Creation",
          "app.js refactoring",
          "CORS policy management"
        ],
        "Backend : Models and Categories": [
          "Models creation",
          "Categories methods (part 1)",
          "Category methods (part 2)"
        ],
        "Backend : Image upload and Items management": [
          "Image Upload and Items management",
          "Items PUT method",
          "Items delete method"
        ],
        "Backend : Users and Cart": [
          "User GET routes",
          "Password encryption and POST method for users",
          "Users PUT method",
          "Login route and token creation",
          "JWT-Token block (securing our backend)",
          "Creating a new Cart (POST method)",
          "Carts management",
          "A few more features before moving on",
          "Resources of the Backend"
        ],
        "Frontend : Project creation and Categories": [
          "Project creation and first components",
          "Category Model and Service",
          "Category List (part 1)",
          "Category List (part 2)",
          "Category Form (part 1)",
          "Category Form (part 2)"
        ],
        "Frontend : Items": [
          "Items model and Service",
          "Displaying items in the shop",
          "Dropdown Category Filter",
          "Search Bar creation using Pipe",
          "Item List Table",
          "Item deletion",
          "Items form",
          "Items form (editing and creating items)",
          "Details of a single item",
          "Creating an animation"
        ],
        "Frontend : Users": [
          "User model and service",
          "Quick correction video",
          "Token localStorage",
          "Login Form",
          "Creating animations",
          "Login with Jwt Token",
          "Signing up to the app as a non-admin user",
          "Interceptor Configuration",
          "Guard Service",
          "User Service",
          "User List Management",
          "User Deletion",
          "User Form (part 1)",
          "User Form (part 2)"
        ],
        "Frontend : Cart": [
          "Cart Model and Service",
          "Adding Items to Cart",
          "Creating our Cart Component (part 1)",
          "Creating our Cart (part 2)"
        ],
        "Authorization": [
          "Customizing the Header",
          "Quick changes"
        ]
      },
      "requirements": [
        "You are expected to know the basics of Javascrip and to know basic angular terminology (such as what is a component, a service...)"
      ],
      "description": "Build a fullsatck MEAN e-commerce Application. But what is a MEAN Stack ?\nWell MEAN stands for : MongoDB, Express, Angular and Node js. To sum up, the MEAN stack is a connected software that we will create coded in Javascript and more precisely with Angular as a frontend framework and Node js as a backend framework.\nYou will learn about file upload, angular pipes for filtering data, integrating angular material components to your api, communicating with a database through mongoose, and much more ! This course covers in detail every aspect of creating a backend with Node js. It also teaches you how to test your routes by using a mock api software named Postman. Further more, you are to discover everything there is to know about a frontend coded with Angular.\nAbout the UI Library you will be using in this course : Angular material is a library created by google in 2014 and still in use with many updates until today. I had the opportunity to use it in my professional career. It contains all sorts of components from loading spinners, to modal or pop-ups, even snackbars. This course targets developers from different levels, from beginners to advanced.\nYou are expected to know the very basic terms of Javascript, Angular and Node js such as \"Services\", \"Components\", \"npm packages\". But if you are not familiar with these terms you can learn them on the go.",
      "target_audience": [
        "This is a MEAN Stack course",
        ". But what does MEAN Actually stand for ? It is an acronym that means : MongoDB, Express, Angular and Node js.",
        "So to sum up, a MEAN Stack is a free and openSource software coded in Javascript with its framework : Angular. We will be",
        "In this course you will learn how to implement :",
        "Angular material components",
        "Password encryption to protect the users of your App",
        "Jwt-Tokens",
        "File uploads (images)",
        "Filtering data using Angular Pipes",
        "Creating http request to the server",
        "Animating images in your components",
        "And much more...",
        "You will learn how to configure a development environment. By the time you complete this course you will have assimilated all there is to know about backend programming with Node js and about frontend development with Angular. You will also have learnt how to communicate with your database using mongoose commands."
      ]
    },
    {
      "title": "HTML & CSS Ultimate Course - Build 10 Websites",
      "url": "https://www.udemy.com/course/html-css-ultimate-course-build-10-websites/",
      "bio": "Build and coding amazing website. Convert any design into HTML & CSS.",
      "objectives": [
        "Code HTML",
        "Code CSS",
        "Develop any website in HTML & CSS",
        "Convert PSD into HTML & CSS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is HTML ?",
          "Choosing Your Code Editor",
          "Course Files"
        ],
        "HTML Basics": [
          "Basic Structure",
          "Comment Tag",
          "Div Tag",
          "How To Type Clean Code",
          "Section Tag",
          "Heading Tags",
          "Span Tag",
          "Image Tag",
          "Alt Tag",
          "Anchor Tag",
          "How To Link To Images",
          "How To Link To Text",
          "Header & Footer Tags",
          "Article & Aside Tags",
          "Nav Tag",
          "Unordered List",
          "Ordered List",
          "Horizontal Line Tag",
          "Break Tag",
          "Center Tag",
          "Tables"
        ],
        "CSS Basics": [
          "Inline CSS",
          "Internal CSS",
          "External CSS",
          "How To Target HTML Tags",
          "Applying Colors",
          "Font Size",
          "Line Height",
          "Font Weight",
          "Font Family",
          "Font Color",
          "Hover Links",
          "Hover Images",
          "Working With Images Using CSS",
          "Borders",
          "Target Multiple Tags",
          "CSS Floats Part 1",
          "CSS Floats Part 2",
          "Using Classes",
          "Using Id's",
          "Forms",
          "Using Fonts In Your Websites"
        ],
        "Coding Random Stuff": [
          "Coding A Simple Header",
          "Coding A Simple Billboard",
          "Coding A Simple Content Area",
          "Coding A Simple Footer"
        ],
        "Coding & Styling Website 1": [
          "Project Introduction",
          "Coding Header",
          "Coding Billboard",
          "Coding Content Section",
          "Coding Footer Section",
          "Two More Pages Added",
          "Coding About Page",
          "Coding Contact Page Part 1",
          "Coding Contact Page Part 2"
        ],
        "Coding & Styling Website 2": [
          "Introduction",
          "Coding Header Part 1",
          "Coding Header Part 2",
          "Coding Billboard",
          "Coding 3 Boxes",
          "Coding Footer Part 1",
          "Coding Footer Part 2",
          "Coding Lessons Page - Introduction",
          "Coding Lessons Page Part 1",
          "Coding Lessons Page Part 2",
          "Coding Become A Instructor Page - Part 1",
          "Coding Become A Instructor Page - Part 2",
          "Coding Become A Instructor Page - Part 3",
          "Coding Become A Instructor Page - Part 4",
          "Coding Contact Page - Part 1",
          "Coding Contact Page - Part 2",
          "Coding Contact Page - Part 3",
          "Coding Contact Page -- Part 4",
          "Coding Contact Page - Part 5",
          "Coding Contact Page - Part 6",
          "Coding Contact Page - Part 7"
        ]
      },
      "requirements": [
        "Basics of computer",
        "How to operate browser"
      ],
      "description": "The Ultimate HTML & CSS Course: Build 10 Websites\nLast Updated: 10/11/2016\nThis course covers HTML & CSS in details. First we will learn the basics of HTML & CSS and then we will be coding a simple website and different parts of the website to really understand the website structure.\nThis course is divided into several sections.\nHTML Basics\nIn this section we will learn all about HTML tags.\nCSS Basics\nIn this section we will learn all about CSS.\nCoding Random stuff\nIn this section we will be coding different sections of the website to really understand how website should be code.\nCoding & styling website 1\nIn this section we will be code and styling our first website.\nCoding & styling website 2\nIn this section we will be coding and styling our second website.\nCoding & styling website 3\nIn this section we will be coding and styling our third website.\nCoding & styling website 4\nIn this section we will be coding our styling our fourth website.\nCoding & styling website 5\nIn this section we will be coding and styling our fifth website.\nCoding & styling website 6\nIn this section we will be coding and styling our sixth website.\nCoding & styling website 7\nIn this section we will be coding and styling our seventh website.\nCoding & styling website 8\nIn this section we will be coding and styling our eighth website.\nCoding & styling website 9\nIn this section we will be coding and styling our ninth website.\nCoding & styling website 10\nIn this section we will be coding and styling our tenth website\n\n\nAt the end of this course :\nyou'll be able to code and style any kind of website you can see on the web.\nYou can convert any design file into HTML & CSS.\nYou can convert PSD into HTML & CSS in no time.\nYou will be very comfortable writing HTML & CSS.",
      "target_audience": [
        "Beginners or mid level programmers",
        "New Starters",
        "Web Designers"
      ]
    },
    {
      "title": "ASP.NET Core 9 Ultimate Guide",
      "url": "https://www.udemy.com/course/new-aspnet-core-8-complete-course/",
      "bio": "Develop real-world Task Management Application in ASP.NET Core WebApi, Clean Architecture, EF Core and JWT Security",
      "objectives": [
        "New Features of .NET Core 8",
        "Learn to Build Restful APIs (Controller and Minimal Based API's)",
        "The Essentials of a DotNet Core App",
        "Software Architectures (Clean Architecture)",
        "Rich Domain Models for Entities (EF)",
        "Authentication and Authorization with JWT and Policy Based Authorization with Authorization requirements with the new IAuthorizationRequirementData",
        "Improved and better Error handling",
        "Generic Repository Pattern and Unit of Work (Separated interface pattern)",
        "Better Performance and Best Security Practices",
        "Guard Clauses (Early Error Detection)",
        "Containerization with Docker",
        "Redis caching",
        "Background Services"
      ],
      "course_content": {
        "Introduction": [
          "About ASP.NET Core and .NET History",
          ".NET 8 Download"
        ],
        "What's new in ASP.NET Core 9": [
          "Pushed Authorization Requests",
          "OpenAPI",
          "Hybrid Caching",
          "Miscellaneous"
        ],
        "ASP.NET Core 8.0 Features": [
          "Minimal APIs (New features incl)",
          "Form Bindings",
          "Generic Attributes",
          "IExceptionHandler",
          "JSON Serialization of IAsyncEnumerable<T>",
          "IAuthorizationRequirementData",
          "Redis Output Caching"
        ],
        "The Essentials": [
          "The Program.cs Class",
          "The .NET Core Host",
          "Middlewares",
          "Configuration",
          "Options",
          "Environments",
          "Dependency Injection (Singleton, Scoped, Transient)",
          "Error Handling",
          "Logging",
          "The New Guard Clauses"
        ],
        "Software Architecture": [
          "Overview of Software Architectures"
        ],
        "The Domain Layer (The Core)": [
          "Structure of the Domain Layer",
          "Country Entity",
          "The TeamLead Entity",
          "The TeamMember Entity",
          "The Project Entity",
          "The ProjectTask Entity",
          "The Todo Entity",
          "The Notification Entity",
          "The IGenericRepository<TEntity> Interface",
          "IUnitOfWork"
        ],
        "The Infrastructure Layer": [
          "Entity Framework Core DbContext and Configurations (Part 1)",
          "Entity Framework Core DbContext and Configurations (Part 2)",
          "Entity Framework Core DbContext and Configurations (Part 3)",
          "Seeding the Database",
          "The Repository Pattern and UnitOfWork"
        ],
        "The Application Layer (ASP.NET Core Web API Project)": [
          "Configuring the Database and Applying Migrations",
          "Country Controller",
          "Notification Controller",
          "TeamLead Controller",
          "TeamMember Controller",
          "Applying Migrations for Modified Entities",
          "ViewModels and Dto’s with C# Records",
          "Swagger",
          "Routing (Attribute based)",
          "Applying Global Error Handling",
          "Creating a Custom Log class",
          "Integrating the Log BackgroundService",
          "Cursor based Pagination (Better performance over Skip and Take)",
          "Health checks (Basic and Database Health checks)"
        ],
        "Security": [
          "Securing the APIs with JWT authentication",
          "Policy Based and Swagger Authorization",
          "Data Protection APIs",
          "CSRF",
          "XSS",
          "Redirection Attacks",
          "CORS"
        ],
        "The Razor Pages Application (UI)": [
          "Razor Pages Intro",
          "Consuming the Restful Service with IHttpClientFactory",
          "The Register and Login Page",
          "The Structure of the Razor Pages Project",
          "Project and Project Task",
          "Assigning Project and Task",
          "TeamMember Project and Task",
          "Checkout my other course on NextJs, React and Typescript for building web apps."
        ]
      },
      "requirements": [
        "Some Knowledge in C#",
        "Some knowledge in HTML (Web Designing)",
        "Some Experience with Entity Framework",
        "Visual Studio 2022 or Visual Studio Code"
      ],
      "description": "INTRODUCTION\nAre you ready to take your web development skills to the next level? Dive into the world of modern web application development with our comprehensive course on ASP.NET Core Web API and Clean Architecture. This hands-on course is designed to equip you with the knowledge and skills needed to build robust, maintainable, and scalable web APIs using the latest technologies and best practices.\n\nCOURSE HIGHLIGHTS\n1. Introduction to ASP.NET Core: Begin by understanding the fundamentals of ASP.NET Core, its advantages, and the history and also the new features of ASP.NET Core\n\n\n2. Setting Up Your Development Environment: Get your development environment configured for ASP.NET Core development, including installing the necessary tools and libraries.\n\n\n3. The Essentials: Explore the essentials of building web APIs with ASP.NET Core, including routing, controllers, actions, and model binding.\n\n\n4. Data Access with Entity Framework Core: Dive into data access using Entity Framework Core, and discover how to interact with databases efficiently while maintaining a clean separation of concerns and using a rich domain model.\n\n\n6. Implementing Clean Architecture Layers: Learn how to structure your application using the Clean Architecture approach, with clear boundaries between presentation, application, domain, and data access layers.\n\n\n7. Authentication and Authorization: Secure your API using authentication and authorization techniques, including JWT (JSON Web Tokens), and role and policy based access control.\n\n\n9. Advanced Topics: Delve into advanced topics such implementing caching, background services, optimizing performance, and handling exceptions gracefully.\n\n\nBy the end of this course, you'll have the skills and confidence to create high-quality ASP.NET Core Web APIs using Clean Architecture, making you a valuable asset to any development team. Whether you're a beginner looking to start your web development journey or an experienced developer seeking to stay up-to-date with the latest industry practices, this course will empower you to build efficient and maintainable web APIs.\n\n\nJoin us on this exciting journey towards becoming a master of ASP.NET Core Web API and Clean Architecture!\n\n\nPREREQUISITES:\n- Basic knowledge of C# programming\n- Familiarity with HTML (Web Designing)\n- Familiarity with web development concepts (HTML, HTTP, REST)\n\n\nEnroll now and embark on your path to becoming a proficient New Generation Software Developer developer with a solid foundation in Clean Architecture and ASP.NET Core Web API .",
      "target_audience": [
        "Individuals or Professionals looking to learn .NET Core and its wonderful features",
        "People Looking to know some architecture skills",
        "For beginners and professionals seeking to further or learn .NET Core"
      ]
    },
    {
      "title": "JavaScript Exercise - Tank Shooter Game from Scratch",
      "url": "https://www.udemy.com/course/javascript-course-game/",
      "bio": "Build a JavaScript Game from scratch using only JavaScript no libraries no canvas - DOM manipulation Practice exercise",
      "objectives": [
        "Apply JavaScript and move elements within a page using JavaScript",
        "Run animations within JavaScript",
        "Create elements within the DOM",
        "Manipulate HTML elements using JavaScript"
      ],
      "course_content": {
        "Introduction to building a game with JavaScript": [
          "Introduction to Game Play and what you can expect from the course",
          "Web development environment setup",
          "HTML CSS page Setup",
          "Add Style and Elements HTML",
          "HTML source code",
          "CSS source Code",
          "JavaScript Start the Game",
          "Play the Game JavaScript",
          "Create a Tank CSS",
          "JavaScript Math CSS transform explained",
          "Move along with Mouse",
          "JavaScript Move Turret",
          "Source Code",
          "Shooter Bullets Create Elements JavaScript",
          "Remove elements from document JavaScript",
          "Source Code",
          "Setup Bad Guys JavaScript",
          "Source Code",
          "Moving Elements JavaScript Game",
          "Source Code",
          "JavaScript Element Collision detection",
          "Detect Collision with Player and Enemy",
          "Source Code",
          "Update Stats Dashboard values Element manipulation",
          "Game Over Function JavaScript",
          "Source Code",
          "Color the elements randomly JavaScript",
          "Blast the Bad Guys JavaScript Collision detection between two elements",
          "Final Game Tweaks and bug fixes",
          "Source Code Game Review",
          "Final JavaScript Source",
          "Source Code and Resources"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Learning Resource Collection"
        ]
      },
      "requirements": [
        "Fundamental JavaScript concepts",
        "Access to computer",
        "Use of editor to write code",
        "HTML and CSS knowledge"
      ],
      "description": "Practice and learn more about JavaScript while building a fun interactive tank shooting game from scratch.  Prefect course for beginners to learn JavaScript!!! Step by step learning with all steps included. No libraries, no shortcuts just learning JavaScript!\nLearn how you can use JavaScript to create, manipulate and make interactive HTML page elements.  Using JavaScript scripting you can create a fully interactive dynamic game from scratch.  Source code is included to get you started quickly.\n\nThis course is designed to help you practice JavaScript, you should have a functional understanding of the JavaScript language before taking this course. Please note that the course covers only JavaScript relevant to the building of the game.   Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\n\nCourse covers\nLearn how to setup your gameplay area using HTML and CSS\nSetup page elements and prepare variables.\nCreate interaction with JavaScript event listeners to invoke functions on mouse actions\nRun animationframe to change HTML elements style attributes and calculate positions of shots and enemies\nCalculate angles for the turret to follow the mouse movements and shot in the angled direction of where the mouse is.\nCreate elements using JavaScript and add/remove them from the page\nSetup start game functionality with values to create game play\nAccess the JavaScript Document Object Model to manipulate element properties\nSetup a dashboard to output variables for the user like score and life left\nSetup helper functions to reuse within the game play\nCheck for element overlap and detect collisions which is essential for any game.\nAll this is included and a whole lot more.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building your own version of the game today!!!!\nSee what you can build while you practice JavaScript!",
      "target_audience": [
        "Beginners to JavaScript",
        "Anyone who wants to practice writing JavaScript",
        "Anyone who wants to learn to make a JavaScript game without any libraries",
        "Web developers",
        "Webmasters"
      ]
    },
    {
      "title": "The Ultimate Modern Next.js Complete Course 2024",
      "url": "https://www.udemy.com/course/ultimate-modern-nextjs-complete-course-2024/",
      "bio": "Learn to build fullstack application with Next.js, Prisma, MongoDB, Next Auth 5, Typescript, Zod, Shadcn, TailwindCSS",
      "objectives": [
        "Learn to build fullstack scalable React apps with NextJS",
        "Learn about Server and Client Components and different ways to implement features",
        "Get started with Data fetching, Server Actions , Authentication all while building projects to concrete learned knowledge",
        "Comprehensive Coverage The most in-depth NextJS exploration available online.",
        "Project-Based Learning Apply your knowledge in real-world settings to retain and practice skills."
      ],
      "course_content": {
        "Building the Foundation of NEXT JS": [
          "Introduction",
          "Routing",
          "File Conventions",
          "Server vs Client Components",
          "Dynamic Routes",
          "Link and Navigation",
          "Params",
          "Fetch API in a Server Component",
          "Fetch API in a Client Component",
          "Github Repo Link"
        ],
        "Hands-On Foundation (Project #1 - Product Fetch)": [
          "Introduction",
          "Fetching Products Data",
          "Products List Component",
          "Dynamic Product Component",
          "Loading State",
          "Please leave a review ⭐⭐⭐⭐⭐",
          "Github Repo Link"
        ],
        "Learn Fullstack NEXT JS: Backend API (Project #2 - Shopping List App)": [
          "Project Overview",
          "Project Diagram and Technologies",
          "Installation & Setup",
          "List Box Form",
          "POST API Route",
          "GET API Route",
          "Caching System",
          "List Card",
          "Setup Input Handler",
          "PUT API Route",
          "DELETE API Route",
          "Github Repo Link"
        ],
        "Learn Fullstack NEXT JS: Server Actions (Project #3 -Talent Board)": [
          "Project overview",
          "Installation",
          "Font Import",
          "Add Talent Component",
          "Server Actions Intro",
          "Server Action Implement",
          "Fetching and and Adding Data",
          "Delete Talent Data",
          "Edit Talent Data",
          "Hire Me Button",
          "Overview & Outro",
          "Github Repo Link"
        ],
        "Authentication with Next-Auth v5, Typescript, Zod (Project #4: Posty)": [
          "Project Overview",
          "Installation",
          "Data Model",
          "Next Auth Setup",
          "Navbar Component",
          "Post Form",
          "Post Actions",
          "Post Form Handle",
          "Post Display",
          "Date and Delete Actions",
          "Landing Page Fix",
          "How to get Session in Client Component",
          "Outro",
          "Github Repo Link"
        ]
      },
      "requirements": [
        "Experience with basic React is recommended",
        "NO prior knowledge of NextJS is required."
      ],
      "description": "Welcome to the World of Next.js!\nCongratulations! You're about to embark on an exciting journey into the fast-paced world of Next.js, a powerful framework designed to help developers create high-performance, feature-rich web applications that truly stand out in today’s digital landscape.\nNext.js enables the full potential of server-rendered React applications, merging the best aspects of web development into one developer-friendly framework. This comprehensive course will guide you through advanced Next.js features, helping you differentiate yourself in the job market and confidently tackle real-world projects. You’ll delve into authentication with the Next-Auth library, innovative data mutation techniques using server actions, and foundational concepts of server and client components, setting you on the path to mastering modern web development.\nWhy Learn Next.js?\nAs the tech industry seeks skilled professionals, mastering Next.js puts you at the forefront of opportunity. Whether you're starting a new career as a software engineer or looking to enhance your current projects, there's never been a better time to dive into Next.js.\nWhat Will You Achieve?\nThrough an extensive collection of video lectures, detailed diagrams, and real-world examples, this course ensures a thorough understanding of Next.js, even if you're new to the framework. The learning experience is designed to be both rigorous and encouraging, building knowledge step-by-step and contextualizing each feature of Next.js.\nThis course promises the most comprehensive exploration of Next.js available online. Every aspect is covered in this resource-rich adventure.\nCourse Topics:\nServer vs. Client Components: Understand and leverage each for maximum efficiency.\nData Validation Techniques: Ensure the reliability and integrity of user input.\nCaching Systems: Navigate Next.js's sophisticated caching systems for optimal performance.\nServer Actions for Data Mutations: Structure server actions effectively to handle data changes.\nStyling with Tailwind CSS: Enhance user interfaces with component styling.\nTypeScript Integration: Leverage TypeScript for robust, type-safe applications.\nUser Authentication with Next-Auth: Implement secure and scalable user management.\nModern Components with shadcn: Styling a modern touch with shadcn.\nForm Handling with Zod: Learn to handle form and actions with zod.\nWith each topic, you'll gain the knowledge, proficiency, and confidence to apply what you've learned in practical scenarios.\nWho Is This Course For?\nThis course is ideal for any engineer looking to build high-performance web apps with Next.js. Basic knowledge of React and TypeScript is helpful.\nLearning Pattern\nWe will adopt a project-based approach to learning, which will allow us to practice what we have learned in real-world settings. This method will enable us to learn quickly and retain the knowledge, preparing us for larger projects in the future.\nEmbrace the Future of Web Development\nJoin the ranks of developers who not only follow best practices but also contribute to them. Sign up now to transform your understanding and execution of modern web development with Next.js.\n\n\n*Course will be updated to Next.js v15 when a stable version is available.",
      "target_audience": [
        "Anyone trying to learn NextJS, great compliments after learning React",
        "Students who wants to learn to build modern apps with modern technologies and up their skills"
      ]
    },
    {
      "title": "Build and Deploy Angular 2 - Learn Angular-CLI",
      "url": "https://www.udemy.com/course/learn-angular-cli-for-beginners-quick-and-easy-start/",
      "bio": "All That You Need To Know About Angular-CLI",
      "objectives": [
        "Understand and know how to use Angular-CLI tool"
      ],
      "course_content": {
        "Beginning": [
          "Download This Source File",
          "Overview",
          "Angular-CLI Introduction",
          "Installation",
          "Folder Structure"
        ],
        "Angular-CLI Commands": [
          "Commands - Part 1",
          "Commands - Part 2",
          "Commands - Part 3"
        ],
        "Scenarios": [
          "Angular-CLI with Angular Material",
          "Angular-CLI with Bootstrap",
          "Angular-CLI with Font-Awesome",
          "Angular-CLI with Firebase"
        ],
        "Todo List App": [
          "Starting with Angular-CLI",
          "Adding Task Model",
          "Adding Todo Service",
          "Unit Test with Todo Service",
          "Finish the App",
          "Deploy to Github Pages"
        ],
        "Wrap Up": [
          "Closing"
        ]
      },
      "requirements": [
        "Some basics of angular 2 framework"
      ],
      "description": "WELCOME TO MY Course - \"Learn Angular-CLI for Beginners - Quick and Easy Start\"!\n-- We will be deploying our app on Github Pages\nWhat is Angular-CLI?\nAngular-CLI is a command line interface for Angular 2 and it's recommended by the official angular 2 team.\nHere is a quote from Angular 2 Official Website\n\"Good tools make application development quicker and easier to maintain than if you did everything by hand.\"\n\n\nAngular-CLI can create a project, add files, and perform a variety of ongoing development tasks such as testing, bundling, deployment and etc.\n\n\nWhat is in this course?\nThis course is an easy and practical guide on how to use Angular-CLI tool. You will learn from the very beginning and by the end the course, you should have a good understanding on the tool. The course is short and effective, as to this course description.",
      "target_audience": [
        "Anyone who is interested in Angular-CLI tool"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/html5-and-css3-from-basic-to-advanced/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Adding E-Commerce To WordPress - A Course By Infinite Skills",
      "url": "https://www.udemy.com/course/adding-e-commerce-to-wordpress/",
      "bio": "Learn how to add E-Commerce to your WordPress Web Site",
      "objectives": [
        "Learn How To Add E-Commerce To WordPress"
      ],
      "course_content": {},
      "requirements": [
        "PC or Mac"
      ],
      "description": "This WordPress for E-Commerce training course from Infinite Skills teaches you how to use this blogging platform to build an E-Commerce website. This course is designed for users that already have a solid understanding of WordPress.\n\nYou will start with an introduction to using WordPress for E-Commerce, covering WordPress themes and plugins. George will then teach you about single item selling, including how to create and place a PayPal button and install an easy PayPal payment plugin. This video tutorial will also teach you how to create your own catalogue or simple shopping cart with and without a WordPress plugin. You will also learn about full shopping cart plugins, as well as other free full shopping cart reviews. Finally, George will talk about special E-Commerce cases, such as selling downloadable products or memberships, and third-party shopping cart integration.\n\nOnce you have completed this computer based training course, you will have an in-depth understanding of how to use WordPress for E-Commerce, and be able to create your own E-Commerce website using this powerful blogging platform. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Web Designers and Developers"
      ]
    },
    {
      "title": "Making a Complete Learning Management System with PHP, MySQL",
      "url": "https://www.udemy.com/course/complete-learning-management-system-with-php-mysql/",
      "bio": "Developing a complete learning management system (LMS) using the native or vanilla PHP (PHP 8.4) & MySQL in 2025",
      "objectives": [
        "Complete project using php, pdo and mysql",
        "Full authentication system from scratch",
        "Sending email using phpmailer",
        "Complete CRUD system",
        "PHP session",
        "Student registration, login and reset password",
        "Instructor registration, login and reset password",
        "Connecting database with php, pdo",
        "Email verification system during registration",
        "Form validation technique",
        "Payment method integration with PayPal and Stripe",
        "Admin login and reset password system",
        "Admin settings for different section of the website",
        "Photo uploading system",
        "Toast message notification",
        "Course Coupon Management",
        "Messaging System between Student and Instructor",
        "Course Curriculum Management",
        "Cart Managemenet System",
        "Instructor and Admin Revenue Management",
        "Admin profile management",
        "Student and Instructor Profile Management",
        "Student and Instructor Login and Registration"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Local Server Setup & Preparing Environment": [
          "Installing XAMPP (Windows OS)",
          "Shift between php versions in XAMPP (Windows OS)",
          "Installing Laragon (Windows OS)",
          "Shift between php versions in Laragon (Windows OS)",
          "Install PHP 8.2 in Laragon (Windows OS)",
          "Installing XAMPP (MAC OS)",
          "Installing MAMP (MAC OS)",
          "Shift between php versions in MAMP (MAC OS)",
          "Download & Install Composer (Windows OS)",
          "Download & Install Composer (MAC OS)",
          "Code Editors"
        ],
        "Admin Panel Template Mastering": [
          "Describing HTML Template",
          "Separate Dashboard and Login",
          "Config File and Mailtrap Setup",
          "Moving all data into admin folder",
          "Creating Users Table and Developing Login & Logout System",
          "Forget Password",
          "Reset Password",
          "Edit Profile - Part 1",
          "Edit Profile - Part 2",
          "Other Pages"
        ],
        "Admin Panel Template Mastering - Source Code": [
          "Source Code"
        ],
        "Front End Template": [
          "HTML Template",
          "Source Code"
        ],
        "Front End Template Mastering": [
          "Front End Template Mastering - Part 1",
          "Front End Template Mastering - Part 2",
          "Front End Template Mastering - Part 3",
          "Front End Template Mastering - Part 4",
          "Front End Template Mastering - Part 5"
        ],
        "Student Panel Setup": [
          "Registration",
          "Verify Registration",
          "Login, Dashboard & Logout",
          "Reset Password - Part 1",
          "Reset Password - Part 2",
          "Edit Profile"
        ],
        "Instructor Panel Setup": [
          "Registration & Verify",
          "Login, Dashboard & Logout",
          "Reset Password",
          "Edit Profile"
        ],
        "Admin Panel - Course Category": [
          "Course Category - Part 1",
          "Course Category - Part 2"
        ],
        "Admin Panel - Course Level": [
          "Course Level - Part 1",
          "Course Level - Part 2"
        ]
      },
      "requirements": [
        "Basic knowledge in HTML",
        "Basic knowledge in CSS",
        "Basic knowledge in Javascript",
        "Basic knowledge in Bootstrap",
        "Basic knowledge in Code Editor like VS Code or any other"
      ],
      "description": "In this course, I have taught the students the most popular programming language PHP and MySQL database from scratch. After showing all the basics of PHP, authentication system, security, template mastering etc., I have developed a complete learning management system (LMS) web application with the latest version of PHP. That means this project will run without any problem in PHP 8.4\n\nThe persons who are very beginner in php or have no knowledge at all in PHP, they will be benefitted the most from this course. But the advanced persons will also get help from this course, because I have tried to show all the real life features of a learning management system (LMS) with advanced features.\nApplication Features:\nSearch features in the home page.\nAdvanced search features in the course page.\nURL rewrite option using a htaccess file. So in the front end, there will be no .php extensions.\nOptimized query added in some sections in order to load data faster instead of nested queries.\nAdmin Panel Features:\nAdmin can change logo, favicon etc.\nAdmin can setup the sales commission.\nAdmin can setup the minimum withdraw amount.\nAdmin can setup the withdraw fee for instructor.\nAdmin can manage the course language.\nAdmin can manage the course category.\nAdmin can manage the course level.\nAdmin can manage the FAQ Section\nAdmin can create, edit and delete blog posts.\nAdmin can create, edit and delete testimonials.\nAdmin can see all subscriber list and export those in CSV format.\nAdmin can see all the student profiles and manage them.\nAdmin can see all the instructor profiles and manage them.\nAdmin can see all the orders and invoices.\nAdmin can change his own photo, information and password\nAdmin can see all courses and approve course.\nAdmin can see all curriculums.\nAdmin can approve the withdraw requests made by instructor\nStudent Features:\nStudent can create account for free\nStudent can login and reset his password if necessary\nStudent can change profile information\nStudent can buy courses using PayPal and Stripe\nStudent can see order history\nStudent can see and print order invoice\nStudent will be able to see course contents after purchase\nStudent can give review on a course he purchased\nStudent can send message to instructors for a particular course\nStudent will have lifetime access to a course\nStudent can add items in wishlist and see all wishlist items\nStudent can add items into the cart\nStudent can perform the checkout action\nStudent can apply coupon to a particular course if available\nInstructor Features:\nInstructor can create account for free\nInstructor can login and reset his password if necessary\nInstructor can change profile information\nInstructor can upload courses for free\nInstructor can reply to student message\nInstructor can add, modify or delete courses\nInstructor will earn revenue from each purchase\nInstructor can create coupon for a course\nInstructor can withdraw the money that is in his balance\nInstructor can create course and submit that to admin for review\nInstructor can see his revenue history",
      "target_audience": [
        "Persons who want to learn latest php from scratch",
        "Persons who want to learn mysql from scratch",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to have a remote job in php",
        "Persons who want to start his freelancing career using php",
        "Persons who want to learn making a complete learning management system (LMS)"
      ]
    },
    {
      "title": "Build A TodoList with ASP.NET and Electron Vue",
      "url": "https://www.udemy.com/course/build-a-todolist-with-aspnet-and-electron-vue/",
      "bio": "Learn to build a Full Stack ASP.NET Core and Vue Electron Application in No Time",
      "objectives": [
        "The student will learn the basics of RESTful API development with ASPNET Core",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the Entity Framework Core ORM",
        "Learn to consume JSON with Electron"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create ASP.Net Core API": [
          "Install DotNet Core 6",
          "Install Visual Studio and SQL Server",
          "Create a SQL Server Database",
          "Create ASP.Net Core API",
          "Add Entity Framework Core Dependencies",
          "Add Database ConnectionString",
          "Add ASP.NET Core DB Context",
          "Run ASP.NET Core Entity Framework Core Migrations",
          "Create ASP.NET Core Todos Controller",
          "Get Todos Entity Framework Core",
          "Create Todos Entity Framework Core",
          "Update Todos Entity Framework Core",
          "Delete Todos Entity Framework Core",
          "Run ASP.NET Core Restful API"
        ],
        "Create Electron Vue TodoList": [
          "Install Electron Vue",
          "Add UI Library",
          "Add Create and Read Actions",
          "Add Update and Delete Actions",
          "Show TodoListComponent",
          "Create TodoList Table",
          "Security Policy",
          "Delete Todo Button",
          "Create TodoList Form",
          "Submit Todos"
        ]
      },
      "requirements": [
        "Understand basic C#"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use ASPNet Core and Vue Electron. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a Vue Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, C#, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nVue Functional Components\nHTTP Requests with Fetch\nCRUD Methods\nASPNet Core\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with Vue Electron and ASPNet Core.",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "Build a Blog Application with Elixir Phoenix Liveview",
      "url": "https://www.udemy.com/course/build-a-blog-application-with-elixir-phoenix-liveview/",
      "bio": "Learn and put into practice phoenix liveview concepts by building a blog application",
      "objectives": [
        "Understand the basic structure of a phoenix application",
        "Routing in Phoenix framework",
        "Generating Migrations and Schemas in phoenix application",
        "The phoenix Liveview process functions",
        "Using different Layouts in a phoenix Liveview application",
        "Schema Associations in phoenix framework",
        "Images upload functionality in phoenix liveview",
        "CRUD in phoenix liveview"
      ],
      "course_content": {
        "Introduction": [
          "Setting up a phoenix project",
          "Genarating authentication and schemas"
        ],
        "Associations": [
          "Associations",
          "Looking at the context",
          "Working on Catalog context"
        ],
        "Integrating the dashboard theme": [
          "Working on Dashboard Live Route",
          "Doing changes on dashboard theme"
        ],
        "Category CRUD": [
          "Category CRUD part 1",
          "Category CRUD Part 2",
          "Category CRUD Part 3",
          "Category CRUD Part 4",
          "Category CRUD Part 5",
          "Category CRUD Part 6",
          "Category CRUD Part 7"
        ],
        "POST CRUD": [
          "Post CRUD Part 1 - Creating Routes",
          "Post CRUD Part 2 - Displaying the form",
          "Post CRUD Part 3 - Post Creation functionality",
          "Post CRUD Part 4 - Image upload functionality",
          "Post CRUD Part 5 - Image upload functionality",
          "Post CRUD Part 6 - Image upload functionality",
          "Post CRUD Part 6 - Displaying the posts on the admin dashboard",
          "Post CRUD Part 6 - Updating Posts",
          "Post CRUD Part 9 - Post Deleting"
        ],
        "Working on displaying posts on the Frontend": [
          "Integrating the frontend layout.",
          "Listing posts on the client-side",
          "Showing a single post",
          "Showing the images on the client-side",
          "Showing posts by Category",
          "Showing posts by Category part 2 and cleaning client template"
        ]
      },
      "requirements": [
        "Basic understanding of the phoenix framework",
        "Be able to setup elixir and phoenix programming environment"
      ],
      "description": "Welcome to Building a Blog Application with Elixir Phoenix LiveView! In this hands-on course, you will dive deep into real-time web development by building a fully functional blog application using the powerful combination of Elixir, Phoenix Framework, and LiveView. This course will give you the knowledge and practical experience you need to get started building real-time applications in Phoenix LiveView.\nIn the process of working on this project, these are the Elixir Phoenix LiveView concepts you will learn:\nIntroduction to Phoenix Framework:\nUnderstand the basic structure of a Phoenix application\nLearn about the Model-View-Controller (MVC) architecture\nCreate your first Phoenix project\nWorking with Data:\nGenerating Migrations and Schemas in a Phoenix application\nCreate and manage database tables using Ecto migrations\nDefine data models and schemas to represent your application's domain\nIntroduction to Phoenix LiveView:\nExplore the concepts behind Phoenix LiveView and its advantages\nUnderstand how LiveView processes function and how they differ from traditional web development approaches\nSet up LiveView in your Phoenix application and create your first live component\nBuilding Dynamic Interfaces:\nUtilize LiveView templates and components to create dynamic user interfaces\nImplement real-time updates without writing JavaScript code\nEnhance user experience with seamless page updates and form submissions\nLayouts and Navigation:\nImplement different layouts in a Phoenix LiveView application\nCreate reusable components and partials to streamline development\nHandle navigation and routing within your application using LiveView\nWorking with Associations:\nLearn about schema associations in the Phoenix framework\nDefine relationships between data models using Ecto associations\nImplement CRUD operations for related data entities\nUploading Images:\nImplement image upload functionality in a Phoenix LiveView application\nUtilize Phoenix and Ecto functionalities to handle file uploads securely\nManage and display uploaded images within your application\nCRUD Operations:\nImplement CRUD (Create, Read, Update, Delete) operations in Phoenix LiveView\nCreate interactive interfaces for managing data entities\nHandle form submissions, validations, and error handling effectively",
      "target_audience": [
        "People interested in learning phoenix liveview practically by building a project",
        "People who have gone through the fundamentals of Elixir and phoenix liveview and would like to see the concepts in practice by building a project."
      ]
    },
    {
      "title": "AI Multi Step Resume Builder - React NextJs ShadcnUI MongoDB",
      "url": "https://www.udemy.com/course/ai-react-nextjs-resume-builder/",
      "bio": "Master AI Powered FullStack Web Development with NextJS while Building A Real World Multi Step Resume Builder App",
      "objectives": [
        "Build a full-stack AI Resume Builder using ReactJS, NextJS, and MongoDB.",
        "Implement modern UI design with ShadcnUI and TailwindCSS, including light/dark modes.",
        "Create a multi-step resume builder with context-based state management.",
        "Integrate Clerk for secure authentication and page protection.",
        "Set up and manage MongoDB connections and models for data persistence.",
        "Implement server actions and handle common NextJS data passing issues.",
        "Integrate Google Gemini Generative AI for dynamic resume content creation.",
        "Develop advanced features like rich text editing, live previews, and theme selection.",
        "Create print-ready resume renders with dynamic metadata updates.",
        "Deploy a production-ready AI-powered web application with sharing capabilities."
      ],
      "course_content": {
        "Project Setup, Theme & Navigation": [
          "Introduction",
          "Finished Project Demo",
          "PDF & Source Code",
          "NextJs Project Setup with ShadcnUI",
          "Light and Dark Mode",
          "Navigation"
        ],
        "Context & Resume Create Steps": [
          "Resume Context",
          "Steps Components",
          "Step One - Personal Information",
          "Update Resume State on User Input",
          "Resume Create Steps Nav"
        ],
        "Authentication & Protecting Pages": [
          "Clerk Authentication",
          "Protecting Pages"
        ],
        "Database, Models & Server Actions": [
          "MongoDB Connection",
          "Resume Model",
          "Save Resume Server Action"
        ],
        "Creating Resume with Personal Information": [
          "Calling Save Resume from Component",
          "Dynamic Button Before SignIn or Save",
          "Save Personal Information on Page Refresh",
          "Save Resume and Toast Notification",
          "Step One Component for Resume Create"
        ],
        "User Resumes, Resume Card & Skeleton": [
          "Resume Edit Page",
          "Current User's Resumes",
          "Skeleton Cards while Loading",
          "Resume Card Component",
          "Personal Details Preview"
        ],
        "Resume Update, Verify Ownership & Server Actions": [
          "Edit Resume Link",
          "Get Single Resume",
          "Check Ownership",
          "Update Resume Server Action",
          "Saving Resume Summary"
        ],
        "Resume Summary Live Preview": [
          "Summary Preview",
          "Resume Live Preview",
          "Initial State on Create Page",
          "Resume Live Preview on Create Page"
        ],
        "Google's Generative AI": [
          "Google Gemini Generative AI",
          "Generate with AI",
          "AI Generated Summary"
        ],
        "Rich Text Editor": [
          "Using Rich Text Editor",
          "Code - React Quill Dark Mode CSS",
          "React Quill Dark Mode CSS",
          "Dashboard Resume Card Height"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript and familiarity with ReactJS and NextJS.",
        "Eagerness to learn about AI integration and a passion for web application development."
      ],
      "description": "Welcome to the AI Resume Builder course, where cutting-edge technology meets practical application in the world of web development. This comprehensive course is designed to take you on a journey through building a sophisticated, AI-powered resume creation platform from the ground up. Whether you're a budding developer looking to expand your skillset or an experienced coder seeking to integrate AI into your projects, this course offers a perfect blend of theory and hands-on practice.\nCourse Overview\nIn this course, we'll construct a fully functional AI Resume Builder using a modern tech stack including ReactJS, NextJS, ShadcnUI, and MongoDB. What sets this course apart is its focus on simplicity and user experience, both for developers following along and for end-users of the application. We've carefully crafted each section to ensure a smooth learning curve while building a powerful, scalable application that's ready for real-world use.\nEasy to Follow, Easy to Use\nOne of the core principles of this course is accessibility. We've structured the content to be easy to follow, allowing you to code along without feeling overwhelmed. Each concept is introduced gradually, building upon previous lessons to create a cohesive learning experience. This approach not only makes the development process more manageable but also translates into a user-friendly final product.For users of your AI Resume Builder, we've prioritized a frictionless onboarding experience. Imagine a platform where users can start creating professional resumes instantly, without the barrier of signing up first. This \"try before you buy\" approach significantly enhances user engagement and satisfaction. As you build this feature, you'll learn valuable lessons about user experience design and the importance of reducing friction in web applications.\nSimplified Setup, Real-World Application\nWe understand that complex setups can be a major hurdle in learning new technologies. That's why we've streamlined the development environment setup process. You'll learn how to quickly get your project up and running with minimal configuration, allowing you to focus on what really matters - building and understanding the application.This simplicity extends to the user side as well. The resume builder you'll create is designed to be intuitive, allowing users to generate multiple resumes effortlessly. This focus on ease of use makes your application not just a learning project, but a viable tool that could be launched as a real product.\nCourse Structure and Content\nLet's dive into what you'll be learning throughout this course:\nProject Setup, Theme & Navigation\nWe kick off by setting up our project with NextJS and integrating ShadcnUI for a sleek, modern interface. You'll learn how to implement a responsive design with light and dark modes, setting the foundation for a professional-looking application.\nContext & Resume Create Steps\nHere, we delve into state management using React Context, creating a multi-step resume builder that guides users through the process seamlessly. This section emphasizes creating a smooth user journey, an essential aspect of any successful web application.\nAuthentication & Protecting Pages\nSecurity is paramount in web development. You'll integrate Clerk for authentication, learning how to protect routes and manage user sessions effectively. However, we'll also implement features that allow users to start creating resumes without signing in, showcasing how to balance security with user convenience.\nDatabase, Models & Server Actions\nWe'll set up MongoDB and create our resume model, introducing you to database management in a NextJS environment. You'll learn how to handle server actions and manage data persistence, tackling common challenges like the \"only plain objects can be passed to the client\" error.\nCreating Resume with Personal Information\nThis section focuses on building the core functionality of our resume builder, starting with personal information input. You'll learn how to create dynamic forms and manage complex state across multiple components.\nUser Resumes, Resume Card & Skeleton\nEnhance the user experience by implementing a dashboard where users can view and manage their resumes. You'll also learn how to create skeleton loaders for a polished, responsive feel.\nResume Update, Verify Ownership & Server Actions\nDive deeper into CRUD operations, implementing update functionality and learning how to verify resume ownership. This section reinforces your understanding of server actions and data management.\nResume Summary Live Preview\nImplement a live preview feature, allowing users to see their resume take shape in real-time. This section emphasizes the importance of immediate feedback in user interfaces.\nGoogle's Generative AI\nThe crown jewel of our application - integrating Google's Gemini Generative AI. You'll learn how to leverage AI to generate professional resume summaries and experience descriptions, adding a cutting-edge feature to your application.\nRich Text Editor\nImplement a rich text editor for more detailed and formatted resume sections, enhancing the flexibility and professional output of the resumes created.\nAI Powered Resume Experience with Multiple Form Fields\nExpand on the AI integration, applying it to generate content for various resume sections. This practical application of AI showcases how machine learning can enhance user productivity.\nResume Education with Multiple Form Fields\nBuild out the education section of the resume, managing multiple form fields and complex data structures.\nResume Skills with Progress Bar\nCreate an interactive skills section complete with progress bars, adding a visual element to the resume builder.\nResume Download Page with Preview & Options Overlay\nImplement a download feature with various options, allowing users to preview and customize their resume before exporting.\nSSR Resume, Print & Dynamic Metadata\nUtilize NextJS's server-side rendering capabilities to create print-ready resumes and implement dynamic metadata for improved SEO.\nSharing, Landing Page & Deployment\nWrap up the course by adding sharing functionality, creating an engaging landing page, and learning how to deploy your application to a production environment.\nReal-World Application and Scalability\nThroughout the course, we emphasize building features that have real-world applicability. The AI Resume Builder isn't just a learning project; it's a fully functional application that could be launched as a product. We'll discuss considerations for scaling the application, handling increased user loads, and potential monetization strategies.The skills you learn are transferable to many other types of applications. From integrating AI services to managing complex state and implementing user authentication, these are foundational skills for modern web development.\nConclusion\nBy the end of this course, you'll have built a sophisticated AI Resume Builder from scratch. More importantly, you'll have gained hands-on experience with a modern web development stack, AI integration, and best practices in user experience design.Whether you're looking to enhance your portfolio, start a new side project, or bring AI capabilities to your existing applications, this course provides the knowledge and practical skills to help you succeed. Join us on this exciting journey of creating an AI-powered web application that's not just a learning tool, but a potential launchpad for your development career.Enroll now and take the first step towards mastering AI-integrated web development with our AI Resume Builder course!",
      "target_audience": [
        "Aspiring developers looking to enhance their web development skills with modern technologies.",
        "Professionals interested in integrating AI solutions into their applications.",
        "Students who want to build a practical project that showcases their programming abilities.",
        "Anyone passionate about creating user-friendly tools for personal and professional use.",
        "Developers familiar with React and NextJS who want to deepen their knowledge.",
        "Individuals seeking to learn about database management with MongoDB.",
        "UI/UX designers wanting to understand how to implement their designs in a functional application.",
        "Tech enthusiasts eager to explore the capabilities of generative AI in real-world applications.",
        "Anyone looking to build a portfolio project that demonstrates full-stack development skills.",
        "Developers interested in learning about authentication and secure data handling in web apps."
      ]
    },
    {
      "title": "The Complete React and Next JS Bootcamp 2021",
      "url": "https://www.udemy.com/course/the-complete-react-and-next-js-bootcamp-2021/",
      "bio": "Learn the complete React JS and the Production ready framework Next JS in a single course",
      "objectives": [
        "Build Single Page Front End Applications",
        "Learn how components play a crucial role in React",
        "Different types of components and their importance",
        "React Hooks , useState and useEffect",
        "Understanding the difference between Client side rendering and Server side rendering",
        "Creating API's with Next JS without the knowledge of Node JS",
        "Build Hands on Projects to understand the concepts clearly"
      ],
      "course_content": {},
      "requirements": [
        "Java script Basics"
      ],
      "description": "React is a free and open-source front-end JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.\nNext.js is an open-source development framework built on top of Node.js enabling React-based web applications functionalities such as server-side rendering and generating static websites.\nTopics you gonna cover in this course.\nReact Introduction\nHow To Create a new React Application\nComponents and Different types of Components\nComponents Structure and Life Cycle\nHow to handle events in React\nApplying styles to React JS Components\nReact Hooks\nForms and Form Submissions\nRouting in React\nControlling one component from another Component with the help of Context-API\nConnecting React Applications to Back-End and build complete full-stack Applications\nReact vs Next\nCreating Single Page Applications\nClient-Side Rendering\nServer-Side Rendering\nCreating Layouts\nCreate REST API's without Node, Express\nRouting in Next JS\nConnecting Databases (Mongo DB) to NEXT JS\nPerforming API requests with Postman to Next API's\nCSS Modules in Next JS\n3 Live and Hands-On Projects\nDeploying Next App to Vercel\nQ/A Support\nBy the end of this course, you will know how to create a full-stack web application with NEXT JS.\nReact allows you to build things the way you want and is supported by a strong community. Next. js makes your life easier with several tools and conventions available out of the box, and it is also supported by a very active open source community. In terms of tooling, both React and Next.",
      "target_audience": [
        "Javascript Developers",
        "Fullstack Developers",
        "Front End Developers"
      ]
    },
    {
      "title": "Create a Blog Website in ReactJS, TailwindCSS and Strapi CMS",
      "url": "https://www.udemy.com/course/how-to-create-a-blog-in-reactjs-tailwindcss-and-strapi-cms/",
      "bio": "How to Create a Blog in ReactJS, TailwindCSS and Strapi CMS",
      "objectives": [
        "Get an understanding of how to create a blog website in practical way",
        "Create a complete blog website with a Content Management System",
        "Establish yourself in the field of the exciting React web development environment",
        "Present yourself with your content platform"
      ],
      "course_content": {
        "Introduction": [
          "Introduction + Demo"
        ],
        "Project Setup": [
          "ReactJS & TailwindCSS",
          "Strapi CMS"
        ],
        "Frontend": [
          "Navbar",
          "Blogs Section",
          "Footer",
          "Blog Content (Part 1)",
          "Blog Content (Part 2)",
          "Routing Between Pages"
        ],
        "Backend": [
          "Fetch Data via API",
          "Mapping Through The Data",
          "Routing Between Pages With Dynamic Data",
          "Last Few Steps To Enhance Your Blog"
        ]
      },
      "requirements": [
        "Basic React JS knowledge is required."
      ],
      "description": "What is React JS?\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\n\n\n\nWhat is Tailwind CSS?\nTailwind CSS is an open source CSS framework. Tailwind CSS makes it quicker to write and maintain the code of your application. By using this utility-first framework, you don't have to write custom CSS to style your application. Instead, you can use utility classes to control the padding, margin, color, font, shadow, and more of your application.\n\n\n\n\nIs this course right for you?\nThis course covers creating a blog website with a content management system (CMS).\nThe course does explains React Js specific functions.\nThis course will give you the confidence and skills required to start your project.\n\n\n\n\nWhat are you going to work on?\nYou will build a blog website from scratch. You will learn how to write code in JavaScript language providing additional features and a static type checker.\nThe focus of this course is coding and not writing HTML content. The course starts with the preparation of the base layout of the application. All design - images, and content are provided by the instructor.\nAfter the layout is prepared, the students will work on the functionality to access and fetch the local data stored in markdown files.\n\nStudents will learn to work with a file system - fs package in this part. The content of the files is retrieved as a string of data.\n\nTo get the formatted data, students will learn how to parse \"frontmatter\" metadata and the markdown content from the file.\n\nThe fetched content is then provided to the pages and displayed in the application.\nAfter the content part is finished, students will start working on the search functionality. All content presented on the website can be searched via the input component provided in the navigation bar.",
      "target_audience": [
        "Anybody interested how to create a blog website with a CMS."
      ]
    },
    {
      "title": "Mapbox Proficiency for Developers",
      "url": "https://www.udemy.com/course/mapbox-proficiency-for-developers/",
      "bio": "Become a better builder and architect with Mapbox",
      "objectives": [
        "Architect an application using Mapbox",
        "Build sample applications and proof of concepts",
        "Communicate the value of Mapbox to stakeholders and developers",
        "Understand technical limitations, gotchas, and workarounds"
      ],
      "course_content": {
        "Introduction": [
          "What is this course and what is it not?",
          "Pre-requisites"
        ],
        "Core Concepts": [
          "Layers (Basics)",
          "Layers (Vector vs Raster)",
          "Sources of Vector (GeoJSON vs Vector Source)"
        ],
        "Visual Use Cases": [
          "How to customize base maps",
          "How to create a pin",
          "How to create a circle, line and a polygon",
          "Expressions - (Data Driven Styling)",
          "Maintaining map states",
          "Implement static images in emails, notifications or social media"
        ],
        "Data Use Cases": [
          "Get details about the pin",
          "Creating Custom Data"
        ],
        "Miscellanous but common use cases": [
          "Searching for a location",
          "Rendering Path Routes"
        ]
      },
      "requirements": [
        "Programming experience required. Basic JS is preferred for building quick exampes."
      ],
      "description": "Mapbox is a mapping and location data platform for mobile and web applications. It provides developers with tools to create custom maps, geocode addresses, and perform other location-based tasks using a variety of APIs and SDKs.\n\n\nMapbox provides an excellent documentation. While, this can be overwhelming for most developers because it's difficult to know what is available for them. This course provides not only the deep insights into examples but it also discusses the high level technical trade offs and the cost of ownership of achieving the same goal. (It's because there are multiple ways to achieving the same thing in Mapbox). I was with Mapbox with more than three years helping customers implement it correctly. But since I am no longer with them, I will be explaining the trade-offs as if I am your neutral mapping consultant.\n\n\nThis course will make you proficient at Mapbox (i.e. zero to one) and you will be able to know if this tool is right for you. While, this course won't make you an expert. To become an expert, it will require you to spend more time using Mapbox, or you can expedite that process by taking my advanced courses. (or send me a message on what topic you'd like to learn in particular.) There are actually too many topics to cover and I want to be useful to the people who need it.\n\n\nThanks and good luck",
      "target_audience": [
        "Developers who want to expedite the learning curve of Mapbox",
        "Developers who are looking to evaluate Mapbox for their application",
        "Developers who are curious about Mapbox and its technology"
      ]
    },
    {
      "title": "Build Job Search Portal Website with WordPress",
      "url": "https://www.udemy.com/course/build-job-search-portal-website-with-wordpress/",
      "bio": "Build stunning Job Search Portal website without coding with WordPress & Elementor. Step-by-step masterclass.",
      "objectives": [
        "Introduction to WordPress and its features to build Job Search Portal website",
        "Choosing the right WordPress Theme for your job search portal business",
        "After completing building website, employer can post job",
        "After completing building website, candidate can apply for job",
        "How you can charge and monetize this website to make money with it",
        "Customizing your WordPress theme to match your branding",
        "Adding pages and content to your website",
        "Optimizing your website for search engines",
        "Adding functionality to your website with WordPress plugins",
        "Integrating social media into your website",
        "Creating an online store to sell your products or services",
        "Securing your website and protecting it from hackers",
        "Adding all Job functions to this Website for both Employers & Candidates"
      ],
      "course_content": {
        "Introduction to Job Search Website": [
          "Build Job Search Portal Website with WordPress (Promo)",
          "Download The Resources"
        ],
        "Setting Up WordPress Site": [
          "Setting Up Web Hosting",
          "Setting Up Domain Name",
          "Setting Up SSL Certificate",
          "Setting Up WordPress Website",
          "Setting Up Business Email"
        ],
        "Installing Plugins & Themes": [
          "Installing Themes",
          "Installing Plugins",
          "Elementor Settings (Important)"
        ],
        "Creating Important Pages": [
          "Login & Register Page",
          "Submit Job Page",
          "Creating Other Important Pages"
        ],
        "Setting Up Fields Setting": [
          "Job Setting Field",
          "Candidate Employer Field",
          "Setting Up Categories"
        ],
        "Payments Gateway & Pricing Setup": [
          "Payments Gateway Setup",
          "Pricing Setup"
        ],
        "Importing Templates & Customizing Pages": [
          "Importing Templates",
          "Customizing Pages"
        ],
        "Customize Menus, Footer & Sidebars": [
          "Customize Menus & Footer",
          "Customize Sidebars & Design"
        ],
        "Theme Job Settings & Testing Website": [
          "Theme Job Settings",
          "Testing Website",
          "Watch Free Courses",
          "Bonus"
        ]
      },
      "requirements": [
        "Nothing Required"
      ],
      "description": "Welcome to \"Build Job Search Portal Website with WordPress,\" the ultimate course for anyone who wants to build a professional and effective job portal business website. In this course, you will learn how to create a visually stunning, user-friendly, and optimized website using WordPress, without spending a single penny on website development.\nHere are some of the topics that will be covered in the course:\nIntroduction to WordPress and its features\nChoosing the right WordPress Theme for your fitness business\nCustomizing your WordPress theme to match your branding\nAdding pages and content to your website\nCreating a blog to engage your visitors\nOptimizing your website for search engines\nAdding functionality to your website with WordPress plugins\nIntegrating social media into your website\nCreating an online store to sell your products or services\nSecuring your website and protecting it from hackers\nWith over 2 billion active websites on the internet, it's crucial to have a website that stands out from the competition. By the end of this course, you'll have a fully-functional website that is tailored to your business needs, whether any employer can post a job on the website or a candidate can apply for a job.\nThis comprehensive course is designed for beginners who have no prior experience with website development. You will be guided step-by-step through the entire process, from choosing the right WordPress theme to adding custom pages and functionality to your website. You'll also learn how to optimize your website for search engines and create engaging content that will keep your visitors coming back for more.\nThe course is taught by an experienced WordPress developer who has built dozens of websites for various niche including job search portal. You will have access to a wealth of knowledge and expertise that will help you create a website that is both beautiful and functional.\nBy the end of the course, you will have a professional-looking website that is optimized for search engines, easy to navigate, and engages your visitors. You'll be able to attract more customers, increase your online presence, and showcase your job search business to the world.\nIn addition to the video lessons, you will also have access to a variety of resources, including PDF guides, quizzes, and assignments. You'll also be able to interact with the instructor and other students in the course's online forum, where you can ask questions, share ideas, and get feedback on your work.\nSo, if you're ready to take your job search portal business to the next level, enroll in \"Build Job Search Portal Website with WordPress\" today and start building your dream website!\nEnroll now to this course, Build Job Search Portal Website with WordPress.\nEnroll now!",
      "target_audience": [
        "Anyone who Wants to Build Job Search Portal Website with WordPress"
      ]
    },
    {
      "title": "NextJS Full Stack Social Media App -Twiddle App",
      "url": "https://www.udemy.com/course/build-and-deploy-a-full-stack-social-media-app-using-next-js/",
      "bio": "Twitter Clone: ( Next JS, React, TailwindCSS, Typescript, Clerk, MongoDB ) { Full-Stack Practical NextJS course }",
      "objectives": [
        "Building and Deploying a Full-Stack Social Media App:",
        "By the end, you’ll build and deploy a complete full-stack social media app with a polished UI, scalable backend, and live hosting.",
        "NextJS – The Most Popular Framework:",
        "Leverage the power of NextJS, the most popular web framework today, known for its seamless integration of server-side rendering and static generation.",
        "Tweet Features:",
        "Develop core social media features like tweeting, liking, retweeting, and replying, with a focus on functionality and performance.",
        "Authentication:",
        "Learn to implement secure user authentication, including registration and login using a third party service like Clerk.",
        "Building User Interfaces:",
        "Master responsive UI design by creating sidebars, navigation bars, and mobile-friendly layouts with Tailwind CSS.",
        "Database Integration:",
        "Understand how to set up and manage databases, create models, and handle data interactions with user profiles and posts.",
        "Designing UI Using Figma:",
        "In this course, you'll also learn how to design a sleek and user-friendly interface using Figma."
      ],
      "course_content": {
        "Introduction": [
          "What are you going to get from this course",
          "Course setup lecture"
        ],
        "Initial steps of the app": [
          "A look at the final version of Twiddle",
          "Initializing a Git repository",
          "What is a Design Document",
          "The Design Document of Twiddle"
        ],
        "Creating the UI design of Twiddle using Figma": [
          "What are we going to do in this section",
          "Landing Page Design",
          "Onboarding Page Design",
          "Home Page Design",
          "Search Page Design",
          "Notifications Page Design",
          "Create-Tweet Page Design",
          "Groups Page Design",
          "Profile Page Design"
        ],
        "Project Setup": [
          "Setting up the project",
          "Creating our file and folder structure"
        ],
        "Authentication": [
          "Creating the authentication logic of Twiddle",
          "Creating the register page",
          "Creating the login page",
          "Defining the onboarding page"
        ],
        "Layout and UI Foundation": [
          "Creating the Landing page of Twiddle",
          "Creating the layout of (root) path",
          "Creating the favicon of Twiddle"
        ],
        "Building Navigation Components": [
          "Creating the Left Sidebar component",
          "Creating the Bottom Bar component",
          "Creating the TopBar component"
        ],
        "User Models and Actions": [
          "Setting up the Database",
          "Creating the User model",
          "Creating the first user action",
          "What are webhooks",
          "Sync Twiddle with Clerk using webhooks"
        ],
        "Onboarding and Account Management": [
          "Writing the onboarding logic",
          "Writing the update user logic",
          "Creating the AccountInfo component [Part 1]",
          "Creating the AccountInfo component [Part 2]"
        ],
        "Sidebar and User Cards": [
          "Creating the Right Sidebar component [Part 1]",
          "Creating the Right Sidebar component [Part 2]",
          "Creating the UserCard component"
        ]
      },
      "requirements": [
        "To get the most out of this course, you should have a basic understanding of HTML, CSS, JavaScript, Typescript, React, Tailwind CSS, and NextJS. This course is highly practical and assumes you are comfortable with these technologies, as it is not designed to teach from scratch. Familiarity with these topics will allow you to dive right into building and deploying a full-stack social media app without needing to learn the basics. If you have worked with these technologies before and are ready to level up your skills, this course is perfect for you!"
      ],
      "description": "Build and Deploy a Complete Social Media App using Next.js – Twiddle App\n\n\nWelcome to the ultimate hands-on course where you'll learn how to build, design, and deploy a full-featured social media app, Twiddle, from scratch! Whether you’re looking to sharpen your web development skills or build your portfolio, this course will guide you through the entire process of creating a modern, scalable app similar to platforms like Twitter.\n\n\nWhat You’ll Learn:\n- Full-stack development using Next.js, React., and more.\n- Authentication: Secure user login and registration.\n- Database Management: Store and manage user data and tweets.\n- Tweet Features: Liking, retweeting, replying, and creating tweets.\n- Group Management: Create and manage social groups.\n- Responsive Design: Ensure your app looks great on all devices.\n- UI Design: Learn how to use Figma to create beautiful user interfaces.\n\n\nYou'll not only write clean, reusable code but also implement advanced features like notifications, tweeting, commenting on tweets, pagination, and a search functionality. Each section dives deep into practical aspects, from setting up the project to deploying it live!\n\n\nWhy Enroll?\nThis course isn’t just about building another app. It's about understanding the key principles of modern web development while working on a project that you can showcase to potential employers or clients. By the end, you’ll have a deployable, feature-rich social media app, and the skills to build more ambitious projects on your own.\n\n\nHands-On, Real-World Experience\nUnlike theory-heavy courses, this course focuses on real-world development. You’ll tackle every stage of building a fully functioning social platform, from integrating secure authentication to handling complex data relationships in the backend. Each feature you create—like tweets, groups, and user profiles—is built with scalability and performance in mind, preparing you to tackle real-world challenges as a full-stack developer.\nLaunch Your Own App and Portfolio\nBy the end of this course, you won't just have a demo project—you’ll have a fully deployable app that you can launch on the web and showcase to clients, recruiters, or employers. Whether you want to start your own project or level up your career, building Twiddle will arm you with essential skills, industry knowledge, and a standout portfolio piece that demonstrates your abilities.\n\n\nJoin now and start building your own web development project!\n\n\n\n\nAbout the Instructor Noor Fakhry:\nMeet Noor Fakhry, an experienced software engineer with many years of hands-on experience working in the field. Noor is the founder and lead instructor at Programming Fluency, where he shares his expertise with aspiring programmers. With a strong background in software development, Noor brings practical knowledge and real-world insights to his teaching. He has worked on various projects and tackled complex challenges, gaining valuable experience that he now imparts to his students.\nNoor's extensive experience as a software engineer enhances his ability to provide practical guidance and industry-relevant knowledge. He is currently pursuing a Master's degree in Computer Science, further deepening his understanding of the field. With a passion for both self-learning and formal education, Noor recognizes the specific needs of beginner coders and is committed to creating comprehensive and engaging programming and tech courses. His unique approach not only makes learning to code fun and interactive but also equips students with the skills they need to thrive in the tech industry. Noor goes beyond teaching coding concepts, he also emphasizes the reasoning behind certain practices, fostering a deeper understanding of the subject matter.\nBeing a self-taught programmer, Noor recognizes the abundance of online courses, tutorials, and books that tend to be excessively wordy and insufficient in imparting essential skills. Many individuals find themselves overwhelmed and uncertain about where to begin when learning programming and how to code. Furthermore, a considerable number of people lack the financial means to invest $20,000 in a coding bootcamp. The accessibility of programming skills should be inclusive and affordable for everyone. Educational materials ought to focus on imparting practical, up-to-date skills, ensuring they do not waste a student's precious time.\nTo enhance the learning experience, Noor employs animations, real-life examples, and whiteboard amazing explanations allowing students to visualize and comprehend complex concepts easily.\nNoor's journey led him to discover his true passion in teaching programming and coding, where he finds joy in helping individuals achieve their aspirations and turn their dreams into reality. This very passion drove him to become a full-time online course creator at Programming Fluency.\nJOIN Noor on a transformative journey towards programming fluency and a successful career in tech today!\n\n\nAre you ready to become FLUENT in your favorite programming language?\n\nAbout Programming Fluency:\nWelcome to Programming Fluency\nI have designed Programming Fluency to be the number one destination for people looking to learn how to code, master programming, and acquire high-demand job market skills. This is the only platform that provides the best and highest quality tech courses in the entire world. Together, we are creating a new landscape within the online education space. I am honored to have you with us!\n- Noor Fakhry, Founder of Programming Fluency\n\n\n\n\nProgramming Fluency is your gateway to mastering in-demand skills, landing a high-paying job, and advancing your career in technology.\n\n\nWe offer the resources and supportive environment you need to take control of your professional journey and unlock a wealth of exciting career opportunities in the tech industry, regardless of your background or experience.\n\nAt Programming Fluency, we help you become fluent in your favorite programming language, ensuring you have the expertise and confidence to excel in your chosen field.\n\n\nWe create comprehensive masterclasses that will take you from an absolute beginner to a complete professional. Additionally, we offer practical courses such as building and deploying full-stack apps, designed to boost your portfolio and make you stand out in the job market. If you already have some experience and want to further enhance your portfolio, our advanced courses are perfect for taking your skills to the next level.",
      "target_audience": [
        "Aspiring Web Developers: If you are just starting your journey in web development, this course is perfect for building a strong foundation. You will learn how to work with essential tools and frameworks like NextJS, React, and Tailwind CSS. Through hands-on projects, you will get a feel for full-stack development, enabling you to confidently create your own apps and websites.",
        "Full-Stack Developers: For developers who want to deepen their full-stack skills, this course offers an excellent opportunity to work on a real-world project. You’ll not only build the front end of a social media app but also dive into back-end development, database management, and API integration. Twiddle gives you a chance to hone both client-side and server-side skills in a practical, meaningful way.",
        "Freelancers: can greatly benefit from this course by learning how to build complex web applications that are in high demand. Social media platforms are a staple in today’s digital landscape, and mastering the ability to create one gives you an edge in the freelance market. You’ll walk away with a robust project that you can show potential clients to demonstrate your ability to handle large-scale applications",
        "JavaScript Enthusiasts: If you love working with JavaScript and want to take your skills to the next level, this course will push you beyond the basics. Using JavaScript, TypeScript, and popular libraries, you'll build interactive features like tweet creation, retweets, replies, and user profile management. You’ll also work with real-world concepts like authentication and database interactions that are crucial for modern app development.",
        "Backend Developers: Backend developers looking to sharpen their skills on the frontend will find this course a great opportunity to bridge the gap. You’ll work with user authentication, handle secure data, and implement a responsive front end that communicates seamlessly with the backend. By the end of the course, you’ll be comfortable managing both front-end and back-end codebases in a full-stack environment.",
        "Developers New to NextJS: If you’re familiar with other frameworks like React, but new to NextJS, this course provides an in-depth exploration of NextJS and its unique features, like server-side rendering and static site generation. You'll gain valuable experience using this powerful framework to build a real-world application, deepening your understanding of its benefits and best practices.",
        "Entrepreneurs and Startups: For entrepreneurs and startup founders, this course offers a hands-on approach to learning how to build your own MVP (Minimum Viable Product). Twiddle is a perfect case study, showing you how to structure a scalable, feature-rich application. You’ll gain the technical knowledge necessary to turn your app idea into a reality, whether you're working solo or planning to hire developers in the future.",
        "Junior Developers: Junior developers looking to level up their skills will find this course invaluable. You’ll learn how to work with modern technologies, organize your code, and solve common challenges that arise when building a complex application. By the end of this course, you will have a portfolio project that showcases your ability to deliver a real-world solution, making you stand out to potential employers.",
        "Developers Interested in Building Social Media Apps: If you've always wanted to learn how social media platforms like Twitter or Facebook are built, this course will take you behind the scenes. You’ll understand the core features that make a social media app functional, such as creating posts, following users, liking content, and managing groups. Each feature is built step-by-step, giving you a solid grasp of the underlying logic and architecture.",
        "Anyone Interested in Launching a Production-Ready App: Finally, if your goal is to build and deploy a production-ready web app, this course is the perfect fit. You won’t just stop at development; you’ll take your app all the way to deployment, learning how to host it online for the world to see. By the end of the course, you will have a live, fully functional social media app, ready for users to sign up and engage with."
      ]
    },
    {
      "title": "Be a NodeJS expert from scratch",
      "url": "https://www.udemy.com/course/nodejs-tutorials/",
      "bio": "A complete and crisp guide to NodeJS. Learn to handle node on cloud and locally.",
      "objectives": [
        "Understand every inside detail about nodejs",
        "Understand file system and events in detail",
        "Learn to read the docs of nodejs",
        "Learn to create your own web server from scratch",
        "Learn to create your own API server from scratch",
        "Detailed knowledge about NPM"
      ],
      "course_content": {
        "Introduction to the course": [
          "Course introduction and watching strategy",
          "WHAT NOT TO EXPECT",
          "Installing Node Js"
        ],
        "Moving our skills to cloud 9": [
          "Creating account and workspace on cloud 9",
          "A tour to cloud 9 interface",
          "Getting Exercise Files",
          "Must to know linux basics for cloud 9",
          "Task to brush up your skills",
          "Solution of the task"
        ],
        "Introduction to NPM": [
          "NPM and installing our first package",
          "Task to install NPM package",
          "Solution to NPM package install",
          "OPTIONAL - How to start node server and launch application"
        ],
        "Basic features of node JS": [
          "Javascript global vs node global",
          "Node process in detail",
          "Learn to read docs for processes in Nodejs",
          "Task to print heap size n other things",
          "Solution of Task",
          "Asking for dinner, a readline app",
          "Events in nodeJS",
          "Creating and exporting custom modules",
          "Child process part 1",
          "Child process part 2"
        ],
        "Advance features of nodeJs": [
          "Task and solution for file system",
          "HTTPS request and downloading a page",
          "Creating web server",
          "Creating API server",
          "HTTPSTER npm install for local server"
        ],
        "Optional analysis of express app on nodejs": [
          "Analysis of previous app",
          "Creating express app, views and ejs",
          "EJS in detail"
        ],
        "Thanks and future updates": [
          "Thanks note"
        ]
      },
      "requirements": [
        "Basics of JavaScript should already be under your belt.",
        "We assume that you also know a little about HTML too",
        "Any text editor will work."
      ],
      "description": "Welcome to “Be a NodeJS expert from scratch”.  NodeJS is the most popular and current technology in web development sector. It allows you to take your javascript knowledge to next level. You can now write client side and server side code in just 1 language, javascript.\nBefore jumping into the course we expect you to have little knowledge about javascript. We don’t expect you to be guru of javascript but at least knowledge about writing loops and declaring variable is a must to have under your belt. We will not be spending hours and hour about the sidebars explaining javascript and making course unnecessary long, just to increase time. No, we don’t do that.\nThe course will give you a detail understanding about nodejs and you will learn under the hood concept. Entire course will give you small challenges that will help you to push a little to work little harder. After that we will present our solution to check if you did it right or need a little work to be done. We have also focused in teaching the documentation reading process. Once you are able to read the docs, problem will become, No Problem to you in no time.\nWe will explain the concept of creating your own web and API server. You will learn to install NPM’s and writing your own modules. The course duration is not very long, so that you can complete in just a weekend and start doing some work in it. We will be working on cloud 9, because working on a live server and local host is sometimes different and produces unnecessary challenges.\nNodeJS is a powerful technology and it is surely to grow in future too. It’s perfect time to get deep into nodejs and take your javascript knowledge to next level. Let’s rock and roll into course. Join in and say hello inside the course.",
      "target_audience": [
        "If you don't know even the basics of javascript, this course is not for you.",
        "ideal for those, who wants to be node js developer",
        "those who don't have server side knowledge but wants to gain it",
        "those who wants to write client and server side code in just 1 language i.e. javascipt"
      ]
    },
    {
      "title": "Leaflet for Beginners",
      "url": "https://www.udemy.com/course/leaflet-for-begineers/",
      "bio": "Your gateway for becoming WebGIS developer",
      "objectives": [
        "Getting started with WebGIS development using Leaflet",
        "Spatial data representation using Leaflet",
        "Hands-on through live project",
        "Working with add-ons and extension"
      ],
      "course_content": {
        "Introduction": [
          "A quick overview",
          "What is GIS?",
          "Getting started with application development",
          "Adding layer switcher and measurement"
        ],
        "Adding data and popups": [
          "Adding Point, Line and Polygon with Popup",
          "Adding GeoJSON data"
        ],
        "Hands on session": [
          "Office locator application development"
        ],
        "Data representation": [
          "Choropleth Maps",
          "Proportional Symbol"
        ],
        "Advanced functions": [
          "Routing application"
        ],
        "Additional lectures": [
          "Building career in GIS",
          "Pros and Cons of Career in GIS"
        ]
      },
      "requirements": [
        "Interest in web application development, little bit of HTML, CSS and JavaScript"
      ],
      "description": "Kickstart your journey as WebGIS Developer with Leaflet\nUnlock the power of interactive maps and spatial data visualization with our comprehensive training course on WebGIS Development using Leaflet. Whether you're a GIS professional, a web developer looking to integrate mapping functionalities, or a student eager to enhance your skill set, this course is designed to equip you with practical knowledge and hands-on experience.\nWhat You'll Learn:\nFundamentals of GIS: Understand the core concepts of GIS and its applications in various industries.\nIntroduction to Leaflet: Dive into Leaflet, the leading open-source JavaScript library for interactive maps. Learn its architecture, features, and how to leverage its capabilities.\nCreating Interactive Maps: Build responsive and engaging maps with Leaflet. Explore different map layers, markers, pop-ups, and overlays.\nWorking with Spatial Data: Integrate spatial data from various sources, including GeoJSON, CSV, and APIs, to enhance your maps.\nCustomizing Maps: Tailor maps to your specific needs using plugins, custom styling, and advanced features of Leaflet.\nWebGIS Applications: Explore real-world applications of WebGIS using Leaflet across industries such as urban planning, environmental monitoring, logistics, and more.\nWhy Choose Our Course:\nHands-on Learning: Gain practical experience through guided exercises and projects.\nExpert Guidance: Learn from experienced instructors with a passion for GIS and web development.\nFlexibility: Study at your own pace with our flexible online learning platform.\nCareer Enhancement: Acquire skills that are in high demand across industries worldwide.\nWho Should Attend:\nGIS Professionals looking to expand their web development skills.\nWeb Developers interested in adding mapping capabilities to their projects.\nStudents and enthusiasts eager to explore the intersection of GIS and web technologies.\nPrerequisites:\nBasic knowledge of HTML, CSS, and JavaScript is recommended to fully benefit from this course.\nTake the first step towards building careen in WebGIS Development with Leaflet. Enroll now and embark on a journey to create impactful, interactive maps that drive insights and innovation.",
      "target_audience": [
        "GIS enthusiasts, newbie and experienced developers"
      ]
    },
    {
      "title": "Tailwind CSS with Project",
      "url": "https://www.udemy.com/course/tailwind-css-with-project/",
      "bio": "Learn Tailwind CSS from scratch! Make good looking designs quickly.",
      "objectives": [
        "How to use Tailwind CSS classes",
        "Make good looking designs",
        "Reducing bundle sizes",
        "How to customize Tailwind",
        "Using Tailwind in VS Code",
        "Creating common components",
        "Tailwind css 3.0",
        "Deploying it to Netlify",
        "Alpine",
        "vite JS installation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic Concepts": [
          "Background Classes and Shades",
          "Element Sizing & Tailwind's Numbering System",
          "Padding & Margins",
          "Styling Text",
          "Borders and Radius",
          "Display Modes",
          "Responsive Design",
          "Pseudo Classes",
          "Transitions, Transforms and Animations",
          "Gradients",
          "Other Utilities"
        ],
        "Layout Concepts": [
          "Layout and Positioning",
          "Flexbox Part-1",
          "Flexbox Part-2",
          "Space Between Utilities",
          "Block Gallery Challenge",
          "Grid"
        ],
        "Creating Custom Components": [
          "Basic Card Component with no image",
          "Card with and image",
          "Horizontal and Responsive Card",
          "Basic Buttons",
          "Outlined Button",
          "Grouped and with Icon Buttons",
          "Basic Form",
          "Minimal Login Form",
          "Floating Label Form"
        ],
        "Building a Course Project": [
          "Installing TailwindCSS",
          "Deploying to Netlify",
          "Tailwind in VS Code",
          "Debug Screen Plugin"
        ],
        "Header/Navigation Section": [
          "Header Layout",
          "Navigation Styling",
          "Navigation Responsive"
        ],
        "Hero Section": [
          "Hero Layout",
          "Hero Styling",
          "Hero Decoration",
          "Hero Responsive"
        ],
        "About Me Section": [
          "About Layout",
          "About Styling",
          "About Responsive"
        ],
        "What You'll Learn Section": [
          "What You'll Learn Layout",
          "What You'll Learn Styling",
          "What You'll Learn Responsive"
        ],
        "What You'll Build Section": [
          "Layout + Styling + Responsive"
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS"
      ],
      "description": "Tailwind CSS is a utility–first framework for rapidly building custom designs. This tutorial will teach your Tailwind from scratch.\nDuring this course we will be exploring the features of Tailwind CSS. As a quick recap, Tailwind is a utility–first framework designed to speed up the design process by completely removing the need for custom CSS.\nIn the past, every HTML element would get a single class and that class would contain a lot of custom CSS in a separate CSS file. Though this is still the general practice, this practice leads to huge CSS files, reduces the ease of maintaining CSS and yields overall poorer developer experience.\nAnother advantage of a utility framework is its superior performance with caching due to not busting the cache for small CSS changes.\nTailwind has been designed with incredible sensible defaults to make your designs look and feel polished and designed through the careful use of color palettes, color shades, sizing consistency and modern web best–practices. It’s also worth noting, that Tailwind is mobile–first and has an easy naming convention with responsive designs built–in.\nNeed some customizations?\nTailwind’s robust customization system will allow you to customize/tweak/modify everything in the framework through the use of the tailwind.config.js file.\nYou Will Learn:\nAll the types of utility classes\nHow to use the utility classes properly in our project\nHow to customize the existing utilities of Tailwind\nHow to add new utility classes to our project\nTailwind Layouts\nResponsive web design\nAnd Much More...",
      "target_audience": [
        "Anyone who wants to learn modern method of style web content with the most modern tool out there"
      ]
    },
    {
      "title": "Modern JavaScript",
      "url": "https://www.udemy.com/course/modern-javascript-b/",
      "bio": "Learn modern JavaScript from scratch: ES2024 syntax, functions, objects, async programming, and best practices",
      "objectives": [
        "Understand and apply modern JavaScript syntax (ES2024), including types, expressions, and operators",
        "Write and structure JavaScript code using functions, closures, arrays, and objects",
        "Leverage prototypes, classes, modules, and modern collections (Map, Set) for scalable architecture",
        "Master asynchronous JavaScript with Promises, async/await, and the event loop"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to Modern JavaScript course",
          "Essential tools and resources"
        ],
        "JavaScript Fundamentals Unveiled": [
          "Core features of JavaScript",
          "Lexical structure",
          "Identifiers and reserved words",
          "Data types and literals",
          "Sample code: Examples of different literals"
        ],
        "Mastering Expressions and Operators": [
          "Expressions",
          "Operators, part 1",
          "Sample code: Arithmetic operators and string concatenation",
          "Operators, part 2",
          "Operators, part 3",
          "Operators, part 4",
          "Sample code: Using different operators",
          "Implicit type conversion",
          "Sample code: Type conversion examples"
        ],
        "Diving into JavaScript Statements": [
          "General info about statements",
          "Variable declarations",
          "Sample code: Variable declaration statements",
          "Conditional branching",
          "Loops",
          "Sample code: Branch statements and loops",
          "Unconditional branching",
          "Mastering exception handling",
          "Sample code: Handling and throwing exceptions"
        ],
        "Functions": [
          "Defining functions",
          "Function parameters",
          "Invoking functions",
          "Sample code: Defining and invoking functions",
          "Functions as objects",
          "Closures",
          "Sample code: Using closures"
        ],
        "Unleashing the Power of Arrays": [
          "Creating arrays",
          "Array indexes and length",
          "Traversing arrays",
          "Sample code: Creating arrays and working with elements",
          "Array methods, part 1",
          "Array methods, part 2",
          "Sample code: Using various array methods",
          "Array-like objects"
        ],
        "Exploring JavaScript's Built-in Treasures": [
          "Global object and its elements",
          "Numbers",
          "Date and time",
          "Sample code: Working with Number and Date",
          "String object",
          "Regular expressions",
          "Sample code: Strings and regular expressions",
          "The symbol type"
        ],
        "Working with Custom Objects": [
          "Creating objects",
          "Working with properties",
          "Sample code: Creating objects and using their properties",
          "Understanding property metadata",
          "Exploring object metadata",
          "Sample code: Property metadata and object metadata"
        ],
        "Prototypes and Classes": [
          "Understanding prototypes",
          "Sample code: Working with prototypes",
          "Constructor functions",
          "Sample code: Modelling some aspects of OOP",
          "Classes",
          "Class inheritance",
          "Sample code: Examples of classes"
        ],
        "Iterables and Collections": [
          "Iterables",
          "Generator functions and generators",
          "Sample code: Iterables and generator functions",
          "Map and Set collections",
          "Buffers, views, and typed arrays",
          "Sample code: Standard collections and typed arrays"
        ]
      },
      "requirements": [
        "No prior knowledge of JavaScript is required. Basic familiarity with programming concepts (like variables and conditions) is helpful but not mandatory. All tools used are free and instructions will be provided."
      ],
      "description": "Modern JavaScript is a comprehensive course that takes you deep into the core of the JavaScript language — from the very basics to advanced concepts. Whether you're new to JavaScript or want to fill in knowledge gaps, this course is designed to help you understand how the language really works.\nWe’ll cover the full range of topics, including ES2024 syntax, types and expressions, functions and closures, arrays, objects, prototypes, classes, asynchronous programming with promises and async/await, and much more. Along the way, you'll also learn modern coding standards and best practices that professionals use in real-world projects.\nThis course focuses on clear explanations, well-structured examples, and hands-on practice to reinforce your learning. By the end, you'll be able to confidently write clean, efficient, and modern JavaScript code — and truly understand what you're doing.\nIn addition to mastering the syntax and structure of the language, you’ll explore common pitfalls, subtle language behaviors, and advanced JavaScript features that are often overlooked in beginner-level courses. The content is designed to help you build a solid mental model of how JavaScript works under the hood.\nWhether you're aiming to become a front-end or full-stack developer, preparing for technical interviews, or simply expanding your skillset — this course will provide you with a strong foundation and the confidence to apply JavaScript in real projects.",
      "target_audience": [
        "Beginner and intermediate developers who want to learn modern JavaScript from the ground up or strengthen their understanding of core language features and best practices."
      ]
    },
    {
      "title": "HTML CSS JAVASCRIPT Beginner Projects step by step",
      "url": "https://www.udemy.com/course/html-css-javascript-beginner-projects-step-by-step/",
      "bio": "Learn ( HTML CSS JAVASCRIPT ) by building projects and acquiring new skills.",
      "objectives": [
        "Build Web Page Content with HTML",
        "Make web pages content look nice with CSS",
        "Create interaction on web pages with JavaScript",
        "Build a calculator",
        "Build an analogue clock",
        "Build a todo app"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Building wen applications with HTML,CSS,JavaScript",
          "What is HTML",
          "What is CSS",
          "What is JavaScript",
          "Installing Text Editor",
          "Overview of HTML, CSS ,JavaScript"
        ],
        "Create an Analogue Clock": [
          "What we will create",
          "Creating project folder and HTML",
          "Create a canvas object",
          "Create clock face",
          "Draw clock numbers",
          "Draw clock time and hand"
        ],
        "Create a Calculator": [
          "Overview",
          "What we will create",
          "Create directories and files",
          "Creating the calculator structure with HTML",
          "Styling the calculator with CSS",
          "Adding functionally with JavaScript"
        ],
        "Create a Todo App": [
          "Overview",
          "What we will create",
          "Create project directory and files",
          "Create app structure with HTML",
          "Add style to app with CSS",
          "Add functionality with JavaScript: Part 1",
          "Add functionality with JavaScript: Part 2"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML advised",
        "Basic knowledge of CSS advised",
        "Basic knowledge of JavaScript advised"
      ],
      "description": "HTML (HyperText Markup Language) is the most basic building block of the Web. It defines the meaning and structure of web content. Hypertext\" refers to links that connect web pages to one another, either within a single website or between websites. Links are a fundamental aspect of the Web. By uploading content to the Internet and linking it to pages created by other people, you become an active participant in the World Wide Web. HTML uses markup to annotate text, images, and other content for display in a Web browser.\nCascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media.  CSS (Cascading Style Sheets) is used to style and layout web pages — for example, to alter the font, color, size, and spacing of your content, split it into multiple columns, or add animations and other decorative features.\nJavaScript is a programming language that adds interactivity to your website. This happens in games, in the behaviour of responses when buttons are pressed or with data entry on forms; with dynamic styling; with animation, etc.",
      "target_audience": [
        "Beginner Web Developers",
        "Beginners to programming"
      ]
    },
    {
      "title": "PHP for Beginners: Create a Todolist with PHP and MySQL",
      "url": "https://www.udemy.com/course/php-for-beginners-create-a-todolist-with-php-and-mysql-2021/",
      "bio": "Utilize What you Learned in PHP and MySQL and PDO by Building This Todolist",
      "objectives": [
        "Learn to integrate Bootsrap in your Project",
        "Setup the needed tools to start creating your web projects",
        "Implement the basic components of possibly every web project you will ever make",
        "Learn how to create update and delete and display data",
        "Integrate different parts of code so they can work together",
        "Get a glimpse of how web apps are created",
        "Install PHPMyAdmin and Xampp",
        "Setup Sublime Text Editor"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing Sublime"
        ],
        "Creating The Todolist": [
          "Preparing",
          "Creating",
          "Displaying the Data",
          "Deleting the Data",
          "Updating the Data"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ],
        "Build Todolist with PHP OOP": [
          "Before you Start the Project",
          "Folder Structure and Template of the Project",
          "Creating Autoload File",
          "Connecting to Database",
          "Creating Post Model pt.1",
          "Creating Post Model pt.2"
        ]
      },
      "requirements": [
        "PHP is mandatory so as MySQL"
      ],
      "description": "This short course which you can consume in less than a day is aimed to get you going with your PHP and MySQL skills. It will help especially if you are stuck in the tutorial hell and do not know how to begin and when to start your own personal projects. And I'm not saying that it is a big project but it is enough for a start.\n\n\nI made sure that understand each component of the todolist that we will be going to build that is clear concise and convenient. After completing the course I would say that you are going to be confident to start building complex projects of course with searching.\n\n\nSo look what you are going to learn  here:\n\n\n-Setting up the proper tools for basic web development\n-Making a simple form for user input\n-Performing create functionality\n-Performing read functionality\n-Performing delete functionality\n-Performing update functionality\n-Putting everything together\n\n\nSimple, right? Of course, it is. It does not have to be super difficult to build your first project. These actionable short videos will train your web development muscles so to create and innovate. If you are hyped up as I am then do it now. Join the course and start building :)",
      "target_audience": [
        "Anyone who has PHP knowledge",
        "Anyone who has MySQL knowledge",
        "Anyone who wants to apply what he or she learned in PHP & MySQL"
      ]
    },
    {
      "title": "CSS Animation Build 5 Projects",
      "url": "https://www.udemy.com/course/css-animation-masterclass/",
      "bio": "Learn and Become a Master of CSS Animations by building 5 Unique Projects",
      "objectives": [
        "CSS Animations",
        "CSS Transitions"
      ],
      "course_content": {
        "CSS Review": [
          "Introduction",
          "CSS Position Absolute and Relative",
          "CSS Animation Review"
        ],
        "CSS Animation Projects": [
          "Project 1 - Animated Background",
          "Project 2 - Animated Button",
          "Project 3 - Flipping Card",
          "Project 4 - Spinning Border Buttons",
          "Project 5 - Blur Background"
        ]
      },
      "requirements": [
        "Basics of HTML and CSS"
      ],
      "description": "In this course you are going to learn all about CSS3 Animations and transitions, and to make things even more interesting, you are going to build 5 exciting projects, that you can use on your personal websites.\nBy taking this course you will learn the following skills:\nLEARNING OUTCOMES\nCSS Animations\nCSS Transitions\nAnd don’t worry, I will cover everything at a very slow pace, and explain each step of the process, if you have any questions, post them down and we will be happy to help you :)",
      "target_audience": [
        "Beginner Web Developer",
        "Junior Developer"
      ]
    },
    {
      "title": "Python Django Web Development of NLP App",
      "url": "https://www.udemy.com/course/develop-python-django-web-nlp-app/",
      "bio": "Django Web Development with Python and Spacy",
      "objectives": [
        "How to install,create and activate virtual environment",
        "How to create a project in Django",
        "How to create an app in Django",
        "How to combine Spacy and Python for NLP in Django",
        "How to perform regex in Django",
        "How to perform lemmatization in Django",
        "How to perform part of speech tagging in Django",
        "How to perform named entity recognition in Django",
        "How to create and extend templates in Django",
        "Basic front-end styling using Bootstrap in Django"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and project preview"
        ],
        "Installation and creating Django project and Django app": [
          "Python Installation Guide",
          "Installing Django and Spacy,creating and activating a virtual environment",
          "Creating Django project and Django app"
        ],
        "Installing Sublime,project settings and project and app urls,creating templates": [
          "Installing Sublime,project settings and project and app urls,creating templates"
        ],
        "Create basic functions,create base.html and home.html,extending template": [
          "Basic functions,creating base.html and home.html,extending templates",
          "Creating the home page"
        ],
        "Functions in views.py": [
          "regex function",
          "lemma function",
          "pos function",
          "pos function correction and ner function"
        ],
        "Templates": [
          "Filling the regex.html template",
          "Filling the lemma,pos and ner templates"
        ]
      },
      "requirements": [
        "Python programming language",
        "NLP",
        "Internet"
      ],
      "description": "Welcome to the \"Python Django Web Development of NLP App\" course!\n\n\nThis is a project based course.In this course we will use the Django web framework coupled with Python programming language and Spacy library for Natural Language Processing in order to create a web NLP app.\nThe web NLP app that we'll create has 4 distinct functionalities:\n1.Performs regex on US Phone Numbers\n2.Performs lemmatization on text\n3.Performs part of speech tagging on text\n4.Performs named entity recognition on text\n\n\nIn this course you will learn how to:\n-Install,create and activate virtual environment\n-Create Django project and Django app\n-Integrate Python and Spacy with Django in order to perform regex,lemmatization,part of speech tagging and named entity recognition\n-Create templates and extend templates in Django\n-Basic styling for the front-end using Bootstrap in Django\nand much more...\n\n\nBecause this is a project based course you will get a real hands on experience building a real web app.\nAnd that is the best way to learn fast.\n\n\nI hope that you will enjoy the course and learn a lot.\n\n\nSee you in class!",
      "target_audience": [
        "Beginner to intermediate Python and Django web developers curious about Natural Language Processing"
      ]
    },
    {
      "title": "Job Portal Application With React , Ant D , Firebase",
      "url": "https://www.udemy.com/course/job-portal-application-with-react-ant-d-firebase/",
      "bio": "Build a real time job portal application with react and firebase with real time notifications functionality",
      "objectives": [
        "React Firebase Integration",
        "User Authentication with Fire store database",
        "Separate UI for normal users and admin",
        "Admin can access all the users and jobs information.",
        "Every user account and job post must accepted by the admin. Then only it will be listed in the database.",
        "Live notifications functionality for Users / Recruiters / Admin.",
        "Job application functionality",
        "Recruiter can accept or reject the application of a candidate on the fly.",
        "When the application status updates , the candidate will receive the notification.",
        "When the new job post request is raised , admin will receive notification.",
        "When the admin accept / reject the job post , recruiter will receive the notification",
        "Recruiter can make the job status active / inactive whenever he wants."
      ],
      "course_content": {
        "Project Demo and Source Code": [
          "Promo / Source Code",
          "Project Demo"
        ],
        "Introduction & Setup": [
          "React and Firebase Setup",
          "Ant Design Setup"
        ],
        "Login Register UI": [
          "Login Form",
          "Register Form"
        ],
        "Login Register API": [
          "Register User API",
          "Login User API"
        ],
        "Protected Routes and Redux Setup": [
          "Protected Route",
          "Redux Setup",
          "Show Loading and Hide Loading"
        ],
        "Building Layout": [
          "Layout Part - 1",
          "Layout Part - 2"
        ],
        "Update User Profile": [
          "Profile Page",
          "Personal Details",
          "Education and Experience",
          "Update Profile"
        ],
        "Add Job": [
          "Add Job",
          "Add Job 2",
          "Display Jobs",
          "Edit Job",
          "Delete Job"
        ],
        "Admin Pages": [
          "Admin Access",
          "All Jobs and Users Access"
        ],
        "Apply Job": [
          "Display Jobs in Home Page",
          "Job Description",
          "Apply Job"
        ]
      },
      "requirements": [
        "React",
        "Javascript"
      ],
      "description": "In this course you will learn the following concepts.\n\n\nReact Firebase Integration\nUser Authentication with Fire store database\nSeparate UI for normal users and admin\nAdmin can access all the users and jobs information.\nEvery user account and job post must accepted by the admin. Then only it will be listed in the database.\nLive notifications functionality for Users / Recruiters / Admin.\nJob application functionality\nRecruiter can accept or reject the application of a candidate on the fly.\nWhen the application status updates , the candidate will receive the notification.\nWhen the new job post request is raised , admin will receive notification.\nWhen the admin accept / reject the job post , recruiter will receive the notification\nRecruiter can make the job status active / inactive whenever he wants.\nReact is a JavaScript library for building user interfaces.\nDeclarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.\nComponent-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.\nLearn Once, Write Anywhere: We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using.\nFirebase is an app development platform that helps you build and grow apps and games users love. Backed by Google and trusted by millions of businesses around the world.",
      "target_audience": [
        "Front End Developers",
        "Full Stack Developers",
        "MERN Stack Developers"
      ]
    },
    {
      "title": "Next.js 15 & Supabase - Organic Foods Marketplace App",
      "url": "https://www.udemy.com/course/nextjs-15-supabase-organic-foods-marketplace-app/",
      "bio": "Build a Full-Stack Organic Foods Marketplace with Next.js 15, Supabase, Shadcn , Tailwind CSS , Clerk and Zustand etc.",
      "objectives": [
        "Build a Full-Stack Organic Foods Marketplace using Next.js 15, Supabase, and Shadcn from scratch.",
        "Implement Secure Authentication & User Roles with Clerk and Supabase for admins, sellers, and customers.",
        "Develop Advanced E-Commerce Features, including product management, search and filtering, shopping cart, and order processing.",
        "Integrate Secure Payment Processing using Stripe for seamless checkout transactions."
      ],
      "course_content": {
        "Introduction": [
          "Create next app",
          "Shadcn Intro",
          "Install and setup shadcn",
          "Shadcn theme"
        ],
        "Authentication with Clerk": [
          "Clerk Intro and source code",
          "Homepage",
          "Install and setup shadcn",
          "Add sign-in and sign-up components",
          "Style clerk components",
          "Sign-up , Sign-in , Sign-out",
          "Access clerk user object",
          "Protecting private routes"
        ],
        "Save user to supabase": [
          "Supabase setup",
          "Create user_profiles table",
          "Save user"
        ],
        "Layout": [
          "Layout structure",
          "Header",
          "Menu items - part 1",
          "Menu items - part 2",
          "Manual logout",
          "Showing spinner",
          "Global store"
        ],
        "Products CRUD": [
          "Products module intro",
          "Products folder structure",
          "Product form - part 1",
          "Product form - part 2",
          "Save product images to supabase storage",
          "Add product",
          "Display products",
          "Edit product",
          "Delete product"
        ],
        "Homepage": [
          "Display products in homepage",
          "Product card styling",
          "Products cart store setup",
          "Cart actions"
        ],
        "Cart page": [
          "Cart page - part 1",
          "Cart page - part 2",
          "Cart page - part 3"
        ],
        "Filters in homepage": [
          "Filters UI",
          "Filters Logic"
        ],
        "Addresses": [
          "Addresses table and folder structure",
          "Addresses form",
          "Display addresses"
        ],
        "Checkout page": [
          "Show and select address",
          "Stripe intro",
          "Stripe install and setup",
          "Payment intent api",
          "Payment form - part 1",
          "Save order",
          "Save order and order items"
        ]
      },
      "requirements": [
        "Basic knowledge of Next.js"
      ],
      "description": "Welcome to the Next.js v15 Organic Foods Marketplace with Supabase and Shadcn course!\nAre you ready to take your full-stack development skills to the next level? In this hands-on, project-based course, you’ll build a fully functional, modern e-commerce marketplace using Next.js 15, Supabase, Shadcn, Clerk, Stripe, Zustand, and more.\nWhether you're a beginner looking to enhance your portfolio or an experienced developer wanting to master the latest tech stack, this course will provide you with everything you need to build and deploy a real-world e-commerce platform.\n\nWhat You Will Learn\n\n\nBuild a secure authentication system with Clerk and Supabase\nCreate user-friendly dashboards for admins, sellers, and customers\nImplement multi-role management (admin, seller, customer)\nDevelop a complete product management system with CRUD functionality\nEnable product image uploads with Supabase Storage\nImplement advanced search and filtering using Supabase's full-text search\nBuild a shopping cart system with Zustand state management\nIntegrate secure payments with Stripe checkout\nManage orders for customers and sellers\nDesign a responsive and modern UI with Shadcn and Tailwind CSS\nFollow real-world best practices for building scalable applications\nDeploy the project to Vercel with a custom domain\n\n\n\n\nTech Stack Covered\n\n\nNext.js 15 – A powerful React framework for the frontend\nSupabase – A backend, database, and storage solution\nShadcn – A modern design system for UI components\nTailwind CSS – Utility-first styling for a responsive design\nClerk – Authentication and user management\nZustand – Lightweight and efficient state management\nStripe – Secure and seamless payment processing\nVercel – Fast and easy deployment\n\n\nBy the end of this course, you’ll have the skills to build and launch a fully functional e-commerce marketplace.\nEnroll now and start building!",
      "target_audience": [
        "Frontend and Full-Stack Developers who want to learn how to build and deploy a complete e-commerce marketplace.",
        "Beginners in Web Development looking for a structured, hands-on project to add to their portfolio."
      ]
    },
    {
      "title": "Build Instagram Clone using PHP,MYSQL +Js",
      "url": "https://www.udemy.com/course/build-instagram-clone-using-php-mysql-js/",
      "bio": "Learn PHP, MYSQL and more by making the ultimate Instagram clone website completely from scratch!",
      "objectives": [
        "How to create a social network just like Instagram",
        "Learn good quality of object oriented programming (OOP)",
        "Learn to rewrite clean URLs like Instagram",
        "Learn to create secure password hash",
        "Learn to create MySQL Database Relationships",
        "Know how to easily use PDO with MySQL databases",
        "Learn how to create story",
        "Learn to create text story"
      ],
      "course_content": {
        "Course Intro:Info & Setup": [
          "Setup",
          "Creating the necessary files and resources"
        ],
        "Creating the LogIn and Register Page": [
          "Creating the Log In Page",
          "Styling the Log In Page",
          "Working on MetaData",
          "Show Password functionalities",
          "Slideshow functionalities",
          "Setting default timezone"
        ],
        "Form Submission & Validation": [
          "Form Submission",
          "Creating the Check Empty Field Method",
          "Validating the Username,FullName and Password",
          "Validating the Email"
        ],
        "Database": [
          "Creating the Database",
          "Connecting to MySQL Database"
        ],
        "Check for uniqueness of user": [
          "Checking for uniqueness of username and email"
        ],
        "Register and Login User": [
          "Creating the register user method",
          "Check LoggedIn",
          "Creating the login user method",
          "Refactor our Code"
        ],
        "Error Page": [
          "Creating the Error Page"
        ],
        "Home Page": [
          "Creating the Header Section",
          "Styling the Header Section",
          "Creating the Logout Modal",
          "Logout Fuctionalities",
          "Creating the Logout Page",
          "Creating the getUserDataFromSession method"
        ],
        "Search": [
          "Creating the search method",
          "Creating the live search functionalities"
        ],
        "Follow": [
          "Creating the main section layout",
          "Creating the follow table",
          "Creating WhoToFollow method",
          "Creating isFollowing method",
          "Creating follow method",
          "Creating unfollow method",
          "Creating follow and unfollow functionalities",
          "Creating getDetails method",
          "Creating peopleMightKnow method",
          "Creating the aside footer section"
        ]
      },
      "requirements": [
        "Need to have a basic knowledge on HTML, CSS, PHP and JAVASCRIPT"
      ],
      "description": "Do you want to be pro web developer or want to create social network engine just like Instagram?\nDo you want level up your coding skill in php, mysql and javascript?\nIf so, you’re in the right place! This course will guide you step by step in creating your own Instagram clone COMPLETELY from scratch.\nWe’re talking the kind of website that will amaze anybody that sees it. The kind of website that will get you hired in no time!\nOkay so what’s the course about?\nI will personally guide you, step by step, in creating your own social network site just like Instagram complete with:\nPosts\nStory\nLikes, comments\nProfile pages\nFollowing and followers support\nClean Friendly URLs\nProfile pictures\nand much more!\nWhether you are a beginner* or an experienced programmer, this course will be massively beneficial to you.\nWhy should I take the course?\nIn the programming world, the “big 4” often consists of Google, Microsoft, Facebook and Amazon. To get a job at any of these companies, you absolutely MUST know the essentials: HTML, CSS, PHP, JQuery, JavaScript and MySQL.\nIf you take this course, you will have nothing to worry about because we use all of these skills extensively!\nSupport:\nBy enrolling in this course, you will have the COMPLETE support from Christopher Glikpo. I'm always ready to answer any question you may have. Programming issues, errors, feature requests, general programming advice - it doesn't matter, I'm always happy to help! I always aim to respond to questions within a few hours and it's also worth noting that I've answered EVERY SINGLE question asked so far.\nProject portfolio:\nThe site you create in this course will be the highlight of your project portfolio! Any potential employer who see's this project on your resume will want to hear all about it. The reason? They know that a project like this means you're familiar with the wide range of technical skills they need their employees to know.\n\nFun!\nFinally, this project is a lot of fun and I know you'll have a great time implementing your own unique ideas as well as the ones we implement together. What are you waiting for?\n\n\n* Although this course is suitable for beginners, it is not an introduction to development course. I won't go into much detail when explaining the basic programming concepts but I'm here to help if you want more of an explanation - just let me know!",
      "target_audience": [
        "Beginner or Intermediate level Web developer who wants to level up his skill on full stack web development and the enthusiastic who wants to create a social site engine just like Instagram"
      ]
    },
    {
      "title": "Advanced Server-Side Programming with Node.js",
      "url": "https://www.udemy.com/course/advanced-server-side-programming-with-nodejs/",
      "bio": "Build advanced secure applications and APIs with Node.js",
      "objectives": [
        "Learn how Node_js' non-IO blocking technology works in depth",
        "Get familiar with the MVC architecture",
        "Create authentication patterns using PassportJS",
        "Encrypt sensitive user data to protect your data from malware attacks",
        "Use OAuth to set up Facebook, Twitter, and social-media logins",
        "Learn how to use templating engines, and make powerful dynamic applications using EJS",
        "Protect your application and users against common threats and learn to use the Helmet module",
        "Build a performance-efficient, dynamic web blog using what you've learned"
      ],
      "course_content": {
        "Advanced Node.js Introduction": [
          "The Course Overview",
          "Structuring Our Application with MVC Architecture and Git",
          "Mongoose - Introduction to MongoDB Object Modelling",
          "Mongoose - CRUD Operations and Express Review"
        ],
        "Template Engines": [
          "What is Templating and EJS?",
          "Sending Data From Our Server-Side",
          "Looping Through Data and Conditional Rendering with EJS",
          "Include Tag with EJS"
        ],
        "Authentication": [
          "Introduction to OAuth",
          "Setting up Routes for Facebook Authentication",
          "Setting up a Facebook Strategy with the Passport Module",
          "Setting up Sessions and Testing Our Facebook Logins",
          "Setting up Local Users Using Mongoose and Sessions"
        ],
        "Secure Coding with Node.js": [
          "Introduction to Encrypting Sensitive Data",
          "Encrypting User Passwords",
          "Confirming Our Newly Encrypted Passwords"
        ],
        "Creating a Secure Web Blog": [
          "Project Setup",
          "Creating the Database Schemas",
          "Creating Local Authentication",
          "Creating Facebook Authentication",
          "Creating a Search and Dashboard Page",
          "Creating a Profile and Settings Layout",
          "Setting up Nodemailer to Send Email Notifications",
          "Deploying Our Application to Heroku"
        ]
      },
      "requirements": [
        "Developers who have a basic knowledge of Node_js"
      ],
      "description": "Node.js is a powerful, performance-efficient language. Its non-IO blocking technology makes it perfect for creating highly scalable web applications built around user interaction.\nIn this course, you will learn to create highly secure and scalable applications using various languages and frameworks such as EJS, PassportJS, OAuth (for user authentication with Facebook, Twitter and more), the Helmet module, and encryption with BCrypt. You will also learn about the MVC architecture to make sure your codebase is maintainable and scalable, making you a better developer overall.\nThis course is for you if you have a basic understanding of Node.js and want to take your web applications to the next level in security and scalability by learning in-demand skills.\nAbout the Author\nMohammad Hunan Chughtai is a full stack web developer in NYC with a computer science and mathematics background. He has worked on many stacks including PHP, Ruby on Rails and of course Node.js/MERN stacks. He has built many websites for clients using Node.js, express.js, and other JavaScript technologies. He has been commended for his focus on writing highly scalable and secure code. Mohammad has led teams in developing functional and object-oriented software. He hopes to be a driving force in the generation of software developers who will solve large-scale issues, ultimately leading to a better, more friendly, and efficient world. Previously, he worked as a math instructor, teaching skills for standardized logic testing, such as the SAT.\nIn his spare time, he likes to learn new technologies in order to build useful and exciting software and hardware projects with friends.",
      "target_audience": [
        "Developers who have a basic knowledge of Node_js and want to learn more advanced features and take their applications to the next level will greatly benefit from this video course."
      ]
    },
    {
      "title": "Build it with me: Leads management system web app",
      "url": "https://www.udemy.com/course/build-it-with-me-lead-management-system-web-app/",
      "bio": "Full-stack modern web development using ReactJS, GraphQL and AWS Amplify",
      "objectives": [
        "How to build a CRM-like web application with ReactJS, AWS Amplify, and GraphQL",
        "ReactJS",
        "Graphql",
        "AWS Amplify",
        "AWS Lambda",
        "AWS AppSync",
        "AWS Cognito Authentication",
        "AWS ElasticSearch",
        "Full-stack web development"
      ],
      "course_content": {},
      "requirements": [
        "ReactJS basics (hooks, components, context API, state management)",
        "EcmaScript/JavaScript basics (spread, rest, async, arrow functions, lexical variables, constants)"
      ],
      "description": "Upgrade your skill by learning full-stack modern web development. In this course for beginners to intermediate levels, we will create a CRM-like web application from scratch using ReactJS, AWS Amplify, and GraphQL. We will conquer all challenges along the way and deploy our code from DEV to UAT and PRODUCTION and make it available to our intended clients! We will also set up and commit our codes to a Github repository.",
      "target_audience": [
        "People who are into ReactJS",
        "People who are into Amazon Web Services (AWS)",
        "People who are into full-stack web development",
        "People who are into modern web development"
      ]
    },
    {
      "title": "Blockchain and Web3 Development for Beginners (2025, Hindi)",
      "url": "https://www.udemy.com/course/blockchain-and-web3-development-for-beginners-hindi/",
      "bio": "Explore Blockchain, Web3 Ecosystem and eventually learn to create and deploy Decentralized apps!",
      "objectives": [
        "Grasp fundamental blockchain concepts, including Ethereum and smart contracts",
        "Create, test, and deploy smart contracts using Solidity",
        "Develop and integrate DApps with React, Metamask, and IPFS",
        "Utilize IPFS for storage and ComposeDB for decentralized cloud computing"
      ],
      "course_content": {
        "Week 1": [
          "Introduction to Blockchain",
          "Introduction to Ethereum"
        ],
        "Week 2": [
          "Solidity Programming",
          "ERC-20 Tokens",
          "ERC-721 Tokens (NFT)",
          "GitHub Repo for the Code",
          "Interact with Smart Contract",
          "Building Frontend of Dapp"
        ],
        "Week 3": [
          "Metamask Integration",
          "Building Dapp with React [Part 1]",
          "Building Dapp with React [Part 2]",
          "Building NFT Marketplace Dapp",
          "Deploy Smart Contract on Testnet"
        ],
        "Week 4": [
          "Interact with Dapp on Testnet",
          "Introduction to IPFS",
          "Integrate Dapp on IPFS",
          "Introduction to ENS",
          "Introduction to Decentralized Database"
        ],
        "Week 5": [
          "Implementing ComposeDB Dapp",
          "Decentralized Cloud Computing"
        ]
      },
      "requirements": [
        "Basic knowledge of Python and Javascript"
      ],
      "description": "Step into the future with our self-paced Blockchain and Web3 Development course (also referred as Web3 Bootcamp) in Hinglish (Hindi + English mixed)! This extensive course is perfect for both student and professionals who want to start their journey in the world of blockchain and decentralized applications. Over five weeks, you'll explore essential concepts and gain hands-on experience.\n\nStart with the basics of blockchain fundamentals and Ethereum. Learn Solidity programming, ERC-20 (Fungible Tokens), ERC-721 (Non-Fungible Tokens), smart contract interaction, and DApp frontend development. Write ERC-20 and ERC-721 contracts and also understand the difference between writing complete code from scratch vs using OpenZeppelin library.\n\nFurther, the course delves into integrating Metamask to webapps, building decentralized applications with React, and creating NFT marketplaces. You'll deploy smart contracts on testnets and interact with DApps. Discover IPFS for decentralized storage, and integrate your DApp on IPFS. The course also covers ENS (Ethereum Name Service) and decentralized databases.\n\nIn the final week, you will implement ComposeDB DApp and explore decentralized cloud computing. This course is packed with practical projects and real-world applications, ensuring you acquire the skills needed to excel in the Web3 domain. Join us today and start your journey in the decentralized web development!",
      "target_audience": [
        "Students and Professionals wanting to explore Web3 and Blockchain development"
      ]
    },
    {
      "title": "The Beginners Guide to WordPress Theme Development 2025",
      "url": "https://www.udemy.com/course/wordpress-theme-development-2025/",
      "bio": "Learn How to Get Started on Your Path to Becoming a Professional WordPress Theme Developer",
      "objectives": [
        "Learn How to Convert HTML Templates to Fully Functional, Highly Dynamic WordPress Themes",
        "Unlock Your Full Web Designer Potential by being able to Design any kind of Website and then Convert it into a WordPress Theme",
        "Learn the basics of PHP to Understand How WordPress Works",
        "Prepare Yourself to become an Advanced WordPress Developer or WordPress Engineer",
        "Understand WordPress at a much more advanced level",
        "Learn How to Be more Flexible with WordPress and do Advanced Customizations on WordPress Websites",
        "Understand Object Oriented Programming",
        "Build a Solid Foundation in the PHP Programming Language"
      ],
      "course_content": {
        "Analysis of WordPress and where it stands in the Industry in 2025": [
          "Understanding the Demand for WordPress Developers in 2025"
        ],
        "Introduction to PHP": [
          "What is echo in PHP and How to Write Comments",
          "What are Variables",
          "What are Functions",
          "What are Arrays",
          "IF and ELSE Conditional Statements",
          "Loops In PHP"
        ],
        "Setup Your Development Evironment": [
          "Installing XAMPP on Windows",
          "Installing XAMPP or MAMP on Mac OS",
          "Downloading and Setting up Our Code Editor"
        ],
        "Learn How to Install WordPress using XAMPP": [
          "Setup WordPress with Xampp in Less than 10 Minutes"
        ],
        "Optional Extra Learning: Convert an HTML Website to a Dynamic PHP Website": [
          "Convert an HTML Static Website to a Dynamic PHP Website",
          "Connecting a Database to Our PHP Website",
          "Understanding the Link between PHP and MySQL"
        ],
        "Install WordPress using Local": [
          "Download and Install Local"
        ],
        "Converting The HTML Website to a WordPress Theme": [
          "Understanding The File Structure of a WordPress Theme",
          "Lets Begin Creating Our Custom WordPress Theme",
          "Enqueueing Our Stylesheet files",
          "Enqueueing the JavaScript Files",
          "Completing the Setup of our Theme",
          "Important Information About WordPress Enqueue functions",
          "Troubleshooting and Loading the JavaScript Dependencies Correctly",
          "Making Our Menu Dynamic The WordPress Way",
          "The WordPress Loop in Action - Part 1",
          "The WordPress Loop in Action - Part 2",
          "Making Our Logo WordPress Dynamic",
          "Working with WordPress Widgets - Part 1",
          "Working with WordPress Widgets - Part 2"
        ]
      },
      "requirements": [
        "Should have some experience with building websites or working with a Content Management System",
        "Should have knowledge of HTML, CSS, JavaScript and Understand How the Web works",
        "Should Have a Desire to be a professional Web Developer and Pursue Web Development at a Professional Level",
        "Some basic PHP knowledge will be beneficial but it is not a requirement as you should be able to still convert an HTML Website into a WordPress Theme by completing the Course"
      ],
      "description": "WordPress Theme Development 2025\nYour Journey to becoming a professional WordPress Developer Starts here!\nIn this Course we will learn How to Convert an HTML Website to a WordPress theme. We will start off by understanding the basics of the PHP Programming Language, which is what WordPress is built on. This highly dynamic and functional programming language has given the developers of WordPress this amazing power which they have used to build a Content Management System which now powers about \"43.5% of all websites as their CMS. Around 521 million websites are built on WordPress. WordPress dominates the CMS market with a 61.4% share. There are over 30,000 WordPress themes available.\"\n\n\nThis Course has been designed to give you the ultimate roadmap and begin your Journey to become a professional WordPress Developer. The Course is intended for Beginners as well as Junior or Intermediate web developers.\n\n\nYou will gain the most out of this Course if you have already built a website with WordPress and you are looking to take your web development as well as web design skills to the next level. The Course is well suited for professionals or beginners who have an eye for web design and want to enhance their understanding of the technologies behind the systems which they create their design work on.\n\n\nFor web developers who want to enhance their skills, you will gain out of this Course, the ability to take an HTML website and turn it into a WordPress theme. In the section of converting a static HTML website to a Dynamic PHP website you will learn how to create functional websites which can then have an entire system built into them.\n\n\nYou will understand the roadmap that needs to be taken and the step by step process that you will need to follow in order to eventually become a WordPress Developer. This Course serves as the ultimate guide to introducing you to everything that you will need to know to get started in your Journey. By completing the Course you will have gained the skills to be able to turn any HTML Website into a Fully Functional WordPress Theme.\n\n\nYou will also have gained 2 Projects that you can add to your portfolio and present your new skills to your customers or future potential employer. The first project is being able to convert an HTML Template to a PHP Website. Completing this project will help you to understand how PHP works to make websites dynamic and functional and to also get hands on experience of how flexible the PHP Programming Language can be.\n***\n***MY GIFT TO YOU AS MY STUDENT*** You will also get a premium Web Hosting HTML Template which you can use as you please!!! *** You will also learn how to Convert this Template to a Dynamic PHP Website in the Course.\n***\nThe second project is converting an HTML Template into a Dynamic WordPress Theme that can be customized and modified within the WordPress Content Management System.\n\n\nBy completing the projects and getting a full understanding of both angles you will gain advanced skills in the learning and understanding of the PHP Programming Language.\n\n\nFurther on from this point you will have support from your instructor/mentor who is a Full Stack PHP Web and Software Developer and has been programming and working with PHP now for over 10 years.\n\n\nSo Lets Begin Our Journey Now to Becoming A Professional WordPress Developer!!! See You in the Course!",
      "target_audience": [
        "Someone who wants to start their own Web Development Business",
        "Web Designers who want to take their skills to the Next Level",
        "Anyone looking to pursue a Career as a Web Designer or Web Developer",
        "Programmers who want to learn How to Convert an HTML Template or Website to a WordPress Theme"
      ]
    },
    {
      "title": "School Management Project in PHP",
      "url": "https://www.udemy.com/course/school-management-project-in-php/",
      "bio": "Learn to develop school management in core PHP by integrating AdminLTE Admin Theme",
      "objectives": [
        "Learn how to create project from scratch step by step",
        "Learn how to use HTML template in our PHP application",
        "Learn how to create Admin Panel for the project step by step",
        "Learn how to create a folder structure for your web application"
      ],
      "course_content": {},
      "requirements": [
        "Should have XAMPP installed on local machine",
        "Should have basic knowledge of PHP, OOPS , HTML, CSS & JavaScript."
      ],
      "description": "This course will teach how one can integrate Admin LTE Admin theme in core PHP application, by grasping this course one can integrate any Admin Panel HTML theme in your core PHP application. In this course one can learn how to do coding by implementing OOPS concept. One can learn what is a Singleton class and where it is used. Proper validations in the forms have been applied. All CRUD operations are being implemented by AJAX calls using jQuery. This course consist of Student Module, Teacher Module, Class Module, Section Module, Subject Module, Sign In Module, Dashboard Module and Sign out Module. This course will help you a lot in your programming skills, with this course you will have knowledge of CRUD, Validations, OOPS, Admin Theme integrations, Helper functions, Singleton Class, global variables, Static functions, folder structure, constants, AJAX calls, DataTables, File Uploads. I have almost covered many PHP topics in this application. Every module has a separate structure for them. I have implemented a kind of MVC, in one file loading all views content, layout is same but interface changes on the basis of every module changes in URL. I hope the one who will take this course will learn a lot of things and will enjoy the coding.",
      "target_audience": [
        "This course is for those students who have basic knowledge about PHP, HTML, CSS & JavaScript.",
        "This course is for those students who are curious to develop web application from scratch.",
        "This course is for those students who wants to learn good coding standards."
      ]
    },
    {
      "title": "Bash Scripting Tutorial – Learn Linux Shell Script",
      "url": "https://www.udemy.com/course/bash-scripting-tutorial-learn-linux-shell-script/",
      "bio": "Master the Art of Linux Shell Scripting and Automate Your Tasks with Bash",
      "objectives": [
        "Understand the fundamentals of Bash scripting and Linux shell scripting.",
        "Learn how to write and execute Bash scripts to automate tasks and streamline workflows.",
        "Explore various shell scripting concepts such as variables, conditionals, loops, functions, and file handling.",
        "Master the usage of command-line tools and utilities to enhance productivity.",
        "Gain practical knowledge in creating interactive scripts and handling user input.",
        "Discover advanced Bash scripting techniques, including string manipulation, regular expressions, and error handling.",
        "Dive into real-world examples and case studies to reinforce your learning.",
        "Develop the skills to create efficient and reusable scripts for system administration, automation, and software development tasks."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation of VS Code",
          "variables",
          "ReadInput",
          "Command Substitution",
          "PassingArgument",
          "Task1",
          "Task2",
          "Operators",
          "IfElse",
          "Case",
          "Arrays",
          "For_Loop",
          "WhileLoop",
          "UntilLoop",
          "Break and Continue",
          "Automating Dir File Creation",
          "Automating_User_Creation",
          "TestCommand",
          "Functions",
          "NestedFunction",
          "GlobalVariable",
          "UserDeletion",
          "FileIntegrityChecker",
          "CloneRepository",
          "NmapScript"
        ]
      },
      "requirements": [
        "Basic familiarity with the Linux operating system.",
        "Access to a Linux environment (either a physical machine or a virtual machine).",
        "Basic knowledge of the command-line interface and common Linux commands is helpful but not required.",
        "A desire to learn and explore the power of Bash scripting and automate tasks in Linux."
      ],
      "description": "Are you ready to harness the power of Bash scripting and automate your Linux tasks? Look no further! Welcome to the comprehensive \"Bash Scripting Tutorial – Learn Linux Shell Script\" course.\n\n\nIn this hands-on course, you will dive into the world of Bash scripting and master the art of automating tasks in the Linux environment. Whether you are a beginner or have some experience with Linux, this course will take you from the fundamentals to advanced concepts of shell scripting.\n\n\nYou will start by understanding the basics of Bash scripting, exploring variables, conditionals, loops, functions, and file handling. As you progress, you will learn how to utilize command-line tools and utilities to streamline your workflow and boost productivity. You will gain practical knowledge in creating interactive scripts, handling user input, and incorporating error handling techniques.\n\n\nWith real-world examples and case studies, you will solidify your understanding of Bash scripting and develop the skills to create efficient and reusable scripts. You will explore advanced topics such as string manipulation, regular expressions, and advanced file handling.\n\n\nBy the end of this course, you will be equipped with the expertise to write powerful Bash scripts for system administration, automation, and software development tasks. You will have the confidence to navigate the Linux shell with ease and efficiently automate your daily activities.\n\n\nWhat sets this course apart is its hands-on approach and practical emphasis. You will actively engage with the material through coding exercises, quizzes, and projects, ensuring that you gain a deep understanding of the concepts and can apply them in real-world scenarios.\n\n\nWhether you are a Linux enthusiast, a system administrator, or a software developer, this course is your gateway to becoming a proficient Bash scripter. Join now and unlock the potential of Linux shell scripting to enhance your productivity, automate tasks, and become a Linux power user.\n\n\nEnroll today and embark on your journey to mastering Bash scripting in Linux!\n\n\nNote: Basic familiarity with the Linux operating system is recommended, but no prior knowledge of Bash scripting is required. Access to a Linux environment (either a physical machine or a virtual machine) is necessary to practice the concepts covered in the course.",
      "target_audience": [
        "Beginners who want to learn Bash scripting from scratch and understand the Linux shell scripting ecosystem.",
        "Linux enthusiasts and system administrators who want to automate repetitive tasks and streamline their workflows.",
        "Software developers who want to leverage Bash scripting for automation, build processes, and deployment tasks.",
        "Anyone interested in expanding their Linux skills and learning the art of scripting to enhance productivity.",
        "Students looking to prepare for Linux certification exams that include shell scripting topics."
      ]
    },
    {
      "title": "Mastering Java Spring: Comprehensive Training & Case Studies",
      "url": "https://www.udemy.com/course/java-spring-framework-complete-course-bundle/",
      "bio": "Master Java Spring Boot with in-depth tutorials, real-world projects, and advanced concepts. Gain practical skills.",
      "objectives": [
        "Java Spring Boot basics such as inversion of control and dependency injection. Understanding bean scopes and lifecycle methods in Spring.",
        "Implementing aspect-oriented programming (AOP) in Spring applications. Creating a shopping cart web app and an online shopping app.",
        "Working with database connectivity, authentication, and validation. Hands-on experience with Spring configuration, controllers, views, and project deployment.",
        "Advanced topics like Spring Boot Actuator, NoSQL integration, and microservice architecture. Utilizing Spring profiles, custom endpoints, file upload functions",
        "Case studies on building robust web applications using Java Spring framework. In-depth understanding of J2EE framework integration and Spring usage scenarios."
      ],
      "course_content": {
        "Introduction Java Spring Training Courses - Learn Spring Online Courses": [
          "Introduction",
          "Eclipse Setup And Introduction To Polymorphism",
          "Polymorphism Example",
          "Dynamic Polymorphism Example Continues",
          "Java Spring Inversion Of Control - Ioc",
          "Hello World Applications",
          "Hello World Continues",
          "Achieved Our First Hello World Applications",
          "Spring Constructor Injection Part 1",
          "Spring Constructor Injection Part 2",
          "Spring Bean Scopes Part 1",
          "Spring Bean Scopes Part 2",
          "Spring Life Cycle Methods Part 1",
          "Spring Life Cycle Methods Part 2",
          "Spring Setter Injection",
          "Spring Bean Injection",
          "Injecting Collections In Springs Part 1",
          "Injecting Collections In Springs Part 2",
          "Spring Beans Autowiring Part 1",
          "Spring Beans Autowiring Part 2",
          "Spring Beans Autowiring Part 3",
          "Spring Beans Autowiring Using Annotations Part 1",
          "Spring Beans Autowiring Using Annotations Part 2",
          "Spring Aop Example Part 1",
          "Spring Aop Example Part 2",
          "Spring Aop Example Part 3",
          "Spring Aop Example Part 4"
        ],
        "Java Spring Case Study - Creating A Shopping Cart Web App": [
          "Introduction to Project",
          "Creating Database for Application using MySQL",
          "Creating Entity Class",
          "Generating POM.xml File",
          "Create Model",
          "Creating DAO",
          "Implementing DAO",
          "Implementing DAO Continue",
          "Creating Util Class",
          "Creating Authentication",
          "Creating Validator",
          "Create Properties File for Hibernate and Validation",
          "Creating Customer Controller",
          "Creating Customer Controller Continue",
          "Creating Admin Controller",
          "Creating Configuration",
          "Configuration Continuous",
          "Configuration Completed",
          "Creating Views",
          "Creating Views Completed",
          "Output of the Project"
        ],
        "Java Spring Case Study - Creating Online Shopping App": [
          "Introduction to J2EE Framework",
          "Benefits of Spring Framework",
          "Spring Usage Scenarios",
          "Spring with EJB",
          "Registration and Login",
          "Creating New Package",
          "List of Dependencies",
          "Implementing the Interface",
          "Adding Classes for Project",
          "Defining Model Attribute",
          "Implementing Logout Value",
          "Creating New Tag Lib",
          "Table Row in Table Data",
          "Function in Table Data",
          "Folder for Register",
          "Functioning the Project",
          "Connectivity with Spring Framework",
          "Implementation for Insert Method",
          "Coding for Application Context",
          "Working on Spring Module",
          "Spring Framework in Database"
        ]
      },
      "requirements": [
        "To learn spring you must know Java. Java has been divided into two parts, core java and advances java. The core java covers the fundamentals of object-oriented programming while the advanced java covers different frameworks like Spring, Hibernate, etc. To begin with Spring, you should know core java as it is essential to begin the learning of any framework."
      ],
      "description": "Welcome to the Mastering Java Spring: Comprehensive Training & Case Studies Course! This course is designed to equip you with the essential skills and knowledge needed to become proficient in Java Spring, a powerful framework widely used for building enterprise-level applications. Whether you're a beginner or an experienced developer looking to enhance your expertise, this course offers a structured learning path to help you master Java Spring from the ground up.\nThrough a combination of theoretical explanations, hands-on exercises, and real-world case studies, you will gain a deep understanding of Java Spring's core concepts, features, and best practices. From setting up your development environment to building sophisticated web applications, this course covers everything you need to know to succeed as a Java Spring developer.\nBy the end of this course, you will have developed practical skills in:\nSetting up Eclipse and other essential tools for Java development\nUnderstanding polymorphism and inversion of control (IoC) in Spring\nImplementing dependency injection and aspect-oriented programming (AOP)\nBuilding web applications using Spring MVC architecture\nCreating and configuring Spring beans, controllers, and views\nIntegrating security features and database operations into your applications\nLeveraging advanced Spring features for scalability and performance optimization\nWhether you're aspiring to pursue a career in Java development or seeking to enhance your existing skill set, this course will empower you to tackle real-world challenges and excel in the dynamic field of enterprise application development with Java Spring. Let's embark on this learning journey together and unlock the full potential of Java Spring!\nSection 1: Introduction Java Spring Training Courses - Learn Spring Online Courses\nThis section serves as the foundational pillar for understanding Java Spring, an essential framework for developing enterprise-level applications. Students are introduced to the core concepts of Spring, starting with the setup of development environments using Eclipse. They then dive into essential programming paradigms such as polymorphism, which enables flexible and dynamic behavior in Java applications. Additionally, learners explore the concept of inversion of control (IoC) and its significance in decoupling components and improving code maintainability. Key topics covered include constructor injection, bean scopes, life cycle methods, dependency injection, and aspect-oriented programming (AOP), laying a solid groundwork for further exploration into advanced Spring features.\nSection 2: Java Spring Case Study - Creating A Shopping Cart Web App\nIn this section, students embark on a practical journey by applying their newfound knowledge of Java Spring to build a real-world application: a shopping cart web app. Through a step-by-step case study approach, learners gain hands-on experience in developing and deploying a functional web application using Spring. Starting from setting up the database schema and configuring the project environment, students progress through implementing entity classes, defining data access objects (DAOs), and integrating authentication and authorization mechanisms for user security. The section culminates with the creation of controllers and views, resulting in a fully operational shopping cart application ready for deployment.\nSection 3: Java Spring Case Study - Creating Online Shopping App\nBuilding upon the skills acquired in the previous sections, learners dive deeper into the realm of web application development with Java Spring through another engaging case study: creating an online shopping app. This section emphasizes the practical application of advanced Spring concepts in a real-world scenario. Students explore the benefits of the Spring framework in enterprise Java development, including its seamless integration with Enterprise JavaBeans (EJB) and robust support for database operations. They delve into topics such as user registration, login functionality, model attribute definition, and the creation of custom tag libraries to enhance the user experience. By the end of this section, students gain a comprehensive understanding of leveraging Spring's capabilities to develop scalable and feature-rich web applications tailored to meet modern business requirements.",
      "target_audience": [
        "Beginner and intermediate Java developers seeking to master Spring framework.",
        "Software engineers interested in building enterprise-level web applications.",
        "Students and professionals aiming to enhance their skills in Java Spring Boot, microservices, and NoSQL integration."
      ]
    },
    {
      "title": "Build a Video Conference App from Scratch with PHP + WebRTC",
      "url": "https://www.udemy.com/course/build-a-video-conference-app-from-scratch-with-php-webrtc/",
      "bio": "Build a one to one Peer to Peer Video Conference App from Scratch using WebRTC, WebSocket , PHP +JS",
      "objectives": [
        "Learn about Webrtc Negotiation",
        "Learn how to stream audio and video",
        "Learn call accept and rejecting system",
        "Become an advanced, confident, and modern WebRTC developer from scratch",
        "Will able to toggle on off video or audio",
        "Lean to Build Peer to Peer Video Chat",
        "Learn about Webrtc Signaling with PHP"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Set up & Installation",
          "Installing Composer",
          "Creating the necessary file and folder for our project",
          "Setting up WebSocket Server"
        ],
        "Register Page & Login Page": [
          "Creating the Register Page",
          "Creating inputField",
          "Styling the input Field",
          "Adding Section Title",
          "Creating the logIn Page",
          "Detect form Submission",
          "Sanitizing firstName",
          "Creating form Sanitizer Class",
          "Creating Sanitization method",
          "Creating users Table",
          "Connecting to Database",
          "Creating Account Class",
          "Creating Validate firstName method",
          "Creating Constant Class",
          "Creating the length method",
          "Creating Validate Username method",
          "Creating validate Email method",
          "Creating a method to validate Password",
          "Creating insertUserDetails method",
          "Creating login functionalities"
        ],
        "Starting index Page": [
          "Creating User Class",
          "Creating userData method",
          "Creating the header section for home page",
          "Getting Started with webSocket",
          "Creating logout functionalities",
          "Creating the aside section",
          "Creating the tab functionalities",
          "Creating the html element for connected user",
          "Creating getConnectedPeers method",
          "Creating the main section area",
          "Creating the videocall page",
          "Designing video call area"
        ],
        "Realtime Audio Video Chat Application with Call Functionality": [
          "Get local media",
          "Creating clientProcess function",
          "Getting started with peer connection",
          "Create offer",
          "Offer Process",
          "Create answer",
          "Set Up Ice Candidate",
          "Design Call Status",
          "Create calleeData",
          "Display Call Status",
          "Create reject call",
          "Create rejectedCall function",
          "Create acceptCall",
          "Create functionalities to toggle audio or video",
          "Create hangup function",
          "Streaming remote video"
        ],
        "Live Search System": [
          "Create search method",
          "Live Search functionalities",
          "Finish Touch"
        ]
      },
      "requirements": [
        "PHP experience is needed or Basic knowledge of PHP",
        "Basic JavaScript",
        "Local Web Server, (Xampp/Lampp)"
      ],
      "description": "Hi, welcome to the course Build a Video Conference App from Scratch using WebRTC, PHP +JS. Webrtc and Websocket is combination of powerful technology where you will able to transfer data in real time with low latency. And thats why its been considering the best technology to build video conferencing app. So If you are webrtc enthusiastic, want to build web conferencing website also want to learn websocket.\n\n\nIt doesn't matter if you're a beginner or an experienced programmer, just you have to know the basics of PHP, JavaScript and MySQL and HTML/CSS\n\n\nThis course will be greatly and highly beneficial to you. And by the end of this course you will be capable of creating your own Peer To Peer Live Video Chat Application Just like WhatsApp, or zoom, not only this you will also learn about websocket because we will be using websocket with PHP.\n\n\nAnd you can also add this One to one live video chat feature to your existing website or to your project where you want to add support with video chat.\n\n\nThis course will be greatly and highly beneficial to you. And by the end of this course you will be capable of creating your own Peer To Peer Live Video Chat Application Just like WhatsApp, or zoom, not only this you will also learn about websocket because we will be using websocket with PHP.\nAnd you can also add this One to one live video chat feature to your existing website or to your project where you want to add support with video chat.\n\n\nOkay so what’s the course about?\n\n\nI will personally guide you, step by step, in creating your own real time video conference system from scratch using webrtc, websocket & JS complete with:\n\n\nUser registration\nWebSocket Server\nClients Connections Logic\nWebRTC Connection Logic\nLive search system\nPeer to Peer connection\nOne to one Video\nRatchet\n\n\nClean Friendly URLs\n\n\nand much more!\n\n\nWhy should I take the course?\nIn the programming world, the “big 4” often consists of Google, Microsoft, Facebook and Amazon. To get a job at any of these companies, you absolutely MUST know the essentials: HTML, CSS, PHP, JQuery, JavaScript and MySQL.\nIf you take this course, you will have nothing to worry about because we use all of these skills extensively!\nSupport:\nBy enrolling in this course, you will have the COMPLETE support from Christopher Glikpo. I'm always ready to answer any question you may have. Programming issues, errors, feature requests, general programming advice - it doesn't matter, I'm always happy to help! I always aim to respond to questions within a few hours and it's also worth noting that I've answered EVERY SINGLE question asked so far.\nProject portfolio:\nThe site you create in this course will be the highlight of your project portfolio! Any potential employer who see's this project on your resume will want to hear all about it. The reason? They know that a project like this means you're familiar with the wide range of technical skills they need their employees to know.\n\nFun!\nFinally, this project is a lot of fun and I know you'll have a great time implementing your own unique ideas as well as the ones we implement together. What are you waiting for?\n\n\n* Although this course is suitable for beginners, it is not an introduction to development course. I won't go into much detail when explaining the basic programming concepts but I'm here to help if you want more of an explanation - just let me know!",
      "target_audience": [
        "Beginners webrtc enthusiastic who wants to learn Webrtc with PHP",
        "Beginner who wants to learn to create Live Video chat Using WebRTC, PHP and JavaScript"
      ]
    },
    {
      "title": "Serverless Mastery: AWS Lambda and Node.js Unleashed",
      "url": "https://www.udemy.com/course/serverless-aws-lambda-nodejs/",
      "bio": "Unlock Scalability: Acquire Skills to Develop Efficient Serverless Solutions on AWS",
      "objectives": [
        "Master AWS Lambda and Nodejs in crafting serverless applications.",
        "Build, deploy, and optimize functions seamlessly, integrating APIs with finesse.",
        "Learn to create CRUD APIs using AWS Lambda and API Gateway, alongside mastering Nodejs basics.",
        "Acquire the skills to develop efficient, scalable serverless solutions on Amazon Web Services."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Nodejs"
      ],
      "description": "Dive into Serverless Excellence:\nAs technology evolves, the demand for efficient and scalable solutions has never been higher. Our course is meticulously crafted to guide you through the intricacies of AWS Lambda and Node.js, ensuring you not only grasp the essentials but also unleash their full potential. You'll navigate the complexities of serverless architecture, gaining a profound understanding of its nuances.\nHands-On Learning Experience:\nLearning by doing is at the core of our approach. From the foundational stages of building applications to the intricate details of deployment and optimization, our hands-on exercises provide a practical experience that resonates with developers of all levels. This course is not just about theory; it's about empowering you with tangible skills that will shape your proficiency in the realm of serverless computing.\nMastering API Integration Finesse:\nAPI integration is a cornerstone of modern application development. Within this course, you will master the art of seamlessly integrating APIs, gaining a finesse that sets your projects apart. Explore the capabilities of AWS Lambda and API Gateway, and learn how to leverage them to create robust and dynamic CRUD APIs. The step-by-step guidance ensures that you absorb the intricacies of API integration with confidence.\nNode.js Fundamentals Unveiled:\nIn tandem with AWS Lambda, this course ensures you master the fundamentals of Node.js. Whether you are new to Node.js or seeking to deepen your understanding, our comprehensive coverage will equip you with the skills needed to navigate this powerful JavaScript runtime environment. Node.js is a critical component in the serverless ecosystem, and our course ensures you are well-versed in its application.\nConfidently Navigate the Serverless Landscape:\nWhether you are a seasoned developer or just embarking on your journey in serverless computing, this course caters to your needs. Our curated content and systematic approach provide you with the confidence to navigate the dynamic landscape of serverless application development. You will not only learn the theoretical concepts but also gain practical insights that are crucial in real-world scenarios.\nEnroll Now for Limitless Possibilities:\nDon't miss the opportunity to enroll in this transformative course. Become a master of AWS Lambda and Node.js, unlocking a world of limitless possibilities in serverless architecture. Join us on this educational journey, where your skills and knowledge will flourish, propelling you to new heights in the ever-evolving world of technology. Enroll now and embrace the future of serverless application development.",
      "target_audience": [
        "For Students to Experts"
      ]
    },
    {
      "title": "Generative AI Mastery for Leaders: ChatGPT, DALL-E, and More",
      "url": "https://www.udemy.com/course/generative-ai-mastery-for-leaders/",
      "bio": "Harnessing AI's Power: Transformative Strategies for Visionary Leaders with ChatGPT Plus, Custom GPTs, DALL-E & ChatGPT4",
      "objectives": [
        "What is AI",
        "How to put AI videos on social platforms for fun or both fun and work",
        "Develop AI-Driven Solutions: Engage in practical projects to build AI-driven applications using ChatGPT-4.",
        "How AI and GenAI are changing the world around you",
        "How Generative AI is a big thing for human future now"
      ],
      "course_content": {
        "What is AI": [
          "AI here to stay",
          "WTF is AI"
        ],
        "ChatGPT 4 for Generative AI": [
          "What ChatGPT Plus",
          "Tip for ChatGPT 3.5",
          "WTH is a GPT"
        ],
        "DALL-E for Generative AI": [
          "What is DALL-E",
          "Why is DALL-E",
          "How is DALL-E"
        ],
        "GenAI with best of DALL-E": [
          "DALL-E prompts for Generative AI",
          "More DALL-E",
          "Advanced DALL-E GenAI work"
        ],
        "ChatGPT 4 a GenAI pinnacle": [
          "Cosmic GPT",
          "More on Cosmic GPT"
        ],
        "GenAI for Youtube": [
          "Gen AI for YouTube"
        ],
        "GenAI for Presentations": [
          "How to Gen AI for presentations"
        ],
        "GenAI for Stocks": [
          "How to Gen AI for Stocks"
        ],
        "GenAI for logo": [
          "How to Gen AI for logo",
          "Use it"
        ],
        "Tech GPT for GenAI": [
          "Gen AI for tech support",
          "Tech with GenAI"
        ]
      },
      "requirements": [
        "No prior experience is needed, just your attention will be appreciated"
      ],
      "description": "Dive into the future of leadership and innovation with our groundbreaking course, \"Generative AI for Modern Leaders: ChatGPT Plus, DALL-E, GPTs - Harnessing AI's Power: Transformative Strategies for Visionary Leaders.\" This comprehensive and cutting-edge program is meticulously designed to empower forward-thinking leaders, entrepreneurs, and innovators to leverage the unparalleled capabilities of Generative AI technologies to redefine the landscape of their industries.\nThroughout this immersive journey, participants will unlock the secrets of utilizing Generative AI for a multitude of applications, from enhancing YouTube content creation to designing captivating presentations, creating distinctive logos, and pioneering stock and cryptocurrency research. Elevate your brand and storytelling with DALL-E mastery, and explore the vast potentials of custom GPT models to tailor unique AI solutions for your specific needs.\nOur curriculum is rich in practical applications, providing hands-on experience with the latest advancements in AI, including ChatGPT 4, Cosmic GPT, and ChatGPT Plus. These tools are not just about understanding the basics of AI; they are about mastering the art of integrating AI into your strategic vision, enhancing creativity, decision-making, and operational efficiencies.\nDiscover how to harness Generative AI for:\nContent Creation: Transform how you create and curate content on platforms like YouTube, making it more engaging, personalized, and impactful.\nVisual Design: Leverage DALL-E to generate unique visuals for branding, marketing, and product design, pushing the boundaries of creativity.\nStrategic Planning: Use custom GPT models and Cosmic GPT insights for advanced market analysis, financial forecasting, and strategic planning in stocks and cryptocurrency markets.\nInnovative Communication: Enhance your presentations and communication with captivating AI-generated content, making every pitch and proposal unforgettable.\nDesigned for you, this course ensures maximum visibility and accessibility for those eager to stay at the forefront of their fields. Whether you're looking to revolutionize your approach to content creation, elevate your market analysis, or infuse your leadership style with innovative AI-driven strategies, this course offers the tools, knowledge, and inspiration you need to succeed.\nJoin us to not only learn about the capabilities of Generative AI but to become a pioneering leader who shapes the future with visionary applications of AI technology. Your journey towards mastering Generative AI starts here, where creativity meets strategy, and innovation knows no bounds.\nSee you inside.",
      "target_audience": [
        "Graphic Designers: Professionals in graphic design looking to integrate AI for innovative designs.",
        "Data Scientists/Analysts: Individuals with a data analysis background looking to enhance their AI capabilities.",
        "AI Enthusiasts and Hobbyists: Individuals looking to explore AI tools for personal projects and hobbies.",
        "People who want to learn about the future of AI."
      ]
    },
    {
      "title": "Angular and Django: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/angular-django-advanced/",
      "bio": "Angular Material, Angular Universal, DRF 3.1, Docker, Redis, Stripe, Frontend & Backend Filtering",
      "objectives": [
        "Use Docker",
        "Login with HttpOnly Cookies and Multiple user Scopes",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "Angular Material",
        "Angular Universal"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Django Admin": [
          "Setup",
          "Docker",
          "Models",
          "Database",
          "Wait for db",
          "User Manager",
          "Admin Authentication Endpoints",
          "Common App",
          "Register",
          "Login",
          "Jwt",
          "Static Methods",
          "Authenticated User",
          "Logout",
          "Profile",
          "Admin Endpoints",
          "Ambassadors",
          "Faker",
          "Products",
          "Links",
          "Orders"
        ],
        "Django Ambassador": [
          "Ambassador Authentication Endpoints",
          "Setup",
          "Scopes",
          "Revenue",
          "Ambassador Endpoints",
          "Products",
          "Redis",
          "Searching Products",
          "Sorting Products",
          "Paginating Products",
          "Clearing the cache",
          "Creating Links",
          "Stats",
          "Rankings",
          "Redis Sorted Sets"
        ],
        "Checkout": [
          "Endpoints",
          "Getting Link Data",
          "Creating Orders",
          "Atomic Transactions",
          "Stripe",
          "Sending Emails"
        ],
        "Angular Admin": [
          "Setup",
          "Template",
          "Routes",
          "Register",
          "Login",
          "Services",
          "Authenticated User",
          "Logout",
          "Interceptors",
          "Profile",
          "Event Emitters",
          "Users",
          "Angular Material",
          "Mat Paginator",
          "Links",
          "Products",
          "Creating Products",
          "Updating Products",
          "Deleting Products",
          "Orders"
        ],
        "Angular Ambassador": [
          "Setup",
          "Common Files",
          "Navigation",
          "Profile",
          "Header Component",
          "Stats and Rankings",
          "Router Link Options",
          "Backend Products",
          "Lazy Loading",
          "Http Params",
          "Searching Products",
          "Sorting Products",
          "Selecting Products",
          "Generating Links",
          "Frontend Products",
          "Pipes"
        ],
        "Angular Universal Checkout": [
          "Setup",
          "Link Data",
          "Angular Universal",
          "Products",
          "Order Total",
          "Submitting the Form",
          "Stripe"
        ]
      },
      "requirements": [
        "Good understanding of Angular",
        "Good understanding of Python and Django"
      ],
      "description": "Learn how to create an Ambassador App using Angular and Django Rest Framework. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big Django API.\nIn Django you will learn:\nHow to create APIs with Django Rest Framework\nUse Docker\nCreate protected routes\nLogin with HttpOnly Cookies\nLogin with Scopes\nUse Redis\nUse Stripe\nSending Emails\nFilter Cached products\nIn Angular you will learn:\nAngular CLI\nUse interceptors\nCreate public and private routes\nUse Reactive Forms\nAngular Material\nAngular Universal\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Bootstrap : Flex box and Containers for beginners",
      "url": "https://www.udemy.com/course/bootstrap-flex-box-and-containers-for-beginners/",
      "bio": "Learn CSS Flexbox and Containers using Bootstrap",
      "objectives": [
        "Install Bootstrap",
        "Create default containers",
        "Create responsive containers",
        "Create fluid containers",
        "Flex direction property",
        "Flex wrap property",
        "Flex flow property",
        "Align items property",
        "Align content property"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of CSS advised."
      ],
      "description": "Bootstrap is a free and open-source CSS framework directed at responsive, mobile-first front-end web development. It contains CSS- and JavaScript-based design templates for typography, forms, buttons, navigation, and other interface components.\nContainers are a fundamental building block of Bootstrap that contain, pad, and align your content within a given device or viewport.\nContainers are the most basic layout element in Bootstrap and are required when using our default grid system. Containers are used to contain, pad, and (sometimes) center the content within them. While containers can be nested, most layouts do not require a nested container.  The Containers are used to pad the content inside of them, and there are two container classes available.\nThe Flexible Box Layout Module, makes it easier to design flexible responsive layout structure without using float or positioning.\nTo start using the Flexbox model, you need to first define a flex container.\nThe Flexible Box Module, usually referred to as flexbox, was designed as a one-dimensional layout model, and as a method that could offer space distribution between items in an interface and powerful alignment capabilities.\n\n\nQuickly manage the layout, alignment, and sizing of grid columns, navigation, components, and more with a full suite of responsive flexbox utilities.",
      "target_audience": [
        "Beginners to CSS Containers and Flexbox"
      ]
    },
    {
      "title": "Learn JavaScript DOM for Beginners Interactive Web Pages",
      "url": "https://www.udemy.com/course/javascript-projects-dom/",
      "bio": "Make your webpages come to life with JavaScript and DOM interaction Loaded with Useful Projects in JavaScript",
      "objectives": [
        "Use JavaScript to create interactive web pages",
        "Select update and manipulate web page elements with JavaScript",
        "Create fun interactive game and componentes with JavaScript",
        "Dynamic Content and Dynamic Web pages with JavaScript and DOM",
        "Explore how to apply JavaScript to connect with the DOM"
      ],
      "course_content": {},
      "requirements": [
        "HTML",
        "CSS",
        "Fundamental JavaScript",
        "Some coding experience"
      ],
      "description": "Explore how you can create amazing Mini Projects to learn JavaScript - Grow your portfolio - Expand your skills!\nDo you want to add interaction or dynamic content to your web pages, this is the course for you!\nJavaScript can bring your web pages to life - interact with the DOM.   Select page elements, make changes and update them as needed.  Power up your web pages!!!\nCreate amazing content on your pages, driven dynamically with JavaScript.  Projects within this course are designed to help you learn more about JavaScript and interacting with the DOM.  Learn by example, course is loaded with fun projects to help you learn and demonstrate what can be done with JavaScript\nSource Code is included so that you can try the code, and build your own version of the web applications.\nPlease note that HTML and CSS are prerequisite to the course, as well fundamental JavaScript is required as we are covering JavaScript within web pages.\nJavaScript Projects within the DOM - Document Object Model\nExplore how to create Interactive Dynamic web pages\nIntroduction  to the DOM and how JavaScript can create page interactions - Explore how to write JavaScript code, select page elements and more.  Loaded with useful projects to help you learn more about creating interactive and dynamic web content with JavaScript.\nCourse covers everything you need to know in a step by step format so  that you can start coding JavaScript and creating amazing things with code.\nWeb Developer Setup use of Editor for JavaScript Code\nJavaScript Projects DOM Interactive Dynamic web pages Introduction web development Course Resource Guide.\nGetting started with JavaScript DOM coding and development\nWeb Developer Setup use of Editor for JavaScript Code\nJavaScript Resources to explore more about JavaScript\nJavaScript DOM Object Selecting Page elements and more\nJavaScript querySelectorAll Get Page Elements Select ALL\nPage Events Element Event Listener access page content with JavaScript\nJavaScript and Page Input Values from Page Elements\nHow to use JavaScript Request Animation Frame\nJavaScript Starter Projects DOM Simple Projects to Start Coding\nHow to make Interactive DOM list saving to localstorage\nJavaScript Component Create a Star Rating Project\nJavaScript Game within the DOM Coin Toss Game Project\nJavaScript Typing Challenge Game with JavaScript DOM\nJavaScript DOM fun with Page Elements Moving Storing Keypress\nJavaScript Combo Guessing Game Exercise\nJavaScript Shape Clicker Game Click the shape quickly to win\nJavaScript Number Guessing Game with Game Logic\nJavaScript DOM Interactive Components and Useful Projects\nPure JavaScript Accordion hide and show page elements\nJavaScript Drag and Drop Simple Boxes Component\nDynamic Drag and Drop\nJavaScript Email Extractor Mini Project\nCreate a Quiz with Javascript JSON quiz tracker\nJavaScript Image Preview File Reader Example\nJavaScript Interactive Dice Game with Page elements\nJavaScript Dice Game Challenge Lesson\nJavaScript DOM Fun Projects Interactive DOM Elements\nJavaScript Tip Calculator Project\nTip Calculator Project Part 1\nTip Calculator Project Part 2\nPure JavaScript Calculator DOM page elements Project\nJavaScript Calculator Part 1\nJavaScript Calculator Part 2\nJavaScript Calculator Part 3\nJavaScript Bubble Popping DOM Game Coding project\nHow to move a Page Element With JavaScript DOM Mover Example\nCollision Detection between Page elements with JavaScript DOM\nJavaScript DOM Interactive Game\nJavaScript in action - use of pure JavaScript to create amazing interactive content on your web pages.\nSource code included\nBuild your own version of the projects\nLearn more about JavaScript and DOM page element manipulation.\nNo libraries, no shortcuts just learning JavaScript making it DYNAMIC and INTERACTIVE web application.\nStep by step learning with all steps included.\nBeginner JavaScript knowledge is required as the course covers only JavaScript relevant to the building of the game.  Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building and creating with JavaScript today!!!!",
      "target_audience": [
        "JavaScript developers",
        "Web designers",
        "Web application developers",
        "Web masters",
        "Anyone who wants to create fun web projects",
        "Anyone who wants to learn more about JavaScript and the DOM"
      ]
    },
    {
      "title": "Building & Designing 3D Portfolio Website with Three JS",
      "url": "https://www.udemy.com/course/building-designing-3d-portfolio-website-with-three-js/",
      "bio": "Learn how to build & design 3D portfolio website with Javascript, Three JS, and Vite JS",
      "objectives": [
        "Learn how to build a fully functioning 3D portfolio website with fully animated 3D backgrounds",
        "Learn basic fundamentals of Three JS, such as getting to know its common use cases, main features, and syntax",
        "Learn how to create 3D cube and cover each side with your photo",
        "Learn how to load 3D model and set the scale",
        "Learn how to rotate and animate 3D models",
        "Learn how to add ambient lighting and directional lighting",
        "Conduct testing to make sure the website has been fully functioning and has a user friendly interface",
        "Learn how to find and download 3D models from Sketchfab and Clara IO",
        "Get to know several important aspects to have in portfolio website, such as about me section, project description, portfolio showcase, and reviews from clients",
        "Learn how to style your portfolio website with CSS",
        "Learn how to create basketball 3D model and add lighting",
        "Learn how to animate basketball 3D model using Three JS"
      ],
      "course_content": {},
      "requirements": [
        "No previous experience in Three JS is required",
        "Basic knowledge in Javascript is helpful but not necessary",
        "Willingness to be creative and innovative"
      ],
      "description": "Welcome to Building & Designing 3D Portfolio Website with Three JS courses. This is basically an extensive project based course where you will learn step by step on how to build and design portfolio websites using Javascript and Three JS which is a Javascript library created and designed specifically for building 3D websites. In this course, you will extensively learn how to showcase your skill sets and qualifications to your future employers or clients by presenting them in the most compelling way possible. Not only that, you will also learn how to integrate a variety of 3D models to your portfolio website and make it even more interactive and eye-catching. In the introduction session, you will learn basic fundamentals of Three JS, such as getting to know its common use cases, main features, and exploring a few website examples built using Three JS. Then, you will continue by getting to know several 3D website ideas that you should consider to build. Afterward, since this course is going to be concentrating on teaching you to build a 3D portfolio website, you will learn several important aspects that you need to have in your portfolio website, for example like the about me section, detailed project description, portfolio showcase, and testimonials or reviews from your previous clients. Then, before starting the project, you will learn step by step on how to find and download 3D models from websites like Sketchfab and Clara IO since you will need them to be integrated to your portfolio website. Afterward, you will also be guided step by step on how to prepare your IDE and Javascript libraries. Once you’ve learnt all necessary knowledge about Three JS, you will enter the main section of the course which is the project section where you will be guided step by step on how to build and design 3D portfolio websites using Three JS and you will spend most of your time here. Once the 3D portfolio website has been built, you will be conducting testing to make sure that the website has been fully functioning and the website has a high quality user interface. There will be four main testing objectives, those are functionality testing, user experience testing, performance testing, and compatibility testing.\nFirst of all, we need to ask ourselves these questions: why should we learn how to build a portfolio website using Three JS? And what is the benefit of integrating 3D models to our website? Well, there are a lot of answers to those questions, firstly, the job market is getting more and more competitive, therefore, to get hired or to get clients, you will need to find the most effective strategy to be able to stand out from the crowds and the easiest way to do it is by being different in a positive way. Building a 3D portfolio website is one of many things you should consider as it will potentially set you apart from your other competitors. In addition to that, by presenting your projects in such a unique way, your future employers or clients will most likely be impressed with your portfolio website and it also increases your chance of getting hired very significantly as they see values that you have that other candidates do not have. Last but not least, learning how to build 3D websites using Javascript and Three JS is definitely a high demand skill set in the job market as it will enable you to build and design a lot of cool projects, such as virtual real estate, virtual classroom, 3D E-commerce marketplace, interactive map, and still many more.\nBelow are things that you can expect to learn from this course:\nLearn basic fundamentals of Three JS, such as getting to know its common use cases, main features, and syntax\nGet to know several important aspects to have in portfolio website, such as about me section, project description, portfolio showcase, and reviews from previous clients\nLearn how to find and download 3D models from Sketchfab and Clara IO\nLearn how to initialize Vite JS package\nLearn how to create scene, camera, and renderer in Three JS\nLearn how to create 3D cube and cover each side with your photo\nLearn how to load 3D model and set the scale\nLearn how to rotate and animate 3D models\nLearn how to add ambient lighting and directional lighting\nLearn how to build a fully functioning 3D portfolio website with fully animated 3D backgrounds\nLearn how to add content to your HTML file\nLearn how to style your website with CSS\nLearn how to connect your button with your Github page\nConduct testing to make sure the website has been fully functioning. For the testing phase, there are four main objectives, those are functionality, user experience, performance, and compatibility testing.\nLearn how to create basketball 3D model and add lighting\nLearn how to animate basketball 3D model using Three JS",
      "target_audience": [
        "People who are interested in building and designing 3D portfolio website using Three JS",
        "People who are interested in integrating and animating 3D models in their websites"
      ]
    },
    {
      "title": "Build Modern MEAN Stack Web App",
      "url": "https://www.udemy.com/course/nestjs-angular/",
      "bio": "Modern MEAN Stack web Application development with Node.js, Angular, Nestjs, MongoDB",
      "objectives": [
        "NestJs Fundamentals",
        "Typescript Fundamentals",
        "Angular Fundamentals",
        "Build RESTFUL APIs with NestJs and MongoDB",
        "Build RestFUL APIs with NestJs and Mysql",
        "Authentication and Authorization using PassportJs",
        "Add Documentation for your APIS",
        "Build Single Page frontend app with Angular",
        "CRUD Application with Angular",
        "Authentication in Angular Application"
      ],
      "course_content": {},
      "requirements": [
        "Having a basic understanding of JavaScript and/or NodeJS",
        "Having basic knowledge of TypeScript is recommended, but not required"
      ],
      "description": "The term MEAN stack refers to a collection of JavaScript based technologies used to develop web applications. MEAN is an acronym for MongoDB, ExpressJS, Angular and Node.js. From client to server to database, MEAN is full stack JavaScript.\nThe main reason for choosing the MEAN stack over others is because of the use of a common language for both client-side and server-side. Since, all these technologies are written in JavaScript, your web development process becomes neat. Node.js is a platform that brought JavaScript implementation on the server-side. With Angular  using JavaScript on the front-end, it becomes easier to reuse code from back-end to front-end.\nMEAN stack offers a modern approach to web development. It also makes use of the power of modern SPAs (single-page applications), which does not require entirely refreshing a web page for every server request like most traditional web applications do. Today there is a trend to develop multiple frameworks that correspond to a single programming language and form a full-stack solution. But, as of now, using MEAN stack is a very effective approach to web development.\nIn this course, we are going to build our backend application Nest.js. Nest.js is a Node.js framework. It is built on the top of Express and Typescript.\nNest.js is a progressive Node.js framework for building efficient, reliable and scalable server-side applications. NestJS is a server-side (backend) application framework beautifully crafted to support developers productivity and make their lives happier. Well, it's not only a framework, it's an enabler of entering the world of advanced engineering concepts such as Domain Driven Design, Event Sourcing, Microservices architecture.\nI spent a good few years in my career developing large scale apps and it didn’t let me down any single time. It’s well written, having quality as an objective, modular web framework with a good documentation, delivering nice developer experience. Exactly the same way I’d describe Nest.\nNestJs is built on the top of Typescript and Express.js. It also combines some elements of Object Oriented Programming and functional programming.\nHere comes NestJS, a framework which is fully written in TypeScript (it supports JS too, but types are good), it’s easily testable and brings in all the necessary stuff you always think about but you don’t know what to choose.\nWhy NestJs?\nNestJS doesn’t try to limit you to a particular way of doing things, it just provides the tooling you need. It doesn’t try to reinvent the wheel, it utilize existing tools you already know. For example, it uses express behind the scenes which makes your app compatible with the majority of express middlewares.\nHere are some good reasons why NestJS shines:\nDependency Injection — NestJS provides DI straight out of the box, increasing efficiency, modularity and testability of applications.\nModularisation — NestJS provides a modular structure for organizing code within the same domain boundary into separate modules.\nFlexibility — NestJS provides structure, which helps large teams build complex applications and yet comes in as lightweight as possible, so how you want to build is your choice.\nFamiliar APIs you already know — NestJS is heavily inspired by Angular, it is also quite similar to much established frameworks like Spring and .NET. This provides a shorter learning curve and lower entry threshold for developers.\nCommunity — NestJS is the fastest rising framework, already with 14K stars surpassing HapiJS. Also, with NestJS leveraging on the Angular way of doing things, things can only get better for the community.\nIn this course, I will teach you the foundations/fundamentals of NestJs. I will teach you how to build RESTFUL APIs step by step. You will also learn how to plan, design and deploy APIs. I have also another separate section of GraphQL.\nWhat you are going to learn in this course?\nTypescript Fundamentals\nNestJs Fundamentals\nAngular Fundamentals\nBuild RESTFUL APIs with NestJs\nConnect REST APIs with Angular\nBuild Frontend with Angular\nAuthentication on Angular\nAuthentication on Backend Application",
      "target_audience": [
        "Intermediate JavaScript developers who want to dive into back-end development",
        "Any developer wants to learn how to build backend server side applications with Typescript",
        "Developers who want to learn how build Restful apis with NestJs, MongoDB and MySQL",
        "Developers who want to learn how to secure your APIs using JWT",
        "Developers who want to learn how to deploy NestJs application",
        "Developers who want to learn how to learn how to build MEAN Stack App with Nestjs and Angular",
        "Developers who want to learn how to consume RESTFUL APIs with Angular"
      ]
    },
    {
      "title": "Node Js MongoDb Vs Php Mysql :Build The Same Web Application",
      "url": "https://www.udemy.com/course/node-js-mongodb-vs-php-mysql-build-the-same-web-application/",
      "bio": "Learn Node Js,Php ,Mysql ,MongoDb To Make A Web Application For Cars And An Administration System For The Admin",
      "objectives": [
        "php from basics",
        "Mysql database and sql queries",
        "express js,ejs ,bodyParser",
        "MongoDb database and mongoose queries",
        "create a complete web application with an admistration system using php in the first time and recreated in node expresse js",
        "full comparison between mysql and mongodb and between node express js and php"
      ],
      "course_content": {
        "Introduction": [
          "Structure of the course",
          "Look at the final project"
        ],
        "The basics Of PHP": [
          "Handle A from using POST request",
          "Handle A Form Using Get request",
          "Object Oriented Programming in Php",
          "Constructor in PHP",
          "understand the word this"
        ],
        "Mysql Database And Sql Queries": [
          "Mysql basics",
          "SQL INSERT",
          "SQL SELECT",
          "SQL UPDATE",
          "SQL DELETE",
          "Php Connection to a database and get the data",
          "get the data using OOP in php"
        ],
        "The Basics Of Node js": [
          "Create Routes Using Express In node js",
          "Views using ejs",
          "Send Array to a view using ejs",
          "Handle forms using BodyParser"
        ],
        "MongoDb and Mongoose Queries": [
          "MongoDB vs Mysql",
          "Mongodb basics part 1",
          "MongoDb basics part 2",
          "what is mongooose",
          "Mongoose create a database",
          "Mongoose create method",
          "mongoose find method",
          "mongoose findByIdAndUpdate method",
          "Mongoose findByIdAndDelete method",
          "Mongoose practical exercise"
        ],
        "the project basics": [
          "createFiles in php",
          "Create main class in php",
          "create the database in php",
          "create the files in node js",
          "create the database in node js"
        ],
        "the index page": [
          "the index.html part 1",
          "the index.html part 2",
          "the index in php part 1",
          "the index in php part 2",
          "the index in php parte 3",
          "the index in php part 4",
          "the index in node js part 1",
          "the index in node js part 2",
          "the index in node js part 3",
          "the index in node js part 4",
          "compare index in php and node js"
        ],
        "The show page": [
          "the show page in node",
          "the show page in php",
          "Compare the show in node js and php"
        ],
        "The Admin and the view page": [
          "the admin page introduction",
          "the Admin page In php part 1",
          "the Admin page In php part 2",
          "the views page in php",
          "the admin in node js",
          "the views page in node js"
        ],
        "The new page": [
          "the new in node js part 1",
          "the new in node js part 2",
          "the new in node js part 3",
          "the new in php part 1",
          "the new in php part 2"
        ]
      },
      "requirements": [
        "Basic web development HTML, Basic Programming fundamentals"
      ],
      "description": "In this Course you will learn :\n1.The Basics Of Php :\n-Handle Forms using GET requist\n-Handle Forms using POST requist\n-Object Oriented Programming In Php\n2.Mysql Systeme And SQL queries\n3.The Basics Of Node js:\n-Express :create routes\n-EJS :create Views\n-bodyParser:Handle Forms\n4.MongoDB basics And Mongoose queries\n5.Create  A Web Application to sale cars With An adminsitration System:\n-using Node Js and create the Same application Using Php",
      "target_audience": [
        "web developers"
      ]
    },
    {
      "title": "Build your own NFT Candy Machine on the Solana Blockchain",
      "url": "https://www.udemy.com/course/build-your-own-nft-candy-machine-on-the-solana-blockchain/",
      "bio": "Sell your NFTs via your own Website!",
      "objectives": [
        "Learn how to create and manage Solana wallets using command line tools",
        "Use metaplex to upload your NFT collection on the Solana blockchain",
        "Use Metaplex to verify on-chain data",
        "Build a Front End UI for your NFT marketplace",
        "Upload your project as a new Github repository",
        "Use github pages to deploy your live minting website",
        "Check the outcome of a transaction on the Solana Blockchain using Solscan"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Upload your NFT Collection with Metaplex": [
          "Let's install a few packages",
          "Let's install Metaplex",
          "Setting up a Solana wallet on Devnet",
          "Airdropping Solana to our dev wallet",
          "The Config file",
          "Preparation of the assets folder",
          "Verify your Assets",
          "Upload your Collection",
          "Verify Upload"
        ],
        "Building the Front End": [
          "Create a Phantom Wallet",
          "Cloning the front end skeleton",
          "The Config File: Link your UI to your NFT collection",
          "Customize your Front End",
          "Create a new Github Repository and upload your project",
          "Deploy your website to github pages"
        ],
        "Set up the Minting date": [
          "Test the minting process",
          "Update the minting Date with metaplex"
        ],
        "Additional Content": [
          "Switch to mainnet-beta",
          "Deploy your website to a custom domain",
          "Get exposure by getting listed on NFT calendars"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming skills",
        "Basic understanding of blockchain technology"
      ],
      "description": "In this course, we will cover the basics such as creating Solana wallets using command line tools, installing a Phantom Wallet on your browser and airdrop SOL to a devnet wallet.\nWe will then see how to upload your NFT collection on the Solana Blockchain using the Metaplex suite of tools. We will also use Metaplex to verify or even modify on-chain data, namely the configuration of your NFT minting process.\nWith the lessons covered in this course you will also be able to develop your own User Interface in order to sell your NFT collection using your own minting website. For this part we will use the React javascript environment to create a web application that you will be able to customize easily, and reuse for all your subsequent NFT projects.\nLastly, you will get some insights on the next steps you will need to take in order to create a successful NFT project.\nThis includes ideas on how to make your project more value-adding for your holders, and a list of Solana NFT calendars where you should aim at getting listed in order to draw more attention to your project.\n\nYou will be able to send me messages at any point during the course if you can't get past a certain point without running into a myriad of bugs.",
      "target_audience": [
        "Artists looking for ways to leverage the blockchain technology to sell their creations",
        "NFT creators looking to sell their project on their own Minting website",
        "People generally curious about NFTs and looking for a fun way to get started",
        "Blockchain enthusiasts looking for ways to market their projects to a wider audience"
      ]
    },
    {
      "title": "Learn How to Make Your Nuxt 3 App SEO-Friendly",
      "url": "https://www.udemy.com/course/nuxt-3-seo/",
      "bio": "Master Nuxt 3 SEO: Optimize Performance and Boost Search Rankings with the Right Rendering Strategies!",
      "objectives": [
        "Learn how to structure URLs properly to improve SEO and user experience.",
        "Understand universal rendering and how to optimize hydration for better user experience and search engine rankings.",
        "Learn how to reduce payload size and improve page load speed using lazy loading and optimized fetching.",
        "Understand and apply best practices for metadata, schema markup, and other on-page SEO strategies.",
        "Implement proper redirects and handle server-side errors effectively to improve SEO and maintain search. engine rankings",
        "Learn best practices for using images in your Nuxt 3 app to improve performance and search rankings.",
        "Configure essential SEO files such as robots.txt and sitemap.xml to enhance search engine visibility."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Application Overview & Setup"
        ],
        "Crafting SEO-Friendly URLs in Nuxt 3": [
          "URL Best Practices for SEO",
          "Optimizing Home Page URLs for SEO",
          "Optimizing Book Page URLs for SEO"
        ],
        "Rendering & Performance Optimization in Nuxt 3": [
          "Understanding Rendering Modes in Nuxt 3",
          "Universal vs. Client-Side Rendering in Action",
          "Reducing HTML Size with Client-Only Components",
          "Setting Up Server and Client Components for Efficient Rendering",
          "Fetching Data in Nuxt 3",
          "Optimizing Payload Size",
          "Reducing Initial JavaScript Load with Lazy Components"
        ],
        "Redirects & Error Handling in Nuxt 3": [
          "Understanding Redirects & Error Handling for SEO",
          "Implementing Redirects in Nuxt 3",
          "Handling Errors Properly in Nuxt 3"
        ],
        "Optimizing Images in Nuxt 3": [
          "Understanding Image SEO and Best Practices",
          "Getting Started with the Nuxt Image Module",
          "Optimizing Book Images with Nuxt Image & Cloudinary",
          "Optimizing Background & Decorative Images for Performance"
        ],
        "Enhancing SEO with <head> Optimizations": [
          "Understanding the <head> Section for SEO",
          "Adding Favicon, Canonical Tags, and Global Metadata",
          "Optimizing Titles, Meta Descriptions, and OG Tags for the Homepage",
          "Handling Dynamic Meta Tags in API-Driven Pages"
        ],
        "Enhancing SEO with Schema.org Markup": [
          "Understanding Schema.org and Its Impact on SEO",
          "Planning Schema Integration for the bookstore",
          "Implementing Schema Markup in Nuxt 3"
        ],
        "Optimizing Fonts for SEO and Performance": [
          "Understanding Font Performance and Its Impact on SEO",
          "Optimizing Font Loading for Better Performance"
        ],
        "Generating and Optimizing Sitemaps": [
          "Understanding Sitemaps and Their Role in SEO",
          "Creating a Sitemap for Your Nuxt 3 App"
        ],
        "Optimizing Crawling with robots.txt": [
          "Introduction to robots.txt – Controlling Search Engine Crawling",
          "Adding and Configuring robots.txt in a Nuxt 3 Project"
        ]
      },
      "requirements": [
        "Familiarity with JavaScript and web development fundamentals.",
        "Basic knowledge of Vue.js and Nuxt 3.",
        "No prior SEO experience is needed – everything will be explained step by step."
      ],
      "description": "Are you comfortable with Vue.js but struggle to make your web apps SEO-friendly? You’re not alone.\nMost Nuxt 3 courses focus on building full-stack apps, teaching everything from scratch—Vue, Nuxt, and even APIs. That’s great, but if your goal is to make your Vue apps appear in search engines, this course is for you.\nHi, I’m Alex Marusich, a full-stack developer specializing in Vue and Nuxt. I created this course after realizing that most online tutorials don’t teach you how to use Nuxt for what it’s best at: SEO.\nIn this course, we’ll work with a prebuilt Nuxt 3 web app—a small online bookstore with real data—and optimize it for SEO from start to finish. No fluff. Just practical, real-world techniques.\nWhat You’ll Learn\nSEO-Friendly URL Structure\nLearn how to structure URLs for books and paginate pages cleanly for search engines.\nNuxt Rendering Strategies\nUnderstand SSR, CSR, universal rendering, and learn how to use .client, .server, and lazy-loaded components wisely.\nEfficient Data Fetching\nLearn best practices to fetch data without hurting performance.\nProper Redirects & Error Handling\nGo beyond router.push()—implement SEO-safe redirects and 404/500 error pages the right way.\nImage Optimization with Nuxt Image\nLearn how to serve fast, responsive images for your users and search engines.\nUsing the <head> Section Properly\nInject meaningful titles, meta descriptions, and more—with purpose.\nSchema org Markup & Rich Snippets\nAdd structured data to improve how your pages appear in Google results.\nFont Optimization\nUse @nuxtjs/google-fonts to improve performance and visual consistency.\nSitemap & robots.txt\nCreate a dynamic sitemap and configure robots.txt to guide search engine crawlers.\nLighthouse Testing\nAnalyze and improve your site's performance using Lighthouse tools.",
      "target_audience": [
        "This course is for Vue.js developers who want to truly understand the real advantages of Nuxt 3 in terms of SEO and performance optimization. Unlike basic courses that simply list Nuxt’s features and spend time on basic component and page creation, this course dives deep into Nuxt’s core features to improve search rankings and app performance.",
        "If you have never built an SEO-friendly app and have only completed a few basic Nuxt courses, this course is for you )"
      ]
    },
    {
      "title": "JavaScript Bootcamp 2025: Build a Calculator + Projects",
      "url": "https://www.udemy.com/course/javascript-bootcamp-zero-to-mastery/",
      "bio": "Hands-on JavaScript basics with real projects, ES6+, DOM, error handling & coding exercises—perfect for beginners.",
      "objectives": [
        "JavaScript Basics: Start from the ground up by learning the fundamentals of JavaScript. Discover the syntax, data types, variables, and operators",
        "Control Flow: Explore how to control the flow of your code using conditionals, loops, and switch statements.",
        "Functions: Understand the power of functions in JavaScript and how they allow you to encapsulate reusable blocks of code.",
        "Arrays and Objects: Dive into complex data structures like arrays and objects. Learn how to manipulate, access, and iterate through arrays and Objects storage",
        "Discover the Document Object Model (DOM) and learn how to manipulate HTML elements using JavaScript.",
        "Error Handling and Debugging: Gain essential skills in error handling and debugging techniques.",
        "Best Practices and Coding Style: Familiarize yourself with coding conventions and best practices to write clean, maintainable, and efficient JavaScript code"
      ],
      "course_content": {
        "Preview": [
          "Welcome message for enrolled Students"
        ],
        "Setup for Success": [
          "Setup Development Environment",
          "Check to validate your development setup",
          "First HTML in Browser",
          "Check if you are able to navigate to the Dev tools on Chrome",
          "Your First Javascript",
          "Congratulations"
        ],
        "Variables": [
          "Module Introduction",
          "What is a Variable",
          "Variable in Javascript - let, var, const",
          "Dynamic Typing",
          "Mastering JavaScript Variables: Understanding Declarations and Scoping"
        ],
        "Operators": [
          "Module Introduction",
          "Arithmetic Operators",
          "Logical Operators",
          "Comparison Operator",
          "Assignment Operator",
          "Increment Decrement Operator",
          "Bitwise Operator"
        ],
        "Control Flow": [
          "Module Introduction",
          "What is Control Flow?",
          "If-else statement",
          "Switch Statement",
          "for loop",
          "while loop",
          "break & continue"
        ],
        "Objects": [
          "Module Introduction",
          "Javascript Object",
          "Nested Objects",
          "Functions in Objects"
        ],
        "Arrays": [
          "Module Introduction",
          "Array - Declaration",
          "Accessing elements",
          "Adding elements",
          "Removing elements",
          "Iterating Array",
          "Sorting"
        ],
        "Functions": [
          "Module Introduction",
          "Declaration & Invocation",
          "Function Parameters",
          "Function Arguments",
          "Scope - Local vs Global",
          "Functions as Expression",
          "Hoisting",
          "Arrow Functions"
        ],
        "Mini Project": [
          "Welcome & What We’ll Build",
          "Setting Up Our Project Folder",
          "Writing the HTML Structure",
          "Writing the JavaScript Logic",
          "Testing & Running Our Calculator",
          "UI Updaed",
          "Test Your JavaScript Calculator Skills",
          "Next Steps & How to Get Help"
        ],
        "Thank you!!": [
          "Congratulations!!"
        ]
      },
      "requirements": [
        "A computer with web browser",
        "No Programming knowledge required. I will take you from beginner to expert",
        "Basic Computer Skills: You should be comfortable using a computer, navigating file systems, and performing tasks like installing software or creating and editing files.",
        "Motivation and Willingness to Learn: A positive attitude and a strong desire to learn are key to getting the most out of the course. Web development requires continuous learning, problem-solving, and practice, so having a growth mindset will greatly contribute to your success.",
        "Whether you're a beginner or have some programming knowledge, our course is designed to accommodate learners at different levels. We provide comprehensive lessons and guidance, ensuring that you gain a solid understanding of JavaScript fundamentals.",
        "If you have any specific questions or concerns about the prerequisites or suitability of the course for your background, feel free to reach out to us for further clarification."
      ],
      "description": "JavaScript Fast-Track 2025: Learn JS by Building a Calculator\nWant to learn JavaScript fast — without drowning in long theory-heavy courses?\nIn this JavaScript Fast-Track, you’ll master the fundamentals in under 2 hours by coding a real calculator project.\nThis course is designed for absolute beginners, students, and career changers who want results quickly.\nInstead of endless slides, you’ll follow along step by step as we set up your environment, write real code, and see how JavaScript powers the web.\nBy the end, you’ll have:\nA solid understanding of JavaScript fundamentals\nA fully functional calculator app you can add to your portfolio\nThe confidence to tackle more advanced projects and frameworks\nWhat You’ll Learn\nInstall and set up VS Code to start coding JavaScript\nWrite your first functions, variables, and operators\nUse control flow (if/else, loops) to control logic in your apps\nWork with arrays and objects like a developer\nManipulate the DOM to update your web pages dynamically\nHandle events such as button clicks to make apps interactive\nDebug and fix JavaScript errors step by step\nBuild and showcase a calculator project you’ll be proud of\nWho This Course Is For\nAbsolute beginners with zero coding experience\nStudents or career changers who want a quick win with JavaScript\nDevelopers who want a fast refresher before moving into modern frameworks\nWhy Learn from Me?\nI’m Manish Kumar, an ex-Microsoft and Adobe engineer with 15+ years in software development and mentoring. My teaching style is simple:\nNo fluff — straight to the point\nClear explanations with real-world coding examples\nProject-first learning so you build as you learn\nWhat’s Next?\nThis is just the beginning. You’ll get lifetime updates, including:\nAdvanced Calculator (scientific layout, memory, history)\nReal-world mini apps like a To-Do List, Tip Calculator, and Unit Converter\nMore coding challenges to strengthen your portfolio\nStop procrastinating. Start coding today. Enroll now and build your first JavaScript app with SpinzyAcademy.",
      "target_audience": [
        "Our JavaScript Fundamentals course is designed for a wide range of individuals who are interested in web development and want to build a strong foundation in JavaScript. The course caters to the following audiences:",
        "Beginners: If you're new to programming or have limited coding experience, this course is an excellent starting point. We cover JavaScript from the ground up, providing a clear and comprehensive introduction to the language.",
        "Aspiring Web Developers: If you're looking to pursue a career in web development, this course will equip you with the essential skills and knowledge needed to kickstart your journey. You'll gain a solid understanding of JavaScript, which is a fundamental language in web development.",
        "Front-end Developers: If you're already familiar with HTML and CSS and want to enhance your front-end development skills, JavaScript is a crucial language to master. This course will deepen your understanding of JavaScript and enable you to create dynamic and interactive user experiences.",
        "Web Designers: If you have a background in web design and want to add interactivity and functionality to your designs, learning JavaScript is essential. This course will provide you with the necessary programming skills to bring your designs to life.",
        "Anyone Seeking to Expand Their Skill Set: JavaScript is a versatile and widely used language, not limited to web development alone. If you're interested in adding programming skills to your toolkit or exploring new avenues in software development, this course will be valuable.",
        "Please note that while the course is beginner-friendly, it covers both fundamental and advanced JavaScript concepts. It is designed to gradually build your knowledge and skills, ensuring a smooth learning experience regardless of your prior experience level.",
        "No matter your background or career goals, if you have a passion for web development and a desire to learn JavaScript, this course is for you. Join us and embark on a transformative learning journey to become proficient in JavaScript and unlock exciting possibilities in the world of web development."
      ]
    },
    {
      "title": "JavaScript DOM Projects InterActive Dynamic WebPages Games",
      "url": "https://www.udemy.com/course/javascript-dom-js/",
      "bio": "JavaScript DOM makes your web pages interactive and dynamic update page elements add event listeners create Games JS DOM",
      "objectives": [
        "Perfect to get started with JavaScript - loaded with starter projects to get you coding",
        "Master the DOM (document object model)",
        "Explore how you can learn JavaScript while building FUN real world JavaScript projects from Scratch",
        "Create interactive and dynamic web pages",
        "Selection of web page elements and manipulation of elements"
      ],
      "course_content": {
        "Introduction to the JavaScript DOM selecting updating page elements with code": [
          "Introduction to JavaScript DOM create interactive web pages",
          "JavaScript DOM Section Resource Guide and Source Code examples",
          "How to write JavaScript select page elements with querySelector",
          "How to select all matching page elements with JavaScript QuerySelectorAll",
          "Web Page Element Style Attribute Update with JavaScript",
          "Attributes ClassList Add Remove Toggle Contains within class of page element",
          "Add HTML to Page with JavaScript Code innerHTML property of web page elements",
          "JavaScript to Create new page elements and Remove Elements",
          "JavaScript Traversing the DOM parents siblings children of elements.",
          "Click Events and Event Listeners with JavaScript",
          "How to add Mouse Event Listeners with JavaScript code.",
          "How to add Events Listeners Keyboard Events with JavaScript Code",
          "How to Move an Element with Arrow presses on Keyboard using JavaScript",
          "How to create smooth movement of page elements Animation Frame",
          "JavaScript movement of page elements with Animation Frame Source Code"
        ],
        "JavaScript Element Clicker Game CSS grid JavaScript Dynamic Grid": [
          "JavaScript Game Clickers Code Game Introduction and code overview",
          "Dynamic Grid Game with JavaScript CSS Grid Resources and Code Examples",
          "Setup of HTML Web Page and JavaScript Code",
          "Create a Responsive Dynamic Grid using JavaScript.",
          "WebPage Elements into Array with JavaScript",
          "Add Event Listeners make Elements Clickable",
          "JavaScript Code updates tweaks for counters",
          "JavaScript Game Scoring and GamePlay Updates improvements",
          "JavaScript Game Clickers Code Review",
          "Final Source Code for Page Element Interactive Clicking Game"
        ],
        "JavaScript Slot Machine Dynamic Interactive JavaScript DOM project": [
          "JavaScript Slot Machine coding project Dynamic Interactive JavaScript DOM projec",
          "JavaScript Slot Machine Code Example and Source Code Guide",
          "Project Setup create HTML and JavaScript files",
          "JavaScript SlotMachine create interactive Button. Setup of HTML Web Page and Jav",
          "Create Game Elements JavaScript Apply CSS",
          "Update CSS styling to set dynamically created elements on page",
          "JavaScript adding animation frame to create smooth movement of elements.",
          "Movement of Slot Wheels with JavaScript Page element style updates.",
          "JavaScript Game Movement debugging and Fixes",
          "Movement and Game Results Setting Conditions for win JavaScript",
          "JavaScript Slot Machine Win Conditions and payout for matches",
          "JavaScript Slot Machine Final Code Tweaks and Updates",
          "JavaScript Slot Machine Final Code review and breakdown of source code",
          "JavaScript Slot Machine Final Code and source code"
        ],
        "JavaScript DOM Game Frogger Move elements update classes and more": [
          "JavaScript DOM frogger game element classes",
          "JavaScript Frogger Code Example and Source Code Guide",
          "JavaScript Game Setup Add Elements and create core files.",
          "How to Create a Dynamic Element Grid JavaScript CSS Game Grid",
          "How to move element class with Keyboard events Arrow Keys move element JavaScrip",
          "Player Movement with JavaScript Smooth movement animations",
          "JavaScript Game Objects Background Design adding colors",
          "JavaScript Game Obstacles added logs and cars",
          "JavaScript Game Object Movement of Classes motion and interaction",
          "JavaScript Frogger GamePlay Fixes Updates",
          "Frogger Game Debugging with JavaScript and game updates",
          "JavaScript Game Play Design and Improvements add images and graphics",
          "Complete JavaScript Frogger Game Code Review",
          "JavaScript Frogger Final Code and source code"
        ],
        "Coding Examples JavaScript DOM code samples Q&A response JavaScript Help": [
          "JavaScript Click Event AddEventListener vs onclick",
          "Coding Example AddEventListener vs onclick JavaScript Events",
          "JavaScript Console Object Debugging",
          "Coding Examples for JavaScript Console Object info warn error time group log",
          "Object Construction JavaScript coding example",
          "Source Code Object Construction JavaScript coding example code",
          "Dynamic JavaScript DOM page counters Element Objects examples",
          "Code example Dynamic JavaScript DOM page counters Element Objects examples",
          "Element Catcher Game Part 1",
          "Element Catcher Game Part 2",
          "Element Catcher Game Part 3",
          "Element Catcher Final Source Code for the game",
          "JavaScript Create Page Elements"
        ],
        "Advanced JavaScript Coding Examples and Code snippets": [
          "Lazy Image loader",
          "Learning Guides and resources PDF guides"
        ]
      },
      "requirements": [
        "HTML and CSS knowledge and JavaScript experience",
        "Use of editor to write code"
      ],
      "description": "Learn JavaScript DOM - This JavaScript Course will provide Java Script Essentials so that you can explore and learn more about JS JavaScript. Complete JavaScript course covers ES6 and modern JavaScript coding.\nBring your web pages to life with JavaScript - access the browser document object - select and update the elements on the page!\nLearn more about how to create dynamic web pages - connect with the DOM -> Update and manipulate page elements\nCovering the common methods and properties that JavaScript uses to select elements from the web page and apply changes with code. Fine tune your JavaScript Skills while creating fun interactive projects.\n- Challenges at the end of each lesson.\n- Modern JavaScript coding and examples\n- PDF resource and code guides in every section\n- Examples and how to apply logic to create the interactions you want\n- practice and learn more about the DOM while creating fun games\n- Unique projects to grow your skills - you won't find these anywhere else!!!\n- Content professionally designed to help focus your learning improve your skills\n- Add and expand your portfolio\nSource code is included - step by step learning on how to apply JavaScript to make thing happen\nJavaScript and the DOM - learning objectives to get you coding!!!\nProfessional instructor with over 20 years of JavaScript experience ready to help you learn and answer any questions you have.\nCovering the core code examples to interact with the DOM +++++ 3 AWESOME JAVASCRIPT DOM PROJECTS\nBuild an interactive game - generate a responsive grid with JavaScript and CSS Grid.\nJavaScript Slot machine with real element movement and tracking of element values.  Build with dynamic global game object that you can adjust to change the game dynamics\nJavaScript DOM Frogger game - Classes and how to track classes, update and check if element contain classes.  Logic for gameplay and how to create complete game from start to finish.  Game Grid and design.\nThe Document Object Model (DOM) connects web pages to scripts or programming languages by representing the structure of a document—such as the HTML representing a web page—in memory.\nThe DOM represents a document with a logical tree. Each branch of the tree ends in a node, and each node contains objects. DOM methods allow programmatic access to the tree. With them, you can change the document's structure, style, or content.\nComplete Introduction to the DOM and how to access page elements with JavaScript Code\nHow to write JavaScript editor used in the course and resources for lessons. Resources for writing code and for the upcoming lessons. Code editor used in the course\nHow to select all matching page elements with JavaScript QuerySelectorAll. DOM examples and how the DOM relates to JavaScript Code.  Mini JavaScript Object with nested objects to illustrate a simple example  of  the DOM element tree.  Update and selection of page elements using querySelector and querySelectorAll to select web page elements and update the value of  the object.  Select the element and manipulate the contents  with textContent property value.\nWeb Page Element Style Attribute Update with JavaScript. Page element style values within style property of the element.  Select an element and update the style values, get and set Attributes of the page element.\nAttributes ClassList Add Remove Toggle Contains within class of page element. Explore how to select and update the element attributes, add new attributes and get contents of existing attributes.  Useful classlist methods to toggle existing class, add and remove classes and check if the class exists on an element returning boolean value.\nAdd HTML to Page with JavaScript Code innerHTML property of web page elements.  Select a page element with JavaScript - create page elements with loop from JavaScript to create multiple elements on the page.  Add HTML to the page elements with innerHTML property value.  Setting hyperlink attribute to have target blank, selecting all hyperlinks on page.   Creating images with img elements as html code for page.  Generate a random color with JavaScript string method.  Lesson also includes a challenge to add html to a parent element and then select the new elements with JavaScript.\nJavaScript to Create new page elements and Remove Elements. Use of createElement method to generate new page elements with JavaScript Code.  Append Prepend AppendChild to parent Element methods of adding page elements to page.  JavaScript insertBefore to add  within an element and get the callback value.  Coding Challenge to create multiple image elements adding images and properties with JavaScript Code.\nJavaScript Traversing the DOM parents siblings children of elements.  Navigate the DOM tree, select a starting element and move to its related elements with JavaScript Code. Select element parent object, get list of elements children and child nodes. Select an element get the first last and siblings related to the current element. Move to the next element and update the element.\nClick Events and Event Listeners with JavaScript. Create interactive page elements that can be clicked to run blocks of code.  User actions to trigger code blocks with JavaScript.   How to setup click only once, addEventListeners and removeEventListeners.  Create custom object property values.  Update elements dynamically with code.\nHow to add Mouse Event Listeners with JavaScript code.  Common mouse events to page elements, on mouse over movement and other actions. Create events with mouse actions and how to track the events, what the difference is between mouse over and mouse out.\nEvents Listeners Keyboard Events with JavaScript Code. Track keyboard events, get key values and how events can be attached to input fields. Focus and Blur on input fields running events and JavaScript Code. Keyup and KeyDown events tracking arrow presses on keyboard.\nHow to Move an Element with Arrow presses on Keyboard using JavaScript. Coding exercise with JavaScript and keyboard events. Track arrow key presses and update the element position on the page. Key press to move element on screen using JavaScript.\nJavaScript Element Clicker Game CSS grid JavaScript Dynamic Grid\nObjective of this section is to create a dynamic fully responsive Game Grid - that can be interacted with and updated using javaScript. Game with dynamic Fully responsive Grid using JavaScript and CSS Grid.\nJavaScript Game Clicker Project Introduction. Introduce the JavaScript Game created in the upcoming lessons. Set the game and demo the final game project.\nSetup of HTML Web Page and JavaScript Code. Setup of page structure for the JavaScript Game. Using HTML and setup CSS to prep for Dynamic Elements with JavaScript.\nCreate a Responsive Dynamic Grid using JavaScript.  Use JavaScript to generate a grid that is fully responsive and ready for gameplay elements. Create main container element and grid items.\nWebPage Elements into Array with JavaScript. As you create the elements with JavaScript track them into a Global Array that can be used to easily select the elements and create interactions. This can be used to select elements by index value.\nAdd Event Listeners make Elements Clickable. Create interactions with page elements and user. Click elements and track click events on elements with JavaScript.\nJavaScript Code updates tweaks for counters. Update the element counters removing the timeout function call and adding counters on each element object. Add variables to elements using JavaScript.\nJavaScript Game Scoring and GamePlay Updates improvements. Adding more gameplay - with scoring and better visuals for the player. Use JavaScript to update hits and misses counter and display to the player. Add game difficulty option to increase play dynamically adjusting the game with changes in the main global parameters.\nJavaScript Game Clickers Code Review. High level overview of game code and the functions used to create the JavaScript game. Updated and options for gameplay. Full code review of JavaScript Game.\nJavaScript Slot Machine coding project Dynamic Interactive JavaScript DOM project\nExplore how you can create elements have user interactions and trigger visual events making your web pages come to life.\nProject Setup create HTML and JavaScript files. Setup html file prep to add JavaScript coding. Create HTML game container element, link to JavaScript source files. Select main output element using JavaScript.\nProject Setup create HTML and JavaScript files. Setup html file prep to add JavaScript coding. Create HTML game container element, link to JavaScript source files. Select main output element using JavaScript.\nJavaScript SlotMachine create interactive Button. Setup of HTML Web Page and JavaScript Code. Select main container element, add button for interaction. Allow user to toggle button content and select and invoke function on button click action. Setup of core Global Game properties to make the application dynamically adjust with new game object values. Append elements to the page with JavaScript. Create elements with JavaScript. Add event listeners to elements with JavaScript.\nCreate Game Elements JavaScript Apply CSS. Add and update the toggle of the clickable button element. Invoke a JavaScript function on click. Use of DOMContentLoaded event to build game board once the DOM is loaded and ready to use. Get document body properties to use values within the JavaScript code document.body.clientWidth. Create element maker function to generate elements within the JavaScript code, add and append new element to the parent, add a class, element tag, and html content within the element.\nUpdate CSS styling to set dynamically created elements on page. Adding CSS to position elements, set widths and heights to set the content on the page by applying classes with JavaScript to the newly created page elements.\nJavaScript adding animation frame to create smooth movement of elements. The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint. Add animation frames that can be added and removed with a global object.\nMovement of Slot Wheels with JavaScript Page element style updates. Update the position of the element on the page, move the elements restack the order of elements within a parent element. Getting element property values to use within the code to update position. offsetTop with JavaScript. Conditions and calculations to manipulate element style positions top and left to create animation of elements with JavaScript code.\nJavaScript Game Movement debugging and Fixes. JavaScript Game movement and debugging. How to troubleshoot your JavaScript game application and how to create and optimize gameplay. Update the game area styling with CSS. Adding and removing classes from JavaScript objects. Game playthrough and updates in element positions, style properties done with JavaScript.\nMovement and Game Results Setting Conditions for win JavaScript. Final spin results and retrieving the values of the output results. Comparison functions and setting up win conditions for JavaScript Game Object. JavaScript\nJavaScript Slot Machine Win Conditions and payout for matches. How to create a final tally object that can be used to calculate the final results for the player. Track matches and number of occurrences to be able to apply calculations on win.\nJavaScript Slot Machine Final Code Tweaks and Updates. Improvement of visuals, testing of game play to ensure proper functionality. Update to the global game object values to test dynamic content and game play. Adding of icons for more appealing game visuals, use fo colors to add more appeal to game play.\nJavaScript DOM frogger game Project\nPractice updating and manipulating web page elements while creating a fun interactive game using JavaScript and the DOM. All gameplay is DOM based and can be used and reused to get more familiar with how the DOM works and how you can create interactive and dynamic Web Pages.\nJavaScript Game Setup Add Elements and create core files. Info setup index and files. Prepare and plan main elements for gameplay. Setup CSS and use of querySelector to select Game Play Area element.\nHow to Create a Dynamic Element Grid JavaScript CSS Game Grid. Using JavaScript to generate elements grid using CSS grid. Add Rows and Columns to the dynamic fully responsive game grid. Setup of game board and game play area.\nHow to move element class with Keyboard events Arrow Keys move element JavaScript Example. Add movement to the game character with event listeners. Listen for arrow key presses and track user actions to player element on the screen. Move class of main character across board.\nPlayer Movement with JavaScript Smooth movement animations. Adding smooth movement and animation frame in JavaScript. Animation frames to call functions creating animations of elements on the web page. User keyboard clicks to element page movement.\nJavaScript Game Objects Background Design adding colors. Update and build JavaScript Frogger gameboard. Add roads and water classes to elements. Check if the frogger is on the safe final block. Use of classList to check which element contains specific classes needed for JavaScript Game\nJavaScript Game Obstacles added logs and cars. Add interactive items on JavaScript Gameboard. Create elements with classes added to represent the obstacles that will be moving. Create visuals for game play add elements that the player can interact with.\nJavaScript Game Object Movement of Classes motion and interaction. Selecting and updating classes in Game Animation. Creating gameplay and interactive obstacles that can move automatically on the screen. Update element classes and create motion of elements for the player within the JavaScript Frogger Game. Update game to have option for speed values to increase and decrease game speed.\nJavaScript Frogger GamePlay Fixes Updates. Play the game and test to debug. Create and catch areas to improve the gameplay and increase game functionality. Use of classlist to detect classes on elements. Setup to start and stop gameplay for game debugging and help with game calculations.\nFrogger Game Debugging with JavaScript and game updates. Play and check of game conditions, apply game logic to help move player through game. Add movement of frogger on log update of key presses for more responsive key actions and tracking of key events.\nJavaScript Game Play Design and Improvements add images and graphics. Adding images to increase game play appeal. Update with CSS and JavaScript code. Game testing and debugging methods. Adding visual to game, adjustment of global game values to dynamically change gameplay.\nComplete JavaScript Frogger Game Code Review. Overview of coding and game design points.",
      "target_audience": [
        "Anyone who wants to practice writing JavaScript",
        "JavaScript Beginners",
        "Web developers",
        "HTML and CSS coders"
      ]
    },
    {
      "title": "JSF - Learn how to deploy, add security and more",
      "url": "https://www.udemy.com/course/advanced-javaserver-faces-concepts/",
      "bio": "A guide on how to apply security to applications, deploy in real life scenarios, and create custom UIComponents",
      "objectives": [
        "Learn about Container Managed Security",
        "Learn about Custom UIComponents"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Introduction for new students"
        ],
        "Container Managed Security": [
          "BASIC AUTHENTICATION",
          "FORM-BASED-AUTHENTICATION part 1",
          "FORM-BASED-AUTHENTICATION part 2",
          "FORM-BASED-AUTHENTICATION part 3",
          "FORM-BASED-AUTHENTICATION part 4"
        ],
        "Real Life Deployments": [
          "Jelastic part 1",
          "Jelastic part 2"
        ],
        "Custom Components": [
          "part 1",
          "part 2",
          "part 3",
          "part 4"
        ]
      },
      "requirements": [
        "Netbeans 8+",
        "GlassFish 4+",
        "XAMPP"
      ],
      "description": "This course is intended for students who already know how to create web applications using JavaServer Faces, and its targeted to students who want to learn how to apply security to their applications, learn how to deploy in real life scenarios and learn how to create you very own custom UIComponents.\nThe course will contain about 4 hours of videos where we will learn more advanced concepts for JSF Web development.\nThe course is structured in sections by topic, i.e. security,deployments and custom components.",
      "target_audience": [
        "This course is intended for basic,intermediate students who understand basic JavaServer Faces concepts"
      ]
    },
    {
      "title": "Practical Web Programming 101",
      "url": "https://www.udemy.com/course/practical-web-programming-101/",
      "bio": "Build A Functional, End To End Website!",
      "objectives": [
        "Design and build an entire professional website with interactive features",
        "Use SQLite to store informatoin",
        "Build a class library in C#",
        "Work with IIS by setting up IIS, creating and configuring new applications",
        "Add extensions to existing framework classes in C#",
        "Use select, insert and update sql language features",
        "Create, run and interpret unit tests",
        "Use string interpolation in ECMASCRIPT 6 / JavaScript",
        "Use arrow functions in ECMASCRIPT 6 / JavaScript",
        "Attach & debug IIS processes",
        "Create classes in JavaScript",
        "Create powerful JavaScript code",
        "Write SQL code in an applied context",
        "Learn to think like an application architect"
      ],
      "course_content": {},
      "requirements": [
        "Student should know what HTML is; but even without it student can learn from the this course",
        "Willing to learn and be curious"
      ],
      "description": "Why take this course?\nThree main reasons:\n1. It's taught by an experienced programmer who can show you the kinds of unique insights no other person here can\n2. To become GREAT at web development, you have to learn how to integrate multiple skills. This course does just that.\n3. You will acquire years worth of skills and insights in only 10.5 hours\nIn this course, Erik, who's been doing website development for nearly two decades, demonstrates how  to integrate a suite of powerful technologies to build an interactive and fully functional modern website. This website has features like order placing, real time order tracking, and  more! You'll learn how to use each of the following technologies like an coding hero:\n1. JavaScript, used to add dynamic features to the website\n2. CSS, used to layout the website\n3. C#, used to power the backend of the website\n4. HTML, used to structure the overall web pages\n5. SQL Lite, used as an information storage system\n6. IIS, used as a web server\n7. jQuery, used as a way of making interactive pages\n8. JSON, used to transfer information\n9. Website design you can use in your own professional website\nThanks for reading, and if you're ready to push your skills much higher, JOIN TODAY!\nNotes:\n1. jQuery is a trademark of the JS foundation. This course is not affiliated with the JS foundation.\n2. Parts of promo licensed from presentermedia",
      "target_audience": [
        "Someone who wants to know how things are connected on the web"
      ]
    },
    {
      "title": "Create a Video/Audio To Text AI App- PHP, MySQL Whisper AI",
      "url": "https://www.udemy.com/course/create-a-video-audio-to-text-ai-web-app-php-mysql-whisper-ai/",
      "bio": "Create your Own Automatic Speech Recognition Using PHP, MySQL JS WITH Whisper AI",
      "objectives": [
        "Learn to generate transcript of Video, Audio File into plain text",
        "Learn to Work with AI to Generate Covert Video, Audio Files into text",
        "Learn to work with Whisper AI Using PHP",
        "Learn to Upload Video / Audio Files Using PHP And Get Transcript",
        "Learn to Translate Video / Audio Text Into Any Languages"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Xampp Installation",
          "Directory Structure"
        ],
        "Creating Main Page": [
          "Creating Main Page",
          "Creating js function to submit the image form",
          "Validating the input form"
        ],
        "Creating Main App": [
          "Creating first php class for our project",
          "Creating method upload files to the server",
          "Creating database for the application",
          "Creating a method to conenct with our database",
          "What Is Whisper AI",
          "Generating API KEY",
          "Creating method set api url",
          "Creating a method to api header to send",
          "Creating a method to set data to send it api",
          "Creating method to send request",
          "Creating a method to save generated files into database",
          "Creating a page to display recent generated files",
          "Creating a method display file data using id",
          "Creating a method to update the file",
          "Translating the content",
          "Creating jquery function display loading image in view page"
        ]
      },
      "requirements": [
        "Basic understanding of PHP and MySQL.",
        "Familiarity with AI would be beneficial but not required.",
        "Free OpenAI Account"
      ],
      "description": "In this course “Create your Own Automatic Speech Recognition Using PHP, MySQL JS WITH Whisper AI”, you will learn how to develop or create your own web app that allow you to covert video / audio file into plain text. we use openai AI model that allow us to build our very ASR tool using php that takes video or audio file and get transcript of that file and also you can use that to translate into many other languages as well.\n\n\nBy taking this course you will gain the skills by building your own AI-Powered app that get the video, audio file content that spoken on the file. With PHP, MySQL, and JavaScript.\n\n\nYou can highlight the project you create in this course, If anyone who sees this project in your portfolio might want to hire you because from this course you will gain skills which will help you to learn to build and Create Automatic Speech Recognition  With PHP, MySQL, using OpenAI's Whisper AI API.\n\n\nSupport\nBy taking this course you will get my full support. I've always loved to help my students (could be you). I’ve answered all that question that students have asked so far. I’m always in a ninja mood, if there’s a question it’ll be answered within a moment. By all this means if you have any errors. I'll be happy to check codes, errors.\n\n\nThis Course Covers The Following Features:\nBuild Audio/Video Transcription App\nTranslate Video Audio Content Text into different Languages\nVideo / Audio Generated Gallery\nVideo / Audio Upload\nGet Content of Video / Audio Files Into Plain text\n\n\nPlease\nlook at all the lectures to see more things that are covered.",
      "target_audience": [
        "Beginner PHP developer looking to enhance your skill set by creating webapp that coverts video, audio file into text using PHP, MySQL, JS",
        "Beginner: Who wants to learn to build own Automatic Speech Recognition using Whisper AI With PHP"
      ]
    },
    {
      "title": "HTML5 + CSS3 Responsive Web Design",
      "url": "https://www.udemy.com/course/html5-css3-responsive-web-design-vtc/",
      "bio": "Leap into the world of adaptive web design with HTML5 & CSS3 Responsive Web Design!",
      "objectives": [
        "By the end of this VTC course, you'll have three beautiful designs, each one displaying automatically depending on the device being used to view it."
      ],
      "course_content": {
        "Getting Started": [
          "Welcome",
          "Understanding Responsive Design",
          "Resolutions We Will Be Targeting",
          "A Look at What We Will Build"
        ],
        "Wireframing Layouts in Illustrator": [
          "Setting Up the High Resolution Wireframe",
          "Building the Header",
          "Setting Up the Navigation and Slideshow",
          "Constructing the Content Boxes",
          "Creating the News Feed Area",
          "Finishing Up with the Footer",
          "Starting the Medium Resolution Wireframe",
          "Building the Header and Navigation Area",
          "Building the Slideshow and Content Boxes",
          "Constructing the News Feed",
          "Finishing Up with the Footer",
          "Setting Up the Low Resolution Wireframe",
          "Wireframing the Header Area",
          "Constructing the Main Navigation Menu",
          "Building the Content Boxes",
          "Setting Up the News Feed Area",
          "Finishing Up and Final Thoughts"
        ],
        "Building the Designs in Photoshop": [
          "Setting Up the Wireframe for Import",
          "Opening the High Resolution in Photoshop",
          "Breaking Apart the Wireframe pt. 1",
          "Breaking Apart the Wireframe pt. 2",
          "Breaking Apart the Wireframe pt. 3",
          "Formatting the Header",
          "Setting Up the Site Logo pt. 1",
          "Setting Up the Site Logo pt. 2",
          "Updating the Logo",
          "Formatting the Navigation Menu",
          "Inserting the Menu Items",
          "Building the Slideshow",
          "Setting Up the First Content Box",
          "Inserting the Content Box Title",
          "Building the Second Content Box pt. 1",
          "Building the Second Content Box pt. 2",
          "Building the Second Content Box pt. 3",
          "Setting Up the Third Content Box",
          "Inserting the Content Box Photo",
          "Placing the Content Box Title",
          "Inserting Placeholder Text",
          "Finishing Up the Design"
        ],
        "Setting Up for the Medium Width Design": [
          "Preparing the Wireframe for Import",
          "Bringing the Wireframe Into Photoshop",
          "Extracting the Header",
          "Pulling Out the Menu and Slideshow",
          "Finishing Up the Wireframe BreakUp",
          "Formatting the Header",
          "Building the Navigation Menu",
          "Formatting the Slideshow",
          "Setting Up the First Content Box",
          "Finishing Up the Content Boxes",
          "Formatting the Footer"
        ],
        "Setting Up for the Low Width Design": [
          "Bringing the Wireframe into Photoshop",
          "Extracting the Header and Menu",
          "Pulling Out the Content Boxes",
          "Finishing Up the Wireframe Breakup",
          "Formatting the Header",
          "Building the Navigation Menu",
          "Readjusting the Layout",
          "Setting Up the First Content Box",
          "Formatting the Second Content Box",
          "Finishing Off the Design"
        ],
        "Getting Set Up for Responsive Design": [
          "Setting Up the HTML Page",
          "Setting Up the External Style Sheet",
          "Testing the External Style Sheet",
          "Building the Three Media Queries",
          "Testing the Media Queries",
          "Using Commenting to Simplify the View"
        ],
        "Building the HTML Structure": [
          "Building the Main Layout Structure",
          "Wrapping the Code into a Container Div",
          "Building the Main Navigation Menu",
          "Structuring the Content Boxes",
          "Building the News Feed Area",
          "Setting the Footer Structure"
        ],
        "Constructing the High Res Layout": [
          "Getting Started with the High Res Layout",
          "Formatting the Layouts Header",
          "Formatting the Menu pt. 1",
          "Formatting the Menu pt. 2",
          "Formatting the Slideshow",
          "Setting Up the Content Boxes",
          "Applying Formatting to the News Feed",
          "Finishing Off with the Footer"
        ],
        "Building the Medium Res Layout": [
          "Setting Up the Medium Resolution Layout",
          "Formatting the Header",
          "Formatting the Navigation Menu",
          "Applying Formatting to the Slideshow",
          "Setting the Content Box Formatting",
          "Adjusting the News Feed",
          "Finalizing with the Footer"
        ],
        "Constructing the Low Res Layout": [
          "Getting Started with the Low Res Layout",
          "Formatting the Header and Nav Menu",
          "Formatting the Content Boxes",
          "Applying Formatting to the News Feed",
          "Finishing Up with the Footer"
        ]
      },
      "requirements": [
        "Adobe Illustrator and Adobe Photoshop (recommended)"
      ],
      "description": "With Geoff Blake as your guide, you'll learn how to build wireframe responsive designs in Adobe Illustrator, apply design and graphics to them in Photoshop, and then rebuild the designs in code. Discover the power of CSS3's media queries to target various devices and resolutions, including mobile, tablet, and desktop browsers. Learn how to extract Photoshop content for use in your designs, insert it with modern HTML5, and control it with a variety of CSS3 techniques. By the end of this VTC course, you'll have three beautiful designs, each one displaying automatically depending on the device being used to view it. This title is a self-paced software training course delivered via pre-recorded video. We do not provide additional information outside of the posted content.\nWork files for this course can be downloaded from the first lecture.",
      "target_audience": [
        "Web Designers with working knowledge of HTML"
      ]
    },
    {
      "title": "Tailwind CSS full e-commerce site with snipcart ~Tailwind v3",
      "url": "https://www.udemy.com/course/tailwind-css-ecommerce/",
      "bio": "Learn Tailwind CSS by building a fully functional e-commerce site with Tailwind CSS v3 & snipcart (Tailwind CSS 2024)",
      "objectives": [
        "Increase your value as a web developer",
        "Learn Tailwind CSS by building a full e-commerce layout",
        "Integrate full e-commerce functionality using snipcart",
        "Deploy your site LIVE to netlify"
      ],
      "course_content": {
        "Introduction": [
          "Important! Read this before you start the course!",
          "Introduction",
          "Udemy ratings & reviews",
          "Project setup"
        ],
        "Build out the main page": [
          "Build the top nav bar",
          "Add custom Google fonts to Tailwind CSS",
          "Build the hero section",
          "Add the hero content",
          "Create the products section",
          "Add the quantity and add to cart button"
        ],
        "Implement snipcart": [
          "Add the snipcart script and hook up first product",
          "Implement product quantity",
          "Add the cart link, total items in cart, and total cart amount",
          "Add the sign in & register link",
          "Add the remaining products and add responsive design",
          "Add the footer with social icons"
        ],
        "Hosting": [
          "Deploy to netlify",
          "BONUS!"
        ]
      },
      "requirements": [
        "Some knowledge of HTML & CSS would be beneficial - everything else is covered!"
      ],
      "description": "Are you ready to increase your value as a web developer and level up your web development game using Tailwind CSS & Snipcart? In this beginner-friendly Tailwind CSS e-commerce course we will build a fictional e-commerce site called \"ManBags - Luxury bags for men\" using Tailwind CSS & Snipcart. You'll go from zero to hero in building a fully functional, responsive e-commerce website. We'll go through the intricacies of Tailwind CSS, Snipcart, and Netlify, teaching you how to integrate these cutting-edge technologies seamlessly. No prior knowledge of Tailwind CSS, Snipcart, or Netlify is required! Everything you need to know is covered in the course.\nThis Tailwind CSS e-commerce course is perfect for junior or mid-level devs who want to create a full e-commerce solution for clients but don't want the headache of building and maintaining a complete e-commerce solution from scratch. We'll even cover generating product images, names, and descriptions using AI tools in seconds! By the end of the course you'll have a fully functioning e-commerce site built with Tailwind CSS & Snipcart, hosted LIVE on netlify.\nWhat You'll Build\nA stunning, responsive e-commerce website with Tailwind CSS with minimal JavaScript.\nA product catalog featuring 3 unique products.\nA secure and user-friendly shopping cart, with user login and registration, using Snipcart.\nA website hosted on Netlify for optimal performance and scalability.\nSnipcart Integration\nImplement a fully functional shopping cart with real-time updates, secure checkout, user login & registration, all using Snipcart's robust e-commerce solution.\nNetlify Deployment\nDiscover the ease of deploying and managing your site with Netlify, ensuring high availability, continuous integration, and lightning-fast load times.",
      "target_audience": [
        "Beginner developers who want to build full e-commerce sites without the headache of building an entire checkout process from scratch"
      ]
    },
    {
      "title": "MERN Stack Real-Time Blogger App - React ,Node ,Socket IO",
      "url": "https://www.udemy.com/course/mern-stack-real-time-blogger-app-react-node-socket-io/",
      "bio": "Build a Real Time Blogger App with Like , Share , Comment , Notifications , Text Editor Functionality",
      "objectives": [
        "Working The Draft JS WYSIWYG Editor , Implementing all the features in the text editor",
        "Working with Socket IO , Detailed explanation about Socket IO",
        "Create, Read, Update, and Delete Blogs",
        "Like Blog, Comment on Blog, and Share Blog with other users.",
        "Activity tracker of the logged-in user. Get all the blogs liked, commented on, and shared by users.",
        "Real-time notifications to the author whenever any action is performed on the blog.",
        "Mark notifications as read functionality.",
        "Pushing Code to GitHub , Hosting application in Render",
        "Complete Code Resources"
      ],
      "course_content": {},
      "requirements": [
        "React Basics",
        "Node Basics"
      ],
      "description": "Hi Guys, Welcome to the course 'MERN Stack  Real Time Chat Application'\nIn this course, you will learn the following topics\n\n\nBuilding full-stack real-world applications from scratch\nWorking with complex MongoDB, queries, schemas, models\nWorking The Draft JS WYSIWYG Editor\nImplementing all the features in the text editor\nWorking with Socket IO\nDetailed explanation about Socket IO\nCreate, Read, Update, and Delete Blogs\nLike Blog, Comment on Blog, and Share Blog with other users.\nActivity tracker of the logged-in user.\nGet all the blogs liked, commented on, and shared by users.\nReal-time notifications to the author whenever any action is performed on the blog.\nMark notifications as read functionality.\nPushing Code to GitHub,\nHosting application in Render\n24/7 Q/A Support.\nMERN stands for MongoDB, Express, React, and Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework and Node.js is a famous and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. Meta and a community of individual developers and companies maintain it.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser designed to build scalable network applications.",
      "target_audience": [
        "Full Stack Developers",
        "MERN Stack Developers",
        "Students who want to build Real Time Applications"
      ]
    },
    {
      "title": "CSS",
      "url": "https://www.udemy.com/course/csswebdev/",
      "bio": "Cascading Style Sheets (CSS) is a great way to further your web site building skills.",
      "objectives": [
        "Advanced Formatting and Style with CSS"
      ],
      "course_content": {
        "Intro to CSS": [
          "How CSS Works",
          "CSS Set Up",
          "Redefine Body",
          "Redefine h1 & h2",
          "Redefine td & img",
          "Creating Classes",
          "Setting Padding",
          "Background Images",
          "No-Repeat Bkg",
          "External Styles",
          "Inline Style",
          "Using Span",
          "Course Check List"
        ],
        "Designing with CSS": [
          "Design with CSS",
          "Float",
          "DIV Intro",
          "Border and Padding",
          "DIV Trick",
          "Overflow Scroll",
          "Centering DIVs",
          "Floating DIVs",
          "DIV Layout Method",
          "Create a DIV Layout",
          "ID's",
          "Vertical Expanding DIVs",
          "Course Check List"
        ],
        "CSS Layout": [
          "Compound Styles",
          "CSS Links",
          "Links with Bullets",
          "Compound Links",
          "Course Check List"
        ]
      },
      "requirements": [
        "HTML"
      ],
      "description": "Once you're familiar with HTML, Cascading Style Sheets (CSS) is a great way to further your web site building skills. CSS is used to extend the formatting and stylistic capabilities of your HTML documents, allowing greater flexibility and control in page layout and design.  In this course, you will find worksheets and sample files to play with.  This 2 hour course will allow your designer fingerprint on any website.",
      "target_audience": [
        "Advanced Web Developers"
      ]
    },
    {
      "title": "Angular & Firebase - CRUD + Auth + Deployment",
      "url": "https://www.udemy.com/course/angular-firebase-crud-auth-deployment-2024/",
      "bio": "Build a Complete Angular Application: Master CRUD, Authorization, and Firebase Deployment!",
      "objectives": [
        "Building full app with Angular framework.",
        "Utilizing Bootstrap for styling.",
        "Using Firebase Firestore as database.",
        "App deployment to Firebase Hosting."
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Requirements",
          "App Demo"
        ],
        "Angular Installation & Project Setup": [
          "Angular Installation & Project Setup"
        ],
        "Main Component Setup": [
          "Creating Main Component",
          "Installing Bootstrap in Angular Project",
          "Component HTML Layout"
        ],
        "Firebase Setup and CLI Installation": [
          "Creating and Setting Up Firebase Project",
          "Firebase-Tools and Angular Fire Installation and Project Setup"
        ],
        "CRUD Requests": [
          "Create Request",
          "Get Request",
          "Delete Request",
          "Update Request"
        ],
        "User Authorization - Login/Logout/Is-Logged-In": [
          "Firebase Auth Setup",
          "Login Functionality",
          "Logout and Is-Logged-In Functionality"
        ],
        "Production & Deployment": [
          "Production & Deployment"
        ]
      },
      "requirements": [
        "Having basic knowledge of JavaScript and Angular is preferred.",
        "The course is conducted in the MS Windows environment and utilizes VS Code as the IDE"
      ],
      "description": "Welcome to our comprehensive Angular and Firebase course! Dive into the world of web development as you learn to create dynamic and modern web applications from scratch. This course is designed to equip you with the essential skills needed to build a complete web application with Angular v15 and Firebase, covering everything from setting up your development environment to deploying your application online.\nThroughout the course, you'll master Angular's core features, including components, services, and routing, enabling you to create sophisticated user interfaces and interactive experiences. You'll also delve into Firebase, learning how to set up and configure Firestore to store and manage your application's data efficiently.\nOne of the key focuses of the course is implementing CRUD (Create, Read, Update, Delete) functionality, allowing you to interact with your application's data seamlessly. Additionally, you'll explore Firebase Authentication, discovering how to securely authenticate a user.\nBy the end of the course, you'll have a deep understanding of Angular and Firebase, as well as the confidence to build and deploy your own web applications. Whether you're a beginner eager to learn the fundamentals or a seasoned developer looking to expand your skill set, this course provides the perfect opportunity to unlock the full potential of the Angular and Firebase power duo!\nJoin us on this exciting journey and take your web development skills to the next level! Enroll now and start building dynamic, modern web applications with Angular and Firebase!",
      "target_audience": [
        "This course is designed for anyone interested in learning how to leverage the power of Angular and Firebase to build dynamic web applications. Whether you're a beginner looking to dive into web development or an experienced developer seeking to expand your skill set, this course offers comprehensive guidance on integrating Angular with Firebase Firestore. By the end of this course, you'll have a solid understanding of how to establish basic connections with Firestore, manipulate data, and deploy your Angular applications to Firebase Hosting."
      ]
    },
    {
      "title": "WhatsApp Web Clone from Scratch with ReactJS",
      "url": "https://www.udemy.com/course/whatsapp-web-clone-from-scratch-with-reactjs/",
      "bio": "Learn to build WhatsApp Web Clone with ReactJS, & Firebase",
      "objectives": [
        "Modern Javascript (ES6, ReactJS)",
        "Firebase Advance Concepts",
        "Firebase Firestore Database"
      ],
      "course_content": {
        "Introduction": [
          "App Setup",
          "Basic Layout"
        ],
        "UI Design": [
          "Sidebar UI (Conversation List)",
          "Chatbox UI (Chat Messages)"
        ],
        "Firebase OAuth": [
          "Signin UI",
          "Loading Cover Design",
          "Custom Toast Notifications",
          "Phone Authentication with SMS",
          "Phone Authentication with SMS (Verification)"
        ],
        "Inbox & Chat (Firebase Setup)": [
          "Load Inbox from Firestore",
          "Connect Chat with Inbox from Firestore"
        ]
      },
      "requirements": [
        "Basic HTML, CSS, Javascript"
      ],
      "description": "This is a front to back `WhatsApp Web Clone` course for absolutely everybody. We are going to build complete WhatsApp Web with these features:\n1. Advance UI Concepts: Design front end easily without thirdparty libraries.\n2. Custom Notifictaion System (Toasts): We will setup Android like Toasts Notifications with Animation.\n3. Firebase Phone Authentication: We will inetgrate Firebase Phone Authentication Out of the box\n4. Conversation / Inbox System\n5. Advance Chat with Text, Images, Audio Messages, File sharing, Typing Indicator, Last Seen and all that.\n6. Audio / Video Calls using WebRTC\n7. Advance Search System\nand more.\nThere are lot more than that in this course and can't be enclosed in here! Whether you are beginner or an experienced programmer. There is something for everyone :)",
      "target_audience": [
        "Front-end & Back-end Developers"
      ]
    },
    {
      "title": "Pass PL-100: Microsoft Power Platform App Maker in 3 Days",
      "url": "https://www.udemy.com/course/pass-pl-100-microsoft-power-platform-app-maker-in-3-days/",
      "bio": "PL-100: Microsoft Power Platform App Maker | Real Questions | Dump | Covers All Exam Topics",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "80+% Student Passed Exam After Only Studying These Questions. Pass yours, enroll now!\n\n\nFree Sample Question 1 out of 3:\nYou work for the Business Solutions team at Nova Corp and have an unmanaged solution with several apps that you need to move to a shared development environment. In this new environment, your team must be able to add, modify, and delete components within the solution. You decide to export the solution as Managed. Does this action achieve the objective?\n\n\nA. Yes, it does\nB. No, it does not\n\n\nCorrect Answer: B\nExplanation:\nThe correct answer is B because the action does not achieve the objective.\nThe core of this question lies in understanding the difference between Managed and Unmanaged solutions, which is a fundamental concept in Power Platform Application Lifecycle Management (ALM).\n* Managed Solutions: These are used to deploy completed applications to test and production environments. Once a managed solution is imported into an environment, it is locked. You cannot directly edit its components (like adding, modifying, or deleting them). This provides control and ensures that production environments are not changed in an uncontrolled manner. You can only remove the entire solution, which also removes all its components.\n* Unmanaged Solutions: These are used in development environments. They are essentially containers for work-in-progress. In an environment with an unmanaged solution, you can freely add, modify, and delete components.\nThe requirement states that in the target environment, the solution must allow for components to be \"added, amended, renewed, removed, deleted, or tested.\" This describes a development scenario where active changes are needed. Therefore, an Unmanaged solution is required. Using a Managed solution would prevent these actions, failing to meet the objective.\n\n\n\n\n\n\nFree Sample Question 2 out of 3:\nThe Customer Insights team at InnovateForward needs to automatically process large volumes of product feedback. You have been tasked with building an AI Builder model that examines textual client assessments to understand the key topics being discussed. Which AI model should you create?\n\n\nA. A Category classification model.\nB. An Object detection model.\nC. A Form processing model.\nD. A Prediction model.\n\n\nCorrect Answer: A\nExplanation:\nThe goal is to create an AI model that \"examines client assessments regarding products.\" This task involves analyzing and understanding the content of the assessments, which are typically text-based feedback, reviews, or comments.\n* A. A Category classification model: This is the correct choice. Category classification is a text analytics model used to classify text into custom categories. For client assessments, you could create categories such as \"Positive Feedback,\" \"Negative Feedback,\" \"Bug Report,\" or categorize them by product feature like \"User Interface,\" \"Performance,\" or \"Battery Life.\" This directly addresses the need to \"examine\" and understand the feedback.\n* B. An Object detection model: This model is used to identify and locate objects within images. It is not suitable for analyzing text.\n* C. A Form processing model: This model is designed to extract structured data (key-value pairs, tables) from documents and forms, like invoices or receipts. While an assessment might be collected on a form, the primary goal here is not just to extract the data but to analyze and classify the *meaning* of the textual content, which is the job of category classification.\n* D. A Prediction model: This model uses historical data to predict a future numerical outcome, a \"yes/no\" answer, or which of multiple options is most likely. It doesn't analyze and classify existing text content as required.\n\n\n\n\n\n\nFree Sample Question 3 out of 3:\nYou work for the Sales Operations team at Summit Financials and are building a model-driven app. The app must allow users to create and modify a list of all active accounts. To display this list, you implement the Data table control. Does this action achieve the objective?\n\n\nA. Yes, it does\nB. No, it does not\n\n\nCorrect Answer: B\nExplanation:\nThe correct answer is B. The proposed action does not achieve the objective.\nThe \"Data table\" control is a component used specifically in Canvas apps to display data in a tabular format. It is not a standard component for building the primary user interface of a model-driven app.\nIn a model-driven app, the standard component for displaying a list of records (such as active accounts) is a View. To meet the requirement of allowing users to modify records directly from the list, you would configure the view to use the Power Apps Editable Grid control. This control allows for inline editing of data. New records are typically created using the \"New\" button on the command bar above the view.\nTherefore, using a \"Data table\" control is the incorrect approach for a model-driven app.\n\n\n\n\nWhy Choose Our Certification Exam Prep Courses?\nWhen it comes to passing your certification exam—whether it’s AWS, Microsoft, or Oracle—quality training makes all the difference. Our exam prep courses are designed to give you the knowledge, confidence, and skills you need to succeed on test day and beyond.\n\n\nComprehensive Coverage of All Exam Objectives\nWe teach every topic outlined in the official certification blueprint. No shortcuts, no skipped sections—just complete coverage to ensure you walk into your exam fully prepared.\n\n\nClear, Step-by-Step Learning\nOur expert instructors break down complex concepts into easy-to-follow explanations. You won’t just memorize answers—you’ll understand the reasoning behind them so you can apply your knowledge in any scenario.\n\n\nRealistic Practice for Real Exam Readiness\nExperience exam-like simulations, practice questions, and hands-on scenarios that mirror the style, difficulty, and pacing of the real test. This ensures that by the time you sit for your certification, you’ve already “been there” before.\n\n\nAlways Current, Always Relevant\nTechnology changes fast—and so do exams. That’s why we continuously update our content to match the latest certification requirements and platform capabilities across AWS, Microsoft, and Oracle.\n\n\nDesigned for All Skill Levels\nWhether you’re a seasoned professional aiming to validate your expertise or a newcomer taking your first steps in the cloud and IT world, our courses adapt to your needs with clear explanations, structured practice, and actionable insights.\nOur Promise: We deliver exam prep that’s more than just test questions—it’s a complete learning experience that equips you with real-world skills, helps you master the material, and gives you the confidence to pass your certification the first time.\n\n\nStart your certification journey today with trusted, high-quality training that works—no matter which exam you’re taking.",
      "target_audience": [
        "Business analysts, functional consultants, and citizen developers aiming to leverage Microsoft Power Platform for building business solutions.",
        "Individuals preparing for the PL-100 certification exam to validate their expertise in Power Platform app development.",
        "Professionals seeking to automate tasks, optimize processes, and create data-driven applications without extensive coding knowledge.",
        "IT professionals and solution architects collaborating with business teams to deliver end-to-end Power Platform solutions.",
        "Anyone interested in enhancing their skills in low-code application development and automation using Microsoft Power Platform."
      ]
    },
    {
      "title": "Develop a perfect ORM like Laravel Eloquent",
      "url": "https://www.udemy.com/course/develop-a-perfect-orm-like-laravel-eloquent/",
      "bio": "Develop a powerful object relational mapping system like Laravel Eloquent in PHP",
      "objectives": [
        "You will learn how to simulate Mysql tables and relations in PHP",
        "You will learn how to create optimized queries and eager load relations",
        "You will learn how to do all types of database operations with classes and methods",
        "You will learn how to create a powerful ORM from scratch"
      ],
      "course_content": {
        "Introduction & server configuration": [
          "Introduction",
          "Download & install tools",
          "Configure server and restrict user access",
          "Code index file and autoload classes"
        ],
        "DB class implementation": [
          "Implement constructor & query methods",
          "Implement fetch & insertGetId methods",
          "Implement insert, update and delete methods",
          "Prevent multiple database connections"
        ],
        "CommandBuilder class implementation": [
          "Create class fields",
          "Implement select & buildSelectCommand methods",
          "Implement where method and test class",
          "Implement orWhere method",
          "Implement whereIn method",
          "Implement join method",
          "Implement get & avg methods",
          "Implement other aggregate function methods",
          "Implement buildInsertCommand method",
          "Implement buildDeleteCommand method",
          "Implement buildUpdateCommand method"
        ],
        "Model & Builder classes implementation": [
          "Introducing Model & Builder classes",
          "Delegate table level operations to Builder with __callStatic",
          "Implement Builder query methods - Part 1",
          "Implement Builder query methods - part 2",
          "Implement Builder first, find and create methods",
          "Implement Builder mass update and mass delete methods",
          "Implement single model update and delete methods",
          "Implement single model save method"
        ],
        "HasManyRelation class implementation": [
          "Introducing relations",
          "Create posts table for has many relations",
          "Implement constructor & initiateConnection methods",
          "Test relation class"
        ],
        "BelongsToRelation class implementation": [
          "Implement belongsTo and initiateConnection methods"
        ],
        "HasOneRelation class implementation": [
          "Create profiles table",
          "Implement hasOne and initiateConnection methods"
        ],
        "Loading relationships": [
          "Eager loading and lazy loading explained",
          "Implement With method of Builder class",
          "Implement Get method of Builder class for eager loading - Part 1",
          "Implement Get method of Builder class for eager loading - Part 2",
          "Implement HasMany and BelongsTo relations abstract methods"
        ],
        "BelongsToManyRelation class implementation": [
          "Create ratings table and fix left issues",
          "Implement belongsToMany and constructor methods",
          "Implement initiateConnection method",
          "Implement buildRelationDataQuery method",
          "Add pivot table columns to relation data",
          "Implement addRelationData method",
          "Implement attach method",
          "Implement detach method",
          "Fix left problems"
        ]
      },
      "requirements": [
        "Basic PHP",
        "Basic Mysql",
        "Basic object oriented skills"
      ],
      "description": "If you ever wanted to develop a powerful Object relational mapping system (ORM) and enhance your object oriented skills, then this course helps a lot. Having basic knowledge of object oriented programming, the course is designed for programmers who are tired of writing short and long SQL queries in PHP applications and want to learn how to query database in a structured and optimized way with object oriented classes and methods. This is specially beneficial for beginner Laravel developers who struggle working with Eloquent  ORM. Learning how to create a powerful ORM, it will be fairly easy for developers to work with Eloquent or any other ORM. In this course you will learn how to build and execute most complicated  queries with classes and methods in PHP without writing long boring SQL queries. We will implement a library of classes that will help us from creating and executing any type of query to optimizing queries and loading complex data and relations. All in details. Course will be updated to introduce more complicated query methods and also execution of a list of complicated queries will be instructed.",
      "target_audience": [
        "PHP developers who want to learn how to use mysql in an efficient and optimized way in their apps",
        "Laravel developers who want to master Eloquent",
        "Programmers who want to enhance object oriented skills"
      ]
    },
    {
      "title": "Next.js 14 Expense Tracker and Money Manager App",
      "url": "https://www.udemy.com/course/nextjs-14-expense-tracker-and-money-manager-app/",
      "bio": "Build a personlized expense tracker with Latest version of Nextjs , Mongo DB , Zustand , Ant Design and Tailwind CSS",
      "objectives": [
        "Next JS 14 Latest Features like Server Actions , App Router , Middlewares etc.",
        "Clerk User Authentication to make this application accessible to multiple users",
        "Personalized Income and Expense categories for every user.",
        "Transactions CRUD Operations",
        "Fetch and show transactions using Next JS Sever components",
        "Filter transactions with different combinations using next js search params and server actions.",
        "Date and Date Range Filters to analyse the transactions in a particular period of time.",
        "Analyse the transactions based on count , amount , total turnover.",
        "Category wise analysis and statistics for both income and expense transactions.",
        "Visual Representation of Transactions in the Dashboard",
        "By the end of the course you will know you to work full stack applications in both local and production environment",
        "Deploying the app to Vercel"
      ],
      "course_content": {
        "Introduction": [
          "Creating Next App",
          "Install and Setup Ant Design Components",
          "Ant Design Theming"
        ],
        "User Authentication": [
          "Clerk Intro and Setup",
          "Setup Sign-in and Sign-up Pages",
          "Sign-in and Sign-up Functionalities",
          "Authentication screens styling"
        ],
        "Save Users To Mongo DB": [
          "Setup Mongo DB",
          "User Model",
          "Save User"
        ],
        "Layout & State Management": [
          "Implement Private Layout",
          "Layout Conditions",
          "Setup Zustand (State Management)"
        ],
        "User Profile": [
          "Setup Profile Page",
          "Show Default Categories",
          "Customize Categories",
          "Loader"
        ],
        "Transactions": [
          "Transactions Module Intro",
          "Add Transaction Form",
          "Transaction Model and Save Transaction",
          "Show Transactions",
          "Transaction Table Actions"
        ],
        "Edit and Delete Transactions": [
          "Edit Transaction",
          "Delete Transaction"
        ],
        "Transaction Table Filters": [
          "Filters UI",
          "Show Filters Selected",
          "Filters Server Action"
        ],
        "Dashboard": [
          "Selecting Date Range",
          "Show Overall Statistics"
        ],
        "Category Level Analysis": [
          "Data structure for category analysis",
          "Income Analysis",
          "Expense Analysis"
        ]
      },
      "requirements": [
        "Next JS Basics"
      ],
      "description": "Hi , Welcome to the course Next JS 14 Expense Tracker and Money Manager App 2024\nAn expense tracker is a platform where we will list all our income and expenditures from various sources like salary , freelance , food , travel , medical , education etc to make an analysis about our money. So we can have any idea where we are spending our amount.\nGenerally we will use excel sheets , online money tracker sites and some people will maintain a notes.\nSo Here My Question Is , As a Web Developer do we have to depend on the above things to track our money.\nMy Answer is NO , Even beginners can develop their own expense trackers if the know how to perform CRUD operations using Next JS. And that's what we will learn in this course.\n\n\nSo In this course I will teach you how to develop your own Expense Tracker with the worlds most popular tech stack MERN.\nWe will learn the following concepts on the next six hours.\n\n\nTechStack\n\n\nNext JS 14 for Pages , Server Actions\nAnt Design + Tailwind CSS for Styling and Custom Components\nClerk for User Authentication\nZustand for State Management\n\n\nProject Features\n\n\nNext JS 14 Latest Features like Server Actions , App Router , Middlewares etc.\nClerk User Authentication to make this application accessible to multiple users\nPersonalized Income and Expense categories for every user.\nTransactions CRUD Operations\nFetch and show transactions using Next JS Sever components\nFilter transactions with different combinations using next js search params and server actions.\nDate and Date Range Filters to analyse the transactions in a particular period of time.\nAnalyse the transactions based on count , amount , total turnover.\nCategory wise analysis and statistics for both income and expense transactions.\nVisual Representation of Transactions in the Dashboard\n24/7 Support from the team\nBy the end of the course you will know you to work full stack applications in both local and production environment\nDeploying the app to Vercel",
      "target_audience": [
        "Students who want to build full-stack applications using nextjs latest version"
      ]
    },
    {
      "title": "Complete FastAPI Mastery course",
      "url": "https://www.udemy.com/course/fastapimastery/",
      "bio": "FastAPI from beginner to advanced, middleware, databases, security, testing and debugging, file handling and a lot more",
      "objectives": [
        "FastApi foundations, basics and advanced features",
        "API creation, management and deployment",
        "Authentication and authorization",
        "Testing, debugging, error handling and management",
        "SQL, relational databases, SqlAlchemy and ORM",
        "Step by step code writing where you will learn by doing",
        "Advanced features such as asynchronous programming and web socket communication",
        "Lots more features that will get you from a beginner to an advanced developer"
      ],
      "course_content": {
        "Introduction to FastAPI and setup": [
          "Course Introduction",
          "Overview of FastAPI",
          "A quick word about Udemy reviews",
          "Installation and Setup",
          "Building a 'Hello World' FastAPI Application",
          "Section Recap"
        ],
        "Basics of FastAPI": [
          "Exploring Key Features of FastAPI",
          "The Power of Path Parameters",
          "Pathway Planning: Order and Precision",
          "Handling Nested Routes",
          "Decoding Query Parameters",
          "Crafting Dynamic URLs",
          "Optional Query Parameters",
          "Understanding Request Bodies and Automatic Handling",
          "Parameter Integration and Analysis",
          "Path & Query Parameters: A Practice Session",
          "Creative FastAPI Challenge",
          "Creating a Humorous Endpoint",
          "A Quick Recap"
        ],
        "Essentials of Request Handling": [
          "Section overview",
          "Exploring Query Parameters",
          "String Validations",
          "Handling Parameters in Request Body",
          "Getting Started with Body Fields",
          "Working with Simple Nested Models",
          "Practice: Essential Request Handling",
          "Challenge: Create a Simple Data Endpoint",
          "Solution: Simple Data Endpoint",
          "Section recap"
        ],
        "Data Management and Responses": [
          "Section overview",
          "Understanding Data Types in FastAPI",
          "Techniques for Cookies and Headers",
          "Form Data and File Uploads",
          "Practice: Data Handling and Responses",
          "Challenge: Building a Simple API Response",
          "Solution: Building a Simple API Response",
          "Section recap"
        ],
        "Features and Error Solutions": [
          "Section overview",
          "Error handling",
          "Enhanced Error Handling Techniques",
          "Path Operation Configuration",
          "JSON Compatible Encoder and Body Updates",
          "Practice: Error Handling and JSON Encoding part1",
          "Practice: Error Handling and JSON Encoding part2",
          "Challenge: Custom Error Handling",
          "Solution: Custom Error Handling",
          "Section Recap"
        ],
        "Dependencies and Security": [
          "Section overview",
          "Understanding Dependencies in FastAPI",
          "Implementing Classes and Sub-dependencies",
          "Intro to OAuth2",
          "OAuth2_Test",
          "Setting the Foundation",
          "Creating the Access Token",
          "Putting it to the Test",
          "Kickstarting Authentication",
          "Verifying Users and Protecting Routes",
          "Authenticating with Confidence",
          "Challenge: Secure an API Endpoint",
          "Solution: Securing an API Endpoint",
          "Section Recap"
        ],
        "Database integration": [
          "Section overview",
          "Laying the groundwork",
          "The Building Phase",
          "Putting it all together",
          "Creating a Book Library",
          "Integrating User Services",
          "Routers and Main Structures",
          "Advanced Backend Development",
          "Testing and Exploring",
          "Challenge: Database Driven API Endpoint",
          "Transportation Router Solution",
          "Test Drive",
          "Section recap"
        ],
        "Implementing Middleware": [
          "Section overview",
          "Implementing Basic Middleware",
          "Practice: Middleware Implementation",
          "Challenge: Custom Middleware",
          "Solution part 1 Database Meets Middleware",
          "Solution part 2 Testing Made Simple",
          "Section recap"
        ],
        "File Handling": [
          "Section overview",
          "The Art of File Uploads",
          "File Upload Test Run",
          "Serving Static Files",
          "Practice: File Handling",
          "Challenge: File Management System",
          "Solution: File Management System",
          "Section Recap"
        ],
        "Testing and Debugging": [
          "Section overview",
          "Testing in FastAPI",
          "Debugging Techniques",
          "Section recap"
        ]
      },
      "requirements": [
        "Python"
      ],
      "description": "Welcome to the complete FastAPI mastery course. In this course we will discuss all aspects of FastAPI and related technologies, such as middleware implementation, seamless database integration, security and file handling, and a lot more.\nThis course is designed to take you from a complete novice in API development and show you everything you need to become an expert in designing and building REST APIs with FastAPI.\nThis course will guide you in creating simple, intermediate, and advanced REST APIs including authentication, deployments, databases, and much more.\n\n\nAfter taking this course you'll be able to...\nCreate resource-based, production-ready REST APIs using Python and FastAPI\nHandle secure user registration and authentication with FastAPI\nUse database integration to manage data on the server side\nUnderstand the complex intricacies of deployments of FastAPI REST APIs.\nHandle security and authentication for a safe user experience\nThis course will take you step by step and show you line by line how to implement in code the concepts we discuss. We will build real world applications that show you how to build an API that is complete, efficient and safe.\nI've spent years building full stack projects using python, and I've been using FastAPI since its first release in 2018. In this course I've put all my experience of more than 10 years in this field.\nSo sign up today and let's start learning FastAPI and full stack development.",
      "target_audience": [
        "Beginner Fullstack and FastAPI Developers",
        "Intermediate Fullstack and FastAPI Developers",
        "Web devs"
      ]
    },
    {
      "title": "AI Tools Mastery: From Beginner to Pro in One Go",
      "url": "https://www.udemy.com/course/ai-tools-mastery-from-beginner-to-pro-in-one-go/",
      "bio": "Learn How to Use AI to Create Chatbots, Generate Text, Images, and Videos, Business plans and AI content",
      "objectives": [
        "What is an AI in this world?",
        "How to create pictures with AI?",
        "How to use AI tools with ease?",
        "AI and the most important of AI tools out there",
        "How ChatGPT and AI is changing your work and taking your job",
        "How AI companies are biggest winner of 2023 and for coming years"
      ],
      "course_content": {
        "AI mania": [
          "AI race now",
          "What is AI"
        ],
        "Leonardo AI": [
          "What is leonardo ai?",
          "Let's use it",
          "Your turn..."
        ],
        "Bard AI": [
          "What is bard?",
          "Let's use it",
          "Your turn...",
          "Quiz"
        ],
        "Adobe AI": [
          "What is Adobe AI?",
          "Let's use it",
          "Your turn..."
        ],
        "11 Labs AI": [
          "What is 11 labs",
          "Let's use it",
          "Your turn..."
        ],
        "Veed io": [
          "What is veed io",
          "Let's use it",
          "Your turn..."
        ],
        "Vidyos AI": [
          "What is Vidyos AI",
          "Let's use it",
          "Your turn..."
        ]
      },
      "requirements": [
        "No prior experience is needed, just your attention will be appreciated"
      ],
      "description": "Welcome to the ultimate AI Tools Mastery course, designed to propel your journey into the dynamic world of Artificial Intelligence (AI). Join us as we delve deep into the essentials of ChatGPT and explore the latest AI applications such as text-to-image generation, AI video creation, AI background removal, and the art of prompt engineering. This comprehensive course is meticulously crafted to not only equip you with indispensable knowledge but also to skyrocket your digital presence, ensuring high rankings on Google and leading platforms like Udemy.\nCourse Highlights:\nIntroduction to ChatGPT: Embark on your AI journey by mastering the fundamentals of ChatGPT. Understand its architecture, capabilities, and its pivotal role in natural language processing.\nMastery of Prompt Engineering: Uncover the secrets behind crafting prompts that yield precise AI responses. Learn the nuances of prompt fine-tuning to achieve desired outcomes.\nText-to-Image AI Magic: Set your creativity free with AI. Learn how to effortlessly transform text descriptions into stunning images, whether it's bringing your imagination to life or enhancing your content with captivating visuals.\nAI Video Creation: Dive headfirst into the future of content creation. Explore the power of AI in generating engaging videos from simple text inputs. Turn ordinary text into extraordinary video content effortlessly.\nAI Background Removal: Bid farewell to time-consuming image editing tasks. Discover the efficiency of AI in swiftly and accurately removing backgrounds from images, ensuring your visuals stand out with professionalism.\nWhat Sets Our Course Apart:\nPractical Hands-On Projects: Throughout the course, you'll engage in real-world projects that solidify your learning, enabling you to build an impressive portfolio and apply your knowledge with confidence.\nCutting-Edge Techniques: Stay at the forefront of the AI landscape by mastering the latest techniques and trends. Our continually updated curriculum ensures you're equipped with the freshest knowledge.\nExpert Instruction: Learn from seasoned industry experts with extensive experience in AI and AI tool development. Benefit from their valuable insights, tips, and guidance.\nSupportive Community: Join a thriving community of like-minded AI enthusiasts. Share your projects, collaborate, and gain valuable feedback. Our dedicated support team is always ready to assist you.\nSEO Optimization: We understand the criticality of online visibility. Our course content is meticulously optimized for SEO, significantly increasing your chances of being discovered online.\nWho Should Enroll:\nCurious beginners intrigued by the boundless possibilities of AI.\nContent creators and marketers looking to elevate their digital content game.\nForward-thinking entrepreneurs seeking innovative AI solutions.\nProfessionals keen on delving into the world of AI tool development.\nBy course completion, you'll not only be proficient in ChatGPT and AI tools but also possess the ability to craft captivating content, stunning images, engaging videos, and more. Enroll now in this extraordinary journey into the realm of AI, and unleash your creative genius. Secure your spot today and witness your digital presence ascend to new heights!\nUnlock the full potential of AI and ChatGPT. Let's transform your AI-powered creations into captivating wonders. Don't miss this exclusive opportunity to become a master of AI and AI tools. Enroll today and step confidently into the future!",
      "target_audience": [
        "Students: who are interested in learning about AI and how it can be used in their studies and future careers.",
        "Entrepreneurs and Business Owners: People interested in using AI for marketing, customer service, or product development.",
        "Content Creators: Video creators, bloggers, and social media influencers who want to automate content creation and enhance their online presence.",
        "Digital Marketers: Individuals seeking to leverage AI for personalized marketing campaigns, chatbots for customer engagement, and video ads.",
        "Educators and Trainers: Teachers and trainers interested in using AI tools for online education and course creation.",
        "Students: who are interested in learning about AI and how it is changing work dynamics in 2023"
      ]
    },
    {
      "title": "Learn HTML - For Beginners (Updated 2025)",
      "url": "https://www.udemy.com/course/learnhtmlforbeginners/",
      "bio": "Learn how to create web pages using HTML and basic CSS.",
      "objectives": [
        "How to Code in HTML",
        "Structure of an HTML Page",
        "Text Formatting in HTML",
        "Creating Ordered and Unordered Lists",
        "Creating Links",
        "Anchor Tags",
        "Tables & Nested Tables",
        "Building Forms",
        "Inserting Images",
        "Creating your first webpage"
      ],
      "course_content": {
        "HTML Development": [
          "HTML Introduction",
          "Installing Visual Studio Code",
          "Creating your first HTML Document",
          "What is HTML?",
          "HTML Tags",
          "Basic HTML Structure",
          "HTML Head Section",
          "HTML Body",
          "HTML Headings",
          "HTML Paragraphs",
          "HTML Lists",
          "HTML Links",
          "HTML Images",
          "HTML Tables",
          "HTML Forms",
          "Basic CSS",
          "Creating your first Webpage"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Course: Learn HTML - For Beginners (Updated 2025)\nLearn how to create web pages using HTML and basic CSS.\nStudents will gain skills in designing interactive web pages using HTML5, a key component of web development.\nThe curriculum dives deep into a wide range of HTML5 features such as images, videos, lists, tables, forms, and more.\nThroughout the course, students will work on hands-on projects to solidify their understanding of the topics covered.\nBy the end of the training, students will be comfortable coding in HTML and prepared to move on to more advanced programming languages.\nWhat you'll learn - Overview:\nHow to Code in HTML\nStructure of an HTML Page\nText Formatting in HTML\nUsing Lists\nAnchor Tags and Hyperlinks\nInserting Images\nTables & Nested Tables\nBuilding Forms\n\n\nKey Concepts:\nHTML Head Tag\nHTML Body Tag\nHTML Heading Tags\nHTML Paragraph Spacing\nHTML Line Breaks\nHTML Text Formatting and Decoration\nHTML Inline Text Formatting\nHTML Unordered Lists\nHTML Ordered Lists\nHTML Image Insertion\nHTML Link Creation (Hyperlinks)\nHTML Anchor Tags\nHTML Tables\nHTML Nested Tables\nHTML Merging Cells\nHTML Text Wrapping\nHTML Cell Alignment\nHTML - Introduction to Forms\nHTML Form Tags and Attributes\nHTML Forms - Post vs Get\nHTML Forms - Input Text Fields\nHTML Forms - Select Menus\nHTML Forms - Check Boxes and Radio Buttons\nHTML Forms - Text Areas and Buttons\nHTML Project - Building your first webpage.",
      "target_audience": [
        "Students that wants an introduction to HTML Coding"
      ]
    },
    {
      "title": "HTML5 - Background Processes with Web Workers in Depth",
      "url": "https://www.udemy.com/course/html5-background-processes-with-web-workers-in-depth/",
      "bio": "Create Multithreaded Applications Using HTML5 and JavaScript",
      "objectives": [
        "Learn HTML5 Web Worker API",
        "Learn JavaScript Event Handling",
        "Learn JavaScript Callbacks"
      ],
      "course_content": {
        "1. Getting Started": [
          "Introduction",
          "Introduction to Web Workers",
          "Types of Web Workers"
        ],
        "Dedicated Workers in Depth": [
          "Introduction to Dedicated Worker",
          "Check for Browser Support",
          "Graphical User Interface",
          "Creating Instance, Callback and Passing Value to Web Workers",
          "Implementation of Web Worker",
          "Handling Errors",
          "Import Scripts",
          "Terminating Workers"
        ],
        "Shared Workers in Depth": [
          "Introduction to Shared Worker",
          "Check for Browser Support",
          "Graphical User Interface of App",
          "Creating Instance, Callback, Connect Event and Message Event",
          "Handling Connect and Message Event",
          "Finishing the App",
          "Scope of Shared Worker"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Exercise Files": [
          "File"
        ]
      },
      "requirements": [
        "Text Editor",
        "Browser"
      ],
      "description": "If you have any queries or need a discount please contact us at admin@qscutter.com\nYou will learn everything about web worker within an hour.\nOne of the many design goals of the JavaScript language was to keep it single-threaded and, by extension, simple. Though I must admit that, given the idiosyncrasies of the language constructs, it is anything but simple! But what we mean by being “single-threaded” is that there is only one thread of control in JavaScript; yes, sadly, your JavaScript engine can do only one thing at a time.\nNow, doesn’t that sound too restrictive to make use of multi-core processors lying idle on your machine? HTML5 promises to change all of that.\nAs envisioned by WHATWG, web workers are relatively heavy-weight. They are expected to be long-lived, have a high start-up performance cost, and a high per-instance memory cost.\nWith \"HTML5 - Background Processes with Web Workers in Depth\", you will learn everything about Web Workers, even if you've never build one before!\nThe full course has several video lectures, divided into several chapters. Each chapter will give you a new level of knowledge in Web Workers. We'll start from the basics of Web Workers development to more advanced and the most popular API used now a days.\nNOTE: In order to keep you up to date in the world of Web Workers all the chapters will be updated regularly with new lectures, projects, quizzes and any changes in future versions of all the programming languages covered on the course.\nEnroll now and start learning.",
      "target_audience": [
        "Anyone Interested in Web Development"
      ]
    },
    {
      "title": "JQuery For Mobile Tutorial - Learning Made Easy",
      "url": "https://www.udemy.com/course/jquery-for-mobile/",
      "bio": "Learn how to use JQuery effectively on Mobile Devices. Everything you need to know in one course.",
      "objectives": [
        "Learn how to use JQuery to build mobile web sites that work on all devices"
      ],
      "course_content": {
        "01. Introduction To jQuery Mobile": [
          "Working Files - Download These First",
          "0101 What Is jQuery Mobile And Who Uses It",
          "0102 What You Should Expect",
          "0103 jQuery Mobile Vs Native",
          "0104 Device Support"
        ],
        "02. Tools You Will Need": [
          "0201 What Is A Local Server",
          "0202 MAMP",
          "0203 WAMP",
          "0204 IOS Simulator",
          "0205 Other Mobile Simulators",
          "0206 Webkit Web Inspector",
          "0207 Downloading jQuery Mobile",
          "0208 Including jQuery Mobile"
        ],
        "03. Pages And Dialogs": [
          "0301 Page Structure",
          "0302 Single-Page Templates",
          "0303 Multi-Page Templates",
          "0304 The Navigation Model",
          "0305 Linking Pages",
          "0306 Page Transitions",
          "0307 Creating Dialogs",
          "0308 Preloading Pages",
          "0309 Page Titles And Prefetching_"
        ],
        "04. Buttons": [
          "0401 Creating Basic Buttons",
          "0402 Inline Buttons",
          "0403 Button Groups",
          "0404 Button Icons",
          "0405 Icon Positioning",
          "0406 Specifying Custom Button Icons"
        ],
        "05. Toolbars": [
          "0501 Toolbar Basics",
          "0502 Headers",
          "0503 Footers",
          "0504 Toolbar Positioning",
          "0505 Navbar Widgets",
          "0506 Persistant Toolbars"
        ],
        "06. Content": [
          "0601 HTML Markup Styling",
          "0602 Layout Grids",
          "0603 Collapsible",
          "0604 Accordion Widgets"
        ],
        "07. List Views": [
          "0701 Basic List Views",
          "0702 List Dividers",
          "0703 Nested Lists",
          "0704 Inset Lists",
          "0705 Split Button Lists",
          "0706 Custom Icons",
          "0707 Count Bubbles",
          "0708 Content Formatting",
          "0709 Search Filter Bar",
          "0710 Lists And Forms"
        ],
        "08. Forms": [
          "0801 Form Basics",
          "0802 HTML5 Form Attributes",
          "0803 Placeholder Text And Label Accessibility",
          "0804 Text Inputs",
          "0805 Sliders",
          "0806 Flip Toggle Switches",
          "0807 Radio Buttons",
          "0808 Checkboxes",
          "0809 Select Buttons And Containing Form Elements",
          "0810 Prevent Form Styling",
          "0811 Submittal And Validation"
        ],
        "09. Themes": [
          "0901 Theming Pages",
          "0902 Theming Content",
          "0903 Theming Buttons",
          "0904 Theming Forms",
          "0905 Theming Lists",
          "0906 Theme Roller - Part_1",
          "0907 Theme Roller - Part 2"
        ],
        "10. Javascript Events And Methods": [
          "1001 Configuring Defaults",
          "1002 Intro To Events",
          "1003 Touch And Mouse Events",
          "1004 Orientation And Scroll Events",
          "1005 Page Manipulation Events",
          "1006 Methods"
        ]
      },
      "requirements": [],
      "description": "This video based training course for jQuery Mobile, an expert author and trainer walks you through the basics of using this popular JavaScript mobile framework to build fully functional mobile websites for mobile browsers. This is a jQuery Mobile Tutorial for Beginners but familiarity with HTML and CSS markup languages will increase your understanding of how to work with the jQuery Mobile framework.\n\nThe jQuery Mobile Tutorial begins with a breakdown of what jQuery Mobile is, who uses it and what you can expect to achieve with it. He also instructs you on installing the tools you will need to get the most out of this course. Jumping right into jQuery Mobile, Ben teaches you how to create pages, dialogs, buttons and toolbars, all in the mobile style. You will learn how to mark up your content, build lists, handle forms, and even create and use themes. Finally you cover some of the Javascript events and methods available in the jQuery Mobile framework.\nBy the completion of this video jQuery Mobile Tutorial for Beginners, you will be able to use the jQuery Mobile framework to create websites that are designed for, and work on, the most popular Smartphone browsers available today. Working files are included to allow you to follow along with the author throughout the course.",
      "target_audience": []
    },
    {
      "title": "PlebDevs Course II: Building a Lightning Wallet Backend",
      "url": "https://www.udemy.com/course/plebdevs-backend/",
      "bio": "Learn Lightning App Development! Learn Backend from scratch and build a simple Lightning Wallet backend in JavaScript",
      "objectives": [
        "Intro course for learning Backend Development",
        "Learn the basics of NodeJS",
        "Learn how to build a Server / API",
        "Learn how to setup a local database with SQLite and a production database with Postgres",
        "Interface with the lightning network locally in development and globally in production",
        "Learn how to authorize / authenitcate user's and save their credentials securely",
        "Learn Lightning Network fundementals from an App Developer perspective"
      ],
      "course_content": {},
      "requirements": [
        "A computer! (Linux or Mac is best)",
        "Very basic command line skills",
        "Basic Git / Github skills",
        "Basic JavaScript experience",
        "Visual Studio Code (or equivalent IDE) working on your local machine"
      ],
      "description": "Welcome to the PlebDevs Course #2! This is the place to come and learn how to build your first lightning app backend!\nIn this comprehensive and beginner-friendly 13-lesson course, we'll transform you from a JavaScript n00b into a proficient backend developer, with a special focus on Lightning App Development.\n\nWHO SHOULD TAKE THIS COURSE?\nAnyone with a basic grasp of JavaScript that wants to learn backend from scratch\nAnyone who wants to learn how to build a simple lightning wallet backend\nAnyone that wants to become a Bitcoin/Lightning App developer\nThose looking for a career change\nWeb 2, 3, and 5 tech hobbyists\nStudents & teenagers\nPlebs\n\nWHAT YOU WILL LEARN\nNodeJS\nBuilding a Server / API with Express\nBuilding user Authentication & Authorization with JWT's\nSetting up a local Lightning Development Environment\nBuilding with Lightning using LND\nIntegrating your Lightning node with your server\nSQL & Database fundamentals\nDatabase Development with Knex\nIntegrating your server with a Frontend App\nDeploying your Server, Database, Lightning Node, and Frontend App\n\n\nWelcome to PlebDev Course #2! This is your gateway to mastering backend development for Lightning App Development.\nBuilding on the foundation laid in our first course, where we introduced you to the basics of Frontend development and the integration of a custodial LNBits wallet, this 13-lesson journey is designed to take your skills to the next level. We're diving deep into backend development, giving you the tools and knowledge to construct a robust server for the original frontend app from Course #1.\nEven if you haven't taken the first course, don't worry! We've got you covered. This course is structured to be inclusive and comprehensive, enabling you to build a generic Lightning Wallet backend that seamlessly connects to a prebuilt frontend. It's a perfect stepping stone for those looking to expand their JavaScript proficiency into the realms of backend development, specifically tailored for Lightning App Development.\nUnder the guidance of Austin the Bitcoin plebdev, who started from scratch and has since built cutting-edge projects in Bitcoin and Lightning, you'll be well on your way to becoming a part of the vibrant Bitcoin developer ecosystem. Our dynamic and hands-on teaching style ensures not just learning, but also enjoyment as you master the intricacies of backend development with a simple workflow and setup.\n\nBy the end of this course, you'll be well-equipped to contribute meaningfully to the world of Lightning app development, whether you're starting from the first course or joining us fresh. We're excited to help you embark on this journey!\n\n- PlebDevs",
      "target_audience": [
        "Beginner App developers interested in Bitcoin & Lightning",
        "Anyone that is learning Backend App development for the first time",
        "Anyone with very basic JavaScript / Git experience",
        "Anyone that wants to build a Lightning wallet."
      ]
    },
    {
      "title": "Django DRF ORM Query Fundamentals",
      "url": "https://www.udemy.com/course/django-drf-query-fundamentals/",
      "bio": "Learn Django DRF and master database interactions and queries in Django with DRF & PostgreSQL.",
      "objectives": [
        "Design and implement relational database tables using Django ORM.",
        "Define models, relationships (One-to-One, One-to-Many, Many-to-Many), and constraints.",
        "Understand and apply primary keys, foreign keys, and unique constraints.",
        "Perform CRUD (Create, Read, Update, Delete) operations efficiently with Django ORM.",
        "Handle bulk inserts, bulk updates, and nested relationships in Django REST Framework.",
        "Implement automated database seeding for initial project setup.",
        "Retrieve data efficiently using all(), values(), only(), filter(), and other ORM methods.",
        "Implement dynamic filtering using query parameters & URL paths in DRF.",
        "Apply ordering, pagination, and duplicate removal for API performance.",
        "Write complex queries using Q Objects, logical operators (AND, OR, NOT), and range filters.",
        "Optimize queries with select_related and prefetch_related for better performance.",
        "Perform SQL JOINs and understand how Django ORM translates them into queries.",
        "Use raw SQL queries and custom querysets when necessary.",
        "Perform COUNT, SUM, AVG, MIN, MAX operations in Django ORM.",
        "Use GROUP BY & HAVING for advanced query results.",
        "Compare field values dynamically with F Expressions.",
        "Implement Django REST Framework serializers, viewsets, and API endpoints.",
        "Handle nested relationships in serializers for complex data structures.",
        "Expose database queries via optimized API endpoints."
      ],
      "course_content": {
        "Introductions": [
          "Course Intro"
        ],
        "Preparing For Development": [
          "Module Primer",
          "New Developers Guide: VSCode for Windows & MacOS",
          "Project VSC settings, Linting and Formatting Setup",
          "New Developers Guide: Docker Desktop",
          "Creating a PostgreSQL and Django Service with Docker",
          "Creating a new Django DRF Project within Docker"
        ],
        "Fundamentals - Building Database Tables": [
          "Module Primer",
          "Introducing the Database Schema and ERD (Entity Relationship Diagram)",
          "Defining Database Tables with Django Models",
          "Common Data Types (Strings, Numbers, Boolean)",
          "Date and Time Fields",
          "Required, Null and Blank Fields",
          "Default Values",
          "Unique Values",
          "Creating Primary Keys",
          "Creating Foreign Keys",
          "On-Delete Behaviour",
          "Defining Many-To-Many Relationships",
          "Creating a One-to-One Relationship",
          "Final Model Implementation",
          "Django Admin - Registering Django Models",
          "Exporting the Django Database as SQL",
          "Automating Database Tables - PostgreSQL Initialisation Script"
        ],
        "Fundamentals - Inserting, Updating and Deleting Data": [
          "Module Primer",
          "Django DRF View Options",
          "Introduction to API Request Cycle",
          "Introducing Viewsets and Serializers",
          "Inserting Data with Create and Save",
          "Bulk insert with Bulk Create",
          "Updating Existing Records with Save()",
          "Partial Updates with Save()",
          "Handling Simple One-to-Many Inserts",
          "Handling One-to-One Insert with Nested Serializers",
          "Handling Many-to-Many Inserts",
          "Deleting Records",
          "Delete Bulk Records with Custom Action",
          "Building & Automating Initial Database Seed Data"
        ],
        "Fundamentals: Querying the Database": [
          "Module Primer",
          "Retrieving Data: all()",
          "Retrieving Data: values()",
          "Retrieving Data: only()",
          "Filtering Records with filter()",
          "3 Approaches for Passing Data to Server",
          "Dynamic Filtering with Query Parameters",
          "Dynamic Filtering with URL Path Parameters",
          "Using Exclude",
          "Sorting Results with .order_by() (ASC/DESC)",
          "Retrieving the First and Last Record",
          "Implementing Django REST Framework pagination",
          "Removing Duplicates Records with .distinct()",
          "Django ORM Challenges",
          "Challenge 1_1 - Retrieve All Active Products Only",
          "Challenge 1_2 - Select Product Names and Prices Only (QuerySet)",
          "Challenge 1_3 - Get the First Product Created",
          "Challenge 1_4 - Get the Most Recently Added Product",
          "Challenge 1_5 - Retrieve All Exclude Active Products",
          "Challenge 1_6 - Filter Products by Price and Category"
        ],
        "Fundamentals: Filtering": [
          "Module Primer",
          "Using Logical Operators AND with Q Objects",
          "Using Logical Operators OR with Q Objects",
          "Using Logical Operators NOT with Q Objects",
          "Comparison Operators",
          "Pattern Matching",
          "Using in for List Filtering",
          "Using Range for Value Ranges",
          "Limiting with List Slicing"
        ],
        "Fundamentals: Joins, Querying Relationships": [
          "Module Primer",
          "SQL Inner Join",
          "Django ORM Inner Join with One-to-Many Relationships",
          "Aliases with Annotate and F Expressions",
          "Reverse Query One-to-Many Relationships",
          "Inner Join for One-to-One Relationships Forward",
          "Inner Join for One-to-One Relationships Reverse",
          "Raw SQL and RawQuerySet Inner Join Example",
          "Many-to-Many Relationships with Prefetch_Related"
        ],
        "Fundamentals: Aggregation and Grouping": [
          "Module Primer",
          "Counting Records with Count",
          "Summing Values with Sum",
          "Calculating Averages with AVG",
          "Using Group By to Aggregate Data",
          "Filtering Aggregated Results with Having",
          "Finding Min and Max Values",
          "F Field-to-Field Comparisons and Calculations"
        ]
      },
      "requirements": [
        "No programming experience required"
      ],
      "description": "This course is designed to help you master Django ORM (Object-Relational Mapping) and Django REST Framework (DRF) to build scalable, database-driven APIs. You’ll start from the fundamentals of database design and queries and progress to advanced filtering, joins, and optimizations—all while integrating with DRF to expose your data through APIs.\n\n\nCourse Overview\nModule 1: Introduction\nGet an overview of the course, its structure, and what you'll achieve by the end.\nModule 2: Setting Up Your Development Environment\nInstall and configure VSCode, Docker, and PostgreSQL.\nSet up Django + DRF in a Dockerized environment for real-world development.\nModule 3: Defining Database Tables with Django ORM\nLearn how to define models, relationships (One-to-Many, Many-to-Many, One-to-One), and constraints.\nWork with common data types like strings, numbers, and booleans.\nImplement primary keys, foreign keys, and unique constraints.\nAutomate database table creation with PostgreSQL initialization scripts.\nModule 4: Inserting, Updating, and Deleting Data\nWork with ViewSets and Serializers to insert, update, and delete records via DRF.\nLearn bulk operations, nested inserts, and handling related objects.\nAutomate database seeding for quick project setup.\nModule 5: Querying the Database Efficiently\nRetrieve records using all(), values(), only().\nImplement dynamic filtering with query parameters & URL paths.\nHandle sorting, pagination, and duplicate removal.\nModule 6: Advanced Filtering & Query Optimization\nUse Q Objects for complex queries (AND, OR, NOT).\nApply pattern matching, range filters, and logical operators.\nOptimize queries using list slicing and efficient filtering techniques.\nModule 7: Joins & Querying Relationships\nPerform INNER JOINs using Django ORM.\nUse prefetch_related and select_related for query optimization.\nWrite raw SQL queries when ORM isn’t enough.\nModule 8: Aggregation & Grouping\nCount, sum, and average values efficiently.\nUse GROUP BY, HAVING, and field-to-field comparisons for advanced analytics.\nWhy Take This Course?\nBuild real-world, scalable APIs using Django DRF & PostgreSQL.\nMaster Django ORM to work with databases effectively.\nOptimize queries for performance and scalability.\nLearn best practices for structuring DRF applications.\nWho is this for?\nDevelopers new to Django DRF and ORM.\nBackend engineers looking to optimize query performance.\nAnyone who wants to build efficient, scalable REST APIs.\nBy the end of this course, you'll be confident in designing and querying databases while building production-ready Django REST APIs!",
      "target_audience": [
        "Anyone looking to learn Django DRF"
      ]
    },
    {
      "title": "Master RESTful API with NET Core Web API .NET 9 (English)",
      "url": "https://www.udemy.com/course/master-restful-api-aspnet-core/",
      "bio": "Build a complete and professional RESTful API with JWT Authentication and .NET Identity using ASP.NET 8 (.NET Core).",
      "objectives": [
        "Fundamentals of ASP NET Core Web API",
        "Project: Create a RESTful API in ASP NET Core 8",
        "Implement the Repository Pattern",
        "Work with Entity Framework and SQL Server",
        "Work with Code First and Migrations",
        "Implement Authentication and Authorization",
        "Implement file upload in the API",
        "Security with Password HASH and SALT",
        "Implement CORS",
        "Learn how to document an API",
        "Installation and configuration of extensions",
        "Implement DTOs (Data Transfer Objects)",
        "Integrate Authentication and Authorization with .NET Identity",
        "Create a Project Using Minimal API in .NET Core",
        "What is Minimal API, its Advantages, and When to Use It",
        "Minimal API, Code First, Repository Pattern, Database"
      ],
      "course_content": {
        "Introduction": [
          "Important Message Before Starting",
          "Demo of the API We Will Develop",
          "What is an API",
          "HTTP Requests",
          "HTTP Responses",
          "Response Codes",
          "Installation of Necessary Tools",
          "Project Creation",
          "Review of Files and Folders",
          "About .NET Versions"
        ],
        "Category Creation": [
          "Category Model",
          "Quiz on This Section",
          "Database Connection",
          "Installation of Necessary Extensions",
          "Context File",
          "Configure SQL Connection",
          "Migration and Database",
          "Source Files for This Section"
        ],
        "Category Repository": [
          "What is the Repository Pattern and Why Use It",
          "Creation of Category Interface",
          "Implementation of Category Interface",
          "What is a DTO (Data Transfer Object)",
          "DTO for Category",
          "AutoMapper Extension Configuration",
          "Source Files for This Section",
          "Implementation of the Repository Pattern"
        ],
        "Category API": [
          "Categories Controller",
          "Get Categories",
          "Get Individual Category",
          "Create New Category (HTTP POST)",
          "Update Category (HTTP PATCH)",
          "Update Category (HTTP PUT)",
          "Delete Category (HTTP DELETE)",
          "Practice creating API Controller and Methods (EndPoints)"
        ],
        "Movie API": [
          "Movie Model, Migration, and Database",
          "DTOs for Movie",
          "Movie Repository",
          "Movies Controller",
          "List Movies",
          "Individual Movie",
          "Create Movie",
          "Update Movie",
          "Delete Movie"
        ],
        "User API, Authentication, and JWT (Json Web Tokens)": [
          "User Model",
          "DTOs for User",
          "User Interface",
          "Implement User Interface",
          "Repository and Registration",
          "Encrypt Password",
          "What is JWT (JSON Web Tokens)",
          "Repository and Login",
          "Controller and List of Users",
          "Get Individual User",
          "User Registration",
          "User Access (Login)"
        ],
        "Cors": [
          "What is CORS",
          "How to Implement CORS",
          "Source Files for This Section"
        ],
        "Authorization": [
          "Protecting Access",
          "Tests in Postman",
          "Implement Authentication in Documentation"
        ],
        "Caching": [
          "Add Cache",
          "Global Profile",
          "Source Files for This Section"
        ],
        "API Versioning": [
          "Introduction",
          "Installation of Extensions",
          "Add Support for Versions",
          "Version Attribute",
          "Multiple API Versions",
          "Swagger Documentation for Version 1",
          "Multiple Documentation in Swagger",
          "Manage Multiple Versions",
          "Neutral and Deprecated API",
          "Source Files for This Section"
        ]
      },
      "requirements": [
        "Basic knowledge of C#",
        "Basic handling of Visual Studio 2022",
        "Basic knowledge of SQL Server and Management Studio"
      ],
      "description": "Master the creation of professional APIs with ASP.NET 9, using both the traditional controller method and Minimal API, the lightweight and efficient technology of .NET Core. This updated course, enriched with new content, equips you with the skills to develop robust and secure RESTful APIs.\n\n\nImportant Note for English-Speaking Students:\nHi and welcome to the course!\nBefore we dive in, I’d like to share a quick but important note to help you get the most out of this experience.\nThis course was originally created in Spanish and has helped thousands of students gain real, practical skills in this subject. Because of its success and the positive feedback it received, I decided to make it accessible to more people by translating it into English using AI voice technology.\nSo here’s what you need to know: while the voiceover is in English, some of the on-screen content—like presentations, programming code, or tools—still appears in Spanish.\nI know this might be a bit unusual, but many students have still found the course extremely useful and easy to follow, thanks to the clear structure, visual explanations, and hands-on content.\nIf you’re willing to move forward with an open mind, I truly believe this course will give you a lot of value, and help you grow your skills just as it has for so many others.\nThat said, if you feel this format won’t work for you, no worries—you’re fully covered by Udemy’s 30-day money-back guarantee.\nThank you for being here, and I hope you enjoy and learn a lot from the course. Let’s get started!\nGive me a Chance with this Greate Course\n\n\nThroughout the course, you will learn to design and develop RESTful APIs using controllers in ASP.NET, implementing design patterns such as the Repository Pattern for efficient data management with Entity Framework Core and SQL Server as the database engine. You will use DTOs (Data Transfer Objects) and AutoMapper to map data entities, optimizing information transfer between the client and server.\nYou will explore advanced caching techniques to improve your APIs’ performance and configure filters and pagination to enhance data navigation and search capabilities. You will implement robust authentication and authorization using .NET Identity and JSON Web Tokens (JWT), ensuring secure access to protected resources.\nThe course also covers API versioning strategies to handle changes in your web services without breaking compatibility, guiding you through the process of publishing to Azure App Service to deploy your API in a scalable and secure production environment.\nAdditionally, you will explore the advantages and implementation of Minimal API, the new and simplified approach to developing APIs in .NET Core, enabling you to build lightweight and efficient services with minimal configuration.\nBy the end of the course, you will be ready to create advanced APIs with ASP.NET 8, mastering key technologies like .NET Identity, Entity Framework Core, SQL Server, and modern techniques such as caching, filtering, pagination, and API versioning.\nMoreover, throughout the course, you will learn to implement effective security and error handling strategies in your APIs, ensuring the integrity and availability of your services against potential threats and failures. You will explore advanced monitoring and logging techniques to keep detailed track of your APIs' performance and usage, improving diagnostic capabilities and continuous optimization.\nFinally, the course will guide you in creating clear and detailed documentation for your APIs using tools like Swagger/OpenAPI, making integration and adoption easier for other developers and systems. You will learn to document endpoints, data models, and operations, ensuring a smooth and understandable experience for those consuming your services.\nThis course offers lifetime access, a 30-day money-back guarantee, and full access to all resources and files developed throughout the course. Additionally, you will have access to a Q&A section to resolve any questions during your learning process.\nEnroll now and start building professional APIs with ASP.NET 8!",
      "target_audience": [
        "Web developers who want to learn ASP NET Core",
        "Web application developers using .NET or .NET Core",
        "Those interested in backend web development with .NET Core",
        "API developers",
        "Backend programmers",
        "Systems Engineering students",
        "Development and Programming students"
      ]
    },
    {
      "title": "Learning CSS",
      "url": "https://www.udemy.com/course/learning-css/",
      "bio": "Learn how to use Cascading Style Sheets to create beautiful webpages.",
      "objectives": [
        "Introduction to the formatting language CSS",
        "Understanding various CSS selectors",
        "Learning different CSS properties",
        "Applying CSS to different HTML elements",
        "Source code for all the examples",
        "Assignments and Solutions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to CSS",
          "The CSS Rule and Comments",
          "Applying CSS To HTML"
        ],
        "Selectors": [
          "Tag Selectors",
          "Grouping Selectors",
          "Class & ID Selectors",
          "Descendent Selectors",
          "Child & Sibling Selectors",
          "Pseudo Classes & Pseudo Elements",
          "Attribute Selectors"
        ],
        "CSS properties and their application": [
          "Values & Units In CSS",
          "Fonts in CSS",
          "Text formatting",
          "Colors & Backgrounds",
          "Properties for dimensions",
          "Styling links",
          "Formatting Lists",
          "Styling Tables",
          "CSS for Forms",
          "Generated content",
          "The Box model",
          "Inline & Block level elements",
          "Margin, Padding & Borders",
          "Position & Float",
          "Shorthand Properties",
          "Simple styled webpage",
          "CSS for print"
        ],
        "Wrap up!": [
          "What's next?"
        ],
        "Source code, Assignments & Solutions": [
          "Source code",
          "Assignments",
          "Solution for Assignment I",
          "Solution for Assignment II",
          "Solution for Assignment III"
        ]
      },
      "requirements": [
        "Working knowledge of HTML",
        "Sublime text 2.0 or any of your favorite editor",
        "Web browser like Firefox or Google Chrome"
      ],
      "description": "Note: This CSS Course covers CSS 2.0/2.1 and requires a working knowledge of HTML/XHTML. You can learn HTML/XHTML free by subscribing to my course HTML Workshop.\nCascading Style Sheets (CSS) is a language used for describing the look and feel of an HTML/XHTML document.\nCSS is designed primarily to separate the document structure [HTML/XTHML markup] from the document presentation such as layout, colors, and fonts.\nAdvantages of using CSS can be:\nImproving content accessibility.\nProviding a high level of flexibility to control the presentation of the WebPages.\nEnabling to share formatting information among multiple pages easily.\nReducing the complexity to develop and maintain large websites and web applications.\nHelping markup to be rendered on multiple devices like a computer screen, smart phones and tablets.\nUnderstanding CSS can be your \"Second Step\" in the roadmap of learning the overall web design or development process.\nThe CSS Training has been crafted to make you understand:\nWhat is CSS?\nDifferent CSS properties\nHow to apply CSS on different HTML elements?\n</p>",
      "target_audience": [
        "HTML Developers",
        "Visual Designers",
        "Server side programmers",
        "Entrepreneurs",
        "Managers",
        "Internet enthusiasts",
        "And almost anyone!!"
      ]
    },
    {
      "title": "How to Build Bank Application with Node.JS/TS and Mongo DB",
      "url": "https://www.udemy.com/course/how-to-build-bank-features-application-with-nodejs-ts-mongo/",
      "bio": "Build the Node.JS/TS application using MongoDB.Create bank cards, create deposit, withdraw and P2P transaction with JWT",
      "objectives": [
        "Architect large, scalable apps using a nodejs language",
        "Solve problems with bank transactions operations",
        "Build a Nodejs app to handle bank transcations with typescript and mongodb",
        "Develop a service app with Nodejs and MongoDB",
        "Leverage your Javascript skills to build a complex web app",
        "Write nothing but production-level code. No cutting corners!"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Nodejs and MongoDB is required",
        "You must be familiar and comfortable with the command line"
      ],
      "description": "Scalable, production-ready code? Its here!\n\nHow This Course Works\nThis will expose you to challenging problems and clever solutions when handling subjects like bank features application.\n\n\nWhat Technology You'll Use\nWe are building a backend application, we'll use Nde.js and TypeScript . Data for each service is held in either a Mongo database.\nThis is a scary list of technologies! Not familiar with some of these? No problem! The course is built assuming that you only know the basics of Nodejs. No other knowledge is needed - you will learn everything you need to know.\n\nWhat You'll Be Able to Do\nBy the time you complete this course, you will be able to:\nArchitect basic bank operations\nDetermine whether your app is a good fit for deposit, withdraw and p2p transcations\nOrganize and enhance the reusability of code in large projects\n\n\nWhat You'll Learn\nAn absolute incredible number of topics are covered in this course. Here is a partial list of what you'll do:\nCreate a authorisation flow with jwt token\nCreate a new users with signup, signin, signout and get current user endpoints\nCreate cards and get cards for user\nCreate transactions like deposit, withdraw and p2p\nAnd much more!",
      "target_audience": [
        "Nodejs engineers looking to how handle bank transcactions, cards with mongodb",
        "This course is *not* designed for sysadmins focused on infrastructure deployment"
      ]
    },
    {
      "title": "Essential Django Training Course: Hands-On!",
      "url": "https://www.udemy.com/course/essential-django-training-course-hands-on/",
      "bio": "This course covers the Django framework from the beginning and also covers advanced Django features.",
      "objectives": [
        "Understand the Django app architecture",
        "Build practical real-world web app with Django",
        "Learn to use the model-view-template design",
        "Handle GET and POST HTTP requests",
        "Learn and understand advanced URLconf tips and tricks",
        "Build RESTful APIs for your applications",
        "Learn to create admin interfaces",
        "Learn to create HTML forms",
        "Learn about template filters and template inheritance",
        "Define models and use the database API to create, retrieve, update, and delete records"
      ],
      "course_content": {},
      "requirements": [
        "Basic Python programming knowledge is helpful"
      ],
      "description": "Unlock the Power of Django: Build Robust Web Applications, Fast!\nTired of boilerplate? Ready to build powerful, secure, and scalable web applications with a framework trusted by tech giants? Dive into Django, the high-level Python web framework that transforms your development process from tedious to thrilling.\nImagine rapidly prototyping your ideas and deploying production-ready applications with clean, pragmatic design. Django empowers you to do just that. This isn't just another programming course; it's your launchpad to becoming a proficient Django developer, capable of crafting sophisticated web solutions that stand out and perform under pressure.\nWhy Django? Why This Course?\nDjango is the secret weapon behind platforms like Instagram, Pinterest, and Mozilla, renowned for its speed, security, and scalability. It’s built for developers who want to focus on innovation, not repetitive tasks.\nOur \"Essential Django Training Course: Hands-On!\" is meticulously designed to catapult your skills. We cut through the theory and immerse you in practical, real-world application. You won't just learn Django; you'll master it, building tangible projects and gaining the confidence to tackle any web development challenge.\nTransform Your Ideas into Reality: What You'll Master\nThis comprehensive, step-by-step journey will equip you with the essential skills and cutting-edge techniques to build exceptional web applications:\nArchitect Like a Pro: Command Django's project and app structure for ultimate scalability and maintainability.\nBuild Full-Fledged Applications: Go beyond theory. Design, develop, and deploy practical, real-world web applications from scratch.\nConquer the MVT Pattern: Gain a profound understanding of Django’s Model-View-Template design for clean, organized, and efficient code.\nMaster HTTP & Dynamic Content: Expertly handle GET and POST requests, craft intelligent routing, and generate dynamic views and templates that respond seamlessly to user interactions.\nUnlock Advanced URL Configuration: Implement sophisticated and flexible URL routing to build complex, easily navigable sites.\nForge Powerful RESTful APIs: Construct robust APIs using the Django REST framework, enabling seamless integration with front-end technologies and external services.\nCustomize the Admin Powerhouse: Tailor Django’s built-in admin interface for intuitive and efficient data management.\nImplement Dynamic Forms: Create interactive applications by expertly collecting, validating, and processing user input.\nLeverage Advanced Templating: Harness the full power of Django’s templating engine with inheritance and custom filters to build reusable and maintainable UIs.\nCommand Your Data: Define robust database models and master Django’s ORM for seamless Create, Retrieve, Update, and Delete (CRUD) operations.\nWhat Makes This Course Your Ultimate Django Accelerator?\nWe believe in learning by doing. This course is engineered for practical application, ensuring you not only understand the concepts but can confidently apply them.\nReal-World Project Portfolio: You’ll build impressive, portfolio-ready applications, solidifying your learning and showcasing your new skills.\nFrom Fundamentals to Advanced Mastery: We cover the entire spectrum, ensuring you have the comprehensive knowledge to excel.\nCrystal-Clear, Engaging Instruction: Complex topics are broken down into digestible, easy-to-understand modules, enriched with practical examples and insider tips.\nIs This Course Your Perfect Fit?\nThis course is designed for:\nAspiring Web Developers: New to Django or web development? We’ll build your foundation, strong and steady.\nPython Enthusiasts: Got Python skills? Learn to leverage them for powerful web application development.\nDevelopers Seeking Django Mastery: Already familiar with web development or Django? Elevate your skills and learn advanced techniques to become a true Django expert.\nYour Toolkit for Success:\nA foundational understanding of Python (no prior Django experience is necessary).\nA computer with internet access to set up your development playground.\nAn eagerness to learn, build, and innovate!\nYour Journey Mapped Out: Course Outline\nIgnition: Introduction to Django & Seamless Setup\nBlueprints: Understanding Django’s App Architecture\nYour First Triumph: Building a Django Web App, Step-by-Step\nThe Core: Deep Dive into Model-View-Template (MVT) Architecture\nThe Flow: Mastering HTTP Requests and Dynamic Views\nNavigation Mastery: Advanced URL Configuration Techniques\nAPI Powerhouse: Crafting RESTful APIs with Django REST Framework\nAdmin Customization: Tailoring the Django Admin Interface\nInteractive Experiences: Expert Form Handling and Validation\nUI Efficiency: Template Inheritance & Powerful Filters\nData Dominance: Database Models & Full CRUD Operations with Django ORM\nLaunchpad: Deploying Your Django Application to the World\nStop Dreaming, Start Building.\nIf you’re ready to elevate your web development career, build incredible applications, and master a framework that’s in high demand, this is your moment.\nEnroll now and unleash your potential with Django! Become the developer you were meant to be.",
      "target_audience": [
        "Python Developers",
        "Web Designers",
        "Programmers"
      ]
    },
    {
      "title": "Learn JavaScript Arrays in 30 Minutes",
      "url": "https://www.udemy.com/course/learn-javascript-arrays-in-30-minutes/",
      "bio": "Gain a solid understanding of arrays in JavaScript and how they're used in real world projects.",
      "objectives": [
        "Gain a solid understanding of the fundamentals of JavaScript arrays",
        "Learn how to use JavaScript arrays in your future projects and websites",
        "Gain insight of practical usages of JavaScript arrays and their importance in real world projects",
        "Be able to create arrays and retrieve items out of them",
        "Be able to manipulate arrays by adding items, updating items and removing items",
        "Learn how to transform and filter data within an array"
      ],
      "course_content": {},
      "requirements": [
        "You'll need a basic understanding of HTML"
      ],
      "description": "Let's cut to the chase - in this course, you'll learn the fundamentals of JavaScript arrays in about 30 minutes.\n\n\nThis course is perfect if you've dabbled in HTML and CSS and want to educate yourself on JavaScript arrays. Alternatively, you may be an experienced developer who wants to get a recap on how they work.\n\n\nJavaScript arrays are like a packet of biscuits. Why? Because it's a collection of similar items in a sequential list. In real-world applications and websites, arrays are used to store a list of data.\n\n\nTo put it simply, there's a very high chance any future project you work on will require arrays in some way, shape, or form. This means you need to gain an understanding of how they work, and what they are ?\n\n\nYou'll learn how to:\ncreate arrays\nretrieve items from an array\nmanipulate arrays by adding, updating, or removing items\ncreate arrays of objects\ncreate multi-dimensional arrays\ntransform arrays\nfilter arrays\n\n\nWhat are my qualifications?\nI'm a full-stack developer and have been coding with JavaScript for about 10 years. Over this time, I've seen it all when it comes to JavaScript arrays, and the topics covered in this course are a direct reflection of what I see on a daily basis. If you're ever unsure about any of the topics covered, feel free to send me a message on Udemy ?",
      "target_audience": [
        "Beginner web developers",
        "Beginner web developers who have learnt HTML and want to move onto learning JavaScript",
        "Beginner JavaScript developers",
        "Developers with experience in other languages (such as Python) who want to learn JavaScript",
        "Experienced developers looking for a recap on JavaScript"
      ]
    },
    {
      "title": "Create Wix & Shopify Dropshipping Store & Start Monetiz",
      "url": "https://www.udemy.com/course/wix-website-development-create-a-wix-social-media-website/",
      "bio": "Learn how to turn your simple Wix or shopify to Online shop to e-commerce dropshipping and start Monetize",
      "objectives": [
        "Create your web site, connect it to social media applications and have a strong presence to market and grow your product.",
        "Use easy & intuitive Wix editors & make stunning ready-made templates your own.",
        "How to get Wix (ADI) Artificial Intelligence editor to create your website.",
        "How to select & work with Wix ready-made Online store and other business templates and start market your product.",
        "Finishing this course will make you feel comfortable & capable of creating your Blog, Online store, Drop-shipping or E-commerce Business.",
        "Improve your Wix SEO plan to get found on Google and start monetize"
      ],
      "course_content": {},
      "requirements": [
        "No previous knowledge is required, only Personal Computer or Mac with internet connection is required.",
        "Interest and willingness to learn and develop own online presence"
      ],
      "description": "By the end of this course you will be able to\nSelect your favorite web site template, modify it and manage your changes and make your own.\nCreate and publish your own Portfolio or CV web site for free.\nCreate your own blog using Wix ADi Artificial Intelligence editor\nCreate your blog or Online shop, Drop shipping or E commerce Business.\nUse Wix ready-made Online store & business templates, make it your own and start market your product.\nImprove your WIX SEO Plan and start Monetize\nThis course will take you from a complete beginner to a power user mastering  Wix tools through the practical sessions and assignments.\nYou will be able to publish your free web site; your own blog and you will be more creative in taking your site to the next level.\nYou will integrate & connect your site with social media applications (Facebook, Youtube, LinkedIn, Instagram & Pinterest) to market your site whether it is a simple CV, Blog, product page or a professional site.\nAreas covered in this course:\nModify and manage the changes you make in your own template\nCreate and publish your own Portfolio/CV web site.\nCreate your own blog using Wix ADi Artificial Intelligence editor\nCreate your own Online shop by selecting one thousands free Wix templates\nCompare Wix with Shopify online e-commerce\n\n\nThis course is ideal for beginners who want to learn and love a web tool that can do it all.\nWhat do you get when you buy this course?\nLife time access to the course video lectures downloads and updates\nFull support from the instructor\nEnroll now and start learning today.",
      "target_audience": [
        "Anyone who is interested in creating his/her own web site for personal or business use.",
        "Beginners who are interested in establishing Internet & social media presence, bloggers or products owners who want to market their products via the internet and social media.",
        "Who ever wants to teach online courses, develop and manager their own blog, start online business or any one who wants to have social media presence."
      ]
    },
    {
      "title": "WordPress for Beginners - Create Beautiful Websites Quickly",
      "url": "https://www.udemy.com/course/wordpress-for-beginners-create-beautiful-websites-quickly/",
      "bio": "Learn how to build a stunning & responsive WordPress website that looks awesome on all devices. No experience required.",
      "objectives": [
        "This course will teach anyone to build a functional, beautiful, responsive website with WordPress.",
        "Understand the main features of WordPress",
        "Create pages and posts, and most importantly, know the difference between the two.",
        "Understand plugins & themes and how to find/install them",
        "Create a Responsive Website that looks good on any browser"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to course",
          "What will you learn in this course?",
          "What is WordPress?"
        ],
        "Before you begin": [
          "Components in website development",
          "Domain name explained in simple words",
          "Rules for selecting right domain name",
          "Web hosting explained in easy words",
          "Let's buy hosting for our new website"
        ],
        "Basic Setup of Web Hosting before starting up": [
          "How to Install WordPress on web hosting in easy steps",
          "How to login to WordPress Dashboard",
          "How to remove coming soon page from website",
          "How to change password of WordPress"
        ],
        "Quick & Detailed Overview of WordPress Dashboard": [
          "Top Bar Overview",
          "Dashboard Quick Overview"
        ],
        "User Management in WordPress": [
          "Types of user roles",
          "How to add New User in WordPress Dashboard"
        ],
        "Themes, Plugins and Templates": [
          "Introduction to themes, plugins & templates in WordPress",
          "How to install, delete & publish WordPress theme",
          "Free vs premium themes",
          "How to upload theme manually onto WordPress dashboard",
          "How to install plugin in WordPress",
          "How to deactivate & delete plugin in WordPress",
          "How to upload plugin manually in WordPress dashboard"
        ],
        "Let's learn about page builders in WordPress": [
          "Introduction to page builder in WordPress",
          "Why to select Elementor as primary page builder"
        ],
        "Astra template library and install template": [
          "Explore astra library & how to install template"
        ],
        "Essential Settings in WordPress": [
          "General Settings",
          "Writing settings in WordPress",
          "Reading Settings in WordPress",
          "Discussion Settings in WordPress",
          "Media Settings in WordPress",
          "Permalink Settings in WordPress",
          "Privacy Settings in WordPress"
        ],
        "Important features of Website & WordPress": [
          "What is responsiveness & how to check?",
          "Update service in WordPress",
          "Post vs Page in WordPress"
        ]
      },
      "requirements": [
        "A working Laptop/computer, either Windows (7,8,10 or 11) or Mac OS (10.13 or later).",
        "A browser: Chrome/Firefox/Safari",
        "No prior knowledge of WordPress is required as everything will be covered in this course.",
        "You don't need any coding experience at all. That is the beauty of WordPress."
      ],
      "description": "ABCD - Any Body Can Develop - a beautiful website that too without a single line of code. Isn't it cool?\nThe primary goal of this course is to teach anyone, even a complete beginner, how to become a Wordpress guru in a few short hours, without lots of technical knowledge or coding skills.\nThis course is taught by Mr. Rahul Singhal, who has already helped 10,000+ students in last 5 years to up-skill the digital skills like website development, digital marketing & many more.\n\n\nAbout the Course\nThis course will empower you to become a WordPress evangelist in just few hours. First we will understand all the basic but essential concepts about WordPress and website development. Then after, we will learn how to buy domain & hosting for your website to make it live & accessible. Moving further, we will have a look at WordPress dashboard and all the options which are available. And at last, we will create our own business website.\nWho is this WordPress course for?\nStudents looking to build a promising career in digital world.\nEntrepreneurs looking to create website for their startups.\nFreelancers looking to upgrade their skillset.\nPeople looking to earn extra income by learning a new skill.\nCorporates looking for a in depth course for their team",
      "target_audience": [
        "Website Development Beginners",
        "Startup Owners",
        "Small Business Owners",
        "Website Designing Beginners"
      ]
    },
    {
      "title": "Webrtc by Projects",
      "url": "https://www.udemy.com/course/webrtc-by-projects/",
      "bio": "This course is a mixte of theory and practice. The only course on internet with Webrtc and Canvas.",
      "objectives": [
        "Understand the main components of Webrtc",
        "Webrtc Signaling process",
        "Understand the Ice mechanism",
        "Create 2 Real Time Applications with WebRTC and Canvas"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Class! - Course Overview",
          "Setup Nodejs Server with Socket.io",
          "deploy to Heroku using Github"
        ],
        "Project 1: Realtime Video Communication with Webrtc": [
          "Introduction : What will build and learn",
          "MediaStream Interface",
          "Display stream on video element",
          "Mute, Unmute and Stop Tracks",
          "Understand the RTCPeerConnection and Signaling process",
          "Handle Offer",
          "Handle Answer",
          "Exchange Ice Candidates"
        ],
        "Project 2: Video Communication using Webrtc and Canvas": [
          "Introduction : What will build and learn",
          "Display Video on Canvas",
          "Stream canvas context with Webrtc",
          "Draw on Canvas"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript and HTML",
        "PC or MAC"
      ],
      "description": "This course is a mixte of theory and practice.\nThis course is designed for beginners and intermediate Webrtc developers and also all who want to know how to use Webrtc with Canvas.\n\n\nWe will build projects step by step to understand all the basics of Webrtc\n\n\nYou will find easy explanations of questions like, what is a MediaStream? how to get this object? what is an RTCPeerConnection object and what are all step of a signaling process.\n\n\nAlso you will understand what is Ice Candidate, why we need STUN and TURN servers and what is ICE mechanism to collect and select the right network candidates to have a peer to peer communication even through NAT Network\n\n\nIn this course we have 3 sections:\n- In First section we will create a nodejs server with Socket io (for signaling process) and will show you how to deploy to Heroku using Github\n- In section 2, we create the first project, a realtime video communication using Webrtc\n- in section 3 : we build our second projects, is a realtime video communication but using canvas, a User will draw with a mousse on a live video and send the contexte of the canvas using Webrtc instead of sending directly the live video from media source",
      "target_audience": [
        "Anyone wanting to learn or build Webrtc applications."
      ]
    },
    {
      "title": "Construct a free website using a Google Sites July 2024",
      "url": "https://www.udemy.com/course/construct-a-free-website-using-a-google-sites-july-2022/",
      "bio": "This course will help you to learn how to create a google sites from basics to advanced level.",
      "objectives": [
        "How to create a Google Site from scratch?",
        "How to add a contents to your Google Site?",
        "How to create a pages in Google Site?",
        "How to create announcements in a Google Site?",
        "How to Customize a theme in Google Site?",
        "How to Publish a Google site with a Custom Domain?"
      ],
      "course_content": {
        "Introduction": [
          "How to Create a Google site?",
          "Creating Google Site With a Blank Template"
        ],
        "Contents": [
          "How to add Contents in a Google Site?",
          "How to Embed content in a Google Site?"
        ],
        "Pages": [
          "How to add pages in a Google Site"
        ],
        "Other Settings": [
          "How to Customize Navigations in a Google Site?",
          "How to create Announcement Banner in a Google Site?"
        ],
        "Publishing a site": [
          "How to Publish Your Google Site?",
          "How to Publish Google Site with a Custom Domain?"
        ],
        "Analytics": [
          "Track Site visitors using Google Analytics."
        ]
      },
      "requirements": [
        "Computer with internet.",
        "Anyone can Learn. No any special prerequisites."
      ],
      "description": "Day's are gone when you required some programing knowledge to create a websites. Using a Google Sites you will create a basic website which will fulfill all your needs as a small business owner or an educator.\nAs a business owner you can make your products or services live with entire world using a Google Sites.\nAs an Educators you can connect with your students worldwide and make learning materials available to them easily.\nFollowing topics are covered in this course.\nHow to create a google site?\nCreating google site with a blank template.\nHow to add contents in a google site?\nHow to embed content in a google site?\nHow to add pages in a google site?\nHow to Customize Navigations in a Google Sites?\nHow to Create an Announcement Banner in a Google Sites?\nHow to Publish your Google Site?\nHow to Publish Google sites with a custom domain?\nHow to track site visitors using a google analytics?\nAlso there are many useful add-ons available on an internet which can be easily integrated with a google sites. I will update this course time to time and teach you all useful add-ons.\nI will come with a next lesson is how to receive payment in a google site.",
      "target_audience": [
        "Educators.",
        "Small Business Owners.",
        "entrepreneurs.",
        "Service Providors."
      ]
    },
    {
      "title": "Spring Boot Essentials",
      "url": "https://www.udemy.com/course/spring-boot-essentials-m/",
      "bio": "Take your Spring productivity to the next level by mastering Spring Boot!",
      "objectives": [
        "Foundations of the Spring Boot platform and understand it's operation from the ground up",
        "Be able to create and build Spring Boot projects",
        "Feel confident in examining existing Spring Boot projects and be able to step through and reason about how the application works",
        "Understand layered architecture basics and how Spring Boot let's us create layered applications built on top of Spring",
        "Know how starter dependencies work and be able to create projects out of various technologies using these",
        "Know how autoconfiguration works and understand how to use it and troubleshoot it where required"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course!"
        ],
        "Getting Started": [
          "Section Introduction",
          "Creating a Spring Boot Application with Spring Initilizr",
          "Exploring a Spring Initilizr Generated Spring Boot Project",
          "Using Maven with Spring Boot",
          "Using Gradle with Spring Boot",
          "Running and Debugging Spring Boot Apps in the IDE",
          "Understanding Layered Architecture in Spring Applications",
          "Important Spring Boot Resources You Should Know"
        ],
        "Taking a Tour of a Sample Spring Boot Application": [
          "Section Introduction",
          "Downloading Spring Pet Clinic",
          "Building the Sprint Pet Clinic Application",
          "Running the app and taking a tour of the application",
          "Examining the project and it's dependencies in the IDE",
          "Examining the controllers and web layer",
          "Examining the repositories and data layer",
          "Examining the startup of a Spring Boot application",
          "Examining the application properties, logging configuration and profiles",
          "Summing Up the essence of how a spring boot application works"
        ],
        "Understanding Starter Dependencies": [
          "Section Introduction",
          "Understanding Spring Boot Starter Dependencies and their resolution",
          "Relating the Spring Boot dependency graph within your IDE",
          "Looking at the Flattened Resolved Dependencies Set",
          "Changing the Starter Dependency to Bring in a Different Spring Boot Tech Stack",
          "The Relationship of Starter Dependencies with Autoconfiguration"
        ],
        "Understanding Autoconfiguration": [
          "Section Introduction",
          "How Spring Boot Creates the Spring Application Container",
          "How @SpringBootApplication Configures a Spring Boot App",
          "Spring Factories for Autoconfigured Libraries",
          "Understanding a Typical Autoconfiguration",
          "Property Injection in Autoconfiguration Classes",
          "Understanding Conditions and Excluding and Overriding Autoconfiguration",
          "Debugging Autoconfiguration by Enabling Autoconfig Reporting"
        ],
        "Understanding Spring Boot Properties": [
          "Section Introduction",
          "Common Properties in Spring Boot Which You Can Configure",
          "Injecting Properties into Spring Managed Beans",
          "Providing Default Values for Properties",
          "Overriding Properties at Runtime with System Properties",
          "Specifying Properties in YAML File Format",
          "Accessing Nested Properties and Strongly-Typed Property Values"
        ],
        "Exploring Startup of a Spring Boot Application": [
          "Section Introduction",
          "Examining a Foundational Spring Boot Project",
          "Registration of Important Spring Application Listeners",
          "Preparing and Establishing the Spring Application Context",
          "Creating the Beans of the Spring Runtime",
          "Creating the Embedded Tomcat Web Server",
          "Publishing Spring Events to Application Listeners"
        ],
        "Wrapping Up": [
          "Thanks and wrap up"
        ]
      },
      "requirements": [
        "A prior knowledge of the basics of Spring is helpful but not essential",
        "At least a minimal knowledge of Java development experience is assumed (limited to the absolute basics of object oriented programming in being able to create and use objects and appreciate inheritance)",
        "A hunger and deep desire to understand how Spring Boot works from the ground up"
      ],
      "description": "How would you like to master what actually happens inside a Spring Boot application and start your journey with the most important technology to hit Java enterprise development since the Spring Framework itself was launched!\nWell then this course is for you!\nIn this course we take you step-by-step on a fascinating journey into how Spring Boot applications work.  We'll uncover and decode the complexities of the following:\nhow to get started with Spring boot using Spring Initializr to create our projects and tap into the rich set of technology that Spring Boot offers\nhow to build our Spring Boot projects with both Maven and Gradle\nhow to run and debug Spring Boot applications in our IDE\nunderstanding layered architecture in Spring applications with controller, service and repository annotations\nlooking at a sample Spring Boot application's code, seeing how it works together\nunderstanding starter dependencies and how these let you access a myriad of Java technologies almost \"for free\" and see how they work with Maven and Gradle's dependency resolution mechanism\ndecode how autoconfiguration works in Spring Boot looking at conditions, overriding and how to see what's going on!\nuse properties in Spring Boot projects through injection and see common and important Spring Boot properties you need to know!\nexplore how a Spring Boot application starts up by stepping through the code and seeing exactly what happens under the hood!\nThis is a course which empowers you by unlocking the complexities of how Spring Boot works so that you understand what's going on.  In this way you get an excellent foundational basis of Spring Boot understand that will stand you in good stead so you'll feel at ease exploring further and tapping into the amazing power that this versatile and powerful platform offers.\nI'm so excited to teach you all about Spring Boot - so enrol today and I'll see you inside! ;)",
      "target_audience": [
        "Beginning (but not absolute beginning though) to intermediate level Java developers who want to learn Spring Boot"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/javascript-course-with-javascript-projects-from-scratch/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Ultimate Angular Prep: Practice Exams for Your Success",
      "url": "https://www.udemy.com/course/ultimate-angular-prep-practice-exams-for-your-success/",
      "bio": "Prepare for Angular certification and job interviews with 230 practice questions, covering basics to advanced concepts.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is designed to effectively prepare you for Angular certifications and job interviews. With over 230 practice questions, you'll cover all aspects of Angular, from basic concepts to advanced features, up to version 19. You'll master Angular while testing your skills in real exam-like conditions.\nEach question comes with detailed explanations, helping you understand not just the correct answer, but also the reasoning behind it. This ensures you truly grasp Angular concepts, reinforcing your knowledge and improving your problem-solving skills.\nYou'll also find tips and best practices to help you navigate real-world development challenges, making you more confident in your coding abilities. The questions are designed to mimic real certification exams, ensuring you're fully prepared when the time comes.\nTo maximize your learning, you’ll get step-by-step guidance on complex topics, making even the most advanced concepts easy to understand.\nWhether you're a beginner or an experienced developer, this course will help you strengthen your understanding of Angular, improve your problem-solving abilities, and prepare you for official certifications. You'll also be ready to tackle technical interviews with confidence, thanks to targeted training and realistic scenarios.\nDon't leave anything to chance in your Angular journey. Join this course and get ready to pass your certifications while boosting your career opportunities.",
      "target_audience": [
        "This course is designed to help you pass your Angular certification and prepare for technical interviews. Through 230 carefully crafted questions, you will test and refine your Angular skills, covering everything up to Angular 19. You will train with practical, exam-style questions to ensure you are ready for certification. The course also prepares you for job interviews by giving you the confidence to tackle complex Angular technical questions. From fundamentals to advanced topics, nothing is left out. You will work with real-world scenarios that go beyond theory, helping you develop job-ready skills. By the end of this course, you will have all the knowledge and confidence needed to earn your certification and showcase strong Angular expertise to recruiters."
      ]
    },
    {
      "title": "HTML5 and CSS3: learn how to design and build websites",
      "url": "https://www.udemy.com/course/html-and-css-design-and-build-websites/",
      "bio": "Unlock the Power of Web Development – From Fundamentals to Stylish and Responsive Websites",
      "objectives": [
        "a robust understanding of HTML, enabling them to structure web content effectively, enhance user experience, and create visually appealing web pages",
        "learn how HTML is used to create web pages",
        "Understand the intricacies of creating hyperlinks, including advanced linking techniques, and master the creation of interactive forms for user input.",
        "Explore the integration of multimedia elements such as video and audio using HTML5",
        "Learn how to style and customize your HTML elements to create visually appealing websites",
        "Upon successful completion of this course, students will be able to build complete websites from scratch"
      ],
      "course_content": {},
      "requirements": [
        "a computer with a web browser"
      ],
      "description": "Embark on a transformative journey into the world of web development with our comprehensive course, \"HTML and CSS: Design and Build Websites.\" Whether you're a budding developer or a seasoned professional looking to enhance your skills, this course is your gateway to crafting visually stunning and responsive websites.\n\n\nWhat You'll Learn:\nHTML Fundamentals: Master the essentials of HTML, the backbone of web development, and learn how to structure content for dynamic web pages.\nCSS Styling Techniques: Dive into the world of CSS and unleash your creativity. Learn how to style and customize your HTML elements to create visually appealing and well-designed websites.\n\n\nResponsive Design:  Explore the art of responsive web design, ensuring your creations look flawless across various devices and screen sizes.\n\n\nInteractive Features:  Elevate your websites with interactive elements. Learn to incorporate forms, navigation menus, and other dynamic features to enhance user engagement.\n\n\nBest Practices: Gain insights into industry best practices, including semantic HTML, accessibility considerations, and efficient CSS coding techniques.\n\n\nWhy Enroll:\nPractical Projects: Apply your newfound knowledge through hands-on projects, from structuring simple web pages to designing fully responsive websites.\n\n\nExpert Guidance: Learn from experienced instructors who are passionate about web development. Benefit from their insights and stay updated with the latest industry trends.\n\n\nCareer Readiness:  Whether you're aiming to kickstart a career in web development or enhance your current skill set, this course equips you with the tools needed for success.\n\n\nJoin us on this exciting journey of HTML and CSS mastery. By the end of the course, you'll have the skills to design and build websites that not only look visually appealing but also provide an exceptional user experience. Enroll now and unlock the potential to shape the digital landscape!",
      "target_audience": [
        "Those who want to learn how to design and build websites from scratch",
        "Anyone who has a website (that may be built using a content management system) and wants more control over the appearance of their pages"
      ]
    },
    {
      "title": "Build a Realtime Chat App with Laravel 11, Vue 3 and Pinia",
      "url": "https://www.udemy.com/course/realtime-chat-app-with-laravel-vue-and-pinia/",
      "bio": "Learn how to build a realtime chat app with Laravel 11, Vue 3, Inertia and Reverb, using Pinia for state management",
      "objectives": [
        "Learn how to Integrate Laravel with Reverb to build Real-Time Applications",
        "Learn how to display user typing events using Whisper and implement Client-to-Client communication",
        "Learn how to use presence channels to show online users for each room",
        "Learn how to use the Intersection Observer API to automatically load previous chat messages",
        "Learn State management with Pinia",
        "Learn how to use flexbox tricks to keep messages scrolled into view as they roll in",
        "Learn how to listen for Broadcasted events from the backend and react to them accordingly",
        "Learn how to listen for users leaving or joining events and add/remove them from the online user list"
      ],
      "course_content": {},
      "requirements": [
        "Beginner level knowledge of PHP/Laravel and VueJS is Required"
      ],
      "description": "Using the power of Laravel Reverb, let’s build a real-time multi-room chat application with Laravel 11 and VueJS with InertiaJS,  pulling in Pinia for state management.\n\nWe’ll cover:\nUsing the Intersection Observer API to load previous chat messages automatically when the user scrolls to the top of the chat interface\nLearn how to Use presence channels to show online users for each room\nLearn how to implement Client-to-client communication using Laravel Echo to show who’s typing and display the typing indicators accordingly\nLearn how to use Flexbox tricks to keep messages scrolled into view as they roll in\nLearn database seeding techniques in Laravel\nLearn how to use API Resources in Laravel\nLearn how to display better-formatted dates and times\nLearn how to listen for Broadcasted events from the backend and react to them accordingly\nWe'll also learn how to listen for users leaving or joining events and add/remove them from the online user list\nAll of this state will be managed on the client side, using Pinia\n\n\nBy the end of this course, you will have built a feature-rich, real-time chat application that showcases your understanding of front-end and back-end technologies, perfect for any aspiring developer looking to enhance their skills in dynamic web application development.",
      "target_audience": [
        "Laravel Developers who want to Build Realtime Applications using InertiaJS, Vue 3 and Reverb"
      ]
    },
    {
      "title": "Wordpress Plugins that will transform your Website",
      "url": "https://www.udemy.com/course/top-wordpress-plugins/",
      "bio": "Master the best Wordpress Plugins to get the most of your Wordpress Websites. Become the greatest Wordpress Champion",
      "objectives": [
        "Develop an Onlineshop with Wordpress all by your self",
        "Launch a Hotel Booking System in Wordpress all by your self",
        "Transform your Website by adding the right Wordpress Plugins",
        "Improve Layout, Performance and Functionality of your Website through Wordpress Plugins",
        "Familiarise yourself with the most important Wordpress Plugins",
        "Implement a fully functional Forum with Wordpress"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Where do we start the course?",
          "What actually are Wordpress Plugins?",
          "Where can I get Wordpress Plugins from?"
        ],
        "Wordpress Plugins for Layout": [
          "Visual Composer",
          "Creating Great Layouts with Visual Composer",
          "Visual Composer: Icon Boxes",
          "Visual Composer: 50 50 Rows",
          "Visual Composer: Outro",
          "Page Builder by Site Origins",
          "Wordpress Slider - Slider Revolution 5",
          "Contact Form 7",
          "Easy Google Fonts",
          "MailChimp Widget",
          "MailChimp Widget 2"
        ],
        "Create your own Web Shop: Woocommerce": [
          "Download and Installation",
          "Setup the Basics",
          "Creating Simple Products",
          "Creating Variable Products"
        ],
        "Online Booking with Checkfront Booking System": [
          "Checkfront Introduction",
          "Checkfront: Setup",
          "Checkfront: Creating Bookable Items",
          "Checkfront: Integration into Wordpress",
          "Checkfront: Backend Functionalities"
        ],
        "Optimizing Your Wordpress Website": [
          "Wordpress SEO by Yoast"
        ],
        "Brilliant Helper Plugins for Wordpress": [
          "BB Press - The personal Forum for your Wordpress Website",
          "Duplicate Posts and Pages",
          "Advanced Code Editor - Quicker Custom CSS Styling"
        ]
      },
      "requirements": [
        "You should have basic experience with Wordpress",
        "You should have a Wordpress Installation (online or local)",
        "You should know how to install Wordpress"
      ],
      "description": "---------------------------------------------------------------------------------------------------------------------------\nThis course receives continuous updates !! The Price will be adjusted as well\n---------------------------------------------------------------------------------------------------------------------------\nThis absolute Course introduces to you the best Wordpress Plugins that will bring your Wordpress projects forward.\nIn this course you are going to learn how to use the very most influential and useful Wordpress Plugins that will transform your Wordpress Website into whatever you want it to be:\nAn Onlineshop that let's you start selling physical or digital products immediately\nA Booking System for your Hotel, Hostel, City Tour, Barber Shop Parlour, etc.\nA Forum to get your community engaged in topics you are strong in\n\nYou will learn where to get the most brilliant and useful Wordpress Plugins. You will also see every single step how to properly install and integrate them into your Wordpress Installation. This course covers a range of Free and Premium Wordpress Plugins.\n\nWhich Plugins are you going to learn about:\nWoocommerce Online Shop - the number 1 shop system for Wordpress\nCheckfront Booking System - a powerful Booking Back- and Front end for Wordpress\nVisual Composer Page Builder\nPage Builder by Site Origins\nRevolution Slider 5 - the most advanced Slider Plugin for Wordpress\nMailChimp Newsletter Sign Up Forms and List Management\nContact Form 7 -\nEasy Google Fonts - Manage and Customize all fonts on your Website\nBBPress - Set up a personal Forum on your Website\nSEO Yoast - Instant Feedback how your page ranks for certain Keywords\n...\nThis list will be continuously updated!!\nAfter taking this course you will not depend on expensive Wordpress Experts anymore to bring your Online Business forward. You will be able to do 80% to 100% of the work on your Wordpress Website yourself, Because you will be the Wordpress Expert yourself!! :)\n\nWhat you need to know:\n\nYou should have a simple own Wordpress Website\nYou should know how to setup a Wordpress Website on your own\nYou should have clicked a bit around in the Back end of Wordpress\n\nWho is this course for:\n\nBeginners and Advanced Users of Wordpress who want to become more independent\nStarters of Web Development who want to bring their Wordpress Projects forward\nAnyone who likes to learn about great tools and want to become a Wordpress Hero\n\nThe best thing about this course is that it will be continuously updated with content about the latest and most useful Wordpress Plugins on the market. Wordpress is so dynamic and daily new fantastic Plugins are released. So as soon as I discover some gems for you, I will sit down and create another learning video for you!\n\nMy Promise to you:\n\nYou get Frequently Updated content about Wordpress Plugins\nYou get Personal Wordpress Support and Guidance of myself\nYou benefit from my long experience in Wordpress\n\nEnrol now and start your own fantastic Web Project with Wordpress! :)",
      "target_audience": [
        "Curious Web Starter",
        "Beginners of Wordpress",
        "Intermediate Bloggers of Wordpress",
        "Fans of great content"
      ]
    },
    {
      "title": "Build a Bank: Full-Stack App Development Using React & Flask",
      "url": "https://www.udemy.com/course/build-a-bank-full-stack-app-development-using-react-flask/",
      "bio": "Learn Frontend (JavaScript) and Backend (Python) by building a practical real-life project from scratch",
      "objectives": [
        "Build a full-stack application from start to finish and deploy it",
        "Learn the React framework and the Javascript language for frontend development",
        "Learn the Flask framework and the Python language for backend development",
        "Learn how to create practical real-world projects",
        "Become a digital creator"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What we're going to build"
        ],
        "Building a First Backend": [
          "Installing Python",
          "Creating a virtual environment",
          "Running a Flask application"
        ],
        "Building A First Frontend": [
          "Installing Node",
          "Creating a React App"
        ],
        "Frontend Part 1: Overview": [
          "Github link",
          "Creating the Boilerplate for our Overview",
          "Filling in our Overview",
          "Creating a Transaction Table",
          "Bootstrap",
          "Flexbox"
        ],
        "Frontend Part 2: Transfer": [
          "Building our Transfer Page"
        ],
        "Frontend Part 3: Navigation": [
          "Building Navigation"
        ],
        "Frontend Part 4: State": [
          "What is State?",
          "Reiteration on the Importance of State"
        ],
        "Backend": [
          "Restructuring",
          "Database",
          "Transfer Backend Functionality",
          "Adding Transactions to Database",
          "Validating Transactions",
          "Connecting Transfers to Backend",
          "State Changes"
        ],
        "Authentication: Frontend": [
          "Frontend Authentication Part 1",
          "Frontend Authentication Part 2"
        ],
        "Authentication: Backend": [
          "Authentication Backend Part 1",
          "Authentication Backend Part 2",
          "Authentication Backend Part 3",
          "Connecting Authentication Frontend and Backend",
          "Signout Button"
        ]
      },
      "requirements": [
        "Some familiarity with JavaScript/Python will help, but is not a necessity"
      ],
      "description": "In this course you will learn Python and JavaScript by building a practical real-life application from scratch!\nThis code-along tutorial we will build out this application together\nAt the heart of this course is the belief in \"learning by doing.\" You will learn the following concepts:\n\n\nDesign A User Interface: Think about and craft an intuitive and responsive user interface for your banking application using React (JavaScript).\nImplement Business Logic: Dive into the backend with Python, developing the core logic that drives banking operations, from account management to transaction processing.\nIntegrate Frontend with Backend: Learn how to connect your React frontend with the Python backend, ensuring a smooth and integrated application and user experience.\nWork with Databases: Learn how to create and manage a database, learning how to store, retrieve, and manipulate data.\nDeploy Your Application: Bring your project to life by deploying it, and being able to share it with anyone in the world.\nBecome a Digital Creator: By building a practical real-life project from scratch you will learn to spot opportunities for digital products and how to build them.\nAfter this course you will have built a real-life banking application and will know how to create many more!",
      "target_audience": [
        "Developers with a desire to build a practical real-world application",
        "People who want to learn frontend development for applications",
        "People who want to learn backend development for applications",
        "People who want to become digital creators"
      ]
    },
    {
      "title": "Complete Web development with Python, Django and MongoDB",
      "url": "https://www.udemy.com/course/complete-backend-development-python-django-and-mongodb/",
      "bio": "A project based course to master web development with Python3, Django 3 and MongoDB",
      "objectives": [
        "Learn to use Python 3 professionally",
        "Learn advanced Python features, such as the collections module",
        "Learn to use Object Oriented Programming with classes.",
        "Understand how to use both the Jupyter Notebook and create .py files",
        "Learn file handling by making an marks database project",
        "Learn about functions by making an advanced calculator",
        "Learn to use Google's API for speech recognition using python.",
        "Learn to build your own QR Code Scanner using Computer Vision.",
        "Learn to build blog post website with Django",
        "Learn to build Google forms Clone with Django and MongoDB"
      ],
      "course_content": {
        "Course Overview": [
          "Course Introduction",
          "Course Curriculum Overview"
        ],
        "Python Setup": [
          "Installing Python (Step By Step)",
          "Starting Command Line",
          "Command Line Basics",
          "Running Python Code",
          "Working on Assignments"
        ],
        "Python Object and Data Structure (Level - I)": [
          "Variable Assignments",
          "Data Types",
          "Type Casting",
          "Strings - I",
          "Strings - II",
          "Booleans",
          "Operators",
          "List - I",
          "List - II",
          "Sets",
          "Tuples",
          "Dictionary",
          "Knowledge Check",
          "Python Practise Test"
        ],
        "User Interaction (Level - II)": [
          "User Input",
          "String Formatting",
          "Python Practise Test"
        ],
        "Decision Making And Looping In Python (Level - III)": [
          "If Elif and Else Statement in Python",
          "While Loops in Python",
          "For Loops in Python",
          "Useful Operators in Python",
          "Knowledge Check",
          "Knowledge Check",
          "Assignments"
        ],
        "File Handling (Level - IV)": [
          "Opening, writing and closing a file",
          "Reading a file",
          "Appending a file",
          "Knowledge Check",
          "Assignments"
        ],
        "Functions (Level - V)": [
          "Functions with *args and **kwargs",
          "Variable Scope",
          "Lambda Function",
          "Knowledge Check",
          "Assignments"
        ],
        "Object Oriented Programming (Level - VI)": [
          "Python Classes and Objects - I",
          "Python Classes and Objects - II",
          "Inheritance",
          "Iterators",
          "Knowledge Check",
          "Assignments"
        ],
        "Handling Errors and Working with Modules (Level - VII)": [
          "Errors and Exceptions Handling",
          "Installing Modules",
          "Modules and Packages",
          "Creating Modules with Jupyter Notebook",
          "Knowledge Check",
          "Assignments"
        ],
        "Advance Modules in Python": [
          "Python Random",
          "Python JSON",
          "Python Math",
          "Python Dates and Time"
        ]
      },
      "requirements": [
        "Access to a computer with internet facility",
        "A burning desire to learn."
      ],
      "description": "Become a Django Developer and learn one of the employer's most requested skills of 2023!\n\nThis is a crisp, clear and comprehensive course for learning backend web development with Django and MongoDB! Whether you have never programmed before, already know basic syntax, or want to learn about the advanced features of web development with Python and Django, this course is for you! In this course, we will teach you complete backend web development with Python, Django, and MongoDB.\nWith over 100 lectures and more than 12 hours of high-quality video, this refresher course leaves no stone unturned! This course includes a lot of interesting quizzes, and homework assignments as well as 6 major projects including a Super Blog and Google Forms Clone to create your own portfolio right away!\nThis course will teach you backend web development with Python and Django in a practical manner, with every lecture comes a full coding screen-cast, corresponding code notebook, exciting quizzes, and homework assignments! Learn in whatever way is best for you!\nWe will start by helping you get Python and Django installed on your computer, regardless of your operating system, whether it's Linux, macOS, or Windows, we've got you covered!\nWe cover a wide variety of topics, including:\nCommand Line Basics\nInstalling Python\nRunning Python Code\nStrings\nLists\nDictionaries\nTuples\nSets\nNumber Data Types\nPrint Formatting\nFunctions\nargs/kwargs\nDebugging and Error Handling\nModules\nObject Oriented Programming\nFile I/O\nCreating web applications with Django\nRendering templates\nInstalling and using MongoDB with Python\nGenerating UUID and using it as the primary key in Django\nSending and receiving Asynchronous requests, to show updated information without refreshing the page.\nBuilding absolute URLs\nCreating fake data\nCreating sitemap to make your website more visible to search engines.\nand more lectures will be added as required to keep the course updated!\n\n\nYou will get lifetime access to over 100 lectures plus corresponding Notebooks for the lectures!\nIn case you don't believe me... This course comes with a 30-day money-back guarantee! If you are not satisfied in any way, you'll get your money back. No questions asked!!\n\n\nSo what are you waiting for? Learn Django in a way that will advance your career and increase your knowledge, all in a fun and practical way!",
      "target_audience": [
        "Beginners who are getting into programming for the first time",
        "Beginners who want to start a career in Artificial Intelligence/ Data Science/ Machine Learning/ Robotics",
        "Programmers who want to switch to Python",
        "Programmer who want to learn backend development",
        "Everyone who wants to learn how to code and apply the knowledge in real life"
      ]
    },
    {
      "title": "API Design & Development",
      "url": "https://www.udemy.com/course/api-design-development-with-raml-building-complex-api/",
      "bio": "Learn API design principles. Develop API from scratch using RAML. Build complex APIs for Banking, Music, Mobile Orders.",
      "objectives": [
        "Define API concepts and terminologies",
        "Understand API design & development process",
        "Explain features of API and best practices",
        "Define API security elements",
        "Learn complete API design and development - coding and technical",
        "Learn end-to-end RAML API Design",
        "Elaborate use-cases and examples of API",
        "Build API from scratch for Banking",
        "Build API from scratch for Music",
        "Build API from scratch for Mobile Orders"
      ],
      "course_content": {
        "INTRODUCTION TO API": [
          "INTRODUCTION TO API"
        ],
        "DATA FORMATS AND AUTHENTICATION": [
          "DATA FORMATS AND AUTHENTICATION"
        ],
        "DESIGNING API": [
          "DESIGNING API"
        ],
        "API DESIGN CENTER AND FEATURES OF API": [
          "API DESIGN CENTER AND FEATURES OF API"
        ],
        "API BEST PRACTICES": [
          "API BEST PRACTICES"
        ],
        "API SECURITY SCHEMES": [
          "API SECURITY SCHEMES"
        ],
        "API DESIGN PRINCIPLES": [
          "API DESIGN PRINCIPLES"
        ],
        "INTRODUCTION TO RAML": [
          "INTRODUCTION TO RAML"
        ],
        "IMPORTANCE OF RAML IN DESIGN": [
          "IMPORTANCE OF RAML IN DESIGN"
        ],
        "RAML EXAMPLE FOR DESIGNING API": [
          "RAML EXAMPLE FOR DESIGNING API"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the API Design & Development course by Uplatz.\n\n\nAPI stands for Application Programming Interface. An API is like a tool-suite that programmers can use in helping them create software. A good API will have clear and concise commands that a programmer can use and reuse, so they don't have to build everything over again. The API is a powerful and versatile means to connect diverse and disparate software applications.\nAPIs allow a vast array of unrelated software products to integrate and interoperate with other software and data. APIs also allow developers to add features and functionality to software by utilizing a rich array of other developers' APIs. APIs are not all equal, however. Developers can work with an assortment of API types, protocols and architectures that suit the unique needs of different applications and businesses. In simple words, an API is an interface that helps software programs connect and communicate with one another.\nBy leveraging the connectivity that APIs provide, developers can work more efficiently and get more things done. Instead of writing code that’s already been written before and wasting precious time, developers can focus their efforts on innovation and expanding the usage of their application or products or services.\nAPIs are essentially the tools. They allow you as a programmer to deliver solid solutions fairly rapidly. If you have to rebuild everything from scratch every time, your solutions will be cumbersome. They probably might not even work so if there's an API for a particular need, it is to be used. People who have built a successful business from the ground up are always looking for ways to scale it. One of the ways to do this is to encourage interaction with your business, and you can do exactly that by creating an API.\nWhen designing an API, API design refers to the set of planning and architectural choices being made. The API's fundamental design has an impact on how effectively developers can consume it and even how they utilize it. API design, like website or product design, influences the user experience. API design concepts that are good fulfil initial assumptions and perform consistently and predictably. The basic API architecture has an impact on how effectively users can consume it and on the overall user experience. A single strategy is not possible in this development process. Instead, it employs a set of standards to ensure that original expectations are met and that work is carried out consistently. To create software with good functionality, application programming interface designers meticulously follow industry best practices, design patterns, API design principles, and user demands.\nEssentially the API design is a method that revolves on user-centered ideas. APIs are similar to various vehicle models in that they have varied components to meet the demands of different users. Regardless of the variations, an experienced driver will quickly learn how to operate various vehicles. API design procedures, in this case, establish a platform that any user may access. To make applications operate while integrating unique business logic around operating systems, languages, or servers, developers often have to create their own Application Programming Interfaces (APIs).\n\n\nAPI Architectures\nAPIs exchange commands and data, and this requires clear protocols and architectures -- the rules, structures and constraints that govern an API's operation. Today, there are three categories of API protocols or architectures: REST, RPC and SOAP. These may be dubbed \"formats,\" each with unique characteristics and tradeoffs and employed for different purposes.\nREST - The representational state transfer (REST) architecture is perhaps the most popular approach to building APIs. REST relies on a client/server approach that separates front and back ends of the API, and provides considerable flexibility in development and implementation. REST is \"stateless,\" which means the API stores no data or status between requests. REST supports caching, which stores responses for slow or non-time-sensitive APIs. REST APIs, usually termed \"RESTful APIs,\" also can communicate directly or operate through intermediate systems such as API gateways and load balancers.\n\n\nWhat is RAML?\nRESTful API Modeling Language is a YAML-based language for describing RESTful APIs. It provides all the information necessary to describe RESTful or practically RESTful APIs. Although designed with RESTful APIs in mind, RAML is capable of describing APIs that do not obey all constraints of REST.\n\n\nAPI Design & Development with RAML - Building complex APIs - Course Curriculum\n\n\nIntroduction to API\nData Formats and Authentication\nDesigning API\nAPI Design Center\nFeatures of API\nAPI Best Practices\nAPI Security Schemes\nAPI Design Principles\nIntroduction to RAML (RESTful API Modeling Language)\nImportance of RAML in Design\nRAML API Practical Example\nRAML 100 Complete API Design\nRAML 200 Complete API Design\nRAML API Design Examples\nBuild an API for Banking Application\nBuild an API for Music Application\nBuild an API for Mobile Orders Application\n\n\nThis API Design & Development with RAML course is for software, data, and platform engineers who work with data in their projects. This course is very helpful for data professionals who need to know about data interchange techniques and how to work with business apps. This API course explains how to create software APIs and how to use optimal design principles, how to construct REST APIs using OpenAPI and RAML, how to use YAML to design REST APIs, outline the tools available for managing APIs, how to use the Swagger Editor and construct API specifications, and more. This API course will help you become an API Designer & Developer from scratch.",
      "target_audience": [
        "API Designers & Developers",
        "Lead API & Microservices Developers",
        "Anyone interested in API design & development",
        "Newbies & Beginners aiming for a career in API design",
        "Solution Architects - API Integration",
        "Cloud API Developers - AWS, Azure, GCP",
        "Cloud Platform Architects",
        "Data Architects",
        "Application Developers",
        "Data Engineers - ETL/ELT pipelines"
      ]
    },
    {
      "title": "Laravel Foundations: Basics to Every App",
      "url": "https://www.udemy.com/course/laravel-foundations-basics-to-every-app/",
      "bio": "Build basic applications with Laravel",
      "objectives": [
        "Set up a basic application to build a Q+A site",
        "How to submit forms, process data, and save it into your database",
        "Show processed data to the user, create related posts, an authentication system, and much more",
        "Get started with building almost any type of app you can imagine",
        "Work with the PHP API using Gulp"
      ],
      "course_content": {},
      "requirements": [
        "Viewers should have an understanding of HTML/CSS (or a preprocessor) as well as basic PHP syntax and fundamental concepts (loops, arrays, classes, functions, public/private properties, and so on). A basic understanding of core web development concepts is assumed."
      ],
      "description": "Laravel is a prominent member of a new generation of web frameworks. It is one of the most popular PHP frameworks and is also free and an open source. Laravel 5 is a substantial upgrade with a lot of new toys, at the same time retaining the features that made Laravel wildly successful. It comes with plenty of architectural as well as design-based changes. Laravel Foundations is a blend of several recipes that will give you all the essential tips you need to build an application. This video course starts by walking you through building an online forum from scratch using Laravel. A forum teaches important concepts such as saving, reading, and updating database entries; working with relationships; adding authentication; and working with views and reusable components. You will also learn how to use routes, connect a database, add comments, and build an authentication system for your forum. By the end of this course you will have the knowledge necessary to put together basic Laravel applications and a foundation you can build on. You will be prepared for later volumes in this series that explore more advanced topics to enhance your application further.\nAbout the Author\nJ. Alexander Curtis has been building web applications for two decades, and has seen the internet and web technologies evolve. Alex runs the very popular DevMarketer site and YouTube channel, teaching people how to build and grow their next great idea. He takes passion in building memorable web experiences that delight and convert users. He has consulted for well known companies like Expedia, eBay, and Comcast. You can find him on twitter as @_jacurtis, where he loves chatting with his students.",
      "target_audience": [
        "This video course is for beginners to Laravel who want to learn how Laravel works and how to build their first applications with Laravel. Despite being aimed at beginners, this video shoes how you can build an impressive application very quickly thanks to how easy-to-use Laravel is."
      ]
    },
    {
      "title": "Ruby on Rails: Learn to Build an advanced SaaS App",
      "url": "https://www.udemy.com/course/ruby-on-rails-6/",
      "bio": "Code-Along and learn to create Multitenant B2B SaaS applications like Salesforce, Slack, or Trello using Ruby on Rails",
      "objectives": [
        "Build a professional Rails application.",
        "Web Development",
        "Create Software as a Service (SaaS) software",
        "Database design and architecture",
        "Software Development",
        "Build a professional-grade Rails project",
        "Learn Rails best practices",
        "bootstrap with Rails 6",
        "gem devise",
        "gem acts_as_tenant",
        "gem devise_invitable",
        "gem rolify",
        "gem pundit"
      ],
      "course_content": {},
      "requirements": [
        "Modern browser and internet connection",
        "A basic understanding of programming would be helpful, Basic knowledge of Ruby and Rails will be a plus",
        "No paid software required"
      ],
      "description": "In this course you will master Web Development with Ruby on Rails.\nI invite you to code-along and develop a complex, real-world professional application from start to finish.\nWe will be creating a Multitenant B2B SaaS applications like Salesforce, Slack, or Trello using Ruby on Rails.\nYou will learn:\nprinciples of developing complex software\narchitecting databases and workflows\nhow multitenancy works\nhow to build billing processes\ninstall bootstrap in Rails 6\ninstall fontawesome in Rails 6\ngem devise\ngem devise_invitable\ngem acts_as_tenant\nConcerns and Helpers\nActionMailer for sending custom emails\nActiveStorage for uploading files and images\nAmazon S3 for storing files and images in production\nAdvanced Routing and URLs\nCreating custom Controllers\nRole-based Authorization\ni18n (internationalization)\nThis is my second Ruby on Rails course.\nI am proud to say that 90% of the course contents is unique and original (not duplicated from my or other courses).\n\nRuby on Rails is full-stack Web Development framework.\nWhat is \"Web Development\"? Creating complex applications that are accessed via a browser (Firefox, Chrome, Edge).\nWhy \"Web Development\"? Because apps that are opened through a web browsers are available on any platfrom (Android, Windows, Linux, iOs), so you don't really have to create a separate app for Android, iOs. It just works in any browser!\nWhat is \"Full stack\"? You create the backend (database, business logic) and frontend (html views, javascript) harmoniously in one single environment.\nWhat is \"Ruby\"? A high-level programming language, comparable to Python.\nWhat is \"Rails\"? It's a framework for applying Ruby language for Web Development.\nWhy \"Ruby on Rails\" but not Java/Kotlin, NET Core, Go, PHP, Python Django?\nOf course, all languages and frameworks have their pros and cons.\nFor example Python has Django framework for Web Development. Django is ~10% of Python applications.\nRails is 90% of Ruby applications. It is absolutely focused on Web Development.\nI choose RoR because:\nVery fast development cycle from idea to production MVP.\nFull stack. You can configure backend, frontend, database, server all in one place. Fell like a solo independent hero!\nMature, reliable software stack\nHelpful community\nWhen to use \"Ruby on Rails\"? Create the next AirBNB, Groupon, Amazon, Salesforce, Udemy, Skillshare, Github, Trello, Facebook\nWhen not to use \"Ruby on Rails\"? Create the next Witcher, GTA, Angry Birds, TikTok, Oculus, iPhone\nWhat is Multitenancy? Imagine Netflix Family accounts with billing on family level (not personal). Imagine a slack team where the organization is billed (not each individual member). Each Slack environment has separate members and separate confidential data, that is not shared across teams. Multitenancy separates data based on teams or organizations.\nWhat is \"SaaS\"? SaaS (Software as a Service) is the modern approach to selling software online via subscription or one-time payments for access. Think Netflix, Spotify (monthly payments).\n\n\nIf you value your time and DON'T want to spend hours learning how a gem works, consider getting this course.\nBy the end of the course you will feel capable of building any Web application Ruby on Rails web application.\nYou may learn the skills needed to find a job, or build the application of your dreams.\nAs well, you will build you own, complete application for creating and selling courses that you will be able to monetize.\nAlso, if you want to learn more great ruby on rails features, consider subscribing to this course.\n\n\nP.S.1. In this course we do not cover the basic theory of what Ruby and Rails are. There are other, more basic courses for that. So, having some previous Ruby on Rails experience would be helpful.\nP.S.2. I'm a Ruby on Rails Engineer and I built this course out of passion. I'm not a vice actor, so don't expect studio-level audio quality.\nLet's start learning!",
      "target_audience": [
        "If you want to create your own SaaS Web Application",
        "If you want to create a B2B app like Trello, Slack or Hubspot - this can be your boilerplate",
        "If you want to start your own startup by building your own websites and web apps.",
        "If you want to learn how to build professional grade Ruby on Rails applications",
        "If you want to be a web app developer: This course will introduce you to many in-depth mechanics of Ruby on Rails",
        "If you are already acquainted with Ruby on Rails and wants to deepen your knowledge"
      ]
    },
    {
      "title": "Projects in MERN : Build Real World Apps Using MERN",
      "url": "https://www.udemy.com/course/projects-in-mern-build-real-world-apps-using-mern/",
      "bio": "Learn Mongo, React, Express and Node building Apps",
      "objectives": [
        "Learn to use MERN technologies to build real world projects",
        "Build a portfolio of real world projects",
        "Master underlying technologies such as React, Express and Mongo"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "User Management App": [
          "Introduction",
          "Repository",
          "Packagejson",
          "Toolset",
          "Passwords",
          "jwt",
          "Internals Part 1",
          "Internals Part 2",
          "Routes",
          "React Services",
          "Components Part 1",
          "Components Part 2",
          "Conclusion"
        ],
        "Social Networking App": [
          "Introduction",
          "Express Services Part 1",
          "Express Services Part 2",
          "Express Routes",
          "React Services",
          "React Components Part 1",
          "React Components Part 2",
          "Conclusion",
          "Graph Databases and Social Networks"
        ],
        "Blog App": [
          "Introduction",
          "Express Services",
          "Express Routes-r1",
          "React Services",
          "React Components 1",
          "React Components 2",
          "Conclusion"
        ],
        "Webscraping App": [
          "Introduction",
          "Project Repository",
          "Express Services",
          "Express Services Routes",
          "Puppeteer",
          "React Components",
          "Conclusion"
        ],
        "Search Suggestion App": [
          "Introduction",
          "Express Services",
          "React Services Components Part 1",
          "React Services Components Part 2",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knolwedge of JavaScript is essential to complete this course",
        "Working knolwedge of Express React and Mongo DB is also important to understand the concepts"
      ],
      "description": "As time passed, the role of developers has also changed. Initially, when developers used to prefer being an expert of any one segment i.e. backend or frontend, now developers are constantly going towards being a full stack web developer. Having the knowledge of all the aspects of web development i.e. the frontend, the backend and everything in between gives a great command over web development. And this is the reason, today the demand for a full-stack web developer has significantly increased. Keeping in this mind, we bring you this online tutorial, where you can sharpen your MERN skills by building various real-time projects.\nWhy this course is important?\nWe have crafted this unique course which will teach you how to be a full stack developer while building different types of apps.  This course helps you to polish your MERN skills by teaching you the correct way to build and implement the various real-time application. Initially, it teaches you about user management app, then you will learn the different aspects which are essential for building and implementing a social networking application. Later, you will learn about blog application, webscraping application along with search suggestion app.\nThis course includes application and implementation of-\nWeb Application Login with User management App\nBlog App\nSocial Networking App\nWeb Scraping App\nSearch Suggestion App\nStill in Dilemma?\nStill thinking whether to take this course or not! Then, probably you should ask yourself that do you want to become a complete Full Stack Web Developer? Do you want to perfect your MERN skill by building projects? Does the idea of working on the frontend, the backend and everything in between fascinate you? Well, if yes, then it’s time for you to take this course to become an MERN expert!",
      "target_audience": [
        "Anyone who wants to build real world apps with MERN will find this course very useful"
      ]
    },
    {
      "title": "Creating a Virtual Reality Web App with Blender and Three.js",
      "url": "https://www.udemy.com/course/creating-a-virtual-reality-web-app-with-blender-and-threejs/",
      "bio": "Step by Step Virtual Reality Web App with Blender and Three.js",
      "objectives": [
        "Create a Virtual Reality Web App to use with your smartphone",
        "Create a 3D Scenario with Blender",
        "Create a webpack project with VSCode",
        "Load a 3D Model in a VR Environment",
        "Add Physics to concave models",
        "Read joystick inputs with javascript",
        "Display 3D Text Panels in a VR Environment",
        "Work with Threejs, enable3D and aframe"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "House": [
          "Blender instructions. pt1",
          "Creating the base",
          "Creating the entrances and windows. Pt 1",
          "Creating the entrances and windows. Pt 2",
          "Creating the roof and floor. Pt 1",
          "Creating the roof and floor. Pt 2",
          "Creating the roof and floor. Pt 3",
          "Working with the walls",
          "Blender instructions. pt2",
          "Working with textures. Pt 1",
          "Working with textures. Pt 2",
          "Working with textures. Pt 3",
          "Working with textures. Pt 4",
          "Fixing the figure"
        ],
        "Scene": [
          "Creating the scene",
          "Append the house",
          "Exporting"
        ],
        "VSCode configuration": [
          "Javascript instructions",
          "Configuring webpack",
          "Importing libraries"
        ],
        "Writing the code": [
          "index.html and aframe elements",
          "Base variables",
          "scene_update component",
          "ammo.js files",
          "MainScene function",
          "loadGLBWithData function",
          "scene_custom_update function",
          "movement function",
          "desktop_rotation function",
          "panoramic image instructions",
          "texture"
        ],
        "Building": [
          "certificate",
          "webpack.config.js",
          "npm run build",
          "local server"
        ],
        "Testing the code": [
          "Result"
        ],
        "Interactive object": [
          "Creating the base",
          "Working with textures",
          "Custom property",
          "Fixing the figure"
        ],
        "Reworking the scene": [
          "Append the frame",
          "Exporting"
        ],
        "Coding the interaction": [
          "Proxy",
          "Raycaster",
          "Text panel",
          "action_button",
          "Remove debugger"
        ]
      },
      "requirements": [
        "Basic understanding of Blender",
        "Basic understanding of Javascript",
        "Basic understanding of Visual Studio Code"
      ],
      "description": "Hello and welcome.\nIf you are a web developer or designer interested in creating a web page that has the ability to use your smartphone for a virtual reality environment, this course is for you.\nThis course is focused on using Blender, Javascript and Three.js to create an virtual reality application.\nWe are also going to use javascript libraries like aframe to easily configure the vr environment and enable 3d to configure the physics of the scene.\nWe will create step by step the 3D models, the configuration of our development environment, the code to create the application and the deployment in a local server.\nIn this course you will learn:\nCreate a Virtual Reality Web App to use with your smartphone\nCreate a 3D Scenario with Blender\nCreate a webpack project with VSCode\nLoad a 3D Model in a VR Environment\nAdd Physics to concave models\nRead joystick inputs with javascript\nDisplay 3D Text Panels in a VR Environment\nWork with Threejs, enable3D and aframe\nYou may find this course attractive because it can serve as the basis for creating a prototype virtual reality app that you can customize.\nIn addition, you will have access to the content created during the course.\nI hope you find the content useful and that you can apply it to your personal projects.\nHave fun and happy learning.",
      "target_audience": [
        "Web developers that want to create a VR App",
        "Designers that want to implement their 3d designs in a web page"
      ]
    },
    {
      "title": "Get best performance from database used by Hibernate app",
      "url": "https://www.udemy.com/course/database-performance-for-hibernate-developers/",
      "bio": "Identifying and fixing performance bottlenecks in database and Hibernate. SQL tuning, indexes, eager fetching and more.",
      "objectives": [
        "Know how to approach optimization",
        "Use Query Execution Plan",
        "Know which data types and why are preferred in a database for better performance",
        "Avoid unnecessary type conversions in SQL queries",
        "Efficiently use dictionary tables",
        "Configure Hibernate to see executed database queries",
        "Avoid reading data which is not needed",
        "Eliminate n+1 problem in Hibernate",
        "Understand a trade off when implementing flexible solutions",
        "Properly implement data paging in Hibernate",
        "Efficiently count rows and aggregating data",
        "Update and delete multiple rows with a single request",
        "Learn index structure and its impact on query performance",
        "Choose the right index for a query",
        "Use of multi column indexes",
        "Learn the process of executing queries by a database",
        "Take advantage of query parameters binding in Hibernate",
        "Avoid long transactions",
        "Restructure queries for better performance",
        "Use indexes to support sorting rows and joining",
        "Know when it is better to avoid Hibernate entities and how to use alternatives"
      ],
      "course_content": {
        "Performance optimization intro": [
          "Premature optimization",
          "Order of actions",
          "Who is responsible",
          "Course plan"
        ],
        "Database design": [
          "Introduction",
          "Query execution plan",
          "Numeric columns for joins",
          "Dictionary tables",
          "Too flexible design",
          "Query optimization",
          "Designing a database",
          "Database design"
        ],
        "Unnecessary queries": [
          "Introduction",
          "Show queries in Hibernate",
          "Early fetch",
          "N+1 query problem",
          "Paging",
          "Counting",
          "Deleting and updating rows",
          "Unnecessary queries"
        ],
        "Indexes": [
          "What is an index",
          "Queries improved",
          "Multi-column indexes",
          "Foreign keys",
          "Index maintenance",
          "Indexes"
        ],
        "Basic Hibernate tuning": [
          "Introduction",
          "Query execution process",
          "Parameters binding",
          "Long transaction"
        ],
        "Basic query tuning": [
          "Introduction",
          "Expressions in WHERE clause",
          "Implicit conversion",
          "Order by clause",
          "Table joins"
        ],
        "Overused entities": [
          "Introduction",
          "DTOs for read only objects",
          "Aggregates"
        ],
        "Summary": [
          "What you have learned",
          "Not covered topics"
        ]
      },
      "requirements": [
        "At least basic SQL knowledge.",
        "Java programming experience is necessary. You should know how to use Hibernate at least on the basic level.",
        "JDK 15 installed. Some IDE to write, compile and run Java web application. During the course I use IntelliJ IDEA but others should work as well."
      ],
      "description": "Have you ever wondered why database operations in your application are slow? Is it because of the database or Hibernate or both? Is there anything that can be done to improve that? What are those mysterious database indexes? Does using Hibernate leave me no field for performance optimization?\n\n\nDuring this course I will teach you performance optimization techniques that will give you a huge advantage in the Java programmers world.\nNo, you will not have to give up on Hibernate. It is a great tool. I like it too! Most performance issues with it are caused by inefficient usage, not by Hibernate itself. You can still let it do the dirty job for you and have a highly performant application at the same time.\n\n\nJava developers too often avoid database topics. But some database knowledge can make your life incredibly easier. In this course, I focus on the aspects that will let you make a significant impact on a database performance with the lowest effort.\n\n\nLet me show you how to take the best from Hibernate using some database knowledge to achieve high speed of database operations.\n\n\nAfter this course, you will know how to combine database tricks with Hibernate best practices to build lightning speed software.",
      "target_audience": [
        "Java developers using Hibernate that want to understand and improve efficiency of the database operations.",
        "Software programmers that would like to understand database queries performance and tricks to improve them.",
        "Developers that would like to use Hibernate in a more efficient manner."
      ]
    },
    {
      "title": "2022 HTML+CSS Mastery",
      "url": "https://www.udemy.com/course/html-css-mastery/",
      "bio": "This course is for complete beginner who wants to learn coding and wants to make their career as a frontend devloper.",
      "objectives": [
        "Become a confident and contemporary HTML and CSS Web developer without any prior experience!",
        "developer abilities like utilising tools professionally, reading documentation, and debugging",
        "Flexbox and CSS Grid, two features of modern CSS (prior CSS3), are used for layout.",
        "a framework for web design that includes simple rules and recommendations for creating websites that stand out",
        "How to employ standard elements and layout patterns for expert website building",
        "How to organise a professional website's layout, design, construction, testing, and optimization",
        "How to locate and utilise free design resources like pictures, fonts, and icons",
        "How to employ standard elements and layout patterns for expert website building"
      ],
      "course_content": {},
      "requirements": [
        "No prior coding or design knowledge required",
        "Windows, macOS, or Linux computers all function.",
        "We will utilise the free code editor available worldwide, so you don't need to purchase any software."
      ],
      "description": "*** The #1 HTML and CSS course on Udemy ! ***\nWell, I'm here to teach you HTML, CSS, and web design by building the stunning website you just saw, step-by-step.\nSo, after finishing this course, you will know precisely how to build a beautiful, professional, and ready-to-launch website just like our website by following a 7-step process. And it will even look great on any computer, tablet, or smartphone.\nBut what if you want to build a completely different website? Well, no problem! I designed the course curriculum with precisely this goal: to enable you to design and build any website that you can think of, not just copy the course project.\nSo, in order to become a confident and independent developer, capable of building your websites in the future, you will learn:\nThe fundamentals of modern and semantic HTML, CSS, and building layouts in a small separate project, which will prepare you for the main course project. This includes modern flex box and CSS Grid!\nHow to design beautiful websites by learning a web design framework I created just for this course. It consists of easy-to-use guidelines for design aspects like typography, colors, images, spacing, and more (this is like a small standalone course!).\nHow to use well-established website components and layout patterns in order to come up with professional-looking designs\nHow to make any website work on any mobile device, no matter the design and layout (responsive design)\nHow to use the 7 steps of building a professional website in practice: planning, sketching, designing, building, testing, optimizing, and launching\nHow to find and use free design assets such as images, fonts, and icons\nImportant developer skills such as reading documentation, fixing code errors on your own, and using professional web development tools\nDoes this sound like fun? Then join me and 200,000+ other developers and start building websites today!\nOr are you not sold yet and need to know more? No problem, just keep reading...\n[01] Why should you learn HTML and CSS in the first place?\nBuilding websites allows you to do fun and creative work, from anywhere in the world, and it even pays well. Web development is one of the most future-proof and highest-paying industries in the world. And HTML and CSS is the entry point to this world!\nBut you already know all this, that's why you want to learn HTML and CSS too. Well, you came to the right place!\nThis is the best and most complete course for starting your web development journey that you will find on Start web development It's an all-in-one package that takes you from knowing nothing about HTML and CSS, to building beautiful websites using tools and technologies that professional web developers use every single day.\n[02] Why is this course so unique and popular?\nReason #1: The course is completely project-based\nSimple demos are boring, and therefore you're gonna learn everything by building actual projects! In the final project, together we hand-code a beautiful and responsive landing page for a fictional company that I made up just for the course.\nReason #2: You will not just learn how to code\nCoding is great, but it's not everything! That's why we will go through the entire 7-step process of building and launching our website project.\nSo the huge project will teach you real-world skills to build real-world HTML and CSS websites: how to plan projects and page layouts, how to implement designs using HTML and CSS techniques, how to write clean and organized code, how to optimize websites for good speed performance, and many more.\nOn top of that, this course has a huge focus on beautiful design. In fact, this is the only course on the market that focuses on both coding and designing, together.\nReason #3: I'm the right teacher for you\nWith the right guidance and a well-structured curriculum, building websites can be quite easy and fun to learn. With a bunch of random tutorials and YouTube videos? Not so much. And that's where I come in.\nI'm an experienced web developer and designer, and one of Start web devlopment's top instructors. I have been teaching this bestselling course since 2015 to over 200,000 developers, always listening to feedback and understanding exactly how students actually learn.\nUsing that feedback, I recently rebuilt this course from scratch and designed the ideal course curriculum for every type of student. It's a unique blend of projects, deep explanations, theory lectures, and challenges. I'm sure you're gonna love it!\n[03] Why is this course so long?\nReason #1: I take time to explain every single concept that I teach, so that you actually learn, and not just copy code from the screen (this is a course, not a tutorial)\nReason #2: I go into topics that other HTML and CSS courses shy away from: professional web design, component and layout patterns, some CSS theory, website planning in theory and practice, and developer skills. I believe you need all of this to be successful!\nReason #3: There is a lot of repetition, so that you actually assimilate and practice what you learn. Practice is the single most important ingredient to learning, and therefore I provide plenty of opportunities for you to sharpen your skills\n[04] Here is what's also included in the package:\nUp-to-date HD-quality videos, that are easy to search and reference (great for Start web development\n( Business students)\nProfessional English captions (not the auto-generated ones)\nDownloadable design assets + starter code and final code for each section\nDownloadable slides for 20+ theory videos (not boring, I promise!)\nAccess to countless free design and development resources that I curated over many years\nFree support in the course Q&A\n10+ coding challenges to practice your new skills (solutions included)\n[05] This course is for you if...\n... you are a complete beginner with no idea of how to build a website.\n... you already know a bit of HTML and CSS from some tutorials or videos, but struggle to put together a good-looking, complete website.\n... you are a designer and want to expand your skills into HTML and CSS because all your designer friends are learning how to code (they are brilliant!).\nIf you are an HTML and CSS master, and build the most beautiful websites in the world, then DON'T take the course. Everyone else: you should take the course today.\nSo, does all of this sound great? Then join 200,000+ other developers and me and start your web development journey today!",
      "target_audience": [
        "Those who are total newbies who want to learn how to create an expert, lovely, and responsive website",
        "Students who have some familiarity with HTML and CSS but find it difficult to put together a fantastic website",
        "HTML5 and CSS3 designers who want to broaden their skill set"
      ]
    },
    {
      "title": "Mastering Introductory HTML5 and CSS3 Training Tutorial",
      "url": "https://www.udemy.com/course/mastering-introductory-html5-and-css3-training-tutorial/",
      "bio": "Learn the basics of HTML5 and CSS3 with this video tutorial. Includes video lessons and printable classroom manual.",
      "objectives": [
        "Video Lessons",
        "Printable Classroom Instruction Manuals",
        "Learn HTML Language",
        "How to Create a Website",
        "Text, Links, Images, CSS, and much more!"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Getting Acquainted with HTML": [
          "Introduction to the Internet",
          "Introduction to HTML Terminology",
          "Options for writing HTML",
          "Unicode Transformation Format (UTF)",
          "HTML5 Resources"
        ],
        "New for HTML5": [
          "What’s Different in HTML5?",
          "<!DOCTYPE> in HTML5"
        ],
        "Designing a Webpage": [
          "Design Considerations and Planning",
          "Basic Tags and Document Structure",
          "HTML tags <HTML>…</HTML>",
          "Head Tags <HEAD>…</HEAD>",
          "Title Tags <TITLE>…</TITLE>",
          "Body Tags <BODY>…</BODY>",
          "Metadata",
          "Saving an HTML Page"
        ],
        "Page Formatting": [
          "Adding a New Paragraph",
          "Adding a Line Break",
          "Inserting Blank Space",
          "Preformatted Text",
          "Changing a Page’s Background Color",
          "Div Element"
        ],
        "Text Items and Objects": [
          "Headings",
          "Comments",
          "Block Quotes",
          "Horizontal Lines",
          "Special Characters"
        ],
        "Creating Lists": [
          "Numbered (Ordered) Lists",
          "Bulleted (Unordered) Lists",
          "Nested Lists",
          "Definition Lists"
        ],
        "Links": [
          "What are Links?",
          "Text Links",
          "Image Links",
          "Opening a Page in a New Window or Tab",
          "Setting all Links on a Page to Open in a New Window or Tab",
          "Linking to an Area on the Same Page (Bookmarks)",
          "Linking to an E-mal Address",
          "Linking to Other Types of Files"
        ],
        "Images": [
          "Introduction to Images for Webpages",
          "Adding Images to Webpages",
          "Re-Sizing an Image",
          "Alternative (ALT) Text",
          "Image Labels"
        ],
        "Basic Tables": [
          "Inserting a Table",
          "Table Borders",
          "Table Headers"
        ]
      },
      "requirements": [
        "There are no course requirements, however it would be helpful for students to have a basic knowledge of HTML and CSS. Also, a word processing program can be helpful in practicing the techniques in this tutorial. Whatever level you are at, this course will take you through the basics into more advanced material in HTML5 and CSS3!"
      ],
      "description": "Learn HTML5 and CSS3 with this comprehensive course from TeachUcomp, Inc. Mastering HTML5 and CSS3 Made Easy features 125 video lessons with 3.5 hours of introductory through advanced instruction. Watch, listen and learn as your expert instructor guides you through each lesson step-by-step. During this media-rich learning experience, you will see each function performed just as if your instructor were there with you. Reinforce your learning with the text of our printable classroom instruction manual, additional images and practice exercises. You will learn the HTML language from scratch, while exploring all of the techniques to add the various elements of a website – text, links, images, CSS and much more.\nOur courses were developed from our original classroom trainings. This helped to develop the curriculum of course topics we present that address the student’s real-world concerns and usage.\nOur course design helps maximize the learning retention of our self-study courses. Each course contains different learning modalities that help reinforce the topics. We initially present each topic’s information in a course manual in a written, conversational style to provide a conceptual overview. These overviews are followed by instructions, showing the specific actions required to perform the tasks related to the topic. These topic actions are then combined with each other into exercises at the end of each chapter to show their interconnected relationships.\nEach course topic is also enhanced with an audio-visual lesson in the form of a video. The video lesson shows how to perform the topic’s actions as the instructor simultaneously narrates the topic’s overview.\nIf you are completely new to HTML or CSS, or just need a refresher, this course will empower you with the knowledge and skills necessary to be a proficient user of HTML. We have incorporated years of classroom training experience and teaching techniques to develop an easy-to-use course that you can customize to meet your personal learning needs. Simply launch the easy-to-use interface, click to start a video lesson or open the manual and you’re on your way to mastering HTML.",
      "target_audience": [
        "Anyone wanting to learn more about CSS and HTML",
        "Anyone wanting to learn how to build a website",
        "Students upgrading from HTML4 into HTML5"
      ]
    },
    {
      "title": "Microservices Design Patterns & Architecture [2025 Edition]",
      "url": "https://www.udemy.com/course/microservices-architecture-for-complete-beginners-2025/",
      "bio": "Guide you through the fundamental concepts, principles, and best practices of microservices architecture [ 2025 Edition]",
      "objectives": [
        "Introduction to Microservices",
        "Monolithic vs. microservices architecture",
        "Service decomposition strategies",
        "Circuit breakers and fault tolerance",
        "Strangler pattern",
        "Sidecar pattern",
        "Bulkhead pattern",
        "Backend for Frontend (BFF) pattern",
        "Inter-Service Communication",
        "Data Management in Microservices",
        "API gateways",
        "Containerization and Orchestration",
        "Monitoring and Logging",
        "Testing Microservices",
        "Deployment and CI/CD",
        "Security in Microservices",
        "CQRS (Command Query Responsibility Segregation)",
        "Domain-Driven Design (DDD) basics",
        "Scaling and Performance",
        "Microservices Patterns and Best Practices",
        "Real-world Case Studies and Projects",
        "Database per service pattern",
        "Blue-green deployments",
        "Container orchestration with Kubernetes",
        "Canary releases",
        "Feature toggles",
        "Asynchronous communication",
        "Docker"
      ],
      "course_content": {
        "Course Overview": [
          "Introduction (About Instructor)",
          "Who Should Take This Course?",
          "Common Struggles in Self-Learning",
          "Course Goals"
        ],
        "Part 1: Introduction to Microservices": [
          "1.1 Monolithic Architecture",
          "1.2 What are microservices?",
          "1.3 Monolithic vs. microservices architecture",
          "1.4 Benefits and challenges of microservices",
          "1.5 Key principles of microservices design"
        ],
        "Part 2: Microservices Architecture": [
          "2.1 Service decomposition strategies",
          "2.2 Domain-Driven Design (DDD) basics",
          "2.3 API design and management",
          "2.4 Service discovery and registration"
        ],
        "Part 3: Design Principles for Microservices": [
          "3.1 Synchronous communication",
          "3.2 Asynchronous communication",
          "3.3 API gateways",
          "3.4 Circuit breakers and fault tolerance"
        ],
        "Part 4: Data Management in Microservices": [
          "4.1 Database per service pattern",
          "4.2 Distributed transactions and eventual consistency",
          "4.3 CQRS (Command Query Responsibility Segregation)",
          "4.4 Event sourcing"
        ],
        "Part 5: Containerization and Orchestration": [
          "5.1 Docker Basic",
          "5.2 Container orchestration with Kubernetes",
          "5.3 Service mesh"
        ],
        "Part 6: Monitoring and Logging": [
          "6.1 Centralized logging",
          "6.2 Distributed tracing",
          "6.3 Health checks and monitoring",
          "6.4 Metrics and alerting"
        ],
        "Part 7: Testing Microservices": [
          "7.1 Unit testing",
          "7.2 Integration testing",
          "7.3 Contract testing",
          "7.4 End-to-end testing"
        ],
        "Part 8: Deployment and CI/CD": [
          "8.1 Continuous Integration and Continuous Deployment",
          "8.2 Blue-green deployments",
          "8.3 Canary releases",
          "8.4 Feature toggles"
        ],
        "Part 9: Security in Microservices": [
          "9.1 Authentication and authorization",
          "9.2 API security",
          "9.3 Secrets management",
          "9.4 Network security"
        ]
      },
      "requirements": [
        "Basic understanding of software development concepts",
        "Familiarity with at least one programming language (e.g., Java, .Net, Python, JavaScript)",
        "No prior experience with microservices is required"
      ],
      "description": "Dive into the world of microservices architecture with this comprehensive course designed for beginners. As traditional monolithic applications struggle to meet the demands of modern, scalable software systems, microservices have emerged as a powerful solution. This course will guide you through the fundamental concepts, principles, and best practices of microservices architecture, equipping you with the knowledge and skills to design, implement, and deploy robust, scalable applications.\nStarting with the basics, you'll learn what microservices are and how they differ from monolithic architectures. We'll explore the key advantages of microservices, including improved scalability, flexibility, and ease of maintenance. You'll understand the challenges that come with distributed systems and learn strategies to overcome them.\nThroughout the course, you'll gain hands-on experience by building a sample application, transitioning it from a monolith to a microservices-based system. You'll learn how to identify and define service boundaries, implement inter-service communication, and manage data in a distributed environment. We'll cover essential patterns and practices, such as API gateways, service discovery, and circuit breakers.\nSecurity is a critical aspect of microservices, and we'll dedicate significant time to understanding authentication, authorization, and secure communication between services. You'll also learn about containerization and orchestration using Docker and Kubernetes, enabling you to deploy and scale your microservices effectively.\nThe course will introduce you to monitoring, logging, and tracing in a distributed system, ensuring you can maintain and troubleshoot your microservices architecture. We'll also discuss strategies for testing microservices and implementing continuous integration and deployment (CI/CD) pipelines.\nBy the end of this course, you'll have a solid foundation in microservices architecture and be ready to apply these concepts to your own projects or contribute to existing microservices-based systems in your organization.",
      "target_audience": [
        "Software developers looking to transition from monolithic to microservices architecture",
        "IT professionals interested in modern application design and deployment",
        "DevOps engineers wanting to understand microservices principles",
        "System architects exploring distributed system design",
        "Tech enthusiasts eager to learn about modern application development practices"
      ]
    },
    {
      "title": "HTML, CSS and Bootstrap Practice Exams",
      "url": "https://www.udemy.com/course/html-css-and-bootstrap-practice-exams/",
      "bio": "Take HTML, CSS, and Bootstrap Practice Exams for Certification and interviews.",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "HTML, CSS, and Bootstrap Practice Exams:\nTake HTML (Hypertext Markup Language) and CSS (Cascading Style sheets) and Bootstrap Practice Exams.\nGet ready to be HTML, CSS, and Bootstrap Certified and Answer Interview questions.\nCourse Prerequisites:\nStudents should have a stable internet connection to answer practice exams online.\nStudents should have prior knowledge of HTML.\nStudents should be curious about HTML topics.\nStudents should be well prepared to answer exam questions that cover various HTML topics\nStudents should have prior knowledge of CSS and Bootstrap.\nStudents should be curious about CSS and Bootstrap topics.\nStudents should be well prepared to answer exam questions that cover various CSS and Bootstrap topics\nIn this Course:\nStudents will answer many questions that cover several HTML topics.\nStudents will test their HTML technical skills and take HTML practice exams.\nStudents will answer many questions that cover several CSS and Bootstrap topics.\nStudents will test their CSS and Bootstrap technical skills and take CSS and Bootstrap practice exams.\nStudents will ensure their knowledge of HTML.\nStudents will ensure their knowledge of CSS and Bootstrap.\nStudents will be ready to be HTML, CSS, and Bootstrap Certified\nStudents will be able to answer Interview questions\nAll Practice Exams' Questions are Multiple Choice Questions\nEach Practice Exam can take about forty (40) minutes to answer all multiple-choice questions.\nI will be available to answer students' questions so send me your questions in a message.\nStudy hard, do not cheat, be well prepared, and Good Luck to all students!",
      "target_audience": [
        "Beginner Front-end Web developers curious about HTML, CSS, and Bootstrap",
        "University graduates who are looking for a front-end web developer job"
      ]
    },
    {
      "title": "Line Bar Chart JS, Create yours from scratch with Charts JS",
      "url": "https://www.udemy.com/course/line-bar-chart-js/",
      "bio": "Line Bar Chart JS: Discover how you can create you own Line Bar Chart with Chart JS from scratch! (Charts JS, ChartJS)",
      "objectives": [
        "Create a line bar chart with Chart JS from scratch!",
        "Modify the line bar chart and apply own color styles.",
        "Understand how to use Chart JS",
        "Able to visualize data in professional line bar charts."
      ],
      "course_content": {
        "Introduction of what you will learn in the line bar chart course and setting up": [
          "Introduction to line bar chart JS and what you can expect from this course",
          "Download the files for the line bar chart with Chart JS (WATCH THIS!)"
        ],
        "Getting started with the line bar Chart, preparing the foundation of the chart.": [
          "Line Bar Chart JS: Setting up the basics!",
          "Creating the HTML document",
          "Setting up the basic HTML framework for the line bar chart in Chart JS.",
          "Connecting the HTML document with the JavaScript file in the document.",
          "Implementing the canvas tag for the line bar chart",
          "Implementing the div tag for the line bar chart",
          "Brain Buster"
        ],
        "Create the basic line bar chart in Chart JS": [
          "Introduction to creating theline bar chart, the basic parts",
          "Line Bar Chart JS: Creating the labels (Y-axis)",
          "Line Bar Chart JS: Creating the datasets (X-axis)",
          "Connecting the canvas tag with the JavaScript command in HTML",
          "Drawing the line bar chart",
          "Brain Buster"
        ],
        "Presenting the line bar chart professionally with the basic features": [
          "Introduction to presenting the line bar chart professionally",
          "Increasing the width and height of the line bar chart.",
          "Center the line bar chart",
          "Labeling the line bar chart for better structure of the datasets",
          "Adjusting the stroke color of the line bar chart",
          "Removing the fillers of the line bar chart",
          "Adjusting the data points of the line bar chart"
        ],
        "Advanced features of the line bar chart": [
          "Introduction to advanced features of the line bar chart",
          "Adding the advance feature command in the line bar chart",
          "Removing the grid lines of the line bar chart",
          "Increase the stroke line width of the line bar chart",
          "Increase the radius of the point dot of the line bar chart",
          "Adjusting the point dot border width.",
          "Increase the scale line of the line bar chart",
          "Change the scale line color of the line bar chart",
          "Brain Buster"
        ],
        "Conclusion, a quick recap and futher learning": [
          "Final Points",
          "Bonus: Further learning"
        ]
      },
      "requirements": [
        "Have the willingness to take action.",
        "Have an openmind a willing to apply what you learn.",
        "Have a very bare minimum knowledge of HTML and CSS (not essential but useful)."
      ],
      "description": "========================================================================\nLine Bar chart with Chart JS\n========================================================================\nIn this course you will learn how to create a line bar chart from scratch! The web is changing and new skills are in huge demand! One of these skills is data visualization for the web. How good are you in visualizing data into chart on the web?\nMany people prefer the easy road. Just make it in Excel and post the picture on the web. Very easy but not very beneficial nor professional. Companies are realizing that websites is one of the best places to share data and to create dashboards.\nBecause of this, companies need skillful chart makers for the web! This skill will keep on growing and is in huge demand! In this course you will learn how to create your own polar chart with one of the best JavaScript library named Chart JS.\n========================================================================\nWhat can you expect from this course?\n========================================================================\nThis course is designed for everyone who wants to create a chart for the web but have no knowledge about it. It might be useful to have some HTML and CSS knowledge but even without you can do it!\nThis course teaches you in a very easy bite size manner. You will start making a chart in minutes just by following along with every video. Each video handles one line of coding at the time. This means you really can follow this course very easy and you cannot make a mistake. You cannot fail with this if you follow the video.\nYou will also understand the background and meaning of the codes. Learning how to code is just like learning a language. You need to know first the meaning of the words. Once you understand it you will be able to create your own charts. I explain every piece of code we use! So at the end you can fluently create a line bar chart.\n========================================================================\nHow structured is this course?\n========================================================================\nThis course works with the spoon feeding method. This basically means you will handle one piece of code everytime. Starting to code can be hard if we instantly handle 10 piece of code at once. The best way to learn is with baby steps for, after walking and finally running!\nThis course makes sure you know what to do and how to do it and why you do it. Once you learned the skill you will notice that create charts is really easy.\n========================================================================\nCourse set up and section:\n========================================================================\nIn the first section you will get an overview and download the right files.\nThe second section handles the basic setup of HTML, Chart JS and JavaScript.\nIn the third section you will learn how to create the line bar chart\nIn the fourth section you will start to design the line bar chart with colors that you want.\nIn the fifth section you will learn how to unlock and use the advanced features for the line bar chart.\n========================================================================\nWhy take this course?\n========================================================================\nThe biggest question you might have is this. This course teaches you how you can create a line bar chart with Chart JS. Video is the best way to learn because you can follow along and understand it. Finally, the real value of this is that many companies are paying data visualizers a huge salary. Why??\nData visualizers have the ability to translate Big Data into a chart. This wonderful talent is a real time saver. With Big Data we experience an extreme overdose of data overload. The best medicine for this overdose is the use of charts! Charts save time and can translate data that takes hours to read into consuming it in only seconds! Charts is a super weapon! Learning this skill means real values for a company and an increase pay raise! So do not learn this skill for me but for you and get that pay raise!\nTake this course right away!",
      "target_audience": [
        "People who struggle alot with the complicated ChartJS documentation and want it easy.",
        "Data Analysts that need to visualize data in chart on the web.",
        "Students who want to improve their design skills with chart design.",
        "Webdesigners that need data visualization skills to communcate data in visuals."
      ]
    },
    {
      "title": "Laravel 11 + Vue.js 3 + Sanctum: SPA CRUD with Auth",
      "url": "https://www.udemy.com/course/authentication-with-laravel-sanctum-and-vue/",
      "bio": "Learn how to authenticate with a Laravel API from Vue using the Composition API",
      "objectives": [
        "Learn how to Develop a starter kit with Login/Registration features using Laravel Sanctum, Fortify and VueJS as the frontend stack",
        "Learn how to set up a Laravel project with Sanctum and Fortify.",
        "Learn how to Implement authentication in Vue using the Composition API.",
        "Learn how to build a Middleware Pipeline to execute multiple Middlewares before a route is loaded",
        "Learn how to configure and use Laravel Sanctum to communicate with a Single Page Application (SPA)"
      ],
      "course_content": {
        "Introduction and Project Setup": [
          "Introduction to the Course",
          "Fresh Laravel and Vue Projects",
          "Running on the same Domain"
        ],
        "Authenticating with Sanctum": [
          "Installing and Configuring Sanctum",
          "Installing Fortify",
          "A Quick Authentication test",
          "How Composables work",
          "Moving Auth to a Composable",
          "Attempting Authentication",
          "Authenticating on Reload",
          "Handling Authentication Errors",
          "Logging Out"
        ],
        "Building a System": [
          "Installing Tailwind",
          "Building the navigation",
          "Building the Login page",
          "Logging out from the navigation",
          "Registering an Account",
          "Middleware Pipelines",
          "Guest Middleware",
          "Authenticated Middleware",
          "Switching to API Resources"
        ],
        "Let's Build a mini Students Management System": [
          "Introduction to Students Management System",
          "Define the Models/Migrations/Factories/Seeders/Relationships",
          "Displaying the Students Data",
          "Let's work on the Record Creation Flow",
          "Implementing Dependent Dropdowns",
          "Display Validation Errors and Finalize Record Creation Flow",
          "Let's Work on Record Update Flow",
          "Deleting Individual Records",
          "Let's Implement Pagination",
          "Implementing Search Functionality",
          "Implementing Filter By Class Functionality",
          "Improving Filter Query"
        ]
      },
      "requirements": [
        "Beginner Level knowledge of PHP/Laravel is required",
        "Beginner Level knowledge of Vue is required"
      ],
      "description": "Unlock the power of full-stack development with our step-by-step guide to authenticating with a Laravel API from a Vue front end using the Composition API. This course is designed to take you from the basics to advanced features, ensuring you understand how to secure your applications effectively.\n\n\nVue.js is by far the most popular JavaScript framework in the Laravel community, and the newest Vue.js 3 version with the Composition API is a new way to create SPAs - Single Page Applications.\n\n\nProject's Description\n\n\nBuilding an Authentication System\nWe'll start by setting up a fresh Laravel project with Sanctum and Fortify, configure everything step-by-step, and then we'll implement the ability to authenticate from Vue with a simple auth module — thanks to the flexibility of the Composition API.\nIn the second half of the course, we’ll create a beautiful starter kit with more features, including registration and middleware to protect routes.\n\n\nSection Highlights:\nSet up a fresh Laravel project with Sanctum and Fortify.\nLearn how to properly configure Laravel Sanctum to be able to easily communicate with a front-end SPA\nLearn how to properly configure a Vue application (along with Axios) to communicate with a Laravel Backend.\nConfigure and implement authentication using the Vue Composition API.\nBuild a simple yet effective authentication module.\nCreate a simple yet beautiful starter kit with authentication features like Login, and Registration.\nLearn how to build a flexible Middleware Pipeline to execute multiple Middlewares before a route is loaded\nLearn how to implement middlewares like Authenticated and Guest Middlewares to protect pages Accordingly\nLearn how to use API Resources in Laravel to format the data accordingly\n\n\nBuilding a Simple Student's Management System\nIn this section, we'll build a simple CRUD app and dive into the fundamentals of building CRUD applications with Laravel, Sanctum, and Vue.js Stack and we will learn the following topics along the way:\n\n\nLearn about Watchers in Vue.js and Build dependent dropdowns in Vue\nLearn how to work with Factories and Seeders in Laravel, and seed the necessary data for all of our Models\nLearn how to use a Re-usable Vue Component to display validation messages.\nLearn how to Implement Server Side Pagination from scratch.\nLearn how to Implement Search Functionality in a Vue.js Powered Data-table.\nLearn how to Implement filters in a Vue.js-powered data table.\nWhether you're a beginner looking to get started with API authentication or an experienced developer wanting to refine your skills, this course has something for you. Join us and enhance your development toolkit today!",
      "target_audience": [
        "Students who want to Implement Authentication with Laravel Sanctum and Vue"
      ]
    },
    {
      "title": "Mastering Django hands-on with a project (Apr 2024)",
      "url": "https://www.udemy.com/course/mastering-django-hands-on-with-a-project/",
      "bio": "Understanding Django: Building Web Applications",
      "objectives": [
        "Introduction to Django",
        "Django URLs and Views",
        "Django Database Operations",
        "Session Management",
        "Case Study - E - Commerce Shopping Portal"
      ],
      "course_content": {
        "Introduction to Django": [
          "Lesson 1: Introduction to Django",
          "Practice 1-1: Installing and Configuring Django Dev Enviroment",
          "Practice of 1-2:Creating Django Project & APP",
          "Introduction to Django"
        ],
        "Django URLs and Views": [
          "Lesson 2: Django URLs and Views",
          "Practice 2-1: Working with forms using Django",
          "Practice 2-2: Sending email notification from forms",
          "Practice 2-3: Weather Forecast API Invoker",
          "Django URLs and Views"
        ],
        "Django Database Operations": [
          "Lesson 3: Django Database Operations",
          "Practice 3-1: Create a database and establish connection with the database",
          "Practice 3-2: Perform CRUD Operation using Django ORM",
          "Django Database Operations"
        ],
        "Session Management": [
          "Lesson 4: Session Management",
          "Practice 4-1: Creating or Handling user sessions and authentication tokens",
          "Practice 4-2: Creating a simple Multiuser web application",
          "Session Management"
        ],
        "Case Study": [
          "Lesson 5: Case Study",
          "Practice 5-1: Case Study : E - Commerce shopping portal"
        ]
      },
      "requirements": [
        "Understanding of Python",
        "Basic Understanding of HTML, CSS & Javascript",
        "Basic Understanding of Frameworks",
        "Knowledge of database"
      ],
      "description": "Building Web Applications with Python is a comprehensive online course designed to equip learners with the knowledge and skills needed to develop powerful web applications using the Django framework. Throughout the course, participants will embark on a journey from understanding the basics of Django to building a fully functional e-commerce shopping portal.\n\n\nThe course begins with an Introduction to Django, providing an overview of the framework, its features, and its role in web development. Learners will set up a development environment and explore the structure of Django projects, including settings, URLs, views, and templates.\n\n\nMoving forward, participants will delve into Django URLs and Views, learning how to manage URL patterns and implement views to handle HTTP requests and responses effectively. They will understand various methods of passing data to views and explore Django's class-based views for more advanced functionalities.\n\n\nThe course then progresses to Django Database Operations, where learners will discover Django's Object-Relational Mapping (ORM) system. They will learn how to define database models, perform CRUD operations, and manage relationships between models for efficient data manipulation.\n\n\nSession Management is another crucial topic covered in the course, focusing on how Django manages user sessions to ensure security and personalized user experiences across web applications. Participants will learn to configure session settings, store and retrieve data in session variables, and implement session security measures.\n\n\nThe course culminates in a practical Case Study - E-Commerce Shopping Portal, where participants will apply the knowledge and skills gained throughout the course to build a fully functional e-commerce platform. They will tackle tasks such as user authentication, product management, shopping cart functionality, order processing, and checkout.\n\n\nBy the end of the course, participants will have mastered Django's core concepts and be proficient in developing web applications with Python. They will have the confidence to tackle real-world projects and contribute to the rapidly growing field of web development.\n\n\nWhat are you waiting for ???\nHurry Up!!!",
      "target_audience": [
        "Web Developers",
        "Software Engineers",
        "Python Developers",
        "Beginners or Students"
      ]
    },
    {
      "title": "Learn HTML, CSS and Javascript programming in this course",
      "url": "https://www.udemy.com/course/learn-html-css-programming-and-javascript/",
      "bio": "Learn Web Design and Development as a beginner",
      "objectives": [
        "You will be able to write HTML and CSS",
        "You will be able to edit HTML and CSS Templates",
        "You will learn the concepts of programming as a beginner",
        "After learning programming concepts you will be able to go out and learn any other programmming language",
        "You will learn Javascript",
        "You will be able to write Javascript Code and improve upon your JS skills"
      ],
      "course_content": {
        "Welcome - HTML, CSS, Programming and JS": [
          "what is html",
          "Introduction to programming Intro",
          "Introduction to programming course",
          "who should learn js"
        ],
        "HTML - Intros and basics": [
          "Text editors",
          "HTML code to dissect",
          "Get a Browsers",
          "HTML extensions",
          "Learn the HTML declaration",
          "structure of any HTML document"
        ],
        "HTML Paragraphs, Headings and Divs": [
          "P tag and H tags",
          "Introducing divs",
          "divs continua",
          "Divs continua II"
        ],
        "HTML Images and Links": [
          "Introduction Images in HTML",
          "How to display images in html",
          "displaying images in a folder",
          "follow up images",
          "About html links",
          "more with links"
        ],
        "HTML Lists, identities": [
          "UL li",
          "ordered lists",
          "ID and Classes",
          "ID Classes example",
          "continue with css"
        ],
        "HTML section Wrap UP and Web Hosting": [
          "Near wrap up",
          "upload HTML and index to Bluehhost",
          "The recommended web hosts by Ricky Wahowa",
          "Here are the Web Hosts that I recommend - EXTENDED",
          "HTML final Video"
        ],
        "CSS SECTION - Basic stuff": [
          "CSS starts Intro",
          "browser extensions",
          "parts of css",
          "Adding background using CSS"
        ],
        "CSS Selectors": [
          "css selectors",
          "css selectors part two",
          "css selectors part three",
          "css selectors part four",
          "css selectors example"
        ],
        "CSS colors": [
          "Introduction to css colors",
          "colors explained",
          "css colors example",
          "Transparency colors",
          "More on transparency"
        ],
        "css units": [
          "css units",
          "css units explained",
          "Illustrate some units px and pc",
          "CSS rem and em units",
          "CSS rem and em example"
        ]
      },
      "requirements": [
        "You need to be familiar with a computer",
        "You will need internet connectivity in a few areas",
        "You must be self driven to power through all the course content",
        "You need to be open minded to enable learning"
      ],
      "description": "This course is a compilation of my Web related tutorials . The skills you will learn  in this course include:\nHTML : Hypertext Markup Language\nCSS: Cascading Style Sheets\nIntroduction to Programming\nJavaScript\n\nAs a beginner, this course will provide you with Web design technology skills that will enable you learn the programming skills need for Web development. In this one course you will learn how to create Web page markup using HTML, how to style your web pages using CSS. You will learn introductory programming skills and terminology. You will then begin learning Javascript. JavaScript is one of the most popular programming languages. learning vanilla JavaScript will make it easier for you to pick up other JS frameworks.\n\n\nIn this course I have combined all my Web programming tutorials in order to enable you learn everything in one spot. You will learn HTML,CSS, JavaScript plus Intro to Programming.\nI will continue to update this course with all the latest content. If you want to learn these highly marketable skills, then go ahead and join this course right now.\nThroughout this course I will be there to assist you if you need any help. Whenever you have any questions feel free to ask your questions and I will be there to help you.\nStart learning Web Design and Development skills today. Join this course to get started.",
      "target_audience": [
        "Designers with no coding knowledge",
        "Any non-technical person interested in learning HTML,CSS,WP, Programming and JS",
        "Anyone who wants to acquire skills to earn money online or for gainful employment",
        "Anyone who wants to acquire highly Marketable skills"
      ]
    },
    {
      "title": "Advanced Microservices with .NET: Development & Azure Deploy",
      "url": "https://www.udemy.com/course/advanced-microservices-with-net-develop-azure-deployment/",
      "bio": ".NET Microservices",
      "objectives": [
        "Master the core concepts of microservices, including event-driven and synchronous communication.",
        "Learn to work with powerful tools like MassTransit, RabbitMQ (Exchanges & Queues), and Azure Service Bus (Topics & Subscriptions) for seamless messaging.",
        "Implement robust authentication and authorization in microservices, including multi-level permission checks and JWT generation & validation.",
        "Explore advanced design patterns like the Cache-Aside Pattern, CQRS, and Request Validation with MediatR and custom pipeline behaviors.",
        "Build scalable solutions with Ocelot API Gateway for routing and Authorization",
        "Simplify shared logic by creating and managing custom NuGet packages.",
        "Handle critical cross-cutting concerns in microservices.",
        "Implement email notifications using SendGrid and Azure Cache for Redis for api performance.",
        "Apply clean architecture principles for maintainable, and scalable solutions.",
        "Create professional Postman collections & scripts and document APIs with SwaggerUI.",
        "Automate workflows with Azure DevOps, including CI/CD pipelines, Artifacts, and Releases.",
        "Deploy microservices to Azure Web Apps and configure App Service Environment Variables for seamless cloud integration.",
        "Work with SQL Databases and leverage Azure App Services to host and manage your applications.",
        "Ensure service reliability with strategies like service offline handling with better responses",
        "And much more, covering practical tools and techniques for building and deploying advanced .NET microservices."
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with building applications using .NET is essential, as the course dives into advanced microservices concepts.",
        "A basic understanding of how to build and consume RESTful APIs will help you follow along with API-based microservices communication.",
        "Proficiency in programming concepts like object-oriented programming (OOP) and dependency injection (DI)",
        "Basic knowledge of SQL databases is helpful, as you’ll work with relational databases in the course.",
        "A willingness to learn complex topics like messaging systems, distributed systems, and cloud deployment will ensure you make the most of this course.",
        "You’ll need a machine with Visual Studio (or an equivalent IDE) and an Azure Portal account for cloud deployment exercises."
      ],
      "description": "Are you ready to take your .NET development expertise to new heights? \"Advanced Microservices with .NET: Development & Cloud Deployment\" is the ultimate guide to mastering the art and science of building modern, cloud-ready microservices. Designed for developers and architects, this course dives deep into advanced patterns, tools, and best practices to equip you with the skills needed to design, implement, and deploy scalable, secure, and maintainable microservices architectures.\n\n\nIn this hands-on course, you’ll start with the foundational principles of microservices and gradually explore advanced topics such as event-driven communication, synchronous messaging, authentication and authorization, and custom NuGet package creation. Using industry-leading tools like MassTransit, RabbitMQ, and Azure Service Bus, you’ll learn how to build systems that handle real-world challenges like distributed communication, data consistency, and fault tolerance.\n\n\nThroughout the course, you’ll explore critical design patterns like CQRS, the Cache-Aside Pattern, and Clean Architecture, ensuring your solutions are robust, flexible, and easy to maintain. You’ll also learn how to integrate cutting-edge technologies like Ocelot API Gateway, MediatR, and Azure Cache for Redis, and leverage Azure DevOps to automate your CI/CD pipelines for seamless cloud deployment.\n\n\nThis course is packed with practical project, and detailed demonstrations to ensure you can confidently apply what you learn in any professional setting.\n\n\nCourse Highlights\n\n\nEnd-to-End Microservices Development\nBuild, deploy, and manage microservices from scratch, using .NET to tackle real-world challenges.\nPractical Cloud Deployment\nLearn how to deploy microservices to Azure, configure production-ready environments, and ensure scalability with tools like Azure Cache for Redis and SQL Databases.\nCross-Cutting Concerns\nImplement critical features like centralized logging, caching, and robust error handling to ensure your microservices are reliable and maintainable.\nHands-On Learning\nWork on practical projects that mimic real-world scenarios, giving you the confidence to apply your skills immediately.\nComprehensive Messaging Frameworks\nMaster asynchronous communication with RabbitMQ, MassTransit, and Azure Service Bus, ensuring your services can handle complex distributed workflows.\n\n\nWhy Take This Course?\n\n\nComprehensive coverage of microservices architecture, tools, and patterns.\nFocused on practical, hands-on project that deliver immediate, real-world value.\nIn-depth exploration of .NET tools and frameworks like MediatR, Ocelot, and MassTransit.\nStep-by-step guidance on deploying microservices to Azure.\nDetailed tutorials on creating custom NuGet packages, enhancing reusability and consistency across your microservices.\nThis course isn’t just about learning microservices—it’s about mastering the advanced skills and tools required to excel in building and deploying modern, cloud-based systems. If you’re ready to transform your development career, join us and become The Microservices Architect!",
      "target_audience": [
        "Aspiring developers with basic .NET knowledge who want to level up their skills in building scalable and cloud-ready microservices.",
        "Developers with some experience in .NET and microservices looking to master advanced patterns, architecture, and deployment strategies.",
        "Experienced professionals aiming to refine their knowledge of microservices, including event-driven systems, and resilient design.",
        "Professionals designing cloud-based solutions who want to understand how to effectively implement microservices architectures in .NET.",
        "Those responsible for leading development teams or implementing scalable systems in .NET, looking for practical insights into advanced microservices."
      ]
    },
    {
      "title": "Master Pycharm IDE - PyCharm for Power-Developer",
      "url": "https://www.udemy.com/course/master-pycharm-ide-pycharm-for-power-developer/",
      "bio": "Learn the most popular IDE for python and use it to develop applications easily.",
      "objectives": [
        "At the start we will go through various terminologies that are frequently used in PyCharm so that it becomes easier for all our learners",
        "we would go through all the intricacies related to the installation of PyCharm software",
        "Pointers like project settings, code editing, debugging, profiler, etc. are all some of the places one can get stuck, and there we are to help you",
        "we would take you through some shortcuts which would be very helpful once you start using PyCharm as a default IDE for coding."
      ],
      "course_content": {
        "PyCharm Course": [
          "Introduction to PyCharm",
          "Installation of PyCharm",
          "Basic Program",
          "Shortcuts in PyCharm",
          "Omni in PyCharm",
          "Macros In PyCharm",
          "PyCharm Console Application using Python",
          "Integrating HTML with PyCharm",
          "Add CSS to HTML",
          "Integrating JavaScript to HTML Page",
          "Adding Database in PyCharm",
          "Export Data in PyCharm"
        ],
        "PyCharm Project - Tic-Tac-Toe Game Development with GUI-Tkinter": [
          "Introduction to Project",
          "Code Explanation of Libraries Tkinter",
          "Configure Windows",
          "Canvas Function",
          "GUI Part 1 Output",
          "Importing Libraries Creating Window",
          "Labels and Entry",
          "Creating Function",
          "Buttons in GUI",
          "Button Click Function",
          "Integrating two windows",
          "Button Command",
          "Downloading .py File"
        ]
      },
      "requirements": [
        "The very first thing is an indentation in python programming. Python codes use indentation to separate the statements. If you are aware of how the indentation works in python, you will be able to understand if the automated indentation done for you by this tool is correct.",
        "Their prerequisites are included in the course and what all the trainees have to do is to get some basic idea of how these works when we talk about application development using python so that they can understand the concepts covered in this tutorial closely."
      ],
      "description": "Our courses from a technical side have been built with the utmost care to make sure we cater to each problem which lies in Understanding of PyCharm. Our course structure is built such that utmost care is given to all technical aspects of PyCharm. PyCharm is an integrated environment that caters to the running of Python files and provides the user with all the equipment one requires to run python codes. The highlights from PyCharm course are as follows:\nAt the start we will go through various terminologies that are frequently used in PyCharm so that it becomes easier for all our learners to grasp the essence of this IDE and make them confident enough to use these at all levels of professional life.\nIn the next round of the same course, we would go through all the intricacies related to the installation of PyCharm software. Pointers like project settings, code editing, debugging, profiler, etc. are all some of the places one can get stuck, and there we are to help you out of the problem in this section.\nNow to make work easy for you in PyCharm, we would take you through some shortcuts which would be very helpful once you start using PyCharm as a default IDE for coding.\nIn the same section we would go through KeyMaps, OMNI, and Macros which builds up essential blocks in the usage of PyCharm. KeyMap allows you to customize frequently used shortcuts whereas Omni allows the user to quickly move from one project directory to another.\nIn this course you would also go through the integration of HTML, CSS, and JavaScript in PyCharm which again is a widely used scenario in the software industry.\nThe final nail in this course is understanding how to export data works in PyCharm.\nThis course is developed by considering all the concepts that are required to make one proficient in working with this tool. In a nutshell, you will be ample skillful right after finishing this PyCharm Training.\nYou will be learning about how the codes can be drafted so that it could the same time for you while developing the application which eventually helps you to adhere to the deadlines.\nYou will also learn how to make the configuration changes that allow one to customize certain features offered by this tool.\nWe will be doing some of the simple projects in the course that will help you to understand how things could be actually implemented using this tool.\nThe project is moreover questions that you will be supposed to practice at your end. There will also be some of the additional concepts that one should understand in order to work with this integrated development environment and you will also be learning about those concepts in this course.\nOnce you finish the course, you will be ample confidence to implement things using python programming language and PyCharm.",
      "target_audience": [
        "This course is a generic course that satisfies the need for any sort of audience regardless of their background and expertise.",
        "The students who are working in python for their project or internship can also be the best target audience for this course. They will be able to learn how this IDE endorses application development."
      ]
    },
    {
      "title": "Beginners Guide to Web Development",
      "url": "https://www.udemy.com/course/beginners-guide-to-web-development/",
      "bio": "Learn HTML, CSS, and JavaScript to design and develop web applications. Discover how to scrape any application easily",
      "objectives": [
        "Build a foundation in HTML and the semantics of good coding style",
        "Unravel the worth of the cascading nature of CSS: IDs, classes, tags, and pseudo-classes",
        "Develop responsive websites and web applications for any device",
        "Get familiar with cross-browser support to ensure your site will look great on different browsers and devices",
        "Make dynamic websites and web applications with JavaScript",
        "Dynamically load content to a page using Ajax, greatly reducing page load times",
        "Create interactive elements quickly with Bootstrap and jQuery to reduce your development time",
        "Integrate with thousands of open-source and paid jQuery plugins, allowing you to rapidly create amazing things",
        "Learn how to build a simple and powerful JavaScript scraping script",
        "Understand how to create a web scraping tool using JavaScript and Node js"
      ],
      "course_content": {
        "Practical HTML and CSS": [
          "The Course Overview",
          "Integrated Development Environments (IDEs)",
          "Building Your First Website",
          "HTML Document Structure",
          "HTML – HTML Tags",
          "HTML – Linking and Including",
          "Tags, Defaults, and the Box Model",
          "Intro to Bootstrap",
          "Meta Tags and SEO",
          "Working with Images",
          "Introduction to HTML5",
          "CSS and Selectors",
          "Colors",
          "Fonts",
          "Controlling the Box Model",
          "Additional Directives",
          "Pseudo Classes, Pseudo Elements, and Cascading",
          "CSS Frameworks",
          "Media Queries",
          "User Experience, Different Devices",
          "Responsive Design with Bootstrap",
          "Browser Differences",
          "Operating System Differences",
          "Inspect and Debugging",
          "Cross Browser Testing",
          "Social Embeds",
          "Licensing and Rights",
          "Security Concerns – IFrames Versus Code Snippets",
          "Customization",
          "Test your knowledge"
        ],
        "Real-World JavaScript: Pro-Level Techniques for Entry-Level Developers": [
          "The Course Overview",
          "What Is JavaScript and How Is It Used?",
          "Using an IDE and Coding Intro",
          "Variables and Objects",
          "Operators",
          "Functions and Scope",
          "The DOM, Events, and Triggering Functions – Part 1",
          "The DOM, Events, and Triggering Functions – Part 2",
          "Objects and Object-Oriented Programming",
          "Cookies as a Means of Storage",
          "Understanding the JSON Format",
          "Objects and Object-Oriented Concepts",
          "Building a Quiz with JSON – Part 1",
          "Building a Quiz with JSON – Part 2",
          "Why jQuery/Bootstrap?",
          "Other Frameworks – Pros and Cons",
          "jQuery: Structure, Selectors, and Event Handling – Part 1",
          "jQuery: Structure, Selectors, and Event Handling – Part 2",
          "Bootstrap – Interactive Form Handling and Modals",
          "jQuery Plugins – What and Where?",
          "Security and Safety Concerns",
          "How to Read API Documentation",
          "Bootstrap and jQuery",
          "Integration with Google APIs",
          "Integration with Facebook",
          "Integration with PayPal",
          "Integration with Twitter",
          "Development Approach – Design and Spec",
          "Code Review",
          "Review of Cookies",
          "Events",
          "Debugging",
          "Everything Else",
          "Test your knowledge"
        ],
        "Learning Web Scraping with JavaScript": [
          "The Course Overview",
          "Introduction to Web Scraping",
          "Scraping an Amazon Webpage Using Simple JS Code",
          "Installing and Setting Up a Basic Script Using CasperJS",
          "Setting Up a Project to Scrape Google Using CasperJS",
          "Best Practices",
          "Summary with Benefits and Legal Limitations",
          "Using CasperJS to Scrape Airbnb",
          "Running and Testing the Script",
          "Best Practices Using CasperJS",
          "Scraping Amazon.com Using Cheerio",
          "Setting Up the Project",
          "Running the Script",
          "Summary",
          "Web Application to Scrape a Website",
          "Web Application Script",
          "Run the Web Application",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "No prior knowledge of HTML, CSS, or JavaScript is required."
      ],
      "description": "Web technologies are growing rapidly, and by building a solid foundation in HTML, CSS, and JavaScript, you are beginning your journey and riding the wave of innovation.\nThis practical course is your one-stop guide to learning web development. You will begin with learning HTML and CSS to design and build professional, beautiful, and truly responsive websites. You will then learn basics as well as advanced techniques in JavaScript to build dynamic websites and web applications. Along the way, you will also be introduced to JavaScript frameworks, plugins, and libraries with practical examples. Next, you will learn performing scraping on websites data wherein you will firstly learn to perform scraping on static web pages and then writing more sophisticated scripts for dynamic websites. Finally, you will learn some JavaScript scraping libraries and packages to automate scraping tasks.\nContents and Overview\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Practical HTML and CSS, covers the fundamentals of HTML and CSS to build professional, beautiful, and truly responsive websites that will maximize the value you can create. This course will give you the confidence to take on any web design by knowing what is possible, how to find the answers to the unknown, and how to make your website stand out from the crowd.\nIn the second course, Real-World JavaScript: Pro-Level Techniques for Entry-Level Developers, you will not only begin learning the basics of JavaScript, but also enable a high level of interactivity that lets you accept payments, validate inputs, and create a winning User Experience. Along the way, you will learn how to dynamically load content on a page using AJAX and add interactive elements to your site with Bootstrap and jQuery, which will greatly help in reducing page load times and your development time. Integrate your website with both open-source and paid jQuery plugins that will allow you to rapidly enhance your site's interactivity and responsiveness.\nThe third course, Learning Web Scraping with JavaScript, is the ultimate guide to using the latest features of JavaScript and Node.js to scrape data from websites. Firstly, you'll see how to extract data from static web pages. After learning the basics, you'll get hands-on practice of building more sophisticated scripts. You'll determine when and how to scrape data from a JavaScript-dependent website using JavaScript scraping libraries. You'll also learn to automate these actions with JavaScript packages such as Cheerio and CasperJS.\nBy the end of this course, you will learn the core technologies of web development (HTML, CSS, and JavaScript ) to build your own websites and web applications. You will also learn to perform web scraping on them.\n\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nNick Ruffilo has been a software and web developer for 20+ years. He has used JavaScript to develop web sites, web services, video games, native apps, and interactive ebooks. Nick has taught people of all ages, and focuses on providing the most impactful learning while teaching the skills necessary to continue your education. Nick Ruffilo is an entrepreneur, technology manager, software developer, and teacher. He understands the balance between a need to understand what's going on and the need to actually get things done.\nMustapha Mekhatria is the founder of SmartRTOS com and he is a JavaScript enthusiast. He enjoys setting up projects with Node.js, MongoDB, and VueJS. He publishes articles and videos about programming also has his own Youtube Channel. He likes sharing knowledge and strongly believes that everything is easy to understand if taught well.",
      "target_audience": [
        "This is an ideal course for Novice developers looking to get started with web development."
      ]
    },
    {
      "title": "React Redux Project for Beginners 2025",
      "url": "https://www.udemy.com/course/react-redux-project-for-beginners-2023/",
      "bio": "learn react redux",
      "objectives": [
        "Will be able to Learn reactjs",
        "Will be able to Learn Redux",
        "Create a Basic react redux project",
        "Clear Understanding of redux"
      ],
      "course_content": {},
      "requirements": [
        "Should Know html,css,js, reactjs basics"
      ],
      "description": "Welcome to the React Redux tutorial for beginners! This comprehensive video course is designed to cater to both newcomers and those with some experience in React. Throughout this tutorial, you'll embark on a journey to master the art of leveraging React Redux, the official React UI bindings layer for Redux, to build a cutting-edge project for the year 2025, seamlessly incorporating Axios for REST API integration.\n\n\nTo ensure a smooth learning experience, this course covers a wide range of topics in a structured manner. You'll begin by setting up your development environment and installing the necessary tools to create a React application for your project. Once the initial setup is complete, you'll dive into creating functional components to construct a dynamic and interactive user interface.\n\n\nAs you progress, you'll be introduced to a variety of useful web development plugins that will enhance your productivity and streamline your workflow. Additionally, you'll explore the power of SCSS, a CSS pre-processor, to style your React components and create visually appealing designs. The tutorial also covers the key concepts and benefits of using React Redux, empowering you to effectively manage state in your application.\n\n\nA significant portion of the course is dedicated to Redux, where you'll learn how to install it and set up the necessary folder structure in your project. You'll delve into actions and reducers, understanding their roles in managing state, and gain the ability to configure the Redux store to hold your application's data.\n\n\nTo harness the full potential of React Redux, you'll discover essential hooks such as useSelector and useDispatch, enabling you to efficiently access and update your application state. You'll implement dispatch functionality to trigger state changes, map and display lists of items in your components, and utilize Axios to perform seamless API calls and retrieve data from a REST API.\n\n\nAs you progress, you'll learn how to store and manage the retrieved API data using the useState hook and render it within your components. Additionally, you'll explore the exciting opportunity to generate random quotes from the acquired data, adding an engaging and dynamic element to your project.\n\n\nBy the conclusion of this tutorial, you'll have gained a solid understanding of Redux and its seamless integration with React. You'll be equipped with the knowledge and skills to build powerful, stateful applications, and create projects from scratch. To make the most of this course, it is recommended that students have a basic understanding of HTML, CSS, JavaScript, and React. Access to a laptop for practice is essential, and a dedicated approach to learning will ensure optimal results.\n\n\nAre you ready to embark on this exciting journey into the world of React Redux? Let's get started!",
      "target_audience": [
        "Student, Professionals",
        "UpSkill the reactjs"
      ]
    },
    {
      "title": "Laravel 12: Build a Multi-Vendor Ecommerce Website (2025)",
      "url": "https://www.udemy.com/course/build-complete-laravel-multi-vendor-ecommerce-project/",
      "bio": "Build an Advanced Multi-Vendor Ecommerce Marketplace Using Laravel 12, with Comprehensive Step-by-step Instructions",
      "objectives": [
        "Multi-Level Nested Drag & Drop Category Management",
        "Physical and Digital Product Management",
        "Advanced Product Variants System",
        "Coupon and Discount Management",
        "Order and Transaction Management",
        "Dynamic Role & Permission System",
        "Payment Gateway Integration (PayPal, Stripe, Razorpay)",
        "KYC Verification Module for secure user/vendor onboarding",
        "Large File Upload via Chunking & Multi-File Ajax Uploads",
        "Multi-Authentication (Admin, Vendor, User)",
        "Rating & Review System",
        "Advanced Cart and Checkout Features",
        "Dynamic Dashboards for Admin, User, and Author",
        "Withdraw System for Vendors",
        "Dynamic Page Builder",
        "Site Settings & Newsletter Management",
        "Email Sending & Notification System",
        "Database Optimization & Query Best Practices",
        "Advanced Database Relationships",
        "Database Clear Module for maintenance",
        "And more"
      ],
      "course_content": {},
      "requirements": [
        "You have to know basic PHP/Laravel and OOP",
        "Basic HTML, CSS, Bootstrap, jQuery",
        "Local Server : XAMPP/WAMP/MAMP/Laragon/Laravel herd",
        "Text Editor/IDE: Notepad++ / Sublime Text / Visual Studio Code / PhpStrom"
      ],
      "description": "Are you ready to master Laravel 12 and create a real-world, advanced multi-vendor ecommerce platform from scratch? This hands-on, project-based course will take you from Laravel basics to advanced development techniques, giving you the skills and confidence to become a professional Laravel developer in 2025.\nUnlike basic tutorials, this course is designed to help you build a complete, production-ready multi-vendor marketplace that includes powerful features found in modern ecommerce platforms. By the end of this course, you’ll not only master Laravel 12 but also gain practical experience with real-world best practices, optimization techniques, and advanced modules.\nWhy Learn Laravel 12?\nLaravel 12 is the latest version of the world’s most popular PHP framework, offering improved performance, modern syntax, and powerful features for building scalable applications. With its strong ecosystem, large community, and industry demand, Laravel 12 is the perfect choice for developers who want to build robust, secure, and high-performance web applications.\nBy learning Laravel 12 now, you’ll stay ahead of the curve in 2025 and be equipped with in-demand skills that make you stand out in the job market.\n\n\nWhy Choose This Course?\nProject-Based Learning – You will build a complete, real-world project step by step.\nAdvanced Features – From drag-and-drop categories to KYC verification, this course covers features that real ecommerce businesses use daily.\nJob-Ready Skills – Gain practical experience that employers value and use this project as part of your professional portfolio.\nLifetime Access & Updates – Stay up to date with Laravel 12 and future improvements.\nFull Source Code – Download the complete project code and customize it for your own use.\nBy the end of this course, you will have the confidence to build professional-grade Laravel applications and the skills to land better job opportunities or launch your own ecommerce marketplace.\n\n\nIn this course, you will learn how to design, develop, and deploy a feature-rich multi-vendor ecommerce marketplace with advanced functionalities, including:",
      "target_audience": [
        "Beginners who want to go from Laravel basics to advanced level",
        "Web developers who want to specialize in Laravel 12 and ecommerce development",
        "Students working on academic or portfolio projects",
        "Professionals who want to upgrade their Laravel/PHP skills for career growth",
        "Entrepreneurs looking to build and launch their own ecommerce marketplace"
      ]
    },
    {
      "title": "Deep dive into ASP.NET MVC part 2",
      "url": "https://www.udemy.com/course/deep-dive-into-aspnet-mvc-part-2/",
      "bio": "ASP.NET MVC part 2",
      "objectives": [
        "Learn how to reuse code rendering HTML using custom HTML Helper methods.",
        "Build Custom Model Binders for typical conditions in which built-in default binders are not usable.",
        "Understand and apply validation framework for both client and server validations.",
        "Access databases and perform CRUD operations using LINQ and Entity Framework.",
        "Implement security in ASP. NET MVC applications.",
        "Modularize using Areas.",
        "Develop views which are mobile compatible."
      ],
      "course_content": {},
      "requirements": [
        "Prior knowledge of HTML and C# is mandatory.",
        "LINQ, Entity Framework and SQL Server for database related operations."
      ],
      "description": "Our online ASP.NET MVC Tutorial provides an understanding of MVC design pattern and applying its features to developing lightweight but large sized web applications.\nMr. Sandeep Soni, MCPD has himself participated in architecting and developing a large number of ASP.NET MVC applications. Each topic benefits not only beginners but also experienced software developers.\nThe most striking feature of our online ASP.NET MVC training is that it includes both theory as well as practical program examples of every module. In addition to this, the ASP.NET MVC Interview questions provide an effective source for helping our participants to communicate effectively and confidently in any interview.",
      "target_audience": [
        "New ASP. Net MVC Developers",
        "New Web Developers",
        "Developers making the switch from .Net Web Forms to MVC",
        "Web Developers switching from Java, Ruby, PHP, or another framework to .Net"
      ]
    },
    {
      "title": "Vue 3 and Deno.js Authentication: Forgot and Reset Password",
      "url": "https://www.udemy.com/course/vue-deno-authentication/",
      "bio": "Deno APIs, Vue 3 Composition API, Typescript, MySQL, Migrations, Send Emails",
      "objectives": [
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Connect Deno with MySQL",
        "Run Migrations with Cotton",
        "Reset User Passwords",
        "Send Emails"
      ],
      "course_content": {},
      "requirements": [
        "Beginner Javascript Developer"
      ],
      "description": "Learn how to authenticate using Vue and Deno.\nIn Deno you will learn:\nUse Typescript\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nRegister Users\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nSend Emails\nIn Vue you will learn:\nUse Composition API\nCreate components and routes\nConsume API calls\nUse Vuex\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner Javascript Developer"
      ]
    },
    {
      "title": "Git and GitHub for Beginners - Version Control & Management",
      "url": "https://www.udemy.com/course/essential-git-github-project-management-version-control/",
      "bio": "Learn the complete Git and GitHub environment master managing your projects and your team like a professional developer!",
      "objectives": [
        "Learn everything you need to work with Git, from repositories, commits, branches, push and pull requests and much more",
        "Understand the in & outs of Git and how it works behind the scenes from understanding local & remote as well as local-tracking & remote-tracking branches",
        "Become a efficiently projects manager with Git & GitHub by managing your teams pull requests and comparing different branches of the project",
        "Create and publish your own website on GitHub using GitHub Pages",
        "Learn to collaborate with projects via Git & GitHub and contribute to open source repositories"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview",
          "Course Terminologies",
          "What is Git",
          "What is GitHub",
          "Why learn Git and GitHub"
        ],
        "Mac and Windows terminal commends": [
          "Section overview",
          "GUI vs Text Commands",
          "Mac Terminology",
          "Mac Terminal basics",
          "Mac Terminal Accessing Folders",
          "Mac Terminal Creating and Deleting Files/Directories",
          "Mac Terminal Flagging & Removing Files/Folders",
          "Mac Terminal Copying, Moving, Renaming Files/Directories",
          "Mac Terminal Recap and cheatsheet",
          "Windows Terminology",
          "Windows ( cmd ) basic navigation",
          "Win cmd Absolute and Relative Navigation",
          "Windows cmd Creating and Deleting Files/Folders",
          "Windows cmd copy and Move Files/Folders",
          "Win commands recap and summary",
          "Useful links & Resources for Mac And Windows"
        ],
        "Git and version management": [
          "Manage a project using only commands",
          "Section overview",
          "How Git works",
          "Working locally vs repository",
          "Branching",
          "Installing Git on Windows",
          "Installing Git on Mac",
          "Install VS Code",
          "What is a Repository, how initializing and committing works",
          "Adding to the Repository",
          "Commiting to a Repository",
          "Logging the Repository",
          "Creating and Working with Branches",
          "Merging different branches",
          "What is HEAD in Git?",
          "What is detached HEAD in Git",
          "Switching Branches in Git",
          "Deleting date form Working directory",
          "How to Undo Unstaged Changes",
          "How to Undo staged Changes",
          "How to delete commits in Git using git reset",
          "How to delete a branch in Git",
          "How to ignore files and directories to be tract in Git"
        ],
        "GitHub and remote controlled": [
          "Section overview",
          "How git & GitHub work together",
          "From a local repository to a remote repository",
          "Create a GitHub Account and UI Overview",
          "Connecting and pushing to your repository",
          "Pushing history and branches",
          "Remote and local tracking of branches",
          "Create a local tracking branch",
          "From Local-Remote Workflow important commands",
          "From Remote to local repositories with \"Cloning\"",
          "What is the upstream, branches with and without it.",
          "Deleting branches and public commits",
          "Recap"
        ],
        "GitHub collaboration": [
          "Section overview",
          "Public vs privet repositories",
          "Changing Public to Private Repo",
          "Forking a existing repository, fork workflow",
          "Creating a pull request for a repository",
          "Merging pull request branches",
          "Adding Collaborators to repositories",
          "Removing Collaborators from repositories",
          "Contributing to open source"
        ],
        "Hosting websites on GitHub": [
          "Section overview",
          "What is GitHub Pages and how it works",
          "Create your own website on GitHub using GitHub pages",
          "Static site generator on GitHub",
          "Adding more content to your GitHub Pages",
          "Optional! Contribute to the website.",
          "Unpublishing a GitHub Pages website"
        ],
        "Real Collaborative Project": [
          "Project overview",
          "Project objective",
          "Create a project repository",
          "Contribute to the project",
          "Accepting pull request and merging the contributor branch",
          "Publish your website on github"
        ],
        "Project add to the BarniCoin Blockchain": [
          "Project overview",
          "Fork repo and create your own block",
          "Repository for the BarniCoin Blockchain"
        ],
        "Extra content": [
          "More Course"
        ]
      },
      "requirements": [
        "PC or Mac Basics knowledge"
      ],
      "description": "What is Version Control?\n\n\nWhat is Git?\n\n\nWhat is GitHub?\n\n\nWhy Should I learn Git and GitHub ?\n\n\nAll this questions are answered here.\n\n\nGit and GitHub are essential tools that sooner or later each developer needs to learn.\nHi! My name is Norbert and this is my Git and GitHub for complete beginners course.\nEider you are a freelancer or work at a company the probabilities that you will collaborate with others on a project or multiple projects, are prate hi to most certain. Even if you go full lonely wolf you still need some sort of backup, redundancy, version control and remote repository system.\n\n\nNo matter if you're just getting started with (web) development, or applying for a developer job or if you just need to refresh your knowledge on Git and GitHub, version control and version management are a core skills and a must know for all developers.\n\n\nThe best toll on the market for version control are Git and GitHub, and they are the most popular version management and repository systems. Also the synergy between Git and GitHub makes them a reliable source for remote work. Also combining them with Microsoft Visual Studio Code will increase your development speed.\n\n\nThis course will guide you from a complete beginner with 0 knowledge of Git and GitHub, to be confident and efficient when working with version control and version management systems.\n\n\nPrier Knowledge?\nAbsolutely No prier knowledge is required.\n\n\nWhat will you learn ?\n\n\nEssential Mac and Windows terminal commends for\nAccessing files and directories using the Mac Terminal and Windows cmd\nCreating and Deleting files and directories using the Mac Terminal and Windows cmd\nFlagging files and directories using the Mac Terminal and Windows cmd\nCopying, Renaming and Moving files and directories using the Mac Terminal and Windows cmd\nWhat is Git and version management\nHow Git works and how to install git on Mac and PC\nHow to create a repository in git\nHow to add, commnit and log your commits to a git repository\nWhat are branches, how to create, merge and delete branches\nHow .gitignore works\nWhat is GitHub remote control\nHow git and GitHub work together\nHow to go from a local repository to a remote repository\nHow to create a GitHub Account, and your first Remote repository\nHow to connect and pushing to your repository, also log your pushing history and branches\nWhat are Remote and local tracking branches\nHow to create a local tracking branch\nFrom Local-Remote Workflow important commands\nFrom Remote to local repositories with \"Cloning\"\nWhat is the upstream, branches with and without\nHow to delete branches and public commits\nHow GitHub collaboration works\nWhat the difference between Public and Privat Repositories is\nHow to change a Public to a private repository and back\nHow to Fork a repository\nHow to create a pull request, accepting and merging the pull request to the main branch\nHow to add and remove collaborators from a repository\nHow to contribute to open source projects and repositories\nHow you can host your websites on GitHub\nWhat is GitHub Pages and how it works\nHow to create a website using GitHub pages\nWhat is a static site generator and how to create a static website and host it on GitHub\nHow to add more content to a website by adding multiple pages\nHow to publish and unpublish your website using GitHub Pages.\nReal World Projects\nCreate and contribute to a modern-landing-page repository\nContribute to the BarniCoin-Blockchain (NOT A REAL BLOCKCHAIN)",
      "target_audience": [
        "Beginner or Web developers",
        "Front End Web Developers",
        "Back End Web developers",
        "Full Stack Developers",
        "Project managers"
      ]
    },
    {
      "title": "HTML5 Canvas Projects",
      "url": "https://www.udemy.com/course/html5-canvas-projects/",
      "bio": "Learn HTML5 Canvas by Doing",
      "objectives": [
        "HTML5 Canvas drawing with JavaScript.",
        "Game programming.",
        "Use sounds in a web application.",
        "Saving images in a web application.",
        "Keyboard controls."
      ],
      "course_content": {
        "Overview": [
          "Overview"
        ],
        "Pong": [
          "Project Planning and Setup",
          "Creating the Ball",
          "Creating the Paddle",
          "Creating the Human Player Paddle",
          "Creating the Computer Player Paddle",
          "Creating the Computer Player Paddle Pt. 2",
          "Refactoring into a Game Object",
          "Refactoring into a Game Object Pt. 2",
          "Refactoring into a Game Object Pt. 3",
          "Creating the Scoreboard",
          "Detecting Collisions"
        ],
        "Image Editor": [
          "Designing the Image Editor",
          "Setting up the Interface",
          "Accessing the Image",
          "Building Image Manipulation Functions",
          "Building Image Manipulation Functions Pt. 2",
          "Saving the Image"
        ],
        "AtmoAttack": [
          "Planning the Project",
          "Creating a Basic Fighter",
          "Creating a Basic Attacker",
          "Creating the Pellets",
          "Creating the Pellets Pt. 2",
          "Cleaning Up and Refactoring",
          "Creating a Swarm",
          "Creating a Swarm Pt. 2",
          "Adding Sprites",
          "Adding Sprites Pt. 2",
          "Adding Sounds",
          "Adding Sounds Pt. 2",
          "Ending the Game"
        ],
        "DevPaint": [
          "Planning the DevPaint Project",
          "Creating a Pencil Drawing",
          "Creating a Pencil Drawing Pt. 2",
          "Creating a Pencil Drawing Pt. 3",
          "Adding Color Selections",
          "Adding Size Choices",
          "Saving the Image"
        ]
      },
      "requirements": [
        "HTML and JavaScript familiarity.",
        "Understand DOM events."
      ],
      "description": "HTML5 Canvas Projects\nWith the advent of the HTML5 Canvas tag, the world of graphical manipulation in the browser has become a reality. This series is an exploration of some the possibility that are available when using the canvas element. The ultimate aim is to use project-based exploration of the capabilities of the HTML5 Canvas element by building games as well as some utilities. Along the way, you may learn some other interesting JavaScript uses. See you there!\nCourse Format\n•          Binge-worthy TV shows! Watch comprehensive, in-depth episodes that use a talk show-like format to keep you engaged while learning.\n•          You can pick and choose episodes or you can watch as a complete series.\n•          A little humor, anecdotes, and real-world examples.\nOther Courses\nReady to become a DevPro? Get more DevProTV training with a variety of topics. Join Justin and DevProTV to level up your programming prowess!\nUpdates and Versions\nThe programming world updates at a break neck pace. As a result, there are times that certain tools, editors, libraries have changed. While syntax or names may change, the foundations remain the same. Though we hope to keep things updated, there may be time before that can occur. I recommend seeing if you can translate between changes and if all fails, ask questions!",
      "target_audience": [
        "Programmers looking to utilize the graphical capabilities of HTML5 and JavaScript."
      ]
    },
    {
      "title": "Web Design + Development Course: All-in-One",
      "url": "https://www.udemy.com/course/1-day-web-design-course/",
      "bio": "EVERYTHING YOU NEED TO BE A SUCCESSFUL WEB DESIGNER (No Coding Required)",
      "objectives": [
        "HOW TO PURCHASE DOMAINS & WEB HOSTING",
        "HOW TO SET UP EMAILS & DOMAINS",
        "HOW TO INSTALL WORDPRESS & INSTALL PLUGINS",
        "HOW TO CUSTOMIZE THEMES",
        "HOW TO CREATE A PAGE & A BLOG POST",
        "SETTING UP AN E-COMMERCE STORE",
        "RECEIVE PAYMENTS ON YOUR WEBSITE",
        "HOW TO OPTIMIZE FOR SEARCH ENGINES (SEO)",
        "HOW TO BACKUP AND MIGRATE YOUR WEBSITE",
        "HOW TO WRITE A RESUME & APPLY FOR A JOB"
      ],
      "course_content": {},
      "requirements": [
        "This course is suitable for anyone who wants to dive into the fundamentals of web design, regardless of prior experience."
      ],
      "description": "In just one day, you’ll learn the essentials of designing, building, and managing websites. This beginner-friendly course is perfect for anyone curious about web design—no prior experience needed. By the end of the day, you’ll be able to create a website from scratch, understand how hosting and WordPress work, and feel confident using the key tools and terms in the web design world. You’ll also learn how to update and improve existing websites on your own.\nYour instructor, Tony Poll, is a seasoned web developer and designer with over 12 years of experience. He has built hundreds of websites that are not only visually appealing but also user-focused and performance-optimized. Tony’s expertise spans HTML, CSS, JavaScript, PHP, responsive design, SEO, and more. He’s worked with major brands around the globe and is passionate about helping others break into the field.\nIn this masterclass, Tony has packed all the must-know skills into one intensive, practical session. Whether you want to start a new career, build your own site, or just understand how the web works, this course will give you the confidence and know-how to begin. Get ready for a hands-on, fast-paced learning experience that will jumpstart your journey into the world of web design.",
      "target_audience": [
        "You want to Explore Web Design",
        "You want to Become a Freelance Web Designer",
        "You want to Launch Web Design Career"
      ]
    },
    {
      "title": "Learning Path: Aurelia: Web Development for UI Developers",
      "url": "https://www.udemy.com/course/learning-path-aurelia-web-development-for-ui-developers/",
      "bio": "Develop applications using the next generation UI framework for web and mobile development—Aurelia",
      "objectives": [
        "Understand how to maintain code consistency by learning naming convention best practices",
        "Get a behind-the-scenes look at the issues while targeting JavaScript version compatibility with different browsers",
        "Lay the groundwork for creating libraries by loading scripts dynamically",
        "Add a time manager to your library using the singleton design pattern",
        "Create, integrate, and test event dispatchers in JavaScript",
        "See how to build a standards-based modern web application using Aurelia",
        "Understand future web standards today",
        "Improve code quality by unit testing of Aurelia components",
        "Deploy and maintain Aurelia applications"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript"
      ],
      "description": "Do you want to write clean, modular JavaScript code? Do you want to create UI that is maintainable, testable, and extensible?\nAurelia is a modern, forward-thinking, conventions-based JavaScript framework that leverages web standards. It allows you to build UI that is maintainable, testable, and extensible. Aurelia is developed using ES2016 and comprises smaller, focused modules.\nAurelia: Web Development for UI Developers is Packt’s Video Learning Path that is a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThis Learning Path will immerse you in the JavaScript world, where you will mature as a developer by exploring the best practices for building an original, functional, and useful cross-platform library.\nStarting off with just some basic knowledge of JavaScript and HTML, we will first lay a solid naming foundation for OOP coding by exploring the best naming conventions practices for primitive variables, constructors, methods, and properties. Then we’ll shed some light on creating global namespace, create a pure JavaScript onload script, and walk through cross-browser compatibility. We will learn how the onload and DOMContentLoaded events are actually triggered and understand how to use querySelectorAll method and dynamically load scripts using a script loader.\nWe will create a working time manager and explore unit testing in JavaScript.\nYou’ll then be introduced to Aurelia. After having ensured you had basic understanding of Aurelia, this Learning Path will walk you through a todo list application and setting up the development environment. Finally, we'll take you through a modern web application and move on to talk about tools, modules, web standards, and testing.\nMoving on, we take you on a whirlwind tour of Aurelia’s features in order to create a todo application project. After that, you’ll get an understanding of how to persist todos, routing, using pub/sub for communications. At the end, we throw light on dependency injection, declarative registration, explicit registration, and resolvers.\nFinally, learn how to implement game logic and basic artificial intelligence, and deploy the game for others to play.\nThe goal of this course is to provide you with all the tools and skills to write clean, modular JavaScript, and build amazing UI.\nAbout the Authors:\nThis Learning Path is authored by some of the best in the field.\nBen Fhala has had the honor of developing applications for members of the US Congress, Prime Ministers, and Presidents around the world. He has built many interactive experiences for companies such as Target, AT&T, Crayola, Marriott, Neutrogena, and Nokia.\nRaja Mani has over 2 decades of experience in developing applications using C, C++, Java, C#, and JavaScript. He has designed, implemented, and deployed different types of applications like console, desktop, web services and web applications.",
      "target_audience": [
        "If you’re an UI developer looking forward to learn this next generation, open source UI framework, this Learning Path is for you."
      ]
    },
    {
      "title": "Creating Social Media Logins for Web Developers",
      "url": "https://www.udemy.com/course/creating-social-media-logins-for-web-developers/",
      "bio": "Learn how to add all the major social media logins to any website.",
      "objectives": [
        "Create a Google login system",
        "Create a Twitter login system",
        "Create a Facebook login system"
      ],
      "course_content": {},
      "requirements": [
        "Basic web development knowledge"
      ],
      "description": "We've all logged into a website using one of our social media accounts. It saves the user from having to remember yet another user name and password, and this type of login system is in high demand.\nThis course teaches you how to integrate login systems for any website using any of the big three social media logins on the market today:\nGoogle\nTwitter\nFacebook\nWeb Developers\nIf you're a web developer, or want to be a web developer, and you don't know how to implement social media logins you are behind the curve. This is a must-have skill for any web developer today.",
      "target_audience": [
        "Web developers",
        "Web designers",
        "Programmers"
      ]
    },
    {
      "title": "How to Build CRUD Application with Golang and TCP gRPC Mongo",
      "url": "https://www.udemy.com/course/building-crud-application-with-tcp-grpc-mongo-gogolang/",
      "bio": "Learn how create a chat server-client with Go language using remote procedure call, command CLI and mongoDB",
      "objectives": [
        "Build web app for getting in real time remote procedure call wirth client-server side and store to mongo DB",
        "Receive a new knowledges in arhitecture of modern apps"
      ],
      "course_content": {
        "Start Here": [
          "What you need at the start and what you will receive in the end.",
          "How to use Cobra is both a library for creating powerful modern CLI applications",
          "How to generate applications and command files.",
          "How to use protocol buffer language to structure your protocol buffer data",
          "How to build server-client grpc connection",
          "How to store raws to mongDB",
          "How to use and test application"
        ]
      },
      "requirements": [
        "You should be able to have knowledges at least in one programming languages",
        "You should be able to know how to work with gRPC",
        "You should be able to know base commands for golang programming language",
        "You should be able to know how to work with mongoDB"
      ],
      "description": "Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.\nGo is an amazing choice for a language as it was developed by some of the same individuals who created the C programming language, Unix, and UTF-8 - some of the most influential contributions to computer science. Robert Griesemer, Rob Pike, and Ken Thompson created Go to be a modern language that easily uses multiple cores, easily implements concurrency, easily works in distributed environments, and easily allows the programmer to write programs - it has a very lean and user-friendly syntax.\nGo was created by luminaries in computer science at one of the best, if not the very best, software engineering firm to have ever existed - Google.\nThe credentials of Go are unsurpassed\nIn my opinion, Go is the best programming language that you can used for web development today. I began programming in 2005 with Borland Builder, I have worked with many languages, and Go is the best language which I have ever used. Go is also the top-paid programming language in America today.\nCome learn about the greatest programming language ever created. You will leave with resources and code samples to start making all of your software and apps really go.\nWhat knowledge & tools are required?\nYou should install go sdk, editor for coding application. This course starts at the level if you have already expirience in coding and open to get a new knowledegs",
      "target_audience": [
        "Anyone who wants to learn a code",
        "This is a developers who had expirience in different languages.",
        "This course is ideal for is want and tcp remote procedure call for tcp connection.",
        "This course is perfect for experienced programmers wanting a thorough rpc and receive data in real time.",
        "This course is perfect for experienced programmers wanting to fill in gaps in their programming knowledge"
      ]
    },
    {
      "title": "Angular and Golang: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/angular-go-advanced/",
      "bio": "Angular Material, Angular Universal, Golang, Docker, Redis, Stripe, Frontend & Backend Filtering, Gorutines, Channels",
      "objectives": [
        "Use Docker",
        "Login with HttpOnly Cookies and Multiple user Scopes",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "Gorutines and Channels",
        "Angular Material",
        "Angular Universal"
      ],
      "course_content": {},
      "requirements": [
        "Good understanding of Golang",
        "Good understanding of Angular"
      ],
      "description": "Learn how to create an Ambassador App using Angular and Golang. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big Golang API.\nIn Go you will learn:\nUse Docker\nUse the Fiber framework inspired by express.js\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nLogin with Scopes\nUse Gorutines\nUse Channels\nUse Golang with Redis\nUse Stripe\nSending Emails\nFilter Cached Products\nIn Angular you will learn:\nAngular CLI\nUse interceptors\nCreate public and private routes\nUse Reactive Forms\nAngular Material\nServer-Side Rendering with Angular Universal\nUse Event Emitters\nUse Typescript\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Version 2: Develop a Result Checker Web Application in PHP",
      "url": "https://www.udemy.com/course/version-2-develop-a-result-checker-web-application-in-php/",
      "bio": "Build a Complete School Results Management Application (Terminal Report Generating, Pins Management and many more ...)",
      "objectives": [
        "You will better undestand how to implement some useful, easy to grasp and amazing functions in PHP",
        "You will have a thorough understanding of how Ajax works in the background",
        "At the end of this course, you would have mastered full stack(Frontend and Backend) web development",
        "You will learn and know how to turn any HTML admin template into a custom web application",
        "Learn some of the best Object Oriented Approach in developing amazing web applications",
        "Learn how to secure your entire application against SQL Injection and other form of attacks",
        "You will learn how to work with and generate amazing PDF files in PHP",
        "By the end of the course, you would have built a complete School Result management System that you will be super proud of",
        "Taking this course, will even make you a job ready developer in PHP, the skills you will take away from this course will make u highly sort-after Web Developer",
        "The main focus of this course is simplicity, so you will follow through and understand the entire concept even if you a total beginner in PHP"
      ],
      "course_content": {},
      "requirements": [
        "A little knowledge of HTML, CSS and PHP is all that is needed."
      ],
      "description": "Hi, welcome to version 2 of our previous course (Develop a Result Checker Web Application in PHP). This version 2 is a major improvement on version 1.  Version 1 didn't allow for the internal generating of the terminal report, but we have been able to overcome that in version 2 and many more...\n\n\nI need to point out that version 1 is not a prerequisite to taking version 2. The only difference here is this, version 1 was developed with procedural PHP but in version 2, we used Object Oriented Programming in PHP (OOP). Now don't allow this to throw you off as it is just another paradigm to development.  We even explained every concept used so that even a total beginner in object-oriented PHP will understand and grasp the entire thing.\n\n\nSOME OF THE FEATURES OF THE APPLICATION :\n\n\nUsers\n1. Admin\n2. Teachers (Class and Subject)\n3. Students (Present and Past).\n\n\nAdmin Features\na. School Admin gets to manage the entire application.\nAdmin can:\n1. Manage Students (add, edit, delete, view)\n2. Manage Teachers (add, edit, delete, view)\n3. Manage Sections, Subjects, Classes (add, edit, delete, view)\n4. Add and delete new school admins\n5. Add and manage exams\n6. Manage students' attendance\n7. Manage Grades (add, edit, delete, view)\n8. Manage teachers' and principal's comments on the terminal reports.\n9. Generate pins for the students to check terminal report\n10. Manage Students who have been issued pins\n11. Set the number of times students are allowed to use the pins\n12. Set the expiration date of the pins issued\n13. Manage uploading of students scores (add, edit, view), etc.....\n\n\nTeacher Features\na. Teacher uploads scores for the classes and /or subject(s) he /she is teaching.\nb. Teacher can add students to the School\nc. Teacher can view students' in his/her class\nd. The subject teacher will be able to add scores for the Subject(s) taught in the school...etc\n\n\nStudent Features\na. Students can check their terminal results by purchasing a pin from the school.\nb. One student per pin\nc. when the student exhausts the usage of a pin or pin expires, has to buy a new one.\n\n\nOld Students\nOld students of the school can also check their terminal report for a particular year and term by purchasing a pin from the school. They don't have to login in.\n\n\nThanks for checking out this course, I look forward to meeting you in the course, let's build this app together.",
      "target_audience": [
        "Any level of Web Developers who wants to take his or her web development skill(s) to the next level by building a real world web application"
      ]
    },
    {
      "title": "Drupal 8 Learning for Beginners - Drupal Masterclass",
      "url": "https://www.udemy.com/course/drupal-learning/",
      "bio": "The Best Way to Learn Drupal 8 for Beginners. An essential step by step training course mastering Drupal from scratch",
      "objectives": [
        "Get a better understanding of Drupal and expand your knowledge of website creation tool",
        "Understand a difference between CMS and CMF",
        "Article creation with Drupal",
        "Basic page creation with Drupal",
        "Adding media such as image, audio, video, and documents to your content",
        "Create a different content type, because diversity of content in Drupal is second to none",
        "Add more functionality with extend (module) to enhance your workflow",
        "Create more user-friendly web design"
      ],
      "course_content": {},
      "requirements": [
        "No knowledge of coding required",
        "A computer or laptop",
        "Web browser",
        "Internet connection"
      ],
      "description": "Learn Drupal 8 to develop and design your desired website. There are a lot of people out there who prefer Drupal more than WordPress. Drupal is all about content and users. Having a lot of content or users that are registered on your website won't make Drupal slow! That's how powerful Drupal is.\n\n\nYou'll learn all of the Drupal features that allow you to create and present content easily, quickly, and beautifully.\n\n\nUse Drupal if you want to:\n· Create more than one content type\n· Have a lot of users for your website\n\n\nContents and Overview\nThis course begins with a basic introduction to Drupal. You might know CMS (Content Management System) such as WordPress or Joomla. But Drupal is not actually a CMS. It's way beyond that. Drupal is CMF (Content Management Framework). So CMF will treat your website creation like having LEGO blocks. It all comes down to your creativity!\nAs time goes by, you will be able to create content. And the diversity of content is what Drupal stands out the most because you can practically create an infinite content type with Drupal!\n\n\nCurriculum\nThere are 13 sections available in this course:\n· Introduction\n· First Steps\n· Brief Information\n· Features and Recommendation\n· Content Creation\n· Media\n· Basic Page\n· List\n· Content-Type\n· Structure\n· Appearance\n· Extend\n· Wrap-Up\n\n\nBy the time you complete this course, you'll be highly proficient in using Drupal. You will be using your skills as a web developer/designer to fully extract the capability of Drupal.\n\n\nAnd of course, you will be ready to work on client's projects.",
      "target_audience": [
        "Beginner Web Developers",
        "People who want to learn how to build a website other than using Wordpress"
      ]
    },
    {
      "title": "How to Build a File Server Applicaiton with Golang",
      "url": "https://www.udemy.com/course/how-to-build-a-file-server-with-postgres-and-golang/",
      "bio": "Go: the Great Stack for fileservice Services",
      "objectives": [
        "Programming backend server for resizing ad storing image files",
        "Saving files to Postgres SQL database",
        "Getting and string files by using endpoints which created in backend by Golang",
        "Testing logic by using Postman",
        "Insert, get one and get all data from sql database"
      ],
      "course_content": {
        "Start creating your first file server": [
          "Intro",
          "start, connect to db",
          "new router, new context",
          "groups, endpoints",
          "methods, all routes",
          "constructor,destructor",
          "get params, render error and json",
          "model files, methods",
          "response, multiresponse",
          "resize and store",
          "endpoints",
          "static, postman, testing"
        ]
      },
      "requirements": [
        "You should know golang language and postgre sql database"
      ],
      "description": "This course will help you to build your fileserver, where you can post your own images. You can define the data model of your Go applications using structs. This course shows you how to build fileserver application with sql database Postgres. This course covers the following:\nCreating golang application\nAdding endpoint for get, upload and list all files\nGet from server file by name\nStoring names of file in the database\nUpload files by using postman\nResizes images\nThe Go programming language can be simply described in three words: simple, minimal, and pragmatic. If you look deeply into the language design of Go, you see its simple and minimalistic approach, coupled with a pragmatic design. You can observe this simplicity with all the Go language features, including the type system. Today, many programming languages provide too many features that make applications more complex for developers. The design goal of Go is to be a simple and minimal language that provides all the necessary features for developing efficient software systems.\nWhat are the requirements?\nA familiarity of programming in Golang.\nA familiarity of Linux or OSx\nA familiarity of Postgres SQL\nWhat am I going to get from this course?\nLearned how to build files server with Postgres in GO. How store and resizes image, how to upload and get uploaded files.\nWhat is the target audience?\nIT professionals and managers who want to understand and learn this hot new technology",
      "target_audience": [
        "My student is a person how already knew some programming languages and sql databases"
      ]
    },
    {
      "title": "Build A TodoList with Fiber, Go and Electron Vue",
      "url": "https://www.udemy.com/course/build-a-todolist-with-fiber-go-and-electron-vue/",
      "bio": "Learn to build a Full Stack Go, Fiber and Vue Electron Application in No Time",
      "objectives": [
        "The student will learn the basics of RESTful API development with Go (Golang)",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the GORM ORM",
        "Learn to consume JSON with Electron"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create Fiber Todo API": [
          "Install Go",
          "Install Fiber",
          "Install Gorm",
          "Create Todo Gorm Model",
          "Setup Gorm Migrations and Fiber Routes",
          "Create Todos Request",
          "Get Todos By Id",
          "Update Todos",
          "Delete Todos",
          "Enable CORS"
        ],
        "Create Electron Vue TodoList": [
          "Install Electron Vue",
          "Add UI Library",
          "Add Create and Read Actions",
          "Add Update and Delete Actions",
          "Show TodoListComponent",
          "Create TodoList Table",
          "Security Policy",
          "Delete Todo Button",
          "Create TodoList Form",
          "Submit Todos"
        ]
      },
      "requirements": [
        "Understand Basic Go (Golang)"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use Go, Fiber, and Vue Electron. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a Vue Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, Go, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nVue Electron\nChild Components\nHTTP Requests with Fetch\nCRUD Methods\nGo Programming Language\nFiber\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with Vue Electron and Go",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "ReactJs MasterClass with Hooks & Context API w/ 5 Projects",
      "url": "https://www.udemy.com/course/react-masterclass-with-hooks-context/",
      "bio": "Upgrade your Frontend skills by learning ReactJs including Hooks, Context API with 5 Hands-on-projects",
      "objectives": [
        "Building your amazing web applications with React JS",
        "Learn React Hooks & Class-based Components",
        "Diving deep into advance concept of Context API",
        "Getting a high-paying job as a front-end developer"
      ],
      "course_content": {
        "Introduction": [
          "Installation of NodeJs and Text Editors",
          "Introduction to React JS"
        ],
        "Getting through basics": [
          "Hello World in React World",
          "Starting and Stopping a React Application",
          "Folder Structure in ReactJs"
        ],
        "All About JSX": [
          "Introduction to JSX",
          "Demonstration of JSX",
          "Babel and JSX How they work??",
          "Difference Between HTML and JSX"
        ],
        "React Components": [
          "Introduction to Components",
          "Class Components",
          "Functional Components",
          "Usage of Components in React"
        ],
        "CSS Styling in React": [
          "Inline Styling",
          "Css Stylesheet",
          "Js Library: Styled Components"
        ],
        "Props and State": [
          "Props in Class Component",
          "Props in Functional Component",
          "Usage of Props with Components",
          "State Management in React"
        ],
        "Project - 1": [
          "Pizza Counter Application"
        ],
        "Life Cycle methods in React": [
          "Understanding life cycle methods in class components"
        ],
        "Deep Diving into React Concepts": [
          "Event Handling",
          "Conditional Rendering",
          "Form Handling in React"
        ],
        "Lists and Maps": [
          "Lists Using Map function",
          "Lists rendering using key"
        ]
      },
      "requirements": [
        "Basics of JavaScript",
        "Little knowledge about HTML,CSS",
        "A Good computer/laptop to build applications",
        "That's it the rest about developing in react we'll teach you"
      ],
      "description": "In this course, you will learn to master React 16.8+ concepts including how to create projects using the Context API with the useContext and createContext hooks. We will also build other projects using concepts called State, React Router, Form Handling, and HTTP Methods.\nTake your web development skills to a whole new level and separate yourself from the average React developer by gaining the confidence to build professionally designed applications!\nThe new content follows all the best practices of modern React development and will take you even deeper into the React engine. There is a far better exploration of where React fits in the overall big picture of web development. And just like before, the course will teach how to create React applications as you build your own React projects along with the tutorial.\nI really believe that taking this course will be a valuable investment of your time.\nThe topics covered will be:\n- React Basics\n- React Components\n- Styling in React\n- Understand what \"state\" is in React and how to bring our interfaces to life\n- Use async HTTP requests to communicate with APIs so that our app feels meaningful by working with real data\n- LifeCycles in React\n- Leverage React Router to create a Single Page Application with shareable URLs\n- Use the modern \"hook\" approach with Function Components\n- Context API\n- Styled-Components\n- React Best Practices\n+ more\n\n\nIn summary, you should take this course if you want to learn React in a time-efficient way while building relevant and engaging projects that will build confidence going into tech world.\nBecome highly valuable and relevant to the companies that are hiring front-end developers; in one convenient place alongside one instructor. If you're ready to begin building with React - I'll see you on the inside!",
      "target_audience": [
        "JavaScript Developers",
        "Curious to learn about ReactJs",
        "Students who want to learn a Web Development framework"
      ]
    },
    {
      "title": "Full Stack GraphQL With Spring boot Kotlin and React Apollo",
      "url": "https://www.udemy.com/course/full-stack-graphql-with-spring-boot-and-react-apollo-typescript/",
      "bio": "Learn how to build GraphQL application with spring boot and React, Apollo client and Integration Testing of GraphQL",
      "objectives": [
        "You will learn What is GraphQL",
        "You will understand difference between GraphQL and REST API",
        "You will learn what is QueryResolver?",
        "You will learn what is MutationResolver?",
        "You will learn what is FieldResolver?",
        "You will learn How to integrate with Database",
        "You will learn How to write Integration testcase for Graphql Query and mutation",
        "You will learn How to create custom scalar types in graphQL",
        "You will learn How to solve N+1 query problem - DataLoader",
        "You will learn How to create Custom @Directive in GraphQL",
        "How to Setup Spring Security In GraphQL",
        "How to use JWT token",
        "How to Setup Role based Authorization In GraphQL",
        "How to Setup React Application With Apollo Client",
        "How to Setup Codegen based Development Workflow",
        "Authentication and Authorization At React Level",
        "Formik With Yup Validation",
        "React Router Dom V6 Integration",
        "MUI - Material UI with React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "GraphQL With Spring boot Project Setup",
          "Source Code Github Link"
        ],
        "GraphQL Query Introduction": [
          "Getting Started With GraphQL Query",
          "Parameterized GraphQL Query",
          "Return Array From GraphQL Query",
          "Return Object Type From GraphQL Query",
          "Field Resolver In GraphQL"
        ],
        "Spring JPA Data With GraphQL Kotlin": [
          "Creation Of Entities",
          "User and Post Service and Repository",
          "Pagination With GraphQL"
        ],
        "GraphQL Mutation - Spring boot Kotlin": [
          "Create Author GraphQL Mutation",
          "Get Users GraphQL Query",
          "Refactoring...",
          "Create Post GraphQL Mutation"
        ],
        "More on GraphQL Query and Mutation": [
          "Total Post Field Resolver",
          "Exercise - adding new entity in schema",
          "Get Comments Query",
          "Comments as Field in Post & Author Schema",
          "Add Comment Entity - Database",
          "Fetching Comment Records From Database",
          "Add Comment Entity Relation With Author & Post Entity",
          "Add Comment Mutation"
        ],
        "N+1 GraphQL Problem - Request Batching": [
          "N+1 GraphQL Problem Introduction",
          "Verifying Understanding of Problem With Logger",
          "Batching Request Implementation"
        ],
        "Scalar Types In GraphQL": [
          "Introduction Of Scalar Types In GraphQL",
          "DateTime Scalar Types In GraphQL",
          "Regex Scalar Types In GraphQL",
          "Custom Email Scalar Type Implementation From Scratch"
        ],
        "Input Validation & Transformation In GraphQL With Directive": [
          "GraphQL Directive Introduction - @Size",
          "@NotEmpty & @ContainerNotEmpty Directive Impl",
          "@Pattern - Regex Based Validation",
          "Custom Directive - @Uppercase - end to end"
        ],
        "GraphQL Security Using Jwt - Authentication & Authorization": [
          "Spring Security Architecture Explained",
          "Jwt Util - Generate And Validate Token",
          "Jwt Util Unit Testcases",
          "Spring Security Config",
          "Login Mutation",
          "Restrict addPost Mutation Execution For ADMIN Role",
          "Custom Spring Security Implementation - Jwt Filter, Manager, & Provider Etc",
          "Secure Queries and Mutations With @PreAuthorize Annotation",
          "Add Register Mutation - Password Encoder Impl",
          "Enhance Login And Integrate With Database - Security Testing end to end"
        ],
        "GraphQL Query And Mutation Integration testing With Jwt Flow Using Kotest": [
          "Add Kotest and Integration TestCase for Simple Queries",
          "Integration Test For Queries With Variables",
          "AddUserMutation Integration Test",
          "Login Flow Integration Testcase",
          "Integration Test For Secure Operation - Fetching Users - @PreAuthorize",
          "GetPosts Query Integration Testcase"
        ]
      },
      "requirements": [
        "Knowledge of Spring Boot - beginner level"
      ],
      "description": "Are you someone who want to learn GraphQL with spring boot Kotlin & React and how to test GraphQl application then you are in right place :).\n\n\nIn Easy way you will learn How to create full stack project with Spring boot GraphQl and React With JWT based Authentication and Authorization.\n\n\nThis course enables you as a GraphQL engineer who can explain graphQL in simple words to anyone.\n\n\nThroughout the course, we will practice a lot writing graphql schema and we will understand how the graphQL ecosystem works with spring boot.\nYou will learn what is GraphQl and how to set up the graphQL project with spring boot & React With Security Using JWT.\n\n\nWhat is GraphQL?\nA query language for your API\nGraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.\n\n\nAsk for what you need,\nget exactly that\nSend a GraphQL query to your API and get exactly what you need, nothing more and nothing less. GraphQL queries always return predictable results. Apps using GraphQL are fast and stable because they control the data they get, not the server.\n\n\nIn this course, you will learn:-\nWhat is GraphQL?\nDifference between GraphQL and REST API\nHow to Setup Spring Security In GraphQL\nHow to use JWT token\nHow to Setup Role based Authorization In GraphQL\nHow to Setup React Application With Apollo Client\nHow to Setup Codegen based Development Workflow\nAuthentication and Authorization At React Level\nWhat is Query in GraphQL?\nWhat is Mutation in GraphQL?\nWhat is Schema in GraphQL?\nWhat is QueryResolver in GraphQL?\nWhat is MutationResolver in GraphQL?\nWhat is FieldResolver in GraphQL?\nHow to Integrate GraphQL application with database using Spring Data JPA.\nHow to write an integration test for graphQL.\nHow to maintain graphQL schema.\nHow to create custom scalar type in graphQL\nHow to perform input validation in graphQl\nHow to transform field value with @Directive\nHow to solve N+1 query problem in graphql\nFormik With Yup Validation\nReact Router Dom V6 Integration\nMUI - Material UI with React",
      "target_audience": [
        "Beginner Java developers curious about GraphQL"
      ]
    },
    {
      "title": "React.js 101 Bootcamp: Your Syntax To Success",
      "url": "https://www.udemy.com/course/reactjs-101-bootcamp-your-syntax-to-success-by-jerome-morales/",
      "bio": "Learn React.js through a series of practical exercises, examples and deploy your own app online.",
      "objectives": [
        "If you had been experiencing difficulty in trying to learn react whether at school/online course/etc. This will help you ease-out the learning curve.",
        "Instead of trying to wrap around the principles of functional programming, learn from actually creating a project.",
        "You'll learn how make an app using react, deploy it online and show it to you friends, perhaps to your future clients or employers",
        "Micro Learning: Develop a strong foundational skills in ReactJS in which learning is emphasized to the smallest detail for solid understanding of concepts",
        "Understand Core Concepts: Gain a solid grasp of fundamental ReactJS concepts such as components, state, and props."
      ],
      "course_content": {},
      "requirements": [
        "Atleast Basic Knowledge and Understanding in HTML & CSS",
        "Understanding of Basic Programming in JavaScript (Variables, if else statements, loops etc.)"
      ],
      "description": "Dive into the world of React.js with our comprehensive introductory course, designed for an effortless learning experience. This course streamlines the complexities of React.js, ensuring a smooth learning curve for individuals at varying skill levels. Gain a solid foundation in component-based architecture, state management, and the Virtual DOM, and acquire practical skills throughout this journey. This course will equip you to become a future competent react developer by starting with a strong foundation and being more prepared to advance your knowledge further in this technology with other advanced courses with a very minimal chance of experiencing learning gaps. Whether you're a beginner or an experienced developer, this course offers a supportive environment for getting started with React.js with less difficulty.\n\n\nFurthermore, the course goes beyond mere syntax and functionality, emphasizing best practices and industry standards. Stay updated with the latest trends and advancements in web development, ensuring that you are well-equipped to tackle contemporary challenges in web development.\n\nWhether you're a beginner in JavaScript, this course offers a supportive environment to learn React.js painlessly. Explore the intricacies of performance optimization, efficient data flow, and key tools within the React ecosystem. Join us on this educational journey and unlock the full potential of React.js for crafting modern, dynamic web applications.",
      "target_audience": [
        "HTML, CSS, JS Web developers or Designers who wanted to learn React.",
        "Computer Science / IT Student who wanted to learn React.",
        "Tech enthusiast/hobbyist who wanted to learn React."
      ]
    },
    {
      "title": "Bullet proof php for beginners - Code like a pro",
      "url": "https://www.udemy.com/course/bulletproof-php/",
      "bio": "Learn good programming practices and spend less time debugging",
      "objectives": [
        "You'll be able to develop any php app/website that pave the way for the future :",
        "- to prevent bugs",
        "- to ease code enhancement and features adding",
        "You will be confident with :",
        "- common php features (variables, arrays, functions, classes, interfaces...)",
        "- database (SQL, tables, request...)",
        "You will acquire development skills, for php and any other language (bash, perl, C#, java, ...)",
        "You will be independant and know how to find the solution of a technical problem"
      ],
      "course_content": {},
      "requirements": [
        "no or little php knowledge",
        "all needed free softwares will be installed during the course",
        "A strong will to learn",
        "Commitment (30 min a day)"
      ],
      "description": "How to code like a professional developer in 30 min a day without feeling lost even if you are a beginner?\nDo you know what 99% of php beginners miss when they start?\n\n\nMany beginners start to learn by themselves, essentially with forums and web sites.\nThey also use academic courses, which are boring because they are just enumerating the features of the language.\nEven here on udemy, some courses are just a copy paste of the php documentation.\n\n\nWhat's the use to learn all the functions about arrays if you're not using it now, when you need it?\nOf course you learn... and then you forget what you've learnt\n\n\nFrom my 10+ experience in teaching, i can tell you it's better when you practice on an useful example. It's better when you struggle first on a problem, and then discover which thing to use.\n\n\nAlso, beginners are not aware of what is coming up as when they start to code. Because when their code is growing, problems arise.\n\n\nThen they try to fix these bugs. And when the code becomes really a mess, they can't find any practical solution to fix their problems.\nTheir code becomes more and more complex and when the bugs pop up (they always are), it's a huge amount of energy to fix it.\n\n\nIf only they have known the background of good programming, which prevent the production of such a code, its problems and the i-gonna-throw-this-code-away feeling\n\n\nSo most of beginners learn a lot of things and, in the end, they have a beautiful tool box of php features that they don't know how to use it correctly.\n\n\nThey may feel lost but they start anyway. They start to produce code that weakens the basement of their code structure.\nAnd when they can't manage the code anymore, they feel more lost and they give up.\n\n\nI don't want this for you.\nI want you to learn php features you need to learn\nI want you to build strong, bullet proof php program, that will be bugs free and easy to modify to add more features.\n\n\nThis course is a journey through the creation of a PHP application.\nYou learn, step by step, on a real-life project development.\nYou start as a beginner.\nYou begin to code and you learn only what you need to know at the moment.\nAs you struggle with problem, you know and remember forever the right thing to do.\nAs your code grows, you see the problems and know the solution to fix them.\nThen by the end of this course, you know, from a professional, all you need to know to produce professional PHP programs.\n\n\nThis course is a training, step by step, which teaches you progressively :\n- the php you need to know\n- the programing principles the beginners are never taught, and yet that make a strong and sustainable program\nAt some points, you have quizzes to test your new knowledge.\nYou have also coding challenges to dive you directly into the code : that's the only way for you to really learn.\nThese practical exercises make you unleash your full capacities\nWhen you complete your course, you get the cheat sheet which will help you in any of your projects.\n\n\nPlease, have a look to the free lectures available.\nI hope to see you to transform you into a professional skilled developer.",
      "target_audience": [
        "Beginners",
        "Any developer wanting to learn and apply good programming practices",
        "Anyone wanting to invest in himself",
        "Not for narrow minded",
        "Not for undisciplined or not serious people"
      ]
    },
    {
      "title": "Internet Marketing Tips: Social Media Marketing & Online Ads",
      "url": "https://www.udemy.com/course/best-internet-marketing-tips-social-media-online-ads/",
      "bio": "The Ultimate Guide to Digital Marketing Strategy: Top Tips for Social Media Marketing & Online Ads",
      "objectives": [
        "Learn how to apply AI-powered video personalization techniques to optimize content delivery on platforms like YouTube and Instagram.",
        "Learn how to measure the effectiveness of AI-based video editing and marketing campaigns to improve future video content strategies and achieve higher ROI.",
        "Learn how to use machine learning algorithms to analyze user behavior and tailor content for specific audience segments in social media marketing.",
        "Discover top AI tools for influencer discovery and campaign management on platforms like Instagram, TikTok, and YouTube to enhance digital marketing strategy."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Future of PPC: How AI Improves Ad Performance": [
          "Programmatic vs Traditional Advertising: Which Is Better?",
          "Improve Ad Performance with AI-Powered Bidding Tools"
        ],
        "How AI-Driven Social Media Marketing Boosts Engagement and ROI": [
          "Time-Saving Tools for Auto-Scheduling Social Media Posts",
          "Master Social Listening and Sentiment Analysis to Boost Social Media Marketing.",
          "Use machine learning to predict influencer campaign success & optimize strategy"
        ],
        "AI, Content Marketing in Social Media, & Online Ads to Improve Search Visibility": [
          "How AI Boosts Content Marketing On Social Media For Engagement & Visibility",
          "AI-Powered Personalization in Content Marketing for Social Media"
        ],
        "AI-Driven Video Editing and Marketing Strategies for Enhanced Engagement and ROI": [
          "AI-Driven Video Editing and Content Creation Tools for Efficient Production",
          "Using Predictive Analytics to Boost Video Engagement and Optimize Performance",
          "AI-Based Video Personalization: Tailoring Content for Maximum Viewer Retention",
          "AI-Powered Video Personalization for Enhanced Viewer Engagement"
        ]
      },
      "requirements": [
        "No skill is required. You will learn everything you need to know."
      ],
      "description": "Unlock the full potential of AI-powered digital marketing with Best Internet Marketing Tips: Social Media & Online Ads! This comprehensive and practical course is built specifically for entrepreneurs, business owners, and marketers who want to stay ahead in the fast-moving world of digital advertising, content creation, and social media marketing.\nInside, you'll explore the future of PPC (Pay-Per-Click) advertising—where artificial intelligence is changing the game. You’ll learn how smart bidding, predictive analytics, and automated optimization can drastically improve your ad performance and reduce wasted spend. Whether you're running campaigns on Google Ads or social platforms, these tools will help you target the right audience and drive better results.\nBut we don’t stop there. This course also dives deep into AI-driven social media strategies that help boost engagement, grow your following, and increase your return on investment. You’ll discover how to use AI tools for content scheduling, performance tracking, and personalized engagement across Facebook, Instagram, LinkedIn, TikTok, and more.\nYou’ll also learn how AI in content marketing and video editing can save you time and effort while producing high-quality, optimized content that connects with your audience. From blog posts to attention-grabbing videos, you’ll see how artificial intelligence can become your secret weapon.\nWhether you're just starting out or looking to upgrade your skills, this course is packed with actionable strategies, current trends, and real-world insights to help you grow your brand online.\nEnroll today and take the next step toward mastering internet marketing with powerful, AI-driven tools and techniques!",
      "target_audience": [
        "For anybody who wants to get advanced development in their Social Media Marketing skills.",
        "For anybody in any profession"
      ]
    },
    {
      "title": "Intro To AJAX With jQuery ( Web Programming Made Easy )",
      "url": "https://www.udemy.com/course/intro-to-ajax-with-jquery/",
      "bio": "Learn how to use the power of AJAX with jQuery. An essential course for all Web Programmers and Developers",
      "objectives": [
        "Learn How To Use The Power Of AJAX & The Flexibility Of jQuery To Create Dynamic Web Apps"
      ],
      "course_content": {
        "Getting Started": [
          "Important - Download These First - Working Files",
          "0101 Introduction To AJAX",
          "0102 Installing Firebug",
          "0103 Installing WAMP Server",
          "0104 Installing MAMP Server",
          "0105 Setting Up The Database"
        ],
        "Introduction To jQuery": [
          "0201 Adding jQuery To A Webpage",
          "0202 Adding jQuery Via A CDN",
          "0203 Understanding Selectors",
          "0204 Working With Event Handlers"
        ],
        "Direct Loading Of Content": [
          "0301 Loading External Content Into A Page Element",
          "0302 Example Of Loading A Random Quote On An Interval"
        ],
        "Submitting A Form": [
          "0401 Submitting The Login Form Data",
          "0402 Cleaning Up Our JavaScript",
          "0403 Getting Data Back From Login Users",
          "0404 Submitting The New Quote Data",
          "0405 Handling Potential Errors When Submitting Data",
          "0406 Basic Form Validation With jQuery"
        ],
        "Manipulating Page Content": [
          "0501 Types Of Data We Get Back",
          "0502 Getting HTML Data",
          "0503 Getting XML Data - Part 1",
          "0504 Getting XML Data - Part 2",
          "0505 Getting JSON Data",
          "0506 Updating Content On An Existing Page"
        ],
        "Building A Search Suggestion List": [
          "0601 Building The Search Form",
          "0602 Reusing Code To Display Results",
          "0603 Adding Tags To Display",
          "0604 Building Tag Searches"
        ],
        "Conclusion": [
          "0701 Wrapping Up"
        ]
      },
      "requirements": [
        "A Basic Understanding of HTML"
      ],
      "description": "This Introduction to AJAX With jQuery training course from Infinite Skills welcomes you to the world of programming using AJAX and jQuery. This course is intended for the absolute beginner, meaning no prior knowledge or experience with AJAX is required to take full advantage of this tutorial.\n\nYou will start by learning how to use jQuery to change a webpage. From there, you will learn how to load external content into a page element. Walter teaches you how to send data and get information back from the server so you can update your page. He will also show you how to dynamically update your page so that it can support tagging, search, and other features. This video based training course will also teach you basic form validation with jQuery, how to handle potential errors when submitting data, and how to build a search form.\n\nOnce you have completed this training tutorial, you will be fully capable of programming your website using jQuery. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Web Designers and Developers"
      ]
    },
    {
      "title": "JavaScript Exams:Master JavaScript Concepts & Best Practices",
      "url": "https://www.udemy.com/course/javascript-tests-best-practices/",
      "bio": "JavaScript Practice Exams Regarding Javascript Concepts & JavaScript Best Practices Be Ready for The JavaScrip interview",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to our comprehensive practice tests course designed to help you master JavaScript concepts and best practices. This course is perfect for anyone looking to deepen their understanding of JavaScript and prepare for job interviews.\nWhat You’ll Learn:\nJavaScript Concepts: Through a series of practice exams, you’ll gain a solid understanding of core JavaScript concepts, including variables, data types, loops, functions, and objects. Each concept is explained in detail and followed by a set of questions to test your understanding.\nJavaScript Best Practices: We’ll dive into the best practices for writing clean, efficient, and maintainable JavaScript code. You’ll learn how to write code that not only works but is also clean and easy to understand.\nInterview Preparation: Our course is designed to mimic real-world coding interviews. You’ll be exposed to common JavaScript interview questions and scenarios that will help you stand out in your next job interview. Each question is accompanied by detailed explanations and solutions.\nWho This Course Is For:\nThis course is suitable for both beginners who are learning JavaScript for the first time and experienced developers looking to brush up on their skills. If you’re ready to level up your JavaScript knowledge and ace your next job interview, this course is for you!\nJoin us on this journey to mastering JavaScript! We’re excited to have you on board!",
      "target_audience": [
        "Beginners: Individuals who are learning JavaScript for the first time and want to solidify their understanding of the language through practice exams.",
        "Experienced Developers: Those who already have some experience with JavaScript, but want to brush up on their skills and learn best practices in JavaScript programming.",
        "Job Seekers: Anyone preparing for job interviews where knowledge of JavaScript is required or beneficial. The course is designed to help you ace coding interviews by exposing you to common JavaScript interview questions.",
        "Web Development Enthusiasts: Individuals interested in web development, as JavaScript is a key language in this field."
      ]
    },
    {
      "title": "Advanced HTML 5 - Web and Game Development",
      "url": "https://www.udemy.com/course/advanced-html-5-web-and-game-development/",
      "bio": "Create well-structured web pages and games with HTML. Master Common HTML Tags Used In Web Development",
      "objectives": [
        "Master Common HTML Tags Used In Web Development",
        "Create well-structured web pages with HTML",
        "Understand web accessibility and create accessible webpages",
        "Work with HTML tables, links, images, audio, video, and more!"
      ],
      "course_content": {},
      "requirements": [
        "No Prior HTML Knowledge Needed",
        "Access to a Computer (Windows, MAC)",
        "No Need to Buy Additional Software to Learn HTML"
      ],
      "description": "Every single website uses HTML - even this very course landing page! It’s an absolutely fundamental tool that every web developer uses daily, and it also happens to be very easy (and even fun) to learn. HTML is the language that provides all the content on a webpage: the text, images, links, forms, videos, and more! Learning HTML is the first step in any web development journey, and this course teaches you all the HTML you need to know. This course starts at the very beginning and covers all the essential HTML elements and tags. You’ll learn how to work with text elements, links, images, audio, video, tables, forms, and semantic elements. By the end of the course you’ll be an HTML master. And the best part? The whole course can be completed in a few days. Hands On Learning. This course is structured like an in-person course. You get a chance to practice what you’re learning in every section with exercises, activities, and small projects. Instead of just watching me code, you’ll write your own HTML code and websites.\nCreate well-structured web pages with HTML\nCreate complex HTML forms\nUnderstand web accessibility and create accessible webpages\nWork with HTML tables, links, images, audio, video, and more!\nUse semantic elements\nBuild HTML Pages from Start to Finish\nLearn What HTML Tags are and How to Use Them\nLearn How to Customize HTML Elements Using Attributes\nBuild Search Engine Friendly HTML Pages (SEO)\nMaster Common HTML Tags Used In Web Development\nComplete Course Exercises and Quizzes to Build Confidence\nYour Journey Starts Now\nYou've made an excellent choice. The road to web development, among other disciplines, begins with HTML. HTML, or Hyper Text Markup Language, is a building block to developing effective web pages. Before the additional layers of web development are implemented (CSS, JavaScript, etc.) HTML informs the web browser of the structure of the page and content to display to the visitors of the page.\nWhy HTML\nWithout HTML, the web browsers such as Chrome, IE, FireFox and Safari, wouldn't know what to do and how to present your content to the viewer. Search Engines, like Google, rely on HTML to index a page in their search results. By using HTML properly you will not only inform the search engines of the importance of your content but you also inform the browser and the viewers of your page.",
      "target_audience": [
        "Anyone who wants to learn how to create their own stunning, professional websites",
        "Complete beginners with no experience",
        "Students with some HTML & CSS experience looking to level up their skills"
      ]
    },
    {
      "title": "Full-Stack Next.js 15 Course - Multi User Blog Platform",
      "url": "https://www.udemy.com/course/nextjs-15-course/",
      "bio": "Learn Next.js 15 from the ground up by building and deploying a fullstack multi user blog platform (Like Medium or DEV)",
      "objectives": [
        "Learn how to build fullstack multi user blogging platform like Medium or DEV in Next.js 15, Typescript and TailwindCSS",
        "Learn how to use the latest Next.js features like the App Router, Server Actions, Server Component and more",
        "Create Complete Auth System Using Auth.js v5 - Email and Password Login, Continue with Google or Github, Email verification, Password reset and more.",
        "Create Blog Editor Using BlockNote - Something similar to the Notion editor",
        "Image Uploads - Upload, Replace and Delete Images.",
        "Blogs' Comment Section - Comment on blogs and reply to comments.",
        "User Profile - User details, user settings (update profile) and user blogs.",
        "Create a Realtime Notification System in SocketIO"
      ],
      "course_content": {
        "Getting Started": [
          "App Demo",
          "Prerequisites",
          "React vs Next.js",
          "Creating a Next.js App",
          "RootLayout and Homepage",
          "Adding Google Fonts",
          "The cn Function",
          "TailwindCSS Intro"
        ],
        "NavBar, Pages and Layouts": [
          "Initial Setup",
          "The Container Component",
          "Theme Toggle",
          "The Logo",
          "Shadcn Intro & Search Input Style",
          "Notifications Style",
          "UserButton Style",
          "Adding Pages & Nested Pages",
          "Adding Dynamic Pages",
          "Adding Nested Layouts",
          "Linking Pages",
          "Push Code to Github"
        ],
        "React Hook Form": [
          "Intro to Typescript",
          "Reusable Input Component",
          "The Login Form",
          "Button Component",
          "Heading Component",
          "Social Auth Component",
          "The Register Form"
        ],
        "Prisma and Database": [
          "Setting Up Prisma",
          "Creating a Postgres Database",
          "User Schema",
          "Register Server Action",
          "Calling The Server Action",
          "The Alert Component"
        ],
        "Authentication in Auth.js (Previously Next-Auth)": [
          "Authjs Setup",
          "Middleware",
          "Protect Routes",
          "Login User",
          "Logout User",
          "Redirect User",
          "Update Session",
          "Continue With Github",
          "Continue With Google"
        ],
        "Verify Email and Reset Password": [
          "Auto Verify Oauth Email",
          "Customize Account not Linked Error",
          "Generate Email Verification Token",
          "Send Verification Email",
          "Email Verification Page",
          "Send Password Reset Email",
          "Password Reset Form",
          "Add User Role & UserId to Session"
        ],
        "Blogs Create, Edit, List & Filter": [
          "Creating Blog Form",
          "Setup Edgestore (Image upload in React)",
          "Upload Cover Image",
          "Show, Replace and Remove Cover Image",
          "Select Tags",
          "BlockNote Editor",
          "Set Editor Content to React Hook Form State",
          "Show Blog Form Error",
          "Publish Blog",
          "Save Blog As Draft",
          "Get Published Blogs",
          "Style Blogs List and Details",
          "Edit Blog and Filters"
        ],
        "Blogs Reactions": [
          "Clap Blog Server Action",
          "Optimistic UI Update",
          "Bookmark Blog",
          "Fix Navigation Issues",
          "Bookmarks Page"
        ],
        "Comments Section": [
          "Comments Schema",
          "Comments Server Action",
          "Comments Form",
          "Adding Toast Message",
          "List Comments",
          "Comments Card",
          "Comments Reaction",
          "Add Replies",
          "List Replies",
          "Delete Comment",
          "Clap Comments",
          "Show Comments Count",
          "Delete Blog Part 1",
          "Delete Blog Part 2"
        ],
        "User Profile": [
          "User Profile Server Action",
          "Get User Blogs",
          "User Profile Blogs Pagination",
          "Edit User Server Action",
          "Edit User Form",
          "Edit User Email",
          "Delete User Part 1",
          "Delete User Part 2"
        ]
      },
      "requirements": [
        "HTML & CSS",
        "JavaScript and React.js Knowledge",
        "NO prior Next.js Knowledge is required"
      ],
      "description": "We will use Next.js 15, TypeScript, TailwindCSS, Auth.js v5, Prisma, and more to build a complete full-stack web application from scratch.\nThis course is project-based and perfect for developers who want to learn by building a real-world app. You’ll gain hands-on experience by creating and deploying a blog platform, something similar to DEV or Medium, with modern tools and best practices.\nFeatures we will create in the course project:\nA complete auth system using Auth.js v5 - Includes credentials login (email and password), continue with Google or GitHub, email verification, password reset, and more.\nBlock Note editor - A rich text editor inspired by Notion, with support for images, code blocks, and more.\nBlogs' paginations - Server-side pagination for improved SEO and performance.\nDark and light theme modes - Seamless switching between themes.\nImage uploads - Upload, replace, and delete images.\nBlogs' reactions - Like and bookmark your favorite blogs.\nSearch and filter - Filter blogs by tags and keywords.\nComment system - Comment on blogs and reply to comments.\nUser profiles - View and update user settings, and see authored blogs.\nFollow system - Follow and unfollow users.\nRealtime notifications - Powered by SocketIO.\nAdmin dashboard - Monitor users and blogs.\nDeployment - Learn how to deploy your project to production.\nBy the end, you’ll have a powerful, modern blog app ready for the real world.",
      "target_audience": [
        "React developers who would like to learn how create fullstack apps in modern Next.js ( app router, server actions and more)"
      ]
    },
    {
      "title": "Laravel Breeze with User Role Areas",
      "url": "https://www.udemy.com/course/laravel-breeze-with-user-role-areas/",
      "bio": "Learn how to define separate areas for users based on User Roles: Admin, Teacher and Student",
      "objectives": [
        "Learn how to create separate Areas/Sections for different users based on Roles",
        "Define separate layouts/views/controllers/namespaces/route prefixes/navigation menu etc for different roles",
        "Learn how to define a flexible middleware to check for Roles existance and provide access accordingly",
        "Learn how to group Routes based on roles and implement a flexible routing structure"
      ],
      "course_content": {
        "Let's Implement Laravel Breeze with User Role Areas": [
          "Install and Setup Laravel/Breeze",
          "Let's Define the Models/Migrations/Pivot Tables",
          "Define the Seeders for User/Role/Pivot Tables",
          "Let's Start working on the Student Dashboard",
          "Finalize the Student Dashboard",
          "Let's Define a Separate Section for Teachers",
          "Auto Redirect to Correct Area after Login",
          "Define a Flexible Middleware to Restrict Role Areas",
          "Let's Work on the Admin Area",
          "Let's Refactor the Routes",
          "Quick trick for Importing Multiple Controllers from the same Namespace",
          "Assign Default Role of Student on Registration",
          "Make Dashboard Route Dynamic on Welcome Page"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Beginner Knowledge of Laravel is Required."
      ],
      "description": "In this course, we will learn how to define different areas based on User Roles: Students, Teachers, and Admins.\nThe goal is to show you how to separate those subsystems in a Laravel-structured way.\nAnd, along the way, we'll learn the following topics:\nLearn how to create separate Areas/Sections for different users based on Roles\nDefine separate layouts/views/controllers/namespaces/navigation menu etc for different roles\nDefine a flexible middleware to check for Roles' existence and properly implement Authorization checks.\nLearn how to group Routes based on roles and implement a flexible routing structure along with route name prefixes and URLs\n\n\nMiscellaneous Features:\nImplement a method to automatically redirect to the correct dashboard based on the User Role.\nLearn how to assign a default student role on registration.\nLearn how to define seeders for each model that would configure our project ready for production.\nAll the role areas that we define in this course will have a separate:\nController subfolders/namespaces\nViews subfolders\nVisual layouts\nNavigation menus\nRoute groups\nRoute name prefixes\nURL prefixes\n\n\nSummary: This course will teach you how to define separate areas based on the User Roles, with separate routes/views/layouts/navigation menus/URL prefixes and route groups along with proper Authorization checks .\nWe will create a simple project without any logic inside, and without separate visual themes, the goal is to teach you how to divide the Laravel structure into role areas.",
      "target_audience": [
        "Laravel Developers who want to define separate areas based on Roles"
      ]
    },
    {
      "title": "Complete HTML & CSS Practice Tests and Interview Questions",
      "url": "https://www.udemy.com/course/complete-html-css-practice-tests-and-interview-questions/",
      "bio": "Prepare for HTML and CSS Certifications with Detailed Tests and Essential Interview Questions.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the \"Complete HTML & CSS Practice Tests and Interview Questions\" course on Udemy! This course is meticulously designed to help you confidently ace your HTML and CSS certifications. Whether you're a beginner looking to solidify your foundational knowledge or an experienced developer aiming to refresh your skills, this course offers a comprehensive approach to mastering HTML and CSS through targeted practice tests and real-world interview questions.\nIn this course, you'll find a series of practice tests that cover a wide range of topics in HTML and CSS. You'll start with the basics, such as HTML elements, attributes, and structure, before progressing to more advanced topics like HTML tables, lists, and forms. Each section tests your understanding and application of these concepts, ensuring you have a solid grasp of HTML essentials.\nFor CSS, you'll explore various properties, including text styles, box models, positioning, and responsive design. The practice tests will challenge you to apply these properties in different scenarios, helping you to develop a deep understanding of CSS.\nIn addition to practice tests, the course includes a wealth of interview questions that focus on HTML and CSS. These questions are designed to simulate real-world interview scenarios, giving you the opportunity to practice and refine your problem-solving skills. You'll learn how to tackle complex questions, break them down into manageable parts, and provide clear, concise answers.\nBy the end of this course, you'll be well-prepared to take on any HTML and CSS certification exam and tackle job interviews with confidence. So, what are you waiting for? Join us now and start your journey to becoming a certified HTML and CSS expert!",
      "target_audience": [
        "This course is designed for anyone looking to enhance their proficiency in HTML and CSS, particularly in preparation for job interviews or certification exams. Whether you're a beginner aspiring to enter web development, a seasoned developer aiming to refresh your skills, or an IT professional seeking to solidify your HTML and CSS expertise, this course offers a structured approach to deepen your understanding of web development fundamentals and refine your problem-solving capabilities."
      ]
    },
    {
      "title": "Popular Payment Gateways & Packages Integration In Laravel",
      "url": "https://www.udemy.com/course/laravel-payment-gateways-integration/",
      "bio": "Mastering Secure and Efficient Transactions: A Hands-On Guide to Integrating Top Payment Gateways",
      "objectives": [
        "PayPal integration in laravel",
        "Stripe integration in laravel",
        "Razorpay integration in laravel",
        "2Checkout integration in laravel",
        "Instamojo integration in laravel",
        "Mollie integration in laravel",
        "Paystack integration in laravel",
        "SSLCOMMERZ integration in laravel",
        "Yajra Datatable Implementation",
        "Image Intervention Implementation",
        "Shopping Cart Implemention",
        "Spatie Laravel Permission Implementation (Role & Permission)",
        "Socialite Social Authentication (Social Login)"
      ],
      "course_content": {
        "Payment Gateways: Introduction": [
          "Introduction"
        ],
        "Payment Gateways: Template Overview": [
          "Template overview"
        ],
        "Payment Gateways: PayPal Integration In Laravel": [
          "Create Paypal Sandbox Account",
          "Integrate Paypal In Laravel"
        ],
        "Payment Gateways: Stripe Payment Gateway Integration In Laravel": [
          "Create Stripe Sandbox Account",
          "Integrate Stripe Payment Gateway In Laravel"
        ],
        "Payment Gateways: Razorpay Payment Gateway Integration In Laravel": [
          "Integrate Razorpay Payment Gateway In Laravel"
        ],
        "Payment Gateways: 2Checkout Payment Gateway Integration In Laravel": [
          "Create 2checkout Sandbox Account",
          "Integrate 2checkout Payment Gateway In Laravel (Part-1)",
          "Integrate 2checkout Payment Gateway In Laravel (Part-2)"
        ],
        "Payment Gateways: Instamojo Payment Gateway Integration In Laravel": [
          "Create Instamojo Sandbox Account",
          "Integrate Instamojo Payment Gateway In Laravel"
        ],
        "Payment Gateways: Mollie Payment Gateway Integration In Laravel": [
          "Create mollie Sandbox Account",
          "Integrate Mollie Payment Gateway In Laravel"
        ],
        "Payment Gateways: Paystack Payment Gateway Integration In Laravel": [
          "Create Paystack Sandbox Account",
          "Integrate Paystack Payment Gateway In Laravel"
        ],
        "Payment Gateways: SSLCOMMERZ Payment Gateway Integration In Laravel": [
          "Create Sslcommerz Sandbox Account",
          "Integrate SSLCOMMERZ Payment Gateway In Laravel"
        ]
      },
      "requirements": [
        "Basic PHP",
        "Basic OOP",
        "Basic HTML and CSS",
        "Local Server : Xampp/Wampp/Vertrigo/Mamp/Laragon",
        "Text Editor/IDE: Sublime Text / Visual Studio Code / PhpStorm etc"
      ],
      "description": "A payment gateway integration course is a comprehensive training program designed to teach individuals and businesses how to integrate a payment gateway into their website or application. This allows customers to securely and conveniently make online transactions using credit or debit cards, e-wallets, or other payment methods. The course is ideal for web developers, e-commerce entrepreneurs, and anyone else looking to add online payment functionality to their website or application.\nThe course typically covers topics such as understanding payment gateway architecture, selecting a payment gateway provider, setting up a merchant account, implementing security protocols, and troubleshooting common issues. The course may also include hands-on exercises and projects to help students gain practical experience with integrating a payment gateway. The students will have the opportunity to integrate popular payment gateways like Stripe, PayPal, and other leading options with the framework Laravel.\nThe course will start with an introduction to payment gateways and their role in online transactions. Students will learn about the different types of payment gateways and their features, as well as how to select a payment gateway provider that meets their needs. They will also learn about the technical requirements for integrating a payment gateway, including setting up a merchant account and implementing security protocols.\nThe course will also cover the process of integrating a payment gateway with Laravel. Students will learn how to use Laravel's built-in functionality to handle online transactions, and how to customize their integration to meet their specific needs. The course will also cover troubleshooting common issues that may arise during integration and how to handle them.\nUpon completion of the course, students will have the knowledge and skills to integrate a payment gateway on their own and process online transactions. They will be able to create a secure and reliable payment system for their website or application and be able to handle transactions and payment processing with ease. The knowledge and skills acquired in this course can also be used to improve their Laravel development skills and make them more valuable in the job market.",
      "target_audience": [
        "Those who want to be a expert on Laravel Payment gateways",
        "Who want to integrate payment gateway for own project",
        "Who want to know about multiple payment gateways."
      ]
    },
    {
      "title": "Top 10 Integrations between Snowflake and ChatGPT Hands-On",
      "url": "https://www.udemy.com/course/snowflake-with-chatgpt/",
      "bio": "Design and Implement Snowflake Data Applications with ChatGPT 4",
      "objectives": [
        "Programmatically use the latest GPT-4 Turbo LLM from Snowflake apps",
        "Access ChatGPT from all sorts of Snowflake data applications",
        "Access the OpenAI Chat Completion API through Python and REST calls",
        "Use external functions and external access integrations to call ChatGPT",
        "Configure Visual Studio Code with plugins for Snowflake and ChatGPT",
        "Create local Streamlit web apps and Streamlit in Snowflake Apps with ChatGPT"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Snowflake and Streamlit",
        "Basic knowledge of SQL and Python",
        "No prior knowledge of ChatGPT or OpenAI API required"
      ],
      "description": "Who I Am\nWorld-Class Expert in Snowflake.\nFormer Snowflake \"Data Superhero\" and SnowPro Certification Subject Matter Expert.\nSnowPro Exams in Core, Architect, Data Engineer, and Data Analyst Certifications.\nMultiple Certifications in Data Science and Machine Learning.\nSeasoned Data Architect, Data Engineer, Machine Learning Engineer...\nWhat Integrations We Will Build or Configure\nApp #1: Configure ChatGPT as a Coding Assistant for Snowflake in VSCode\nApp #2: Generate Snowflake Sample Databases with ChatGPT from VSCode\nApp #3: Snowflake Metadata Inspector in Natural Language\nApp #4: Interactive Data Analysis with ChatGPT Bot Agent\nApp #5: Instant Charts with the Advanced Data Analysis Plugin\nApp #6: Generate a Usage Monitoring Dashboard for Snowflake Account\nApp #7: Data Enrichment with an External Integration of ChatGPT\nApp #8: ChatGPT with LlamaIndex on Personal Documents\nApp #9: ChatGPT SQL Agent with LangChain\nApp #10: Snowflake Query Analyzer and Optimizer\nSnowflake Technologies You Will Learn More About\nDDL and SQL Queries\nQuerying Data through the Snowsight web UI or a VSCode plugin\nLocal Streamlit web applications connected to Snowflake\nStreamlit apps deployed in Streamlit Community Cloud\nStreamlit in Snowflake Apps\nExternal Functions\nExternal Access Integrations\nGenerating Synthetic Data\nData Enrichment\nInformation Schema and Account Usage metadata\nData Analysis\nMonitoring Dashboards\nUsing Public Datasets from the Marketplace\nQuery Analysis and Performance Optimization\nChatGPT Technologies You Will Learn More About\nUse cases of the most recent GPT-4 Turbo model\nUsing the OpenAI Chat Completions API\nAccess the OpenAI API from Python and curl\nInstant Data Analysis on Uploaded Documents with GPT-4 Plus\nIndexing Custom Content with LlamaIndex and RAG\nAutomatic SQL Query Generation with LangChain\nWhat This Course Will NOT Teach You\nIn-depth knowledge of Snowflake and its ecosystem\nIn-depth knowledge of ChatGPT and other OpenAI products\nAPIs other than ChatGPT Chat Completion API (vision, embeddings...)\nConnecting to Azure Open AI service\nBing Chat with Copilot (or any other Microsoft service)\nData Science and Machine Learning with Snowflake or ChatGPT\n\n\n== Enroll today, you'll not regret it! ==\n[Disclaimer: We are not affiliated with or endorsed by Snowflake, Inc.]",
      "target_audience": [
        "Data Engineers willing to learn how to integrate Snowflake with ChatGPT",
        "Software Developers looking at Snowflake and ChatGPT integrations",
        "Data Architects willing to know about all ChatGPT-to-Snowflake configurations",
        "Data Scientists looking for an overview of different ChatGPT-to-Snowflake architectures",
        "Technical Managers who need an overview of possible integrations of Snowflake with ChatGPT"
      ]
    },
    {
      "title": "MERN Stack News Application with Tailwind CSS",
      "url": "https://www.udemy.com/course/mern-stack-news-application-with-tailwind-css-2022/",
      "bio": "Build a Full stack News Portal Application with React , Node , Express , Mongo DB",
      "objectives": [
        "Creating Full Stack Applications with React , Node , Express , Mongo",
        "Handling Complex data without state management tools like redux",
        "Creating Mongo DB Models , Schemas",
        "The most popular text editor for creating content like draftjs",
        "Deploying a full stack application to live server without any cost"
      ],
      "course_content": {},
      "requirements": [
        "Javascript Basics",
        "React Basics"
      ],
      "description": "Hello, Welcome TO The Course MERN Stack News Application.\nThe Different Technologies we will use in this application are\nReact - For Front End\nTailwind CSS - For UI / Styling\nNode JS - For Backend Run-Time Environment\nExpress JS - For Backend Framework\nMongo DB - For Database\nThe topics that we will cover in this course are\n\n\nComplete USER authentication with Protected Routes concept\nALL CRUD operations for the news items like create, read, update, delete\nHandling Complex data without state management tools like redux\nCreating Mongo DB Models, Schemas\nThe most popular text editor for creating content like drafts\nDeploying a full-stack application to a live server without any cost\nStates, Props, Routing, HTTP Calls In React\nIn the complete application, we will use only functional/stateless components in React.\nFor Styling and UI we will the latest and tending utility CSS framework Tailwind CSS.\nWe will not use any external CSS frameworks or libraries like bootstrap/material UI etc.\nWe will build every piece of the component in the application from scratch with Tailwind CSS\nWe will learn to implement complex responsive layouts with tailwind CSS\n\n\nPre Requisites\n-------------------------------------------------------------------------------\nReact\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications\nTailwind CSS\nTailwind CSS is basically a utility-first CSS framework for rapidly building custom user interfaces. It is a highly customizable, low-level CSS framework that gives you all of the building blocks you need to build bespoke designs without any annoying opinionated styles you have to fight to override.\nNode\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.",
      "target_audience": [
        "Students who are passionate about full stack web development",
        "Students who want be a master in MERN",
        "Students who want build complex layouts without using any CSS Frameworks like Bootstrap , Material UI etc",
        "Making responsive applications with Tailwind CSS",
        "Deploying to Live Server"
      ]
    },
    {
      "title": "Shopify Development Fundamentals – Practice Tests 2025",
      "url": "https://www.udemy.com/course/shopify-developer-certification-practice-tests/",
      "bio": "Ace Your Shopify Development Exam with These Expert-Curated Tests",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is designed to simulate the real exam format and includes multiple-choice questions that mirror the types of topics covered in the actual assessment. You'll receive detailed explanations for each answer to help you identify areas for improvement and deepen your understanding of key Shopify development concepts.\nBy taking this course, you'll be able to:\nUnderstand the format and structure of the Shopify Development Fundamentals certification exam\nIdentify gaps in your knowledge across key areas like theme customization, Shopify data model, and API integration\nGain confidence and improve your chances of success on the actual test\nPractice applying theoretical knowledge to practical scenarios you’ll face as a Shopify developer\nStrengthen your grasp on essential tools and best practices used in Shopify development\nWhether you're a freelancer, agency developer, or someone looking to earn a Shopify Verified Skills badge, this practice test is the ideal way to assess your exam readiness and reinforce your skills. This course complements the official Shopify Partner Academy learning path, offering you an effective way to prepare through targeted practice questions and focused review.\nAdditionally, this practice test will help you manage your exam time effectively and reduce anxiety by familiarizing yourself with question types and exam pacing.",
      "target_audience": [
        "Aspiring Shopify developers preparing for the Shopify Development Fundamentals certification",
        "Freelancers or agency professionals looking to validate their Shopify skills with a recognized badge",
        "Anyone who has completed the Shopify Partner Academy: Development Fundamentals course and wants to assess their readiness",
        "Learners who prefer to practice exam-style questions before attempting the official proctored assessment"
      ]
    },
    {
      "title": "Build 2+ SaaS Full Stack Projects with Next.js",
      "url": "https://www.udemy.com/course/learn-building-nextjs-saas-apps/",
      "bio": "Build your Micro SaaS (PDF AI Analysis, Previewer) with Authentication (Clerk) , Payments (Stripe) & Database (Supabase)",
      "objectives": [
        "Next.js to build and deploy a subscription-based SaaS platform from scratch",
        "Integrate Clerk for secure user authentication and streamlined signup/login flows",
        "Use Stripe to set up recurring payments, manage subscriptions, and handle billing processes",
        "Manage Data with Supabase and Prisma, performing CRUD operations while keeping everything organized"
      ],
      "course_content": {
        "Intro": [
          "Welcome"
        ],
        "How To Use GitHub In Simplest Way": [
          "GitHub Desktop App Intro and Basics",
          "How To Clone a Repository",
          "Initializing a Repository",
          "How to Manage New Changes in Your Project Files (Source Control)"
        ],
        "Micro SaaS: AI PDF Analysis": [
          "Intro and Demo: AI PDF Analysis Micro SaaS",
          "Resources (full code) & Updates or Fixes",
          "Setup, Folder Structure",
          "Navbar",
          "Landing Page Setup and Hero Section",
          "Button Glowing Component",
          "Dashboard Content",
          "Payment Success Message",
          "Product Design",
          "Handle Analyze Start",
          "PDF Utils",
          "Extract Text From PDF",
          "Rate Limiter",
          "API Analyze Route",
          "Gemini API",
          "Finalizing and Testing handleAnalyze",
          "Format Summary Content",
          "Clerk API Key",
          "Stripe API Key",
          "Supabase API Key",
          "Sign In, Sign Up",
          "Clerk Webhook Part 1",
          "Prisma Setup",
          "Clerk Webhook Part 2",
          "Clerk Webhook Test",
          "Stripe Integration",
          "Stripe Webhook",
          "Check Auth and Subscription Function",
          "Pricing Page",
          "Payment Success/Cancelled Page",
          "Redirect Component",
          "Deployment"
        ],
        "Micro SaaS: Thumbnail Previewer": [
          "Intro and Demo: Thumbnail Previewer",
          "Resources (full code) & Updates or Fixes",
          "Setup",
          "Navbar and Theme Settings",
          "User Interface",
          "Clerk First Setup",
          "Prisma",
          "Supabase",
          "Clerk Webhook",
          "Stripe Setup & Webhook",
          "Payment Pages",
          "Sign In, Sign Up",
          "Subscription Check",
          "Product",
          "Landing Page - Hero Animation Container",
          "Landing Page - Steps",
          "Landing Page - Demo",
          "Landing Page - FAQ",
          "Landing Page - Pricing",
          "Landing Page - Footer & Updates",
          "Landing Page - New Navbar",
          "Profile Page",
          "Channel Name",
          "Deployment"
        ]
      },
      "requirements": [
        "HTML and CSS Basics",
        "React Basics",
        "JavaScript Basics"
      ],
      "description": "I was thinking about how to create a product that I could build on top of… how to manage users who buy my product… how to add new features over time… but I didn’t want to start a full startup or a company. I wanted to start small—even smaller than a SaaS. A Micro SaaS. We will build 1x AI Powered and 1x without AI functionality.\nI wanted to learn how to ship ideas into production, market them, and build products that people actually use. I needed a starting point. And that starting point was Micro SaaS.\nI started studying how SaaS architectures should be structured, how to launch a product, and what it takes to bring an idea to life. And the best way? Deliver products you're passionate about and prepare for that one idea that will be THE product.\nThat’s exactly what we’ll be building in this course—a fully functional Micro SaaS product/products where you’ll experience the full process of launching a SaaS application:\n- Building the application using Next.js\n- Building the landing page\n- Maintaining a good design for the SaaS, not just focusing on the backend\n- Styling with TailwindCSS using a mobile-first approach\n- Managing authentication using Clerk\n- Prisma ORM (to connect and talk with a database), Supabase as a database\n- Handling subscriptions with Stripe\n- Deploying the application so real users can sign up\n\nLet's have some fun. Let's build. Let's learn how to create landing pages, how to do functional testing for our applications, how to connect third-party services, how to ship SaaS products without relying on starter kits from across the internet, and how to enjoy the process. Looking forward, to see you in the lessons!",
      "target_audience": [
        "This course is perfect for web developers eager to create practical, subscription-based SaaS applications using Next.js.",
        "This course is perfect for web developers to gain practical knowledge in Next.Js, React, TailwindCss and integration of third party services."
      ]
    },
    {
      "title": "LEARNING PATH: Webpack: Web Development with Webpack",
      "url": "https://www.udemy.com/course/learning-path-webpack-web-development-with-webpack/",
      "bio": "Boost your application's performance with Webpack",
      "objectives": [
        "Learn to improve workflows with Webpack build tools",
        "Know to handle assets inside your project",
        "Explore on-demand code loading",
        "Learn to create a message board website",
        "Build your own modern stateful web applications",
        "Explore how to track your application state in real time with Firebase",
        "Use components as a unit of styling",
        "Spread props to wrap components",
        "Set up a Firebase project",
        "Master deploying with Babel, code splitting, and ES2015",
        "Learn how to add posts and styling"
      ],
      "course_content": {
        "Deploying Web Applications with Webpack": [
          "The Course Overview",
          "Installation and Setup",
          "Installation and Setup (Continued)",
          "Using Webpack in a Basic Application",
          "Using Webpack in a Basic Application (Continued)",
          "Using Webpack in Your Web Application",
          "Running the Basic Application",
          "Running the Basic Application (Continued)",
          "Bundling Process",
          "Introduction to Loaders",
          "Babel Setup and Configuration for ES2015",
          "Loader Examples",
          "Handling Stylesheets with Webpack",
          "Handling Stylesheets with Webpack (Continued)",
          "Handling Images and Image Compression",
          "Configuring Public Paths",
          "Code Splitting - Introduction",
          "Overriding the Dockerfile Defaults",
          "Code Splitting - Dynamic Imports",
          "Lazy Loading",
          "Webpack 3 Performance Improvements"
        ],
        "Webpack for React Applications": [
          "The Course Overview",
          "A React Application",
          "Deliverables with Webpack",
          "Deliverables with Webpack (Continued)",
          "Setting Up Babel",
          "Setting Up Babel (Continued)",
          "Webpack Configuration - Loading Assests",
          "Webpack Configuration - File Loader",
          "Webpack Configuration - SCSS",
          "Performance Increase",
          "Cache Busting",
          "Project Files Cleanup",
          "Using Dev Server in Your Application",
          "Best Practices with Webpack Dev Server",
          "React Router and Code Splitting",
          "Getting an App Production Ready",
          "Deployments with GitHub Pages",
          "Deployments with AWS S3",
          "Dynamic Sites - Node and Webpack Integration",
          "Deployments to AWS EBS"
        ]
      },
      "requirements": [
        "Prior knowledge of JavaScript and ES2015 syntax is assumed",
        "Basic knowledge of React is needed"
      ],
      "description": "Webpack is a module bundler for modern JavaScript applications. So if you are a developer and want to master Webpack in order to optimize the performance of your applications by improving workflows, then go for this Learning Path.\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.  The highlights of this Learning Path are:\nLearn how to install, configure, and run Webpack\nLean to apply on-demand code loading to your application\nLearn how to improve your application by deploying to dynamic cloud hosting sites such as AWS\nLet’s take a quick look at your learning journey. To start off with, you will be introduced to Webpack’s basic functionalities and discover how Webpack recursively builds a dependency graph that includes every module needed by your application and all those modules are then packaged into one or more bundles. You will learn many additional capabilities and features available in Webpack using loaders. You will also learn how to handle assets with CSS Loaders and deal with images and image compression. Further, you will explore the latest features provided by Webpack. Next, you will learn how to use Webpack with a real project. You will be provided with a dynamic responsive photo gallery application written in React, along with minimal to basic Webpack configuration and will be shown how to apply advanced features such as deploying with Babel, code splitting, and ES2015. Finally, you will be able to deploy your application to dynamic cloud hosting sites such as AWS in order to improve the existing application.\nBy the end of this Learning Path, you will have a deep understanding of Webpack and be able to create and deploy your applications.\nMeet Your Expert:\nWe have the best works of the following esteemed author to ensure that your learning journey is smooth:\n\nColibri is a technology consultancy company founded in 2015 by James Cross and Ingrid Funie. The company works to help their clients navigate the rapidly changing and complex world of emerging technologies, with deep expertise in areas such as big data, data science, machine learning, and cloud computing. Over the past few years they have worked with some of the world's largest and most prestigious companies, including a tier-1 investment bank, a leading management consultancy group, and one of the world's most popular soft drinks companies, helping each of them to better make sense of its data and process it in more intelligent ways. The company lives by its motto: Data -> Intelligence -> Action. Alexandru Toea is a Senior Frontend developer. He is currently working with various startups specializing in building complex React applications for both public and internal use. Alexandru started his frontend developer career by building his school's websites around 10 years ago and has constantly advanced his knowledge of web technologies ever since. He is currently working with a technology startup to provide it with the tools required for quick expansion. He has spent the past four years working with React and Redux as well as building efficient real-time applications for both startups and corporate clients. He has a passion for efficient and clean code, while also staying on top of all the new developments in the front-end world. On the site he is also an Authorized Google Trainer, teaching for companies such as Solvay and Lucas Films.",
      "target_audience": [
        "This Learning Path is for developers who want to use Webpack for improving the performance of their applications. Developers who are interested in applying the principles of Webpack to large existing React applications can also take up this Learning Path."
      ]
    },
    {
      "title": "Mastering Python 3 Programming",
      "url": "https://www.udemy.com/course/mastering-python-3-programming/",
      "bio": "Get acquainted with the concepts of Python 3.x programming to enhance the performance of your code",
      "objectives": [
        "Get hands-on experience developing various kinds of Python applications on different platforms, architectures, and tools",
        "Build four real-world applications: a stock portfolio, a mortgage refinance analysis tool, an email automation system, and a database-driven web app",
        "Create Graphical User Interfaces for desktop and mobile applications",
        "Know how to create HTTP-based microservices to build efficient and flexible server architectures",
        "Learn lambda expressions, generators, and iterators to speed up your code",
        "Gain a solid understanding of multiprocessing and multithreading in Python for parallelism",
        "Optimize performance and efficiency by leveraging NumPy, SciPy, and Cython for numerical computations",
        "Load large data using Dask in a distributed setting",
        "Learn reactive programming in Python"
      ],
      "course_content": {
        "Real World Projects in Python 3.x": [
          "The Course Overview",
          "Setting up the Python Environment",
          "Getting Started with the pandas_datareader",
          "Expanding to a List of Symbols",
          "Adding an Option Menu",
          "Implementing A Menu",
          "Defining Functions",
          "Defining More Functions",
          "Wrapping Up",
          "Working with Graphical User Interface (GUI)",
          "Assigning Events",
          "Setting Up the Refinance App",
          "Adding User Input",
          "Calculating Payments",
          "Adding Comparison Controls",
          "Evaluation Function",
          "Using Python to Send Email",
          "Working with External Files",
          "Working with Excel Spreadsheets",
          "Setting up the Email App",
          "Reading and Deleting Contacts",
          "Adding Contacts",
          "Completing the Email Functionality",
          "Setting Up the Environment",
          "Adding an App to the website",
          "Defining the Model",
          "Administrating the model",
          "Creating the Homepage",
          "Creating the Quotes Page",
          "Test your knowledge"
        ],
        "Mastering Python 3.x": [
          "The Course Overview",
          "Installing Python",
          "Using the Command Line Tools",
          "Introducing Kivy and Kv",
          "Responding to User Actions",
          "Properties and Basic Reactive Programming",
          "ReactiveX for More Advanced Reactive Programming",
          "Writing Our Oware Client",
          "Introducing Async IO and Coroutines",
          "Creating an HTTP Microservice with asyncio and aiohttp",
          "Using ReactiveX Together with asyncio",
          "Writing Our Oware Server",
          "Using Type Annotations to Make Our Code More Bug-Resistant",
          "Using Tests to Find Bugs, and Keep Them from Coming Back",
          "Test-Driven Development",
          "Hardening Our Oware Code",
          "Using Concurrent.futures to Launch and Manage Worker Processes",
          "Using Multiprocessing to Handle Lower Level Multi-process Concurrency",
          "Using Subprocess to Handle Very Low Level Multi-process Concurrency",
          "Optimizing Inter-Process Communication with __getstate__ and __setstate__",
          "Decorators on Functions and Classes",
          "Non-Type Annotations as Metadata on Functions and Parameters",
          "Descriptors to Control Attribute Access",
          "Context Managers for Active Scopes and RAII",
          "Distributing Applications in ZipApp Format",
          "Distributing Libraries in Wheel Format",
          "Distributing Programs Using PyInstaller",
          "Compiling Python Using Cython",
          "Test your knowledge"
        ],
        "High-Performance Computing with Python 3.x": [
          "The Course Overview",
          "Exploring Python Datatypes",
          "Using Lambda Expressions",
          "Comprehensions for Speedups",
          "Generators and Iterators",
          "Using Decorators for Time Analysis",
          "Introduction to the Threading Module",
          "Using Threads with Locks",
          "Global Interpreter Lock",
          "Multiprocessing in Python",
          "Using a Pool of Workers",
          "Introduction to NumPy",
          "Exploring NumPy Arrays",
          "Indexing in NumPy Arrays",
          "Operations and Broadcasting on NumPy Arrays",
          "Performance Comparison of NumPy Arrays",
          "Combining SciPy with NumPy",
          "Introduction to Cython",
          "Implement a Program Using Cython",
          "Time Analysis of a Cython Program",
          "Cython Data Types",
          "Using Cython Functions",
          "Combining NumPy and Cython",
          "Introduction to Numba",
          "Setting Up Numba",
          "Creating Your First Program with Numba",
          "Digging Deeper into Numba",
          "Threading Using Numba",
          "Performance Comparison with Numba",
          "Introduction to Synchronous Programming",
          "Understanding Asynchronous Programming",
          "Asynchronous Programming in Python",
          "Distributed Systems Architecture",
          "Introduction to Dask",
          "Setting Up Dask",
          "Blocked Algorithms and Dask Arrays",
          "Writing Your First Program Using Dask",
          "Using @delayed to Parallelize Code",
          "Performance Comparison with Dask",
          "Introduction to Reactive Programming",
          "Observables and Observers",
          "Overview of Data Operators",
          "Reactive Programming in Python Using RxPy",
          "Using Data Operators with RxPy",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Basic Python programming knowledge is required."
      ],
      "description": "Python is an easy to learn, powerful programming language. It’s elegant syntax and dynamic typing, together with its interpreted nature, makes it an ideal language for scripting and rapid application development in many areas and on most platforms. If you're a developer who wishes to build a strong programming foundation with this simple yet powerful programming language Python, then this learning path is for you.\nThis practical course is designed to teach you the programming aspects of Python 3.x and use them to build powerful applications. You will begin with exploring the new features of this version and build multiple projects to get hold of the topic. You will learn about event-driven, reactive programming, error handling, asynchronous programming, decorators and non-type annotations, descriptors and distributed computing in Python. You will also build high-performance, concurrent applications in Python and also work with some of the powerful libraries such as NumPy and SciPy. Next, you will perform large-scale computations using Dask and implement distributed applications in Python. Finally, you will learn reactive programming with Python to construct robust and responsive applications.\nBy the end of this course you will be well-versed with the programming concepts in Python 3.x to build Python applications in a better and efficient manner.\n\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nMatthew Macarty has taught graduate and undergraduate business school students for over 15 years and currently teaches at Bentley University. He has taught courses in statistics, quantitative methods, information systems and database design.\n\n\nDaniel Arbuckle holds a Doctorate in Computer Science from the University of Southern California, where he specialized in robotics and was a member of the nanotechnology lab. He now has more than ten years behind him as a consultant, during which time he’s been using Python to help an assortment of businesses, from clothing manufacturers to crowdsourcing platforms. Python has been his primary development language since he was in High School. He’s also an award-winning teacher of programming and computer science.\n\n\nMohammed Kashif works as a Data Scientist at Nineleaps, India, dealing mostly with graph data analysis. Prior to this, he was working as a Python developer at Qualcomm. He completed his Master's degree in computer science from IIIT Delhi, with specialization in data engineering. His areas of interest include recommender systems, NLP, and graph analytics. In his spare time, he likes to solve questions on StackOverflow and help debug other people out of their misery. He is also an experienced teaching assistant with a demonstrated history of working in the higher-education industry.",
      "target_audience": [
        "This course is for Python Programmers who want to extend their skillset to scale their code and improve their code performance."
      ]
    },
    {
      "title": "Build a complete distributed app using .Net Aspire",
      "url": "https://www.udemy.com/course/build-a-complete-distributed-app-using-net-aspire/",
      "bio": "A complete guide to building an app using Aspire with .Net services and Next.js from scratch",
      "objectives": [
        "Build a complete microservices application using .NET and Aspire for cloud-ready distributed systems",
        "mplement secure authentication and authorization flows with Keycloak in a real-world app",
        "Apply event-driven architecture patterns with WolverineFx for messaging and reliability",
        "Develop a modern front-end with Next.js App Router, Tailwind, and Zustand for state management",
        "Integrate services with PostgreSQL, containerization, and API gateways for scalable deployments",
        "Deploy and manage your application in production environments using Docker and Azure"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of C# and .NET development (you don’t need to be an expert).",
        "Some familiarity with JavaScript or TypeScript for working with the Next.js front end.",
        "A computer capable of running Docker and your preferred IDE installed (min 8GB of RAM recommended).",
        "No prior knowledge of Aspire, Wolverine, or Keycloak is required — everything will be explained step by step."
      ],
      "description": "Are you ready to take your .NET skills to the next level and build modern distributed applications?\nIn this hands-on course, you’ll learn how to design and develop a real-world, Stack Overflow–style app using the latest technologies in the .NET ecosystem and beyond.\nWe’ll start from scratch and guide you step by step through building a complete system with .NET 9, Aspire and WolverineFx. You’ll discover how to structure microservices, implement event-driven messaging, and manage data with PostgreSQL — all while keeping your application scalable and reliable.\nOn the front end, you’ll build a modern UI using Next.js (App Router), styled with Tailwind, and managed with Zustand for state management. Along the way, you’ll integrate Keycloak for secure authentication and authorization, giving your app production-ready identity features.\nBy the end of this course, you will not only understand the theory behind distributed systems but also have a fully working application that you can run locally with Docker or deploy to the cloud. More importantly, you’ll gain the practical skills to build, extend, and scale real-world systems in your own projects or career.\nWhether you’re a .NET developer looking to level up, a full-stack developer curious about Aspire, or simply someone who wants to see how all the pieces fit together in a modern distributed system — this course is for you.\nEnroll today, and let’s start building the future of apps with .NET Aspire and Next.js!",
      "target_audience": [
        "NET developers who want to go beyond monoliths and learn modern distributed systems with Aspire",
        "Full-stack developers interested in combining .NET backends with a Next.js front end",
        "Anyone who wants to build a real-world, production-ready app using today’s tools"
      ]
    },
    {
      "title": "API Quiz Game JavaScript Project Google SpreadSheet Data",
      "url": "https://www.udemy.com/course/javascript-quiz-game/",
      "bio": "Explore how to connect to a Google Sheet Data JSON feed and use the data to create a dynamic web quiz game application",
      "objectives": [
        "How to connect to a web api",
        "How to use JavaScript DOM to create page elements",
        "Loop through JSON data",
        "Explore Google Web App data from spreadsheet"
      ],
      "course_content": {
        "Introduction to connecting to a web API with Google Sheet Data": [
          "Introduction Dynamic Quiz Introduction",
          "Web development environment Setup",
          "Project Setup HTML and CSS",
          "Source Code HTML",
          "JavaScript Select Page Elements",
          "Source Code JS",
          "Get JSON data Request spreadsheet data.",
          "JavaScript Elements Create Question",
          "Source Code JS",
          "Check Answer Next Question",
          "Source Code JS",
          "Bug Fixes Updates to Game.",
          "Random Order Array",
          "Source Code JS",
          "Make it look Nice CSS",
          "Source Code CSS",
          "Get Google Web App Data",
          "Google Script Source",
          "Google Web App Data 2",
          "Google Script Source Code",
          "Updated IDE output Sheet data to JSON web app URL",
          "source Code New IDE",
          "Dynamic Quiz Conclusion"
        ],
        "Google Apps Script Code Examples": [
          "UI menu Item how to add to sheet",
          "UI menu items source code Google Apps Script Sheet UI code Example",
          "Learning Google Apps Script PDF Guide"
        ]
      },
      "requirements": [
        "JavaScript HTML and CSS",
        "Computer access and internet",
        "Programming experience"
      ],
      "description": "Explore how to connect to a Google Sheet Data as a JSON feed and use the data to create a dynamic web quiz game application\nWelcome to the course that will show you how you can apply JavaScript to connect to a web API - get JSON data and build a JavaScript Quiz game from scratch using the data coming from a Google Spreadsheet.  As a bonus the course will also show you how you can setup your own spreadsheet webapp using Google Script so that you can customize the content and have your very own version of the questions in your application.\nYOU MUST HAVE JAVASCRIPT EXPERIENCE FOR THIS COURSE.\nSource code is included - please try the code as you work through the lessons.\nCourse Covers applying JavaScript code\nHow to setup the basic Project shell with HTML and CSS\nHow to use JavaScript query selector to select page elements as JavaScript objects\nUse fetch to connect to the web app URL for data source\nJSON data and how to prepare it in JavaScript\nCreating a function to display data content in the web application\nLogic to approach game design and building of the web application\nNext steps for player and using Game data\nDebugging and advancing game design\nApply styling for a better looking game\nConclude the game quiz - make it dynamic so driven by the JSON data and flexible to change as the data changes.\nCreate a Google Script web app using Google Spreadsheet data\nStructure JSON from an array object\nConnecting sheet data to your web application\nEnjoy learning have fun!!!!\nTry the code for yourself and explore what you can do with JavaScript\nFast Friendly support to help answer any questions you might have and to help clarify content is always available in the Q&A section.  Taught by an instructor with over 20 years real world experience ready to help you learn more.  Step by step training resources and source code is also included to get you started quickly.",
      "target_audience": [
        "Web developers",
        "Web master",
        "Anyone who wants to practice JavaScript with API connection"
      ]
    },
    {
      "title": "Angular and NodeJS: A Practical Guide with Typescript",
      "url": "https://www.udemy.com/course/angular-node-admin/",
      "bio": "NodeJS with Typescript, Angular CLI, Event Emitters, MySQL, TypeORM, Upload Images, Export CSV",
      "objectives": [
        "Use NodeJS with Typescript",
        "Use TypeORM with MySQL",
        "Generate Jwt Token",
        "Login with HttpOnly Cookies",
        "Upload Images",
        "Export CSV files",
        "Angular CLI",
        "Angular Animations"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "NodeJS": [
          "Setup",
          "Typescript",
          "Express",
          "Routes",
          "Validation",
          "TypeORM",
          "Register",
          "Login",
          "Jwt",
          "Authenticated User",
          "Logout",
          "Environment Variables",
          "Middlewares",
          "Profile",
          "Users CRUD",
          "Roles",
          "Permissions",
          "Seeders",
          "Roles and Permissions CRUD",
          "Products",
          "Pagination",
          "Uploading Images",
          "Static Routes",
          "Orders",
          "Typescript Getters",
          "Export CSV",
          "Raw SQL",
          "Permission Middleware"
        ],
        "Angular": [
          "Setup",
          "Template",
          "Modules",
          "Routes",
          "Register Form",
          "Http Client",
          "Login",
          "Services",
          "Authenticated User",
          "Interfaces",
          "Logout",
          "Inputs",
          "Interceptors",
          "Profile",
          "Event Emitters",
          "Redirecting",
          "Users",
          "Pagination",
          "Deleting Users",
          "Users Create Form",
          "Creating Users",
          "Updating Users",
          "Abstract Classes",
          "Roles",
          "Roles Create Form",
          "Form Arrays",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Updating Products",
          "Orders",
          "Nested Tables",
          "Animations",
          "Export CSV",
          "Chart"
        ]
      },
      "requirements": [
        "Basic Javascript Knowledge"
      ],
      "description": "Learn how to create an Admin App using Angular and NodeJS.\nIn NodeJS you will learn:\nUse TypeORM and connect with MySQL\nUse Typescript\nUse Access Middlewares\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV's\nIn Angular you will learn:\nHow to use Angular CLI\nCreate classes, interfaces, abstract classes\nUse interceptors\nCreate public and private routes\nAngular Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nUse Reactive Forms\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "Comprehensive CSS & Bootstrap Practice Exams for Interviews",
      "url": "https://www.udemy.com/course/css-and-bootstrap-practice-exams-for-interviews/",
      "bio": "Take Comprehensive CSS and Bootstrap Practice Exams for Certification and interviews.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Comprehensive CSS and Bootstrap Practice Exams for Certification and Interviews:\nCSS is the language we use to style an HTML document.\nBootstrap is the most popular HTML, CSS, and JavaScript framework for developing responsive, mobile-first websites.\nWith CSS and Bootstrap, you can quickly design and customize responsive websites.\nAre you ready to test your knowledge of CSS and Bootstrap?\nIn this course, you will take practice tests on CSS and Bootstrap and get ready to answer Interview questions.\nThe exam questions will be so comprehensive and cover all aspects of CSS and Bootstrap.\n\nCourse Prerequisites:\nStudents should have a stable internet connection to answer practice exams online.\nStudents should have prior knowledge of CSS.\nStudents should have prior knowledge of Bootstrap.\nStudents should be curious about CSS.\nStudents should be curious about Bootstrap.\nStudents should be well prepared to answer exam questions that cover various CSS topics.\nStudents should be well prepared to answer exam questions that cover various Bootstrap topics.\nIn this Course:\nStudents will ensure their knowledge of CSS.\nStudents will ensure their knowledge of Bootstrap.\nStudents will test their CSS skills and take online CSS practice exams.\nStudents will test their Bootstrap skills and take online Bootstrap practice exams.\nStudents will be able to answer CSS Interview questions.\nStudents will be able to answer Bootstrap Interview questions.\nAll Practice Exams' Questions are Multiple Choice Questions\nEach Practice Exam can take about (30-40) minutes to answer all multiple-choice questions.\nMy advice to all students:\n- Do not cheat.\n- Study well.\n- Test your skills.\nI will be available to answer students' questions, so send me your questions in a message.\nI hope that you become more confident about your skills in CSS and Bootstrap.\nI hope you find these practice exams valuable and interesting.\nStudy hard, be well prepared, and Good Luck to all students!",
      "target_audience": [
        "Beginner Web designers curious about CSS and Bootstrap",
        "University graduates who are looking for a web designer job"
      ]
    },
    {
      "title": "Advanced NextJS WooCommerce REST API, TailwindCSS - Part-2",
      "url": "https://www.udemy.com/course/advanced-nextjs-woocommerce-with-rest-api-and-tailwindcss-2/",
      "bio": "Learn how to build a React WooCommerce Theme With Next.js and REST API",
      "objectives": [
        "Building Nextjs Application",
        "Decoupled Application With WordPress And WooCommerce",
        "Building A Headless CMS",
        "WooCommerce REST API",
        "Add To Cart, View Cart, Checkout, Stripe Integration."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript"
      ],
      "description": "This is part two of the course \"Advanced NextJS WooCommerce With REST API And TailwindCSS\"\nIf you haven't already please complete the previous part of the course first. It's available under my courses.\nWhat this course will cover:\nHow to create a react Application with next js framework.\nThis uses the WordPress REST API to pull the data and render on the front-end.\nIt uses the WooCommerce WordPress plugin.\nWe will learn:\nRun a production build\nUnderstanding Add to cart APIs\nWriting functions for Add To Cart, View cart\nCustomizing Tailwind configuration\nUsing React Context API to store the cart data.\nAdd to Bag Features\nAdd To Cart\nGet Cart\nUpdate Cart.\nDelete Cart\nYou will also learn how to add static Google Fonts with Tailwind CSS.\nCreating cart page and displaying all the products with their title, description, product image etc.\n\n\nEvery developer has something to say about WordPress, and it's not always flattering. Far from it. However, even its most avid detractors are forced to take notice of this feature, because it has already transformed the way we use the popular CMS.\nWordPress REST API is a huge step forward for frontend developers looking to combine the power of JavaScript frameworks like React (or Vue.js) with WordPress.\nThis is exactly what I want to do today with this demo of the WordPress REST API in the work.\nWordPress can now be used as a headless CMS with WooCommerce.\nThis offers a whole new world of possibilities for developers, as the frontend of WordPress doesn't need to be \"WordPress\"—PHP-generated views. The ever-growing number of frontend frameworks can now be hooked up to a WordPress backend to develop websites and applications.",
      "target_audience": [
        "Beginners, Intermediate, Advanced"
      ]
    },
    {
      "title": "Three.js Shading Language and Signed Distance Fields",
      "url": "https://www.udemy.com/course/threejs-shading-language/",
      "bio": "Learn all about the Three.js Shading Language while specialising in Signed Distance Fields.",
      "objectives": [
        "Threejs Shading Language",
        "Signed Distance Fields",
        "Using TSL with import maps or a build tool",
        "Setting up a development environment",
        "TSL imports or color, texture, convertColorSpace and positionLocal",
        "Writing Fragment and Vertex Shaders",
        "Generate patterns using fract, sin, cos, atan, floor, mod",
        "Drawing SDF lines and shapes in 2D and 3D",
        "Using Uniform and UniformArray",
        "Drawing distance lines",
        "Colouring 2D and 3D SDFs",
        "Raymarching",
        "Lighting 3D SDFs",
        "SDF Shadows",
        "SDF Reflections",
        "SDF Union, Intersect and Subtraction",
        "Ambient Occlusion",
        "Fresnel Effect",
        "Adaptive DPR",
        "Atmospheric Scattering",
        "Fractal Brownian Motion",
        "Gerstner/Tricoidal water algorithm",
        "Adding Clouds",
        "Domain Repetition",
        "Mandelbulb, Juliabulb & Kleinian Inversion Fractals",
        "and much more"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started",
          "What Do We Have",
          "PositionLocal",
          "Some Patterns",
          "Lines : Part 1",
          "Lines : Part 2",
          "Uniform and UniformArray",
          "Signed Distance Fields",
          "Distance Lines",
          "Colouring 2D SDFs",
          "Practice",
          "Add Interactivity",
          "Raymarching",
          "Lighting 3D SDFs",
          "SDF Shadows",
          "SDF Reflections",
          "Adaptive DPR",
          "Colouring 3D SDFs",
          "Atmospheric Scattering",
          "Ambient Occlusion",
          "Fresnel Effect",
          "Fractal Brownian Motion : Part 1",
          "Fractal Brownian Motion : Part 2",
          "Refactoring",
          "Adding Water",
          "Clouds",
          "Domain Repetition",
          "Mandelbulb",
          "Juliabulb",
          "Kleinian Inversion Fractal"
        ]
      },
      "requirements": [
        "This is an intermediate course about Three.js and you should already have some experience using it.",
        "You will need a modern graphics card capable of running GLSL and WGSL shader code."
      ],
      "description": "Three.js Shading Language (TSL) is a framework built to simplify shader development within the Three.js ecosystem.\nSigned Distance Fields are a way to draw scenes and animations predominantly using mathematical functions.\nYou can draw anything with Signed Distance Fields, and TSL makes that more accessible for developers, especially those without deep knowledge of low-level GLSL, WGSL or graphics programming.\nSo, in the course, we will cover,\nBasic environment development setup,\nImporting the required libraries,\nUsing import Maps or a bundler / build tool,\nDiscuss the prerequisites of a TSL scene,\nFragment Shader coordinates,\nCreate several animated patterns from easy to more advanced,\nDraw various styles of lines,\nImplement uniforms and uniform array,\nInteract with our scenes using a GUI,\nLearn the basics of sign distance Fields,\nDraw distance lines using SDF information,\nColouring and animating 2D SDFs,\nPractice by building something and adding keyboard interactivity,\nLearn the basics of Ray marching,\nLighting 3D SDFs,\nUsing Lambertian, Ambient and Phong specular,\nUsing hard and soft shadowing,\nImplement SDF reflections,\nImplement adaptive device pixel ratio,\nColouring and animating 3D SDFs,\nAdd atmospheric Scattering,\nImplement, Ambient Occlusion,\nAnd apply Fresnel Effect,\nLearn all about Fractal Brownian Motion,\nAdd Gerstner/Trochoidal algorithm water effect,\nAdd Clouds,\nDomain Repetition,\nMandelbulb, Juliabulb & Kleinian Inversion fractals,\nand much more\nBy using TSL's node-based shader graph system, developers can create and manage shaders without needing to write complex GLSL or WGSL code manually.\nTSL is renderer-agnostic, meaning shaders created with it work seamlessly across different rendering backends like WebGL and WebGPU.\nSince TSL is written at the Javascript or TypeScript layer, along side your existing Three.js code, you will be able to benefit from the features provided by your IDE, such as IntelliSense code completion, code formatting and linting. Your final production code can also benefit from tree shaking provided by your bundler.\nThanks for taking part in my Three.js Shading Language (TSL) and Signed Distance Fields course.\nSean",
      "target_audience": [
        "People who have experience with Threejs and want to write shader code using the techniques of signed distance fields."
      ]
    },
    {
      "title": "Learn Video Editing, Animation and VFX from Scratch",
      "url": "https://www.udemy.com/course/learn-video-editing-animation-and-vfx-from-scratch-free/",
      "bio": "Master The Art Of Video Editing, Animation and VFX, and watch your YouTube channel grow!",
      "objectives": [
        "Throughout this course students will develop the skills and theories needed to edit movie-like videos, helping them land a job or become their own boss.",
        "Animation",
        "Video Editing",
        "Visual Effects (VFX)"
      ],
      "course_content": {},
      "requirements": [
        "As a full-on beginner course made for everybody, The Video Editing Course is simple and can be learned and put into practice at any place, any time. All you simply need to have is a working device (computer, laptop etc) and internet connection."
      ],
      "description": "The Video Editing Course/ Masterclass is a full-on beginner course, that covers a wide array of subjects, tailored for everybody, no matter their skill level. This course will primarily be focused on teaching the student, how to go from a beginner to master in video editing, animating, and VFX. The instructor, Hristijan Radulovski, will walk you through step-by-step up the video editing mountain from a simple beginner, where you will learn all the basics, to an intermediate, where you will be met with higher complexity topics, to a master of video editing, where you will learn such complex subjects that can lend you jobs in animation, video editing, and Visual Effects. The skills and subjects learned in this course if applied in your YouTube videos or other projects, will help you achieve great success, economic and social, increased views, more subscribers and a potential to unlock \"viral\" status, as well as high respect towards the time you spent editing your video, from your viewers. Trust me, your fan base will appreciate the effort you have put into your video editing project, to make your video stand out and be the best it can be. Overall, the instructor Hristijan Radulovski, will step-by-step walk you up the mountain and make sure you understand and can apply all the skills learned, no matter which path you choose, a job, or just for fun. STAY HEALTHY!!!",
      "target_audience": [
        "Beginner YouTubers looking to start off strong with their video editing game, Experienced YouTubers trying to take their video editing game to the max for increased views and \"viral\" potential, People interested in becoming videographers and landing jobs as video editors, animators and VFX artists. Professional videographers, animators and CGI artists looking to improve their game."
      ]
    },
    {
      "title": "MERN Stack Social Media Blog Posting Application (2022)",
      "url": "https://www.udemy.com/course/mern-stack-social-media-blog-app/",
      "bio": "Learn How to Build Social Media Blog Posting Application With MERN Stack",
      "objectives": [
        "Learn to build Blog Application With MERN Stack",
        "Use multiple collections of MongoDB",
        "Create Auto Login and Register/ Login / Logout Functionality",
        "Learn to make a complete Blog Posting App Of Multiple Users",
        "Create Modern UI UX Blog App"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction To MERN Stack and Project"
        ],
        "Building Backend For Blogs App": [
          "Introduction",
          "Setting Up Environment and Creating Basic Express Application'",
          "Configuring MongoDB Atlas and connecting to Database",
          "Creating Users Model Schema",
          "Creating Routes and Getting all users from database",
          "Creating User Signup Functionality",
          "Encrypting (Hashing) User's Password Before storing it to Database",
          "Creating User Login Functionality"
        ],
        "Building Blogs Backend": [
          "Introduction",
          "Creating Blog Model Schema",
          "Creating Route For Getting All Blogs From Database",
          "Creating Add Blog To Database Functionality",
          "Creating Blogs Update Functionality",
          "Creating Get Blog By ID Functionality",
          "Creating Blog Delete Functionality",
          "Wrapping Up"
        ],
        "Adding Relation Between User and Blogs": [
          "Relation Between User and Blogs",
          "Modifying Add Blogs To Database Functionality",
          "Modifying Delete Blog Request",
          "Creating Getting Blogs By User's ID Functionality",
          "Wrapping UP"
        ],
        "Building Blog Posting Frontend": [
          "Installing React App and Dependencies",
          "Creating Header Of Blog Application",
          "Adding React Router To Application",
          "Adding Redux For Authentication State",
          "Creating Login Page With Dynamic Form handling",
          "Sending Login Request to backend",
          "Modifying Login Request For Signup Functionality and Updating Redux State",
          "Fetching and displaying All Blogs From Database",
          "Fetching Logged In User's Blogs",
          "Creating Add Blogs To Database Functionality From Frontend",
          "Adding Edit and Delete Icons For Logged In User's Blogs",
          "Fetching Blog's Details From ID in URL and Setting Form Data",
          "Sending Request To Update Blog",
          "Deleting Blog On Delete Icon's Click",
          "Summary"
        ],
        "Optimizations and Basic Fixes": [
          "Fixing Redirecting Of Routes",
          "Fixing Card Style with Icon colors and Description",
          "Adding Protected Routes",
          "Changing Font with Google Fonts (Roboto) and Generating MaterialUI styles",
          "Fixing Auto Login State of User",
          "Wrapping Up"
        ],
        "Summary and Thank You": [
          "Summary and Thank You",
          "Wrapping Up"
        ]
      },
      "requirements": [
        "Basic React and JavaScript Knowledge Required"
      ],
      "description": "Hi, Welcome\nYes, you have read it right if you are here reading this description. This is a Blog Posting Application With MERN Stack In which the user will be able to login/signup and he/she will be able to post his / her blogs and will be able to view blogs of other users as well same like Facebook / Twitter functionality\nIf you are a complete beginner, then this course is perfect for you because I have explained every single step before moving ahead. And trust me you will learn a lot of things.\nAnd if you are already an intermediate MERN Developer, this will help you to grow your skills with creating Social Media Blog App with MERN Full Stack.\n\n\nWhat You will learn\n\n\nHow to Build a Blog Posting Application\nHow to Make a Responsive Blog App\nHow to build a Backend For a Blog Posting Application\nHow to encrypt a user's password before storing it in a database\nHow to Build Frontend with Blogs and Add Blog / Login Signup Functionality\nHow to Build a Modern UI UX Blog App\nHow to make the relation between 2 collections of MongoDB\n\n\nWe will use MERN Stack With this\nMongoDB: MongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License.\nExpressJS: Express.js, or simply Express, is a back-end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs. It has been called the de facto standard server framework for Node.js.\nReactJS: React is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications\nNodeJS: Node.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.\n\n\nSee you in the course.\nHurry",
      "target_audience": [
        "Beginner ReactJs Developers who wants to Learn MERN Full Stack With Creating Blog Application"
      ]
    },
    {
      "title": "Next JS Project Bootcamp:Build Netflix App & 2 More Projects",
      "url": "https://www.udemy.com/course/next-js-project-bootcamp-build-12-production-ready-projects/",
      "bio": "Learn Next JS By Building Real-World Apps With Tailwind CSS. Gain Practical Experience And Improve Your Next JS Skills.",
      "objectives": [
        "Build a Complete Photo Sharing App Project Using a Public API",
        "Build a Complete Real-World Corporate Web App Project",
        "How to Use Routing in Next JS",
        "How to Use Public APIs and HTTP Requests to Build a Real Next JS App",
        "How To Deploy A Next JS App To A Cloud Server Like Vercel",
        "Next JS with Tailwind CSS",
        "How Make Complete Responsive Website Using Next JS and Tailwind CSS",
        "Next JS Components and Their Various Features"
      ],
      "course_content": {},
      "requirements": [
        "Students don't need to have any prior knowledge to take this course. You will learn all from this course"
      ],
      "description": "Introducing the \"Next JS Project Bootcamp: Build 2 Production-Ready Projects,\" an extensive course that equips web developers with the knowledge and abilities necessary to succeed in the development of contemporary online applications using Next.js. This bootcamp provides practical information and hands-on experience to build powerful, real-world apps, regardless of expertise level.\nProject 1: Netflix Clone Web App\nDynamic Netflix Clone: Students will create a fully functional Netflix clone, using API responses to display movies, shows, and detailed information.\nFull UI Design: Build the entire UI of the Netflix clone, ensuring seamless navigation and a clean, modern layout, all styled with Tailwind CSS.\nResponsive & Adaptive: Leverage Tailwind CSS to make the app fully responsive, ensuring a consistent and user-friendly experience across various devices.\nCloud Deployment: Deploy the project to Vercel Cloud, ensuring fast and reliable access to the app, making it accessible from anywhere.\nProject 2: Photo Gallery Web App\nDynamic Photo Gallery: Students will learn to create a dynamic photo gallery with advanced search functionality using public APIs.\nModal Image Preview: Implement modal boxes for seamless image previews and enable intuitive navigation between images.\nResponsive Design: Utilize Tailwind CSS to ensure the web app is fully responsive across various devices, enhancing user accessibility and engagement.\n\n\nProject 3: Corporate Web Application\n\n\nPost Filtering: Learn to implement sophisticated post filtering options based on categories and tags to enhance user navigation and content discovery.\nYouTube Integration: Integrate YouTube videos directly into the application, allowing for dynamic content display and engagement.\nResponsive Layout: Design a responsive corporate website that adapts seamlessly to different screen sizes, prioritizing a consistent user experience across devices.\nDeployment Optimization: Discover strategies to deploy applications to cloud servers like Vercel for optimal performance and scalability.\n\n\nWho Should Take This Course?\nAspiring web developers who want to learn more about Next.js and get practical experience creating applications of a high caliber should take this course. This bootcamp offers the skills and information required to succeed, regardless of your level of experience with web development or want to add real-world projects to your portfolio.\n\n\nWhy Enroll in This Course?\nBy the time the bootcamp ends, you will have finished two large-scale projects and gained vital knowledge about using Next.js to create cutting-edge web applications. Boost your employment possibilities in the quickly changing tech sector by being a member of a community of learners committed to studying the newest web development technology.\n\n\nSet out on the path to becoming a skilled Next.js developer right now. Join the \"Next JS Project Bootcamp\" to gain confidence and skill in developing applications that are ready for production!",
      "target_audience": [
        "Web Developer Wants To Learn Next JS",
        "Frontend Developer Wants to Learn Next JS",
        "If You Want to Build Several Real-World Next JS Projects",
        "Next JS: Explore Different Complex Features and Build Real-World Apps",
        "Web Developers Want to Add Different Kinds of Next JS Projects to Their Portfolio"
      ]
    },
    {
      "title": "CSS Certification- Practice Tests & Interview Questions",
      "url": "https://www.udemy.com/course/css-certification-practice-tests-interview-questions/",
      "bio": "Prepare for CSS Certification and Interviews with Comprehensive Practice Tests.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the \"CSS Certification- Practice Tests & Interview Questions\" course on Udemy! This comprehensive course is designed to help you achieve mastery in CSS through a structured approach of practice tests and interview-style questions.\nBeginning with essential concepts such as CSS selectors and the box model, you will progress through intermediate topics including layout techniques and responsive design principles. Advance to explore advanced CSS features such as animations, flexbox, grid systems, and popular CSS frameworks like Bootstrap and Tailwind CSS.\nEach section of this course is crafted to simulate real-world scenarios encountered in web development. You will learn to solve complex design challenges and write efficient, optimized CSS code that meets modern web standards.\nCovering crucial topics such as semantic CSS for enhanced accessibility and SEO, this course equips you with the skills necessary to excel in today's competitive web development landscape. Expert guidance is provided on preparing for CSS-related job interviews, showcasing your expertise, and impressing potential employers.\nBy the end of this course, you will have mastered CSS fundamentals and be fully prepared to succeed in CSS certification exams and job interviews. Don't delay – enroll now and embark on your journey to becoming a skilled CSS developer with our extensive practice tests and interview questions!",
      "target_audience": [
        "This course is for individuals aiming to improve their CSS skills for job interviews or certification exams. Whether you're new to web development, enhancing your skills, or solidifying expertise as an IT professional, this course strengthens your CSS fundamentals and problem-solving abilities."
      ]
    },
    {
      "title": "Hands-On Web Development with ASP.NET Core and Angular 7",
      "url": "https://www.udemy.com/course/hands-on-web-development-with-aspnet-core-and-angular-7/",
      "bio": "Build, secure, and launch an interactive app with ASP.NET 3.0 and Angular 7",
      "objectives": [
        "How to develop and implement an online movie DVD store powered by Angular",
        "Learn about the new features of ASP .NET Core 3",
        "Learn about new Angular features such as modules, services, and routing",
        "Entity framework & how to model/implement a database for your app",
        "How to set up a nice-looking interface for an online store using Angular.",
        "Create and implement a web service for an Angular app",
        "Structure your Angular app through routing configuration",
        "Design/build administration features in Angular apps"
      ],
      "course_content": {
        "Creating the Angular UI and ASP.NET Core Projects": [
          "The Course Overview",
          "Setup Environment",
          "Creating the ASP.NET Core Angular Project",
          "Updating the ASP.NET Core Angular Project as a DVD Movie Store",
          "Configuring DB Connection and Logging",
          "Creating the ASP.NET Core Data Model",
          "Seeding the DB and Registering the DB Context",
          "Creating the Angular Data Model",
          "Displaying Data"
        ],
        "Creating a Web Service for the Angular UI": [
          "Refactoring",
          "Load Related Data and Breaking Circular References",
          "Breaking Circular References in Additional Related Data",
          "Implementing the GET Method",
          "Implementing the POST Method",
          "Implementing the PUT Method",
          "Implementing the PATCH Method",
          "Implementing the DELETE Method"
        ],
        "Structuring an Angular UI Application": [
          "Creating the Movie Table and Category Filter Components",
          "Adding Movie Details Component",
          "Routing Configuration to Navigate to Details",
          "Navigating Back from Details"
        ],
        "Preparing Pipeline for the UI of the Angular Store": [
          "Placeholders and Components for Movie List",
          "Completing the Movie List",
          "Creating the Category Filter",
          "Creating the Pagination Controls",
          "Displaying Ratings"
        ],
        "Completing the Angular Store UI": [
          "Creating the Shopping Cart",
          "Displaying the Cart Detail",
          "Storing Cart Data – Part One",
          "Storing Cart Data – Part Two",
          "Checkout Process – Part One: Models, Migrations and Web Service",
          "Checkout Process – Part Two: Components",
          "Checkout Process – Part Three: Registration and Routes",
          "Extending the Session Data Web Service"
        ],
        "Creating Administration Features": [
          "Adding Admin Features",
          "Administering Movies",
          "Administering Orders"
        ]
      },
      "requirements": [
        "No knowledge of Angular is assumed; however, some basic knowledge of web development is assumed."
      ],
      "description": "Have you ever wondered why so many applications do not become successful or popular? Are you looking to create a user-friendly cross-platform app with a powerful UI? This course will teach you to blend the power of Angular UI and .NET Core to create interactive, real-world applications that can easily communicate between the frontend and backend.\nYou will create strong Angular UI (and flawless cross-platform ASP.NET Core) shopping applications and web services for querying data. Then you will move on to structure Angular routing, build a pipeline, and complete a nice Angular UI with a shopping cart.\nBy the end of the course you will be an established and confident full-stack developer who can easily build projects/models using Angular and ASP.NET\nThis course uses Angular 7, and ASP.NET Core 2.1, while not the latest version available, it provides relevant and informative content for legacy users of Angular and ASP.NET Core.\nAbout the Author\nReynald Adolphe is a technologist and .NET developer with 10+ years' experience in website consultation and development. He focuses on user experience, user interfaces, back-end development, and the languages used to create web applications. He's a speaker and personal technology coach who helps programmers take their brand and career to the next level and guides newcomers to become elite software engineers.\nPreviously, he worked for the Tribune Company in Los Angeles and Accenture in Chicago. Reynald's specialties include C#, Silverlight, ASP.NET, MVC, Razor, LINQ, Java, JavaScript, JQuery, AJAX, HTML5, CSS3, SOAP, Knockout.js, RequireJS, Underscore.js, AmplifyJS, XML, WCF, SQL, SDLC, MSTest, Moq, QUnit, and Bootstrap. Reynald also produces tech events, featuring popular tech speakers, musicians, and comedians.\nYou can learn more about his events/coaching at reynaldadolphe and follow him on Twitter @reynaldadolphe.",
      "target_audience": [
        "This course is for ASP .NET Core developers who want to extend their skillset to build better web applications. They know how ASP .NET Web API works, but not how it can work with Angular."
      ]
    },
    {
      "title": "Learning React",
      "url": "https://www.udemy.com/course/learning-react/",
      "bio": "Build beautiful, modern, and modularized UIs with React’s latest version",
      "objectives": [
        "Front-end of your web applications with modernized UI"
      ],
      "course_content": {
        "Introduction to the World of React": [
          "The Course Overview",
          "Thinking in React",
          "Start Using React Right away",
          "Local React Dev Environment Setup with create-react-app",
          "Building Our First Custom React Component",
          "Using State and Conditional Rendering in JSX",
          "Using React Dev Tools to Help Build and Debug Our Apps"
        ],
        "Dive into Interactive React Apps": [
          "Handle Mouse, Keyboard, Form, and Browser Events",
          "Basic Form Validation",
          "Create a Shopping List Component",
          "Persist Shopping List State with Local Storage"
        ],
        "Modular React Components and Shared State": [
          "Overview:Mini Address Book App",
          "Use Stateful and Stateless Components to Build UIs",
          "Pass Props Down to Nested Components",
          "Update Parent Component State from a Child Component",
          "Persist Address Book State with Local Storage",
          "Intro to Hooks",
          "Implement the useState and useEffect"
        ],
        "Multi-Page React Apps with React Router": [
          "Overview: Multi-Page React App",
          "React Router 5 Setup and Configuration",
          "Handle Dynamic URL Values, and Error State",
          "Convert Render Props into Components",
          "Conditionally Render Components, Redirects"
        ],
        "Fetch Data from Third-Party APIs": [
          "Overview: React App + Star Wars API",
          "Fetch DATA from swapi.co",
          "Extract Logic into Separate Components",
          "Fetch Data Based on URL/Route",
          "Persist API Data in Local Storage"
        ],
        "Prepare and Deploy React Apps to Production": [
          "Build React App to Optimize for Production",
          "Deploy to Netlify: Drag and Drop",
          "Deploy to Netlify: Command Line",
          "Deploy to Netlify: Continuous Deployment",
          "What’s Next? Eject from CRA, More Hosting Options"
        ]
      },
      "requirements": [
        "We start from scratch, learning about what React is and how it’s different from traditional JavaScript development via the DOM. Lessons start with simple one-off components to demonstrate and practice using the concepts and features of React. We then move on to combining and nesting multiple components on a single page, and sharing data between components. Once we’re able to manipulate sample datasets, we'll start pulling in data from third-party APIs and then add URL routing to create a dynamic multi-page application. These will reflect real-world scenarios. Our goal is to gradually build our confidence and knowledge in working with a React application environment"
      ],
      "description": "Want to make the process of building modular, reusable user interface components simple and intuitive? React.js is the answer, with its Learn Once, Write Anywhere approach. This course will help you understand the power behind this approach and build beautiful, modern, and modularized UIs with React’s latest version.\nThis course will cover all of the React.js basics such as its API, which will help you create elements and components; the virtual DOM and the JSX syntax extension; using state; working with browser events; and component lifecycle methods. You will build an application from scratch throughout the course and use the knowledge you've gained in a practical way. You will also learn to update various elements of a site or application seamlessly without delay, without disrupting the rest of the display or requiring the user to refresh. Also, get introduced to the new concept of hooks.. Finally, you will work with a server API to persist data using local storage. (Note that we use Node.js 10.13.0 for this course, which will run successfully with the React features we cover.)\nBy the end of the course, you will be fully capable of using ReactJ.js tools to build several UI elements, making them reactive to user input, and extending your knowledge of DOM manipulation to customize your own UIs in the future.\nAbout the Author:\nLasha Krikheli is a software engineer and educator. For the past 6 years, he has taught classes on topics including HTML & CSS, Responsive Web Design, JavaScript, WordPress, and PHP & MySQL. Lasha has worked with startups, agencies, and high profile clients for over 12 years, building interactive web sites and web apps. He is passionate about Accessibility, User Experience, and problem solving through design.",
      "target_audience": [
        "If you are a web developer, JavaScript developers and want to learn and build front-end of your web applications with modernized UI, then this is the course you need!Web Developers and Programmers who want to learn React .js by taking an engaging, step-by-step approach, will benefit from this course."
      ]
    },
    {
      "title": "Introduction To Web Development Using Python.",
      "url": "https://www.udemy.com/course/web-development-python-django/",
      "bio": "Absolute beginners track focus on developing applications for web using Python, Django, HTML, SQLite and Bootstrap",
      "objectives": [
        "Python use in web development context",
        "Create environment, project and application for web.",
        "Django web framework",
        "Essential HTML, JS and Bootstrap",
        "Model , View and Template development",
        "API Testing and Development"
      ],
      "course_content": {
        "Setup Environment": [
          "Web Application Architecture",
          "Installing Requirements"
        ],
        "Application Layout Development": [
          "The first web application",
          "Design bootstrap navigation menu"
        ],
        "Database Development": [
          "Create Database Model",
          "Working with objects of a model",
          "Extending the base template to another."
        ],
        "Application Architecture": [
          "Understand application parts",
          "Working with environment, project and apps"
        ],
        "Appendix: Python Basics": [
          "Variables",
          "Variables Declaration",
          "Non-Primitive Data",
          "If statement",
          "For Loop",
          "Lists",
          "Functions and Modules"
        ]
      },
      "requirements": [
        "Fundamentals of Programming Using Python."
      ],
      "description": "participants should be able to handle full stack web application development using python, Django and template engine by the end of this course.\nThe Django web development framework provides a fast, easy and secure method of developing rich websites using the Python programming language. This Django training course helps absolute beginners learn to design, implement and manage web applications using.\nThis Django course explains how to use Django framework to create dynamic web applications. After completing this training course you would be able to use Django on your website projects.\nFew practical Python Django based projects at the end of the course will ensure that you can apply Django on your web projects.\nInstall and Configure Python and Django environment.\nDemonstrate the security implications of Django features, and develop secure websites with Django\nUtilize Django Models to build an interface with powerful relational databases\nDesign and develop forms.\nControl Django's administrative interfaces\nUtilize functions.\nHTML. Bootstrap\nImplement and maintain CURD using APIs and JSON\nSQLite database management and creation.\nPostman use for Application programming interface testing.\nVS Code Integrated Development Environment.\nUse of command shell in different context including web server administration.\nCreate rich user interface to interact with data basic functions such as add, update and delete.\nwork with serializes to transform database model into json and vice versa.",
      "target_audience": [
        "Absolute beginners who are eager to jump into web development using python Django."
      ]
    },
    {
      "title": "Hotel Booking App with SpringBoot, Angular & Payment Gateway",
      "url": "https://www.udemy.com/course/build-hotel-booking-app-in-springboot-angular-payment-2025/",
      "bio": "Build a hotel booking app with SpringBoot, Angular, payment gateway, email notifications, authentication & security.",
      "objectives": [
        "How to Build a full-stack hotel booking platform using Spring Boot and Angular",
        "Implement secure JWT-based authentication and role-based authorization",
        "Integrate payment gateways for secure online transactions",
        "Automate email notifications",
        "Apply front-end security measures to protect sensitive data",
        "Connect backend service to MYSQL Database"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Design Flow Overview"
        ],
        "Project Core Functionality(Models, DTO's, Repositories, Exceptions)": [
          "Create Project",
          "Connect To Database",
          "Define Packages",
          "Model Mapper Config",
          "Enums",
          "Entities",
          "Repositories",
          "DTO'S",
          "Exceptions"
        ],
        "Security(Spring-Security, JWT Authentication)": [
          "Auth User & User Details",
          "JWT Utils Class",
          "Auth Filter & Security Filter"
        ],
        "Notification Module(Email Sending Implementation)": [
          "Email Service",
          "Testing Email"
        ],
        "User Module (Users Services, Controllers and API Testing)": [
          "User Service",
          "Auth Controller",
          "Auth API Test",
          "Users Controller",
          "Users API Test"
        ],
        "Room Module (Room Service, Controller, Api Testing)": [
          "Room Service",
          "Room Controller",
          "Room API Test"
        ],
        "Booking Module (Booking Service, Controller and API Tests)": [
          "Booking Service",
          "Booking Controller",
          "Booking API Tests"
        ],
        "Payment Module": [
          "Payment Setup & Service",
          "Payment Controller"
        ],
        "Frontend Angular: Project setup & core functionalities, API & guard services": [
          "Create Project",
          "Add Dependencies",
          "API Service",
          "Guard Service",
          "Navbar & Footer",
          "Pagination Component",
          "Room Result Component",
          "Room Search Component"
        ],
        "Auth & Profile Section": [
          "Registration Page",
          "Login Page",
          "Profile Page",
          "Edit Profile Page"
        ]
      },
      "requirements": [
        "Basic Knowledge of Spring Boot is required to follow along with the back-end sections. If you’re new to Spring Boot, I recommend taking my free beginner Spring Boot course available here on Udemy",
        "Basic JavaScript and Angular Understanding",
        "A Computer with Internet Access",
        "Tools and IDEs: Installation of tools like IntelliJ IDEA (or any preferred IDE for Java), Visual Studio Code (or your choice of IDE for Angular), and MySQL Workbench is recommended",
        "Willingness to Learn and follow through"
      ],
      "description": "Are you ready to master full-stack development by building a professional hotel booking platform? This course is designed to take you step-by-step through creating a robust, secure, and feature-rich application using Spring Boot and latest Angular 19, with real-world tools and techniques for a complete development experience.\nWhat You'll Learn:\nBack-End Development: Build a secure and scalable API with Spring Boot for handling user authentication, hotel bookings, and payments.\nFront-End Development: Create a modern, responsive UI with React, ensuring a seamless user experience.\nAuthentication and Authorization: Implement JWT (JSON Web Token) for secure user authentication and role-based authorization.\nDatabase Design: Use MySQL for database management, with explanations of ERD diagrams and database relationships.\nPayment Integration: Seamlessly integrate payment gateways using Stripe for secure online transactions across the globe.\nEmail and Notifications: Automate email notifications with JavaMailSender.\nFrontend Security: Use CryptoJS to encrypt sensitive data, ensuring maximum security on the front end.\nDatabase Relationships: Understand and design complex relationships between entities like users, bookings, and payments in the database.\nWhy Choose This Course?\nThis course is packed with hands-on lessons, starting from project setup to deployment. By the end, you’ll have built a complete hotel booking platform with the following features:\nJWT-based authentication and secure role-based access.\nA fully functioning booking system with payment integration.\nAutomated email notifications and in-app real-time notifications.\nPayment Integration\nSecure front-end and back-end communication using CryptoJS and Spring Security.\nDatabase design principles with ERD diagrams and relationship modeling.\nWho Should Take This Course?\nAspiring developers looking to master full-stack development.\nDevelopers wanting to learn secure authentication, payment integration, and email systems.\nAnyone interested in building a hotel booking platform from scratch for personal or commercial use.\nAdditional Highlights:\nComprehensive project-based learning approach.\nReal-world tools like JWT, CryptoJS, and MySQL explained.\nDownloadable resources and a step-by-step guide.\nEnroll today and transform your skills into creating a fully functional, scalable, and secure hotel booking platform!",
      "target_audience": [
        "Back-End Developers",
        "Intermediate Developers",
        "Full-Stack Developers",
        "Students and Enthusiasts",
        "If you’re looking to build your own hotel booking platform or similar systems"
      ]
    },
    {
      "title": "Demystifying Markdown",
      "url": "https://www.udemy.com/course/demystifying-markdown/",
      "bio": "Learn GitHub Flavored Markdown (GFM)",
      "objectives": [
        "Learn how to write content and style the content in Markdown",
        "Learn how to insert tables, images and even code in Markdown",
        "Create a simple static one-pager website using just Markdown",
        "In the process, also learn GitHub Flavored Markdown"
      ],
      "course_content": {
        "Introduction": [
          "Welcome and introduction",
          "Introduction to Markdown",
          "A bird's-eye view of this class",
          "Prerequisite checklist"
        ],
        "Act Two": [
          "Adding content to your Markdown file",
          "Adding emphasis to your Markdown content",
          "Adding headings to your Markdown file",
          "Adding lists to your Markdown file",
          "Adding links to your Markdown file"
        ],
        "Act Three": [
          "Adding images to your Markdown file",
          "Creating and modifying tables in your Markdown file",
          "Adding code to your Markdown file",
          "All about the escape character",
          "Adding emojis and checklists to your Markdown file"
        ],
        "Wrap up": [
          "The grand recap",
          "The conclusion"
        ]
      },
      "requirements": [
        "No previous experience is necessary. Even if you’re not from the software industry, you're most welcome to take this course.",
        "A GitHub account will be required. Guided instructions provided in the prerequisite video."
      ],
      "description": "Markdown is one of the cleanest and easiest forms of writing rich-text content. Believe me. Once you learn the trick, you’ll wonder why you didn’t know about this before. With Markdown, you can go from writing simple readme files (that looks amazing, by the way!) to creating your own website/blog.\nIn this class, you’ll learn GitHub flavored Markdown (GFM) – a slightly more powerful version of regular Markdown – and by the end, you would have also created a one-pager website. Doesn’t that sound exciting?\nAnyone who is keen to expand their horizon and is up for a new challenge is welcome to tune in to this class. No previous experience is necessary (even if you’re not from the software industry, seriously).\nFollow along each class module to learn a new concept of GitHub flavored Markdown and get one step closer to building a one-pager website. Think of this as a puzzle. Each class module will provide you with one piece of the puzzle and once you’ve put it all together, you would get an awesome website that you’ve built using something as simple as Markdown.\nPlease do share your class project (i.e., a one-pager website of either yourself or a celebrity) with this class.",
      "target_audience": [
        "Anyone who is keen to expand their horizon and is up for a new challenge is welcome to tune in to this class."
      ]
    },
    {
      "title": "Editing a WordPress Website using the Divi Page Builder (v4)",
      "url": "https://www.udemy.com/course/editing-a-wordpress-website-using-the-divi-page-builder/",
      "bio": "Easy, step-by-step instructions to update text, images, buttons, blogs and pages on your WordPress website",
      "objectives": [
        "Understand the WordPress dashboard",
        "Learn how to edit text on a website, with the Divi page builder",
        "Learn how to prepare, upload and replace an image to a website page",
        "Understand how Divi modules work",
        "Add a new blog article to a WordPress website"
      ],
      "course_content": {},
      "requirements": [
        "Access to your username and password for your WordPress website",
        "This training starts at the very beginning. No prior knowledge or previous experience in editing websites or WordPress sites is required.",
        "Ability to use a computer and be confident with editing text, for example using Microsoft Word, is assumed.",
        "The website must be a WordPress website using the Divi pagebuilder (i.e. not Elementor or others)",
        "Ability to use, and have access to image software, like Photoshop or Canva, is beneficial. The image lessons will use a few free online tools to assist those who don't have this software."
      ],
      "description": "Divi Training for website editors with sites built in WordPress using the popular Divi page builder.\nThis step-by-step video course will enable business owners, marketing staff and website editors learn how to update a website that's been handed over from their developer.\nThis is NOT a course to learn how to build a website. This IS a course for how to edit a site that has already been developed.\nSTEP BY STEP VIDEO LESSONS\nHow to log in and out\nHow to change your password\nUnderstanding the WordPress dashboard\nHow to update text using the Divi Visual Editor\nHow to update text using the Divi Text Editor (cogwheel)\nImage aspect ratio\nImage sizes\nHow to replace images\nCreating a new page by copying an existing one\nCreating a blog article\nCreating columns by adding or removing rows and sections\nAdding or removing modules\nAdding or removing pages from the navigation menu\nAdding pdf's\nAdding links\nBasic html with live quiz to practice\nUpdating software and running back-ups\n\n\nWHO IS THIS COURSE FOR\nTypical students for this course are business owners and marketing or communications staff who have the job of editing their website. The site has typically already been built by a website developer and now has been handed over to the business for them to update content.\nThis training starts at the very beginning. No prior knowledge or previous experience in editing websites or WordPress sites is required.\nAbility to use a computer and be confident with editing text, for example using Microsoft Word, is assumed.\nConfidence and experience in browsing the internet is assumed. A bonus how to use browsers video will assist beginners who need extra help in understanding browsers.\nAbility to use, and have access to image software, like Photoshop or Canva, is beneficial. The image lessons will use a few free online tools to assist those who don't have this software.\nIf you who have experience in editing websites, including WordPress, you will benefit from the course. You can skip the early videos.\nOUTCOMES\nAt the end of this training you will be able to\nConfidently navigate the WordPress Dashboard\nRemove, add and update text\nBold and format text\nAdd links\nUnderstand the importance of image re-sizing\nUpload images\nUnderstand how to add buttons, testimonials and videos\nCreate a new blog article\nCreate new rows on existing pages\nCreate a new page\nRemove a page\nThis course does not\nShow you how to build a website from scratch\nCover how to install or configure plug-ins\nUse the Gutenberg Editor (or other pagebuilders like Elementor)\nDivi is a registered trademark of Elegant Themes, Inc. This course is not affiliated with or sponsored by Elegant Themes.\nThroughout 2024 and 2025 Elegant Themes have been releasing alpha and beta versions of Divi 5. Divi 5 is a major rewrite of the Divi Builder. This course is not helpful to you if your website has been built in Divi 5. The final production release of Divi 5 is scheduled for Q4 2025 or Q1 2026.\nWatch this space for a new course just for Divi 5 websites.",
      "target_audience": [
        "Beginner website editors who have a WordPress website using the Divi page builder",
        "This course is NOT for people to learn how to DEVELOP a website, it IS for people to learn how to EDIT a website",
        "This course is for staff, team members, volunteers and business owners who have inherited or been given a WordPress/Divi website and need to learn how to update it"
      ]
    },
    {
      "title": "Become a WordPress Developer: Build Premium Themes & Plugins",
      "url": "https://www.udemy.com/course/master-wordpress-development/",
      "bio": "Develop a WordPress eLearning Theme to Create Online Course, LMS, Educational Website like Teachable with WordPress",
      "objectives": [
        "You will learn how to Create Custom Post Types",
        "You will learn how to Add Custom Fields (Without the need for External Plugins)",
        "Database how to Insert Data, Save it, Update it & Retrieve it from Any Database Table",
        "Design Awesome WordPress Templates with Html & Css"
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience Needed. You will learn everything you need to Build Premium Plugins in WordPress"
      ],
      "description": "Build a Learning Management System Theme LMS - to Manage Courses Like Udemy\nIn this course, the theme that we're going to be building is an LMS theme that helps us create & list courses on our website, just like this website Udemy\n\n\nThe process of building this theme will help you learn everything you need to Build Premium WordPress themes\nCreate CUSTOM POST TYPE - You will learn how to Create Custom Post Types in your WordPress Dashboard\nYou will have you own custom CPT here\nYou can name it anything you want, also you can change it's icon\nAdd CUSTOM FIELDS - You will learn how to Add Custom Fields (Without the need for External Plugins)\nLearn how to customize Custom Fields with CSS to fit your design\nIn our Case we will add the course details like trailer video, the course price and it's content\nAfter that we will learn how to save all these details in the database so that we can retrieve them later on in our course page\nDATABASE - You will learn how to create database tables\nThis table will be created automatically once our plugin is activated\nSecond You will learn about Database:\nHow to Insert Data, Save it, Update it & Retrieve it from Any Database Table: Your plugin will be doing this for you automatically in the background\nWEB DESIGN\nYou will learn how to Design Awesome Templates associated with your CPT using Html & CSS\nYou will learn how to Dynamically Load Your Courses Details from the custom fields that we built, Each course page will have it's own price, video trailer, content. And everything will be controlled from the WordPress Dashboard. You can make changes here and you'll see them in front-end.\n\n\nThis is the Power of using Themes in WordPress. It allows us to manage our content easily from the Dashboard\nAlso Keep in mind that this LMS Theme that you're going to be building is just one example. With this knowledge in this course you can build different plugins that serve different purposes - Selling T-shirts\n\n\nSo If you are interested in learning WordPress development by Building this LMS Theme, join me and let's get down to it",
      "target_audience": [
        "Beginner WordPress Developers who want to Build Premium Plugins & Themes"
      ]
    },
    {
      "title": "Build web applications with Python,Flask,Django,Databases",
      "url": "https://www.udemy.com/course/build-web-applications-with-pythonflaskdjangodatabases/",
      "bio": "Mastering Full-Stack Development: Building Web Applications with Python, Flask, Django, Databases and Consume API Data",
      "objectives": [
        "Understand Web Development Basics",
        "Set Up Development Environments",
        "Implement API Integration: Learn to consume data from APIs in a Flask application and manage API calls.",
        "Utilize Firebase for Authentication: Integrate Firebase for user authentication in a Flask application",
        "Apply Git for Version Control",
        "Deploy a Flask App to the Cloud",
        "Develop functionality for image uploads and handling using the Pillow library in Django.",
        ": Configure and use PostgreSQL with Django, including database setup, user management, and migrations.",
        "Design and implement Django models for handling data and interacting with the database.",
        "Design and Use Django Forms: Create and manage forms in Django for user input and data handling.",
        "Build Dynamic Views in Django: Develop complex views and URL routing to handle various user interactions and requests.",
        "Integrate Bootstrap with Django: Utilize Bootstrap to enhance the front-end of Django applications with responsive design elements.",
        "Design and implement dynamic templates in Django for rendering HTML with context data.",
        "Implement User Authentication and Authorization",
        "Securely manage sensitive information and configuration settings using environment variables.",
        "Handle Session Management: Implement and manage session cookies to maintain user state and session data.",
        "Apply Firebase for App Functionality: Integrate Firebase features such as authentication and real-time databases into web applications.",
        "Learn about different cloud deployment options and configure environments for running Flask and Django applications.",
        "Gain a solid understanding of HTTP methods and their role in web communication and API interactions.",
        "Design and create intuitive user interfaces using HTML, CSS, and JavaScript integrated with Flask and Django."
      ],
      "course_content": {
        "Overview of Web Development": [
          "Introduction",
          "Understanding Client-Server Architecture",
          "Front-End vs. Back-End Development",
          "Overview of Python in Web Development",
          "Overview of Flask",
          "Overview of Django",
          "Overview of Databases",
          "Http and Http Methods"
        ],
        "Setting Up Your Development Environment": [
          "Python Installation on Windows",
          "What are virtual environments",
          "Creating and activating a virtual environment on Windows",
          "Python Installation on macOS",
          "Creating and activating a virtual environment on macOS",
          "Installing Visual Studio Code"
        ],
        "Build a flask app to consume data from an API": [
          "What is an API",
          "What is an API Client",
          "Installing Flask",
          "Creating a minimal flask app",
          "How to run a flask app",
          "Session Cookies",
          "Making an API Call",
          "Adding a secret key to flask app",
          "Environment Variables",
          "Creating the logic part 1",
          "Creating the logic part 2",
          "Creating the logic part 3",
          "Creating templates",
          "Testing the app",
          "What is Firebase",
          "Setting up firebase for authentication",
          "Firebase Integration",
          "Form integration",
          "Implementing the registration form logic",
          "Implementing the login form logic",
          "Implementing the logout logic",
          "Implementing password reset logic",
          "Creating a home route",
          "Creating an authentication function",
          "Creating a base template",
          "Refactoring existing templates",
          "Creating the home template",
          "Creating the registration template",
          "Creating the login template",
          "Creating a Password reset template",
          "Protecting Routes",
          "Firebase configuration checks",
          "Testing app authentication process",
          "Using Git for version control",
          "Git installation",
          "Git configuration",
          "Git Terminology",
          "Initialize app with git repository",
          "Creating a gitignore file",
          "Adding files to local repository",
          "What is Github",
          "Create a Github account",
          "Creating a personal access token for Github",
          "Backing up local repository to Github",
          "Exploring deployment and hosting options",
          "Preparing app for cloud deployment",
          "Create a new account on pythonanywhere",
          "Creating a new web app in Pythonanywhere",
          "Uploading project files to Pythonanywhere",
          "Creating and activating a virtual environment on Pythonanywhere",
          "What is a WSGI File",
          "Configuring WSGI File",
          "Running your app in a cloud hosting environment",
          "Project Code project code"
        ],
        "Build an Image Upload Web App with Python and Django": [
          "What we will create",
          "Create a virtual environment",
          "Install Django",
          "Create a superuser account",
          "Create a django project",
          "Start Django development server",
          "Creating a Django app",
          "Installing Pillow",
          "Creating a Model",
          "Interacting with Models from admin page",
          "Defining URL Routes",
          "Creating Views",
          "Django Templates",
          "Populating Templates",
          "Running Your App",
          "source code"
        ],
        "Build a Law Firm Management System App": [
          "Create and activate a new virtual environment",
          "Installing Django in virtual environment",
          "Creating a django project",
          "Open Project in Code Editor",
          "Installing Postgresql on Windows Computer",
          "Installing PostgreSQL Database Adaptor",
          "Creating a new database",
          "Creating a new database account user",
          "Django Database Configuration",
          "Starting Django Dev Server",
          "Applying initial migrations",
          "Creating a django superuser account",
          "Django App Vs Django Projects",
          "Creating a Django App",
          "Creating Django Models",
          "Creating forms for Models",
          "Creating views: Part 1",
          "Creating views: Part 2",
          "Creating views: Part 3",
          "Django URLS",
          "Creating URLS",
          "Django Static Files",
          "What is Bootstrap",
          "How to add Bootstrap to Django Project",
          "What are Templates",
          "Creating Django Template Files",
          "Populating the base template: part 1",
          "Populating the base template: part 2",
          "Populating the base template: part 3",
          "Populating the home template",
          "Installing Django Widget Tweaks",
          "Populating the case form template",
          "Populating the case list template",
          "Populating the case confirm delete template",
          "Populating the clients templates",
          "Populating the lawyers templates",
          "Testing the app",
          "Interacting with the app from django admin site",
          "Project Code"
        ]
      },
      "requirements": [
        "Basic Computer Literacy: Comfortable using a computer and navigating operating systems (Windows or macOS).",
        "Fundamental Understanding of Python Programming",
        "Familiarity with Web Browsers: Understanding how to use web browsers to access and interact with websites and web applications.",
        "Familiarity with HTML and CSS is helpful but not mandatory. The course will cover essential HTML/CSS concepts as needed.",
        "Ability to approach problems logically and seek out solutions, which will be useful when debugging code or understanding new concepts."
      ],
      "description": "Welcome to this course which is meticulously crafted course designed to equip you with the skills needed to excel in modern web development. This course takes you on an extensive journey through both fundamental and advanced web development concepts using Python, offering a deep dive into two of the most popular web frameworks: Flask and Django. Whether you're a complete beginner or an experienced programmer looking to expand your skill set, this course is structured to provide valuable insights and hands-on experience.\nWhat You'll Learn\n1. Foundations of Web Development\nThe course begins with an overview of web development, laying a solid foundation by introducing key concepts such as client-server architecture, front-end versus back-end development, and the role of databases. You will gain a clear understanding of how web technologies interact to create dynamic and functional web applications. We will explore HTTP and HTTP methods, and how Python fits into the web development ecosystem, providing a context for the frameworks you’ll work with later in the course.\n2. Setting Up Your Development Environment\nOne of the first steps to becoming a successful web developer is setting up your development environment. We’ll guide you through the installation and configuration of Python on both Windows and macOS. You’ll learn about virtual environments and how to create and activate them to manage dependencies effectively. We also cover installing Visual Studio Code, a powerful and widely used code editor that will be your primary tool throughout the course.\n3. Building with Flask\nThe course provides a hands-on approach to learning Flask, a lightweight web framework that is perfect for beginners and small projects. You will start by understanding what APIs are and how to create a simple Flask application that interacts with APIs. You'll explore Flask's core features, such as creating routes, handling session cookies, and integrating Firebase for user authentication. By the end of this section, you will have built a Flask app capable of handling user registration, login, and password resets, and learned how to deploy it using Git and GitHub.\n4. Deploying Your Flask App\nDeploying web applications is a critical skill for any web developer. In this course, you will learn about various deployment options and prepare your Flask application for cloud hosting. We’ll cover the deployment process on PythonAnywhere, including setting up a new web app, configuring WSGI files, and running your app in a cloud environment. You will also gain experience with Git for version control, allowing you to manage and track changes to your code effectively.\n5. Diving into Django\nDjango is a robust web framework that is well-suited for larger applications and projects. In this section, you will create a Django project from scratch, learning to set up a development environment and create Django apps. You'll delve into Django’s powerful features, such as creating and managing models, views, and templates. We’ll cover image uploads using the Pillow library, database integration with PostgreSQL, and utilizing Bootstrap to enhance your app’s design.\n6. Building a Law Firm Management System\nAs a practical application of your Django skills, you will build a Law Firm Management System. This comprehensive project involves setting up Django, creating models, forms, and views, and integrating Bootstrap for a professional look. You will manage static files and templates, ensuring",
      "target_audience": [
        "Aspiring Web Developers",
        "Beginner Programmers",
        "Tech Professionals Seeking a Career Change",
        "Students in Computer Science or Related Fields",
        "Entrepreneurs and Small Business Owners",
        "Hobbyists and Enthusiasts"
      ]
    },
    {
      "title": "Next.js 14 e-Learning and Online Courses Marketplace App",
      "url": "https://www.udemy.com/course/nextjs-14-e-learning-and-online-courses-marketplace-app/",
      "bio": "Learn how to build an e-learning online courses marketplace using latest technologies like nextjs , mongodb , antd etc",
      "objectives": [
        "Understand all the latest features if nextjs v14 in-depth and how they can be implemented in real-time projects",
        "Implement strong and secured authentication and authorization system using CLERK",
        "Learn how to use the tailwind css with other third party ui components libraries like antd , material ui etc.",
        "Integrate firebase inorder to store and handle the large media uploads in nextjs apps"
      ],
      "course_content": {
        "Introduction": [
          "Project Demo",
          "Introduction",
          "Ant design demo",
          "Overriding antd components styling",
          "Override antd in global level"
        ],
        "User authentication": [
          "Clerk introduction",
          "Integrate clerk in nextjs",
          "Custom sign-in and sign-up pages",
          "Show logged-in user info in ui",
          "Show logged-in user info in object",
          "Style sign-in and sign-up pages"
        ],
        "Save users": [
          "Why should we save users to mongodb",
          "Mongodb connection",
          "User model",
          "Save user"
        ],
        "Build layout": [
          "Layout skeleton and conditions",
          "Layout styling",
          "Showing spinners",
          "Implementing state management",
          "Menu-items for admin and students",
          "Manual logout functionality"
        ],
        "Course form": [
          "Courses module introduction",
          "Basic details in course form",
          "Cover image and promo video",
          "Course description",
          "Creating sections-1",
          "Creating sections-2",
          "Action items for sections",
          "Edit section",
          "Delete section",
          "Add lesson",
          "Display lessons",
          "Action items for lessons",
          "Edit lesson",
          "Delete lessons"
        ],
        "Media library": [
          "Setup firebase",
          "Upload media UI",
          "Upload media firebase logic",
          "Save uploaded media to mongodb media collection",
          "Media library table",
          "Preview media",
          "Delete media"
        ],
        "Saving course": [
          "Save course - part 1",
          "Save course - part 2",
          "Display courses",
          "Loader for server components",
          "Edit course - part 1",
          "Edit course - part 2",
          "Delete course"
        ],
        "Homepage and course info page": [
          "Homepage part - 1",
          "Homepage part - 2",
          "Course info page - Hero section",
          "Course info page - Description",
          "Course info page - Curriculum",
          "Course info page - Purchase card"
        ],
        "Purchase course": [
          "Stripe account integration",
          "Stripe backend",
          "Stripe frontend"
        ],
        "Save enrollments": [
          "Enrollments model",
          "Save enrollment after payment"
        ]
      },
      "requirements": [
        "Basic nextjs knowledge is required"
      ],
      "description": "Welcome to the course Next.js 14 e-Learning and Online Courses Marketplace App. In this course we will build a full-stack real-time web application using the popular and cutting edge technologies like nextjs , taiwind , mongodb etc.\nSo here we are listing the complete project techstack and features\nProject Tech-stack\nNext.js 14 - For complete frontend and backend services\nTailwind CSS - For styling and alignments\nAnt Design : For ui components\nZustand : For handling global state management\nMongo DB : For Database\nFirebase : For storing all lessons , promo videos.\n\n\nProject Features\nStrong and secure user authentication using CLERK.\nThere will be 2 user roles , one is admin and another is student.\nAdmin can create , modify and delete the courses.\nThe course form will have the basic details and description with rich text editor and then finally the course curriculum with multiple sections support and each section can have multiple videos.\nWe will have centralised media library where admin can upload all the course videos , so while creating curriculum they need not to upload manually for each lesson.\nOnce the course is published it will be available for normal students to enroll.\nStudents can view all courses in homepage and they can filter by category and they can also search by course title.\nThey can view the complete course info like description , promo video and curriculum  by clicking on the course image.\nStudents can purchase the courses by making payment using the stripe payment gateway.\nOnce students purchase course , it will be added to student's purchases where they can watch all the videos.\nStudents will also have a report page in which they will see total courses enrolled , total amount spent and last 5 purchases etc.\nAdmin can view course all the students enrollments and course level enrollments\nAdmin will also have reports page in which we will show total courses published , total enrollments , total distinct students , total revenue collected and last 5 enrollments.\nAdmin can also view the list of distinct students who enrolled in multiple courses.\nDrag and drop functionality in curriculum in-order to sort the sections and lessons.\nDeploying the application to vercel cloud service.\nQ/A and Direct Messages support",
      "target_audience": [
        "Frontend and full-stack developers who are curious about building a real-time projects"
      ]
    },
    {
      "title": "Core Concepts of Modern CSS",
      "url": "https://www.udemy.com/course/core-concepts-of-modern-css/",
      "bio": "Learn every major CSS feature in a fast and fun way! Includes Flexbox, Grid, Media Queries, Animation and much more.",
      "objectives": [
        "Animation, fonts, positioning strategies, box model, flexbox, grid ... It's all included!",
        "Each major CSS feature has its own standalone section and can be completed on its own.",
        "Master the fundamentals of CSS as well as advanced systems",
        "Style websites that fit every screen using media queries",
        "Tons of challenges and quizzes (including walkthroughs and solutions)",
        "Apply the most recent features of CSS like nesting and layers",
        "Successfully debug styling conflicts using browser developer tools"
      ],
      "course_content": {
        "Welcome": [
          "How to navigate this course",
          "Checklist: getting started"
        ],
        "CSS Basics": [
          "Intro: The CSS pattern",
          "Combine HTML and CSS",
          "Color, Text and shorthands",
          "Property overload",
          "Coding challenge: your first css exercise!",
          "Selectors",
          "CSS cascade and specificity",
          "Combinators and combinations",
          "Pseudo classes and pseudo elements",
          "Code challenge: style a sign-up form",
          "Sizes and units",
          "Inheritance",
          "Quiz time!",
          "Summary"
        ],
        "Box Model": [
          "Intro",
          "Content box",
          "Border",
          "Padding",
          "Margin",
          "Display property",
          "Quiz time!",
          "Coding challenge: box model",
          "Summary"
        ],
        "Positioning elements": [
          "Intro: document flow and positioning context",
          "Position properties",
          "Positioning with percentages",
          "Overflow property",
          "Stacking context and z-index",
          "Quiz time!",
          "Coding challenge: positioning",
          "Summary"
        ],
        "Fonts": [
          "Intro",
          "Generic families and font families",
          "Browser font loading behavior",
          "Font faces",
          "Quiz time!",
          "Coding challenge: implementing a google font",
          "Summary"
        ],
        "Background images": [
          "Intro",
          "Background basics",
          "Position property and multiple backgrounds",
          "Bonus: filter and gradients",
          "Quiz time!",
          "Coding challenge: backgrounds",
          "Summary"
        ],
        "Responsive websites": [
          "Intro",
          "Viewport meta tag",
          "Media queries",
          "Quiz time!",
          "Coding challenge: add media queries",
          "Summary"
        ],
        "Flexbox": [
          "Intro",
          "Flex container",
          "Flex items",
          "Order and align-self",
          "Quiz time!",
          "Coding challenge: login form",
          "Summary"
        ],
        "CSS Grid": [
          "Intro",
          "Basic grid properties",
          "Named templates",
          "Positioning elements in the grid",
          "Implicit grid",
          "Quiz time!",
          "Coding challenge: style a shopping list",
          "Summary"
        ],
        "Transforming and animating elements": [
          "Intro",
          "Transforming elements",
          "Transitions",
          "Animations",
          "Quiz time!",
          "Coding challenge: your first animation",
          "Summary"
        ]
      },
      "requirements": [
        "You only need a basic understanding of HTML"
      ],
      "description": "Save time by focusing on the concepts and start building your dream website!\nI firmly believe that learning the core concepts of a technology is enough to hit the ground running. That's why this course is like no other and will spare you all unnecessary details you will hardly ever need in your programming career. Hence, you will breeze through the lessons and actually complete the entire course in no time.\nBut this course doesn’t stop there! It not only teaches you the core concepts but also provides helpful resources and essential debugging skills to solve any styling issues. So, if you encounter a special case this course did not cover, you are well-equipped to find a solution effortlessly on your own. The ability to solve problems independently is a fundamental skill every programmer absolutely needs to succeed.\nUpon completion you will be confident to take on any CSS task!\n\n\nWhat's the best thing about this course?\nEvery major CSS feature has its dedicated section and can be completed on its own.\nAre you a complete beginner? Then I recommend starting with the section about CSS basics.\nAre you already familiar with the fundamentals like selectors, units and specificity? Then you can freely decide what feature you would like to learn next. You could jump straight into advanced layout systems like flexbox and the CSS grid, or immediately start learning about animations or positioning strategies or responsive design. The choice is yours!\nAlmost every section comes with a quiz and an exercise to cement your newly gained knowledge. Of course, solutions and walkthroughs are provided.\n\n\nJoin me on this exciting journey! I am looking forward to seeing you.",
      "target_audience": [
        "Complete beginners that want to start their CSS journey",
        "Developers with a basic understanding of CSS and now want to dive deeper into certain topics",
        "Industry professionals whose CSS knowledge got a bit rusty and need a refresher"
      ]
    },
    {
      "title": "Complete Guide for Leaflet JS : Beginner to Expert",
      "url": "https://www.udemy.com/course/complete-guide-for-leaflet-js-beginner-to-expert/",
      "bio": "Best guide to build any application map based using Leaflet in a very easy way (Basics, Concepts, Plugins,...)",
      "objectives": [
        "Create easily an interactive map using leaflet",
        "Understand some useful concept for mapping and geospatial",
        "Extend your application by using hundreds of plugins",
        "Understand the architecture and documentation of Leaflet"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What will we learn?",
          "What is Leaflet?",
          "Why Leaflet?"
        ],
        "Introduction To Some Concepts": [
          "Map reference",
          "Different shapes",
          "Layers",
          "How the map is displayed",
          "Map projection issue",
          "Spherical Distance",
          "Quizz 1"
        ],
        "Leaflet Architecture": [
          "How is the library structured?"
        ],
        "Leaflet Basics": [
          "Setup the environment",
          "Create a Map",
          "Add Markers",
          "Distance between two Markers",
          "Draw Shapes",
          "Events",
          "Popups",
          "Add Layers Control",
          "Change Tiles",
          "What is GeoJSON?",
          "Examples of GeoJSON",
          "Use GeoJSON in Leaflet",
          "Leaflet Basics Test Overview",
          "Leaflet Basics Test Solution",
          "Quizz 2"
        ],
        "Power of Plugins": [
          "What are leaflet Plugins?",
          "How to use a Plugin?",
          "Should I create my own Plugin?",
          "Practicing Plugins - Draw",
          "Practicing Plugins - SnakeAnim",
          "Practicing Plugins - PruneCluster",
          "Leaflet Plugin Test Overview",
          "Leaflet Plugin Test Solution",
          "Quizz 3"
        ],
        "Wrap Up": [
          "Conclusion",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic knowledge in Javascript"
      ],
      "description": "Leaflet is the easiest and powerful JavaScript library for creating any interactive Map you want.\nIt's free and has a very active community, with hundred of plugins.\n\n\nI worked on GPS Tracking system and had to deal with maps by making it very interactive. In the beginning I used Google Maps API, but when I faced an incident due to external factors, my whole system were broken. Here how I discovered Leaflet, and since that day I always used it and were never limited by its possibilities.\n\n\nIn this course you will learn how to use this powerful library and create any interaction map application you need with no limitation.\n\n\nI designed this course by first explaining some theory that is very required to understand deeply how things are working (Map projection, GPS Coordinates,...).\nThen you will learn by doing, see concrete examples and practicing with some tests.\nAlso you’ll discover plugins and learn how to use them.\nFinally, the particularity of this course, is that I explain you the architecture of the library and I teach you how to easily use the documentation, so that you can custom your app however you want.\n\nEnroll now and become the expert!",
      "target_audience": [
        "Curious about interactive Maps",
        "You want to create any Map based application",
        "You want to create a GPS tracking frontend",
        "You want to create a GIS application"
      ]
    },
    {
      "title": "RTC using Socket.IO 4.x and React JS 17.x with React Hooks",
      "url": "https://www.udemy.com/course/rtc-using-socketio-and-react-js/",
      "bio": "Learn how to build RTC applications using Socket.IO 4.x, MongoDB and React JS 17.x using function components with hooks",
      "objectives": [
        "Basics of Socket IO library",
        "Understand Socket IO Server and Client APIs",
        "Understand the problems which you will face while building RTC applications and solutions for each problem",
        "Database communication using Socket IO",
        "How to broadcast messages when data is updated out of Socket IO applications",
        "Learning Server and Client side Socket IO APIs by build number of applications using Express JS framework and React JS library",
        "Use RxJS Observable in React JS",
        "How to display KPI chart",
        "Migration to Socket IO 4.x",
        "Functional Components using React hooks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who should take this course?",
          "Tools and Software required for this course",
          "Introduction to Socket.IO",
          "Introduction to Socket.IO API",
          "Simple example of Socket.IO - Theory",
          "Demo - Simple example of Socket.IO",
          "Introduction to React JS boiler template - Part-I",
          "Introduction to React JS boiler template - Part-II",
          "Introduction to RxJS Observable",
          "Demo - Installing Socket.IO-Client and RxJS library",
          "Demo - Writing service logic",
          "Demo - Writing component logic",
          "Do you see a problem?",
          "Introduction to Namespace and Room",
          "Modify Socket.IO server application",
          "Modify Socket.IO client application",
          "What's new in Socket.IO 3.x? - Part - I",
          "Implicit connection to default namespace",
          "What's new in Socket.IO 3.x? - Part - II",
          "What's new in Socket.IO 4.x?",
          "Migration - Simple Stock Example",
          "Introduction to React hooks",
          "Simple stock function component with hooks",
          "Migration - Namespace Stock Example",
          "Namespace stock function component with hooks",
          "No more implicit connection to default namespace"
        ],
        "Let's order Pizza": [
          "Application - we will develop",
          "Introduction to Mongo DB",
          "Writing Mongo DB queries",
          "Creating Socket.IO application using Express JS and Socket.IO - Part I",
          "Creating Socket.IO application using Express JS and Socket.IO - Part II",
          "Creating pizza order application using React",
          "Writing service logic",
          "Writing component logic - Part - I",
          "Writing component logic - Part - II",
          "What problem we may face?",
          "Migration - Pizza Order Example",
          "Pizza order function component with hooks"
        ],
        "Developing Technology Voting Real-time Dashboard": [
          "How to solve the problem?",
          "Writing MongoDB queries",
          "Creating REST API using Node JS and Express JS framework",
          "Writing data access logic in REST API",
          "Consuming DAL in REST API and defining route",
          "Creating end user Voting application using React JS",
          "Writing service logic",
          "Writing component logic",
          "Configure route and Navigation link",
          "Creating Socket.IO application using Express JS and Socket.IO - Part I",
          "Creating Socket.IO application using Express JS and Socket.IO - Part II",
          "Creating in-house Dashboard application using React JS",
          "Writing service logic",
          "Introduction to Highcharts library",
          "Installing Highcharts library and Creating reusable component",
          "Add global chart option object",
          "Visualizing Technology votes using Highcharts chart - Part - I",
          "Visualizing Technology votes using Highcharts chart - Part - II",
          "Configure route and Navigation link",
          "Final Test of the solution with KPI Chart",
          "Section - 3 Migration Steps"
        ],
        "Course Conclusion": [
          "Course Conclusion",
          "Migration Conclusion"
        ]
      },
      "requirements": [
        "Good knowledge of React JS and should have experience of building REST APIs using Express framework",
        "Basic understanding of Bootstrap framework [Optional]"
      ],
      "description": "Have you ever thought of building real-time communication applications for your clients or in your organization? Are you tired of writing the same old long polling logic to get the updates from your databases? Do you want to share live updates of the data across two or more than two applications? Do you work with live stocks or tweets kind of applications?\nAs you know our clients or customers would like to get quick and live updates of the information like stocks, currencies, the sales data, tweets etc. Or they want to build live collaborative applications for the customers/in-house projects. This is where we can think of Real-time Communication and we can achieve that using one of the most popular library Socket.IO. Easy to learn and easy to implement.\nThis course is a complete hands-on course where we will take few real-time scenarios and develop several applications step-by-step. At the end of this course, you will have better understanding of Socket.IO library and you will be able use this library to build RTC applications. We will build several client application using React JS library along with RxJS Observable.\nImportant Note - This course now is updated from Socket.IO 2.x to 4.x along with React JS 17.x. Also, we are using React function components with hooks.",
      "target_audience": [
        "Students who want to learn Real-time communication using Socket IO library to enable various scenarios in their applications",
        "Students who want to understand why, where and how to use Socket IO library using various examples",
        "Learn what's new in Socket IO 3.x and 4.x",
        "Students will learn migration from Socket IO 2.x to 4.x"
      ]
    },
    {
      "title": "Learn WordPress Version 6 Without Hosting & Domain",
      "url": "https://www.udemy.com/course/learn-wordpress-without-hosting-domain/",
      "bio": "Practice and launch as many websites as you want using your computer!",
      "objectives": [
        "Learn how to install WordPress in your local computer.",
        "Learn how to use the default Gutenberg editor.",
        "Learn how to use blocks to design professional website.",
        "Learn to import beautiful designs to start your web project!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Why This Course?",
          "Introduction of LocalWP"
        ],
        "Setting Up WordPress In Your Computer": [
          "Installing LocalWP",
          "Overview of LocalWP",
          "A Good Practice for LocalWP",
          "Installing WordPress Theme",
          "Extending Gutenberg Blocks"
        ],
        "Creating the Home Page": [
          "Overview of Gutenberg Editor",
          "Importing A Template",
          "Making Changes To A Block",
          "How To Change the Background Color Of An Element",
          "How To Add or Delete A Block",
          "How To Transform A Block",
          "Setting A Page As Home Page",
          "Adding Logo & Site Title"
        ],
        "Creating the Contact us Page": [
          "Import Contact Page Template",
          "Adding A 'Form' Block",
          "Configure the 'Form' Block",
          "How To Add Other Form Fields",
          "How To Use Shape Dividers",
          "How To Use Vertical Alignment"
        ],
        "Creating the Services Page": [
          "How To Import A 'Services' Page",
          "How To Add 'Marketing Button' Block",
          "How To Use The 'Inline Notice' Block"
        ],
        "Creating the About Page": [
          "How To Import About Page",
          "How To Use Lottie Animations Block",
          "Editing the Navigation Menu"
        ],
        "Creating the blog section": [
          "Add a New Blog Post",
          "Featured Image & Table Of Content",
          "Creating the Blog Page"
        ],
        "WordPress Settings": [
          "General Settings",
          "Reading Settings",
          "Discussion Settings",
          "Permalinks Settings"
        ],
        "Migrating to Live Site": [
          "How To Migrate the Local Site To Live Site"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Internet access for the video lessons.",
        "A working computer, either Windows or Mac.",
        "A modern browser preferably, Google Chrome."
      ],
      "description": "Do you have difficulties learning WordPress and do not want to pay for web hosting and domain names?\nDo you want to learn WordPress just using your computer/laptop?\nDo you want to learn how to use the latest WordPress Gutenberg editor?\nIf your answer to the above is YES, then this is the course for you!\n---------------------------------------------------------------------------------\nIn this newly created course, KC consolidates his many years of web design and simplified the process to help you learn WordPress!\nThe following are the course highlights:\nInstall WordPress on your local computer.\nInstall templates library.\nInstall add-ons to extend Gutenberg blocks.\nCreate a home page using Gutenberg editor.\nAdding, deleting, and transforming blocks.\nAdding website logo and title.\nCreate a contact us page.\nConfigure contact form options.\nUsing shape dividers.\nAnd many more!\nDaily Support from the Instructor\nJust like other KC's courses, he will be here every day to answer your questions and guide you along.\nFor a one-time enrollment fee, you get to ask and learn from KC as long as you want!\nKC trusted that this course will give you the hope, confidence, and skills you need to create a professional WordPress website!\nNow, it is all up to you. This is a gift that only you can give yourself - so just act on it and I welcome you to join my course!\nIf you are ready to start affiliate marketing without any website, then just click the button on top to enroll yourself and KC will welcome you in the course!\nYou fully deserve to learn everything in this course and experience the results for yourself!",
      "target_audience": [
        "People who wants to learn the latest version of WordPress without paying for hosting and domain names.",
        "People who wants to try out WordPress on their local computers."
      ]
    },
    {
      "title": "Master Laravel collections",
      "url": "https://www.udemy.com/course/master-laravel-collections/",
      "bio": "Master playing with arrays in Laravel by learning one of the most its feature #collections",
      "objectives": [
        "Collection best practices .",
        "Migrate from loops to collection .",
        "Real world examples .",
        "Manipulating collection in efficient way .",
        "Professional filtering collections ."
      ],
      "course_content": {
        "Introduction": [
          "Set up new project",
          "What is collection (very important)"
        ],
        "Most used common functions": [
          "average and contains",
          "sum and count",
          "filter and reject",
          "skip",
          "first and last",
          "sort",
          "minimum and maximum",
          "put and push",
          "group and key by",
          "unique"
        ],
        "Filter with where": [
          "where",
          "where in and not in",
          "where between",
          "where null and not null",
          "firstWhere"
        ],
        "Mapping and Transformation": [
          "map",
          "transform"
        ],
        "different tips": [
          "empty but true !",
          "flatten values",
          "create your own custom function",
          "real world example"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "Basic knowledge of Laravel"
      ],
      "description": "If you want to work with arrays and objects quickly and efficiently in you Laravel projects , and save time playing around loops, here is the right place .\nIn this course we will learn together  one of the most powerful Laravel features is collection .\nCollection is a class that enables us to working with arrays and objects in professional and speed way so it saves our time by avoiding using for loops .\n\n\nWhat does exactly this course include ?\nusing Laravel collection in efficient ways .\ncompletely migration from loops to collection .\nmapping collection .\nModifying collection .\napplying collection functions with real world examples .\ncalculating average for any array with any depth  .\nFiltering collections with complex cases and according to different logics .\nSorting collections in professional way.\nGrouping collections .\nMaking collections unique .\nusing where clauses to filter collections .\nreseting indexes in easy way .\nwhen and where to use collection in your project\nand more ...\n\n\nWhich Laravel version we will use in this course ?\nIn this course I use latest Laravel version (now it's 9 in version ) but the content is valid for these versions 6.x and above .\n\n\nNote : After following and watching the course I think you will completely abandon php native array and objective methods and will move to Laravel collection .",
      "target_audience": [
        "Any Laravel developer who want to master Laravel collection .",
        "Any Laravel developer who want to manipulate arrays and objects in professional ways ."
      ]
    },
    {
      "title": "Docker Essentials for beginners fullstack web development",
      "url": "https://www.udemy.com/course/docker-essentials-for-beginners-fullstack-web-development/",
      "bio": "Docker up and running. Create images, containers and compose your dev stack right away. Create a LAMP stack you can use",
      "objectives": [
        "Install docker on windows mac and linux",
        "Create images and containers",
        "Compose different images and containers",
        "Create a LAMP stack",
        "Create a frontend stack with node images"
      ],
      "course_content": {
        "Introduction": [
          "Introduzione"
        ],
        "Installing Docker on Mac": [
          "Installing docker on Mac"
        ],
        "Installing Docker on Windows": [
          "Installing wsl2 for Windows",
          "Installing docker on Windows"
        ],
        "Installing Docker on Ubuntu Linux": [
          "Installing docker for Ubuntu"
        ],
        "Docker run command and its options": [
          "Docker run. Executing code inside a container",
          "Docker run. Getting inside a running container and executing code",
          "Docker run. Mounting volumes from the host computer into the container",
          "Docker run. Running a node, php and python containers"
        ],
        "Docker. Creating a LAMP STACK": [
          "Docker. Run a php-apache image and mount a volume",
          "Docker. Creating our own image with Dockerfile with apache and php",
          "Creating images and containers with Visual studio code docker extension",
          "Docker. Creating a mariadb container",
          "Docker. Creating mariadb image and container",
          "Docker. Creating volume. Mapping volume to mariadb data",
          "Creating networks. Connecting mariadb container with apache-php container",
          "Docker. Docker-compose file. Composing different services with a dockercompose",
          "Docker. Docker-compose. Summary"
        ],
        "DOCKER. Frontend development with docker": [
          "Remote development with containers with Visual Code",
          "Docker. Create a react app from a node image",
          "Docker. Create a react app from a node image with a Dockerfile"
        ],
        "Laravel with docker": [
          "Creating a laravel app with sail",
          "Laravel sail configuring docker-compose.yml",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Windows 11 64-bit: Home or Pro version 21H2 or higher, or Enterprise or Education version 21H2 or higher",
        "Windows 10 64-bit: Home or Pro 21H1 (build 19043) or higher, or Enterprise or Education 20H2 (build 19042) or higher.",
        "64-bit processor with Second Level Address Translation (SLAT) 4GB system RAM BIOS-level hardware virtualization support must be enabled in the BIOS settings.",
        "macOS must be version 10.15 or newer. That is, Catalina, Big Sur, or Monterey. We recommend upgrading to the latest version of macOS."
      ],
      "description": "This course requires you to download  Docker Desktop. If you are a Udemy Business user, please check with your employer before downloading software.\n\n\nDocker Essentials for beginners fullstack web development brings you easy to follow lessons with everything you need to get Docker up and running and no frills.\nWe'll learn how to install docker on windows, mac and linux.\nWe'll see how to do everything from the command line and visually from Docker Desktop, PHPSTORM and Visual Code.\nYou will learn to\nInstall docker\nPull images\nCreate your own images\nPush images to docker hubs\nCreate containers of different types: apache, php, mysql, mariadb, composer, node.js\nCreate volumes\nCreate networks\nmake containers talk to each other\nUse Docker Compose to create your own stack\nCreate and use Dockerfile\nCreate a LAMP enviroment\nDocker is one of the most demanded technology as it simplifies the creation of development environment and the deploy of code.\nAll lessons are taught in a practical way with short lessons that you can easily follow.\nI'll show you all the commands you need to know in order to create your development environment.\nWe'll see how to install Docker on mac both with intel and mac chips\nThe same goes for windows . We'll see how to install wsl2 and use Docker with wsl2 .\nWe'll create all kinds of images needed for a fullstack web development.\nWe'll see a practical example where php will be running on apache with fast cgi and MariaDB.\nYou can use our example Dockefiles to have your LAMP stack up and running",
      "target_audience": [
        "Installing docker",
        "Creating images",
        "pushing images to docker hub",
        "creating containers",
        "Composing different containers",
        "Creating a development stack"
      ]
    },
    {
      "title": "Build Clean and Secure PHP Web Apps from Scratch",
      "url": "https://www.udemy.com/course/build-clean-and-secure-php-web-apps-from-scratch/",
      "bio": "Maximize Your Web Development Skills by Creating PHP Web Apps Without Any Bootstrap, Template, and Third-Party Code",
      "objectives": [
        "PHP Fundamentals",
        "Creating MySQL Databases",
        "Web Development Techniques",
        "Object-oriented PHP",
        "Creating PHP Classes and Objects",
        "CRUD Operations",
        "State Management Using Sessions",
        "Code Refactoring",
        "Protect and Secure PHP Applications",
        "HTML and CSS"
      ],
      "course_content": {
        "Setting Up the Development Environment": [
          "Course Overview",
          "Installing XAMPP & PhPStorm on Windows",
          "Installing XAMPP on MacOS",
          "Installing MAMP on MacOS",
          "Installing & Configuring PhPStorm on MacOS"
        ],
        "Setting Up the Guestbook Project": [
          "Creating the Guestbook Database",
          "Creating Project Folder and Files",
          "Connecting to MySQL Database",
          "Creating Utility Functions"
        ],
        "Building the Guestbook App Using Procedural PHP": [
          "Creating the index.php File",
          "Creating the Main CSS Stylesheet",
          "Creating the View Guestbook Page",
          "Creating the Sign Guestbook Page",
          "Creating the Edit Page",
          "Creating the Delete Page"
        ],
        "Managing State Using PHP Sessions": [
          "Introduction and Requirements",
          "Preparing the Login and Logout Pages",
          "Updating the Top Navigation Links",
          "Restricting Access to Protected Content",
          "Creating the Login Form",
          "Implementing the Login Page",
          "Creating the User Registration Form",
          "Updating the insertOneRecord() Function",
          "Implementing the Register Page",
          "Hashing Passwords"
        ],
        "Refactoring the Guestbook App Using Object-Oriented PHP": [
          "Introduction and Requirements",
          "Creating the Database Class",
          "Creating the Function Superclass and Subclass",
          "Updating PHP Files to Use Objects"
        ],
        "Basic PHP Security": [
          "Protecting Sensitive Data",
          "Turning Off Error Reporting"
        ],
        "Conclusion": [
          "What's Next?"
        ]
      },
      "requirements": [
        "Basic knowledge of Web development and HTML/CSS",
        "Basic knowledge of programming with PHP, object-oriented programming, and relational databases",
        "A modern computer with internet access"
      ],
      "description": "As a Web developer, you're expected to know how to create a clean and functional Web site from scratch.  This course is designed for beginner developers who already know their HTML and CSS and would like to get their hands dirty with creating nice and clean custom Web apps from scratch.   I will walk you through the entire process of building a PHP Guestbook application using the LAMP stack.  Everything will be built from scratch -- NO bootstrap, NO templates, NO third-party code.  You create everything, and you own everything.\nThis course is divided into three major phases:\nPhase 1:  You will build the complete Web app from scratch using only procedural programming in PHP, custom CSS & HTML, and a MySQL database.\nPhase 2:  You will tweak the app and integrate state management to restrict unregistered users from accessing protected content and functionality on the site.\nPhase 3:  You will refactor and convert the same app code using object-oriented programming in PHP.\nThe app that you build will use a MySQL database for data store and allow users to perform basic CRUD (Create, Read, Update, Delete) operations on the site.  Users will be able to view and sign the Guestbook, make edits, and delete content.\nBy the end of the course, you will feel proud and confident to start building a complete PHP Web application from the ground up on your own using your own custom code and various programming techniques.",
      "target_audience": [
        "Beginner developers who are curious about PHP and the LAMP Stack",
        "Developers who want to build clean Web apps from scratch"
      ]
    },
    {
      "title": "Building Microservices with Node, React and Mongo",
      "url": "https://www.udemy.com/course/microservices-with-node-react-and-mongo/",
      "bio": "Learn to design, build and deploy microservices based apps using Node, Mongo and React",
      "objectives": [
        "Learn the art and science of microservice driven applications",
        "Learn to use JavaScript and NodeJS to build microservices",
        "Learn to use MongoDB, React and Node in a microservice driven app",
        "Learn Event handling with RabbitMQ"
      ],
      "course_content": {
        "Understanding Microservices": [
          "Section Overview",
          "Microservices vs. Monolithic Applications",
          "Create an Example App",
          "Create a Microservice",
          "Async Events-based Communication",
          "Section Summary",
          "Quiz1"
        ],
        "Create a Microservices App": [
          "Section Overview",
          "Project Set-up",
          "BirdSquawk Service",
          "Peeps Service",
          "Communicating Between Pods",
          "Microservices in Docker with Kubernetes",
          "Section Summary"
        ],
        "Using Mongoose and MongoDB": [
          "Section Overview",
          "Install Mongoose in the BirdSquawk Service",
          "Add a MongoDB Deployment",
          "TypeScript with Mongoose",
          "Test the Mongoose Connection",
          "Section Summary",
          "Quiz3"
        ],
        "Create the React Front-end": [
          "Section Overview",
          "Create Next App",
          "Docker and Kubernetes with Front-end",
          "Server-side Rendering",
          "Installing Skaffold",
          "Section Summary",
          "Quiz4"
        ],
        "Event Handling with RabbitMQ": [
          "Section Overview",
          "Concurrency Problems",
          "Set Up RabbitMQ",
          "Set Up Ingress Nginx",
          "Connecting with Ingress",
          "Using RabbitMQ Topics",
          "Section Summary",
          "Quiz5"
        ],
        "Completing the App": [
          "Section Overview",
          "Connecting the Front-end",
          "BirdSquawk Databases",
          "Update Peeps and Query",
          "Update Kubernetes",
          "BirdSquawk Events",
          "Implementing RabbitMQ",
          "Events for Peeps and Query",
          "React Components",
          "Section Summary"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript and Node will be helpful in completing this course"
      ],
      "description": "Want to learn & excel at the methods to build Microservices and distributed apps?\nLearn to enhance your web development skills and create microservice based web apps using NodeJS, Express, React, and Mongo. This course will help you learn & understand continuous development & testing, systematic data organization, time optimization, and developing monofunctional modules.  With our expert-curated comprehensive modules, you’ll get a chance to explore & master the latest in web development. Microservices are changing the way modern web development is done. Microservices based apps are easy to modify, scale and maintain. Many companies have now moved to cloud driven microservice architecture for software development and deployment. You need to master this amazing technology to be a complete developer\nSo why are you waiting now? Grab your golden chance to learn how to use NodeJS in Microservices & become a complete developer!\nMajor Topics Covered\nMicroservice architecture\nNodeJS\nExpress\nREST API\nJSON\nMongoDB\nMongoose\nRabbitMQ\nTypeScript\nDocker\nKubernetes\nWhy should you take this course?\nThis course will give detailed instructions on building an application to demonstrate the use of microservices using NodeJS. The increasing demand for web apps based on Express framework, REST API, JSON, MongoDB, RabbitMQ, and TypeScript, resulting in the increased demand for skilled developers.\n\n\nComprehensive and practical content\n10+ coding tools, technologies, and frameworks\nLearn to create better and more scalable software\nBuild production grade app along with the instructor\nAdvance concepts covered in the course?\nLearn to use async, event-based communication with RabbitMQ\nUnderstand event flow and concurrency issues.\nLearn to connect the microservices to a server-side rendered React app",
      "target_audience": [
        "Anyone who wants to build microservices based apps will find this course very useful"
      ]
    },
    {
      "title": "Vue 3 full course in one day + helpful docs (Cheat Sheet)",
      "url": "https://www.udemy.com/course/vue-3-full-course-in-one-day/",
      "bio": "Quick start! All Vue 3 features! The Cheat Sheet and instructions on how to use it.",
      "objectives": [
        "All Vue 3 features and knowledge: reactivity, interpolations, directives, vue 3 application, single-file components, ect...",
        "Different Vue 3 API styles: Options API Vue 3, Composition API Vue 3, Script setup Vue 3",
        "Data flow Vue 3: props, events, provide/inject. Lifecycle hooks Vue 3",
        "Vue 3 modern ecosystem: Router, Vuex, Pinia",
        "The Cheat Sheet explanation - and how to work with it"
      ],
      "course_content": {
        "Cheat Sheet pdf": [
          "link to pdf"
        ],
        "Intro": [
          "1. Vue application. How to create it",
          "2. Options API. Data function",
          "3. Options API. Methods",
          "4. Vue3 Reactivity"
        ],
        "Template section": [
          "5. Template. Interpolations",
          "6. Template. v-on directive",
          "7. Vue core features",
          "8. Template. v-bind directive",
          "9. Template. v-if directive",
          "10. Template. v-text v-html v-show directives",
          "11. Template. v-for directive",
          "12. Template. v-model directive",
          "13. Template. Custom directives",
          "14. Template. Special attributes",
          "15. Custom components. Import and Registration",
          "16. Data flow (props, emit)",
          "17. Custom component. v-model",
          "18. Special components. Teleport",
          "19. Special components. Component",
          "20. Special components. KeepAlive",
          "21. Special components. Transition",
          "22. Slots. v-slot",
          "23. Mixins",
          "24. Provide-inject"
        ],
        "Options API": [
          "25. Options API. Lifecycle hooks",
          "26. Options API. Watch",
          "27. Options API. Computed",
          "28. Use plugin",
          "29. Router. Options API",
          "30. Vuex. Options API",
          "31. Pinia. Options API"
        ],
        "Composition API": [
          "32. Composition API. Setup()",
          "33. Composition API. Props. Emits. Methods",
          "34. Composition API. Utilities",
          "35. Composition API. ref() vs reactive()",
          "36. Composition API. Computed",
          "37. Composition API. Watch",
          "38. Composition API. WatchEffect",
          "39. Composition API. Lifecycle hooks",
          "40. Composition API. Dom",
          "41. Composition API. Provide and inject",
          "42. Vuex. Composition API",
          "43. Composition API coding + Pinia",
          "44. Router. Composition API"
        ],
        "Script Setup": [
          "45. Script Setup"
        ],
        "Epic speech": [
          "Epic speech"
        ]
      },
      "requirements": [
        "Basic level of JavaScript/HTML/CSS"
      ],
      "description": "The latest version of the Vue JS framework - Vue3. A lot of examples and realtime coding.\nYou will learn step by step how Vue 3 works under the hood, how to create Vue 3 components, how to create Vue 3 applications.\nDescription Vue 3 Reactivity - fundamental ideas.\nAll possible features included in this course: Options API, Composition API, Script setup, Directives, Data flow, Lifecycle hooks, Props, Events, Slots, Watch, Computed, Provide/Inject, Special Components ...ect.\nYou will be faced with the modern Vue ecosystem: Router, Vuex, Pinia.\nThe key point is to share the Cheat Sheet with you - you can print it and use it to work with Vue 3 JS. You will get your own systemized documentation. In general this course helps you to understand the Vue 3 framework and gives you the powerful cheat sheet information.\nThis course saves you time so you don't have to read a lot of documentation.\nYou can start your new production projects with Vue 3 - the core and subprojects are ready to use. Vue is a JavaScript framework for creating complex web interfaces. It builds on top of standard HTML, CSS and JavaScript, and provides a declarative and component-based programming model that helps you efficiently develop user interfaces, be they simple or complex.",
      "target_audience": [
        "Front-end engineers",
        "JavaScript engineers",
        "Web developers"
      ]
    },
    {
      "title": "IPL schedule generation - A mini project using React",
      "url": "https://www.udemy.com/course/ipl-schedule-generation-a-mini-project-using-react/",
      "bio": "Learn how to generate any tournament scheduling algorithm along with a bit hands-on experience on react.",
      "objectives": [
        "Developing an idea into action from scratch",
        "Basics of React and React hooks",
        "Single Round Robin algorithm",
        "CRA vs VITE"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "VITE vs CRA": [
          "VITE vs CRA",
          "Setting up react app using VITE"
        ],
        "How a react application works behind the scenes": [
          "How a react app works BTS"
        ],
        "App implementation": [
          "Adding React bootstrap",
          "Preparing interactive input fields",
          "Input error handling",
          "Table creation",
          "Scheduling algorithm"
        ],
        "Live demo": [
          "Implementation of live demo"
        ],
        "conclusion and next steps": [
          "Conlusion"
        ]
      },
      "requirements": [
        "Basic CSS and React knowledge is required but you can understand it without much hussle."
      ],
      "description": "Welcome to our exciting new course where you will be introduced to React JS at a very basic level while also implementing a mini-project using VITE. React JS is a popular JavaScript library that has gained immense popularity for its ability to build dynamic user interfaces. If you're new to React, this course is perfect for you.\nIn addition to React JS, you will also learn a new scheduling algorithm for scheduling any kind of tournament, not just IPL. The scheduling algorithm you will learn is a fundamental problem that arises in many applications, such as sports tournaments, job scheduling, and more. It is a great skill to have if you are interested in computer science, sports management, or related fields.\nThe course will start by exploring the differences between CRA and VITE. CRA (Create React App) is a popular toolchain for building React applications, while VITE is a modern build tool for web development. You will learn how to use VITE, a faster and more lightweight alternative to CRA, to develop your mini-project.\nWe will then take you through the entire code journey of building the application, including bug solving. Even if you are new to coding, you will be able to follow along easily and build a fully functional web application.\nWhile this course won't require any high-level knowledge on React or web development, it is recommended to have a basic understanding of React and how web applications work. However, even if you don't have any prior knowledge, the content has been prepared using low technical terms and details, making it easily understandable for anyone.\nSo, get ready to embark on this learning journey and gain valuable insights into React JS and tournament scheduling algorithms. Thank you for joining us, and we look forward to seeing you around!",
      "target_audience": [
        "This will help you develop a mini project using React which will generate IPL schedule dynamically using Single round robin algorithm."
      ]
    },
    {
      "title": "REACT - The Master Guide! *OVER 67 HOURS!*",
      "url": "https://www.udemy.com/course/react-the-master-guide-from-zero-to-hero/",
      "bio": "Master React in easy to follow steps, become a React professional and enhance your career ** 2 BONUS FULL COURSES **",
      "objectives": [
        "Master all the skills you need to learn React from zero to hero!",
        "Learn React from the ground up and finish the course as an advanced React developer",
        "Obtain all the skills to become an experienced React developer to take your career to the next level",
        "Master a new development skills to enhance your resume",
        "Learn all about React Hooks and React Components",
        "Build fullstack React apps",
        "Learn how to call backend API with React",
        "Have a break and build some fun apps with React including calculator and game"
      ],
      "course_content": {
        "Intro to React (2025 Course)": [
          "What is React JS and why is it needed?",
          "React Core Concepts",
          "First Steps with Code Sandbox",
          "Creating Dynamic Content with React",
          "Different Ways of Outputting JSX and React.Fragment",
          "Our First React Component!",
          "Adding a SVG Image",
          "Images in Src or Public Folder?",
          "TEST YOUR KNOWLEDGE"
        ],
        "Intro to React Properties (2025 Course)": [
          "First look at React Properties",
          "What can we do or not do with React Properties?",
          "Using Spread Operator with Properties",
          "Deconstructing Props",
          "Overriding Properties",
          "Setting Defaults for Properties",
          "Alternative Way of Setting Defaults",
          "Passing other Components in Properties - the special Children Prop",
          "Passing Objects in Properties",
          "Passing Arrays in Properties@",
          "Presenter Container - Pass a Parameter to a Callback from Child to Parent",
          "Presenter Container - Pass Multiple Parameters to a Callback",
          "Simple Basket - Passing Object to Parent Components"
        ],
        "Intro to React State - useState Hook (2025 Course)": [
          "Intro to React State",
          "React State - Dos and Donts",
          "Displaying Quantities in Basket Component",
          "Storing Primitives in State and Updater Function",
          "Using Updater Function to update Object in State",
          "Adding Objects to Array in State",
          "Updating Objects in Array in State",
          "Remove Objects from Array in State - Challenge",
          "Remove Objects From Array in State - Solution",
          "Setting the Stage for a Screen Change",
          "Using Conditions to Change Visibility of Components",
          "Refactoring to making things more Solid Design and Challenge",
          "Refactoring to Solid Challenge Solution and Another Challenge",
          "Using useState with useEffect Hook, and intro to a new React hook",
          "Creating two views for Basket component",
          "Summary of Different Methods to update Arrays in State - The Good, Bad and Ugly"
        ],
        "Intro to Uncontrolled Components (2025 Course)": [
          "Creating an Uncontrolled Checkout Form",
          "CHALLENGE: Communicate Form submission to parent component",
          "CHALLENGE SOLUTION",
          "Intro to useRef Hook with Uncontrolled Form",
          "Form Validation using useState",
          "Combining Validation State into One State",
          "Splitting out Project Files"
        ],
        "Intro to Controlled Components (2025 Course)": [
          "First look at Controlled Components",
          "Controlled Components with Dynamic Validation",
          "Combining Component State into one object",
          "Controlled Component - Handling Checkboxes",
          "Controlled Component - Handling Select Listboxes",
          "Controlled Component - Handling Radio Buttons",
          "Handling Default Values in Controlled versus Uncontrolled Components"
        ],
        "Calling APIs with React (2025 Course)": [
          "Calling an API with Fetch Promise and useEffect",
          "Adding Loading and Error State to API Fetch Call",
          "Calling an API with Async/Await Pattern Promise using Fetch and useEffect",
          "CHALLENGE: Categories Container calling API",
          "CHALLENGE SOLUTION: Categories Container calling API",
          "Promise.ALL - waiting for APIS to complete together",
          "Filtering Products by Category API Call",
          "POST API Request with Async/Await",
          "PUT API Request with Async/Await",
          "DELETE API Request with Async/Await",
          "Convert Async/Await to Fetch Promise Categories",
          "Convert Async/Await to Fetch Promise Products",
          "Convert Async/Await to Fetch Promise for Basket Post",
          "Convert Async/Await to Fetch Promise for Basket Update/Delete",
          "Convert from Fetch to Axios Promise Categories",
          "Convert from Fetch to Axios Promise Basket Post",
          "Convert from Fetch to Axios Promise Products and Basket Update Delete",
          "Convert from Axios Promise to Await Async Categories",
          "Convert from Axios Promise to Await Async Products and Basket Update Delete",
          "Asynchronous OnClick Events",
          "Fetch API Versus Axios"
        ],
        "Styling React Components (2025 Course)": [
          "Intro to Inline Styling",
          "Conditional Inline Styling",
          "Separate styles into style object",
          "Conditional Inline Styling from State Variable",
          "Overriding Inline Styles",
          "Building Primary and Secondary style button objects",
          "Separating Concerns - Primary and Secondary style buttons",
          "Separating Concerns - Base Button Component",
          "Converting Inline Styles to Global CSS Classes",
          "Adding a CSS Conditional for Hover effect",
          "Intro to ClassNames - better way of handling classes",
          "Intro to CLSX - modern replacement of ClassNames",
          "Intro to CSS Modules - easier CSS module styling for SOLID",
          "Intro to Styled Components - alternative way to style React components"
        ],
        "Styling React Components with MATERIAL UI MUI (2025 Course)": [
          "Introduction to Material UI and MUI for styling components",
          "Material UI Paper Component and Material Icons",
          "Material UI Stack Component",
          "Products as MUI ListItem",
          "Material UI Avatar and Box Components",
          "Material UI Adding Visual Effects on Hover",
          "Adding Add to Cart buttons with Tooltips with Material UI icons",
          "Adding a Dialog to Products",
          "Styling Categories",
          "Highlighting the selected Category",
          "Creating two column layout with MUI Flex Box",
          "Creating two column layout with MUI Flex Grid"
        ],
        "Understanding the USECONTEXT Hook (2025 Course)": [
          "Intro to USECONTEXT Hook",
          "Creating Basket Components",
          "Breaking the Rule of Hooks!",
          "Creating customer useBasket Hook",
          "Adding Basket Context to our Basket Components",
          "Protecting the Context - a Context Provider Hook",
          "CHALLENGE - Creating Customer Context",
          "CHALLENGE SOLUTION - Creating Customer Context",
          "Combining Contexts Together - AppProviders Component",
          "Checkout - using UseCustomerHook",
          "Custom Hook - useMutateEntity",
          "Refactoring Checkout with MUI Components - the TextFields",
          "Refactoring Checkout with MUI Components - Radio Group"
        ],
        "Creating Custom Themes with MATERIAL UI (2025 Course)": [
          "Creating Light / Dark custom theme",
          "Creating ThemeContextProvider",
          "Creating the Theme Selector",
          "Changing Theme Selector to Toggle Switch",
          "Adding Sun and Moon Icon to Toggle Switch",
          "Adding Visual Effect to Theme Selector Part 1",
          "Adding Animation Visual Effect to Theme Selector Part 2",
          "Injecting Global Styles into DOM using UseEffect",
          "Injecting Global Styles into DOM using Emotion Global Style Injection",
          "Creating MUI Custom Themes",
          "Creating MUI Custom Theme Switcher",
          "Applying Custom Themes to Categories Component",
          "Syncing Theme Choice to LocalStorage",
          "Custom Hook to Sync Theme Choice",
          "Separating Theme Selector from Header"
        ]
      },
      "requirements": [
        "No prior React knowledge needed, but some knowledge of React will be useful"
      ],
      "description": "REACT - The Master Guide\nAre you ready to take your React skills to the next level? If you’re familiar with React’s basics and want to dive deeper into its core functionality, \"React - The Master Guide\" is the perfect course for you! This course is a complete guide for React JS. Here, you will learn all the concepts required for becoming a front-end React JS developer.\nIn this developer-friendly course, we’ll demystify React and will assume no prior knowledge of this exciting and popular technology.\nThis course has over an amazing *67 HOURS* of instruction so far and is always being updated. I have added over 40 hours of videos in 2025. This course will grow to over 100 hours of videos over this year and next, so purchasing this course will be a future investment! It's a fluid course, that will continually grow over time.\nWhat You’ll Learn\nFunctional Components, learn all about Uncontrolled and Controlled componennts\nJSX the language of React\nProps and Callback, Events\nComponent Composition, Component Design\nComponent Communication - how parent and child components communicate with each other, how to raise events and pass props between components\nState Management  learn about the essential useState hook\nReact Side Effects - how to use useEffect hook to make side effects and make things happen when the component loads\nCalling APIs - essential learning, how to call APIs, pull back and update data\nContext - how to maintain context in React with useContext hook\nStyling in React - different ways how to style React components\nMATERIAL UI - Styling with MATERIAL UI\nCustom Theming - how to create custom themes for React and switch between them\nReact Router - how to route between pages with React Router and Declarative, Data and Framework Mode\nReducing Functions - with the useReducer hook\nUnit Testing React Components with JEST\nCommunicating with the DOM using the useRef hook\nPROJECT: a fun calculator - apply the knowledge by making a little calculator\nPROJECT: a connect-4 clone - apply knowledge making a fun little game\nPROJECT: an ecommerce example site - learn how to build an ecommerce store\n\n\nAnd a COMMERCIAL APPLICATION\nBuild the foundations of a complete commercial application with React using technology like React Router, MUI, MirageJS\nAnd so much more!\n*** BONUS FREE COURSE *** Now includes all content of my Master React Hooks By Example course!\n*** BONUS FREE COURSE *** Also includes all content of my Master React Patterns By Example course!\n\n\nHow You’ll Learn\nThis course emphasizes learning by doing. Through hands-on examples, you’ll explore typical scenarios you’re likely to encounter in real development projects, such as:\n\n\nManaging form inputs with state.\nFetching and displaying data from APIs.\nPersisting references across renders.\nCreating and consuming a context for global state management.\nBy the end of the course, you’ll not only understand these React conceptually but also feel confident using them to solve real-world challenges in your React applications.\n\n\nWho Is This Course For?\nThis course is ideal for beginners who:\nHave no knowledge of React, this course will take you from Zero to Hero!\nWant to learn React in a easy to follow and fine way\nPrefer practical, example-driven learning.\nWhether you’re looking to solidify your React knowledge or prepare for more advanced topics, \"React - The Master Guide\" will equip you with the skills to build powerful, modern React applications.\nEnroll now and jump start your career as a professional React developer today!",
      "target_audience": [
        "Javascript developers who wish to learn all the skills to become an experienced React developer"
      ]
    },
    {
      "title": "Angular 8",
      "url": "https://www.udemy.com/course/typescript-in-angular/",
      "bio": "Angular 8 Certification Training, Typescript in Angular, Running Angular Application with Defining New Components",
      "objectives": [
        "Features of Typescript,",
        "Installing Bootstrap",
        "Key Parts of Angular 8",
        "Demo File for Typescript",
        "Creating a Function",
        "Running the File",
        "Compiling the File",
        "Installing the Node Setup",
        "Angular 8 Demo Project",
        "Running Angular Application",
        "Dependency Injection",
        "Defining New Components",
        "Ng Core Statements",
        "Basics of Ng Switch Statement",
        "How Data Binding Works"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Features of Typescript": [
          "Features of Typescript"
        ],
        "Angular8 Architecture": [
          "Installing Bootstrap",
          "Key Parts of Angular 8"
        ],
        "Type of Script Practical": [
          "Demo File for Typescript",
          "Creating a Function",
          "Compiling the File",
          "Running the File"
        ],
        "Project Setup": [
          "Installing the Node Setup",
          "Angular 8 Demo Project"
        ],
        "Running Angular App": [
          "Running Angular Application Part 1",
          "12. Running Angular Application Part 2"
        ],
        "Ng If Else Directive": [
          "Dependency Injection",
          "Defining New Components"
        ],
        "Ng For Directive": [
          "Ng Core Statements.",
          "Table Data",
          "Basics of Ng Switch Statement",
          "Switch Directive"
        ],
        "String Interpolation Example": [
          "Implementation of String Interpolation"
        ],
        "For Directive Implementation": [
          "Implementing For Directive Part 1",
          "Implementing For Directive Part 2",
          "How Data Binding Works"
        ]
      },
      "requirements": [
        "No prior knowledge of Angular versions are required.",
        "Basic knowledge in JS Framework or Web development will be an additional benefit."
      ],
      "description": "This Angular 8 course will teach you the Angular actual and potential resources for AngularJS to build testable, single-page applications. The topics covered will provide the knowledge and skills you'll need to create a professional and sophisticated modern web application. The course takes a step-by-step approach while providing complete and helpful explanations. This course will help learners to apply the reasoning from the beginning and will also enable them to learn how to make use of them during the development of the application UI. This course will help learners to apply the reasoning from the beginning and will also enable them to learn how to make use of them during the development of the application UI. This course is comprised of several examples where the demonstrations have been included to offer you a detailed view of the concepts. You will be learning about all the beginners, medium, and advanced level concepts in this module. This course is going to focus not only on building a solid foundation for your application but also on explaining and making sure you understand the reasons and benefits behind those decisions so you can make your own later on. By the end of the course, you will be able to understand and implement advanced programming concepts in your own projects.",
      "target_audience": [
        "Professionals and experts in the area of Web development can opt for this course.",
        "Students who wants to pursue their career in the area of development.",
        "Anyone from non technology background who wish to learn Angular and its concepts"
      ]
    },
    {
      "title": "Next.js v13.4 Car Rental Application",
      "url": "https://www.udemy.com/course/next-js-v134-car-rental-application/",
      "bio": "Build a Next JS Car Rental Application From Scratch",
      "objectives": [
        "Learn how to build a modern car rental application using Nextjs version 13 and the Antd Design UI library.",
        "Implement authentication with JWT tokens and set up protected routes for different user roles (user and admin).",
        "Admin users can perform CRUD operations on cars, manage user accounts, view all bookings, and more.",
        "Regular users can view all cars on the homepage, select a car to book, and check availability before making a reservation.",
        "Integrate Stripe payment gateway for easy and secure payments.",
        "Implement cancel booking functionality and profile update and password reset functionality.",
        "Deploy the application to Vercel for global accessibility.",
        "Gain practical experience in building a real-world web application with Nextjs and Antd Design.",
        "Get hands-on experience with popular web development tools and technologies.",
        "Learn how to design and implement a scalable and secure web application.",
        "Develop skills and knowledge that are in high demand in the web development industry.",
        "Receive expert guidance and support from an experienced web developer.",
        "Join a community of learners and developers to share ideas and collaborate on projects.",
        "Earn a certificate of completion and showcase your skills to potential employers."
      ],
      "course_content": {
        "Project Setup": [
          "Creating Next App",
          "Folder Structure",
          "Next JS Routing"
        ],
        "Setup stylesheets": [
          "Antd",
          "Over riding antd theme",
          "Custom stylesheets"
        ],
        "Login & Register Screens": [
          "Register Screen",
          "Login Screen"
        ],
        "Next JS API's and DB Connection": [
          "API Setup",
          "Mongo DB Connection"
        ],
        "Authentication APIs Integration": [
          "Register API",
          "Register API Integration",
          "Login API",
          "Login API Integration"
        ],
        "Securing API's and Pages": [
          "JWT Tokens",
          "Protect APIS",
          "Project Pages"
        ],
        "Layout": [
          "Default Layout",
          "Logout API"
        ],
        "State Management": [
          "Implementing Redux",
          "Store Current User in Redux",
          "Show Loaders / Spinners"
        ],
        "Add Car (Admin)": [
          "Add Car Form",
          "Car Model and API",
          "Dislplay Cars"
        ],
        "Edit and Delete Cars (Admin)": [
          "Edit Car",
          "Delete Car"
        ]
      },
      "requirements": [
        "Next JS Basics",
        "React Basics"
      ],
      "description": "Hi, Are you ready to take your web development skills to the next level? Then you are in the right place.\nWelcome to the course Next JS v13.4 Car Rental Application from Scratch\nIn this course, we are going to work on the following topics.\n\n\nLearn how to build a modern car rental application using Next.js version 13 and the Antd Design UI library.\nImplement authentication with JWT tokens and set up protected routes for different user roles (user and admin).\nAdmin users can perform CRUD operations on cars, manage user accounts, view all bookings, and more.\nRegular users can view all cars on the homepage, select a car to book, and check availability before making a reservation.\nIntegrate Stripe payment gateway for easy and secure payments.\nImplement cancel booking functionality and profile update and password reset functionality.\nDeploy the application to Vercel for global accessibility.\nGain practical experience in building a real-world web application with Next.js and Antd Design.\nGet hands-on experience with popular web development tools and technologies.\nLearn how to design and implement a scalable and secure web application.\nDevelop skills and knowledge that are in high demand in the web development industry.\nReceive expert guidance and support from an experienced web developer.\nJoin a community of learners and developers to share ideas and collaborate on projects.\nEarn a certificate of completion and showcase your skills to potential employers.\n\n\nNext.js is a React framework that gives you building blocks to create web applications.\nBy framework, we mean Next.js handles the tooling and configuration needed for React, and provides additional structure, features, and optimizations for your application.\nYou can use React to build your UI, then incrementally adopt Next.js features to solve common application requirements such as routing, data fetching, integrations - all while improving the developer and end-user experience.\nWhether you’re an individual developer or part of a larger team, you can leverage React and Next.js to build fully interactive, highly dynamic, and performant web applications.",
      "target_audience": [
        "Next JS Developers",
        "Fullstack Developers",
        "React Developers"
      ]
    },
    {
      "title": "AI Coding Projects| Build NextJS and React Projects using AI",
      "url": "https://www.udemy.com/course/ai-coding-projects/",
      "bio": "Build Next.js & React Projects Faster Using AI | Learn AI-Powered Development with Cursor & Windsurf",
      "objectives": [
        "Use AI tools like Cursor and Windself to accelerate Next.js and React development",
        "Build real-world projects using AI-assisted coding techniques",
        "Optimize code efficiency and debugging with AI-powered tools",
        "Develop AI-generated web applications with minimal effort."
      ],
      "course_content": {
        "BUILD FULLSTACK PORTFOLIO PROJECT USING AI": [
          "Project Live Demo",
          "Preparing PRD-Product",
          "Figma to Frontend",
          "Authentication",
          "Creating project with image upload",
          "Implementing Message Feature",
          "Admin Navbar UI Design Prompts",
          "Dashboard UI Design Prompts",
          "Login UI Design Prompts",
          "Fetch Homepage projects from Database"
        ],
        "FULLSTACK REAL ESTATE-NEXTJS": [
          "Project Live Demo",
          "My AI Workflow and MongoDB Connection String",
          "Authentication Add And List properties Part 1",
          "Authentication Add And List properties Part 2",
          "User Dashboard",
          "Enquiries Logic",
          "Making Property list view public",
          "Update Property",
          "Delete Property",
          "Filtering and Pagination Prompt",
          "Designing Homepage",
          "Redesigning Homepage",
          "Implementing Navbar",
          "Redesigning Property Listings Prompt",
          "Redesign Property Details-Prompt",
          "Login Form UI Prompt",
          "Dashboard UI Prompt",
          "Redesign Enquiries Management Prompt",
          "Redesigning Property Form- Prompt",
          "Footer and Responsive Prompts"
        ],
        "BUILD RESUME AND COVER LETTER BUILDER PROJECT": [
          "Project Live Demo",
          "How to Plan",
          "My AI Coding Workflow",
          "Implementing Authentication",
          "Resume Builder Logic",
          "Cover Letter Generation",
          "Improving UI"
        ],
        "BUILD JOB BOARD PROJECT": [
          "Live Demo",
          "PRD-Project Requirements Document",
          "Implementing The Main Logics"
        ],
        "BUILD AI POWERED DEVELOPER ASSISTANT PROJECT - NO AI": [
          "PROJECT LIVE DEMO",
          "Starter Templates",
          "Integrating Firebase",
          "Implementing Authentication Logics",
          "Login Using Login Form",
          "Sign With Google and Private Routes",
          "Loading user messages upon page loads",
          "Handle Submit for sending Message",
          "Formatting Response",
          "APIKey Form",
          "Using APIKey Prompt Component",
          "Deployment"
        ],
        "BUILD SEO KEYWORDS GENERATOR PROJECT - NO AI": [
          "Live Demo",
          "Create React Project",
          "Integrating Firebase",
          "Sign in With Google",
          "Fetching User Keywords",
          "Api Key Modal and Making HTTP Request",
          "Displaying Generated Keywords",
          "Saved Keyword in DB and display Keywords History",
          "Clear History and Navbar"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript and React is helpful but not required",
        "A computer with internet access to install and use AI coding tools",
        "No prior AI experience needed – everything will be explained step by step.",
        "Enthusiasm to learn and experiment with AI-powered coding techniques."
      ],
      "description": "Are you ready to revolutionize your coding workflow with AI? In this course, you'll learn how to build Next.js and React projects faster and more efficiently using AI-powered coding tools like Cursor and Windsurf. Whether you're a beginner or an experienced developer, this course will show you how to leverage AI to streamline development, debug code, and boost productivity.\nWhat You’ll Learn:\nHow to use AI-assisted coding tools to write, optimize, and debug React and Next.js projects.\nBest practices for integrating AI into your development workflow.\nHands-on projects that demonstrate the power of AI in building real-world applications.\nHow AI can help automate repetitive coding tasks, improve efficiency, and reduce errors.\nWho is this Course For?\nThis course is perfect for:\nBeginner and experienced developers looking to speed up their coding process.\nReact and Next.js learners who want to explore AI-assisted development.\nTech professionals interested in enhancing their workflow with AI-powered tools.\nAnyone curious about how AI can assist in modern web development.\nBy the end of this course, you’ll have a strong understanding of how AI can transform your coding experience and help you build high-quality applications with less effort and more efficiency. Get ready to code smarter, not harder!",
      "target_audience": [
        "Beginner and experienced developers looking to leverage AI for coding.",
        "React and Next.js enthusiasts who want to accelerate project development",
        "Tech professionals interested in AI-assisted web development workflows.",
        "Anyone curious about using AI tools like Cursor and Windself to build projects faster."
      ]
    },
    {
      "title": "HTML and CSS- Crash Course for Beginners 2025",
      "url": "https://www.udemy.com/course/html-css-crash-course-for-beginners-2023/",
      "bio": "Learn HTML and CSS Basics to have the necessary Knowledge that you must acquire before mastering Web Development.",
      "objectives": [
        "Learn What is HTML and Have your first look at HTML",
        "Learn How HTML is Structured and have a closer look to elements",
        "Build your first Web Page using VS Code",
        "Learn How to use Comments",
        "Know How and When to Use HTML Tables",
        "Know CSS Syntax and Start writing your first CSS Code",
        "Learn how to declare your HTML document using !DOCTYPE Declaration",
        "Install your editor to start Building your web pages using VS Code",
        "Know the difference between Head and Body Tags",
        "Learn How To Style Your Web Page Using CSS or Cascading Style Sheets",
        "Learn The difference between Classes and IDs and when to use them"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "HTML Crash Course - For Complete Beginners": [
          "Introduction",
          "Setup",
          "First Code",
          "Elements",
          "Document",
          "Formatting Text",
          "Inline Text Formatting",
          "Div and Span Tags",
          "Lists",
          "Attributes & Images",
          "Links",
          "Tables",
          "Forms"
        ],
        "CSS Crash Course - For Complete Beginners": [
          "Introduction",
          "Setup",
          "What is CSS",
          "How to add CSS",
          "CSS Selectors",
          "Colors",
          "Styling Text & Font styles",
          "Text layout properties",
          "Styling Lists",
          "CSS Box Model",
          "Cascade, specificity & inheritance",
          "Styling Tables",
          "Display",
          "Position"
        ],
        "Outro": [
          "Outro"
        ]
      },
      "requirements": [
        "No coding or design experience necessary",
        "Any computer works — Windows, macOS or Linux",
        "You don’t need to buy any software — we will use the best free code editor in the world"
      ],
      "description": "In this course you will learn the fundamentals of HTML and CSS , after completing this course you'll have good knowledge to start your next step in mastering HTML and CSS .\nThese fundamentals are very important for all beginners who want to start their career in Web Development Field.\nYou will start by Learning HTML basics and how to prepare your HTML document to be used in the Browser .\nThen you'll have a closer look on how HTML elements are structured .\nAfter that you'll know how to style your Web Page .\nBy the end of this course you will be able to create websites from scratch by your own and you will be ready to start your career as web designer Coding is great, but it's not everything! That's why we will go through the entire process of building and launching our website project. This includes designing, coding, planning, writing clean and organized code, website optimization, best practices, and so much more.\nDesigning is really, really important. Have you seen all these beautiful and modern websites lately? Great! Because I will show you how it's done. And not just in theory, but also in practice. This is the only course on the market that focuses on both coding and designing, together.",
      "target_audience": [
        "Complete beginners who want to learn how to build a professional, beautiful and responsive website",
        "Students with some knowledge about HTML and CSS but who struggle to put together a great website",
        "Students interested in learning to Code",
        "Students interested in learning how to create web pages",
        "Students learning to improve their skills in HTML and CSS"
      ]
    },
    {
      "title": "Learn SAPUI5 Development With Project",
      "url": "https://www.udemy.com/course/learn-sapui5-development-with-project/",
      "bio": "Learn SAPUI5 in Details and Step-by-Step and create your own UI5 App With Project-Based Experience",
      "objectives": [
        "Learn SAPUI5 Development With with XML View",
        "Learn Working With End-to-End Project With SAP® Web IDE Personal Edition",
        "Learn SAPUI5 Concepts with Working Project With Manifest, Component and New Structure",
        "Learn Usage of Analytics in SAPUI5 Application, Formatters and More Advanced Concepts",
        "Gain in Depth Project Development Experience"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course"
        ],
        "Week 1 - Getting Started With Project Development Using Web IDE Template for UI5": [
          "Building UI5 Application for Project CORE and UI5 New Components Updates",
          "Understanding functionality for Project CORE UI",
          "Stating the Development in Web IDE Personal Edition",
          "Development in Web IDE Personal Edition - Data Binding with manifest.json Part 1",
          "Development in Web IDE Personal Edition - Data Binding with manifest.json Part 2",
          "UI5 Development of Routing for Home Screen and Details Page Navigation - Part 1",
          "UI5 Development of Routing for Home Screen and Details Page Navigation - Part 2",
          "UI5 Development of Routing for Home Screen and Details Page Navigation - Part 3",
          "UI5 Development of Routing for Home Screen and Details Page Navigation - Part 4",
          "Summary For Week 1 Of UI5 Professional Development-1"
        ],
        "Week 2 - Project Development of Overview Screen and New components Using Web ID": [
          "Code Repo",
          "GIT Configuration With WEB IDE - Understand Basic of GIT",
          "GIT Configuration With WEB IDE - Creating a Demo Repo and Pushing Changes",
          "GIT Configuration With WEB IDE - Understand Pull, Commit, Push, Rebase - Part 1",
          "GIT Configuration With WEB IDE - Understand Pull, Commit, Push, Rebase - Part 2",
          "GIT Configuration With WEB IDE - Creating Main Project Repo and Doing Commit-Pul",
          "Adding ObjectHeader to our Overview Page of the App Using Layout Editor",
          "Vertical Layout and FilterBar - What do When FilterBar is not Present in Layout",
          "Adding FilterBar With Code Editor from Sample Code",
          "Changing FilterBar Based on Our Requirement of Having an Input",
          "Adding the Proper Aggregation in XML Views for FilterBar Content",
          "Adding the Model for the Application in Manifest.json - Part 1",
          "Adding the Model for the Application in Manifest.json - Part 2",
          "Bind the Global Model Data to Our Material Overview View as Named Model",
          "Changing our Table as Per CORE UI - Searching for Table Mode",
          "Changing our Table as Per CORE UI - Making Mode as Multiselect",
          "Changing our Table as Per CORE UI - Adding ColumnMicroChart",
          "Debugging and Placing MicroChart Inside Table",
          "Databinding for Table Rows and Columns",
          "Databinding and Aggregation for MicroChart",
          "Developing Formatter for our MicroChart",
          "Fixing Error in Formatter by Adding it in Controller as Formatter Module",
          "Adding Formatter as a Resource Inside Manifest.json",
          "Starting the Filter Implementation over our Table Data",
          "Adding the Event Listener in the Controller for Filter",
          "Adding the Back Button Functionality for the Overview Page",
          "Populating and Linking Standard Text into i18n Property File and Summary of Week"
        ],
        "Week3 - Project Dev of Detail Screen,New components & Advanced Issues - Part - 1": [
          "Walk through of Week 3 Development and Focus on Detail Screen UI",
          "Building Responsive Layout for Our Detail Screen and Starting from Big Component",
          "Adding Responsive Split Layout Container to our App",
          "Building Object List - Layout Editor for Unsupported Components",
          "Building Object List - Creating New Global Data Model - Planning Part",
          "Building Object List - Creating New Global Data Mode - Understanding Async Data",
          "Building Object List - Creating New Global Data Mode - Understanding Async Data",
          "Building Object List - Adding List and Binding Model Data",
          "Building Object List - Adding Status and Formatters for Colors",
          "Building Object List - Understanding Formatters Better",
          "Understanding Formatters and Debugging For Global Parameters - Part 1",
          "Understanding Formatters and Debugging For Global Parameters - Part 2",
          "Understanding Formatters and Defining Global Parameters",
          "Understanding Formatters and Implementation of Status Color Change",
          "Understanding Formatters and Mismatch in API Reference",
          "Understanding Rendering Issues for Panel Height and How to Fix it"
        ],
        "Week 4 -Understanding Layout, Containers, Grid, Generic Tiles, Viz and Complex": [
          "Code Version Before Week 4",
          "Understanding Layout Overview for the Detail Screen",
          "Which Layout Components We Need to Select for Detail Screen",
          "Adding Object Header And Placing In Detail Screen",
          "Attributes And Status For Object Header And Fixing Width Issue",
          "Selecting Icontabbar And Icontabfilter For Detail Screen",
          "Adding Chartcontainer Inside Icontabfilter For Detail Screen",
          "Adding Multiple ChartContainer Inside IconTabFilter",
          "Experimenting With ChartContainer Inside ChartContainer",
          "Adding Viz Component Inside ChartContainer and Compatibility Issues",
          "Error in Compatibility of ChartContainer Layout and Debugging",
          "Adding Expandable Table and Chart Using ChartContainer In ChartContainerContent",
          "Debugging ChartContainerContent for Not Valid Aggregation",
          "Solving The Aggregation Issue And Best Practice For Nesting Container",
          "Understanding Layout for Tile Container and Grid Layout for Generic Tiles",
          "Looking into TileContainer and CustomTile - Not Compatible with 1.50v",
          "Looking into GenericTile Inside Grid Layout - Compatible with 1.50v",
          "Implementing TileContainer and CustomTile - Not Compatible with 1.50v Part 1",
          "Implementing TileContainer and CustomTile - Not Compatible with 1.50v Part 2",
          "Adding Appropriate Data For the Detail Screen New Elements - Part 1",
          "Adding Appropriate Data For the Detail Screen New Elements - Part 2",
          "Adding Named Model to Object Header - Part 1",
          "Adding Named Model to Object Header - Part 2",
          "Merging Two Table Field and Assignment Description for Week 4",
          "Adding Viz Component and the ChartContainerContent - Part 1",
          "Adding Viz Component and the ChartContainerContent Debugging - Part 2",
          "Debugging Viz Component Binding to Render Proper Data - Part 1",
          "Debugging Viz Component Binding to Render Proper Data - Part 2",
          "Debugging Viz Component Binding to Render Proper Data - Part 3",
          "Debugging Viz Component Binding to Render Proper Data - Part 4",
          "Final Debugging of Detailed App, Assignment for Week 4 and Summary",
          "Code Version After Week4 Without Assignment Solution"
        ],
        "Week 5 - UI5 Compression, Automation Task Runner, Gulp Starter Kit & Load Speed": [
          "Understanding Async and Dependencies",
          "Understanding Dependencies and Task Runners",
          "Understanding Continuous Deployment , Overview of Babel, Gulp and Gulp Preload",
          "Understanding Gulp UI5 Preload Lib and Seeing Overview Code",
          "Understanding UI5 Gulp Starter KIT Package.json",
          "Understanding index.hbs Files and Yarn Build",
          "Executing Yarn Build and Executing the Default App",
          "Understanding What Will Change After Build and Execute the UI5 Default App",
          "Examining Network Waterfall Diagram for Load Sequence",
          "Making our CORE App Async by Adding Preload and Promises",
          "Preparing Path UI5 App for Preload and Compression - Structure and index.hbs",
          "Changing Package.json and Building Project With Yarn",
          "Debugging the Project and Finding Cause of Failure",
          "Fixing the Error,Successfully Building Path UI5 App & Sharing Deployment Structu"
        ]
      },
      "requirements": [
        "You should have a very basic understanding of Javascript and HTML."
      ],
      "description": "This course is for developers, designers, Architects, Analyst, Senior Analyst and Manager can understand deployment and Architectural insides.\n\nWe have put our best to show you how the new changes are in UI5 Library with the help of a project. We would be covering this course in 3 weeks period, where we will cover :\n\n\n1. How the templating in Web IDE is used to build UI5 Projects.\n2. New routing of the application when the complexity increases.\n3. Git setting with Web IDE.\n4. We would be building Project CORE UI as part of project-based learning and cover new components that are not covered in the UI5 Professional development course.\n5. The course also has a UI5 final project to put all the learning into practice. The final project was carefully crafted to make students understand real-world scenarios and the roles they will have to perform in a team.\n5. Handling multiple global data binding with large data sets within it.\n6. Integration with HANA® DB oData at the end.\n8. The course gives importance to all aspects of SAPUI5/OpenUI5 development, may it be wire-framing, design and analysis, development or styling, and theme.\n\n\nWe hope to cover the complexity in a simple and structured way, so you get the best experience of Project with UI5 new Library updates.",
      "target_audience": [
        "Aspirant SAPUI5 and Fiori® Developers, Designers, Architects and Manager",
        "Enthusiast for Learning SAPUI5 and Fiori®"
      ]
    },
    {
      "title": "Build a web app with Python and Django in less than 2 hours",
      "url": "https://www.udemy.com/course/build-a-web-app-with-python-and-django-in-less-than-2-hours/",
      "bio": "Create a web app using Python and Django",
      "objectives": [
        "Install and Setup Python",
        "Install and Setup Django",
        "Create and activate virtual environment",
        "Create database model",
        "Create routes",
        "Create views",
        "Implement templates"
      ],
      "course_content": {
        "Python and Django Setup": [
          "Introduction",
          "Installing Python",
          "Installing Text Editor",
          "Create a virtual environment",
          "Activate virtual environment",
          "Updating Pip",
          "Install Django",
          "Create superuser account",
          "Django App vs Django Project",
          "Django Architecture."
        ],
        "Build an Image Upload App": [
          "What we will build",
          "Create a Django project",
          "Start Django Development Server",
          "Create a Django App",
          "Install Pillow",
          "Creating a model",
          "Interacting with Models",
          "Creating Routes",
          "Creating Views",
          "Django Templates",
          "Populating Templates",
          "Running the app",
          "Project Code"
        ]
      },
      "requirements": [
        "Basic knowledge of Python advised but not mandatory",
        "Basic knowledge of Django advised but not mandatory"
      ],
      "description": "Web development is the work involved in developing a website for the Internet or an intranet. Web development can range from developing a simple single static page of plain text to complex web applications, electronic businesses, and social network services.\nPython is an interpreted high-level general-purpose programming language. Its design philosophy emphasizes code readability with its use of significant indentation. Its language constructs as well as its object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.\nDjango is a Python-based free and open-source web framework that follows the model–template–views architectural pattern. It is maintained by the Django Software Foundation.\nDjango is a high-level Python web framework that enables rapid development of secure and maintainable websites. Built by experienced developers, Django takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel.\nDjango was designed to help developers take applications from concept to completion as quickly as possible.\nReassuringly secure.\nDjango takes security seriously and helps developers avoid many common security mistakes.\nExceedingly scalable.\nSome of the busiest sites on the web leverage Django’s ability to quickly and flexibly scale.\nDjango is a collection of Python libs allowing you to quickly and efficiently create a quality Web application, and is suitable for both frontend and backend.",
      "target_audience": [
        "Beginner Web Developer"
      ]
    },
    {
      "title": "GSAP Animation Masterclass: Master Web Animations with Ease",
      "url": "https://www.udemy.com/course/gsap-animation-masterclass/",
      "bio": "Mastering GSAP Animation – From Beginner to Advanced\"",
      "objectives": [
        "GSAP Basics – Understanding the core GSAP library, including Timeline, and easing functions.",
        "Animating Elements – Move, scale, rotate, and fade elements with precision.",
        "Scroll-Based Animations – Use ScrollTrigger to create dynamic interactions tied to user scrolling.",
        "Complex Sequences – Build timeline-based animations and synchronize multiple effects.",
        "Performance Optimization – Learn best practices for smooth, lag-free animations."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "GSAP implementation": [
          "GSAP implementation"
        ],
        "GSAP animation properties and method": [
          "GSAP animation properties and method"
        ],
        "Timeline in GSAP Create Your First Timeline": [
          "Timeline in GSAP Create Your First Timeline"
        ],
        "GSAP scroll Trigger": [
          "how to use scroll Trigger",
          "Scroll Trigger multiple animation and scrub",
          "scroll Trigger with pin"
        ],
        "GSAP Animation With SVG Graphic": [
          "GSAP Animation With SVG Graphic",
          "svg path element",
          "Create Slick SVG Animations part 3"
        ],
        "Project 1": [
          "Buld a Custom Cursor animation",
          "Buld a Custom Cursor animation Part 2"
        ],
        "Project 2": [
          "Create Animated Timeline Designs"
        ],
        "Project 3": [
          "Create Stunning Text Animations with GSAP part 1",
          "Create Stunning Text Animations with GSAP part 2"
        ],
        "Project 4": [
          "Scrolling text animation",
          "scrolling text animation Part 2"
        ]
      },
      "requirements": [
        "basic knowledge of HTML CSS and JavaScript"
      ],
      "description": "Animation is a powerful tool in web development, making interfaces more engaging, interactive, and visually appealing. GSAP (GreenSock Animation Platform) is one of the most powerful and widely used JavaScript libraries for creating high-performance animations. Whether you're a beginner looking to add subtle motion to your website or an experienced developer aiming to build complex animated interactions, this course will take you from the fundamentals to advanced techniques.\nWhat You’ll Learn:\nGSAP Basics – Understanding the core GSAP library, including Tween, Timeline, and easing functions.\nAnimating Elements – Move, scale, rotate, and fade elements with precision.\nScroll-Based Animations – Use ScrollTrigger to create dynamic interactions tied to user scrolling.\nSVG Animation – Animate vector graphics for stunning visual effects.\nComplex Sequences – Build timeline-based animations and synchronize multiple effects.\nPerformance Optimization – Learn best practices for smooth, lag-free animations.\nWhy Take This Course?\nGSAP is the most powerful animation library for the web, used by major brands and professional developers worldwide. Whether you’re working on UI/UX design, interactive storytelling, or advanced visual effects, mastering GSAP will elevate your skills.\nBy the end of this course, you'll be able to build captivating animations that enhance user experience and engagement.\nJoin now and start animating like a pro!",
      "target_audience": [
        "Web Designer and developer",
        "front end developer and Ui Designer",
        "anyone who interested to learn web animation"
      ]
    },
    {
      "title": "Online Multi Doctor Appointment System with PHP and MySQL",
      "url": "https://www.udemy.com/course/multi-doctor-appointment-system-php-pdo-mysql/",
      "bio": "Building a complete multi doctor online appointment website using the PHP, PDO & MySQL from scartch.",
      "objectives": [
        "Complete project using php, pdo and mysql",
        "Full admin panel authentication system from scratch",
        "Sending email using phpmailer",
        "Complete CRUD system",
        "PHP session",
        "Patient registration, login, reset password (full authentication)",
        "Doctor login, reset password (full authentication)",
        "Connecting database with php, pdo",
        "Form validation technique",
        "Photo uploading system",
        "Toast message notification",
        "Ajax based appointment selection by patient (during appointment)",
        "Date slot creation by admin",
        "Patient payment system for online appointment",
        "PayPal and Stripe Integration",
        "Doctor consulting patient and adding symptom",
        "Doctor diagnosis the patient and giving advice",
        "Prescription making by doctor and schedule next appointment date",
        "Managing departmentwise doctors"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Local Server Setup & Preparing Environment": [
          "Installing XAMPP (Windows OS)",
          "Shift between php versions in XAMPP (Windows OS)",
          "Installing Laragon (Windows OS)",
          "Shift between php versions in Laragon (Windows OS)",
          "Install PHP 8.2 in Laragon (Windows OS)",
          "Installing XAMPP (MAC OS)",
          "Installing MAMP (MAC OS)",
          "Shift between php versions in MAMP (MAC OS)",
          "Download & Install Composer (Windows OS)",
          "Download & Install Composer (MAC OS)",
          "Code Editors"
        ],
        "Admin Panel Template Mastering": [
          "Describing HTML Template",
          "Separate Dashboard and Login",
          "Config File and Mailtrap Setup",
          "Moving all data into admin folder",
          "Creating Users Table and Developing Login & Logout System",
          "Forget Password",
          "Reset Password",
          "Edit Profile - Part 1",
          "Edit Profile - Part 2",
          "Other Pages"
        ],
        "Front End Template Mastering": [
          "HTML Template",
          "Project Folder Setup",
          "Changing all html extensions to php",
          "Creating header and footer php files and link to all pages"
        ],
        "Patient Panel - Full Authentication using Multi Table": [
          "Patient Registration - Part 1",
          "Patient Registration - Part 2",
          "Patient Registration Verify",
          "Patient Login, Dashboard and Logout",
          "Patient Edit Profile - Part 1",
          "Patient Edit Profile - Part 2",
          "Patient Forget & Reset Password",
          "Removed CDN and used local files for linking",
          "Apply Toastr For Success and Error Message"
        ],
        "Admin Panel - Departments": [
          "View Departments",
          "Create Department",
          "Edit and Delete Departments"
        ],
        "Doctor Panel - Full Authentication using Multi Table": [
          "Create and View Doctor by Admin",
          "Edit and Delete Doctor by Admin",
          "Adding Sample Doctor Data",
          "Doctor Login, Dashboard and Logout",
          "Doctor Edit Profile",
          "Doctor Forget and Reset Password"
        ],
        "Admin Panel - Photo Gallery for Department": [
          "Create, View and Delete Photos",
          "Adding Department Photos as Sample Data"
        ],
        "Front End - Departments and Single Department Page": [
          "Departments Page and Pagination",
          "Show Data in Single Department Page"
        ],
        "Admin Panel - Manage Patients": [
          "View Patients",
          "Create Patient",
          "Edit and Delete Patient"
        ]
      },
      "requirements": [
        "Basic knowledge in HTML",
        "Basic knowledge in CSS",
        "Basic knowledge in Javascript and Jquery",
        "Basic knowledge in Bootstrap",
        "Basic knowledge in Code Editor like VS Code or any other"
      ],
      "description": "In this course, I am going to teach students how to build a complete Online Multi-Doctor Appointment System from scratch using PHP and MySQL. The course will cover all the core aspects of web application development, including authentication systems, email verification, role management, and template mastering.\nWe will develop a real-world doctor appointment platform where multiple doctors can manage their schedules, patients can book appointments, and admins can monitor the entire system. This project will be built using the latest version of PHP at the time of recording, ensuring students learn modern and up-to-date practices.\nThis course is designed especially for beginners who have little or no experience with PHP, but even advanced learners will find it useful as we implement real-life features like doctor availability, appointment booking, patient management, and advanced reporting that are commonly required in real medical systems.\n\n\nAdmin Panel Features:\n1. Admin can create, edit and delete doctors.\n2. Admin can create, edit and delete patients.\n3. Admin can change logo, favicon etc.\n4. Admin can manage home page data.\n5. Admin can manage medicines.\n7. Admin can manage terms and privacy pages.\n8.  Admin can manage departments.\n9. Admin can see date and time schedules added by doctors.\n10. Admin can see appointments done by patient.\n11. Admin can view and delete subscribers.\n12. Admin can export subscriber list as CSV.\n13. Admin can change his own photo, information and password.\n14. Admin can see important dashboard data including his commission and earning.\n15. Admin can approve or cancel the withdraw request comes from doctor.\n\n\nDoctor Features\n1. Doctor can login in this system after his account is created by admin.\n2. Doctor can reset profile information if needed.\n3. Doctor can reset password.\n4. Doctor can change his or her own photo, and signature.\n5. Doctor can setup datewise time schedules and maximum capacity.\n6. Doctor can run consultation and fill up data for patients.\n7. Doctor can select multiple medicines during consultation.\n8. Doctor can see total earnings and available balance.\n9. Doctor can add withdraw request.\n\nPatient Features\n1. Patient can create account in this system for free.\n2. Patient can reset password if needed.\n3. Patient can change his or her own photo, and profile information.\n4. Patient can pay using paypal, stripe and create appointment to any doctor.\n5. Patient can see prescription and download or print that prescription.",
      "target_audience": [
        "Persons who want to learn php from scratch",
        "Persons who want to learn mysql from scratch",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to have a remote job in php",
        "Persons who want to start his freelancing career using php",
        "Persons who want to learn making an online doctor appointment website using PHP, PDO, MySQL"
      ]
    },
    {
      "title": "Laravel 8.X e-commerce VS React Js e-commerce with stripe",
      "url": "https://www.udemy.com/course/laravel-8x-e-commerce-vs-react-js-e-commerce-with-stripe/",
      "bio": "Learn the basics of ReactJS, Laravel and build a web application with Stripe API from scratch.",
      "objectives": [
        "How to install Laravel",
        "How to create and configure a project with Laravel",
        "Notions On Routes in Laravel",
        "How to create the controllers with Laravel",
        "How to connect the database with Laravel",
        "Notions on models and migrations with Laravel",
        "The basics of the ReactJS library.",
        "How to create a CRUD application with ReactJS.",
        "How to create an online shopping with ReactJS using the PayPal API.",
        "How to make ReactJS interact with mongoDB"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Laravel presentation",
          "Environments installations",
          "Setting up Laravel project",
          "Model View Controller Concept",
          "Basic routing1",
          "Basic routing2",
          "Controllers in Laravel1",
          "Controllers in Laravel2",
          "Blade templating (PARTIE 1)",
          "Blade templating (PARTIE 2)"
        ],
        "Models and Migrations": [
          "Models and Migrations1",
          "Models and Migrations2",
          "Saving data using terminal"
        ],
        "Viewing Data In laravel": [
          "Different ways viewing data1",
          "Different ways viewing data2",
          "Different ways viewing specific data"
        ],
        "Saving Data in Laravel": [
          "Different ways saving data",
          "Different ways saving data1",
          "Different ways saving data2",
          "Laravel collective (Part 1)",
          "Laravel collective (Part 2)",
          "Laravel collective (Part 3)"
        ],
        "Edit, Update, and Delete Data in Laravel": [
          "Edit and Update1",
          "Edit and Update2",
          "Delete data",
          "Resource Controller (PART 1)",
          "Resource Controller (PART 2)",
          "Resource Controller (PART 3)",
          "Resource Controller (PART 4)",
          "Resource Controller (PART 5)",
          "File manipulation1",
          "File manipulation1"
        ],
        "Importing Client Template in Laravel.": [
          "Laravel project installation",
          "Importing Client Template in Laravel - 1.",
          "Importing Client Template in Laravel - 2.",
          "Importing Client Template in Laravel - 3",
          "Importing Client Template in Laravel - 4",
          "Importing Client Template in Laravel - 5",
          "Importing Client Template in Laravel - 6",
          "Importing Client Template in Laravel - 7",
          "Importing Client Template in Laravel - 8"
        ],
        "Importing Admin Template in Laravel.": [
          "Importing Admin Template in Laravel 1",
          "Importing Admin Template in Laravel 2",
          "Importing Admin Template in Laravel 3",
          "Importing Admin Template in Laravel 4",
          "Importing Admin Template in Laravel 5",
          "Importing Admin Template in Laravel 6",
          "Importing Admin Template in Laravel 7",
          "Importing Admin Template in Laravel 8",
          "Importing Admin Template in Laravel 9",
          "Importing Admin Template in Laravel 10",
          "Importing Admin Template in Laravel 11"
        ],
        "Saving, Edit, Update, Delete, Activate and Unactivate data in Laravel": [
          "Create and view Categories1",
          "Create and view Categories2",
          "Create and view Categories3",
          "Edit and Update category1",
          "Edit and Update category2",
          "Edit and Update category3",
          "Delete category",
          "Saving and viewing products 1",
          "Saving and viewing products 2",
          "Saving and viewing products 3",
          "Saving and viewing products 4",
          "Saving and viewing products 5",
          "Saving and viewing products 6",
          "Edit and update product 1",
          "Edit and update product 2",
          "Delete product",
          "Activate and Unactivate Product",
          "Saving and viewing sliders 1",
          "Saving and viewing sliders 2",
          "Saving and viewing sliders 3",
          "Edit and Update slider 1",
          "Edit and Update slider 2",
          "Delete slider",
          "Activate and Unactivate Slider"
        ],
        "Viewing home page dynamically": [
          "Viewing home page dynamically 1",
          "Viewing home page dynamically 2",
          "Viewing home page dynamically 3",
          "Viewing home page dynamically 4"
        ],
        "Shopping Cart": [
          "Add product to cart 1",
          "Add product to cart 2",
          "Add product to cart 3",
          "Viewing Cart",
          "Update Qty 1",
          "Update Qty 2",
          "Removing product from cart"
        ]
      },
      "requirements": [
        "POO and PHP",
        "HTML, CSS, JS and BOOTSTRAP",
        "Stable internet connection",
        "Knowledge of basic notions of javascript. If not, just have the passion and motivation to learn ReactJS",
        "Have a stable internet connection"
      ],
      "description": "1: Laravel e-commerce\nIn this course, we will learn from scratch and step by step how to create a complete e-commerce web application with Stripe.\nWe will learn:\nHow to create and visualize products, product categories, sliders;\nHow to select a product by category;\nHow to add products to the cart;\nHow to update the item's quantity and how to remove items from the cart;\nHow to customize the payment form for online payment with the Stripe API;\nHow to record and view customer orders; How to export sales orders from Laravel to PDF.\nHow to automatically send the customer an email containing his orders after purchase.\nIn this course, we will learn from scratch, step by step, the basics of Laravel. We are going to code with Laravel 7.X but we will make the different comparisons between Laravel 7.X and Laravel 8.X.\nWe will learn:\nOn setting up a Laravel project. We will see in great detail how to set up a Laravel project;\nThe Model View Controller concept;\nThe Basic Routing;\nWith much more details on the Controllers (extending between models and views);\nHow to use the Blade templating template in a Laravel project. Which has the role of being able to avoid the reuse of similar HTML codes;\nWith much more detail on models and migrations;\nLaravel Collective is a form system clean for Laravel.\n\n\n2:  React JS E-commerce\nIn this course, we will learn from scratch the basics of ReactJS and then create two projects, one of which will focus on creating a CRUD (Create Read Update Delete) application and the other on the creation of an online store with the Stripe API.\nWith that, the points described in the following lines show the different basics that we will learn about the ReactJS library.\nWe will talk about:\nBabel and Le JSX;\nThe components;\nThe component within a component;\nPassing information from a parent component to a child component;\nThe conditions in Reacjs;\nHow to store data in states with ReactJS;\nHow to use CSS (Cascading Style Sheet) in ReactJs;\nHow to use \"inline CSS\" (Cascading Style Sheet) with ReactJS;\nHow to use the \"external CSS\" (Cascading Style Sheet) with ReactJS;\nHow to use the \"CSS module\" (Cascading Style Sheet) with ReactJS;\nThe different phases (mounting phase, update phase, and unmounting phase) of a component's life cycle with ReactJS;\nEvents in ReactJS;\nThe second part of our course will focus on creating a CRUD application with local storage. We will have to learn about:\nHow to delete data in states with ReactJS;\nHow to add data to states with ReactJS;\nHow to display data in states with ReactJS;\nHow to update data in states with ReactJS;\nThe third and last part of our course will be on realizing an online shopping cart with the Stripe API.",
      "target_audience": [
        "PHP Developer",
        "Web developers who want to take their skills to the next level",
        "Web / Software Developers who want to learn Laravel",
        "Web developers of all levels.",
        "Developers."
      ]
    },
    {
      "title": "Modern PHP MySQL Masterclass from Scratch- Chat Box Project",
      "url": "https://www.udemy.com/course/modern-php-mysql-masterclass-from-scratch-project-included/",
      "bio": "Complete PHP MySQL Course for Beginners: Learn everything you need to become a professional PHP developer with project",
      "objectives": [
        "PHP MySQL from beginner to expert level",
        "how to implement user Login/registration functionality PHP",
        "You will learn New PHP Password Hashing technique",
        "You will learn to use an API to retrieve data from a database to a graphical interface",
        "how to use HTML form to submit data to the database",
        "You learn some of the New features in PHP7",
        "How to implement AJAX functionality in php without refreshing the page",
        "You will learn how to build a chat box system from scratch",
        "You will learn about php persistence sessions",
        "You will learn to debug or fix your code"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "How php works",
          "Setting up our environment",
          "Review",
          "Embedding and outputting data 1",
          "Embedding and outputting data 2",
          "Commenting"
        ],
        "Variables and Datatypes": [
          "variables and concatenation",
          "string datatypes",
          "Integer floats and boolean",
          "Arrays",
          "Associative Arrays"
        ],
        "Control Structure": [
          "If statement",
          "Else-if statement",
          "Switch",
          "While loop"
        ],
        "Operators": [
          "Arithmetic operators",
          "Comparison operators",
          "Logical operator",
          "Tenary operator",
          "Coalescing operator",
          "Spaceship operator"
        ],
        "Custom Functions": [
          "Creating function",
          "Function parameters",
          "Function return values"
        ],
        "Built-in Functions": [
          "Math functions",
          "String functions",
          "Array functions"
        ],
        "Form interaction and Superglobals": [
          "$_GET superglobal",
          "$_POST superglobal",
          "External form submission",
          "$_SESSION superglobal"
        ],
        "PHP and MySQL Database": [
          "Introduction to phpmyAdmin",
          "Creating database & tables",
          "Database connection",
          "Inserting record",
          "Retrieving record"
        ],
        "Project": [
          "Creating login markup",
          "Creating registration form",
          "Creating markup for chat index",
          "Styling login/registration form",
          "Styling the chat index",
          "Creating database & tables",
          "Connecting to database via php",
          "User registration functionality",
          "User login functionality",
          "Inserting messages into the database",
          "Displaying messages with Ajax and the logout"
        ],
        "Next Step": [
          "Next Step"
        ]
      },
      "requirements": [
        "Knowledge of some HTML may be of more help for this course but NOT required"
      ],
      "description": "Are you New to PHP and want to learn PHP MySQL database the right way?\nThen there is no need searching the web for outdated stuffs any longer. This course will help you get all the fundamentals of PHP & MYSQL DATABASE and at the end of this course you would be able to build an full Chat Box with Login/registration system that can communicate back & fort with the database as such, this system is an important feature employed in every application you find on the internet. This course is comprehensive for absolute beginner in PHP and it takes you completely from scratch to mastery so there is no previous knowledge of programming required in order to take this course. I have been a PHP developer for 8 years now and i have worked as a PHP developer in Canada, USA and other place. Been a PHP developer has fetched me a lot of money, and  I'm super excited to take you with me on this journey. This course also comes with exercise files or course files to better prepare you towards your development career.\nThe Knowledge of PHP MySQL will allow you to build web applications, Ecommerce  websites, Mobile APP, Content Management systems such as WordPress, Joomla, and social networks like Facebook, Twitter or even search engines like Google. PHP is still the NO:1 language for web programming and knowing it will make you stand out in the web development world and job market places.\nPROJECT\nThe beauty about this course is that, you will learn how to build a chat-box system with login/registration system from scratch including Ajax functionality.\nSome of the major TOPICS covered include ...\nDatabases in PHP\nHow to implement user registration and login\nForm submissions & interactions with PHP\nSecurity in PHP\nVariables in PHP\nSpaceship Operators in PHP 7+\nTenary Operators in PHP\nNullcoalesing Operators in PHP 7+\nLogical Operators in PHP\nArrays in PHP\nControl Structures in PHP\nComparison Operators in PHP\nLoops in PHP\nFunctions and custom functions in PHP\nType declaration & strict mode in PHP 7+\nConstants in PHP\nSuper Globals in PHP\nPersistence Sessions in PHP\nHow to make uploads with FILES\nAuthentication\nLearn to use Ajax\nLearn simple HTML and CSS from scratch\nAnd so much more .....\nLIFE TIME ACCESS:   By enrolling in this course you have an instant Life- Time access\n30 DAY MONEY BACK GUARANTEE:  This course comes with a 30 day money back guarantee! If you are not satisfied in any way, you will be refunded of your money.\nTHANK YOU AND I HOPE TO SEE YOU IN THE COURSE",
      "target_audience": [
        "This course is meant for TOTAL beginners in PHP",
        "No prior knowledge of programming is required, every thing from scratch",
        "Desire to learn"
      ]
    },
    {
      "title": "Build Servers with Bun and TypeScript",
      "url": "https://www.udemy.com/course/build-servers-with-bunjs-fastify-and-prisma/",
      "bio": "Learn to Build API Services Using Bun, TypeScript, Node and PrismaORM",
      "objectives": [
        "Learn how to create and setup new projects using Bun",
        "Understand Bun's super easy module resolution system that can eliminate compatibility issues between CommonJS and ES6 modules",
        "Understand Bun's built-in CLI that can do everything from running our app; to building our project; and installing our package dependencies",
        "Review Bun's NodeJS API compatibility. We can now have a modern fast runtime without sacrificing compatibility with Node.",
        "Learn how to create typed and validated Routes with Fastify and its Schema system",
        "Understand how Fastify's Plugin and Scoping system work",
        "Understand how to use Decorators and share state and functionality globally throughout the service",
        "Understand how to use Hooks to get our code to run at the desired time",
        "Understand how to handle errors that may happen in our Fastify routes",
        "Understand database access and ORM using PrismaORM. Build a fully functional Repository layer using PrismaORM and Postgres",
        "Build a Twitter clone API service using TypeScript, Fastify, PrismaORM and Postgres",
        "Use Docker to deploy our service and get it ready for the cloud"
      ],
      "course_content": {
        "Introduction to Bun": [
          "What Will We Learn?",
          "Package and Project Management",
          "Developer Tools",
          "High Performance JavaScript Runtime"
        ],
        "Learn Core Fastify Features": [
          "What Will We Learn?",
          "Understanding How to Create Typed Routing",
          "Understanding Plugins and Scope",
          "Understanding Decorators",
          "Understanding Hooks",
          "Understanding Error Handling"
        ],
        "Build a Fasitify Server with Bun and Prisma": [
          "What Will We Learn?",
          "Creating Base Build of Docker and Postgres",
          "Understanding Prisma",
          "Build Fastify Server Repository",
          "Build Fastify Server Routes"
        ]
      },
      "requirements": [
        "This is an intermediate level course. You should know basic TypeScript and some server development"
      ],
      "description": "Bun is a new high performance JavaScript runtime. It's combination of speed and capability is generating enormous attention in the JavaScript ecosystem.\nIn this course we will explore the major features of Bun and see how, together, these features provide a fun, fast and robust developer experience. We will use Bun to create a complete Twitter clone API using Bun, TypeScript, Fastify, PrismaORM, and Postgres. And deploy the service onto a Docker image.\nThe JavaScript ecosystem has been stagnant for a while now. Dependency hell. Slow project compilation. Seemingly random build errors. The need to spend huge amounts of time configuring and trouble shooting project issues. JavaScript fatigue has become a very real issue.\nIn this course we'll see that Bun is far more than just a fast runtime. Bun includes build tools that streamline the task of transpiling and bundling our apps. NPM package installations are lightening fast. Bun has an enormously powerful CLI, which is included out of the box. Creating and setting up new projects takes almost no effort at all. And on top of all this, Bun's capabilities also include NodeJS compatibility. So you can keep using most of your favorite frameworks and libraries and just focus on building your app. Bun is truly next level tech!",
      "target_audience": [
        "Developers new to BunJS that would like to get started building apps with the runtime"
      ]
    },
    {
      "title": "Webflow Essentials: Hands-On Guide to Building Websites",
      "url": "https://www.udemy.com/course/webflow-essentials-hands-on-guide-to-building-websites/",
      "bio": "Webflow Essentials: A Hands-On Guide to Building Beautiful Websites",
      "objectives": [
        "Hands-on learning by build a portfolio website.",
        "Detailed overview of Webflow's designer interface.",
        "Create responsive websites using Webflow where the website automatically adapts to different screen sizes.",
        "Learn about Flex, columns, divs etc.. and how to efficiently use them.",
        "Learn about Classes, Re-usable components, Pages and more",
        "Create stunning animations for Page load, Scroll, Sections and more",
        "Create custom navigations in Webflow.",
        "Learn to convert a Figma file to website using Webflow.",
        "Discussion on the best practices for building websites",
        "Learn about Tips & Tricks which can make the workflow faster and efficient."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting started with Webflow",
          "Designer Interface Overview",
          "Building the Hero Section",
          "Grid Layout",
          "Project Section",
          "Blogs Section",
          "Creating a new page",
          "Animation",
          "Making the website responsive",
          "Publishing the Website",
          "Conclusion"
        ]
      },
      "requirements": [
        "A Webflow account is required, I'll show you how to make one within the course.",
        "There no prior knowledge of Webflow required as we discuss everything from the base.",
        "No previous design skills or experience required."
      ],
      "description": "Welcome to the \"Webflow Essentials: A Hands-On Guide to Building Beautiful Websites\" course.\nWebflow is a powerful and intuitive website builder that allows you to create stunning websites with ease. And now, you can learn it all in this class!\nIn this comprehensive guide, you'll discover the basics of Webflow and how to use it to build your own websites. I'll will take you step by step through the process, covering everything from designing your website to publishing it live.\nYou'll start by learning how to navigate the Webflow interface and how to add and customize elements to your pages. Then, you'll dive into more advanced techniques like using dynamic data, custom interactions, and advanced styling options.\nAnd the best part? You'll practice what you learn as you work on a hands-on project by building a Portfolio website throughout the course. This will give you real-world experience and the confidence to create your own stunning websites with Webflow.\nReady to bring your website dreams to life? Our Webflow Beginners Course is the perfect place to start! With hands-on learning and expert instruction, you'll go from a complete novice to a Webflow pro in no time. Whether you're a complete beginner or just looking to expand your skills, this course is perfect for you. Enroll now and get ready to master Webflow and build beautiful websites like a pro!",
      "target_audience": [
        "Beginners who wants to create stunning website without writing even a single line of code."
      ]
    },
    {
      "title": "PHP - A 3-Step Process to Master PHP for Newbies + Templates",
      "url": "https://www.udemy.com/course/php-3-step-process-to-master-php-for-beginners-templates/",
      "bio": "Learn PHP 7 like a Professional! Start from the basics and go all the way to creating your own interactive PHP web apps!",
      "objectives": [
        "Learn how to develop impressing PHP programs in a few minutes/ hours.",
        "Learn the basic PHP skills needed to apply for PHP developer positions.",
        "Gain enough experience to pass a core PHP programming interview and perform well on the job.",
        "Be able to sit for and pass the PHP Certificate exams."
      ],
      "course_content": {
        "Variables & Data Types": [
          "Variables",
          "3 Tips to Get Even More Value Out of this Course",
          "Data Types",
          "Variable Operators"
        ],
        "If-Statements and Conditional Logic": [
          "If-Statements and Conditional Logic"
        ],
        "Loops and Iteration": [
          "Loops and Iteration"
        ],
        "Arrays": [
          "Arrays",
          "Introductions to 2-Dimensional Arrays",
          "Multidimensional Arrays & Examples"
        ],
        "Functions & Files": [
          "Functions",
          "File Input/Output",
          "Hyper Coding Practice Test"
        ],
        "Object-oriented Programming": [
          "Introduction to Object-oriented Programming",
          "Objects and Classes",
          "Methods",
          "Encapsulation and Data Hiding",
          "Message Passing",
          "Inheritance",
          "Polymorphism",
          "Generalization and Specification",
          "Links and Associations",
          "Super Coding Practice Test"
        ],
        "A 3-Step Guide for Newbies with Templates": [
          "A 3-Step Guide for Newbies with Templates"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You will not need any any prior knowledge - so get started now!",
        "You should be committed to run through the course and become knowledgeable about PHP.",
        "Nothing else! It’s just you, your computer and your hunger to get started today!"
      ],
      "description": "Master PHP Coding! Learn the basic of computer programming, variables, if-statements and decision making, loops, funtions and files input-output, XML Processing and Database Handling.\nAfter this course you will be able to code your fancy app for your work or your personal porfolio. Learning PHP will give you more opportunities for jobs and career advancement because PHP is one of the most requested skills in 2020!\nThis course requires no previous programming or Php experience. If you’ve never programmed a computer before, or if you know another programming language and want to learn Php , this course will teach you everything you need.\nSo what are you waiting for? Learn PHP in a way that will advance your career and increase your knowledge, all in a fun and practical way!\n\n\n**** Let's start this journey together and you will have an instructor to guide you in all the phases of app development. ****\n\n\nRead what other students are saying about \"PHP - A 3-Step Process to Master PHP for Newbies + Templates\" course:\nThe course is great for web development, or if you want to be a web developer by creating a personal portfolio.   (Kailic, 5 stars)\nThe course has a huge amount of content and really useful information. I believe that the information provided in this course will be helpful and will give you flexibility in applying the functionalities provided in it on different projects.  (Gitron, 5 stars)\nMore than great, excellent content, really valuable.  (Jihuc, 5 stars)",
      "target_audience": [
        "Beginners who have never programmed before.",
        "Programmers switching languages to PHP.",
        "Beginner PHP programmers who want to level up their skills!",
        "Anyone with the desire to learn PHP programming."
      ]
    },
    {
      "title": "40 Programs in Python 3",
      "url": "https://www.udemy.com/course/forty-programs-in-python-three/",
      "bio": "Beginner's guide to learn python 3.8 programming from scratch with the help of different programming examples.",
      "objectives": [
        "Basic functions in Python",
        "Python Loops and data variables",
        "Different Coding examples",
        "Source code of all programs"
      ],
      "course_content": {},
      "requirements": [
        "Basic computer knowledge is necessary"
      ],
      "description": "Python Language has a great scope in data science (DS), machine learning (ML), Natural language processing (NLP), artificial intelligence (AI), web development, game development, IOTs, and neural networks. Python is the most popular programming language nowadays. PyPy, PyCharm, Pyspark and other software are contributing a lot in the field of automation.  Jython, Cpython, PYPy, and IronPython are the implications of python language. This language has a very easy syntax and is easy to read and write.\nIn this course you will learn variables in python 3, data structures, conditionals, loops, and basic functions with the help of different programming code examples. You would be able to do python certification, python coding, python comment, python documentation, python else if, and loops.\nIf you know or don’t know other language such as C or Java, you can easily work on python IDE (integrated development environment). Learn by doing simple program exercises in online Compiler and learn how to become a coder/programmer. If you are new to programming, This is the perfect language to learn. You can learn it from scratch with this best video lecture course that I have designed for you.\nThis course is for:\nBeginners with no programming experience\n\n\nPrime features of this Course:\nA python program is very easy to understand. After the completion of this course, you will be able to work on python editor and also import different library functions. This course is designed such as it supports Python for kids, python for beginners as well as for pro programmers. This uses online python compiler: Google Colab to run codes online. In this course, you will learn:\nHow to convert Kilometers into miles.\nFind the smallest number among three given numbers.\nHow to print Hello World in Python using print function.\nFactorial calculator of a number.\nTaking input from user in integer, floating point, and string format.\nPrinting of prime numbers.\nMultiplication table of a given number.\nFind whether a year is a leap year or not.\nFind a character from a given ASCII number.\nHow to convert character or letter to ASCII python.\nHCF of two numbers by division method.\nCalculate cube of a number by lambda function.\nAdd two float numbers.\nEven odd program in python using function.\nHow to count the number of vowels in a string using for loop.\nProgram to check whether a number is positive or negative or zero.\nHow to add subtract multiply or divide two integers.\nVowel or consonant py thon program.\nCelcius to Farenheit code & Fahrenheit to celsius conversion.\nExponentiation (power of a number).\nPlus:\nProgram to check whether a character is alphabet or not.\nLargest among three numbers.\nProgram code to find the length of a string.\nHow to reverse a string.\nHow to sort a string alphabetically.\nCreate or declare empty list.\nRemove punctuation marks from string.\nHow to find the largest number in a list using list append method.\nHow to find the largest number in a list without max function.\nFind the biggest number in a list max function.\nSmallest number in a list using list append And for loop.\nPrint the smallest number in a list using list sort.\nHow to find the smallest number in a list using min function.\nSum of all digits in a number.\nSum of n natural numbers in python using while loop.\nHow to find numbers divisible by other numbers.\nSwapping two numbers with third variable.\nSwapping of two numbers without using temporary third variables.\nProgram to add two matrices using nested lists.\nAdd two binary strings.\nPlus: 5 MORE PROGRAMS AS A GIFT:\nProgram to convert decimal to binary.\nGenerate a random number in between 0 and 50 or a range.\nAdd two numbers prompted by the user.\nFinding transpose of a matrix.\nProgram to print the calendar of a given month and year.\n\n\nDo you need some specific knowledge for this course?\nThis is the standard course that includes python 3.0 programming examples. I will teach you on python online compiler Google colab. You do not need python installation on windows or MAC OS on your device. You just need to practice on Jupyter notebook using anaconda and pip, if you want, else you can learn easily by watching this comprehensive python programs tutorial online.\nThis course uses Python 3.7 and Python 3.8. This is the video tutorial in python3 programming for the absolute beginner. Python 2 has become outdated and no new projects are made in classic python, instead modern python programing is getting fame in the fields of data science, IOTs, Robotics, neural networks, and natural language processing. It has deep role in search engines, searching algorithms, and data mining techniques.\nWhere to learn python from scratch?\nWelcome to 40 Program code examples for everybody:\nThis is the best & complete Python video tutorial course for beginners, intermediate and advanced levels developers. At the end of this course, you would be able to learn basic programming codes. It is a standard course to go from zero to hero in python 3. This covers basic functions and modules from beginner to advanced level. This course can make you real-world Python programmer. This teaches you the basic introduction to python with the help of google Colaboratory notebook examples. This course is the complete python master class designed for success in every Python-related industry. This course supports Windows, MacOS, and Linux.",
      "target_audience": [
        "Beginners who have never programmed before.",
        "For those who have programming experience already."
      ]
    },
    {
      "title": "PDO & MySQL: Connect to MySQL DB using PDO & CRUD Operations",
      "url": "https://www.udemy.com/course/connect-to-mysql-db-using-pdo/",
      "bio": "Go from a Beginner to Advance in PDO: Connect to MySQL DB using PDO, Write your first PDO Wrapper class, and do CRUD",
      "objectives": [
        "1- Connect to MySQL Database using PDO",
        "2- Write simple PDO queries without parameters",
        "3- Write PDO queries with parameters –Prepare statements",
        "4- Get data out of statements using –foreach(), fetch(), fetchAll()",
        "5- Getting data out of statement - PDO::rowCount() – the proper use of the rowCount() function",
        "6- Getting affected rows and last insert id",
        "7- Write a PDO Wrapper class and methods",
        "8- Error handling and Exceptions"
      ],
      "course_content": {
        "Course Introduction and Setup": [
          "Introduction",
          "Curriculum Overview",
          "Setting up the development environment"
        ],
        "Connecting to MySQL Database PDO": [
          "Section Intro",
          "Why PDO",
          "Create the Database and Table",
          "Connecting to MySQL DB with PDO",
          "Running Simple Select queries. PDO::query",
          "Running Simple INSERT, UPDATE, or DELETE queries with PDO::exec()",
          "Running queries with Parameters. Protection from SQL injection",
          "Getting data out of statement. - foreach()",
          "Getting data out of statement. - PDO::fetch()",
          "Getting data out of statement –fetch() Fetch Modes",
          "Getting data out of statement. PDO::fetchColumn()",
          "Getting data out of statement in dozens different formats. PDO::fetchAll()",
          "Error handling and Exceptions",
          "The PDO::rowCount() function explain",
          "Getting affected rows and last insert id",
          "The problem with Limit Clause in Prepare Statements",
          "A simple PDO function and Chaining Methods",
          "Coding Exercise and Assignment",
          "Solution to Coding Exercise"
        ],
        "Your First PDO Wrapper Class using construct method": [
          "Section Intro",
          "Your first PDO Wrapper class using construct() method",
          "PDO CRUD Methods (functions in a class)",
          "CRUD methods practice",
          "Conclusion and Thank You"
        ]
      },
      "requirements": [
        "1. Basic knowledge in PHP , and MySQL (Basic Concept in PHP & MySQL, are not covered in the course)",
        "2. Comfortable working with any PHP development environment – XAMPP, MAMP, WampServer, EasyPHP etc",
        "3. Comfortable working with any text editor – for example: notepad++, Visual Studio Code, Atom, Sublime",
        "4. Knowledge in OOP and PDO will be a plus but not compulsory. Everything is explained from scratch."
      ],
      "description": "Do you want to know how to connect to MySQL Database using PDO?\nDo you want to know how to write PDO Database Wrapper Class and methods the proper way?\nDo you want to know how to do CRUD operations with PDO?\nDo you want to know how to use the rowCount() function the proper way? Note that is the most misused function among PHP PDO developers.\nDo you want to know how to write simple and complex queries with PDO?\nDo you want to be able to write slim, concise, reusable and secure code?\nIf your answer to all these is Yes, Then this course is for you.\nIn this short course, you are going to learn, practice and do some hands-on exercises on how to:\nConnect to MySQL Database using PDO\nWrite your first PDO Database Wrapper class\nWrite PDO CRUD methods (i.e. function in a class)\nWrite simple queries – queries without parameters\nWrite secure queries with parameters\nGet data out of statements – using foreach, fetch(), fetchAll(), fetchColumn()\nError handling and Exceptions\nPDO::rowCount() function explained\nGet affected rows and last insert Id\nThe problem with Limit Clause in prepare statements\nWrite a simple general function and chaining methods",
      "target_audience": [
        "1. PHP | PDO enthusiasts",
        "2. Newbie in PDO",
        "3. Freelance web developers who want to get a better grasp in PHP | PDO",
        "4. Intermediate PHP|PDO developers who want to write slimmer, concise, more secure codes.",
        "5. Experience PHP developers who are still struggling with PDO"
      ]
    },
    {
      "title": "Introduction to REST APIs for New Developers",
      "url": "https://www.udemy.com/course/apis-for-new-developers/",
      "bio": "Learn the technical aspects of APIs *and* get practical tips that'll help you use APIs in the apps that you build.",
      "objectives": [
        "What APIs are, why they exist, and how they work",
        "How to derive maximum benefit from Developer Resources",
        "API Requests & Responses",
        "How to try APIs without writing any code",
        "JSON - the \"language\" of API requests & responses",
        "How to get help when you're stuck",
        "API Security & Authentication"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Intro to APIs",
          "API Use Cases"
        ],
        "How APIs work": [
          "How APIs work",
          "API Requests",
          "API Responses",
          "JSON (JavaScript Object Notation)",
          "API Security & Authentication"
        ],
        "APIs in Action": [
          "APIs in Action"
        ],
        "How to use APIs": [
          "Developer Resources",
          "Trying an API",
          "Getting Help"
        ],
        "Conclusion": [
          "Course Recap",
          "Additional Resources"
        ]
      },
      "requirements": [
        "No programming experience needed -- just a desire to learn about APIs!"
      ],
      "description": "Want to use APIs in the apps that you build, but not sure where to start? This is the course for you!\nUnlike other courses about REST APIs, this course not only teaches how APIs work from a technical standpoint -- it also provides practical tips for using APIs in the apps that you build. After all, what good is the technical knowledge without the practical know-how to actually apply it?\nYou'll learn the technical aspects of REST APIs -- things like: HTTP Requests & Responses, JSON, API authentication, and how computers communicate using the Request : Response cycle.\nAnd just as importantly -- you'll acquire some practical tips for using APIs in the apps that you build -- things like: how to use Developer Resources (dev centers, dev accounts, SDKs, and docs), how to use tools like Postman, cURL, or API Explorers to try APIs without writing any code, and how to get help when you're stuck.\nYou'll explore API use cases, see actual APIs in action, and by the end of the course, be equipped to lead technical discussions about APIs and even more importantly -- to use APIs in the apps that you build.\nAll this in less than 2 hours time! Ready to get started? Let's goooooo!",
      "target_audience": [
        "Developers who want to use REST APIs in the apps that they build"
      ]
    },
    {
      "title": "Build A TodoList with ASP.NET and Electron React",
      "url": "https://www.udemy.com/course/build-a-todolist-with-aspnet-and-electron-react/",
      "bio": "Learn to build a Full Stack ASP.NET Core and React Electron Application in No Time",
      "objectives": [
        "The student will learn the basics of RESTful API development with ASPNET Core",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the Entity Framework Core ORM",
        "Learn to consume JSON with React Electron"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create ASP.Net Core API": [
          "Install DotNet Core 6",
          "Install Visual Studio and SQL Server",
          "Create a SQL Server Database",
          "Create ASP.Net Core API",
          "Add Entity Framework Core Dependencies",
          "Add Database ConnectionString",
          "Add ASP.NET Core DB Context",
          "Run ASP.NET Core Entity Framework Core Migrations",
          "Create ASP.NET Core Todos Controller",
          "Get Todos Entity Framework Core",
          "Create Todos Entity Framework Core",
          "Update Todos Entity Framework Core",
          "Delete Todos Entity Framework Core",
          "Run ASP.NET Core Restful API"
        ],
        "Create a Todo App with Electron React": [
          "Create Electron Project",
          "Add UI Library",
          "Add Todo Service",
          "Add CRUD",
          "Create TodoList Boilerplate",
          "Add TodoList State",
          "Create Components",
          "Create Todo Item Component",
          "Add Todo Tabs",
          "Add Form"
        ]
      },
      "requirements": [
        "Understand basic C#"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use ASPNet Core and React Electron. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a React Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, C#, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nReact Hooks\nReact Functional Components\nHTTP Requests with Fetch\nCRUD Methods\nASPNet Core\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with React Electron and ASPNet Core.",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "Build a Learning Management System with React and Tailwind",
      "url": "https://www.udemy.com/course/build-a-learning-management-system-with-react-and-tailwind/",
      "bio": "Build an advanced learning management system using React JS and Tailwind CSS from scratch to deployment.",
      "objectives": [
        "Build a full Learning Management System (LMS) from scratch using React and Tailwind CSS",
        "Structure and design responsive, modern web pages for an LMS using Tailwind CSS",
        "Manage dynamic content and user interactions with React state, props, and hooks",
        "Deploy a fully functional web application online for free using Vercel",
        "Implement routing and navigation in a React application using React Router",
        "Organize and reuse code efficiently with React components and props",
        "Handle basic user authentication and protected routes (optional if you covered login/signup)",
        "Optimize a web application for performance and responsiveness",
        "Use Git and GitHub for version control and project backups",
        "Understand the basics of deploying, hosting, and maintaining web applications",
        "Style components quickly and responsively using Tailwind CSS utility classes"
      ],
      "course_content": {
        "Project demo": [
          "Project demo"
        ],
        "Project Setup / Package installation": [
          "Project Setup / Package installation"
        ],
        "Navigation Bar": [
          "Navigation Bar Part 1",
          "Navigation Bar Part 2"
        ],
        "Hero section": [
          "Hero section"
        ],
        "Categories Section / Courses Section": [
          "Categories Section / Courses Section"
        ],
        "Instructor Section / Student Section": [
          "Instructor Section / Student Section"
        ],
        "Testimonial Section / Partners Section": [
          "Testimonial Section",
          "Testimonial Section / Partners Section / Footer"
        ],
        "Item details page": [
          "Item details page part 1",
          "Item details page part 2"
        ],
        "Cart page": [
          "Cart page part 1",
          "Cart page part 2"
        ],
        "Authentication Pages": [
          "Authentication Pages"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS, and JavaScript",
        "A GitHub account (optional, but recommended for deploying and saving code)",
        "Some experience using React (even basic is fine!)",
        "Familiarity with React fundamentals (components, props, state, hooks)",
        "A computer with internet access",
        "A code editor like Visual Studio Code (free)",
        "A free Vercel account for deployment (will be guided in the course)"
      ],
      "description": "In this comprehensive course, you'll learn how to build a professional Learning Management System (LMS) using React and Tailwind CSS from the ground up. This hands-on course is designed for developers who want to enhance their skills by building real-world applications with practical, in-demand tools. You’ll learn how to create a clean, modern, and responsive LMS interface, focusing entirely on the front-end, without any back-end technologies.\nThroughout the course, we’ll dive deep into React to build interactive components and Tailwind CSS to style them efficiently. You’ll learn best practices for creating a user-friendly, scalable UI, implementing dynamic features like course categories, user authentication, and progress tracking with smooth user experiences.\nWe’ll also cover performance optimization techniques to ensure your LMS is fast and responsive across all devices and screen sizes. By the end of this course, you’ll have built a fully functional LMS and gained the skills to create modern web applications using React and Tailwind CSS with confidence and creativity.\nAdditionally, you’ll learn how to deploy your LMS project easily using Vercel, making your application accessible to users worldwide. This course is ideal for anyone who wants to strengthen their React skills, improve their front-end development knowledge, and build a fully functional application ready for real-world use",
      "target_audience": [
        "Developers who want to build a real-world Learning Management System (LMS) project",
        "React learners who are ready to move beyond beginner projects",
        "Web developers looking to improve their Tailwind CSS and deployment skills",
        "Programmers who want to learn how to deploy full applications online",
        "Anyone who wants to create a complete web application from scratch",
        "Students preparing for real freelance or job projects by building portfolio-ready apps",
        "Beginners who know the basics of React and want to build bigger, real projects",
        "Web developers who want to practice Tailwind CSS by building a real app",
        "Anyone interested in learning how to create and launch a Learning Management System (LMS)",
        "Students who want to add a full-stack project to their portfolio",
        "Freelancers or aspiring developers who want to offer LMS projects to clients"
      ]
    },
    {
      "title": "The Complete Front End Web Development Course",
      "url": "https://www.udemy.com/course/the-complete-front-end-web-development-course/",
      "bio": "Master HTML, CSS, JavaScript, Bootstrap 5, & AI Tools for Front End Web Development — From Beginner to Advanced Projects",
      "objectives": [
        "Build real-world websites with HTML5 and CSS3",
        "Become a JavaScript Expert – Make websites interactive with JavaScript, handling forms, events, and data.",
        "Use Bootstrap 5 – Create responsive, mobile-first websites quickly using Bootstrap’s grid system and components.",
        "Enhance User Experience – Add animations, transitions, and smooth interactions to your websites.",
        "Responsive Web Design – Design websites that look great on all devices with media queries and Bootstrap’s grid.",
        "Build Real Projects – Complete up to 10 full-scale projects, including landing pages, portfolios, and business websites.",
        "Customize and personalize professional Bootstrap templates",
        "Leverage AI in Development – Use ChatGPT to generate code, fix bugs, and optimize your front-end workflow.",
        "Create a Portfolio – Showcase your skills with a professional front-end portfolio to impress employers or clients.",
        "Fast-Track Your Development – Master tools and techniques that speed up front-end coding, including leveraging AI."
      ],
      "course_content": {
        "Introduction to HTML": [
          "Course preview",
          "Introduction",
          "Text Editor Installation"
        ],
        "Web Structure - HTML": [
          "HTML Structure and Tags",
          "Creating a Webpage",
          "Text in HTML",
          "Semantic Markup",
          "Lists"
        ],
        "Visual Elements": [
          "HTML Links – Part 1",
          "HTML Links – Part 2",
          "Images",
          "Tables"
        ],
        "Interactivity & Multimedia": [
          "Forms",
          "Extra Markup",
          "Videos and Audios"
        ],
        "Introduction to CSS": [
          "Introduction to CSS",
          "CSS Selectors",
          "How to Change Fonts in a Website"
        ],
        "Working with Text, Colors and Boxes": [
          "Colors",
          "Texts in CSS",
          "Text Indent, Text Shadow & Link Styles",
          "Boxes in CSS",
          "List & Table",
          "Images in CSS"
        ],
        "Introduction to JavaScript": [
          "What is JavaScript? Why It’s Important",
          "How JavaScript Works in the Browser",
          "Setting Up Your Environment (IDE, Browser Console)",
          "Hello World Code and Common Mistakes in JavaScript",
          "Variables (var, let, const)",
          "Rules for Variables in JavaScript",
          "Project: Mini App - Greeting Message",
          "Data Types in JavaScript",
          "Operators (Arithmetic, Assignment, Comparison, Logical)",
          "Operators in JavaScript",
          "Conditional Statements (if, else, switch)",
          "Loops (for, while, do...while)"
        ],
        "Functions and Scope": [
          "Functions (Declaration, Expression, Arrow Functions)",
          "Parameters, Arguments, and Return Values",
          "Scope (Global vs Local)"
        ],
        "Arrays and Objects": [
          "Arrays (Create, Access, Methods like push, pop, shift, unshift)",
          "Iterating Over Arrays (for, forEach, map)",
          "Objects (Create, Access, Update, Delete)",
          "Looping Through Objects"
        ],
        "DOM Manipulation": [
          "What is the DOM?",
          "DOM Selectors in JavaScript",
          "Modifying Web Page Content with Javascript DOM",
          "Changing Content and Styles with JavaScript",
          "Creating, Removing, and Modifying Elements",
          "Event Listeners (click, mouseover, input)",
          "What is an API?",
          "Fetch API Basics (GET request)",
          "POST, PUT, DELETE – Examples in JavaScript",
          "How to Install Live Server & JSON Setup"
        ]
      },
      "requirements": [
        "No Prior Experience Needed: This course is beginner-friendly."
      ],
      "description": "Welcome to The Complete Front-End Web Development Course—the only course you need to become a professional front-end developer in today's tech world!\nIn this comprehensive and hands-on course, you’ll start from the basics and work your way up to advanced front-end skills. You’ll learn how to build beautiful, responsive websites using HTML, CSS, JavaScript, and Bootstrap 5 — and you’ll also discover how to leverage AI tools like ChatGPT to supercharge your web development process!\nWhether you’re a total beginner or someone looking to sharpen your skills, this course is packed with real-world projects, assignments, and practical examples that will prepare you for freelancing, job hunting, or launching your own websites.\n\n\nWhat you will learn:\n· Build real-world websites with HTML5 and CSS3\n· Create interactive features with JavaScript (DOM manipulation, events, animations, and more)\n· Master Bootstrap 5 to design fully responsive websites\n· Customize and personalize professional Bootstrap templates\n· Use AI (ChatGPT) step-by-step to speed up your coding, fix bugs, and generate website ideas\n· Complete 5–10 projects that you can add to your portfolio\n· Understand modern front-end development workflows and best practices\n\n\nProjects you will build include:\n· Business Landing Page\n· Personal Portfolio Website\n· Restaurant Website\n· Event/Conference Website\n· E-commerce Storefront\n· Photography Gallery\n· Fitness/Gym Website\n· Blog Website\n· NGO/Charity Website and More\n\n\nWho this course is for:\n· Beginners who want to learn front-end development from scratch\n· Designers who want to turn their designs into real websites\n· Entrepreneurs who want to build their own landing pages and websites\n· Freelancers who want to expand their web development skills\n· Anyone who wants to use AI to work smarter and faster in web development\n\n\nWhy Learn with This Course?\n· 100% practical and project-based learning\n· Step-by-step explanations for beginners\n· Future-ready skills using AI in development\n· Lifetime access and updates\n· Downloadable resources and real assignments\n\n\nBy the end of this course, you'll not just learn how to build websites—you'll be ready to create full professional front-end projects, land freelance jobs, or start a web development career.\nEnroll now and start your journey to becoming a front-end web developer!",
      "target_audience": [
        "Beginners who want to learn front-end development from scratch",
        "Designers who want to turn their designs into real websites",
        "Anyone who wants to use AI to work smarter and faster in web development",
        "Freelancers who want to expand their web development skills"
      ]
    },
    {
      "title": "How to Make an eCommerce Website in WordPress in 2021",
      "url": "https://www.udemy.com/course/how-to-make-an-ecommerce-website-in-wordpress-in-2021/",
      "bio": "Make an eCommerce Store using WordPress, WooCommerce, Elementor and WoodMart Theme",
      "objectives": [
        "eCommerce Website in WordPress",
        "How to use WordPress",
        "Where to purchase Domain name and Web Hosting",
        "What is a WordPress Theme",
        "What is a WordPress Plugin",
        "How to install a Premium WordPress Theme WoodMart",
        "How to Create a Simple Product",
        "How to Create a Variable Product",
        "How to add Pages",
        "How to add Posts or Blogs",
        "How to assign Homepage and Post Page",
        "How to use Elementor page builder",
        "How to design Homepage using Elementor",
        "How to add Wishlist page",
        "How to add Compare page",
        "How to add Track Order Page",
        "How to add contact form",
        "How to add coupons for your eCommerce website",
        "How to add your own logo in WoodMart",
        "How to add widgets to design footer",
        "What is a domain name and hosting",
        "How to configure WooCommerce Settings",
        "How to add categories and tags",
        "How to add blog posts",
        "How to assign a blog page in WordPress",
        "How to add Menu",
        "How to add contact us page",
        "How to add headers and footers",
        "How to cutomise headers",
        "How to make your website mobile and tablet friendly"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Domain Name & Web Hosting": [
          "Domain and Web Hosting",
          "Preferred Web Hosting and its features",
          "Web Hosting Set up | WordPress Installation and WordPress Login"
        ],
        "WordPress": [
          "Getting Started with WordPress : Overview & Basic Settings",
          "WordPress: Important Settings",
          "WordPress: Plugins"
        ],
        "WooCommerce": [
          "Quick Setup of WooCommerce",
          "Settings up the Store",
          "Setting up the Taxes",
          "Setting up Shipping (Delivery fee)",
          "Setting up the Payment: Stripe",
          "Setting up Accounts Privacy to Advance"
        ],
        "Uploading Product in WooCommerce Store": [
          "Uploading Product in WooCommerce Store"
        ],
        "Creating Pages in WordPress": [
          "Creating and Assigning the Homepage"
        ],
        "Designing the Homepage": [
          "Revolution Slider: Introduction and Importing templates",
          "Elementor: Designing the Homepage"
        ],
        "Importing Pages": [
          "Importing Pages in Elementor: About Us and Contact Us"
        ],
        "Track Order | Compare | Wishlist Pages": [
          "Creating Blogs/ Post Page"
        ],
        "Menus": [
          "Creating Menus"
        ]
      },
      "requirements": [
        "Basic Knowledge of Internet and Browsing",
        "A budget of approx. $100 for Domain & Hosting and Premium WordPress Theme- WoodMart"
      ],
      "description": "In this WordPress step-by-step course, we will learn how to make an eCommerce website. I have designed this course keeping non-techies in mind. So, even if you are a complete beginner, I assure you that you will follow up effortlessly with my easy language.\nYou do not need to have any coding knowledge, and we will be designing our entire website using drag and drop.\nAfter taking this course, you can easily make any type of eCommerce website.\nI will guide you and familiarise you throughout the course with all the essential functions, settings, menu items, plugins, and websites to become an independent web designer by the end of this course.\n\n\nHere are a few things that have I have covered in this course:\n\n\n1. What is a Domain Name & a Web Hosting\n2. Where and How can you get a reliable web hosting\n3. How to Connect Domain with the web hosting\n4. How to Login to WordPress website\n5. What is a WordPress theme, and how to install them\n6. What is a WordPress Plugin, and how to install them\n7. Setting up WooCommerce Store\n8. Setting up Taxes\n9. Setting up Shipping (Delivery fee)\n10. Creating a page\n11. Downloading copyright-free images from the internet\n12. How to upload different types of products\n13. Using Elementor to design your website\n14. Customising your Website for Mobile & Tab View\n15. Creating Coupon Code\nand many more",
      "target_audience": [
        "Beginners who want to learn how to make eCommerce website in WordPress",
        "People who want to learn how to make a eCommerce website",
        "People who want to learn how to make a eCommerce store",
        "Who want to learn WooCommerce in detail"
      ]
    },
    {
      "title": "Web-GIS using open source and ArcPy for ArcGIS Pro - AulaGEO",
      "url": "https://www.udemy.com/course/learn-web-gis-easy/",
      "bio": "Learn manage and display data on Internet using GeoServer, PostGIS, Openlayers, includes ArcPy for ArcGIS Pro",
      "objectives": [
        "Develop web content using open source",
        "Geoserver - instalation, configuration and interaction with open layers",
        "PostGIS - instalation and interaction with geoserver",
        "Open Layers - front desk using code"
      ],
      "course_content": {
        "PostgreSQL - PostGIS": [
          "Downloading and installing PostGIS",
          "Creating Database in PostgreSQL",
          "Adding GIS data in PostgreSQL"
        ],
        "GeoServer": [
          "Download And Install GeoServer",
          "Creating Workspace and Store in GeoServer",
          "Adding Style to Shapefile"
        ],
        "Bonus lessons for GeoServer": [
          "Adding data from ESRI to GeoServer",
          "Adding and preparing style data from QGIS"
        ],
        "Open Layers": [
          "Publishing GIS layers from GeoServer",
          "Displaying map using OpenLayers",
          "Adding GeoServer Layer to OpenLayers",
          "Adding Map Rotation",
          "Adding code for Default extent",
          "Adding Scale line to map"
        ],
        "Python programming in ArcGIS Pro": [
          "Run python script from outside ArcGIS Pro",
          "Introduction to python window",
          "Run buffer analysis tool",
          "Field management tool & Length Calculation",
          "Use Arcpy for Get result form tool, wo…ta properties",
          "Import Arcpy and modules",
          "Describe properties of data",
          "Create a field list and loop through the contents",
          "Geo processing and select by location tools",
          "List unique values from attribute table Ordenados por nombre",
          "Map document to pdf map conversion",
          "Split Line to Multiple Parts"
        ]
      },
      "requirements": [
        "the course is from scratch"
      ],
      "description": "This is a course focused on development and interaction of spatial data for internet deployment. For this we use three free code tools:\nPostgreSQL, for data management.\nDownload, installation, configuration of spatial component (PostGIS) and insertion of spatial data.\nGeoServer, for data stylization.\nDownload, installation, creation of data stores, layers and deployment styles.\nOpenLayers, for web deployment.\nIncludes code development in an HTML page to add data layers, wms services, map extension, timeline.\nPython programming in ArcGIS Pro\nArcPy for geospatial analysis.\n#AulaGEO\nThe course is from scratch, step by step with example cases and data according the AulaGEO methodology.\nFor this course was used, and the download steps are included in the lessons:\nGeoserver                 : 2.15.1\nPostgreSQL (Postgres) : 12.1 (64 bit)\nPostgis                 : 3.0\nOpenlayers                 : 6.1.1\nArcGIS Pro                              :2.4\nConent\nSection 1: PostgreSQL - PostGIS\n1. Downloading and installing PostGIS\n\n\n2. Creating Database in PostgreSQL\n\n\n3. Adding GIS data in PostgreSQL\nSection 2: GeoServer\n4. Download And Install GeoServer\n\n\n5. Creating Workspace and Store in GeoServer\n\n\n6. Adding Style to Shapefile\nSection 3: Open Layers\n7. Publishing GIS layers from GeoServer\n\n\n8. Displaying map using OpenLayers\n\n\n9. Adding GeoServer Layer to OpenLayers\n\n\n10. Adding Map Rotation\n\n\n11. Adding code for Default extent\n\n\n12. Adding Scale line to map\nSection 4: ArcPy - Python programming in ArcGIS Pro\n13. Run python script from outside ArcGIS Pro\n\n\n14. Introduction to python window\n\n\n15. Run buffer analysis tool\n\n\n16. Field management tool & Length Calculation\n\n\n17. Use Arcpy for Get result form tool, wo…ta properties\n\n\n18. Import Arcpy and modules\n\n\n19. Describe properties of data\n\n\n20. Create a field list and loop through the contents\n\n\n21. Geo processing and select by location tools\n\n\n22. List unique values from attribute table ordered by name\n\n\n23. Map document to pdf map conversion\n\n\n24. Split Line to Multiple Parts",
      "target_audience": [
        "gis users",
        "developers interested in data analysis"
      ]
    },
    {
      "title": "Complete Wordpress course: Beginner to advanced",
      "url": "https://www.udemy.com/course/complete-wordpress-course-beginner-to-advanced/",
      "bio": "With elementor and integrated school management system",
      "objectives": [
        "Building a website from scratch",
        "Basic to advanced use of Word press",
        "Integrate a school management system into the website",
        "Fully functional school website with advanced features"
      ],
      "course_content": {},
      "requirements": [
        "Basic computer knowledge"
      ],
      "description": "WordPress powers 40% of today’s websites, showcasing its security, efficiency, and widespread popularity. Learning WordPress equips you with the essential skills to develop both personal and professional websites. This course is meticulously designed to cover all aspects of WordPress, from beginner to advanced levels, ensuring you gain comprehensive knowledge and hands-on experience.\nThe curriculum encompasses a wide range of topics, starting from the basics and gradually advancing to more complex features of WordPress. One of the highlights of this course is its focus on integrating a student management system into a WordPress website. This feature allows you to create a website with extensive backend functionalities, such as managing students, maintaining records, and overseeing library and hostel facilities. The course is dedicated to guiding you through the development of a full-fledged WordPress website with advanced features.\nUpon completing this course, you will have acquired the following skills:\n1. Building a website from scratch: Learn how to set up and design a website from the ground up, starting with domain registration and hosting setup.\n2. Basic to advanced use of WordPress: Gain proficiency in using WordPress tools and features, from basic content creation to advanced customization and optimization techniques.\n3. Integration of a school management system: Understand how to incorporate a comprehensive student management system into your WordPress site, enabling you to manage various aspects of a school's operations.\n4. Creation of a fully functional school website with advanced features: Develop a website equipped with sophisticated functionalities tailored to meet the needs of educational institutions.\nThis course is designed to be industry-ready, providing you with the practical skills required to pursue freelance opportunities in WordPress-based website development. By the end of the course, you will be well-prepared to take on professional projects and deliver high-quality websites for clients.\nSpecial attention has been given to the structure and delivery of the lectures. The course is divided into four units, each containing multiple lectures that are concise and focused. Each lecture is less than 10 minutes long, ensuring that the content is easily digestible and conducive to sequential learning. The total lecture time amounts to 3 hours and 42 minutes, offering a step-by-step learning experience that is both efficient and thorough.\nIn summary, this course provides a detailed and practical approach to mastering WordPress. From building a website from scratch to integrating advanced features like a school management system, you will gain valuable skills that are directly applicable to the real world. Whether you are looking to enhance your personal website or embark on a professional career in web development, this course offers the knowledge and expertise needed to succeed. Join us and transform your web development skills with WordPress.",
      "target_audience": [
        "Beginner - Web site developers",
        "Advanced - School management website developers"
      ]
    },
    {
      "title": "Springboot Real Time REST Application from Scratch",
      "url": "https://www.udemy.com/course/springboot-real-time-rest-application-from-scratch/",
      "bio": "Building Springboot application for Employee Management",
      "objectives": [
        "Learn building End-to-End Production Ready REST API",
        "Learn mapping between JPA Entities",
        "Learn how to use Lombok",
        "Learn how to write Scheduler with CRON Expression",
        "Content Filtering Using MappingJacksonValue",
        "Learn how to call third party API and Consume the response",
        "Learn how to write Async method",
        "Learn How to Add Profiles the Spring Boot Project",
        "Learn How to Send Email from SpringBoot",
        "Learn How to Build CRUD Rest API’s",
        "Learn How to Use DTO’s",
        "Learn how to setup H2 database and MySQL",
        "Learn Spring Boot REST API Exception Handling",
        "Learn How to Write Custom Query Methods Using Spring Data JPA",
        "Learn One-To-Many and Many-To-Many JPA/Hibernate Mappings",
        "Learn REST APIs Documentation with Swagger UI",
        "Learn how to test REST APIs in Postman"
      ],
      "course_content": {},
      "requirements": [
        "Java and Java 8 Features along with Lambda and Stream API",
        "Spring Boot Basics",
        "Spring Data JPA basics",
        "How to use Intellij IDEA",
        "good to have knowledge about database like mysql and oracle"
      ],
      "description": "In this course, you will learn how to build REAL TIME REST APIs using Spring boot.\nWell, we will follow the Real-time industry-standard project development approach in this course.\n\n\nSpringBoot ?\nSpring Boot is an open source, microservice-based Java web framework. The Spring Boot framework creates a fully production-ready environment that is completely configurable using its prebuilt code within its codebase\n\n\nJPA?\nSpring Boot JPA is a Java specification for managing relational data in Java applications. It allows us to access and persist data between Java object/ class and relational database. JPA follows Object-Relation Mapping (ORM). It is a set of interfaces\n\n\nH2 Database ?\nH2 database is an open source, embedded and in memory relational database management system. It is written in Java and provides a client/server application. It stores data in system memory instead of disk. Once program is closed, data is also lost\n\n\nLombok ?\nWhat is Lombok. Project Lombok (from now on, Lombok) is an annotation-based Java library that allows you to reduce boilerplate code. Lombok offers various annotations aimed at replacing Java code that is well known for being boilerplate, repetitive, or tedious to write\n\n\nYou will learn the below topics in this course :\nHow to create SpringBoot project using Intellij and Spring initializer\nHow to add project dependencies\nWhat is JPA and how to create Entities\nRelationship between entities [tables]\nHow to write API's in SpringBoot\nLearn Spring boot REST API exception handling for the entire application\nLearn how to use Data Transfer Objects\nYou will learn using Lombok annotations\nLearn REST APIs Documentation with Swagger UI\nYou will learn to perform the database operations using Data JPA\nYou will connect Spring Boot application to MySQL database\nYou will connect Spring Boot application to H2 database\nYou will learn to create the REST end points\nLearn how to build CRUD REST API's\nLearn how to content filtering using Jackson\nLearn how to write Asynchronous method\nLearn how to write scheduler with CRON expression\nLearn how to Call third part rest API's\nLearn how to refactoring the code\nLearn how to send email from SpringBoot\nTechnologies:\nJava 8+\nSpring Boot\nSpring Data JPA\nTomcat\nIDE:\nIntellij IDEA\nDatabase:\nH2 In Memory\nMySQL database\nTools:\nPostman - Test REST API\nMaven - Build Tool",
      "target_audience": [
        "People who wants to learn REST API with Spring Boot",
        "People who wants to upskill knowledge with Spring Boot and Spring Security",
        "Spring boot beginners and professionals who want to learn how to build real-time REST API's",
        "Learn step by step implementation to build real-time REST APIs with Spring Boot"
      ]
    },
    {
      "title": "Django 5.0 with Amazon RDS, Elastic Beanstalk, Route53 & ACM",
      "url": "https://www.udemy.com/course/django-50-with-amazon-rds-elastic-beanstalk-route53-acm/",
      "bio": "Django 5.0: Deploying with AWS Power Tools - Unleashing the Potential of Amazon RDS, Elastic Beanstalk, Route 53 and ACM",
      "objectives": [
        "Gain a comprehensive understanding of Django 5, including its core concepts, models, views, templates, and forms.",
        "Learn to set up and manage a robust relational database using Amazon RDS, ensuring optimal performance, scalability, and security.",
        "Explore the ins and outs of deploying Django applications on AWS Elastic Beanstalk, mastering the deployment process for seamless scalability and reliability.",
        "Understand the process of configuring and managing custom domains for your Django applications using Amazon Route 53, including DNS setup and management.",
        "Implement SSL/TLS security for your Django applications using Amazon Certificate Manager, ensuring data integrity and building trust with users."
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Python"
      ],
      "description": "Welcome to Django 5.0 with Amazon RDS, Elastic Beanstalk, Route53 & ACM Course and unlock the full potential of Django 5.0 by mastering the art of deploying web applications on the robust Amazon Web Services (AWS) cloud infrastructure. In this comprehensive course, we are going to dive deep into the Django development, and easily integrating with AWS services such as Amazon RDS, Elastic Beanstalk, Route 53, and Amazon Certificate Manager (ACM).\n\n\nKey Points in This Course\nHands-On Deployment Techniques: Gain practical, hands-on experience in deploying Django applications, ensuring they run smoothly and efficiently on AWS.\nDatabase Management with Amazon RDS: Learn to leverage the power of Amazon RDS to set up and manage scalable, high-performance relational databases easily integrated with your Django projects.\nElastic Beanstalk Deployment Mastery: Master the deployment process using AWS Elastic Beanstalk, enabling effortless scaling, monitoring, and management of your Django applications.\nCustom Domains with Route 53: Explore the world of custom domains by configuring and managing them using Amazon Route 53.\nSSL/TLS Security Implementation: Enhance the security of your Django applications by implementing SSL/TLS encryption with Amazon Certificate Manager (ACM).\n\n\nWhether you're a Django enthusiast looking to advance your skills or an IT professional seeking practical AWS deployment expertise, this course provides a comprehensive toolkit for success. Join us on a journey to become a Django 5.0 and AWS deployment expert, equipped to navigate the challenges of real-world application deployment on the cloud.",
      "target_audience": [
        "Django Developers: Individuals familiar with Django and eager to master the intricacies of deploying and scaling applications using AWS services.",
        "Web Developers: Professionals working with web development technologies who wish to extend their expertise to include deployment strategies and best practices on the AWS platform.",
        "AWS Enthusiasts: Individuals with a basic understanding of AWS services who want to dive deeper into integrating AWS tools with Django applications."
      ]
    },
    {
      "title": "Building News Website with Javascript, React, and News API",
      "url": "https://www.udemy.com/course/building-news-website-with-javascript-react-and-news-api/",
      "bio": "Learn how to build news website with Javascript, React, and News API",
      "objectives": [
        "Learning how to integrate website with News API endpoints",
        "Learning how to build news website with Javascript",
        "Learning how to utilise React and Axios",
        "Learning how to do styling using CSS",
        "Learning several different strategies to monetise news website",
        "Leaning how to build news recommendation system using Tensorflow"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Highlight of the Course",
          "Whom This Course is Intended for?"
        ],
        "Tools, IDE, and API": [
          "Tools, IDE, and API"
        ],
        "Project Preparations": [
          "What are We Going to Build?",
          "Introduction to News API",
          "Basics of API Explained"
        ],
        "Setting Up All Required Tools": [
          "Setting Up IDE",
          "Generating News API Key",
          "News api Documentation"
        ],
        "Javascript Mini Course": [
          "Javascript Mini Course",
          "Declaring Variables",
          "Data Types",
          "If/Else Statements",
          "Function & Parameter"
        ],
        "Building News Website": [
          "Creating & Initialising React",
          "Adding Additional Folder & Files",
          "Building News Catalogue",
          "Creating News Element",
          "News Element HTML Code",
          "Styling with CSS",
          "Modifying App JS"
        ],
        "Testing News Website": [
          "Testing News Website"
        ],
        "Monetisation Strategies": [
          "Monetisation Strategies"
        ],
        "Building News Recommendation System with Tensorflow": [
          "Building News Recommendation System with Tensorflow",
          "Testing News Recommendation System"
        ],
        "Conclusion & Summary": [
          "Conclusion & Summary"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge is helpful but not necessary",
        "Willingness to learn, be creative, and persistent"
      ],
      "description": "Welcome to Building & Monetizing News Website with Javascript, React, and News API. This is basically an extensive project based course where you will be fully guided step by step on how to build a news website using Javascript programming language alongside with other supporting tools. This course is consisted of two main aspects, the first one is the technical aspect which will train you from the perspective of web developer on how to build a fully functioning news website meanwhile the second aspect is the business aspect where you will learn from the perspective of business, you will learn multiple strategies to monetize your news website.The news website that will be built is going to have news from more than 80,000 sources updated regularly and it is going to be made possible by connecting the site with News API and there is nothing you should worry about since you can access News API for completely free with a limitation up to 100 API requests a day which is obviously more than enough for this project. This course puts heavy emphasis on user experience and comfortability, therefore, as soon as we are done building the website, we will be conducting testing not only to ensure the product has worked the way it is supposed to but also evaluating whether it’s easy to use and user friendly from the perspective of users. At the end of the course, you will learn several monetization strategies, such as displaying ads on your website or selling subscriptions to your customers for accessing premium features. Hence, hopefully by the end of the course you will understand the potential of turning this news website to a full time and sustainable passive income business.\nSince the news website will be built using Javascript, therefore, some basic understandings would be necessary, nonetheless, there is nothing you should worry if you are not really confident with your Javascript programming skills as this course also comes with Javascript crash course which was created and designed specifically to prepare you better for the project. Hence, you will definitely get all basic fundamentals of the Javascript programming language that you need to know before starting the actual project.\nBelow are the following things that you will learn in this course:\nJavascript Mini Course:\nLearning different ways to declare variables in Javascript (const, let, var)\nLearning different data types in Javascript (string, number, boolean)\nLearning how to create conditional statements in Javascript (if/else)\nLearning how to build function and pass down parameters in Javascript\nBuilding the News Website:\nLearning how to integrate website with News API\nLearning how to connect to News API endpoints\nLearning how to style the frontend using css\nLearning how to create and initialize React package\nLearning how to utilize Axios to communicate with the backend\nLearning several different strategies to monetize news website\n3. Building news recommendation system using Tensorflow\nSince the most effective way to learn is actually to learn by doing, hence, that is exactly what you are going to get from this course. Not only that you will get to apply your Javascript skills and knowledge into a real project with real use cases but you also get the opportunity to evaluate your qualification in Javascript to identify the area that you still need to improve.",
      "target_audience": [
        "People who have interest in web development",
        "People who have interest in owning and monetising websites",
        "Journalists who want to have their own website for posting their news"
      ]
    },
    {
      "title": "Build Freelancing Like Website With WordPress Like Fiverr",
      "url": "https://www.udemy.com/course/build-freelancing-like-website-with-wordpress-like-fiverr/",
      "bio": "Create freelancing website like Fiverr, Upwork, etc using WordPress, PremiumPress & Elementor",
      "objectives": [
        "You will have a fantastic website that you can use to go on and build an microjob business.",
        "You can sell both freelancing services & buy freelancer services",
        "Be able to use different plugins to enhance your website",
        "At the end of this course, you will have comprehensive basic knowledge of how to build an microjobs website from scratch using Wordpress & Woocommerce.",
        "Plus, how to make blog for your Freelancing website is also included"
      ],
      "course_content": {
        "Setting Up WordPress Website": [
          "Build Freelancing Like Website With WordPress Like Fiverr (Promo)",
          "Introduction to Domain Hosting",
          "Web Hosting Setup",
          "Domain Name Setup",
          "Install SSL",
          "Install WordPress (2 Cases)",
          "Installing WP With Free Domain",
          "Installing WP Without Free Domain",
          "Basic WordPress Settings"
        ],
        "Basic WordPress Website Structure": [
          "Acquiring Theme",
          "Installing Theme",
          "Removing Theme",
          "Elementor Settings (Important)"
        ],
        "Configuration Freelance Job Settings": [
          "Categories Settings",
          "Feature Settings",
          "Upgrading Settings"
        ],
        "Configuration Freelance User Settings": [
          "Signup Login Settings",
          "Other User Settings"
        ],
        "Checkout Settings": [
          "Commission Settings",
          "Payment Settings"
        ],
        "Additional Settings": [
          "Main Settings",
          "Design Settings"
        ],
        "Testing Freelancing WordPress Website": [
          "Testing Register or Login",
          "Testing As Freelancer",
          "Testing As Buyer"
        ],
        "Designing WordPress Site": [
          "Design Website",
          "Writing Blogs",
          "Watch Free Courses",
          "Bonus"
        ]
      },
      "requirements": [
        "$79 One Time Payment",
        "Access to Internet"
      ],
      "description": "Welcome to this course, Build Freelancing Like Website With WordPress Like Fiverr.\nCreate your own micro job website similar to Fiverr, Upwork, or 99designs with this course.\nElementor Ready! - This website supports the free Elementor plugin so you don't need to pay extra for the pro version.\n100% Open Source - Customize and change the website any way you like. All codes are provided 100% open source.\nPricing Tables, Upgrades, Memberships & More! - Your website, your rules! Setup both free or paid micro jobs with optional add-ons and upgrades such as featured, homepage, and sponsored ads.\nBuy Now & Make Offer. Standard/Premium Gigs - Sellers can set up their own gigs with custom pricing and add-ons. Buyers can make an offer or buy now with built-in checkout and escrow system.\nDedicated Members Area With Upgrade & Stats - Wow your members with our powerful member's area setup. Users can log in anytime to manage their micro jobs, update profile details, change photos, pay for invoices, and lots more!\nComments, Ratings & User Feedback - This website comes with an advanced user feedback system. All comments can be managed via the admin area.\nEmail Alerts & Notification System - Users are constantly kept updated with job updates and account changes.\nWith this website, management is a breeze with our built-in admin pages. As the website owner, you get access to lots of amazing tools to help you manage members, track orders and monetize your website.\nThe Most Advanced Admin Area Toolset Ever!\nBy far the most complete set of admin area tools on the market. Fun and easy to use, the admin area includes everything you need to build and manage a successful micro job website.\nMicro Job Management\nManage all micro jobs via the admin area. Turn on/off admin approval. Update user details, help them add photos etc. It's quick and easy.\nAdvanced Design Tools\nCustomizing your website is easy. This theme comes with 150+ ready-made design blocks to help you create a unique presence for your business.\nOn/Off Website Features\nCustomize and tailor your website to suit your requirements. Turn on/off display options and website features via the admin area.\nBuilt-in Payments & Checkout System\nWe have a built-in checkout system allowing seamless integration between your website and user payment. Don't forget, we also have built-in tax, shipping, and coupon codes too!\nAdvertising System\nSetup custom ad spots on your website and allows visitors to purchase advertising directly from your website.\nGoogle Adsense\nAdd your own Google AdSense code to the website and earn money via Google advertising.\nEnroll inside this course, Build Freelancing Like Website With WordPress Like Fiverr\nEnroll Now!",
      "target_audience": [
        "Anyone Who Wants to Build Freelancing Like Website With WordPress Like Fiverr"
      ]
    },
    {
      "title": "Mastering Spring Data JPA: From Basics to Advanced",
      "url": "https://www.udemy.com/course/mastering-spring-data-jpa-from-basics-to-advanced/",
      "bio": "The full guide to master Spring Data JPA step by step",
      "objectives": [
        "Setting up your development environment",
        "Exploring Spring Data JPA fundamentals",
        "Mastering repositories and the entity lifecycle",
        "Unraveling entity relationships",
        "Understanding inheritance",
        "Leveraging embedded IDs and entities",
        "Querying data",
        "Named queries",
        "Specification"
      ],
      "course_content": {
        "Bootstrap the course": [
          "Setup Postgres DB server (Docker image)",
          "Setup MySQL DB server (Docker image)",
          "Create a new Spring boot project",
          "Setup the DB and create a new schema (Postgres)",
          "Setup the DB and create a new schema (MySQL)",
          "Connect the application to the database (Postgres)",
          "Connect the application to the database (MySQL)",
          "The persistence project we will build"
        ],
        "Introduction to Spring Data JPA": [
          "Hibernate VS Spring Data JPA",
          "Create the first java Class",
          "Transform the java Class to an @Entity",
          "@Id annotation",
          "@GeneratedValue annotation",
          "Strategy AUTO",
          "@SequenceGenerator annotation",
          "@TableGenerator annotation",
          "@Column annotation overview",
          "Best usages of @Column",
          "Have more control over your entity using @Table"
        ],
        "Repositories": [
          "Repositories overview",
          "Deep understanding of Repositories",
          "Discover the repositories as code",
          "Create your first Repository",
          "Create a command line runner",
          "Insert some data into the database",
          "Entity lifecycle"
        ],
        "Spring Data JPA Relationships": [
          "Why creating relationships between entities",
          "The difference between unidirectional and bidirectional relationship",
          "Create the course entity",
          "Create the section entity",
          "Create the lecture entity",
          "Create the resource entity",
          "Many to many relationship",
          "One to many",
          "One to many section and lecture",
          "One to one relationship",
          "Check if your code is correct"
        ],
        "Playing with Inheritance": [
          "Inheritance overview",
          "Inheritance VS Composition",
          "@MappedSuperclass",
          "Create the child classes",
          "Single table strategy",
          "Single table strategy - Discriminator Values",
          "Test the single table strategy strategy",
          "Joined table strategy",
          "Table per class strategy",
          "Polymorphic Queries"
        ],
        "Embedded entities & ID": [
          "Embedding Overview",
          "@EmbeddedId",
          "Use the embedded ID",
          "Test the embedded ID",
          "Create Embedded Address class",
          "@Embaddable annotation"
        ],
        "Querying data": [
          "Derived query methods explained",
          "FindAllBy methods explained",
          "Play with FindBy method",
          "Add Java Faker dependency",
          "Insert fake data",
          "Exercice",
          "Update data",
          "Update data using @Modifiying"
        ],
        "Named queries": [
          "Definition and advantages of named queries",
          "Fetch data with @NamedQuery",
          "Update data with @NamedQuery"
        ]
      },
      "requirements": [
        "No programming experience is required"
      ],
      "description": "Course description\n\n\n\nEmbark on a comprehensive journey through the world of Spring Data JPA, and become an expert in creating high-performance, data-driven applications. This in-depth course is tailored for developers seeking to master Spring Data JPA, covering everything from basic concepts to advanced techniques. By enrolling in this course, you will unlock the full potential of Spring Data JPA and gain the confidence to tackle complex real-world challenges.\nKey topics covered in this course include:\nSetting up your development environment: Learn how to connect to MySQL and PostgreSQL databases using Docker, ensuring a smooth and practical learning experience.\nExploring Spring Data JPA fundamentals: Dive into the core concepts of Spring Data JPA, including entities, primary keys, generation types, columns, and tables. Get hands-on experience through practical examples that solidify your understanding of these essential annotations.\nMastering repositories and the entity lifecycle: Understand the repository hierarchy, entity lifecycle, and how to leverage the power of Spring Data JPA to manage your data efficiently.\nUnraveling entity relationships: Delve into various relationship types, such as one-to-one, one-to-many, and many-to-many, while learning best practices for modeling and managing complex relationships between entities.\nUnderstanding inheritance: Gain a deep understanding of inheritance strategies in Spring Data JPA and how to model and query hierarchical data effectively.\nLeveraging embedded IDs and entities: Discover how to use embedded IDs and entities to model composite primary keys and embeddable types, enhancing the reusability and maintainability of your code.\nQuerying data: Master the art of querying data using various techniques, including JPQL, native SQL queries, and the Criteria API.\nNamed queries: Learn how to use named queries for better organization, maintainability, and performance optimization.\nSpecification: Unlock the full potential of Spring Data JPA Specifications to create dynamic and type-safe queries, which can be combined and reused for ultimate flexibility and maintainability.\nThis comprehensive course is designed to provide you with the knowledge and skills necessary to excel in your career as a Spring Data JPA developer. With a balanced mix of theory, hands-on examples, and best practices, you will be well-equipped to create efficient and scalable applications using Spring Data JPA. Enroll today and take the first step towards becoming a Spring Data JPA expert!",
      "target_audience": [
        "Beginners",
        "Professionals looking to deeply understand Spring Data JPA"
      ]
    },
    {
      "title": "JavaScript Data Pagination Code JavaScript ES6 Project Code",
      "url": "https://www.udemy.com/course/javascript-pagination/",
      "bio": "Explore how you can create dynamic pagination for data pages using JavaScript. Create clickable links to more content",
      "objectives": [
        "How to apply JavaScript",
        "How to get data and parse it to output on web pages",
        "Creating elements on the fly with JavaScript"
      ],
      "course_content": {
        "Introduction to JavaScript Pagination": [
          "Pagination Introduction.",
          "Developer Setup"
        ],
        "JavaScript Pagination Application from scratch": [
          "Setup HTML DOM.",
          "HTML Page",
          "AJAX request Content using Fetch",
          "source code",
          "Load Page Data",
          "source code",
          "Load Only Page Content",
          "Source Code",
          "Create Pagination Menu",
          "Source Code",
          "Tweaks and Fixes.",
          "Source Code",
          "Make it Look Better CSS.",
          "Source Code",
          "Add Images from API",
          "Source Code",
          "Code Review.",
          "Final Code"
        ],
        "Bonus Section JavaScript Code Examples": [
          "JavaScript Code example Selecting Page Elements update Style",
          "JavaScript Style properties with JavaScript DOM coding example",
          "Drag and drop with JavaScript",
          "Expanded Learning Materials: Access to Downloads"
        ]
      },
      "requirements": [
        "HTML CSS and JavaScript core knowledge",
        "Computer Access and Internet Access",
        "Use of Web editor and knowledge to setup web development environment"
      ],
      "description": "Scope of this course is focused on applying JavaScript to create Pagination! - You need to have JavaScript knowledge before taking the course.  Concepts covered are focused on a solution.\nLearn more about JavaScript and how JavaScript ES6 can be applied to create amazing JavaScript projects.  Course is loaded with JavaScript Examples and perfect JavaScript for Beginners to learn more about JavaScript Online.  Writing JavaScript Code using vanilla JavaScript - no libraries no tricks this JavaScript tutorial the JavaScript Course will walk you through creating your own JavaScript code and provide many JavaScript Code Snippets for use in JavaScript programming.  Learn JavaScript with this step by step JavaScript Course.\nSOURCE CODE is included every step of the way\nOften asked for by students is how to do pagination - the scope of this course is just that.   Applying JavaScript code to break apart a large number of items across multiple pages.  Then allow for navigation between them\nIf you have a lot of content pieces and want to provide a way to break them into pages so that users can easy view them, pagination is your solution.  The course covers using JavaScript to first get the data from an API.  Then load the data so that it can then be chunked into more manageable pieces.   Creating multiple pages for user consumption.\nSource Code and resources are included to get you started quickly.\nCourse covers :\nSetup of HTML and selecting elements using JavaScript\nCreating fetch request to retrieve API data\nLoading data into web application from API\nCreating page content from JavaScript Object\nUsing JSON data as JavaScript Object\nLoading content from large object array, creating pages of content\nCreating pagination navigation between pages of content\nApplying JavaScript for real world applications.\nCourse is designed to highlight using JavaScript  - JavaScript IS A Prerequisite TO THIS COURSE *****Beginner JavaScript knowledge is required ***** as the course covers only JavaScript relevant to the using objects and applying objects to object oriented programming.  Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\nNo libraries, no shortcuts just learning JavaScript making it DYNAMIC and INTERACTIVE web application.\nStep by step learning with all steps included.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building your own version of the application today!!!!",
      "target_audience": [
        "Web developers",
        "Anyone who wants to learn more about applying JavaScript",
        "Web masters",
        "JavaScript coders who want to learn more about using JavaScript",
        "Anyone who wants to do interesting applications with JavaScript",
        "Frontend code writers"
      ]
    },
    {
      "title": "Learn to build progressive web apps using JavaScript",
      "url": "https://www.udemy.com/course/learn-to-build-progressive-web-apps-using-javascript/",
      "bio": "The complete PWA guide for JavaScript developers",
      "objectives": [
        "Learn core concepts of professional JavaScript development",
        "Learn to build progressive web apps using core JavaScript",
        "Learn to build a real world apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "First PWA Tutorial": [
          "Resources",
          "Installing node",
          "Pwa Intro Tutorial"
        ],
        "Exploring the tools": [
          "Service Workers",
          "Fetch api",
          "Cache",
          "Google Lighthouse",
          "Notifications"
        ],
        "Building a PWA": [
          "Demo",
          "Starting Html",
          "Finding Woeids",
          "Manifest File",
          "Creating the app",
          "Serving the app",
          "Adding ui Listeners",
          "Fetching Weather Data",
          "Updating the Card Display",
          "Finishing the Script",
          "Adding Service Worker"
        ],
        "Exploring Advanced Technologies": [
          "IndexedDB",
          "Google Analytics",
          "Recommendations",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knolwedge of JavaScript is required for completing this course"
      ],
      "description": "A quick guide for JavaScript developers to start building progressive web apps.  This no nonsense course will take you straight to the concepts you need to get started on progressive app development. The course will teach you to build a real world PWA and will cover topics such as Service workers, Cache, Light house and Notifications.\nStart now and learn to build your first PWA.",
      "target_audience": [
        "Anyone who wants to learn practical JavaScript development will find this course very useful"
      ]
    },
    {
      "title": "React Clone WhatsApp (w/ React Router, React Hooks) 2021",
      "url": "https://www.udemy.com/course/react-clone-whatsapp-w-react-router-react-hooks-2021/",
      "bio": "With Convenient, Amazing and Simple Technologies like Meteor, React Hooks, TypeScript and Styled Component",
      "objectives": [
        "Create your own Social Network",
        "Create your own WhatsApp",
        "Build your own social network with instant messaging system, photo uploading, user search, authentication system etc.",
        "Quickly and easily write code to implement real-time communication using Meteor.",
        "Make Meteor, React and TypeScript Work Together and Differentiate Between the 3"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation Of Necessary Tools",
          "Section Summary"
        ],
        "Users Authentication": [
          "Introduction",
          "Clone The Boilerplate",
          "Step #1 - Break Down Login Component",
          "Routes And Theme In App Component",
          "Our FormLogin Component",
          "Our FormLogin Component (part 2)",
          "Our RightImg Component",
          "Step #2 - Static Version Of Login Component",
          "Step #3 And #4 - Add State",
          "Step #5 - Add Inverse Data Flow",
          "Few Words About Account & Password",
          "Create Dummy Users",
          "Create Dummy Users (part 2)",
          "User Authentication",
          "User Authentication (part 2)",
          "Section Summary"
        ],
        "Create Instant Chat": [
          "Introduction",
          "Step #1 - Breaking Down Components",
          "Our Left Component",
          "Our Right Component",
          "Rendering Left & Right Inside Main Component",
          "Our Header Component",
          "Our Header Component (part 2)",
          "Our Status Component",
          "Our SearchBar Component",
          "Our ChatList Component",
          "Create Dummy Chats",
          "Create Dummy Chats (part 2)",
          "Our ChatItem Component",
          "ChatList & ChatItem Together",
          "ChatList & ChatItem Together (part 2)",
          "How To Retreive The List Of Chats",
          "How To Render The List Of Chats",
          "How To Use React Moment",
          "Section Summary"
        ],
        "Create A Real Time Messaging System": [
          "Introduction",
          "Breaking Down Components",
          "Our MessageView Component",
          "How To Select A Chat",
          "How To Select A Chat (part 2)",
          "How To Display The Header",
          "Our Footer Component",
          "Add State To Footer Component",
          "Our MessageBox Component",
          "Messages Collection",
          "Rendering Messages",
          "Rendering Messages (part 2)",
          "Rendering Messages (part 3)",
          "Rendering Messages (part 4)",
          "First Loop To Display Dates",
          "Nested Loop To Display Messages",
          "How To Send A Message",
          "How To Send A Message (part 2)",
          "How To Use withTracker For Real Time Communication",
          "How To Scroll Automatically",
          "How To Use React Flip Move",
          "Find And Display The Last Message Of A chat",
          "Sorting Chats"
        ],
        "Create An Image Upload System": [
          "Introduction",
          "Step #1 - Breaking Down Components",
          "Our FABs Component",
          "Our FABItem Component",
          "Render FABItem Whithin FABs",
          "Render FABs With State",
          "Select A File",
          "Select A File (part 2)",
          "Our Modal Component",
          "Show And Hide Modal Component",
          "Display Selected File Whithin Modal Component",
          "Images Collection",
          "Upload An Image",
          "Upload An Image (part 2)",
          "Our MessageImage Component",
          "Send A Picture Message",
          "Send A Picture Message (part 2)",
          "Fix The Content Of The Last Picture Message",
          "Section Summary"
        ],
        "Display The Correspondent's Profile": [
          "Introduction",
          "Step #1 - Breaking Down Components",
          "Our OtherProfile Component",
          "Rendering The Header",
          "Display The Avatar Component",
          "Our Actu Component",
          "Our ActuItem Component",
          "Rendering OtherProfile Whithin Main Component",
          "Close OtherProfile Component",
          "Adjust Widths Dynamically",
          "Having A Large Avatar Dynamically"
        ],
        "Display Connected User's Profile": [
          "Introduction",
          "Step #1 - Breaking Down Components",
          "Our LeftSide Component",
          "Our LSHeader Component",
          "Display Avatar Component",
          "Our LSForm Component",
          "Showing And Hiding LeftSide Component",
          "Writing In Input Fields",
          "Controlled Input Fields",
          "Fix The Issue",
          "Display Overlay Within Avatar Component",
          "Updating Profile Picture",
          "Updating User' Profile In Real Time"
        ],
        "View List Of All Users": [
          "Introduction",
          "Step #1 - Breaking Down Components",
          "Building The Static Version",
          "Our UsersList Component",
          "Our UserItem Component",
          "Group Users In Alphabetical Order",
          "Group Users In Alphabetical Order (part 2)",
          "Rendering UserItem Whithin UsersList",
          "Close UsersList Component",
          "Start A New Chat",
          "Fixing The Error"
        ],
        "Create An ImageViewer Component": [
          "Introduction",
          "Step #1 - Breaking Down Components",
          "Our BigOverlay Component",
          "Build A Static Version Of ImageViewer",
          "Show And Hide ImageViewer"
        ],
        "Some Edits": [
          "Introduction",
          "Hour Whithin MessageImage Component",
          "Display The Number Of Unread Messages",
          "Display The Number Of Unread Messages (part 2)",
          "Display The Number Of Unread Messages (part 3)",
          "Display The Favicon",
          "How To Search For A User",
          "Challenge #1",
          "Our Popup Component",
          "Showing Popup Component",
          "Hiding Popup Component",
          "Delete A Text Message",
          "Delete A Picture Message",
          "Some Other Challenges"
        ]
      },
      "requirements": [
        "HTML & CSS (Especially FlexBox)",
        "JavaScript and ES6",
        "React (Components, JSX, State, Props, conditional rendering etc ...)",
        "Install PC and / or Mac software",
        "The resources to learn React Hooks, Meteor, and Styled Components will be provided to you in this course"
      ],
      "description": "This course was recorded in French but is subtitled in English.\nIt's been a long time since you tried to create your Social Network but you do not know where to start?\nWell in this training I'll show you how to create a copy of WhatsApp Web.\nDid you know that currently the official version of WhastApp Web is built with React and Styled Component?\nReact is an open source JavaScript framework maintained by Facebook. It allows you to create single page web applications, by creating components.\nStyled-component is a javascript library that allows you to increase productivity and facilitate the creation of React visual components (UI components) by writing css code in a javascript file.\nYou've probably heard it said that in order to progress as a developer (programmer) you have to train on real projects and try to clone (reproduce), with your own code, the applications that you like.\nThat's how I got into the crazy idea of cloning WhatsApp Web with React and Styled Component. I was quickly stuck with a problem ... With React and Styled Component on the front-end it was the best but the problem is that WhatsApp is an instant messaging system, which means that messages have to arrive in real time. Something that is not easy to implement with javascript (socket) when you want to create an application of the size of WhastApp.\nThat's when I thought of Meteor which is in short a FullStack Javascript Framework that allows you to create real-time applications. It was a challenge for me, and once I was successful I was so happy that I told myself to share this with the Francophone community.\nThat's why I created this course which will allow you to create a copy of WhatsApp Web with your own codes. You can even be inspired by this to create your own version of WhatsApp.\nI am Julien, web developer and author of the bestseller Ionic 4 - Create a Shopping Application. I love JavaScript and its Frameworks / libraries. I am particularly proficient in JQuery, TypeScript, Angular, Ionic, React, React Native, Meteor, Electron, NodeJs etc. And I have learned from experience that it is easier to learn to program with a project that we like. This is why this course is project oriented. We will learn how to build React web apps in real time by creating a copy (a clone) of WhasApp Web. Thanks also to Meteor, TypeScript, React Hooks and Styled Component. This is a unique opportunity for you. And it doesn't matter if you don't know Meteor or React Hooks or Styled Component because I will explain all of that to you in the training appendix.\n\"At the root of all success, there is the fact of having dared\". So believe in yourself and you will arrive. For my part, I am committed to supporting you and responding to your concerns throughout the course.\nThanks to Udemy, this course is guaranteed satisfied or refunded for 30 days and without any conditions. If you don't like the course, it's easy, we'll reimburse you. So sign up now.\nThis training will allow you to:\nCreate a copy (a clone) of WhatsApp web, which will allow you to impress recruiters to get the job of your dreams;\nUse React and Meteor together which will allow you to create web applications with real time communication;\nTo familiarize yourself with React Hooks and Styled Components which will allow you to create flexible and dynamic web designs to create your own social network;\nCode in TypeScript instead of basic JavaScript when working with React and Meteor, which will allow you to add a touch of security when programming;\nUse the publications / subscription and the Methods in Meteor to secure your application;\nUse Tracker and withTracker to set up responsive programming, which will allow you to implement real time in less than 20 seconds for your entire application;\nFilter Meteor collections, which will allow you, for example, to implement a user search system;\nUse the Meteor ostrio:file package, which will allow you to set up a file upload system (images) for your application;\nTo master useState and useEffect which will allow you to create controlled inputs and update the DOM reactively;\nUse styled components to add style to your components which will allow you to create dynamic styles and themes;\nUse the moment javascript library to create and manipulate dates which will allow you to more easily manipulate and manage timezones and date formats according to your needs;\nTo use the Moment Component made available to us by react-moment, which will allow you to display the dates that have been created from the moment library;\nUse the react-flip-move which will allow you in 3 clicks to animate your lists each time an item is added or deleted. To enrich your design for a professional look;\nUsing react-fontawesome which will allow you to display FontAwesome icons in a React component;\n\"What would you do if you weren't afraid? \" Mark Zuckerberg\nSo wait no longer, click the button and register now and we'll meet on the other side to get started. Welcome to this React training.\nP.S .: If you already have the basics, start directly with the introduction section.",
      "target_audience": [
        "React Web Developer who wants to create His Own Social Network with Instant Messaging"
      ]
    },
    {
      "title": "Menguasai Go dari Dasar dengan Panduan ChatGPT",
      "url": "https://www.udemy.com/course/menguasai-go-dari-dasar-dengan-panduan-chatgpt/",
      "bio": "Kamu akan menemukan ChatGPT akan memudahkan caramu belajar!",
      "objectives": [
        "Menguasai cara belajar teknologi baru dengan menggunakan ChatGPT",
        "Mempelajari Go dari dasar dengan asistensi ChatGPT",
        "Membuat Basis Utama Aplikasi Web",
        "Membangun API dengan Golang"
      ],
      "course_content": {
        "Langkah Pertamamu di Golang": [
          "Mengenal Golang dan Demandnya di Upwork",
          "Menginstall Golang di Windows",
          "Membuat Repository dan Mengclone",
          "Membuat Hello World!",
          "Membuat Server Golang Pertamamu",
          "Mendeploy ke DigitalOcean VPS"
        ],
        "Memperdalam Router dan Menggunakan Basis Data": [
          "Menambah Route About dan Search serta Parameter Get",
          "Menggunakan File Static untuk Halaman Utama",
          "Menambahkan Route Login dan Dashboard - Step 1",
          "Menambahkan Route Login dan Dashboard - Step 2: Fixing Path Error",
          "Persiapan Menggunakan PostgreSQL untuk Autentikasi User",
          "Menginstall PostgreSQL di Windows",
          "Menggunakan Tabel User dari Database Postgres untuk Autentitkasi",
          "Apa selanjutnya nih: Firebase atau Tailwind?"
        ],
        "Memperbaiki Tampilan dengan Tailwind": [
          "Sekilas tentang CSS dan Selayang Pandang Tentang Bootstrap",
          "Menggunakan Tailwind dengan Cepat via CDN",
          "Cara Cepat Membuat Homepage dengan TailwindCSS dan ChatGPT",
          "Perbaikan Homepage dan Persiapan Menggunakan Google Login"
        ],
        "Menggunakan Google Login untuk Membuat Aplikasi Nyaman Digunakan (BOLEH DISKIP)": [
          "Konfigurasi di Google Developer Console",
          "Implementasi Google Login - Step 1",
          "Implementasi Google Login - Step 2: Deprecated. Wajib ke Google Identity Service",
          "GIT: Menyimpan Kode Gagal Ini ke Branch Terpisah (Boleh diskip)",
          "Refleksi: Apakah Sebaiknya Menggunakan GIS atau Firebase?"
        ],
        "Menggunakan Firebase Auth": [
          "Introduksi Firebase Authentication",
          "Inisialisasi Project Baru dan Konfigurasi Firebase Admin",
          "Menambahkan Project Web untuk Autentikasi",
          "Inisialisasi Firebase App dan Penjelasan Script Type Module",
          "Implementasi Google Login dengan Firebase Auth",
          "Review pekerjaan dan commit!",
          "Menyelesaikan Pekerjaan dengan Melakukan Merging ke Branch Main"
        ],
        "Mempersiapkan Environment Kerja di MacOS": [
          "Kenapa harus MacOS?",
          "Menjalankan Windows di MacOS",
          "Mendaftarkan Github dengan 2FA (Opsional)",
          "Mendaftarkan SSH Key MacOS yang Baru",
          "Menginstall Brew.sh dan Go",
          "Menginstall VS Code",
          "Menjalankan server.go"
        ],
        "Review Kode Sejauh Ini": [
          "Review Git",
          "Review Pemahaman Golang di Module Server.go",
          "Review Status Google Login dan Menambah File favicon.ico"
        ],
        "Memulai dengan JIRA, Gitflow dan Clockify untuk Perencanaan yang Lebih Baik": [
          "BUSINESS VIEW: Focus on Marketing, Not Feature (Gimmick)",
          "Perencanaan dengan Jira",
          "Mempersiapkan Git Flow",
          "Time Tracking dengan Clockify yang Terintegrasi ke JIRA",
          "Mengkonfigurasi Clockify Desktop"
        ],
        "Mengimplementasikan Sistem Login": [
          "Apa itu Templating Engine?",
          "Menggunakan html/template engine",
          "Menggunakan Precompile Template",
          "Mempersiapkan Proses Login Part 1",
          "Mempersiapkan Proses Login Part 2",
          "Mempersiapkan Proses Login Part 3: Works!",
          "Mempersiapkan Proses Login Part 4: Code Review",
          "Mempersiapkan Proses Login Part 5: Feature Finish"
        ],
        "Memperbaiki Halaman Utama": [
          "Memperbaiki Carousel dengan Swiperjs - Part 1",
          "Memperbaiki Carousel dengan Swiperjs - Part 2",
          "Memperbaiki Carousel dengan Swiperjs - Part 3 - CSS Dev Trick",
          "Memperbaiki Carousel dengan Swiperjs - Part 3.1 - CSS Dev Trick",
          "Membuat Template Precompile hanya Saat Production",
          "Membuat Pricing Plan yang Lebih Ciamik",
          "Membuat Pricing Plan yang Lebih Ciamik - Part 2 Finish",
          "Menambahkan karakter information popup"
        ]
      },
      "requirements": [
        "Sudah pernah menguasai bahasa pemrograman apapun sebelum ini"
      ],
      "description": "Deskripsi Course: Menguasai Bahasa Pemrograman Go dari Dasar dengan ChatGPT\n\n\nSelamat datang di kursus inovatif kami, \"Menguasai Bahasa Pemrograman Go dari Dasar dengan ChatGPT.\" Ini adalah kursus yang dirancang untuk membantu Anda mempelajari salah satu bahasa pemrograman paling kuat dan efisien saat ini, Go (atau disebut juga Golang), dengan pendekatan belajar yang baru dan sangat menarik. Kami memadukan kekuatan kecerdasan buatan dan instruksi berbasis teks dengan tangan-on pengalaman pembelajaran untuk membantu Anda mencapai pemahaman yang kuat tentang Go dan kemampuan untuk membuat website yang sepenuhnya fungsional yang kemudian dapat Anda deploy ke VPS DigitalOcean. Mari kita jelajahi lebih dalam apa yang akan Anda pelajari dan mengapa kursus ini unik.\n\n\nApa yang Akan Anda Pelajari:\nDalam kursus ini, Anda akan dibimbing melalui perjalanan belajar yang komprehensif dari dasar-dasar bahasa Go hingga menjadi seorang pengembang web yang kompeten. Beberapa topik yang akan Anda pelajari termasuk:\n\n\n1. **Dasar-dasar Go**: Kami akan memulai dari awal dengan memahami sintaksis dasar, variabel, tipe data, operasi dasar, dan struktur kontrol dalam bahasa Go. Anda akan merasa nyaman dengan dasar-dasar bahasa ini seiring berjalannya kursus.\n\n\n2. **Pemrograman Berorientasi Objek**: Kami akan membantu Anda memahami konsep pemrograman berorientasi objek dalam Go, seperti structs, methods, dan interfaces, yang akan memungkinkan Anda untuk mengembangkan kode yang terstruktur dan mudah dipelihara.\n\n\n3. **Pemrograman Web dengan Go**: Salah satu fokus utama kursus ini adalah mengajarkan Anda cara mengembangkan website dengan menggunakan Go. Anda akan belajar tentang routing, penanganan HTTP, penggunaan template, dan bagaimana membangun aplikasi web yang ramah pengguna.\n\n\n4. **Deployment ke DigitalOcean**: Setelah Anda berhasil membuat website yang fungsional, kami akan membimbing Anda melalui proses deployment ke VPS (Virtual Private Server) DigitalOcean. Anda akan belajar bagaimana mengelola server, menginstal Go, dan menyiapkan lingkungan produksi yang aman.\n\n\nMengapa Kursus Ini Unik:\nApa yang membuat kursus ini benar-benar unik adalah penggunaan ChatGPT, sebuah kecerdasan buatan yang memungkinkan Anda untuk berinteraksi dengan pembimbing virtual sepanjang kursus. Anda dapat mengajukan pertanyaan, meminta penjelasan tambahan, atau mencari bantuan kapan saja selama kursus. Ini bukan hanya kursus online biasa; ini adalah pengalaman belajar yang responsif dan personal.\n\n\nSelain itu, kami fokus pada pendekatan belajar berbasis proyek. Anda tidak hanya akan belajar teori, tetapi Anda juga akan menerapkannya secara langsung dengan membuat website yang sepenuhnya fungsional. Ini adalah pengalaman pembelajaran yang praktis yang akan memberi Anda kepercayaan diri dan keterampilan yang dapat Anda terapkan dalam dunia nyata.\n\n\nJadi, jika Anda ingin mempelajari Bahasa Pemrograman Go dengan cara yang berbeda, interaktif, dan praktis, kursus \"Menguasai Bahasa Pemrograman Go dari Dasar dengan ChatGPT\" adalah pilihan yang sempurna. Bergabunglah dengan kami dalam perjalanan pembelajaran yang menarik ini dan mulailah membangun keterampilan yang akan membuka pintu karir di dunia pengembangan web. Segera daftar dan mari mulai!",
      "target_audience": [
        "Untuk kamu yang ingin menguasai pemrograman Go"
      ]
    },
    {
      "title": "Web and Software Development With Python",
      "url": "https://www.udemy.com/course/web-and-software-development-with-python/",
      "bio": "Web Development with HTML,CSS,PYTHON,POSTGRES",
      "objectives": [
        "Understanding of the basic syntax and constructs of the Python programming language.",
        "Ability to create interactive and responsive web pages using HTML, CSS, and JavaScript.",
        "Ability to query and manipulate data stored in a PostgreSQL database using SQL.",
        "Ability to apply all of these skills to solve real-world problems by building projects or applications."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Html | Software development course part 1",
          "Diging Deeper into HTML | Software Development Class by Robinson Part 2",
          "HTML practice test"
        ],
        "Advanced HTML and CSS introduction| Software Development Class by Robinson Part": [
          "Advanced HTML and CSS introduction| Software Development Class by Robinson Part"
        ],
        "CSS class": [
          "CSS Class | Part of Software Development Course By Robinson Part 3"
        ],
        "Lecture 6:Master Python in Your Software Development Journey: Class #6": [
          "Python in software development video",
          "Bootstrap and Python: Building Dynamic and Responsive Web Applications"
        ]
      },
      "requirements": [
        "A computer with an internet connection, and the motivation to learn and practice regularly."
      ],
      "description": "Welcome to the Web Development with HTML, CSS, Python, and Postgres course!\nIn this comprehensive course, you will learn how to build dynamic web applications from scratch using the essential tools and technologies in modern web development. You will start with the basics of HTML and CSS and gradually work your way up to building complex web applications with Python and Postgres.\nFirst, you will learn the fundamentals of HTML and CSS, including creating and styling web pages, using CSS frameworks, and building responsive web design. Then, you will dive into the world of Python, one of the most popular and versatile programming languages, and explore its uses in web development. You will learn how to use Python to build dynamic web applications, automate tasks, and handle data.\nNext, you will delve into the world of databases with Postgres, a powerful open-source relational database management system. You will learn how to design, create, and manipulate databases and tables, and how to interact with them using Python.\nThroughout the course, you will have hands-on practice exercises, quizzes, and assignments to help you reinforce your learning and apply your skills. By the end of the course, you will have a solid understanding of web development with HTML, CSS, Python, and Postgres, and be able to build complex web applications with ease.\nEnroll now and take the first step towards becoming a proficient web developer!",
      "target_audience": [
        "Throughout the course, students will be working on hands-on projects that will give them practical experience with each of these technologies. The course will start with an introduction to HTML and CSS, then move on to cover Python, PostgreSQL, and finally, Django. By the end of the course, students will have a solid foundation in these technologies, and will be well equipped to continue their learning and build their own projects.",
        "All levels"
      ]
    },
    {
      "title": "ReactJS - The Beginner Masterclass [NEW]",
      "url": "https://www.udemy.com/course/reactjs-guide/",
      "bio": "Explore ReactJS from Basics to Advanced with Hooks, State Management, and Dynamic UIs",
      "objectives": [
        "Master React fundamentals: components, state, props, hooks. Build interactive apps, handle forms, fetch data, and more.",
        "Create real-world projects: Todo app, book search. Gain hands-on experience, solidify skills, become proficient in React.",
        "Develop essential React skills: manage state, handle events, implement reusable components, and custom hooks effectively.",
        "Learn React quickly: understand core concepts, build projects, and gain practical experience to become a proficient React developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Prerequisites",
          "Build a Simple React App - Part 1",
          "Build a Simple React App - Finalize"
        ],
        "Course Code": [
          "Get the Source code"
        ],
        "Introduction to React JS - What is React & How it Works & Hands-on": [
          "The Old vs New Way of Building Web Apps - SPA",
          "Why React JS - Motivation for Using React JS",
          "What is React JS - How React Works",
          "Check in"
        ],
        "Development Environment Setup (MacOS and Windows)": [
          "Setup Development Environment - Install VS Code and Chrome Browser and NodeJS",
          "Install VS Code Extensions for React Development",
          "Create and Run a React Project with Vite - Full Overview"
        ],
        "Deep Dive into React - React Project and Components": [
          "React Project Files and Folder Walkthrough",
          "Create our First React Component",
          "JSX and How React Treats the DOM - Deep Dive",
          "JSX Compilation Process - Babeljs - Demo",
          "Understanding the Main Project Files",
          "Writing JavaScript inside of JSX Code - The Book Component",
          "Introduction to Props - Refactor book Component to Use Props",
          "Adding an Array of Books & Pulling Data from an Array -Manually",
          "Using the map Function to Show Book List Items",
          "Understanding the React Key Prop",
          "Props and One-Way Data Flow Concept in React",
          "Destructuring Props",
          "CHALLENGE: User Profile Card Challenge & Solution",
          "Section Summary"
        ],
        "React State and Styling React Components": [
          "Introduction to state Management - Forms and Interactivity in React",
          "Restructuring the Project - UserProfile Components",
          "Pulling Book Data from a Different Data File",
          "Introduction to State in React - The Wrong way to Change State",
          "using React Hook - useState to Fix State Management Issues",
          "How State Works in React - Overview",
          "Hands-On - Random Quote App - Setup",
          "Hands-on Random Quote App - Full setup & Final",
          "How State Works in React - Review",
          "Styling Components in React - CSS files Overview",
          "Installing Bootstrap and Using it in RandomQuotes App",
          "Adding Another Piece of State - Random Color",
          "Lifting State Up - React Patterns Overview",
          "Lifting State Up - Hands-on - RandomQuote App",
          "Lift State Up - Hands-on - Review - A Simple Counter App"
        ],
        "React Forms and Interactivity - Build the GroceryList App": [
          "Introduction to Forms in React - Overview",
          "Setting up a Simple Form",
          "The onSubmit Event Handler and preventDefault method",
          "Controlled Elements",
          "Adding Form Inputs - Show the List Items on Page",
          "Multi-input Form Setup - Hands-on",
          "Multi-form Input and the handleChange Event Handler",
          "onHandle Submit - Add Simple Validation and Show the Person Card",
          "The Grocery List App - Demo",
          "Hands-on: GroceryList Component - Adding Dummy Data & Show on the List",
          "Hands-on - Creating the Footer and Nav Components",
          "Styling the GroceryList Item",
          "Add Grocery Form",
          "Fix - Clear form Issues",
          "Adding Bootstrap Icon",
          "Passing the toggleBought Event as Prop",
          "Implementing the toggling - Testing in the Console",
          "Changing the circle Color and List Item Text when Clicked",
          "Adding the handleRemoveItem Prop and Function to Remove and Item",
          "Adding Stats in the Footer Component",
          "Section Summary"
        ],
        "Connecting to the Backend - Consuming APIs & the useEffect Hook & Custom Hooks": [
          "Connecting to the Backend and useEffect - Overview",
          "Fetching data from an API the Wrong Way",
          "Fetching Data from an API with useEffect Hook",
          "Setting up Loading State",
          "Using the Dependency Array & Adding Values to Control the Component Lifecycle"
        ],
        "Build a BookSearch React App": [
          "The Project Setup",
          "Setup NavBar Component",
          "Create the Footer Component",
          "Pulling in Books from an API",
          "Set up the URL Search Query",
          "Setup SearchBar and Props",
          "Making sure the SearchTerm State is Updating Correctly - Debugging",
          "Showing Books on Screen",
          "Adding Loading State and Indicator",
          "Clearing the Search Form",
          "Setup the API-Client - Implementing FetchBooks Function",
          "Introduction to Custom Hooks & Creating a Custom Hook - useBooks",
          "Adding the AbortController Interface",
          "The Book Details Component - Part 1",
          "Conditional Rendering with && - Testing SelectedBook",
          "Show Book Details in a Modal View",
          "Handling Missing Fields from the API"
        ],
        "Deploying a React App": [
          "Build and setup Vercel and Deploying the App",
          "Connecting to Github repo and Automate Deployment workflow",
          "The BookSearch App - Summary"
        ]
      },
      "requirements": [
        "Students should have basic knowledge of HTML, CSS, and JavaScript. Familiarity with ES6 syntax is helpful but not required.",
        "Access to a computer with an internet connection is necessary to follow along with coding exercises."
      ],
      "description": "Welcome to the Ultimate React.js Mastery Course! This comprehensive journey is your gateway to mastering React.js, the JavaScript library for building user interfaces.\n\n\nIn this comprehensive journey, you will start by understanding the core concepts of React, including components, props, and state management.\n\n\nYou'll then explore more advanced topics such as React hooks, which revolutionize how you handle state and side effects, and delve into the intricacies of component lifecycle.\nAs you progress, you'll gain proficiency in creating custom hooks and leveraging context for efficient state management. These skills will provide valuable insights into building scalable and maintainable applications, a key advantage in the competitive world of web development.\n\n\nOne of the highlights of this course is learning how to consume APIs using the useEffect hook.\nYou'll discover best practices for fetching data asynchronously, handling errors, and optimizing performance, ensuring seamless integration of external data into your applications.\nWhat sets this course apart is its focus on practical application. You'll dive into hands-on projects, like crafting a dynamic Grocery List app and creating an engaging Random Quotes app. These real-world scenarios will reinforce your learning, honing your skills and boosting your confidence as a React developer.\nIn this course, you will learn:\nCore concepts of React.js, including components, props, and state management.\nAdvanced topics such as React hooks (useState, useEffect, useContext), component lifecycle, and conditional rendering.\nCreating custom hooks for efficient state management and code reuse.\nConsuming APIs with the useEffect hook, including best practices for data fetching and error handling.\nBuilding interactive and responsive user interfaces with React.js.\nPractical application of React.js skills through hands-on projects like the Grocery List app and Random Quotes app.\nBy the end of this course, you'll have a deep understanding of React.js and the ability to easily build interactive and responsive user interfaces. Whether you're a beginner looking to start your journey in web development or a seasoned developer aiming to level up your skills, this course is your ultimate guide to becoming a proficient React.js developer. Join us and unlock the full potential of React.js today!",
      "target_audience": [
        "This course is designed for beginners who want to learn ReactJS from scratch. It's also suitable for web developers looking to enhance their skills."
      ]
    },
    {
      "title": "React Mega Course - Learn React and then build 6 projects",
      "url": "https://www.udemy.com/course/react-mega-course/",
      "bio": "Master React and Redux with RTK Query from scratch with one course. Build 6 projects and become a React developer.",
      "objectives": [
        "Learn React from scratch",
        "Redux and RTK Query",
        "Use free AI tools to boost productivity",
        "Express",
        "MongoDB",
        "Build projects",
        "Become able to build your own React projects and APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Projects that are created throughout the course",
          "VS Code and Chrome extensions, course files and git repos"
        ],
        "React for beginners": [
          "01 Create react app with Vite",
          "Clean up and add bootstrap",
          "JSX",
          "Functions are components",
          "Extracting into separate components",
          "Variables, inputs and inline styling",
          "Props",
          "Children",
          "State",
          "More efficient useState",
          "Returning objects and spread in state",
          "Looping in jsx",
          "Add Customer",
          "If and else if in jsx",
          "useEffect",
          "Routing ( adding components )",
          "Routes and Links",
          "useParams and useSearchParams",
          "useNavigate and NavLink",
          "redux toolkit and store setup",
          "counterSlice and useSelector",
          "Actions and useDispatch",
          "useDispatch with payload",
          "productSlice",
          "ProductDetails",
          "extraReducers",
          "Custom actions"
        ],
        "Project 1: Counter": [
          "Project intro",
          "Initial project setup",
          "App jsx and bootstrap theme",
          "Separate into components",
          "Card refactor",
          "Count state and prop",
          "Reset counter",
          "Reusable Button component",
          "Limit counter, change subtitle and reset icon",
          "Spacebar to increment"
        ],
        "Project 2: Wordlytics": [
          "Project intro",
          "Initial project setup",
          "App jsx and css",
          "Separate into components",
          "Controlled textarea and basic validation",
          "Number of characters (lifting up the state)",
          "Other stats",
          "class below 0 and constants"
        ],
        "Project 3: TO-DO list": [
          "Project intro",
          "Initial project setup",
          "App jsx and css",
          "Separate into components",
          "initialItems and better organization",
          "AddTask and useRef",
          "handleAddItem in App",
          "Handle other button events",
          "Toggle checkbox",
          "Delete item",
          "Counter and no tasks message",
          "Sorting items",
          "localStorage",
          "useMemo",
          "Public path fix"
        ],
        "Project 4: Customer-Management": [
          "Project intro",
          "Initial project setup (customer-management)",
          "CustomerList",
          "store and apiSlice",
          "customersApiSlice",
          "Routing",
          "AddCustomer component",
          "Outlet",
          "AddCustomer functionality",
          "How RTK Query caching works",
          "Toast notifications",
          "EditCustomer endpoints and routing",
          "EditCustomer",
          "Loading and throttling",
          "Delete customer",
          "Styling"
        ],
        "Project 5: Easy Recipes": [
          "Project intro",
          "Create React and Express apps",
          "Concurrently",
          "Mongoose, models and connect to DB",
          "Seed data",
          "Refactor DB Connection",
          "dotenv",
          "Recipes route",
          "API CRUD routes",
          "App JSX",
          "Routing",
          "store and apiSlice",
          "List recipes",
          "AddRecipe (slice and form)",
          "AddRecipe categories",
          "AddRecipe functionality (no image upload)",
          "Upload image",
          "Image preview",
          "Loader component",
          "ProductDetails",
          "Search 1",
          "searchSlice and Filters component",
          "Search 2",
          "Filter by category",
          "Checkbox filter 1",
          "Checkbox filter 2",
          "User model and register route",
          "Login route",
          "JWT and Logout",
          "Auth middleware",
          "authSlice and usersApiSlice",
          "PrivateRoute",
          "Login",
          "Logout",
          "Register",
          "Adding a wysiwig",
          "Add user with recipe and use HTML Parser",
          "Styling",
          "Display author and difficulty and more styling",
          "Add all recipes"
        ],
        "Project 6: Shirts & Fruit ( CMS and E-Commerce )": [
          "Project intro",
          "React express and concurrently",
          "Connect to DB (shirtsandfruit)",
          "Models and seeding",
          "Categories controller and get all route",
          "Products CRUD routes",
          "Pages CRUD routes",
          "Header Footer and App Markup",
          "Routing and store setup",
          "Nav page links",
          "Display page body",
          "List categories",
          "Products by category 1",
          "Products by category 2",
          "ProductDetails",
          "User model and seed admin",
          "Login form",
          "Login form validation",
          "Users controller and auth middleware",
          "Login and Register components and slices",
          "Log in and register",
          "AdminHeader",
          "Logout",
          "AdminRoute",
          "Admin Pages",
          "Admin Pages Sorting 1",
          "Admin Pages Sorting 2",
          "Admin AddPage component",
          "Admin AddPage wysiwig",
          "Admin AddPage functionality",
          "Admin EditPage",
          "Delete page",
          "Admin Products",
          "AddProduct form",
          "AddProduct validation",
          "AddProduct image validation and preview",
          "AddProduct",
          "EditProduct",
          "Modify seeder to create and remove gallery folders",
          "MultipleImageUpload validation",
          "MultipleImageUpload upload images",
          "MultipleImageUpload List images",
          "MultipleImageUpload Delete gallery image",
          "Delete product",
          "Lock down routes and clear admin cookie",
          "ProductGallery",
          "cartSlice and component",
          "Add to cart",
          "SmallCart improvement",
          "Cart 1",
          "Cart 2",
          "Log in to checkout",
          "Login and Register username focus",
          "Order model and route and OrderPlaced",
          "Place order",
          "Profile and PrivateRoute and html parser",
          "Profile 1",
          "Rating",
          "Rating model and routes",
          "ratings slice and UserRating",
          "refetch and caching recap",
          "Pagination",
          "AI Pagination component",
          "Bug fixing",
          "Adding proper data",
          "Styling"
        ]
      },
      "requirements": [
        "JavaScript",
        "Basic web-development skills"
      ],
      "description": "Master React with Redux with this one course. You don't need anything else. As simple as that.\n\n\nLearn how to use React properly and much more than that. Use Vite to create React projects and also learn how to build your own APIs to be consumed by your React apps using Node, Express, MongoDB and Mongoose.\n\n\nDon't just learn bits and pieces, learn React with Redux and RTK Query properly from scratch and become an able React developer.\n\n\nHow is the course structured ?\nI will first teach you React with Redux from absolute scratch (you do not need any prior experience with react) and then will build 6 projects together that get increasingly more complex.\n\n\nThis is a very practical course where you will mostly learn by building actual projects.\n\n\nWhat is exactly is covered in the course?\n\n\nReact\nRedux\nRTK Query\nRouting\nJSX\nVite\nProps\nChildren\nState\nAll relevant hooks (useParams, useSearchparams, useNavigate, useDispatch, useMemo, useRef etc.)\nJSON server\nJSON web tokens\nFile upload\nImage gallery\nNode\nExpress\nMongoDB\nCompass\nMongoose\nBootstrap and various bootstrap themes\nand much more\n\n\nProjects:\n\n\nCounter - put everything you have learn in the React for beginners section of the course and create a fancy counter\nWordlytics - Use more of what you already know to create a great little app that gives info about text input\nTO-DO list - Learn how to use checkboxes and select lists and create a TO-DO list that uses local storage to persists data\nCustomer-management - Get started with RTK Query and create a basic CRUD application that uses JSON server for the backend (lightweight database)\nEasy Recipes - With all the knowledge gained thus far it is time for a more serious project. In this one we will create both the React frontend and Node/Express/MongoDB backend API to create an app that can add and filter through recipes and user registration and authorization using JSON web tokens\nCMS and E-Commerce - the biggest project in the course, create a full CMS and E-Commerce web app with users and an admin area, again using Node/Express/MongoDB for the API. This project covers it all and much more and will enable you to basically create any type of web app with React.\nI have put a lot into this course to really make it the only course you need to master React, don't miss out and enroll now risk free!",
      "target_audience": [
        "Anyone with some JavaScript and general web dev skills looking to master React and Redux"
      ]
    },
    {
      "title": ".NET Core MVC with Dapper - The Complete Course Full Scratch",
      "url": "https://www.udemy.com/course/net-core-mvc-with-dapper-the-complete-course-full-scratch/",
      "bio": "Ecommerce Project using Dapper Micro ORM with Stored Procedure",
      "objectives": [
        "Dapper Fundamentals Tutorials , How Dapper Communicate with database objects. How Dapper Handle Relationships like one to one and one to many and many to many",
        "Complete Example of Ecommerce Project in .NET 8 with Dapper Technique. In project we have Some modules like UI, Product catalogue , cart and Order Details",
        "How Dapper Handle Authentication and Authorization using efficient manner. Dapper communicate with database table create a session. Use Filters to Authorize",
        "In this project we have a Repository pattern with Dependency Injection to handle Dapper Communication. We have a Dashboard for Admin and Customer. Admin Manage",
        "Product Catalogue. Right now payment option is under processing but we will add later using stripe method and razor pay",
        "Dapper Communicate with database table using stored procedure."
      ],
      "course_content": {
        "Introduction": [
          "Ecommerce Project Demo using Dapper",
          "Getting Started with Ecommerce Project using Dapper"
        ],
        "Controller, Services and Stored Procedures": [
          "Product Controller with action names",
          "Stored Procedure on Category Table",
          "Category Service",
          "Category Controller",
          "Views For Category Controller",
          "Product Controller Part-1"
        ],
        "Utility Service": [
          "Interface for Utility Service",
          "Implementation of utility Service"
        ],
        "Continue with Product Controller": [
          "Add and Update Product Service",
          "Continue with Product Controller",
          "Delete Product",
          "View for Get All Products",
          "View for Create Update Action method"
        ],
        "Home Page Design": [
          "Home Page action method and View"
        ],
        "User Management": [
          "User Role and Their Relationship Query for Create Table",
          "Stored Procedure for Add Role and Add User",
          "Data Seeder Class",
          "Register Data Seeder in Program file",
          "ViewModels for Accounts",
          "Register and login Service",
          "Register and Login Action Method",
          "Login Partial Page",
          "Register your Authentication Handlers",
          "Get User Roles",
          "Authorization Filter",
          "Get UserId Service"
        ],
        "Continue with Controllers": [
          "Cart Table and Details action method of Ecommerce Project",
          "Modify Existing Stored Procedure",
          "Product Detail Action Method Part-1",
          "Cart Service : Get Cart Items",
          "Add cart Item",
          "Test to add Cart Item"
        ],
        "Cart Controller": [
          "Cart Controller Part-1",
          "Show Cart Items",
          "View Components",
          "Session Configuration",
          "Show Cart Icons with Quantity",
          "Stored Procedure for Increment and Decrement Quantity",
          "Service for Increment and Decrement Quantity",
          "Update cart Quantity",
          "Signout Functions",
          "Delete cart Item By ID"
        ],
        "Cart Summary": [
          "Cart Summary Page",
          "User Profiles Table Script and Stored Procedure",
          "Services for User Profile",
          "Create User Profile",
          "Create or Update User Profile",
          "Cart Summary",
          "Payment Status and OrderStatus",
          "OrderHeader and OrderDetails Table",
          "Stored Procedure for OrderHeader and Order Details Table",
          "Services for Order header and Order details table",
          "Generate a Order"
        ],
        "Theme Setup": [
          "Apply Bootswatch theme",
          "Update Navigation",
          "Protect Routes"
        ]
      },
      "requirements": [
        "Student must have basic Programming skills about C# and ASP .NET Web Frameworks"
      ],
      "description": "Dapper Fundamentals Tutorials , How Dapper Communicate with database objects. How Dapper Handle Relationships like one to one and one to many and many to many.  Complete Example of Ecommerce Project in .NET 8 with Dapper Technique. In project we have Some modules like UI, Product catalogue , cart and Order Details. How Dapper Handle Authentication and Authorization using efficient manner. Dapper communicate with database table create a session. Use Filters to Authorize. In this project we have a Repository pattern with Dependency Injection to handle Dapper Communication. We have a Dashboard for Admin and Customer. Admin Manage. Product Catalogue. Right now payment option is under processing but we will add later using stripe method and razor pay. Dapper Communicate with database table using stored procedure.\n- Modules of the Ecommerce Project\nAdmin Module -  CRUD Operation on Product and Category Catalogue , Manage Customer Order\nCustomer Module -  Add Item into Cart and Proceed Order\nDapper Connection -  Using one to many and many to many mapping\nDapper Security -  Custom User Account with Hased password\nSeed User Information using Dapper\nRepository Pattern with Dependency Injection.\nDapper Methods which is Used in Project-  ExecuteAsync, QueryAsync,QueryFirstOrDefault, Split Tables\nAccess data from database table via stored procedue.\nFilters -  Customer Request filter by their roles. In this project , i use custom Authorize Filter for customer request",
      "target_audience": [
        "Beginners Who want to Learn Dapper with ASP. NET"
      ]
    },
    {
      "title": "AI React NextJS TypeScript Full Stack Business Directory App",
      "url": "https://www.udemy.com/course/business-directory-full-stack-react-nextjs/",
      "bio": "Build Google Generative AI Powered Local Business Directory App for Real World with React NextJs TypeScript + PDF Book",
      "objectives": [
        "Streamlined Developer Experience",
        "AI Integration with Google Gemini",
        "Real-World Application Development",
        "Image Upload and Optimization with Cloudinary",
        "Type-Safe Development with TypeScript",
        "Responsive Design with Tailwind CSS",
        "Component Library Integration (shadcn/ui)",
        "Secure Authentication with Clerk",
        "NoSQL Database Management (MongoDB)",
        "Server-Side Rendering with NextJs",
        "State Management using React Context",
        "Easy Form Handling",
        "Dynamic Search & Filter Functionality",
        "Pagination Implementation",
        "Admin Panel for Business Management",
        "SEO Optimization Techniques",
        "Deployment Workflow on Vercel",
        "Performance Optimization Strategies",
        "Error Handling and Debugging",
        "Database Integration and Server Actions"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript and React",
        "Familiarity with HTML and CSS"
      ],
      "description": "AI Local Business Directory App: A Modern Web Development Journey\nEmbark on an exciting journey into the world of modern web development with this comprehensive Udemy course, \"AI Local Business Directory App with React NextJs TypeScript\". This course offers a hands-on approach to building a real-world application that combines cutting-edge technologies with practical, easy-to-follow lessons. Our AI-powered local business directory app showcases the power of NextJs, React, and TypeScript in creating a robust, scalable, and user-friendly web application. Through this project, you'll gain invaluable experience in developing a full-stack application that addresses real-world needs while incorporating the latest trends in web development.\nKey Features:\nAI-Powered Functionality: Leverage Google's Gemini AI to generate dynamic, engaging business descriptions\nModern Tech Stack: Utilize NextJs, React, and TypeScript for a powerful and type-safe development experience\nSleek UI Design: Implement responsive and attractive interfaces using Tailwind CSS and shadcnui components\nSecure Authentication: Integrate Clerk for hassle-free, robust user authentication and management\nDatabase Integration: Connect to MongoDB for efficient data storage and retrieval\nImage Handling: Use Cloudinary for seamless image uploads and management\nDeployment Made Easy: Learn to deploy your application on Vercel for a smooth production experience\n\n\nCourse Highlights:\nSimplified Learning Path: This course is designed to be easy to follow, with clear explanations and step-by-step guidance.\nReal-World Application: Build a practical, usable application that solves actual business needs in the local directory space.\nClean Developer Experience: Focus on writing clean, maintainable code with TypeScript and modern React practices.\nAI Integration: Explore the exciting world of AI integration in web applications using Google's Gemini AI.\nResponsive Design: Create a fully responsive application that looks great on all devices using Tailwind CSS.\nAuthentication and Security: Implement secure user authentication and authorization with Clerk.\nDatabase Management: Learn to work with MongoDB for efficient data storage and retrieval in a NoSQL environment.\nImage Optimization: Handle image uploads and optimization using Cloudinary's powerful features.\nServer-Side Rendering: Harness the power of NextJs for improved performance and SEO.\nState Management: Implement context-based state management for a smooth user experience.\nForm Handling: Create and manage complex forms with ease using custom solution.\nSearch Functionality: Implement dynamic search features with server-side actions and client-side updates.\nPagination: Learn to implement efficient pagination for large datasets.\nAdmin Panel: Develop an admin interface for managing businesses and users.\nSEO Optimization: Implement best practices for search engine optimization.\nDeployment Workflow: Master the process of deploying a NextJs application on Vercel.\nPDF Booklet: A PDF book with source code to guide you through each video lectures, a great learning experience\nThis course is perfect for developers looking to enhance their skills in modern web development. By building this AI-powered local business directory, you'll gain practical experience with a wide range of technologies and concepts that are highly sought after in today's job market. Whether you're a beginner looking to dive into full-stack development or an experienced developer wanting to update your skills with the latest technologies, this course offers something for everyone.\nThe clean, simplified approach ensures that you can focus on learning without getting bogged down in unnecessary complexities. By the end of this course, you'll have built a fully functional, AI-enhanced web application from scratch, giving you the confidence and skills to tackle your own projects or contribute effectively to professional development teams. Join us on this exciting journey and take your web development skills to the next level!",
      "target_audience": [
        "Aspiring Developers: Individuals looking to enhance their web development skills using modern technologies like React, NextJs, and TypeScript.",
        "Entrepreneurs and Business Owners: Those interested in creating a local business directory app to connect with their community and promote local services.",
        "Tech Enthusiasts: Anyone eager to learn about AI integration in applications and how to leverage tools like Google Gemini for enhanced user experiences.",
        "Students in Computer Science: Learners seeking practical, hands-on experience in building real-world applications that can bolster their portfolios.",
        "Developers Transitioning to Full-Stack: Front-end developers who want to expand their skill set into back-end development and database management."
      ]
    },
    {
      "title": "NextJS Deployment Guide: Hosting on DigitalOcean with Linux",
      "url": "https://www.udemy.com/course/nextjs-deployment-guide-hosting-on-digitalocean-with-linux/",
      "bio": "Deployment Made Easy - Host your NextJS application on DigitalOcean (Ubuntu Linux) using Nginx as a reverse proxy",
      "objectives": [
        "Deploy a NextJS application to a DigitalOcean Droplet running Ubuntu Linux",
        "Set up and configure a DigitalOcean server for hosting NextJS projects with Nginx",
        "Secure your NextJS application and server using best practices",
        "Acquire and configure a domain for your application, including domain registration and DNS settings",
        "Configure domain name settings for your application on DigitalOcean",
        "Monitor and manage server resources and logs effectively"
      ],
      "course_content": {},
      "requirements": [
        "No prior Linux or deployment skills are required"
      ],
      "description": "Share your beautiful NextJS creations with the world by using this NextJS DigitalOcean deployment course. If you're a NextJS developer ready to take your web application live, this course is your ultimate guide.\nIn this hands-on training, you'll learn how to deploy your NextJS projects effortlessly on a DigitalOcean Droplet powered by Ubuntu Linux. I'll demystify the process of setting up and configuring NGINX as a reverse proxy server, optimizing your application's performance and security.\nSecurity is always important when it comes to deployment, and I'll teach you best practices to secure your NextJS application and the hosting server, ensuring data protection and user trust. Plus, you'll master the art of domain management, from acquisition to configuration, including domain registration and DNS settings.\nThis course is designed for those who prefer learning by doing. Through practical, real-world examples and step-by-step guidance, you'll gain the confidence to deploy your NextJS projects. By the end of this course, you'll not only have a deployed NextJS application but also the skills to deploy future projects independently.\nWhether you're a seasoned developer or just starting your journey, this course caters to NextJS enthusiasts, students, aspiring developers, freelancers, and entrepreneurs looking to showcase their work or launch startups.\nNo prior Linux or deployment skills are required. Enroll now and embark on your journey to effortless NextJS deployment on DigitalOcean. Bring your projects to Life!",
      "target_audience": [
        "NextJS Developers: If you already have NextJS project that's ready to go live, and want to learn how to deploy it, this course is perfect for you",
        "Students and Aspiring Developers: If you're a web developer looking to expand your skills and gain practical experience in deploying web applications, this course provides hands-on training",
        "Freelancers and Entrepreneurs: Freelancers and entrepreneurs who want to deploy their NextJS projects to showcase their work or launch their startups will find this course valuable"
      ]
    },
    {
      "title": "Generative AI for Everyone with Project",
      "url": "https://www.udemy.com/course/chatgpt-api-react/",
      "bio": "Build Engaging Generative AI Chatbots from Scratch with React and OpenAI API",
      "objectives": [
        "Learn to Build Chat application like ChatGPT using React",
        "Understand how to connect React with servers using API",
        "Learn React Core Topics which are required projects.",
        "Implement React things to understand more about it."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What You Learn and Develop during this Course",
          "Welcome Message"
        ],
        "Generative AI : Introduction": [
          "Introduction of Gen AI",
          "History of Gen AI"
        ],
        "React Js": [
          "What is React Js",
          "How to create React Application and Its Project Folder Structure",
          "Flow of React Application",
          "What is props",
          "What is JSX",
          "JSX Technical Section",
          "What is React Component",
          "Props Technical Section",
          "What is React Hook",
          "React Hook Technical Section 1",
          "React Hook Technical Section 2",
          "What is Conditional Rendering",
          "React Quiz",
          "congratulations note"
        ],
        "Implimetaion of React and ChatGPT API": [
          "What is ChatGPT?",
          "Where to get ChatGPT API",
          "Where to get ChatGPT API KEY"
        ],
        "Final Code Explanation working output": [
          "Github Repo Link",
          "React + ChatGPT API",
          "Congratulations"
        ],
        "Important Information": [
          "Open AI API"
        ]
      },
      "requirements": [
        "Nothing is required."
      ],
      "description": "Introduction to Generative AI and Building Engaging Chatbots from Scratch with React and OpenAI API\nAre you fascinated by the possibilities of Generative AI? Do you want to create chatbots that leverage cutting-edge AI to deliver intelligent and engaging interactions? This course is your gateway to mastering chatbot development with React and the OpenAI API!\nIn this course, you'll embark on an exciting journey to explore Generative AI and its applications in chatbot creation. You'll begin with the fundamentals of React, covering components, state, and props, and then dive deep into the OpenAI API to harness its powerful natural language processing capabilities.\nStep by step, you'll build chatbots of increasing sophistication, culminating in a feature-rich, interactive chatbot capable of understanding and responding to natural language with precision and flair. By the end of the course, you'll have the tools and knowledge to create your own AI-driven chatbots and seamlessly integrate them into your projects.\nWhat You’ll Learn:\nFoundations of Generative AI: Understanding the role of Generative AI.\nApplications of Generative AI: Learn about Applications of Generative AI.\nReact Essentials: Learn components, state, and props for building dynamic UIs.\nMastering the OpenAI API: Use advanced natural language processing to handle user queries.\nBuilding Engaging Chatbots: Techniques to craft intelligent, responsive, and user-friendly chatbots.\nBest Practices: Tips for integrating chatbots into real-world applications.\nThis course is designed for both beginners and experienced developers looking to expand their expertise in Generative AI and React. Whether you're aiming to create your first chatbot or refine your AI development skills, this course will empower you to bring your ideas to life.\nEnroll now and start building intelligent chatbots from scratch with React and the OpenAI API today!",
      "target_audience": [
        "Anyone Can learn and Build. Started from the basics."
      ]
    },
    {
      "title": "What are Web Frameworks?",
      "url": "https://www.udemy.com/course/what-are-web-frameworks-a-comprehensive-guide/",
      "bio": "An introduction to Web Frameworks, their components, and the software languages that make them work.",
      "objectives": [
        "Understand the purpose and benefits of using Web Frameworks for building web applications.",
        "Define Web Frameworks and differentiate between full-stack, front-end, and back-end frameworks.",
        "Identify the eight core components of Web Frameworks and their roles in web application development.",
        "Explain the relationship between Web Frameworks and programming languages, and recognize popular choices.",
        "Differentiate between Technology Stacks, Meta Frameworks, and Opinionated Frameworks in web development.",
        "Evaluate the suitability of WordPress as a Web Framework based on its design and capabilities.",
        "Recommend appropriate Web Frameworks for various use cases, such as SaaS, mobile apps, and desktop applications."
      ],
      "course_content": {
        "What are Web Frameworks?": [
          "Introduction to Web Frameworks: Building Your Digital Home",
          "Defining Web Frameworks: From Generalization to Specialization",
          "The Three Types of Web Frameworks and Their Components",
          "Front-end and Back-end Components: User Experience and Data Management",
          "Full-Stack Components: Integrating the Front-end and Back-end",
          "Understanding Technology Stacks, Meta Frameworks, and Opinionated Frameworks",
          "Web Frameworks and Programming Languages: A Comprehensive Overview",
          "Reviewing Web Frameworks: Key Concepts and Popular Choices",
          "WordPress and Web Frameworks: Recommendations and Key Takeaways"
        ]
      },
      "requirements": [
        "No prior experience with web development or programming is required to take this course. It is designed to be accessible to beginners who are interested in learning about Web Frameworks and their role in building web applications.",
        "However, having a basic understanding of how websites work and familiarity with common web technologies like HTML, CSS, and JavaScript would be beneficial. Experience with any programming language is a plus, but not mandatory.",
        "You will need access to a computer and a web browser to follow along with the course material. No additional software or tools are required.",
        "This course aims to provide a solid conceptual foundation for understanding Web Frameworks before diving into the technical implementation details. Both coding beginners and experienced developers can benefit from learning how Web Frameworks simplify and streamline the web application development process."
      ],
      "description": "5.0 Stars!\n\nLoved the presentation and overall style of the course! I‘m a product manager and was looking for something like this in order to get into the technical and conceptual details of web product development. Thanks, 10/10 recommendation! - Brk Y.\nMicky did an awesome job explaining a complex topic concisely; overall, this course was very well done. - Louie B.\nMicky gives a great overview on how to reason about web frameworks. - Daniel V.\nDive into the dynamic world of Web Frameworks with our comprehensive guide designed to illuminate the intricacies and components that power modern web development. In the early days of the internet, website owners and developers faced the daunting task of coding everything from scratch. This course embarks on a journey from those foundational days to the present, showcasing the evolution of web development into an era where speed and efficiency reign supreme.\nThrough engaging lessons, we'll explore the transformative impact of Web Frameworks, which leverage reusable components to accelerate the development of web applications. Discover why these frameworks are intricately designed around the most popular programming languages on the web and how these languages form the core of the most widely used Web Frameworks today. This understanding is crucial for anyone looking to build web applications more efficiently and with greater sophistication.\nOur exploration continues beyond there. We'll delve into the three primary types of Web Frameworks, each serving a unique purpose in the web development ecosystem. Furthermore, we'll break down the eight essential components of a Web Framework. Understanding these components will equip you with the knowledge to select and utilize the proper framework for your projects, ensuring a robust and scalable web application.\nWhether you're a budding developer or a seasoned professional looking to refine your skills, this course offers valuable insights into Web Frameworks. Join us on this enlightening journey to unlock the secrets of efficient web development and take your skills to the next level. This version aims to make the course description more engaging and structured, highlighting the journey from past to present and the key learning outcomes of the course.",
      "target_audience": [
        "Business Leaders and Decision-Makers: This course is ideal for executives and managers who oversee technology strategy and need to understand the frameworks behind their company's web applications to make informed decisions.",
        "Aspiring Software Developers: Newcomers to the field of software development will find a clear path to understanding the tools and frameworks that are essential for building modern web applications.",
        "Creative Web Designers: Graphic designers who contribute to the visual elements of web assets will gain insights into how their designs integrate with web frameworks to create a seamless user experience.",
        "Product Managers: Product managers who wish to bridge the gap between technical and business aspects of web product development will find this course invaluable for understanding the technical underpinnings that drive product functionality.",
        "Entrepreneurs and Startup Founders: Entrepreneurs who need to quickly understand the technical aspects of web development to effectively lead their tech teams and make strategic product decisions.",
        "IT Professionals Exploring Development: IT specialists looking to expand their expertise into the realm of software development will benefit from learning about the structure and components of web frameworks.",
        "Web Developers Seeking Specialization: Experienced web developers aiming to specialize in either frontend, backend, or full-stack development can refine their skills and knowledge of specific frameworks.",
        "Quality Assurance Engineers: QA professionals who want to better understand the frameworks they are testing to improve their ability to identify potential issues and work more effectively with development teams.",
        "Educators and Trainers: Instructors and trainers in the field of computer science or web development can update their curriculum with the latest trends and best practices in web frameworks.",
        "Technical Writers and Documentarians: Technical writers who need to create accurate and comprehensive documentation for web frameworks will benefit from a deeper understanding of their components and use cases."
      ]
    },
    {
      "title": "R Plumber - Build and deploy production APIs in R",
      "url": "https://www.udemy.com/course/r-plumber/",
      "bio": "Easily create and deploy web APIs in R with this COMPLETE COURSE in R Plumber, covering theory and a real-world project!",
      "objectives": [
        "Utilise the R Plumber library to develop a production-grade API, following a real-world use case",
        "Host your API online using 2 of the most popular providers, and debug live deployment issues",
        "Run and test your API locally using a range of tools, focusing on the command line library CURL",
        "Understand security and networking best practices, constantly critiquing and refactoring endpoints",
        "Manage endpoint authorisation via API keys",
        "Handle various API response types, including JSON, images, interactive plots and CSVs",
        "Integrate frontend files to your API to create a fully-fledged website",
        "Build asynchronous functions to improve API performance",
        "Apply request pre-processing tasks using Plumber filters, such as enabling logging, geolocation and gatekeeping",
        "Implement correct API request and response behaviour, including the usage of HTTP method types, status codes and response headers",
        "Issue API requests with many different types of request parameters",
        "Master the groundworks of how REST APIs work, analysing requests in Web Developer Tools"
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome!",
          "Learning Objectives",
          "Course Structure",
          "Our Case Study"
        ],
        "Web APIs": [
          "Learning Objectives - Web APIs",
          "What are Web APIs",
          "Sending API Requests",
          "Web APIs",
          "Summary – Web APIs"
        ],
        "R Setup": [
          "Installing RStudio",
          "Creating a Plumber Project",
          "Running the API"
        ],
        "Plumber Endpoint Structure": [
          "Learning Objectives – Endpoint Structure",
          "Global Annotations",
          "Echo Endpoint",
          "Hello World Endpoint",
          "Sending Requests to our API",
          "API Documentation",
          "Flight Meal Endpoint",
          "Summary – Endpoints",
          "Seat Availability Endpoint"
        ],
        "Parameters": [
          "Learning Objectives – Parameters",
          "Case Study CSV Files",
          "Global Code",
          "Missing Values",
          "Non-String Parameters",
          "Default Values",
          "Setting Default Value of Today",
          "Dynamic Routes",
          "Typed Dynamic Routes",
          "Converting to an Array Parameter",
          "Parameters",
          "Summary – Parameters",
          "Pricing Endpoint",
          "Organising our Plumber Code"
        ],
        "Serializers": [
          "Learning Objectives – Serializers",
          "Case Study CSV Files",
          "Serialization and the JSON Serializer",
          "Boxed and Unboxed JSON",
          "HTML Serializer",
          "Image Serializers",
          "htmlwidget Serializer",
          "CSV Serializer",
          "PDF Serializer",
          "Serializers",
          "Summary – Serializers",
          "Flight Search Endpoint",
          "Review!"
        ],
        "Other HTTP Methods": [
          "Learning Objectives – HTTP Methods",
          "POST",
          "POST with Dynamic Route Endpoint",
          "PUT",
          "DELETE",
          "Request Body",
          "HTTP Methods",
          "Summary – Other HTTP Methods",
          "Flight Booking Endpoint"
        ],
        "The Request Object and Response Object": [
          "Learning Objectives - The Request and Response Objects",
          "The Request Object",
          "Status Codes",
          "The Response Object",
          "Fixing Up Other Endpoints",
          "Plumber Requests and Responses",
          "Summary - The Request and Response Objects",
          "Fixing Up the Save Passport Endpoint"
        ],
        "Security and Plumber Filters": [
          "Learning Objectives – Security and Plumber Filters",
          "Security",
          "Filters – Logging",
          "Authentication and Geolocation Filters",
          "Security and Plumber Filters",
          "Summary – Security and Plumber Filters",
          "Blocking IP addresses"
        ],
        "Asynchrony, Storing State, and Hosting Static Assets": [
          "Learning Objectives – Asynchrony, Storing State, and Hosting Static Assets",
          "Asynchrony",
          "Storing State",
          "Mounting Routes",
          "Hosting Static Assets",
          "Debugging our Website",
          "Asynchrony, Storing State, and Hosting Static Assets",
          "Summary - Asynchrony, Storing State, and Hosting Static Assets"
        ]
      },
      "requirements": [
        "Basic R experience",
        "No knowledge of APIs required!",
        "A computer, web browser and some spare disk space to install RStudio and store some CSVs",
        "If you intend on hosting your API online, some knowledge of the command line will be helpful. The two hosting providers that we use require card details, but free tiers are available"
      ],
      "description": "Start developing and hosting your own APIs with the Plumber package in R!\n\n\nThis course, assuming zero knowledge of APIs, covers all the fundamental concepts behind networking and the R Plumber package, gradually iterating from a blank project, to a production-grade API based on a real-life scenario. You'll get hands-on pretty quickly, with tons of applied coding, testing, quizzes and assignments. Once you have optimised and secured your API, you'll observe first hand its power as you integrate with a pre-built frontend framework. Finally, you will deploy your API live on the internet, using both the Digital Ocean and AWS cloud services, before configuring your custom domain name with Cloudflare.\n\n\nEach practical exercise aims to improve your Plumber knowledge, starting with simple endpoints all the way to handling advanced API requests and features. For example, you'll design endpoints in order to search and book flights, as well as display passenger numbers and visualisations strictly to the airline's internal team only. But the course doesn't simply tell you how to code - we always provide all the theoretical groundings needed for you to understand why and how to implement such functionality, whether that be in the Plumber or REST API world. Support is always there if you need it too, as we'll be actively monitoring the course's Q&A section to answer your queries on Plumber and running the API.\n\n\nWe can't wait to see what you can build!\n\n\nSome of the practical use cases to taking this course and creating Plumber APIs include:\nGaining knowledge of REST APIs and hosting providers\nApplication of best practices and conventions for API development\nMoving away from R Shiny whilst keeping the same R code and functionality\nSeparation of concerns of frontend and backend components, though allowing for easy integrations between them\nBuilding a backend for a personal or business website\nDesigning a company-internal dashboarding platform, such as a Customer Data Platform (CDP)\nReplacing legacy APIs with modern, secure and sophisticated endpoints\nDeveloping a quick proof-of-concept to demonstrate new models, algorithms and visualisations built in R\nAllowing existing R functionality to connect with the internet (such as integrating a Slack command to an R function)\n\n\nThe course covers:\nBasics of REST APIs\nSending API requests using the command line library CURL\nSetting up a Plumber project\nPlumber endpoints (static and dynamic routes)\nRunning and testing our API locally\nSwagger API Documentation\nHandling parameter data types\nQuery / path / body request parameters\nSerialization (such as HTML, images, interactive plots and CSV formats)\nREST API method types\nResponse status codes\nAPI security\nPre-processing tasks such as logging and gatekeeping using filters\nAuthentication via API keys\nFunction asynchrony\nIntegration with frontend files\nDeploying our API onto Digital Ocean and AWS!\nConfiguring a custom domain",
      "target_audience": [
        "Any R developer interested in networking and APIs!"
      ]
    },
    {
      "title": "CI/CD with Oracle Visual Builder Studio",
      "url": "https://www.udemy.com/course/oracle-visual-builder-studio/",
      "bio": "Learn about Oracle VB Studio, its projects, components, roles, Jobs, Pipelines CI/CD of VB & Integrations",
      "objectives": [
        "Setup your VB Studio instance and manage it",
        "Undestanding the key concepts of VB Studio",
        "Complete CI/CD process of your Visual Builder applications using VB Studio",
        "Complete CI/CD process of Integrations using VB Studio",
        "Setup the build jobs to automate the life cycle of VB applications",
        "Create and Manage issues to release new features using VB Studio"
      ],
      "course_content": {
        "Introduction of the VB Studio course": [
          "Introduction of the course"
        ],
        "Introduction of VBS, how to setup, access it, and understanding terminologies": [
          "Introduction of Oracle Visual Builder Studio and it's key components",
          "Creating VB Studio instance, how to access it, and on-board your team members",
          "Know about Build executor, template, Organization, and create projects",
          "Understanding of various key components of Visual Builder Studio"
        ],
        "Know about projects, create projects, know about environment, create environment": [
          "Know about projects, understanding project templates, project membership, etc",
          "Do project management in Oracle VB Studio",
          "Creating environments and add service instances",
          "How to create Git repository and branches",
          "Know about scratch repository and create workspace"
        ],
        "Start your Continous Integration (CI) and Continous Deployment (CD) processes": [
          "Know about the complete workflow to create a VB app using VB Studio",
          "Commit, push and track your changes in Git",
          "Creating merge request, approve merge request, and delete branches",
          "Create jobs and piplelines to deploy your VB application",
          "Publish the application on VB runtime using VB Studio",
          "What are build parameters and how to create them",
          "What is merge conflict and how to resolve merge conflicts",
          "Create and manage Issues using VB Studio",
          "Import and Export Oracle Integration Artifacts Between Environments"
        ],
        "Integration between VBCS and VB Studio": [
          "Connecting VB Designer with VB Studio",
          "Push, Pull and Import the VB application from VB Studio"
        ]
      },
      "requirements": [
        "No experience required to learn VB studio",
        "Having an knowledge of CI/CD process will help"
      ],
      "description": "This course is designed to teach you the Oracle Visual Builder Studio(VB Studio) that will help you to do CI/CD of your web/mobile application, Integrations, etc. This course starts with the introduction of the Oracle VB Studio, and its feature, and discussed various navigations of the VB Studio.\nThis course will help you to understand why Oracle VB Studio is important and why should we use it. We'll help you to set up the VB Studio instance, and access it using the OCI console.\nThis course is designed in such a manner so that you can do your CI/CD process independently without any help required.\nThe following topics are covered as part of this course:\n\n\nOverview of the Oracle VB Studio\nVB Studio architecture\nManage app development cycle with VB Studio\nHow to set up the VB Studio instance\nHow to access the VB Studio instance\nAdd new users to the VB Studio instance\nUnderstand the build executor and template\nHow to create projects and assign them to team members\nUnderstanding of Workspace, Git, VB Studio navigations\nManage project users and groups\nLocal vs IDCS groups\nCreate Repository & Branches\nCommit, Push, and Merge changes\nManage Issues\nBuild parameters and how to create them\nCreate Jobs, Pipelines, and execute team to automate CI/CD of VB applications\nCreate Jobs, Pipelines, and execute team to automate CI/CD of Integrations\n\nAfter completing this course, you will become proficient in the Oracle VB Studio and can work independently without any help.\n\n\nEnjoy this course and keep posting your questions for any issues/concerns.",
      "target_audience": [
        "Users who are responsible for managing, building, merging, and deploying projects",
        "Oracle Visual Builder Studio administrators who administer and set up the service",
        "DevOps team"
      ]
    },
    {
      "title": "Joomla 4 guide for beginners step by step",
      "url": "https://www.udemy.com/course/guide-to-joomla-english/",
      "bio": "Guide for Beginner to Intermediate level",
      "objectives": [
        "The basics of Joomla",
        "System configuration available in Joomla",
        "Content management",
        "Template managment",
        "System management",
        "Site management",
        "Practical"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Joomla Course"
        ],
        "The Basics": [
          "Guide to Joomla Chapter 2 (The Basics)",
          "Guide to Joomla Chapter 2b (Multilingual website)"
        ],
        "System configuration": [
          "Guide to Joomla Chapter 3 (System Configuration)"
        ],
        "Template management": [
          "Guide to Joomla Chapter 4 (Content management)"
        ],
        "Content management": [
          "Guide to Joomla Chapter 5 (Template management)"
        ],
        "Guide to Joomla Chapter 6 System management": [
          "Guide to Joomla Chapter 6a (Redirects)",
          "Guide to Joomla Chapter 6b (Information)",
          "Guide to Joomla Chapter 6c Update",
          "Guide to Joomla Chapter 6d User Permissions",
          "Guide to Joomla Chapter 6e Extension management"
        ],
        "Guide to Joomla Chapter 7 Site management": [
          "Guide to Joomla Chapter 7a Users management",
          "Guide to Joomla Chapter 7b Plugin manager",
          "Guide to Joomla Chapter 7c Media manager"
        ],
        "Practical": [
          "Guide to Joomla Chapter 8 First Practical",
          "Guide to Joomla Chapter 9 Second and Final Practical"
        ]
      },
      "requirements": [
        "No programming experience required.",
        "I will teach almost everything, but programming experience will be plus",
        "It will be great if you knew HTML, CSS, PHP"
      ],
      "description": "If you want to earn money online. Learn Joomla. Joomla is one of the most powerful content management systems available. It's constantly updated, and totally free.\nAnd with it, you can create simple blogs, large complex websites, and anything in between.\nI am an expert Joomla developer and designer. I will teach you Joomla. Joomla is an award-winning CMS. Joomla is a piece of software that you can install and use to create a website, blog, and so on. Between various topics, you will learn a series of Joomla guides to building a website in Joomla.\nSo in this course, you will be able to learn the following:\n1. Introduction\n1.1. Welcome to the Course\n1.2. What Is Joomla?\n1.3. Where I can get Joomla?\n2. The Basics\n2.1. Installing Joomla locally\n2.2. Getting Familiar With the Joomla Dashboard\n2.3. Installing Joomla on live server\n2.4. How to make a multilingual website in Joomla\n3. System Configuration\n3.1. Global checkin\n3.2. Cache\n3.3. Global configuration overview\n4. Content management\n4.1. Working with article pages\n4.2. Creating menus\n4.3. Setting up modules\n5. Template management\n5.1. Site templates and templates styles\n5.2. Mail templates\n6. System management\n6.1. Redirects\n6.2. Information\n6.3. Update\n6.4. User permissions\n6.5. Extension installation and management\n7. Site management (separate video for all)\n7.1. Users\n7.2. Plugins\n7.3. Media\n8. First Practical to simple but interactive website\n8.1. Home page\n9. Final practical to complete full website\n\n\n---------------------------------",
      "target_audience": [
        "Beginner students or programmers who want to learn how to build a professional website"
      ]
    },
    {
      "title": "Hostinger AI Web Development: Build Websites in Just Hours!",
      "url": "https://www.udemy.com/course/hostinger-ai-web-development-complete-course/",
      "bio": "No Coding Required: Build Stunning Websites with Hostinger AI",
      "objectives": [
        "Learn Website Developing With Hostinger",
        "Build and Launch Websites With Hostinger AI Website Builder",
        "Build and Launch SEO Optimized Websites in Hours",
        "Learn Search Engine Optimization With Hostinger AI",
        "Learn How to Use Hostinger Hosting Services",
        "Learn What to do After Purchasing Hostinger's Hosting Service"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "About The Course": [
          "What You'll Learn",
          "Who This Course is For",
          "3 Types of Hostinger Hosting Services",
          "How to Purchase a Hosting Plan From Hostinger"
        ],
        "Hostinger AI Web Development: Build and Launch Websites in Just Hours": [
          "How to Access H Panel",
          "How to Add and Remove Websites From Website List",
          "Building a Website With Generative AI",
          "Building a Website by Customizing a Template"
        ],
        "Hostinger AI Web Development: Drag & Drop AI Website Builder": [
          "Building Website Header",
          "Designing Website Content",
          "Designing Website Footer",
          "Adding and Designing More Pages in Our Website",
          "Mobile Optimization: Optimizing Our Websites For Mobiles"
        ],
        "Search Engine Optimization & Website General Settings": [
          "Website General Settings",
          "Search Engine Optimization: Optimizing Our Websites For Search Engines (SEO)"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "You will learn everything you need to know."
      ],
      "description": "Unleash the Power of AI for Effortless Website Creation: Hostinger AI Web Development\n\n\nBuild the Website of Your Dreams in Just Hours, Even with No Coding Experience!\n\n\nThis course empowers you to revolutionize website creation with Hostinger AI Website Builder. Harness the power of cutting-edge artificial intelligence to design, customize, and launch a professional-looking website in record time, even if you're a complete beginner.\n\n\nHere's what you'll learn:\n\n\nMaster the intuitive interface: Get comfortable navigating Hostinger AI Website Builder effortlessly.\nLet AI do the heavy lifting: Utilize AI-driven features to generate personalized layouts and automate complex tasks.\nUnleash your creativity: Drag-and-drop elements, adjust fonts and colors, and personalize your website to match your unique vision.\nSEO secrets revealed: Learn valuable strategies to optimize your website for search engines and attract more visitors online.\nGo live confidently: Launch your website with ease and begin your journey of online success.\nLearn valuable SEO techniques to boost your website's visibility and reach a wider audience online.\n\n\nThis course is perfect for:\n\n\nIndividuals seeking a streamlined website building experience\nEntrepreneurs and small business owners looking to establish a strong online presence\nFreelancers and creatives wanting to showcase their work with stunning websites\nAnyone with zero coding experience who wants to build and launch a website quickly and easily\n\n\nJoin this course today and unlock the potential of Hostinger AI Website Builder!",
      "target_audience": [
        "Who Want to Build a Website For Themselves With AI",
        "Who Wants to Learn Hostinger AI Web Development",
        "Who Wants to Build and Launch Websites in Hours",
        "Who Have Purchased Hostingers Hosting Service But Don't Know What to do Next"
      ]
    },
    {
      "title": "Core CSS Mastery",
      "url": "https://www.udemy.com/course/core-css-mastery/",
      "bio": "A complete CSS Masterclass",
      "objectives": [
        "Get up and running with CSS",
        "Master all of the most important CSS concepts",
        "Solve advanced problems and avoid common CSS headaches",
        "Understand best practices when writing CSS"
      ],
      "course_content": {
        "Getting Started": [
          "Intro to the Course",
          "Getting Started",
          "CSS Selectors",
          "External, Internal, Inline",
          "Should I learn Vanilla CSS?"
        ],
        "CSS Text": [
          "Styling Text",
          "Styling Lists",
          "Styling Links",
          "CSS Colors",
          "Color Theory",
          "CSS Fonts",
          "Assessment - Create a Palette"
        ],
        "Borders and Boxes": [
          "CSS Sizing",
          "Borders",
          "Margins and Padding",
          "Box Shadows",
          "CSS Box Model",
          "Overflow",
          "Assessment - Center Login",
          "Assessment - Create Navbar"
        ],
        "CSS Elements": [
          "Backgrounds",
          "Form Text and Buttons",
          "Radio and Checkboxes",
          "CSS Form Limitations",
          "Tables",
          "Replaced Elements",
          "Assessment - Palette 2"
        ],
        "Layouts": [
          "Floats",
          "Position",
          "Flexbox",
          "Grid",
          "Responsive Design",
          "Assessment - Grid Chessboard",
          "Assessment - Flex Chessboard"
        ],
        "Advanced Concepts": [
          "Cascade, Inheritance, Specificity",
          "Variables",
          "Animations",
          "Frameworks and Preprocessors",
          "Final Tips"
        ]
      },
      "requirements": [
        "A very basic understanding of html will be useful for this course."
      ],
      "description": "Go zero to hero with this complete CSS Masterclass teaching all the important CSS skills for a web developer.\n\nWe'll assume no previous knowledge aside from a very basic understanding of html. This course is ideal for beginners looking to learn CSS but also for web developers looking to revisit the basics.\n\nEver wondered why an element doesn't appear where you think it's supposed to? Don't worry, we've got you covered!\n\nWe cover all of the highest frequency properties and values as well as tackling more advanced CSS concepts such as CSS position, grid, flexbox and animations.\n\nWe cover topics such as the following -\n\n- Should you use a CSS framework?\n- What is the difference between a framework and a preprocessor?\n- Is learning vanilla CSS still important?\n- All of the most important CSS rules for web developers\n- Challenges to test your understanding along the way\n- Writing maintainable CSS code\n- Centering elements vertically and horizontally\n- The difference between block, inline-block and inline elements\n- CSS Cascade, Specificity and Inheritance\n- Layouts with CSS Grid and CSS Flexbox\n- Animations\n- Many more topics!\n\n\nUnlike other CSS courses that simply provide an introduction to CSS, this is a complete course teaching all the necessary core skills with over 7 hours of thorough and engaging content! You'll know more CSS than the average web developer after watching this course.\n\nDon't miss out on this chance to learn CSS with Adam \"z3nsh3ll\" Jones, a professional and experienced teacher from the UK.",
      "target_audience": [
        "Beginners looking to learn the ropes of CSS",
        "Experienced developers looking to re-visit the basics"
      ]
    },
    {
      "title": "Complete Express Framework Course - Sign Up Auth0 - Node.Js",
      "url": "https://www.udemy.com/course/complete-express-framework-course-sign-up-auth0-nodejs/",
      "bio": "Code along step by step Sign In and Sign Up Examples - Express Framework and Node.JS - Google - Facebook - Auth0",
      "objectives": [
        "Students will learn how to use the EJS library to create dynamic views for web applications",
        "Students will gain a deep understanding of how to work with JavaScript, Node, and Express to create efficient, scalable web applications",
        "Students will learn how to implement authentication and authorization for web applications using Passport",
        "Students will learn how to design and implement a robust and efficient SQL database for web applications",
        "Students will learn best practices for working with the Express Framework",
        "Students will gain knowledge of different routing methods, RESTful routes, handling form data, file uploads, middleware and how to handle error and logs"
      ],
      "course_content": {
        "Application Set Up And Server Initialization": [
          "Initializing The Express Project and Libraries",
          "Join Our Online Community",
          "Setting up the Express Manifest and JSON Package File",
          "Setting Up The Application Server Wiring",
          "Setting Up A Port and Save Conventions with Express",
          "Exercise - Meet the Online Community",
          "Running Our Express Server with Error Handling"
        ],
        "Database creation with SQlite3": [
          "Introduction to SQLite3",
          "Database Schema for SQLite3",
          "Cryptographic Hashing and Inserting Users into the Database Securely",
          "Final Code Resource For Reference"
        ],
        "Configuring App Express": [
          "Code Along - Complete Configuring App Express File",
          "Setting Up Routing"
        ],
        "EJS Templating Engines with Express": [
          "Setting Up EJS with Routing",
          "CSS Styling with Templating Engines",
          "CSS Home Page Styling for EJS with Express",
          "Building The Index Page CSS and EJS including Form Updates",
          "Styling The Index App EJS and CSS",
          "Explicitly create the database build directory to exer",
          "Javascript Tags with EJS in Express",
          "Review of Project Build"
        ],
        "Authenticating Username and Password with Express and Passport": [
          "Templating Engines wirth EJS of Login With Express Authentication",
          "Username And Password Local Strategy Code",
          "Rerouting Application and Authentication",
          "Import Additional Styles from CSS on Github",
          "Verify Session with Passport Local Strategy",
          "Log Out Functionality For Users And Live Interaction",
          "Sign Up Form and Styling with EJS",
          "Sign Up And Database Completion with Hashing And Salt"
        ],
        "Google Authentication with Express and Passport": [
          "User Experience Update with Homepage",
          "Set Up Google Routing And Authentication Passport",
          "Set Up Google 0Auth2 And Credentials with API GCP",
          "Code Along To The Google Strategy Authentication From Passport with SQLite3",
          "Google Authentication Express Server Final Update"
        ],
        "Facebook Authentication and Passport Login": [
          "Facebook Developers Platform and API Creation",
          "Facebook Strategy and Sign in with Passport and Express"
        ],
        "Auth0": [
          "Setting up Auth0 with Express and Passport",
          "Auth0 Stratget and Implementation with Express and Passport"
        ],
        "Optional - Extra JavaScript Practice for Beginners": [
          "Important Note About This Section",
          "How To Follow Along And Do Exercises In This Course - Code Sand Box",
          "What Is CodeSandBox Exactly and How To Sign In",
          "How To Use CodeSandBox - The Dashboard & Templates",
          "CodeSandBox File Architecture",
          "What are HTML CSS and JavaScript Basics with CodeSandBox",
          "Create a New Vanilla JS Template on CodeSandBox",
          "Building Out The Course Template on CodeSandBox",
          "Hook Up and Save Your Course Learning Template",
          "Final JavaScript Course Template Review",
          "What Are Arrays & Dimensions in JavaScript",
          "The Length Method in JavaScript",
          "What Are Complex & Multi-Dimensional Arrays in JavaScript",
          "Exercise Solution - What Are Complex & Multi-Dimensional Arrays in JavaScript",
          "Indexing Values in Arrays with JavaScript",
          "Accessing Arrays with Bracket Notation Example 1",
          "Accessing Arrays with Bracket Notation Example 2",
          "Exercise - Acessing City Weather Data Array",
          "Solution - Acessing City Weather Data Array",
          "Modifying Arrays And Unshift in JavaScript",
          "Modifying Arrays And Pop in JavaScript",
          "Exercise - Array Function for an Anime App",
          "Solution - Array Function for an Anime App",
          "Continue JavaScript Practice"
        ],
        "Templating Engines and Routing to Build out a Todo Exercise Application App": [
          "Important Note About This Section",
          "Add Items To List in Database With Express and SQLit3",
          "Mapping and Filtering Database Info With Express",
          "Inserting Titles Into SQL Database with Express Routing",
          "EJS State Management And Updates with Express Routing and Locals",
          "Update Fetch Locals Into Response",
          "SetAttributes and Keycode Additions for Exer List",
          "Clear Items From App With EJS and Express Routing",
          "Finish Routing Form Data on Express Side for Exercise App",
          "Debugging Syntax From SQLite3 Database and EJS Formatting",
          "Final Review of EJS Express Passport and Node Libraries"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know inside. *Basic JavaScript & Web Development is a plus!"
      ],
      "description": "This Complete Express Framework Course is the ultimate resource for developers of all levels looking to master the Express Framework, SQL, and the powerful combination of Passport.js and Auth0. Whether you're just starting out with web development or have been working in the field for years, this course will provide you with the skills and knowledge you need to build robust, dynamic web applications.\nThroughout the course, you'll code along step-by-step with our experienced instructors as you learn how to build sign-in and sign-up functionality using Express Framework and Passport.js. You'll gain hands-on experience working with popular strategies for authentication and authorization, such as Google, Facebook, and Auth0.\nOur goal with this course is to teach you the working skills you need to start working as a junior or mid level developer at a job with added confidence from coding, get a job in the tech space, or innovate the world at your own choosing with your new found powers. This course will take you there!\nThe world is shifting more and more towards learning and working at home. This is an opportunity for you to start learning the most in demand skills, showcase those coding development skills, and gain the experiences you need to develop your passion into something real.\nThis course covers the following topics in detail:\nEJS for templating engines: You'll learn how to use the EJS library to create dynamic views for your web applications, and how to work with template variables and control structures.\nJavaScript, Node.js, and Express.js routing: You'll gain a deep understanding of how to work with JavaScript, Node.js, and Express.js to create efficient, scalable web applications. You'll learn how to define routes, handle requests, and respond to requests using the Express Framework.\nBuilding Facebook, Google, and Auth0 local strategies with Passport.js: You'll learn how to use Passport.js to implement authentication and authorization for your web applications. You'll work with popular strategies such as Google, Facebook, and Auth0 to provide your users with a secure and convenient way to sign in and sign up.\nCreating a robust and efficient SQL database: You'll learn how to design and implement a SQL database for your web applications. You'll learn about best practices for database design, and how to work with SQL to query, insert, update and delete data from the database.\nYou'll learn best practices for working with the Express Framework, and gain a solid understanding of how to work with Passport.js to build robust, secure authentication and authorization systems. You will also gain knowledge of different routing methods, RESTful routes and also how to handle form data and file uploads. Furthermore you'll learn how to use middleware for logging, body parsing, error handling, and more. By the end of this course, you'll have all the skills you need to build dynamic web applications using the Express Framework, SQL and also have a good understanding of how to secure and authenticate your application.\nYou do not need any web development or programming knowledge to get started!\nThis course requires zero prior knowledge to get started! Some basic web development skills including Javascript would definitely move you through the course at a much faster pace than others, however, this course includes introductory sections (they are purely optional) so that we all move through the key lessons together regardless of our skill level!\nPlease see the full curriculum, the free preview videos and whenever you’re ready...\nDon't miss out on this opportunity to master the Express Framework, SQL and web application security. Sign up now and start building amazing web applications today!",
      "target_audience": [
        "This course is for beginner to intermediate web developers who want to master the Express Framework and build dynamic web applications.",
        "This course is for web developers looking to gain hands-on experience with Passport and Auth0 and learn how to implement authentication and authorization.",
        "This course is for developers who want to learn how to use EJS for templating engines and create dynamic views for web applications.",
        "This course is for web developers who want to learn JavaScript, Node, and Express routing to create efficient and scalable web applications.",
        "This course is for developers who want to gain a deep understanding of how to design and implement a robust and efficient SQL database.",
        "This course is for web developers who want to learn various routing methods, RESTful routes, and techniques for handling form data and file uploads.",
        "This course is for developers who want to understand how to use middleware for logging, body parsing, error handling and more.",
        "This course is for developers who want to secure and authenticate web application with industry standard methods."
      ]
    },
    {
      "title": "React JS Practice Test for Interviews & Certification 2025",
      "url": "https://www.udemy.com/course/react-js-practice-test-for-interviews-certification-2025/",
      "bio": "Prepare for React JS interviews & certification with 180 MCQs on React, ReactJS concepts, state, routing, and more.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you ready to test your ReactJS knowledge and prepare for job interviews or certifications? This React JS Practice Test is designed to help you assess and reinforce your understanding of React, covering essential concepts for real-world development. With 180 multiple-choice questions (MCQs) across six key sections, this practice test will sharpen your skills and highlight areas for improvement.\nWhether you're preparing for a ReactJS job interview, a certification exam, or simply looking to strengthen your knowledge, this test provides a structured approach to mastering React JS concepts.\n\n\nWhat You’ll Learn & Test Yourself On:\nCore Concepts of ReactJS\nJSX and component structure\nFunctional vs. class components\nProps, state, and lifecycle methods\nEssential React Hooks: useState, useEffect, useContext\nComponent Structure and Design\nBest practices for organizing React components\nComposition vs. inheritance in component design\nHigher-Order Components (HOCs) and Render Props\nManaging controlled and uncontrolled components\nState Management and Data Flow\nLocal and global state in React JS\nUsing the Context API for state management\nRedux fundamentals: actions, reducers, and store\nFetching and managing data with React Query\nEffective form handling with Formik and React Hook Form\nRouting, Performance, and Optimization\nImplementing navigation with React Router\nCode splitting and lazy loading for performance optimization\nPreventing unnecessary re-renders with memoization (React.memo, useMemo, useCallback)\nDebugging performance issues with React Profiler\nAdvanced Features and Integrations\nCreating custom hooks for reusable logic\nHandling errors with error boundaries\nLeveraging React Suspense and Concurrent Mode for better user experience\nUsing Strict Mode to catch potential issues in development\nIntegrating third-party libraries and APIs in ReactJS apps\nDevelopment Workflow and Best Practices\nSetting up projects with Create React App (CRA)\nExploring Next.js for server-side rendering (SSR) and static site generation (SSG)\nWriting unit and integration tests using Jest & React Testing Library\nDebugging and optimizing with React DevTools\nDifferences between React and React Native\nAnimating UI with Framer Motion and React Spring\n\nWhy Take This Course?\nComprehensive Coverage – Covers all key React topics for a thorough assessment.\nReal-world Scenarios – MCQs designed to reflect real-life React challenges.\nDetailed Explanations – Learn the ‘why’ behind each answer for deeper understanding.\nInterview Preparation – Strengthen your skills and boost confidence for job interviews.\nRegular Updates – Stay current with the latest React trends and best practices.\nBy taking this React JS Practice Test, you’ll gain valuable insights into your strengths and areas for improvement. Whether you're preparing for a job interview, aiming for a certification, or simply refining your ReactJS skills, this test will help you stay ahead in the ever-evolving world of React development. Challenge yourself, track your progress, and build the confidence to tackle real-world React projects with ease. Are you ready to put your React knowledge to the test? Enroll now and start practicing!",
      "target_audience": [
        "Anyone Preparing for a ReactJS Certification – Gauge readiness and improve weak areas",
        "Aspiring React Developers – Prepare for job interviews with confidence",
        "Intermediate Developers – Strengthen foundational and advanced ReactJS skills",
        "Students & Web Development Learners – Test and apply React JS concepts in projects",
        "Professionals Refreshing Their Skills – Stay up to date with best practices in React"
      ]
    },
    {
      "title": "Create a Client Network by Hosting WordPress Sites",
      "url": "https://www.udemy.com/course/create-a-client-network-by-hosting-wordpress-sites/",
      "bio": "Reduce cost by building your own servers, automate daily backups, and more.",
      "objectives": [
        "Understand what a Virtual Private Server (VPS) is and why it's better than shared hosting",
        "Save money by learning how to host websites on a Linux-based VPS manually, versus paying extra for CPanel or using expensive one-click hosting providers",
        "Specifically, learn how to set up multiple WordPress sites per server using the command line, on Ubuntu Linux and Nginx",
        "Build a non-cloud VPS from scratch to host multiple sites",
        "Learn how to automate cheap database backups with Amazon S3",
        "$$ Make money by using these skills to run a web hosting company",
        "$$ Make consistent monthly income by having your clients host with your low-overhead hosting business",
        "Go faster with the automated installation script of everything you will learn in this course"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "What VPS is and Why Choose VPS Over Shared Hosting",
          "Mac Terminal and Windows puTTY"
        ],
        "Getting Started": [
          "Buy a New VPS Server from RamNode",
          "First Login",
          "Install the Necessary Packages"
        ],
        "Building": [
          "Configuring Nginx",
          "Install MySQL, and phpMyAdmin With the Command Line",
          "Install WordPress",
          "Stress Test on RamNode VPS",
          "Uptime with Pingdom"
        ],
        "Make Money": [
          "Overview",
          "Host Multiple Sites",
          "Script: Daily Backup to Amazon S3"
        ],
        "BONUS!!": [
          "Using rsync and s3cmd to Set Up New Servers Even Faster",
          "Set up, Reformat, Repeat - Practice Makes Perfect",
          "Script: Automate Set Up"
        ]
      },
      "requirements": [
        "Students should understand that this course will be face-paced screencasts of the process, where I explain what we're doing and why.",
        "This course is for students with a Mac (or Linux-based) or Windows machine. Students with a Mac should have the Terminal app (or similar) installed. Windows students will need puTTY. Both of which we will cover in the Getting Started steps.",
        "You should come prepared to spend a few dollars on a new VPS hosting plan; in this course I use RamNode. This course does not cover or test other providers, and although the material and scripts should work on other hosts, to learn the material successfully, and follow through the steps exactly, it's required you follow along using this provider. Once you've learned the material successfully, you should be able to take this knowledge and apply it with only minor modifications based on how the hosting provider works - if any differently.",
        "You should own at least 1 domain, through GoDaddy, for example. We'll use the top-level or a sub-domain for the course."
      ],
      "description": "So you want to learn how to host your own WordPress sites? You're in the right place! This course will teach you not only how to host your own sites (to save money), but also how you can make recurring money by hosting client sites.\nThink of this course as a Do-It-Yourself guide to learning proven techniques that will allow you to easily set up a server yourself and make recurring monthly income from hosting websites. Say goodbye to paying a high price for an all-inclusive web hosting company or expensive hosting 1-click add ons.\nWhether you've built a VPS server before or you're looking to offer your clients web hosting, there will be plenty to learn from this course. Each lesson has a worksheet with the links and commands discussed in the corresponding video.\nWe'll cover a lot in this course, from comparing a Virtual Private Server against the commonly used shared hosting, purchasing a VPS, using the command line on both Mac and Windows, installing the server packages you'll need and configuring them, and also installing the database and then the WordPress files.\nWe'll stress test your new server so you can have the confidence in what you're building and if you plan on selling hosting plans to clients, you'll have the confidence behind what you're offering. You can easily charge $30/mo per client for the value that you'll be able to offer after taking this course.\nI'll show you how to host multiple sites on the same server that you're already getting an incredible deal on, which further increases your profit margin.\nAutomation helps build processes that every business needs to succeed, and it also makes a team of 1 feel like so much more. I'll show you how to set up automated daily back ups of your database and as a bonus, I've developed an exclusive command line script that takes everything you'll learn and automates building a server for you. In about a minute you can go from a fresh server to the standard Hello World! blog post you get with a WordPress installation.\nI look forward to teaching you how you can make money hosting WordPress sites!",
      "target_audience": [
        "This course is for students with an intermediate knowledge of web technologies. Students should have some knowledge of the command line and basic commands such as chmod, chown, cd, and what sudo is. Students should also understand what a database is and administration tools like phpMyAdmin, and have a basic knowledge of web servers such as Apache and Nginx.",
        "Although this course is focused on students with some technical know-how on a Linux-based environment, students who have a will to learn can pick up things quickly.",
        "This course is not designed for those who have never set up a database, don't understand the concepts behind what a web server does or have never used the command line.",
        "This course is designed for you to come prepared with the basic knowledge of Linux, WordPress, MySQL, phpMyAdmin and how they are used."
      ]
    },
    {
      "title": "Build a new website in only 30 minutes",
      "url": "https://www.udemy.com/course/build-a-new-website-in-only-30-minutes/",
      "bio": "A step-by-step guide to building your own website fast - no tech skills required!",
      "objectives": [
        "Build a functional website using a no-code website builder in just 30 minutes",
        "Learn how to plan and structure a 5-page website effectively for your business or project",
        "Master basic website design principles without any technical experience",
        "Gain the confidence to manage and update your website independently",
        "Get tips and hints on leveraging AI to fast track your website build"
      ],
      "course_content": {
        "Introduction": [
          "How you can build a website in only 30 minutes"
        ],
        "Your 5 Page Website Plan": [
          "How to plan the first 5 pages of your website"
        ],
        "No Code, No Problem: Building Your Website the Easy Way": [
          "No code website builders and introduction to Websites for Good",
          "Build your homepage in seconds with the pre-boarding wizard"
        ],
        "How to build your web pages": [
          "The basics of building a web page",
          "Adding new content blocks your web page",
          "Adding a new web page to your website",
          "Ready to launch! Publishing your website",
          "OPTIONAL - Advanced features you may like to explore in the web builder"
        ],
        "EXTRA - Using AI to fast track your website build": [
          "Hints and Tips to use AI to speed up your website build"
        ],
        "EXTRA - Simple steps to improve the SEO of your website": [
          "The basics of Search Engine Optimisation and steps you can take to improve it",
          "Using AI to help you with Search Engine Optimisation"
        ]
      },
      "requirements": [
        "No programming or tech skills required. You will learn everything you need to know",
        "No software to download or instal. You will learn how to use no-code online website builder"
      ],
      "description": "Who Should Do This Course?\n\n\nGet ready to turn your ideas into a live website—quickly, easily, and confidently\n\n\nThis course is for absolute beginners who want to get their website up and running fast—without needing to learn complex tech skills. Whether you're a small business owner, entrepreneur, freelancer, or simply someone with a great idea but no technical background, this course is your shortcut to success.\n\n\nNo experience? No problem! This course is designed for people with no tech skills. If you’ve never built a website before, you’ll feel right at home.\nWant to save time? Stop waiting for web designers or developers. Learn how to create your own site fast.\nNeed an online presence? If you’re looking to showcase your work, sell products, or just have a professional online space, this course is perfect for you.\n\n\nCourse Overview\nThis practical, hands-on course is designed for individuals with no technical experience who want to build their own website quickly and easily. Students will learn how to plan and create a fully functional 5-page website using a simple, no-code website builder. The course combines the power of a structured 5-page website planner with the flexibility of a no-code website builder, enabling anyone to get their site up and running without needing coding skills. Whether you're starting a business, a personal blog, or a portfolio, this course will guide you step-by-step through the process of designing and publishing your site.\nYou’ll begin by using the 5-page website planner, a tool designed to help you organize your content, define your site's structure, and clarify your goals. With your plan in hand, you’ll then dive into using a no-code website builder, following easy instructions to bring your vision to life. By the end of the course, you’ll have a fully functioning website, confidence in managing it, and the knowledge to update and maintain it independently.\n\n\nLearning Objectives\n\n\nLearn how to plan and structure a 5-page website effectively for your business or project.\nBuild a functional website using a no-code website builder in just 30 minutes.\nMaster basic website design principles without any technical experience.\nGain the confidence to manage and update your website independently.",
      "target_audience": [
        "Entrepreneurs and small business owners looking to establish an online presence quickly",
        "Freelancers and side hustlers needing a low-cost, no-code solution for their services.",
        "Social entrepreneurs or community groups aiming to create a simple website for their cause",
        "Anyone new to website building wanting a guided, beginner-friendly approach."
      ]
    },
    {
      "title": "How to Build a Chat Server with Golang and Redis Pub/Sub",
      "url": "https://www.udemy.com/course/how-to-build-groups-chat-server-with-gogolang-mongo-redis/",
      "bio": "Go: the Great Stack for cretaing chat servers and APIs",
      "objectives": [
        "In the end of my course you will learn how to build a group chat server with websockets, API and Go.",
        "You used MongoDB as the data store and Redis for subxribe to all events",
        "Organize the application logic into multiple packages to easily maintain the application.",
        "Build web app for getting in real time publisher/subsriber chat messanger",
        "Receive a new knowledges in arhitecture of modern apps"
      ],
      "course_content": {},
      "requirements": [
        "You should have basic level of knowledge in chat-server architecture, mongoDB, redis and go language",
        "You should be able to know how to work with websockets",
        "You should be able to know base commands for golang programming language"
      ],
      "description": "Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.\nGo is an amazing choice for a language as it was developed by some of the same individuals who created the C programming language, Unix, and UTF-8 - some of the most influential contributions to computer science. Robert Griesemer, Rob Pike, and Ken Thompson created Go to be a modern language that easily uses multiple cores, easily implements concurrency, easily works in distributed environments, and easily allows the programmer to write programs - it has a very lean and user-friendly syntax.\nGo was created by luminaries in computer science at one of the best, if not the very best, software engineering firm to have ever existed - Google.\nThe credentials of Go are unsurpassed\nIn my opinion, Go is the best programming language that you can used for web development today. I began programming in 2005 with Borland Builder, I have worked with many languages, and Go is the best language which I have ever used. Go is also the top-paid programming language in America today.\nCome learn about the greatest programming language ever created. You will leave with resources and code samples to start making all of your software and apps really go.\nWhat knowledge & tools are required?\nYou should install go sdk, editor for coding application. This course starts at the level if you have already expirience in coding and open to get a new knowledegs",
      "target_audience": [
        "It can be helpful from high school level and people who wants to know more",
        "Anyone who wants to learn a code",
        "This is a developers who had expirience in different languages.",
        "This course is ideal for is want and chat messaging for your site.",
        "This course is perfect for experienced programmers wanting a thorough websockets and sent messages data in real time.",
        "This course is perfect for experienced programmers wanting to fill in gaps in their programming knowledge"
      ]
    },
    {
      "title": "JQuery UI - Interface Design In JQuery - UI Training",
      "url": "https://www.udemy.com/course/jquery-ui-interface-design-in-jquery-ui-training/",
      "bio": "Learn to use the JQuery UI tools to create effective and usable interfaces. A easy to follow practical course",
      "objectives": [
        "Learn to create effective UI designs with JQuery"
      ],
      "course_content": {},
      "requirements": [
        "Mac or PC"
      ],
      "description": "This jQuery UI training course from Infinite Skills will teach you how to navigate the jQuery user interface interactions, effects, widgets, and themes that are built on top of the jQuery JavaScript library. This course is designed for the intermediate user that already has a working knowledge of HTML, CSS and JavaScript to design websites.\n\nYou will start by learning about the jQuery UI core and utilities, such as the core methods and selectors and the position utility. You will then learn about the various widgets available in the UI, including the accordion, progressbar, tabs, button, slider, tooltip, spinner, dialog, autocomplete, and datepicker widget. Once you have mastered the widgets, this teaches you about the themable CSS framework in jQuery UI. This video tutorial will also teach you about the interactions in jQuery UI, including selectable, resizable, draggable, droppable, and sortable. Finally, you will learn about the UI effects, such as color animations, class transitions, and how to show and hide effects.\n\nBy the completion of this computer based training course, you will be fully capable of building complete interactive web applications using the jQuery UI toolset. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Web Designers, Developers"
      ]
    },
    {
      "title": "Customer Invoice Billing Application in PHP & MySQL",
      "url": "https://www.udemy.com/course/php-customer-invoice-billing-application/",
      "bio": "Developing Invoice Billing Application in PHP & MySQL",
      "objectives": [
        "You will be able to build web applications in PHP",
        "Learn PHP & MySQL with handson project",
        "You will be able to create Invoice Billing Application"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of HTML, CSS, PHP & MySQL"
      ],
      "description": "In this course you are going to build Invoice Billing Application in PHP & MySQL, and it is best suitable for developers who want to learn with hands-on project. This project covers from basic to advanced concepts on working PHP project.\n\n\nThis course (Invoice Billing Application in PHP & MySQL) is structured based on the topics. And it is easily understood by any one who has basic knowledge of PHP & MySQL.",
      "target_audience": [
        "Who want to learn PHP with handson project.",
        "Who want to develop a web applications in PHP",
        "Anyone Who wants to learn PHP & MySQL with Handson Project"
      ]
    },
    {
      "title": "Web Development MERN Stack + Redux Project, Ecommerce SaaS",
      "url": "https://www.udemy.com/course/web-development-zero-to-hero-complete-mern-stack-with-redux/",
      "bio": "Learn the MERN stack in-depth and complete, nothing is left out! Build a production ready Ecommerce SaaS Website!",
      "objectives": [
        "Create a backend that is connected to MongoDB Database and start a backend server",
        "Create user authentication with password hashing and a detailed user model with the ability to store cookies",
        "Upload images and video to the cloud and integrate them into our database for later access",
        "Be able to verify emails and send reset emails with hashed tokens just like the big real world websites",
        "Integrate Stripe payments, create checkout window hosted by stripe, manage user subscriptions and update user roles to the database",
        "Get the big picture overview on how a big website backend works and how its all connected",
        "Make requests to our database and update or delete user or product details in real time",
        "Know how to structure and code a solid fullstack website backend",
        "Master Redux toolkit and all of its functionality in a real world excample website",
        "Use your won API that you created and access it from the cloud after deployment"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - What you will Learn and Master",
          "Project Overview and Technologies",
          "Finished Website"
        ],
        "Development Enviroment Setup": [
          "Seting Up the web development enviroment"
        ],
        "Backend Development": [
          "Seting up the project dependencies",
          "What is a API?",
          "Connecting to MongoDB, our database",
          "Create user model and the first user, part 1",
          "Create user model and first user, part 2",
          "Finishing the user model",
          "Creating the products model",
          "Creating Stripe account, finishing up register logic",
          "Creating the login logic",
          "Auth Middleware and fetching user details",
          "Fetch all users logic",
          "Stripe - Get all subscriptions",
          "Update users password logic",
          "Reset users password logic part 1",
          "Reset users password logic part 2",
          "Verify users account part 1",
          "Verify users account part 2",
          "Update user details logic",
          "Save a product logic",
          "Unsave a product logic",
          "Create Stripe checkout window",
          "Stripe subscription update and user role update",
          "Stripe subscription update after cancel plan",
          "Stripe subscription update after renew",
          "How everything is connected",
          "Creating products controller and first product",
          "Configure multer and create cloudinary account",
          "Upload images to cloudinary",
          "Update, save and unsave products controllers",
          "Fetch free products controller",
          "Fetch paid products controller",
          "Fetch tiktok, facebook and google products",
          "Fetch single product controller",
          "Update a product controller",
          "Delete a product, Delete all and finishing up the backend"
        ],
        "Redux and Redux-Toolkit In-depth": [
          "What is Redux and Redux Toolkit",
          "Creating our Redux Toolkit project",
          "Creating redux store and counter slice",
          "CreateAsyncThunk and fetching data from API"
        ],
        "Frontend Web Development": [
          "Creating the react app",
          "Installing TailwindCSS and importing Google fonts",
          "Installing the dependencies",
          "Excplaining the dependencies wee installed",
          "Creating the Redux store",
          "Register user and Utilities folder",
          "Register Component part 1",
          "Register component part 2",
          "Login a user",
          "Login Component part 1",
          "Login component part 2",
          "Logout a user",
          "Fetch user Details",
          "Save a product / like",
          "Unsave a product / dislike",
          "Get subscription prices from stripe",
          "Send email Action and Controller",
          "Stripe checkout session/window creation",
          "Update stripe subscription after successfull payment",
          "Customer portal window access",
          "Fetch all users",
          "Update user password",
          "Send password reset url to email",
          "Reset password after clikcing Reset Link",
          "Send verification url link",
          "Verify account after clikcing verification link",
          "Update user field",
          "Subscription update after cancel",
          "Subscription update after renewal",
          "Create products slice and Create product action",
          "Fetch all products",
          "Fetch free and paid products",
          "Fetch tiktok, facebook and google ads products",
          "Fetch single product and free products",
          "Update product fields",
          "Delete single and all products",
          "Navbar part 1",
          "Navbar part 2",
          "Homepage component",
          "What wee offer component and navbar fix",
          "Stats component",
          "Pricing component part 1",
          "Pricing component part 2",
          "FAQ, Guarantee, Reviews components",
          "Footer component",
          "About page",
          "Pricing Page and Navbar fix",
          "Features page",
          "Contact page",
          "Free products page",
          "Free product details page",
          "Create product page",
          "Premium product page",
          "Premium product details page",
          "Profile page",
          "Save product page",
          "Change password",
          "Reset Password",
          "Verify account",
          "Legal Pages",
          "Stripe success and cancel pages"
        ],
        "Website Fixes": [
          "Cookie fix and auto logout"
        ],
        "Deployment": [
          "Deploy the backend on Vercel",
          "Deploy the frontend on Netlify"
        ]
      },
      "requirements": [
        "Simple knowledge of React and basics of javascript, can be a beginer also, no problem at all, every line of code is excplained"
      ],
      "description": "In this course you will not only learn but Master the MERN Stack and all the technologies that go along with it in a fun way that is focused on doing and learning, meaning you will code up with me a production-ready software as a service website and deploy it on the web in the end. This way you will learn how it is done from the beginning to the end not leaving anything out, and I will also explain every single line of code and not leave anything unexplained so that you can build anything you want after finishing this course! So this course is aimed at beginners and also for advanced developers because firstly everything is explained. A total beginner can jump right in and not feel overwhelmed and also an advanced developer can harden his skills with this course because it features a lot of advanced topics, technologies, and blocks of logic that you will not find anywhere else on Udemy or on any other course because this goes in-depth and not just surface level! So with that said I'm excited to see you inside and learn together while building an awesome Fullstasck Website that will impress any employer or developer alike.",
      "target_audience": [
        "Beginer Web Developers",
        "Intermediate Web Developers"
      ]
    },
    {
      "title": "Build Complete Authentication API with DRF | Postman | JWT",
      "url": "https://www.udemy.com/course/build-complete-authentication-api-with-django-rest-framework/",
      "bio": "Learn to Build JWT Authentication API with DRF and test your API with Postman!, custom json response, custom user model",
      "objectives": [
        "Learn about complete backend overview.",
        "What is API ?",
        "What is REST API ?",
        "Learn to build Custom User Model.",
        "Learn how to Customize Json Response.",
        "Learn how to Customize Custom User Admin panel.",
        "Learn how to build Complete Authentication API like Signup, Login, Logout, User profile, Change password, Reset password.",
        "Learn how to send Reset Email functionality.",
        "Learn how to Test your API with Postman."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Install Python and Code Editor"
        ],
        "Backend Overview": [
          "Backend Overview"
        ],
        "Create Project and Configure Setting": [
          "Create project and Configuration Setting"
        ],
        "Create Custom User Model": [
          "Create Custom Model 1",
          "Custom User Model 2"
        ],
        "Customize Admin Panel": [
          "Customize Admin Panel"
        ],
        "Create Signup API": [
          "User Registration",
          "User Registration 2"
        ],
        "Create Login API": [
          "User Login"
        ],
        "Create Custom Json Response": [
          "Custom Json Response 1",
          "Custom Json Response"
        ],
        "Implement Json Web Token": [
          "Implement JWT"
        ]
      },
      "requirements": [
        "Basic understanding of django and django rest framework. If you create any django project than it is more than sufficient."
      ],
      "description": "Building your own API with Django and Python can seem overwhelming at first, but it doesn't have to be! In this course I’ll walk you through it step by step and you’ll be building your first API in MINUTES. You’ll be amazed how quick and easy it is to create very professional API's using the Django Rest Framework, even if you have no programming or web design experience at all.\nWatch over my shoulder as I build a simple little API that lists some of my online courses step by step right in front of you. You’ll follow along and build your own copy. By the time we’re finished, you’ll have a solid understanding of the Django Rest Framework and how to use it to build awesome API's that will serve up any data you like.\nThe course contains 16 section videos – and is just over 3.2 hours long. Watch the videos at your own pace, and post questions along the way if you get stuck. You don’t need any special knowledge or software to take this course, though any experience with basic Django or Python is a plus. You don’t really need to know the Python programming language, but it certainly helps!. I’ll walk you through EVERYTHING.\nDjango is a great web development tool and learning it has never been this easy.\nWhat We'll Build...\nFirst, we are configure our setting of project to implement our API functionality and then we create our custom user model. customize our custom user model admin panel. how to build a customize Json response after that we work on building our API like signup , login, user profile, change password, reset password. After each API we test our API with Postman.\nWe are using Simple JWT plugin for Django Rest Framework to build our API.\nJoin me on this exciting journey to learn Complete Authentication API with Django Rest Framework.",
      "target_audience": [
        "Anyone wanting to learn to build web API's.",
        "Intermediate programmers who already have some understanding of Python and Django want to skill up.",
        "Developers proficient in other languages but looking to add Python to their toolkit.",
        "Python developers who want to master Django REST Framework.",
        "Programmers who wants to develop REST APIs using Python and Django REST Framework.",
        "Programmers who wants to develop REST APIs using Python and Django REST Framework.",
        "Django developers who want to build an API."
      ]
    },
    {
      "title": "React JS hands on - Enjoy learning in a new simple way",
      "url": "https://www.udemy.com/course/simply-learn-react-js/",
      "bio": "Enjoy learning and practicing React JS in a new way and improve your skills in the web development field.",
      "objectives": [
        "Learn the React JS framework in a new way, simple and easy.",
        "How to build a \"SPA\" Single-Page Application using React JS, HTML, bootstrap, and CSS.",
        "How to build the Website using React JS.",
        "Learn how the components are working in React JS.",
        "How to build and use the custom modules.",
        "How to use the control structures with React JS.",
        "How to use the \"Router\" to build the \"Links\" and the Site Menu.",
        "Learn, What the Hooks are, and how you can use them in React JS?",
        "How to use the CLS or the Command-Line software to install, and uninstall the software on the server.",
        "How to get a new VPS server, and deploy the application so anyone can get access to this application."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Basics": [
          "1.1 Start a New Project",
          "1.2 The Project Folders and Files",
          "1.3 The Default React JS App",
          "1.4 The Components",
          "1.5 Components in The Files",
          "1.6 React and CSS",
          "1.7 CSS in External Stylesheets",
          "1.8 Bootstrap with React JS",
          "Download the Chapter 1 Example",
          "Chapter 1 Quiz"
        ],
        "Building a Website with React JS (Project)": [
          "2.1 The Project Introduction",
          "2.2 Setup the Project",
          "2.3 The Imported Modules",
          "2.4 The Site's Parts – Item Component",
          "2.5 The Layout",
          "2.6 The Site's Content – Page Component"
        ],
        "The Interactivity": [
          "3.1 The Conditional",
          "3.2 The Lists",
          "3.3 Events",
          "3.4 The Router",
          "3.5 The Site Menu",
          "Chapter 3 Quiz"
        ],
        "The Hooks": [
          "4.0 Hooks Introduction",
          "4.1 useState Hook",
          "4.2 UseEffect Hook",
          "4.3 useContext Hook",
          "4.4 useRef Hook",
          "4.5 useReducer Hook",
          "4.6 useMemo Hook",
          "4.7 useCallback Hook",
          "4.8 Create Custom Hooks",
          "Chapter 4 Quiz"
        ],
        "Deploying the Application Online.": [
          "5.0 Introduction",
          "5.1 The 2 options to deploy your application.",
          "5.2 Buy VPS Server",
          "5.3 Overview of SSH and FTP",
          "5.4 Preparing the server",
          "Chapter 5 quiz - Part 1",
          "5.5 Install Node and NPM on the server",
          "5.6 Building and Upload the Production Edition of the Application",
          "5.7 Install \"PM2\" and Deploying the Application",
          "Chapter 5 Quiz - Part 2"
        ],
        "The Outro - The 3 Magical Letters!": [
          "The 3 Magical Letters!"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "Javascript"
      ],
      "description": "Enjoy learning, hands-on React JS in a new, easy, and unique way, and improve your skills in the web development field.\n\n\nWhy are you going to learn ReactJS?\nEasy, Flexible, and the most important thing is React has a huge job market, these jobs are high paying.\n\n\nWhat is special about this course?\nNothing!\nNoting I can say except 3 letters: O S T!\nO: Organized\nS: Simple\nT: To the point!\nalso, I can add DA. Different accent!\n\n\nO: Organized in a logical way to be appropriate for you as a beginner.\nAt the end of each lesson, you will find out that .. you got a new part of the puzzle, and the final image getting more clearly.\n\n\nS: Simple!\nSimplicity is the icon of this course to learning React\nSimple short lessons I have explained it using a new way that will make you focus and never get bored!\nSimple accent! I have used my simple accent in English to be appropriate for the wide, not just the native speakers.\nT: To the point.\nNo more zigzag, the straight is better.\nIt means, no more talk, you will learn in actions.\nExclusive project for this course, we going to build it together.\nAnd more.\nI'm gonna teach you how to get an affordable price VPS server, and how to publish online your React JS application.\n\n\nWhat do you need before starting this course?\n1- Basic experience in HTML, JavaScript, and CSS to build a simple web page.\n2 - Your laptop or tablet has any operating system such as Windows, MAC OS, or Linux, Ubuntu is recommended!\n3 - Cup of coffee or tea and water!\n\n\nSo let's enjoy starting to build our first ReactJS App.\n\n\nMore information:\nThis course was prepared and created by Ramy Ibrahim.\nQuizzes and video editing, visual effects, and production by: Ramy Ibrahim\nMusic by: Svfk",
      "target_audience": [
        "For web developers that looking for a faster and more secure way to build web applications.",
        "For the web developers that looking for a faster way to build the web applications."
      ]
    },
    {
      "title": "React and Firebase with Hooks For Absolute Beginners",
      "url": "https://www.udemy.com/course/react-and-firebase-with-hooks-for-absolute-beginners/",
      "bio": "In this course you will learn how to create a React application with React Hooks and will also learn about Firebase",
      "objectives": [
        "React Development with Hooks",
        "React Js Developement",
        "Beginner React Developement",
        "Firebase",
        "React with Firebase"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Node js and Npm"
        ],
        "React JS Introduction": [
          "Create a New React JS Project",
          "Cleaning up App.js",
          "Installing Extensions for VS Code",
          "How does a React project work?",
          "Functional Components vs Class Components",
          "Parent Components and Child Components",
          "Props in Child Component",
          "Props Destructuring",
          "Folder Structure"
        ],
        "Lets dive into React Hooks": [
          "Intro to useState",
          "Why we need to use useState",
          "Data Types which we will use in useState",
          "Object in useState",
          "Changing Value of useState with onClick Event",
          "Changing Value of useState with onChange Event"
        ],
        "Intermediate React JS Concepts": [
          "Conditional Operator - Part I",
          "Conditional Operator - Part II",
          "Intro to Higher Order Function - Map()",
          "Using Map Function to show data to the Frontend",
          "More into Map Function",
          "Filter Function"
        ],
        "Lets dive into React Hooks - useEffect": [
          "Introduction to useEffect",
          "First use case of useEffect - Empty Dependency Array",
          "Second use case of useEffect"
        ],
        "React Router": [
          "Installing React Router Dom",
          "Intro To React Router DOM",
          "Navigating from one webpage to another with Link",
          "React JS Concluded"
        ],
        "Lets hop on to Firebase": [
          "Firebase Introduction",
          "Firebase Dashboard",
          "Firebase Packages to install",
          "Configuring Firebase inside our React JS project"
        ],
        "Important Update to Firebase with React October 2021 Update! Must Watch!!!!!": [
          "Important update with Firebase with React in October 2021!"
        ],
        "Lets integrate Firebase Fires tore inside our React JS Project": [
          "What Firebase services we are going to look into?",
          "Creating a firestore Collection",
          "Fetching Firestore collection Data - Part I",
          "Fetching Firestore collection Data - Part II",
          "Rendering the Fire store data to the frontend in React JS",
          "Adding Data to the fire store Collection"
        ],
        "Firebase Authentication": [
          "Firebase Google Authentication Setup",
          "Adding user data to firestore",
          "Logging out the user with firebase authentication"
        ]
      },
      "requirements": [
        "Good Internet Connection"
      ],
      "description": "Course is updated with the latest version of Firebase with React as of October 26 2021. So this course will be the most updated React and Firebase Course in Udemy.\nIf you are a beginner and want to learn React JS from scratch and want to become a intermediate developer, this is the right course for you. In this course I will cover all the basic concepts of React and JavaScript from Scratch so you will get a better understanding of how the React and JavaScript world works. I will help you to understand how firebase works and how to integrate Firebase services like Fire store, Authentication and Storage with React JS and will provide step by step tutorial to use it in your application.\nIn this course I will cover,\nFundamentals of React and JavaScript\nES6 Functions like map and filter\nUse State Hook\nUse Effect Hook\nChild and Parent Components\nSending data as props\nDifferent types of data types with Use State\nReact Router\nFirebase Introduction\nFirebase Fire store\nFirebase Storage\nFirebase Authentication\nFirebase with React\nThe Best part of this course is I have all the code used in this course in GitHub profile so you can use it to practise.\nAfter finishing this course you will get to know all the basic concepts of React JS and Firebase and will be able to understand React JS and Firebase in an easier way.\nSo don't waste any time and enroll in this course to become a React JS and Firebase developer.",
      "target_audience": [
        "Beginner React Developers",
        "Beginner Firebase Developers",
        "Javascript Developers",
        "People who want to make websites with React JS"
      ]
    },
    {
      "title": "Jumpstart Your Software Development Career",
      "url": "https://www.udemy.com/course/jumpstart-your-software-development-career/",
      "bio": "Increase your confidence, gain a competitive edge, and increase your value to the organizations you work for",
      "objectives": [
        "Impress interviewers or your current employer with non-technical knowledge and skills that are typically only gained with years of experience",
        "Pursue your career with intention having the skills to help you choose the employment type, organization size/type, and technologies that you are best suited for",
        "Understand the SDLC and software development project roles and responsibilities",
        "Provide high-quality project and task estimates",
        "Write conceptual, high-level, and detailed functional software requirements in the most popular formats",
        "Participate on projects employing waterfall or agile methodologies with a solid understanding of your role as a professional software developer"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction & Learning Tips"
        ],
        "Build an Intentional Career": [
          "Chapter Introduction",
          "Characteristics of the Profession",
          "Learning Mindset, Learning Appetite, and Risk Tolerance",
          "Survey",
          "The Technology Adoption Curve",
          "How to Identify Where a Technology is on the Adoption Curve",
          "Choosing the Right Employer and Employment Type",
          "Specialization Overview",
          "Specialization Categories",
          "Platforms Suited for Specialization",
          "Developer Role Specialization",
          "Chapter Summary"
        ],
        "The SDLC, Roles & Responsibilities": [
          "Chapter Introduction",
          "The SDLC",
          "Review - The Iron Triangle and the SDLC",
          "The SDLC",
          "Project Roles and Responsibilities",
          "Review - Project Roles and Responsibilities",
          "Project Roles and Responsibilities",
          "Chapter Summary"
        ],
        "Estimating Software Projects": [
          "Chapter Introduction",
          "The Relationship Between Time, Complexity, Familiarity, and Effort",
          "Estimation Basics",
          "The Cone of Uncertainty",
          "Estimation Classifications",
          "Review - The Cone of Uncertainty",
          "Four Ways to Improve Your Estimation Skills and Chapter Summary",
          "Review - Improve the Quality of Your Estimates",
          "The Cone of Uncertainty, Estimate Classifications, and Improving Your Estimates"
        ],
        "Software Requirements Analysis, Functional, and Non-functional Requirements": [
          "Chapter Introduction",
          "Introduction to Functional Requirements",
          "Functional Requirements Overview",
          "Functional Requirements In Depth",
          "Functional Requirements Exercise",
          "Functional Requirements Exercise Results",
          "Non-functional Requirements",
          "Final Requirements",
          "Chapter Summary"
        ],
        "Software Development Methodologies": [
          "Chapter Introduction",
          "Waterfall Methodologies",
          "Review - Waterfall Methodologies",
          "Waterfall Methodologies",
          "Introduction to Agile Methodologies",
          "Agile In-depth Project Exercise",
          "Review - Agile Methodologies",
          "Agile Methodologies",
          "Chapter Summary"
        ],
        "Course Summary": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Have basic software coding skills. This course does not teach you how to write code."
      ],
      "description": "This course will provide software programmers that are new or early in their career with the knowledge that is not typically covered in programming training courses.\nAfter successfully completing this course learners should be more equipped to work as a professional on a software development team. Learners will be introduced to knowledge & practices that are typically learned through years of experience giving them confidence and increasing their value to the businesses who employ them. This course is more about the breadth of knowledge than the depth of knowledge and will serve as a solid foundation that developers can use to build from.\nThroughout the course, you will be introduced to topics including:\nWhat to expect as a Software Developer\nChoosing the right development position\nThe software development life cycle (SDLC)\nProject resources, roles, & responsibilities\nSoftware development methodologies\nSoftware requirements analysis\nFunctional and non-functional requirements\nEstimating development tasks",
      "target_audience": [
        "Developers just starting out in their career who wish to increase their confidence, gain a competitive edge over their peers, and increase their value to the organizations they work for."
      ]
    },
    {
      "title": "Build A TodoList with Actix-Web, Rust and Electron Vue",
      "url": "https://www.udemy.com/course/build-a-todolist-with-actix-web-rust-and-electron-vue/",
      "bio": "Learn to build a Full Stack Actix Web and Vue Electron Application in No Time",
      "objectives": [
        "Learn to Create a REST API with Actix Web",
        "Create a Vue Electron Todo List",
        "Learn ORMs with Rust",
        "Learn Vue Network calls"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create Actix Web Rust API": [
          "Install Actix Web",
          "Install SeaORM",
          "SeaORM Migrations",
          "Create Actix Directories",
          "Create Entities",
          "Create Repository",
          "Get Requests",
          "Post Requests",
          "Put Requests",
          "Todo Handlers",
          "Get Todo Handler",
          "Run Todo API",
          "Test API Requests"
        ],
        "Create Electron Vue TodoList": [
          "Install Electron Vue",
          "Add UI Library",
          "Add Create and Read Actions",
          "Add Update and Delete Actions",
          "Show TodoListComponent",
          "Create TodoList Table",
          "Security Policy",
          "Delete Todo Button",
          "Create TodoList Form",
          "Submit Todos"
        ]
      },
      "requirements": [
        "Know Rust"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use Actix-Web, Rust, and Vue Electron. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a Vue Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, Rust, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nVue Functional Components\nHTTP Requests with Fetch\nCRUD Methods\nRust\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with Vue Electron and Rust.",
      "target_audience": [
        "Intermediate Rust Developers",
        "Intermediate JavaScript Developers"
      ]
    },
    {
      "title": "Food Delivery APP - Full Stack Development For Beginners",
      "url": "https://www.udemy.com/course/food-delivery-app-full-stack-development-for-beginners/",
      "bio": "Building real time project using React Redux Reducer, Firebase",
      "objectives": [
        "How to create modern UI using React Js",
        "Learn how to use Framer Motion Animations in your websites",
        "Learn how build a modern UI and deploy it into firebase freely",
        "Learn how to build material UI using Tailwind CSS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Project Setup & Customization": [
          "Part 1 - Project Setup",
          "Part 2 - Project Setup"
        ],
        "Component Customization": [
          "Part 1 - Header Component",
          "Part 2 - Header Component | User Authentication",
          "Implementing React Redux Reducers - Context Providers",
          "Making our state persist on page refresh"
        ],
        "Home Component": [
          "Part 1 - Home Component",
          "Part 2 - Home Component",
          "Part 3 - Home Component"
        ],
        "Create Container": [
          "Part - 1 Create container",
          "Part 2 - Create container",
          "Part - 3 Create Container"
        ],
        "Other Components": [
          "Pulling Data from Firebase",
          "Part - 1 Fruit Section - Implementing Slider",
          "Part - 2 Fruit Section UI Design",
          "Part - 3 Fruit Section | Horizontal scrolling"
        ],
        "Menu Container & Filtering the data": [
          "Menu Container",
          "Filtering Menu Container"
        ],
        "Implementation of CART ITEM": [
          "Cart Item UI Design",
          "Toggle Cart Item UI",
          "Updating the Cart Item with live data",
          "Increase & Decrease the Quantity"
        ]
      },
      "requirements": [
        "Need some programming knowledge about core fundamentals"
      ],
      "description": "I will show you how simple it is to create a full stack food delivery app using Firebase, reactjs, tailwind css.\nTechnologies we are going to discuss are listed and explained bellow.\nWhat is Firebase ?\nFirebase is a platform developed by Google for creating mobile and web applications. It was originally an independent company founded in 2011. In 2014, Google acquired the platform and it is now their flagship offering for app development.\n\n\nWhat is React?\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.\n\n\nWhat is spline in design?\nSpline, a 3D design tool, was launched towards the end of 2020. As you probably know, it's not your typical 3D environment like Blender, 3D Max, or Cinema 4D. For instance, it doesn't allow you to edit meshes. You could say Spline is more like three. js editor, but unlike this tool, Spline is codeless.\n\n\nWhat is Framer Motion?\nFramer Motion is a new open source, production-ready motion library for React on the web.\n\n\nWhat is Framer used for?\nFramer is primarily a design and prototyping tool. It allows you to design interactive prototypes of websites and applications using production components and real data.",
      "target_audience": [
        "Students who are willing to start their carrier as Full Stack Web developer"
      ]
    },
    {
      "title": "WordPress Essential Training for Building Websites",
      "url": "https://www.udemy.com/course/wordpress-essential-training-for-building-websites/",
      "bio": "Learn essential of WordPress so you can build your own website, without any knowledge of coding or programming.",
      "objectives": [
        "How to start with WordPress to build a blog or website.",
        "How to Install WordPress on local computer as well as on shared hosting.",
        "Learn how to install WordPress on shared hosting with one click installation.",
        "Tips for how to select domain names and hosting account.",
        "Lean about creating database, ftp account and uploading WordPress on server.",
        "What is dashboard in WordPress and how to manage on dashboard.",
        "How to create post and pages in WordPress.",
        "How to manage media means pictures, videos and files in WordPress.",
        "How to create menus and categories.",
        "How to install themes and plugins in WordPress.",
        "How to manage users in WordPress.",
        "How to define roles to users in Wordpress.",
        "How to secure your WordPress site from common online attacks.",
        "Learn how to do SEO(Search Engine Optimization) for WordPress Site"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Computers",
        "An internet connection & computer",
        "No coding or design knowledge required"
      ],
      "description": "WordPress Essential Training is a course that is fit for all from beginners to intermediate-level learners. This course does not require any prior knowledge of any coding language, anyone who has a basic understanding of computers and has access to the internet can take this course. This four-hour course has everything which requires for a beginner.\nAfter Taking This Course\nYou will get enough information about how to select domain names for your business, as well as hosting accounts as per your requirements.\nYou can install your own WordPress site on your local computer.\nYou can install your own WordPress site on Live Server means on Shared Hosting.\nYou can easily create and manage posts and pages.\nYou will understand how to create menus and categories in WordPress.\nYou will understand how to add content like pictures, audio, videos, or files in WordPress.\nYou can manage media easily.\nYou will understand how to use keyboard shortcuts while using the editor.\nYou will understand the difference between a post and a page.\nYou will understand how to manage comments in Dashboard.\nYou can easily change your site's look and functionality by adding new themes and plugins.\nYou will understand how to manage users and how to define their roles in WordPress.\nHow to use tools and settings.\nYou will also be able to take some security precautions to avoid any attacks on your WordPress Site.",
      "target_audience": [
        "This course is designed for the absolute beginner",
        "This course is for those who wants to build a website.",
        "This course is for those who want to start their own blog or a website without any coding knowledge.",
        "This course for anyone who want's to explore more about WordPress."
      ]
    },
    {
      "title": "HTML & CSS From Zero to Pro: Build Your First Web Page Today",
      "url": "https://www.udemy.com/course/html-css-from-scratch-build-your-first-web-pages-today/",
      "bio": "Kickstart Your Web Developer Journey with Hands-On Projects and Real-World Skills",
      "objectives": [
        "Learn real-world HTML and CSS used by professional web developers",
        "Build a polished Reddit-style project for your portfolio",
        "After the course you will be ready to apply for junior developer jobs",
        "Get friendly support in the course Discord and Q&A",
        "Level up through 100+ hands‑on assignments and challenges — solutions included",
        "Track progress with 20+ focused quizzes designed to reinforce learning",
        "Learn industry best practices for clean, maintainable, production‑ready code",
        "After the course you will be fully prepared to dive into JavaScript and React"
      ],
      "course_content": {
        "Foundations of HTML — Elements, Attributes, and Structure": [
          "Lesson 1: Beginner Setup. Browser and Code Editor",
          "Lesson 2: Create Your First Web Page with HTML",
          "Lesson 3: HTML Elements and Syntax",
          "How to get help and support if you get stuck",
          "Lesson 4: Understanding HTML Paragraph Tags",
          "Your First Steps with HTML",
          "Lesson 5: Void and Non-Void HTML Elements",
          "Lesson 6: Element Order and Nesting in HTML",
          "Lesson 7: Parent and Child Elements in HTML",
          "Understanding HTML Element Behavior",
          "Practice Exercises",
          "Lesson 8: Creating Checkboxes with HTML Attributes",
          "Lesson 9: How to Use HTML Input Types",
          "Lesson 10: Adding Placeholder Text to Input Fields",
          "Configure with HTML Attributes",
          "Lesson 11: Why Your HTML Isn’t Showing in Browser",
          "Practice Exercises"
        ],
        "Mastering HTML Links and Navigation": [
          "Lesson 12: Creating Clickable Links with HTML",
          "Lesson 13: Creating Accurate HTML Links",
          "Lesson 14: The Anatomy of a URL",
          "Level Up with HTML Links",
          "Lesson 15: How to Open Links in New Browser Tabs",
          "Lesson 16: Keep Code Visible with Word Wrap",
          "Lesson 17: External and Internal Links in HTML",
          "Lesson 18: Understanding Absolute vs Relative URLs",
          "Connect Your Pages Like a Pro",
          "Practice Exercises"
        ],
        "Mastering HTML Images, Links, and Layout": [
          "Lesson 19: How to Add Images in HTML",
          "Lesson 20: Understanding the src Attribute",
          "Lesson 21: Putting Images on Separate Lines",
          "Your First Steps with HTML Images",
          "Lesson 22: How to Add Local Images to HTML",
          "Lesson 23: Mini Exercise",
          "Lesson 24: Using Relative Paths for Images",
          "Lesson 25: Make an Image a Clickable Link",
          "Linking and Organizing Images",
          "Practice Exercises",
          "Lesson 26: How to Manually Indent Code in VS Code",
          "Lesson 27: Breaking Lines with the <br> Element",
          "Lesson 28: Add Visual Breaks with <hr>",
          "New Lines and Visual Breaks",
          "Practice Exercises"
        ],
        "CSS Fundamentals — Selectors, Classes, and Styling": [
          "Lesson 29: How to Resize Images with CSS",
          "Lesson 30: What Is CSS and How It Works",
          "Lesson 31: Understanding the CSS Tag Selector",
          "Mastering Your First CSS Rules",
          "Lesson 32: Precision Styling with CSS Classes",
          "Lesson 33: Understanding the CSS Class Selector",
          "Lesson 34: Styling Multiple Elements with One Class",
          "Styling Smarter: Tag vs. Class Selectors",
          "Practice Exercises"
        ],
        "Styling Text with CSS — Size, Color, and Case": [
          "Lesson 35: Changing Text Size with CSS",
          "Lesson 36: Change Text Color with CSS",
          "Your First CSS Styling Milestone!",
          "Lesson 37: Transforming Text with CSS. Part 1",
          "Lesson 38: Transforming Text with CSS. Part 2",
          "Text Transform and Rule Conflicts",
          "Practice Exercises"
        ],
        "Bringing It All Together — Your First CSS Project": [
          "Lesson 39: Add and Style a Sidebar Poster Image",
          "Lesson 40: Sidebar Poster Text",
          "Lesson 41: Creating an Online Status Indicator",
          "Lesson 42: Make Text Thicker Using CSS",
          "Lesson 43: Styling Paragraphs with Width and Line Height",
          "Lesson 44: Final Sidebar Touches and Project Cleanup",
          "From Image to Indicator: Test Your Skills",
          "Practice Exercises"
        ],
        "Making Pages Interactive with CSS Pseudo-classes": [
          "Lesson 45: Your First CSS Pseudo-class in Action",
          "Lesson 46: CSS Hover Explained Simply",
          "Lesson 47: Changing Link Color When Clicked",
          "Level Up with Link Styling",
          "Lesson 48: Hover vs Active – Order Matters in CSS",
          "Lesson 49: Make Links Underlined on Hover Only",
          "Lesson 50: Challenge – Styling All Links Efficiently in CSS",
          "Hover, Click, Style!",
          "Lesson 51: Fun with CSS Hover Pseudo-classes",
          "Lesson 52: Use Pseudo-classes on Any HTML Element",
          "Lesson 53: Use Hover and Click Effects on Images",
          "Make Anything React — Pseudo-class Mastery",
          "Practice Exercises"
        ],
        "Styling Links with Backgrounds and Transitions": [
          "Lesson 54: Style Link Backgrounds in CSS",
          "Lesson 55: How to Use Hex Colors in CSS",
          "Lesson 56: How to Use RGB Colors in CSS",
          "Your First Styled Links: Time to Test Your Skills!",
          "Lesson 57: Style More Links with RGB and Hex Colors",
          "Lesson 58: Shrink Text and Background",
          "Lesson 59: Add Smooth Transitions with CSS",
          "Smooth Moves: Transitions, Sizing & Color Mastery",
          "Practice Exercises"
        ],
        "Mastering the Basics of Developer Tools": [
          "Lesson 60: Inspect and Edit HTML with DevTools",
          "Lesson 61: Edit CSS Live",
          "Lesson 62: Explore the Computed Tab",
          "Developer Tools Mastery Checkpoint",
          "Lesson 63: How to Inspect Any Website with DevTools",
          "Lesson 64: How to Emulate Hover and Click States",
          "Lesson 65: Developer Tools Changes Are Temporary",
          "Inspect Like a Pro",
          "Practice Exercises"
        ],
        "Learning the CSS Box Model": [
          "Lesson 66: Understanding the CSS Box Model — Content",
          "Lesson 67: Learn How Padding Works",
          "Lesson 68: Learn How Borders Work",
          "Box Model Basics: Shape Up Your Elements!",
          "Lesson 69: Learn How Margins Work",
          "Lesson 70: Enable AutoSave in VS Code",
          "Lesson 71: Why 40 + 30 ≠ 70 in CSS Margins",
          "Lesson 72: Block vs Inline Elements",
          "Lesson 73: Block vs Inline — How CSS Properties Behave",
          "Lesson 74: The Display Property",
          "Lesson 75: Combine Inline and Block with Inline-Block",
          "Lesson 76: Real-World Mini Project — PayPal Login Link. Part 1",
          "Lesson 77: Real-World Mini Project — PayPal Login Link. Part 2",
          "Lesson 78: Real-World Mini Project — PayPal Login Link. Part 3",
          "Practice Exercises"
        ]
      },
      "requirements": [
        "You don’t need any programming experience — I’ll teach you everything from the ground up",
        "You’ll need a computer with internet access (Windows, macOS, or Linux)",
        "You won’t need to buy any software — we’ll use free, beginner-friendly tools",
        "I’ll guide you step by step to install and set up everything you need"
      ],
      "description": "Go from zero to coding real web pages.\nLearn the skills, tools, and mindset of a modern web developer.\nThis is the beginner’s course for anyone who wants to learn HTML and CSS in a clear and practical way.\nWhether you're starting a career or launching a side project,\nthis course will take you from “I don’t get it” to “I built this!” — step by step, line by line.\n\n\nWhy this course is different\nYou’ll write your own code from day one.\nYou’ll build real web pages.\nYou'll start with small practice examples and finish with a complete project you’re proud of.\nYou'll create a polished replica of Reddit’s main page, built entirely by you, using HTML and CSS from the ground up.\nAlong the way, you’ll build real understanding, not just memorize steps.\nEvery lesson is designed to give you immediate wins, real-world practice, and the confidence to keep going.\nYou’ll learn not just what to type, but why it matters — and how real developers think.\n\n\nWhat You’ll Learn\nBuild complete, functional websites from a blank file\nWrite clean, modern HTML and CSS that works in any browser\nUse tags, attributes, classes, and selectors with confidence\nAdd structure with paragraphs, lists, links, images, forms, and more\nStyle your content using colors, fonts, spacing, borders, and layout\nUnderstand how the browser reads your code—and how to fix what’s broken\nUse real-world developer tools to inspect, debug, and improve your pages\nThink like a developer: analyze, structure, and solve layout problems\nBuild a portfolio-worthy project that proves your skills\n\n\nStart now. Build your first real web page today.\nYou don’t need to be “technical.”\nYou just need a computer, a browser, and the desire to learn.\nSo if you’re interested, let’s get started.",
      "target_audience": [
        "Absolute beginners who have never written a line of code before and want a clear, step-by-step start.",
        "Future freelancers, career changers, or students who want hands-on experience with real code and real projects.",
        "Aspiring web developers who feel overwhelmed by other tutorials and want a course that explains everything simply.",
        "Self-learners looking to build strong HTML and CSS foundations before moving on to JavaScript, React, or full-stack development.",
        "Anyone who enjoys learning by doing—quizzes, hands‑on challenges, and real‑world mini‑projects rather than dry theory"
      ]
    },
    {
      "title": "HTML5 Crash Course",
      "url": "https://www.udemy.com/course/html-crash-course-k/",
      "bio": "Introduction to the basics of learning HTML5. No programming experience required.",
      "objectives": [
        "Students will understand what is HTML.",
        "Students will learn about semantic elements that makes up a web document.",
        "Students will be able to build a simple static site out of the course.",
        "The course will be focused on understanding HTML tags and semantics in this course."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Learning Tips": [
          "Learning Tips",
          "Learning Mindset Part 2"
        ],
        "Understand what is HTML and tools we will need in this course.": [
          "Hello world - Your First Website",
          "HTML Syntax",
          "Visual Studio code"
        ],
        "HTML document structure - Intro to HTML Elements": [
          "Study habit tips",
          "HTML Document structure the Head and the Title elements"
        ],
        "Introduction to HTML Elements / Tags Part 2": [
          "Quiz 1: Understanding Elements",
          "Meta Style and comment Tags",
          "Link Tag and Google Fonts",
          "Body Element and Intro to Semantic Elements",
          "Div Element",
          "HTML Attributes",
          "Nav Lists",
          "Anchor Element",
          "Headings",
          "Main Element",
          "Header Element",
          "Section Element",
          "Inline and Block Level Elements",
          "Paragraph, EM, and Strong Elements",
          "Aside Element",
          "Article - Quotation Elements"
        ],
        "Where to Get Free Photos": [
          "Where to get free photos"
        ],
        "Introduction to CSS Part 1 - Building our Header Section": [
          "Introduction to CSS Part 1 - Header Section",
          "CSS Part 2 - Header Section"
        ],
        "Building our About Section": [
          "CSS Part 3 - Styling The About Section"
        ],
        "Building our Blog Post Section": [
          "CSS Part 4 - Styling the BlogPost Section"
        ],
        "Building the HTML table and form section": [
          "Introduction to Tables"
        ]
      },
      "requirements": [
        "No programming or web development experience."
      ],
      "description": "This crash course will be fit for total beginners in HTML5. We will be working on introducing the students to some of the elements that makes up a basic web document. The course hopes to guide students to learn how to build a very simple static site that they can add to their portfolio as a future web developer.\nNo prior programming experience is needed to take this course. I will guide you through the basics and demonstrate how you can start to create a basic static site with common features you would see from sites that aims to provide basic information. We will be working together in the development process step-by-step starting with the importance of creating your web document with semantic meaning in mind.\nThis course will cover the following:\n1. Understanding what semantic elements means.\n2. Build a very basic HTML static site with the following content:\n· Header section\n· About section\n· Blog section\n· Table section\n· Form section\n· Footer section\n3. Basic CSS (This course is not focus on learning Cascading Style Sheet, however, we will tackle basic CSS so that we can apply a bit of aesthetics in our final project.)\n4. You will also be able to practice skills in observation and debugging skills.",
      "target_audience": [
        "Total beginners in HTML"
      ]
    },
    {
      "title": "2D Animations with Javascript and the Anime.js Library",
      "url": "https://www.udemy.com/course/2d-animations-with-javascript-and-the-animejs-library/",
      "bio": "Create beautiful animations for your web-app or site.",
      "objectives": [
        "How to create beautiful animations.",
        "How to move, rotate, scale html elements.",
        "How to create scripts of animations."
      ],
      "course_content": {},
      "requirements": [
        "Javascript",
        "HTML",
        "CSS"
      ],
      "description": "Animations are welcome guests in our applications. They are fun, entertain and visually aesthetic to look at. They make applications more accessible and eye catching.\nThe traditional method of creating animation is using timers, clocks and frames, and projecting images in constant time intervals. However, if all you want to do is add some movement to your site, this method may be overkill.\nThis is where Anime.js steps in. Anime.js is a light-weight Javascript library that aims to do just that - to create beautiful animations with ease and minimum code.\nWith Anime.js you can animate anything on the screen - html elements, dom attributes, svg graphics, just about anything.\nIn this course you will learn about Anime.js library. I'll show you this library's essentials and a lot of code examples. There are six projects in this course, that will keep you busy and help you practice this library.\nIf you want to add animations to your site and didn't know how to do it - welcome, this course is perfect for you!",
      "target_audience": [
        "Web applications and sites developers who want to add custom touch to their app.",
        "Javascript enthusiastic who want to widen their knowledge in useful libraries.",
        "Web designers who want to add animations to their sites."
      ]
    },
    {
      "title": "Mastering ChatGPT and OpenAI APIs with C#",
      "url": "https://www.udemy.com/course/how-to-connect-to-chatgpt-using-csharp/",
      "bio": "Build Generative AI-powered Blazor Web Apps—using both HttpClient and OpenAI's official .NET Library",
      "objectives": [
        "Understand the concept of GPT and ChatGPT",
        "Learn the structure and meaning of parameters of OpenAI API",
        "Learn how to access OpenAI API via HTTPClient approach",
        "Learn how to use OpenAI's official .NET library",
        "Create your own C# library to access OpenAI API",
        "Learn how to send prompt and receive responses via non-streaming mode",
        "Learn how to send prompt and receive responses via streaming mode",
        "Know the difference between synchronous and asynchronous mode",
        "Learn how to call external functions in chat completion calls",
        "Learn how to debug API connection issues",
        "Develop two working GPT-enabled Blazor Server Apps",
        "Learn the differences between .NET 7 and .NET 8 of Blazor technologies"
      ],
      "course_content": {},
      "requirements": [
        "The enthusiasm for learning GenAI using C# (MUST)",
        "Basic knowledge of C# programming (MUST)",
        "Basic knowledge of ASP .Net Core web development (nice to have)"
      ],
      "description": "Learn how to connect your C# applications to OpenAI's ChatGPT—build real-world Blazor Web Apps using raw HTTP and the official .NET SDK. No Python needed.\nAre you a C# developer eager to explore the exciting world of Generative AI but feel left behind in the Python-centric ecosystem?\nThis course is made just for you.\nIn this hands-on course, you'll learn how to connect your C# applications to OpenAI's ChatGPT API and build fully functional Blazor Web Apps powered by Generative AI. Whether you prefer using HttpClient to make raw RESTful API calls or want to leverage the official OpenAI .NET Library, this course covers both approaches in detail.\nWhat makes this course special:\nNo need to switch to Python—learn how to build GenAI apps entirely with C#\nStep-by-step guidance on setting up your OpenAI account, API key, and environment\nBuild interactive web applications using .NET 8 and Blazor\nDeep dive into the Chat Completion API, including parameter configuration and streaming mode\nReal project walkthroughs with clear, beginner-friendly explanations\nLearn how to enrich GPT's capabilities by enabling it to trigger your own custom C# functions using the Tool Call mechanism.\nWhat will you learn?\nThe following lists the main topics of this course:\nA GPT course for C# developers – A brief introduction to the course and your instructor.\nIntro to GPT, ChatGPT, and OpenAI API – Understand the evolution of ChatGPT and the different types of APIs available.\nPreparing the prerequisites – Learn how to set up an OpenAI account, create a payment method, and generate an API key.\nQuick Start – Use ChatGPT with C# to build your first Blazor Server App that accesses the OpenAI API.\nChat Completion API – Understand required parameters and improve the UI/UX of the Blazor app created earlier.\nStreaming Mode – Learn how to receive chat completion chunks by enabling streaming in the API.\nOpenAI Official .NET Library - Chat – Install and use the official SDK to build a .NET 8 Blazor Web App.\nOpenAI Official .NET Library – Tools – Learn to use ToolCalls to execute external functions in all chat modes with .NET.\nWhat's next? – A brief look at further learning directions after finishing the course.\nWho is this course for?\nC# developers ready to leap into Generative AI\nEngineers looking to integrate ChatGPT into their C# applications or tools\nDevelopers interested in mastering Blazor Web App development alongside AI\nPrerequisites:\nThis course is marked as \"all levels\"—from the perspective of learning GenAI development with C#. However, the following background is recommended:\nThe enthusiasm for learning GenAI using C# (MUST)\nBasic knowledge of C# programming (MUST)\nBasic knowledge of ASP.NET Core web development (Nice to have)",
      "target_audience": [
        "Anyone who wants to bring ChatGPT capability to C# applications.",
        "All C#ers (CSharpers) or C#ers wanna be!"
      ]
    },
    {
      "title": "Generative Ai Mastery",
      "url": "https://www.udemy.com/course/generative-ai-mastry-for-leader/",
      "bio": "Welcome to our course on Generative AI for Leaders.",
      "objectives": [
        "1- Harness the Power of Generative AI for Leadership: Understand the core principles and transformative potential of Generative AI. Learn how to integrate AI.",
        "2- Practical Application of Generative AI in Leadership Tasks Master tools to craft impeccable agendas, proposals, and communication materials with AI.",
        "3- Enhance Leadership Productivity and Efficiency Discover how Generative AI can boost productivity by tasks, creating materials and automating work.",
        "4- Navigate Organizational AI Integration and Explore the Future of Leadership with Augmented Intelligence."
      ],
      "course_content": {
        "Generative AI for Leaders": [
          "Generative AI: a Private Thought Partner",
          "Leadership Transition Planning with Generative AI",
          "Building Agendas & Planning with Generative AI",
          "Writing SEO-optimized Job Descriptions with Generative AI",
          "Using Generative AI to Explore a Difficult HR Conversation",
          "Augmented Proposal Analysis with Generative AI"
        ],
        "Applying Generative AI": [
          "ACHIEVE",
          "Conclusion"
        ]
      },
      "requirements": [
        "No requirements because This course will empower you with the knowledge, tools, and confidence to lead in a world reshaped by Generative AI."
      ],
      "description": "In this program, we will explain the fundamentals of Generative AI and, more importantly, explore how you as a leader can harness its potential to drive innovation, streamline decision-making, and create value within your organization. Together, we will uncover practical strategies and insights to empower you to lead in an AI-driven world.\nWhat Will Students Learn in This Course?\nHarness the Power of Generative AI for Leadership\nUnderstand the core principles and transformative potential of Generative AI.\nLearn how to integrate AI into leadership strategies to drive innovation and decision-making.\nPractical Application of Generative AI in Leadership Tasks\nMaster tools to craft impeccable agendas, proposals, and communication materials with AI assistance.\nUtilize AI as a confidential thought partner for brainstorming, strategizing, and refining ideas.\nEnhance Leadership Productivity and Efficiency\nDiscover how Generative AI can boost productivity by pre-drafting tasks, creating materials, and automating workflows.\nLearn to use AI for seamless transitions, HR dynamics, and managing team integrations effectively.\nNavigate Organizational AI Integration\nAddress staff concerns and misconceptions about AI adoption.\nCommunicate the capabilities, limitations, and benefits of Generative AI to foster a culture of acceptance and innovation.\nExplore the Future of Leadership with Augmented Intelligence\nGain insights into how Generative AI enhances cognitive abilities, acting as an \"Exoskeleton for the Mind.\"\nPrepare for the AI-augmented leadership landscape, staying ahead of technological advancements.\nThis course will empower you with the knowledge, tools, and confidence to lead in a world reshaped by Generative AI.",
      "target_audience": [
        "This course offers a comprehensive journey into understanding, applying, and mastering Generative AI as a robust tool to amplify leadership capabilities."
      ]
    },
    {
      "title": "Build 2+ MERN Stack Apps: Hands-On Project Based Course",
      "url": "https://www.udemy.com/course/learn-building-mern-stack-apps/",
      "bio": "Full Stack Apps with React, Node, Express,MongoDB,Stripe Integration, Postman API Testing, CRUD database calls, JWT Auth",
      "objectives": [
        "Get practical, hands-on experience by building a fully functional e-commerce website using the MERN stack (MongoDB, Express.js, React, and Node.js).",
        "Learn essential CRUD (Create, Read, Update, Delete) operations in MongoDB, secure your APIs with JWT, and manage server-side functionality through Node.js and E",
        "Build dynamic, responsive interfaces with React, focusing on efficient state management and smooth communication between front end and back end.",
        "Deploy your e-commerce site while integrating Stripe, Cloudinary, MongoDB"
      ],
      "course_content": {
        "Introduction": [
          "Intro & Info"
        ],
        "Digital Ecommerce Platform": [
          "Resources Description",
          "Setup",
          "MongoDB Setting DNS",
          "MongoDB",
          "Product Model",
          "Postman & Product Routes",
          "Frontend Setup",
          "Protected Routes",
          "Admin Dashboard",
          "Delete & Edit Product",
          "Spinner",
          "Cloudinary",
          "Cloudinary API Key Setup Clarification",
          "Cloudinary uploadFile Logs",
          "Create Product",
          "Home",
          "Product Card",
          "Navbar & Theme Toggle",
          "Cart",
          "Stripe",
          "Cart Checkout",
          "Cancel & Success Page",
          "Shop",
          "Footer & Subscription",
          "Stats",
          "JWT (Json Web Tokens)",
          "Login & Register",
          "Admin Navbar",
          "JWT Auth for Requests",
          "UI Fixes",
          "Deployment to Vercel"
        ],
        "Full Stack Restaurant with Delivery Website": [
          "Intro",
          "Resources Description",
          "Backend Start",
          "MongoDB Settings DNS",
          "MongoDB Setup",
          "Food Model & Routes",
          "User Model & Routes",
          "JSON Web Tokens (JWT)",
          "Frontend Start",
          "Protected Routes",
          "Admin",
          "Delete Food",
          "Edit Food",
          "Spinner",
          "Create Food",
          "Cloudinary",
          "Cloudinary API Key Setup Clarification",
          "Cloudinary uploadFile Logs",
          "Register & Login Functionality",
          "Finalizing Create Food & Cloudinary",
          "Admin Navbar",
          "Navbar",
          "Home",
          "Food Card Component",
          "Cart Context",
          "Cart Icon",
          "Footer",
          "Contact",
          "Cart",
          "Stripe Setup",
          "Cancel Page",
          "Order Model & Route",
          "Webhook Handler & Stripe Routes",
          "Success Page",
          "Dashboard",
          "JWT Auth Finish",
          "Fixes & Testing"
        ],
        "How To Use GitHub In Simplest Way": [
          "GitHub Desktop App Intro and Basics",
          "How To Clone a Repository",
          "Initializing a Repository",
          "How to Manage New Changes in Your Project Files (Source Control)"
        ]
      },
      "requirements": [
        "HTML & CSS Basics",
        "IDE Basics (e.g.,VSCode)"
      ],
      "description": "Are you ready to take your first steps in building full-stack applications, styling with TailwindCSS, storing data in a database through an admin dashboard, creating checkout sessions for users buying products, testing APIs to ensure data is being sent properly, developing more backend to understand how the application works, and having fun while building?\nIn this course, we will build two applications using the MERN stack—MongoDB, Express.js, React, and Node.js—with clear explanations and practical examples. I will walk you through the basics of each technology through a project where you’ll build an online store with user login, payments, and secure data handling.\n\n\nAnd why this course exists?\nI found that some of my fellow developer friends were struggling with the backend—trying to figure out how to store data, fetch items from the database and display them on the page, store images for products, and connect the dots between the backend and frontend. And wow, saying that testing an API isn't fun at all? Stop.\nI thought to myself that I wanted to explain the basics, the process, with the main goal of making website development fun for them—so they could feel excited about building new APIs, learning new things along the way, discovering new technologies, understanding how database connections work, how Stripe integrates with payments, and much more.\nThat’s what I wanted to share with you, the step-by-step process that you can enjoy. How to learn, develop, and test full-stack applications built with the MERN stack.\n\n\nThis course includes two learning approaches:\n- Project 1, with detailed explanations and examples, where I guide you step by step, breaking down each function as we build.\n- Project 2, where I code along with you, still explaining the process step by step, but giving you more time to practice and sharpen your skills.\n\n\nKey features we will cover:\nPerform CRUD (Create, Read, Update, Delete) operations directly in your app\nAdd secure authentication with JSON Web Tokens (JWT)\nIntegrate payments (e.g., Stripe) for real transactions\nUpload and store images using Cloudinary’s powerful API\nDeploy your finished project to the web for easy access\n\n\nSee you in the lessons!",
      "target_audience": [
        "Beginner Web Developers curious about Full Stack Applications with MERN Stack"
      ]
    },
    {
      "title": "API Gateway Fundamentals: A Beginner's Guide to API Manageme",
      "url": "https://www.udemy.com/course/api-gateway-fundamentals-a-beginners-guide-to-api-manageme/",
      "bio": "Learn the Basics of API Gateways, Routing, Security, and Best Practices for API Management",
      "objectives": [
        "Understand the role of API Gateways in modern integration solutions.",
        "Evaluate and recommend API Gateway solutions based on business needs.",
        "Develop, deploy, and maintain integration services using API Gateways.",
        "Gain practical experience with API Gateway tools and real-world challenges."
      ],
      "course_content": {
        "Introduction to API Gateway": [
          "Introduction",
          "What is an API Gateway ?",
          "API Gateway Architecture",
          "Intro to API Gateway",
          "Important Key Feature of API Gateways",
          "Introduction to API Gateway and Its Architecture"
        ],
        "Core Concepts of API Gateways": [
          "Routing",
          "Load Balancing",
          "API Aggregation",
          "Rate Limiting",
          "Summary",
          "Core Concepts Review"
        ],
        "Security and Authentication": [
          "Authentication",
          "Authorization",
          "Threat Protection",
          "Summary: Authentication, Authorization, and Threat Protection",
          "Concepts Review"
        ],
        "Advanced API Gateway Features": [
          "API Versioning",
          "Caching",
          "Review : API Versioning and Caching",
          "Performance Optimization",
          "Logging and Monitoring",
          "Review : Performance Optimization, Logging and Monitoring",
          "Summary"
        ],
        "Summary": [
          "Designing Scalable and Resilient APIs",
          "Future of API Gateways"
        ]
      },
      "requirements": [
        "Familiarity with programming languages like JavaScript, Python, or Java.",
        "Basic concepts of networking (DNS, HTTP, HTTPS, etc.)."
      ],
      "description": "This course is perfect for beginners who want to dive into the world of API Gateways and understand their critical role in modern software architectures. As APIs continue to power applications and services, mastering how to manage, secure, and scale them is essential for any developer or IT professional.\nIn this course, you’ll explore core concepts that will help you get comfortable with API Gateways, their functionalities, and how they interact with backend services. You'll learn how API Gateways streamline tasks like routing, load balancing, security, and traffic management while ensuring performance, scalability, and reliability.\nWhat You’ll Learn:\nWhat is an API Gateway? Gain a clear understanding of its purpose in handling communication between clients and services in microservices architecture.\nRouting & Load Balancing: Understand how API Gateways direct requests efficiently and distribute traffic across multiple servers.\nAPI Security: Discover methods for authenticating and authorizing users and services with OAuth 2.0, JWT, and API keys to ensure secure access.\nRate Limiting & Throttling: Learn to implement techniques that control the rate of requests to your API, preventing overloads and ensuring fair usage.\nBest Practices: Learn design strategies for building APIs that are scalable, secure, and easy to maintain.\nMonitoring & Logging: Understand how to track API performance, log activity, and troubleshoot common issues for smooth operation.\nThis course will also touch on how to integrate API Gateways into your CI/CD pipelines, automate deployments, and ensure your APIs are always up-to-date and working efficiently. Whether you're building a small application or managing large-scale enterprise services, this course will provide you with the knowledge and tools you need.\nBy the end of this course, you’ll be equipped to confidently design, deploy, and manage APIs with an API Gateway, applying industry-standard techniques to secure, scale, and optimize your APIs.\nStart your journey to mastering API management and building high-performing, secure, and scalable APIs today!",
      "target_audience": [
        "Software Developers looking to enhance their skills in API design and integration.",
        "Backend Developers working on microservices or cloud-native applications.",
        "Cloud Engineers managing API Gateway services on platforms like AWS, Azure, or GCP.",
        "Integration Architects designing scalable integration solutions.",
        "IT Consultants recommending API management tools for businesses.",
        "Beginners in API Management who want to build foundational knowledge of API gateways.",
        "Enterprises aiming to modernize their integration strategies with API gateways."
      ]
    },
    {
      "title": "Beginning Object-Oriented Programming with JavaScript",
      "url": "https://www.udemy.com/course/beginning-object-oriented-programming-with-javascript/",
      "bio": "Build up your JavaScript skills and embrace object-oriented development for the modern web",
      "objectives": [
        "Learn about object-oriented programming using some of the latest updates to the JavaScript language",
        "Understand key principles such as object inheritance and the correct usage of JavaScript mixins",
        "Master dynamic typing and polymorphism with examples that reflect key implementation challenges",
        "Explore data binding and write asynchronous code using callbacks and events",
        "Complete a variety of hands-on activities to prepare you for work on your own development projects"
      ],
      "course_content": {
        "Diving into Objects and OOP Principles": [
          "Course Overview",
          "Lesson Overview",
          "Creating and Managing Object Literals",
          "Properties",
          "Methods",
          "Defining Object Constructors",
          "Using Object Prototypes",
          "Using Classes",
          "Beginning with Object-Oriented JavaScript",
          "Checking Abstraction and Modeling Support",
          "Association",
          "Aggregation",
          "Composition",
          "Analyzing OOP Principle Support in JavaScript",
          "Polymorphism",
          "JavaScript OOP versus Classical OOP",
          "Summary",
          "Test your knowledge"
        ],
        "Working with Encapsulation and Information Hiding": [
          "Lesson Overview",
          "Encapsulation and Information Hiding",
          "Privacy Levels",
          "Using the Meta-Closure Approach",
          "Managing Isolated Private Members",
          "A Definitive Solution with WeakMap",
          "Using Property Descriptors Part-1",
          "Using Property Descriptors Part-2",
          "Implementing Information Hiding in ES6 Classes",
          "Lesson Summary",
          "Test your knowledge"
        ],
        "Inheriting and Creating Mixins": [
          "Lesson Overview",
          "Implementing Inheritance",
          "Objects and Prototypes",
          "Prototype Chaining",
          "Inheritance and Constructors",
          "Using Class Inheritance",
          "Overriding Methods",
          "Overriding Properties",
          "Protected Members",
          "Implementing Multiple Inheritance",
          "Creating and Using Mixins",
          "Lesson Summary",
          "Test your knowledge"
        ],
        "Defining Contracts with Duck Typing": [
          "Lesson Overview",
          "Managing Dynamic Typing",
          "Dynamic Data Types",
          "Beyond the Instance Type",
          "Contracts and Interfaces",
          "Implementing Duck Typing",
          "Defining a Private Function",
          "A General Solution",
          "Emulating Interfaces with Duck Typing",
          "Demonstrating the Equivalent Version without ECMAScript 2015 Syntax",
          "Multiple Interface Implementation",
          "Comparing Duck Typing and Polymorphism",
          "Lesson Summary",
          "Test your knowledge"
        ],
        "Advanced Object Creation": [
          "Lesson Overview",
          "Creating Objects",
          "Creating a Singleton",
          "Mysterious Behavior of Constructors",
          "Singletons",
          "Implementing an Object Factory",
          "The Abstract Factory",
          "The Builder Pattern",
          "Lesson Summary",
          "Test your knowledge"
        ],
        "Working with Data": [
          "Lesson Overview",
          "Managing User Interfaces",
          "Implementing Presentation Patterns",
          "The Model-View-Controller Pattern",
          "The Model-View-Presenter Pattern",
          "The Model-View-ViewModel Pattern",
          "Data Binding",
          "Implementing Data Binding",
          "Monitoring Changes",
          "Hacking Properties",
          "Setting up a Data Binding Relationship",
          "Applying the Publish/Subscribe Pattern",
          "Lesson Summary",
          "Test your knowledge"
        ],
        "Asynchronous Programming and Promises": [
          "Lesson Overview",
          "Event Loop and Asynchronous Code",
          "Events, Ajax, and Other Asynchronous Stuff",
          "Writing Asynchronous Code",
          "Issues of Asynchronous Code",
          "Promises",
          "Lesson Summary",
          "Test your knowledge"
        ],
        "Organizing Code": [
          "Lesson Overview",
          "Taking Control of the Global Scope",
          "Creating Namespaces",
          "Organizing Code with the Module Pattern",
          "Augmentation",
          "Composing Modules",
          "Loading the Module",
          "Module Loader Issues",
          "Asynchronous Module Definition",
          "Using the ECMAScript 2015 Modules",
          "Lesson Summary",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Should have basic knowledge of JavaScript."
      ],
      "description": "Before diving into the intricacies of front-end frameworks, serverless architectures, or back-end development, it's important to understand the fundamental concepts of the modern JavaScript language. We'll show you everything you need to know to get up and running with proven object-oriented patterns so that you can confidently tackle your own real-world development projects. With coverage of everything from new syntax to working with classes, complex inheritance, dynamic typing, and data binding, this course is the complete primer for those looking to work with modern, production-ready JavaScript.\nAbout the Author\nAndrea Chiarelli has over 20 years experience as a software engineer and technical writer. In his professional career, he has used various technologies for the projects he has been involved in: from C# to JavaScript, from Angular to React, from ASP .NET to PhoneGap/Cordova. He has contributed to many online and offline magazines and has been the author of a few books published by Wrox Press and Packt. Currently, he is a senior software engineer at the Italian office of Apparound, Inc. and a regular contributor to HTML .it, an Italian online magazine focused on web technologies.\nTamas Piros is a full stack web developer turned technical trainer who has a decade of experience working with prestigious organisation throughout the world including Credit Suisse, Verizon, BBC and Accenture to mention a few. Throughout his professional career, he has delivered presentations and workshops all over the world to a mix of technical and non-technical audiences. He has recently launched a blog dedicated to developers wishing to read articles around the latest and greatest technology. He also owns a training business in London, UK called Full Stack Training Ltd. He is active on Twitter as well.",
      "target_audience": [
        "If you are a programmer who is new to JavaScript, then this is the course for you. You'll find plenty of structured exercises and guided activities inside that are designed to build upon your existing skills in a balanced and pragmatic manner."
      ]
    },
    {
      "title": "Building JavaScript Cryptocurrencies and Smart Contracts",
      "url": "https://www.udemy.com/course/building-javascript-cryptocurrencies-and-smart-contracts/",
      "bio": "Cryptocurrencies and Smart Contracts",
      "objectives": [
        "Use Angular to code a JavaScript cryptocurrency with smart contracts and its underlying blockchain!",
        "Understand and use cryptocurrency technology in real world applications",
        "Work with blockchain concepts in real code",
        "Develop Smart Contract capabilities in a cryptocurrency implementation",
        "Understand the most important aspects of viable blockchain design",
        "Discover how cryptocurrencies utilize blockchain",
        "Learn the Proof of Work protocol for securing the blockchain",
        "Implement security protocols in an Angular blockchain project",
        "Create block validation logic in JavaScript and Angular",
        "Discover the leading cryptocurrency design concepts used in today's most popular cryptocurrency networks ... and much, much more!"
      ],
      "course_content": {},
      "requirements": [
        "Before taking this course, a student should ideally (but not absolutely) have some experience in:",
        "Creating applications with Javascript and Angular",
        "Some exposure to cryptocurrencies, either via the markets or from a technical standpoint",
        "JavaScript development of complete web app solutions with a major JS development platform (Angular)",
        "CRYPTO/SMART CONTRACT/BLOCKCHAIN EXPERIENCE IS NOT REQUIRED!!!"
      ],
      "description": "Any IT professional or hobbyist anticipating a solid understanding of how cryptocurrency and smart contract technology works and desires an understanding of crypto's use cases and potential (including  blockchains and distributed applications) needs to go through this course to leverage cryptocurrency and smart contracts in new or existing development projects.  Anyone desiring to learn how cryptocurrency solutions are designed, configured, and developed needs the knowledge and practice presented in this course.  This not only includes web, mobile, and service application developers, but also architects, UI designers, testers, and administrators. This course provides a solid understanding of how crypto and blockchain technology works and a solid foundation for platform evaluation and learning lower level details.\nBefore taking this course, a student should ideally (but not absolutely) have some experience in:\nCreating applications with Javascript and Angular\nSome exposure to cryptocurrencies, either via the markets or from a technical standpoint\nJavaScript development of complete web app solutions with a major JS development platform (Angular)\nCrypto, smart contract, and blockchain experience is not required.\nThis course was built for forward-looking developers who create solutions for mobile, web, and beyond.  This course is designed for those developers who want to begin working with cryptocurrency, smart contract, and blockchain technology and need a good springboard to start their descent into this deep and detailed set of technologies, theories, and implementations.  This course focuses on the outstanding components of cryptocurrency technology and weaves them together to create a solid understanding of the crypto stack component's interactions and dependencies.   Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how blockchain products are designed and used to create the next level of distributed ledger tech.",
      "target_audience": [
        "This course was built for forward-looking developers who create solutions for mobile, web, and beyond. This course is designed for those developers who want to begin working with cryptocurrency, smart contract, and blockchain technology and need a good springboard to start their descent into this deep and detailed set of technologies, theories, and implementations. This course focuses on the outstanding components of cryptocurrency technology and weaves them together to create a solid understanding of the crypto stack component's interactions and dependencies. Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how blockchain products are designed and used to create the next level of distributed ledger tech.",
        "This course IS NOT intended for non-technical students. The content presented is in the context of technical review."
      ]
    },
    {
      "title": "JAVA: Struts| Spring| Hibernate| JSP| EJB| JSF| JWS| MAVEN",
      "url": "https://www.udemy.com/course/java-struts-spring-hibernate-jsp-ejb-jsf-jws-maven/",
      "bio": "Java Frameworks with Struts, Spring, Hibernate, JSP, EJB, JSF, JWS, MAVEN, ANT, Intellij Idea, XML, SOAP, RESTful",
      "objectives": [
        "Understanding the Java Struts Framework: Students will gain a foundational understanding of the Struts 2 framework, including its architecture, core concepts",
        "Setting Up Development Environments: Learn how to set up development environments using Netbeans and Eclipse for Java Struts and Spring frameworks.",
        "Building and Managing Web Applications: Acquire skills to build and manage web applications using Java Struts, including creating actions, interceptors.",
        "Core Concepts of Java Spring Framework: Master the core concepts of the Spring framework, such as Inversion of Control (IoC), dependency injection, and Spring",
        "Spring Bean Management: Understand the lifecycle of Spring beans, different scopes, and the use of annotations for configuration.",
        "Developing an Online Shopping Application: Gain hands-on experience in developing an online shopping application using the Spring framework.",
        "Database Integration: Learn to integrate databases with Spring, manage database connectivity, and perform CRUD operations.",
        "Java Build Tools: Learn to use Java build tools such as MAVEN and ANT, understand their importance, and how to streamline the build processes using these tools",
        "Working with Hibernate: Understand Hibernate architecture, setup, and various mapping strategies (Table-Per-Hierarchy, Table-Per-Concrete class.",
        "Implementing Advanced Features: Develop advanced features in web applications, such as implementing actions and interceptors in Struts."
      ],
      "course_content": {
        "Java Struts Framework": [
          "Overview of Java Netbeans",
          "Quiz on Java Netbeans",
          "Java Struts introduction",
          "Java Struts introduction continued",
          "Apache tomcat installation",
          "Struts Architecture",
          "Struts Architecture continued",
          "Quiz on Struts Intro and Architecture",
          "Practical example",
          "Practical example continued",
          "Login example",
          "Login example continued",
          "Quiz on LOGIN",
          "Creating an action part",
          "Creating an interceptor",
          "Creating an interceptor continued",
          "Quiz on ACTION PART and INTERCEPTOR",
          "Introduction to Value Stack and OGNL",
          "Value Stack and OGNL example",
          "Value Stack and OGNL example continued",
          "Quiz on Value Stack and OGNL",
          "File uploader example",
          "File uploader example continued",
          "Sending Emails",
          "Send email using struts2",
          "Send email using struts2 continued",
          "Login application using Database",
          "Login application using Database continued",
          "Validations",
          "Validations continued",
          "Struts 2 i18N",
          "Struts 2 i18N continued",
          "Type conversion",
          "Annotations",
          "Exception Handling Part 1",
          "Exception Handling Part 2",
          "Control Tags Theory with IF Else Example Part 1",
          "Control Tags Theory with IF Else Example Part 2",
          "Generator Tag",
          "Append Tag part 1",
          "Append Tag part 2",
          "Merge Tag Example",
          "Iterator Tag in Struts",
          "Data Tags",
          "Date Tag",
          "Text Tag Example",
          "URL Tag Example",
          "Push and Set Tags Example",
          "Action Data Tag Example",
          "Simple UI Elements",
          "Group Tags Struts",
          "Select Tag Example"
        ],
        "Java Spring": [
          "Introduction to Spring",
          "Eclipse Setup And Introduction To Polymorphism",
          "Polymorphism Example",
          "Dynamic Polymorphism Example Continues",
          "Java Spring Inversion Of Control - Ioc",
          "Hello World Applications",
          "Hello World Continues",
          "Achieved Our First Hello World Applications",
          "Spring Constructor Injection Part 1",
          "Spring Constructor Injection Part 2",
          "Spring Bean Scopes Part 1",
          "Spring Bean Scopes Part 2",
          "Spring Life Cycle Methods Part 1",
          "Spring Life Cycle Methods Part 2",
          "Spring Setter Injection",
          "Spring Bean Injection",
          "Injecting Collections In Springs Part 1",
          "Injecting Collections In Springs Part 2",
          "Spring Beans Autowiring Part 1",
          "Spring Beans Autowiring Part 2",
          "Spring Beans Autowiring Part 3",
          "Spring Beans Autowiring Using Annotations Part 1",
          "Spring Beans Autowiring Using Annotations Part 2",
          "Spring Aop Example Part 1",
          "Spring Aop Example Part 2",
          "Spring Aop Example Part 3",
          "Spring Aop Example Part 4"
        ],
        "Java Spring Case Study - Creating Online Shopping App": [
          "Introduction to J2EE Framework",
          "Benefits of Spring Framework",
          "Spring Usage Scenarios",
          "Spring with EJB",
          "Registration and Login",
          "Creating New Package",
          "List of Dependencies",
          "Implementing the Interface",
          "Adding Classes for Project",
          "Defining Model Attribute",
          "Implementing Logout Value",
          "Creating New Tag Lib",
          "Table Row in Table Data",
          "Function in Table Data",
          "Folder for Register",
          "Functioning the Project",
          "Connectivity with Spring Framework",
          "Implementation for Insert Method",
          "Coding for Application Context",
          "Working on Spring Module",
          "Spring Framework in Database"
        ],
        "Java Build Tools - MAVEN and ANT": [
          "Introduction to Java Build Tools",
          "Implementing an Examples",
          "Ant - Another Build Tool",
          "Targets have the Attributes",
          "Introduction to XML and Java",
          "Introduction to XML and Java Continue",
          "More Introduction to Introduction to XML and Java",
          "Java Web Services Tutorial",
          "Core Java 1",
          "Core Java 2",
          "Abstact Class",
          "J2EE - Basics to Learn Web Services",
          "Application Server",
          "Web Server and Application Server",
          "Servlet",
          "Remote Interface",
          "JSP Example",
          "Presentation Outline",
          "Background for XML",
          "Glance About XML Used in Soap -Rest",
          "Coutions Concerning DTDs",
          "Prerequisite for REST and SOAP",
          "Introduction to Web Design",
          "Client and Server",
          "12 Principle of Good Web Design",
          "Website Creation",
          "HTML Fundamentals",
          "HTML Fundamentals Continue",
          "Unordered List and Ordered List",
          "Hypertext Link",
          "Cascading Style Sheet (CSS)",
          "Why Cascading Style Sheet",
          "Declarations",
          "Anonymous Boxes",
          "Float Positioning",
          "Ajax Tutorial",
          "How to use XMLHttp Request",
          "Chrome",
          "Java Script Basics",
          "XML and Related Language",
          "XML - Key Goals",
          "XML is Verbose by Design",
          "XML is Modular",
          "Other Uses of XML",
          "Text Editors and Browsers",
          "XML Parsers",
          "Comments and C Data",
          "Comments and C Data Continue"
        ],
        "Java Hibernate": [
          "Introduction",
          "Elements of Hibernate Architecture",
          "Java Hibernate Application Example",
          "Java Hibernate Application Example Continues",
          "Setting up the Database",
          "What is Hibernate hbm2ddl.auto Property?",
          "hbm2ddl.auto Using Annotation",
          "Running the Program on Java Hibernate Annotation",
          "java hibernate mapping TPH",
          "java hibernate mapping TPH Continues",
          "Running the Program on TPH",
          "java hibernate mapping TPC",
          "Running the Program on TPC",
          "Including more variables on java hibernate mapping TPC",
          "java hibernate mapping TPS",
          "java hibernate mapping TPS Continues"
        ],
        "IntelliJ IDEA with Projects": [
          "Introduction to IntelliJ IDEA",
          "Installation Requirements and Genrerate Properties File",
          "IntelliJ Idea Look and Feel",
          "View Modes",
          "AutoScroll From and To Source Funcitonality",
          "Intregration with GIT",
          "Maven Project",
          "Maven Project Continues",
          "Coding Templates",
          "Conding Inspections",
          "Code Folding and Indentation",
          "Plugins and Language Injections",
          "Code Inspection",
          "Debugging Application Server",
          "Searching, File and Class",
          "Structural Search",
          "Detailed Introduction About Groovy",
          "Groovy Conditional Operators",
          "Loops in Groovy",
          "Closure and Lambda Expression",
          "Call by Method in Groovy",
          "Integration of the Database in Intellij Idea",
          "Working With Tools",
          "Introduction to Database Console",
          "Working with Result Pane Data Extraction"
        ],
        "JavaServer Pages (JSP)": [
          "Overview of Java Netbeans",
          "Introduction To Jsp",
          "Understanding Jsp",
          "Jsp Scriptlet&sbquo; Declaration",
          "Expression Tags",
          "Jsp Directives",
          "Jsp Attributes And Purpose",
          "Exception Handling In Jsp",
          "Jsp Actions",
          "Jsp Actions Part 2",
          "Jsp Set Property And Get Property",
          "Jsp Page Directive",
          "Include Directives",
          "Jsp Mvc Pattern Part 1",
          "Jsp Mvc Pattern Part 2",
          "Jsp Mvc Pattern Part 3",
          "Jsp Registration Example Part 1",
          "Jsp Registration Example Part 2",
          "Jsp Registration Example Part 3",
          "Jsp Login Example",
          "Jsp Pass Values To Jsp From Html Part 1",
          "Jsp Pass Values To Jsp From Html Part 2",
          "Jsp Expression Language Example",
          "Jsp Jstl Tag Overview Part 1",
          "Jsp Jstl Tag Overview Part 2"
        ],
        "Enterprise JavaBeans (EJB) with Case Studies": [
          "EJB3 Environment Setup",
          "EJB3 Overview and Types",
          "EJB3 3 Singleton Session Bean",
          "EJB3 3 Singleton Session Bean Continues",
          "Stateless Session Bean",
          "Stateless Session Bean Continue",
          "More on Stateless Session Bean",
          "Message Driven Bean",
          "Message Driven Bean Continue",
          "Enterprise Java Beans Training",
          "EJB Jar Export",
          "Stateful Session Bean"
        ],
        "Java EE/J2EE - JavaServer Faces (JSF)": [
          "Course Overview",
          "Why JSF",
          "JSF Environment Setup",
          "Tools for JSF",
          "JSF Life cycle overview",
          "Jsf Life cycle diagram discussion",
          "Restore View",
          "Applly Request Values",
          "Process Validation and Update Modal phase",
          "Invoke application and Render response phase",
          "Process events and Partial request in Life cycle",
          "Components of JSF",
          "UI Component model",
          "UI Component class",
          "Render Classes",
          "Few Important UI components",
          "Features of JSF and Navigation in JSF",
          "User input validation feature",
          "Type conversion",
          "Error handling and Java bean management",
          "Eventy handling",
          "Event object and Event listeners",
          "Facelets",
          "Why Facelets",
          "JSp/JSF discordance",
          "EL functions and Tags in Facelets",
          "Using facelets template",
          "sample facelet application and Summary of Facelets",
          "Sample JSF application",
          "Success and Fail page design in JSF",
          "Faces config and bean class in jsf sample application",
          "Bean class",
          "Snapshots of sample application desription",
          "Event handling through code description",
          "JSF or Struts in context with Multitier Archtitecture",
          "Integratingf with Spring and concluding the course"
        ],
        "Java Web Services JWS Training": [
          "Web Services Introduction",
          "Java XML",
          "Java Intrduction",
          "Java Features",
          "Java Runtime",
          "Java Variables",
          "Java editors",
          "Java JDK paths",
          "First Java program output",
          "Basic syntax",
          "Attributes in Java",
          "Java arrays and Ennums",
          "Classes objects",
          "Classes objects Continues",
          "Constructers",
          "Constructers Continues",
          "Constructer code",
          "Constructer code Continues",
          "Argument constructers",
          "Argument constructers Continues",
          "Comments",
          "Packages example",
          "Packages example Continues",
          "Data types 1",
          "Data types 1 Continues",
          "Data types 2",
          "Variables",
          "Local variables",
          "Instance variables",
          "Variables example",
          "Class static variables",
          "Java variable types",
          "Modifier basics",
          "Modifier examples",
          "Modifier examples Continues",
          "Operators part 1",
          "Operators part 2",
          "Operators part 3",
          "Loop Control",
          "Loop Control Continues",
          "The for Loop",
          "Enhanced for loop in java",
          "Examples for loop",
          "Decision making",
          "How decision making work inside programing language",
          "Rules apply to switch statement",
          "Nested if else statement",
          "switch case",
          "switch case Continues",
          "looping questions",
          "looping questions Continues",
          "Recursion",
          "Java Number Class",
          "Numbers Methods",
          "Numbers Methods Continues",
          "Character class",
          "Character class Continues",
          "Examples of Character class",
          "Java string class",
          "Examples of java string class",
          "Examples of java string class Continues",
          "Stringh Length",
          "String concat (string str)",
          "Java Arrays",
          "Creating Arrays",
          "Creating Arrays Continues",
          "for each loop",
          "for each loop Continues",
          "Complete Arrays",
          "How the array program behaves",
          "Other version of functions",
          "Date Time",
          "Date Time Continues",
          "Intro to regular expressions",
          "Complete regex wrapped",
          "Example of regular expressions",
          "Example of regular expressions continues",
          "what are regular expressions",
          "what are java methods",
          "Method types and declaration",
          "Methods end",
          "Special methods",
          "what are file io",
          "what are file io continues",
          "Basic examples",
          "The classification of Strams",
          "The classification of Strams continues",
          "Description of strams",
          "Exceptions in java",
          "Exception hierarchy",
          "Run as application",
          "Declaring your own exception",
          "Inheritance",
          "concepts of object oriented programming",
          "Overriding",
          "Overriding in OOPS",
          "What is Polymorphism",
          "Poly morphism concepts",
          "Poly morphism examples",
          "concept of abstraction in java",
          "example of abstraction",
          "Meaning of interface",
          "Properties of interface",
          "Packages",
          "Package example",
          "Collections",
          "Basics of collections",
          "Collection explanation",
          "Collection examples",
          "Application Servers",
          "Basics of J2EE",
          "J2EE Components",
          "Examples of J2EE Components",
          "J2EE Services and API",
          "JSP example",
          "Concepts of tiered Applications",
          "Overivew of tiered Applications",
          "Web clients",
          "Overivew of tiered Applications",
          "Container types",
          "Types of J2EE models",
          "Web designing basics",
          "clients and servers",
          "Designing principles",
          "Tools of web designing",
          "Fundamentals of html",
          "Fundamentals of html continues",
          "Designing web pages",
          "Floating frames",
          "css basics",
          "Complete CSS",
          "Declarations",
          "Block and Inline boxes",
          "Overlapping relative positioning",
          "Basics of AJAX",
          "Using XML HTTP request",
          "Ajax responder",
          "Java scripting"
        ]
      },
      "requirements": [
        "Basic Java Knowledge: Students should have a fundamental understanding of Java programming concepts, including object-oriented principles, classes, and methods.",
        "Experience with Java Development Tools: Familiarity with Java development tools like Eclipse or NetBeans is recommended, as the course will involve practical coding exercises in these environments.",
        "Understanding of Web Technologies: A basic understanding of web technologies such as HTML, CSS, and JavaScript will be helpful for grasping the web application development aspects of the course.",
        "Knowledge of SQL and Databases: Students should have a basic understanding of SQL and relational databases to effectively learn database integration and operations.",
        "Familiarity with Basic Software Development Concepts: Understanding software development lifecycle concepts and version control systems like Git will be beneficial.",
        "Understanding of MVC Architecture: Knowledge of the Model-View-Controller (MVC) architectural pattern will help students grasp the core concepts of the Struts and Spring frameworks.",
        "Access to Development Environment: Students need access to a development environment with Java SDK, a compatible IDE (Eclipse/NetBeans), and necessary build tools (MAVEN/ANT).",
        "Willingness to Learn and Practice: A proactive attitude towards learning new technologies and a willingness to engage in hands-on practice will enhance the learning experience.",
        "Basic Understanding of Object-Relational Mapping (ORM): Familiarity with the concept of ORM will be helpful for understanding Hibernate’s role in managing database operations.",
        "Preliminary Knowledge of Build Tools: Basic knowledge of Java build tools such as MAVEN and ANT can be useful but is not mandatory as some foundational aspects will be covered in the course."
      ],
      "description": "Introduction:\nDive into the world of Java frameworks with this comprehensive course designed to equip you with the knowledge and skills needed to build robust, scalable, and efficient applications. Whether you are a beginner or an experienced developer, this course will guide you through the intricacies of Java frameworks like Struts, Spring, Hibernate, and many more, ensuring you have a solid understanding and hands-on experience in using these powerful tools.\nSection 1: Java Struts Framework\nIn this section, you will explore the Java Struts framework, starting with an overview of Java Netbeans and the basics of Struts 2. You'll learn how to set up Apache Tomcat, understand the Struts 2 architecture, and work on practical examples, including login functionality and file uploaders. This section also covers advanced topics such as creating actions, interceptors, and utilizing the Value Stack and OGNL.\nSection 2: Java Spring\nSpring is a cornerstone of modern Java development. This section introduces you to the Spring framework, covering essential concepts like Inversion of Control (IoC), dependency injection, and Spring AOP. Through detailed lectures and examples, you'll learn how to set up Spring in Eclipse, create Hello World applications, and work with Spring beans, scopes, and life cycle methods. Advanced topics include autowiring, annotations, and AOP (Aspect-Oriented Programming).\nSection 3: Java Spring Case Study - Creating an Online Shopping App\nApply your Spring knowledge in a practical case study by developing an online shopping application. This section guides you through the entire development process, from setting up your J2EE framework to creating a registration and login system, implementing database connectivity, and ensuring seamless integration with the Spring framework. By the end of this section, you'll have a fully functional online shopping app.\nSection 4: Java Build Tools - MAVEN and ANT\nLearn about the essential Java build tools MAVEN and ANT in this section. Understand the importance of these tools in Java development, and get hands-on experience in implementing examples. This section also covers XML, Java web services, core Java concepts, servlet technology, and more. You'll gain the skills needed to streamline your build processes and manage dependencies efficiently.\nSection 5: Java Hibernate\nHibernate is a powerful ORM (Object-Relational Mapping) tool. In this section, you'll get introduced to Hibernate architecture and learn how to set up and configure Hibernate for your projects. Through practical examples, you'll understand Hibernate mapping strategies (TPH, TPC, TPS), work with annotations, and manage database operations. This section ensures you can leverage Hibernate to handle complex data interactions in your applications.\nSection 6: IntelliJ IDEA with Projects\nMaster the IntelliJ IDEA IDE in this section. From installation requirements to exploring its features and functionalities, you'll learn how to efficiently navigate and use IntelliJ IDEA for your Java projects. Topics include GIT integration, Maven projects, code inspections, debugging, database integration, and working with Groovy. This section will boost your productivity and streamline your development workflow.\nSection 7: JavaServer Pages (JSP)\nJavaServer Pages (JSP) is a technology used to create dynamic web content. This section covers the fundamentals of JSP, including scriptlets, declarations, expression tags, directives, MVC patterns, and exception handling. Through detailed examples, you'll learn how to create JSP applications, handle form data, and implement common web functionalities like registration and login systems.\nSection 8: Enterprise JavaBeans (EJB) with Case Studies\nEJB is a key component of enterprise-level Java applications. This section introduces you to the EJB environment, different types of session beans, message-driven beans, and more. Through case studies, you'll gain practical experience in implementing EJBs, deploying them, and understanding their role in enterprise applications.\nSection 9: Java EE/J2EE - JavaServer Faces (JSF)\nJavaServer Faces (JSF) is a powerful framework for building user interfaces for web applications. This section covers the JSF lifecycle, UI components, navigation, validation, error handling, and event handling. You'll also learn about Facelets, a templating system for JSF, and develop a sample JSF application to consolidate your learning.\nSection 10: Java Web Services JWS Training\nWeb services are essential for building interconnected applications. This section introduces you to web services, focusing on Java XML, SOAP, and RESTful services. You'll learn how to create, deploy, and consume web services in Java, ensuring you can build applications that communicate seamlessly over the web.\nConclusion:\nBy the end of this course, you will have a comprehensive understanding of various Java frameworks and tools. You'll be equipped to build and manage robust Java applications, from simple web projects to complex enterprise solutions. This course provides a strong foundation and practical skills, making you a proficient Java developer ready to tackle real-world challenges.",
      "target_audience": [
        "Aspiring Java Developers: Individuals looking to deepen their Java programming skills and gain expertise in modern Java frameworks for building robust and scalable web applications.",
        "Intermediate Java Programmers: Developers with a basic understanding of Java who want to advance their knowledge and practical skills in frameworks like Struts, Spring, and Hibernate.",
        "Web Developers: Professionals interested in integrating Java-based technologies with web development to create dynamic, server-side web applications.",
        "Software Engineers: Engineers seeking to broaden their skill set by learning advanced Java frameworks and tools used in enterprise application development.",
        "Database Administrators: Individuals who want to understand how Java frameworks interact with databases and improve their knowledge of ORM tools like Hibernate.",
        "Computer Science Students: Students who have completed foundational Java coursework and are looking to apply their knowledge in a more advanced, practical context.",
        "IT Professionals: IT professionals aiming to transition into a Java development role or enhance their current Java development skills for career advancement.",
        "Tech Enthusiasts: Technology enthusiasts who are passionate about learning new frameworks and tools in the Java ecosystem to stay current with industry trends.",
        "Project Managers: Managers who want to gain a deeper understanding of the technologies their development teams are using to better manage projects and workflows.",
        "Entrepreneurs: Start-up founders or entrepreneurs who are looking to develop Java-based applications and need a solid understanding of the frameworks and tools available."
      ]
    },
    {
      "title": "Bike Shop Php Shop Script Laravel Voyager admin",
      "url": "https://www.udemy.com/course/bikeshop-php-shop-script-laravel-56-voyager-admin/",
      "bio": "Building and development Script Laravel Voyager admin",
      "objectives": [
        "Developers & learn php Laravel & Voyager admin",
        "how to make Page login logout signin with video background you can edit it and add it in admin panel",
        "how to make Posts: support feature image, page Templates, categories, tags and status(publish, draft)",
        "how to make Categories: category name, slug, description and feature image.",
        "how to make Page: support feature image, page templates and status(publish, draft)",
        "how to make Products add delete edit view name, slug, description and feature multi image. with ajax",
        "how to make Flexible and Responsive Layout: more than one image per line",
        "how to make You will have 3 menu in bikeshop footer header overlay menu",
        "how to make User have Favourites page of his Products",
        "how to make User can add comment on news page",
        "how to make Send Message From user to admin with contact form Laravel",
        "and more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Step one Project": [
          "Script Laravel",
          "Laravel",
          "Framework Project",
          "Software Project",
          "intro theme project"
        ],
        "Step two Project": [
          "Download Project With Xamp",
          "Create database Project",
          "Installation Step one Project Voyager admin",
          "Login To Admin And Fix Image Project",
          "Change the page image of admin Project"
        ],
        "Show Frontend pages Project": [
          "Show Frontend pages Project"
        ],
        "Layouts Main and Files Project": [
          "Layouts Main and Files Project",
          "Social Media And Menus Project",
          "logo and login and logout button with footer project",
          "Make controller and model in our Project"
        ],
        "Section Sidebar Content Theme": [
          "Sidebar Categories Project",
          "Latest blog Project",
          "Simble Login Project"
        ],
        "Content Show In Homepage": [
          "Create Table Product Project",
          "Product Show in Homepage Project",
          "Single Product Section One Project"
        ],
        "Review Section": [
          "Review Section One Project",
          "Review Section Two Project"
        ],
        "Book Bike Now Project": [
          "Book Bike Now Project",
          "One Wishlist And Product Populars Project",
          "Two Wishlist and product populars Project"
        ],
        "News Page Project": [
          "News Page Project",
          "News Paginate Project",
          "One Single News Project",
          "Two Single News Project",
          "Three single news Project",
          "Four single news Project"
        ]
      },
      "requirements": [
        "Little Know Learn php",
        "Little Know Learn HTML",
        "Little Know Learn CSS"
      ],
      "description": "Script is built using Laravel Framework and Voyager  Script Products  any user can make User and review any Products also there is arole in  the admin you can make any user admin to user have page Favourites of  Products and he can send any Message to admin also he can book any  Products also he can make account and more . Checkout the demo to learn  more.\nWhy is Laravel so popular?\nBecause  once you learn it, creating complex applications are easy to do,  because thousands of other people have created code we can plug  (packages) in to our Laravel application to make it even better.\nThere are many reasons why Laravel is on the top when it comes to php frameworks but we are not here to talk about that, right?\nYou are here because you want to learn Laravel, and find out what  course to take, right?\nAlright lets lists what this course has to offer,  so that you can make your decision?\nBenefits of taking this course (I promise to be  brief)\n1. Top PHP instructor (with other successful PHP courses with great reviews)\n2. Top support groups\n3. An amazing project that we will be building and taking to Github\n4. Lots of cybernetic coffee to keep you awake\n5. Did I mention I was not boring and you will not fall asleep.\nThe Amazing project / real life application\nOn this project you will learn everything you need for creating  awesome applications the easy way with Laravel, and new features will be  implemented all the time, just the the curriculum and look at the  updates section.\nOh yeah, we take this to Github (A app repository online) and even show you how, so you will learn that too.\nFeatures\nEasy and simple interface to Use\nFully responsive for any kind of device\nPowerful admin backend like WordPress\nClean coding with proper commenting\nSecured coding against SQL injection\nDirect access or invalid URL press stopped for each pages\nStatistics of important data in dashboard\nPhoto gallery management\nUnlimited category and post creation and management\nUnlimited User have Favourites bike page of his media creation and management\nUnlimited User can add comment on bike page creation and management\nUnlimited User can add like on bike page creation and management\nUnlimited User can add unlike on bike page creation and management\nUnlimited User can add share on bike page creation and management\nSEO meta data setup for each post, page and category\nUnlimited  Send Message From user to admin with contact form laravel 9.*\nUser have Favourites page of his Products\nUnlimited  Page system User can add Review on Products page\nUnlimited  Page system User can book any Products and return to admin panel\nUnlimited  Page system You will have 3 menu in bike shop footer header overlay menu\nUnlimited  Page system Page login logout signin with video background you can edit it and add it in admin panel\nUnlimited  Page system\nUnlimited  Page system admin\nUser: name, email, password, profile picture and description\nSetting: general setting such as logo, blog title, website icon, home page\nSend Message From user to admin with contact form laravel 9.*\nUser have Portfolio page\nUnlimited  Page system\nCustomizable in own language rtl\nimage: easily upload multiple images with ajax.\nTheme color changing option\nSecurity\nTotally secured system (SQL injection, XSS, CSRF)\nBuilt on powerful Laravel 6 Framework that has been tried and tested by millions of developers.\nPasswords are encrypted using PHPass library to make sure your data is safe.\nUser & Registration System\nUsers can register for an account using the quick and easy register Popup.\nLogin System comes with a Forgotten Password, to allow users to reset their password via email.\nMedia Builder\nMembers / Admin add unlimited recipes.\nSEO optimized for Services using meta keywords and meta tags.\nAllow anyone to share recipe on social media (Facebook, twitter, google+, ..)\nAdmin Panel\nFlexible control panel system with full options.\nOnly admin role can login admin panel.\nChange website settings(name, logo, favicon, timezone, site description,...).\nChange website SEO settings (meta keywords, meta description).\nChange Contact information (email, phone,...).\nUnlimited slides images related to the Services.\nChange social media pages.\nManage Members (Edit, Delete, Add and view member information) and change their member role (Regular member, admin).\nManage categories (add, edit, delete, view).\nMange (Add, Edit, Delete, and approve member recipe).\nApprove member Media to appear on website.\nCan able/ disable Media appearing.\nMange Blog Posts (add, edit, delete, view).\nManage ADS and select its location dynamically otherwise google ads or custom ads images on website.\nCan view/ delete users subscribed.\nManage sliders that appears on website (add, edit, delete, view).\nTotally with this admin panel can manage and control every thing appear in website with full option.\nTrendy website interface included.\nHome page with\nWidgets for popular Media , popular authors, counter of pages of social media and  simple search\nlatest Services added\nAjax Subscribe form\nSingle page for Media category included its category and advanced search.\nSingle awesome page for Media included plethora details.\nUser Profile included all details about author and his Media .\nContact form to make your client reach you easily.\nLogin/ register/ forget password modal.\nAmazing Dashboard for register user include setting page, user Services and page for managing Services.\nOther Features\nEasy to install and usability(without any coding knowledge needed).\nAwesome Design for Website and admin panel\nFully Responsive for Website and admin panel\nClean Code with hight performance.\nEasy Customization\nFriendly with SEO.\nHigh performance.\nMore features will coming up.\nOne To One\nOne To Many\nOne To Many (Inverse)\nMany To Many\nHas Many Through\nPolymorphic Relations\nMany To Many Polymorphic Relations\nQuerying Relations\nRelationship Methods Vs. Dynamic Properties\nQuerying Relationship Existence\nQuerying Relationship Absence\nCounting Related Models\nInserting & Updating Related Models\nThe save Method\nThe create Method\nBelongs To Relationships\nMany To Many Relationships\nLet me break down some things from the projects but not all, cause my hands are a little tired :)\nOne To One\nOne To Many\nOne To Many (Inverse)\nMany To Many\nHas Many Through\nPolymorphic Relations\nMany To Many Polymorphic Relations\nQuerying Relations\nRelationship Methods Vs. Dynamic Properties\nQuerying Relationship Existence\nQuerying Relationship Absence\nCounting Related Models\nInserting & Updating Related Models\nThe save Method\nThe create Method\nBelongs To Relationships\nMany To Many Relationships\nLet me break down some things from the projects but not all, cause my hands are a little tired :)",
      "target_audience": [
        "Students",
        "Developers",
        "That you are looking for a job programmer",
        "If you want to change your business and work in a free field",
        "beginner Laravel"
      ]
    },
    {
      "title": "400+ Frontend Interview Questions & Answer November 2023",
      "url": "https://www.udemy.com/course/400-frontend-interview-questions-answer-october-2023/",
      "bio": "400+ Most Asked Frontend (HTML, CSS, JS, REACTJS) Interview Questions & Answer with Deep explaination of each questions",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "\"Ready to ace your frontend developer interviews and land that dream job? Look no further! Our comprehensive course is tailored to fully prepare you for frontend interviews, encompassing HTML, CSS, JavaScript, and React.\n\n\nFeaturing an extensive collection of over 400 essential questions, this course delves deep into core concepts and advanced topics commonly encountered in frontend interviews. Whether you're starting out or an experienced developer aiming to enhance your skills, this course caters to all levels.\n\n\nThe course includes 200+ JavaScript questions, including challenges based on code output, to evaluate your coding abilities and grasp of the language. Additionally, it offers 150+ ReactJS questions, emphasizing fundamental concepts and code-output assessments, ensuring readiness for React-related interviews.\n\n\nEach question is accompanied by comprehensive explanations, dissecting concepts, best practices, and the rationale behind answers.\n\n\nMaster specialized interview techniques, boost confidence in code assessment tasks, and excel in technical interviews.\n\n\nThe course covers a broad array of JavaScript topics, from variables and data types to asynchronous JavaScript and best practices. Similarly, ReactJS topics span from fundamentals to ecosystem components like React Router and popular UI libraries.\n\n\nWhether you're new to frontend development or a seasoned pro, this practice test accommodates individuals at all skill levels. You have the flexibility to attempt JavaScript interview questions multiple times and retake exams as needed, ensuring a solid understanding through practice.\n\n\nInstructors are available to address your queries and provide guidance whenever necessary.\n\n\nThis course equips you with the expertise to shine in frontend interviews, showcasing your commitment to mastering web development. Get ready to stand out and seize exciting career prospects in the dynamic world of frontend development.\"",
      "target_audience": [
        "Those Preparing for Technical Interviews.",
        "Developers who want to learn Frontend or improve their existing skills",
        "Students who want to prepare for Frontend or Javascript developer role",
        "Student who want to expand their knowledge and strong fundamentals and concepts of Javascript."
      ]
    },
    {
      "title": "Mastering Django Deployment: Nginx, Ubuntu, and MySQL",
      "url": "https://www.udemy.com/course/mastering-django-deployment-with-nginx-ubuntu-and-mysql/",
      "bio": "Django Deployment on Nginx",
      "objectives": [
        "How to prepare Django applications for deployment.",
        "Best practices for using .env files for securing sensitive data.",
        "Setting up and provisioning an EC2 instance on AWS.",
        "Linking a custom domain to your server using DNS configurations.",
        "Uploading website files and configuring server environments for production.",
        "Installing and configuring MySQL for Django applications.",
        "Resolving common Django deployment issues (e.g., static file errors, permission issues, error 403).",
        "SSL Installation: free and premium SSL certificates."
      ],
      "course_content": {},
      "requirements": [
        "Have a Django project ready for deployment",
        "A GitHub account with your project repository uploaded.",
        "An AWS account to provision an EC2 instance/or access to a deployment server with the right privileges",
        "A registered domain name (optional but recommended).",
        "A laptop or desktop with a stable internet connection."
      ],
      "description": "In Mastering Django Deployment: Nginx, Ubuntu, and MySQL, you'll embark on a practical journey to transform your Django applications into fully deployed, production-ready solutions. This course is designed to provide you with in-depth knowledge and hands-on experience in deploying Django projects, ensuring they are secure, scalable, and optimized for real-world use. You’ll gain the skills needed to prepare your codebase, configure secure server environments, and manage seamless deployments with confidence.\nEach step of the deployment process is carefully crafted to enhance your expertise, from setting up environment variables and databases to provisioning AWS EC2 instances and linking custom domains. You’ll dive into advanced topics such as troubleshooting common deployment issues, including static file errors, permission problems, and debugging database configurations. Additionally, you’ll learn how to implement critical security features, such as integrating free and premium SSL certificates, to safeguard your applications and user data.\nThis course doesn’t just teach deployment—it empowers you to think like a professional developer, focusing on performance optimization, scalability, and maintenance. Whether you’re deploying a personal project, a client application, or a live production system, this course ensures you’re prepared to handle every aspect of the process. By the end, you’ll be ready to confidently deploy, maintain, and scale Django projects, setting yourself apart as a skilled developer in the competitive tech industry. Join us and take the first step towards mastering Django deployment.",
      "target_audience": [
        "Aspiring full-stack developers looking to learn Django deployment.",
        "Python developers aiming to take their applications live in a professional setting.",
        "IT professionals and DevOps enthusiasts exploring server configuration and management.",
        "Students and professionals seeking a hands-on guide to deploying Django projects with Nginx and MySQL."
      ]
    },
    {
      "title": "JavaScript: Under the Hood ( Beginner to Expert )",
      "url": "https://www.udemy.com/course/javascript-under-the-hood/",
      "bio": "Learn advanced JavaScript concepts such as Hoisting, Closures, Prototypal Inheritance, Async JS, etc. by visualization.",
      "objectives": [
        "Fundamental principles of JavaScript.",
        "Visualize the underlying concepts when you code.",
        "Understand the code execution by learning Hoisting, Call Stack, Scope Chain, Functional Execution Context.",
        "Master functions by learning Closures, IIFEs, Callback, Function Statements, Function Expressions.",
        "Understanding of the phrase \"Everything is Object in JavaScript\".",
        "Master Asynchronous JS by learning the full model of JS and Browser that powers modern web apps.",
        "Understand Fetch API, Callback Queue, Microtask Queue, and role of Browser in async code execution.",
        "Learn Promises, Then/Catch, Callbacks, and Async/Await.",
        "Master ES5 OOP by learning underlying Prototypal Inheritance in JavaScript.",
        "Master ES6 OOP ( class, extends, constructor, and super in great detail ).",
        "Understanding of 'this' keyword to debug confusing bugs.",
        "Learn powerful JS functions like call, apply, etc.",
        "Understand the difference between var, let, and const.",
        "Understand the power of Arrow Functions."
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course"
        ],
        "Fundamental Principles of JavaScript": [
          "Lexical Environment and Execution Context",
          "The Global Execution Context and Window Object",
          "Hoisting and Code Execution",
          "The Functional Execution Context",
          "Call Stack and Scope Chain",
          "Examples: Call Stack and Scope Chain",
          "var, let, const",
          "Additional Reading"
        ],
        "Objects, Functions, Callbacks and IIFEs": [
          "Objects in JavaScript",
          "Functions are Objects (First Class Functions)",
          "Function Statements and Function Expressions",
          "Higher Order Functions",
          "Callbacks and Higher Order Functions",
          "IIFE: Immediately Invoked Function Expression",
          "Arrow Functions"
        ],
        "Closures": [
          "Introduction to Closures",
          "Returning Functions from Functions",
          "Nested Function Scope",
          "Backing up Function Memory",
          "Function Closure",
          "Creating Multiple Closure Instances",
          "Additional Reading"
        ],
        "Asynchronous JavaScript": [
          "Synchronous vs Asynchronous",
          "Asynchronous JavaScript Execution",
          "Event Loop and Callback Queue",
          "Promises - Overview",
          "Fetch API - HTTP requests in JS",
          "then and catch",
          "Microtask Queue",
          "Async Await"
        ],
        "Object Oriented JavaScript": [
          "Introduction to Object Oriented Programming",
          "Object Creation in JavaScript",
          "Creating object with Functions",
          "Saving memory with Object.create",
          "Prototype property of functions.",
          "Creating objects with help of new, prototype, and this",
          "this keyword and Arrow Functions",
          "class in JavaScript",
          "call and apply functions",
          "Inheritance in JavaScript",
          "Inheritance with new and call: Part 1",
          "Inheritance with new and call: Part 2",
          "Inheritance with class, extends, and super: Part 1",
          "Inheritance with class, extends, and super: Part 2"
        ],
        "Bonus Lecture": [
          "My other courses"
        ]
      },
      "requirements": [
        "Very basic programming knowledge (we'll dive deep in all JS concepts)"
      ],
      "description": "According to the Stack Overflow, 2020 survey JavaScript is the most in-demand programming language. Also, with the rising popularity of React, Angular, Vue, Svelte, MEAN stack, MERN stack, JAM stack, etc. there is more and more demand for JavaScript developers. As a rule of thumb when there is more demand, the quality of developers gets compromised and that's where this course comes for you.\n\nIn this course, we will dive deep into the core JavaScript concepts from the basics of JavaScript.  After completing the course you will be in the top 10% of JavaScript developers and in some concepts even in the top 5%. You can use this knowledge in your everyday job, give webinars, nail any JavaScript interview at any level whatsoever.\n\nThis course follows a different path than most of the online courses out there who teach you to just use JavaScript without understanding what's going on under the hood. We will go through a different path and understand the concepts by visualizing through diagrams.\n\nThis course will cover advanced concepts ( by assuming you're a beginner of course) such as Hoisting, Global Execution Context, Functional Execution Context, Scope Chain, Call Stack, Higher-order functions, Callbacks,  Immediately Invoked Function Expressions (IIFEs), Closures, Asynchronous JavaScript in detail using Browser, Async/Await, Promises, Fetch API, Then/Catch, Callback queue, Microtask queue, objects and object literals, OOP using ES5 and ES6, function constructors, prototypal inheritance, class, extends, super keywords in detail, call, apply, and lot more.\n\nIt's my promise to you that after completing the course you will be confident in your JavaScript skills like never before, you may even have more knowledge than your interviewer in some cases, imagine how great that is for your future. This could be the best investment for your career in terms of long-term and timeless rewards you'll get.\n\nThis course is very comprehensive and detailed. You'll understand every line of code with different diagrams and sketches that would embed the knowledge in your brain forever.",
      "target_audience": [
        "Anyone who wants to be among the top 10% JavaScript developers.",
        "Anyone who wants to visualize what they are coding rather then just doing it.",
        "Anyone who couldn't wrap their head around concepts like Hoisting, 'this', Higher Order Functions, Closure, Prototypal Inheritance, etc.",
        "Experienced developers coming from different programming languages and frameworks.",
        "Anyone who is working with React, Angular, Node but are not confident in core JavaScript.",
        "Anyone who wants to nail JavaScript interviews at any level by understanding underlying concepts.",
        "Anyone who wants to understand what they are coding in JavaScript instead of just doing it."
      ]
    },
    {
      "title": "Web Development is Very Easy: A Crash Course",
      "url": "https://www.udemy.com/course/web-development-crash-course-php-html-css-js-cpp-jquery-sql/",
      "bio": "Fast Track Web Development course from scratch using PHP and C++ as back-end",
      "objectives": [
        "Web Development Fundamentals",
        "HTML",
        "CSS",
        "PHP",
        "C++ for Web",
        "Javascript",
        "MySQL",
        "jQuery",
        "Bootstrap",
        "Student Projects"
      ],
      "course_content": {},
      "requirements": [
        "A computer with Windows, Linux or MacOS",
        "Enough disk space to install XAMPP, GCC, Geany, and MySQL WorkBench"
      ],
      "description": "Web Development very easy - And is matter fact ! you pay attention to mechanism and master just one back-end language you are a web-developer.\nWhat is special? You will learn to code back-end not only using PHP but C++ as well in the additional chapter added, and your application will be as robust as any existing fast application on web.\n\n\nIntroduction\nAbout the Instructor\nIntroduction to Course\nHow Web works?\nInstallation of Necessary Tools - Windows\nInstallation of Necessary Tools - Linux\n\n\nHTML\nIntroduction to HTML\nHTML Document Structure\nHead Tag\nBasic Text Formatting\nCreating our first HTML file\nHeadings and Paragraphs\nLinks (anchor Tags)\nImages (img Tag)\nLists (Unordered and Ordered)\nInput Controls (Text, Password, Radio, Checkbox, Date , Time etc)\nExtra date input controls (week, month)\nRange input control\nCombo box & List box (select Tag)\nText Areas (textarea Tag)\nForms (Form Tag)\nButtons (Submit, Reset)\nAudio & Video controls\nHTML Comments\n<!DOCTYPE html> html5 standard\nScript Tag (JavaScript)\nPHP\nIntroduction to PHP\nEnabling libraries\nBasic output (HTTP basic headers)\nData types, Variables, Constants\nType-Casting\nComments in PHP, C++, JavaScript\nArrays (and their indices, indexes)\nDecision making - Concepts\nDecision making - Implementation (PHP, C++, JavaScript)\nOperators (Comparison, Logical, Arithmetic)\nIncrement, Decrement operators\nswitch-case (PHP, C++, JavaScript)\nLoops in PHP, C++, JavaScript\nfor - Loop\nwhile - Loop\ndo-while - Loop\nforeach - Loop\nString manipulation - basics\nFunctions - basics\nVariadic functions\nDefault arguments to function\nForm submission program - GET & POST http methods\nSecurity measures about incoming data\nFile IO\nSessions and some global variables\nJSON data\nSerialization\nOOP in PHP - Object Oriented programming - an introduction\nInheritance\nAccess Modifiers - public, private, protected\n\n\nStudent database - Project v1 - using JSON file as data-store\nIntroduction to Project v1\nProject Structure, Data Reading Writing Utility Script\nCreating Homepage Listing\nAdd Student Record\nDelete Record\nUpdate Existing Record\n\n\nMySQL\nIntroduction to MySQL\nDesigning a database Visually - no-code\nCRUD - Create Table\nCRUD - Insert data in table\nCRUD - Update existing records in table\nCRUD - Delete records from table\nCRUD - Emptying or Drop a table\nConnecting to MySQL from PHP - Using msqli\nConnecting to MySQL from PHP - Using PDO\n\n\nStudent database - Project v2 - using MySQL\nUpdate Utility file - a complete review of the project\n\n\nCSS\nIntroduction to CSS\nCSS basics\nBootstrap - What & Why\nBootstrap Grid system. Basics study\nBootstrap Form Controls basics\nLet's style our Project v2 UI using Bootstrap\n\n\nJavaScript\nIntroduction to JavaScript\nBasic output in JavaScript\nData types and Variables\nConstants, let, var\nBackticks in JavaScript\nComments in JavaScript\nClasses in JavaScript\nfor - Loop using (in)\n.forEach function\nString manipulation in JavaScript\nFunctions in JavaScript\nLocal Storage\n\n\njQuery\nIntroduction to jQuery\nUse of CSS Selectors in jQuery\nDOM Manipulation\nAjax (3 ways to send & receive data on the fly)\nCode tuning and some useful function in jQuery\n\n\nStudent database - Project v3 - updating UI using jQuery [ajax requests]\nSet Class of student using jQuery first\nAjax calls explanation & JSON output\n\n\nAdditional chapter : C++ for web (overview + implementation)\nIntroduction to C++ for Web\nSimilarities and Differences - comparing C++ with PHP and JavaScript\nBasic C++ program - general structure\nBasic Output in C++\nHTTP basic headers and output\nProcessing http GET and POST data using C++\nLinking MySQL with our C++ application\nConnecting to MySQL and running queries using C++\n\n\nAdditional : Student database - Project v4 - converting PHP project to C++\nConverting utility.php to utility.h file\nConverting index to C++ version\nConverting add record to C++ version\nConverting update record to C++ version\nConverting delete record to C++ version\n\n\nNOTE: Following Topics are planned but not part of the Couse at the moment, these will be gradually added.\nPlanned Topics\nHosting your website online\nCpanel, WHM, aaPanel\nFTP basics\nDeploying Database\nFast way to Transfer website data to another server\nCompiling your C++ code on server\nGenerating PDF using external program\nReading Writing Office documents\nConverting Image Formats\nConverting PDF to other formats\nObfuscation of PHP Code\nObfuscation of Javascript Code\nGenerating EXE file of your PHP Project\nGenerating Browser based Desktop Application\nDelivering & Running PHP Web application without Apache Web-server\nMySQL Triggers\nMySQL Temporary Tables\nGarbing Externa Program output / getting job done by external programs\nImage Manipulation using GD\nCURL\nMagic functions of PHP",
      "target_audience": [
        "For everyone, willing to learn Web programming",
        "No prior programming knowledge required"
      ]
    },
    {
      "title": "From Zero to Web Hero: Learn HTML & CSS, JavaScript, and PHP",
      "url": "https://www.udemy.com/course/from-zero-to-web-hero-learn-html-css-javascript-and-php/",
      "bio": "Master the Essentials of Web Development: Build Dynamic Websites with HTML, CSS, JavaScript, and PHP",
      "objectives": [
        "Learn the fundamental concepts of web development, including how websites work and the roles of HTML, CSS, JavaScript, and PHP",
        "Get hands-on experience with CSS to style web pages, including layout techniques, responsive design, and modern CSS features like Flexbox and Grid",
        "Gain proficiency in JavaScript to add interactivity to web pages, including handling events, manipulating the DOM, and using modern JavaScript features like ES6",
        "Learn how to use PHP to build dynamic web pages, including form handling, working with databases, and basic server-side scripting",
        "Apply skills to real-world projects and build functional web pages and applications from scratch",
        "Develop problem-solving skills to identify and fix issues in your code using debugging tools and techniques",
        "Learn best practices for writing clean, maintainable code, and follow industry standards for web development",
        "Get a solid foundation to move on to more advanced topics in web development, such as frameworks and libraries",
        "Getting Started With Javascript Variables,Values and Data Types, Operators and Operands",
        "Write JavaScript scripts and Gain knowledge in regard to general javaScript programming concepts",
        "Getting Started with PHP 7 concepts PHP CSPRNG And PHP Scalar Declaration",
        "Getting Started with PHP Function Statements And PHP Decision Making",
        "Getting Started with PHP Loops, PHP Function Statements, PHP Decision Making",
        "PHP Section Introduction to PHP, Various Operator types , PHP Arrays, PHP Conditional statements"
      ],
      "course_content": {
        "Introduction": [
          "CSS Introduction",
          "CSS Basic Syntax",
          "CSS Fonts",
          "CSS Text",
          "CSS Links",
          "CSS Layers",
          "CSS Lists",
          "CSS 2D Transform",
          "CSS 3D Transform",
          "CSS Colors Introduction",
          "CSS Colors 2",
          "CSS Cursors",
          "CSS Padding",
          "CSS Positioning",
          "CSS Dimensions",
          "CSS Rounded Corners",
          "CSS Visibility",
          "CSS Scrollbars",
          "CSS Background",
          "CSS Gradient",
          "CSS Images"
        ],
        "JAVASCRIPT COMPLETE COURSE": [
          "JavaScript Introduction",
          "JavaScript Arrays",
          "JavaScript Variables",
          "JavaScript Conditional Statement Introduction",
          "JavaScript If Else Statement",
          "JavaScript Iteration Statements",
          "JavaScript for Loop",
          "JavaScript While Loop",
          "JavaScript Do..while loop",
          "JavaScript Loop Control Statements",
          "JavaScript Switch Statement",
          "JavaScript Operators",
          "JavaScript Logical Operators",
          "JavaScript Comparison Operators",
          "JavaScript Function",
          "JavaScript Events",
          "JavaScript Error Handling",
          "JavaScript Cookies",
          "JavaScript Animation",
          "JavaScript Objects",
          "JavaScript Page Redirect."
        ],
        "PHP COMPLETE COURSE": [
          "PHP Basic Syntax.",
          "PHP Web Concepts.",
          "PHP Console Input And Output",
          "PHP Arithmatic Operators",
          "PHP Comparison Operators",
          "PHP Assignment Operators",
          "PHP Conditional Operator",
          "PHP Function Statements",
          "PHP Break Statement.",
          "PHP Continue Statement",
          "PHP Decision Making",
          "PHP While Loop",
          "PHP For Loop",
          "PHP MySql API",
          "PHP MySqli API.",
          "PHP Inheritance.",
          "PHP Class And Object",
          "PHP Anonymous Class",
          "PHP Cookies",
          "PHP File Input And Output",
          "PHP Error Handling",
          "PHP Exception Handling",
          "PHP GET And POST Method",
          "PHP CSPRNG",
          "PHP Scalar Type Declaration",
          "PHP Null Coalescing Operator",
          "PHP Spaceship Operator",
          "PHP Polymorphism",
          "PHP Sessions"
        ]
      },
      "requirements": [
        "Comfort with using a computer, navigating files, and basic internet skills",
        "The course is designed for beginners, so no previous knowledge of CSS, JavaScript, or PHP is needed",
        "Students should have access to a text editor (e.g., Visual Studio Code, Sublime Text) and a web browser (e.g., Chrome, Firefox) for coding and testing their work",
        "Familiarity with basic web concepts (like what a website is and how it functions) can be beneficial, but is not required",
        "An enthusiasm for learning and exploring new technologies and concepts is essential for making the most out of the course"
      ],
      "description": "Learn CSS And JavaScript And PHP Complete Course For Beginners\nsection 1- CSS course with basics and advanced concepts of CSS\nEver wonder how the latest website designs are made? Cascading Style Sheets (CSS) are the main coding files used to layout a website and its design. CSS 3 is the latest in styling standards, and it brings several new properties and declarations you can use to make your website design more easily created. CSS is currently the only standard in website design that plugs directly into your HTML, even the latest HTML 5 standards. With CSS 3 and HTML 5, you can create the latest interactive pages for your website viewers.\nThis course shows you how to create CSS classes from a beginner's level. It starts off with basic HTML declarations, properties, values, and how to include a CSS style sheet with your HTML code. For those of you who are new to CSS and HTML, we show you step-by-step how to create a CSS file and include it in your HTML code, even if you use a cloud server for your hosting.\nWe show you how to position your elements, layout your elements relative to your documents, and style your HTML using predefined CSS values. We introduce you to the common CSS styling that you'll need when you start off designing your pages. If you want to get to know CSS and website design, this course is meant for you, and it can be used by anyone who hasn't even seen one line of CSS code yet. We focus on the latest CSS 3 and HTML 5 standards, so you get the latest when coding your website pages instead of focusing on older code.\nThere are no prerequisites. Anyone Can join this course. It is recommended though that individuals have some basic computer programming knowledge.\n\n\nCourse Topics\n\n\nIntroduction to CSS\ninclusion Of CSS In HTML\nCSS syntax\nCSS styling Text\nCSS page backgrounds\nCSS 2D transform\nCSS 3D transform\nCSS animation\n\n\nSection 2- learn JavaScript programming language\nThe course is created with thorough, extensive, but easy-to-follow content that you’ll easily understand and absorb.\nThe course starts with the basics, including JavaScript fundamentals, programming, and user interaction.\n\n\nThe curriculum is going to be very hands-on as we walk you from start to finish to become a professional JavaScript developer. We will start from the very beginning by teaching you JavaScript basics and programming fundamentals, and then execute into real-life practice and be ready for the real world.\n\n\nWhile JavaScript is complicated for beginners to learn, it is widely used in many web development areas.\nThis course gets you started with an introduction to JavaScript. It assumes that you're new to the language, so it gets you started with basic functionality such as creating functions, creating variables, and calling these lines of code from your standard HTML pages. It talks about events and triggers for custom event handling. It talks about pattern matching, searching for text within a page, flow control, and the document object model (DOM). We start off with the basics and move on to more complex functionality such as arrays and objects. We then discuss how to script common elements with JavaScript such as forms and tables. At the very end, we discuss major libraries such as Ajax, which allows you to make asynchronous calls to server-side scripts without reloading the web page in the server.\nMaster the fundamentals of writing JavaScript scripts\nLearn core JavaScript scripting elements such as variables and Objects\nDiscover how to work with lists and sequence data\nWrite JavaScript functions to facilitate code reuse\nUse JavaScript to read and write files\nMake their code robust by handling errors and exceptions properly\nSearch text using regular expressions\nThe topics covered in this course are:\nJavaScript course contents:\nJavaScript introduction\nJavaScript array\nJavaScript variables\nJavaScript functions\nJavaScript objects\nJavaScript control statements\nJavaScript cookies\nJavaScript loop statements\nJavaScript data structures\nJavaScript error handling\nJavaScript regular expressions\n\n\n\nsection 3- learn PHP programming language\nIn this section, we will learn the basic structure of a web application, and how a web browser interacts with a web server. You'll be introduced to the request/response cycle, including GET/POST/Redirect. You'll also gain an introductory understanding of Hypertext Markup Language (HTML), as well as the basic syntax and data structures of the PHP language, variables, logic, iteration, arrays, error handling, and super global variables, among other elements.\n\n\nThe topics covered in this PHP course are:\n\n\nPHP various operator types\nPHP arrays\nPHP conditional statements\nPHP loops\nPHP function statements\nPHP decision making\nPHP file Input and Output\nPHP web concepts\nPHP MySQL API\nPHP CSPRNG\nPHP scalar declaration\nThank you see you inside the course",
      "target_audience": [
        "Individuals who are new to web development and have little or no prior experience with CSS, JavaScript, or PHP",
        "Those looking to start a career in web development and need a solid foundation in these essential technologies",
        "Designers, marketers, or other professionals who want to understand the basics of web development to enhance their skill set or better collaborate with developers",
        "People who are interested in building their own websites or web applications as a personal project or hobby",
        "Individuals seeking to switch careers or enhance their resumes with practical web development skills",
        "Anyone curious about how websites and web applications are built and how they function",
        "For People New to Web Designing"
      ]
    },
    {
      "title": "MERN Stack vs Next.js , Build A Full-stack App From Scratch",
      "url": "https://www.udemy.com/course/mern-stack-vs-next-js-build-a-full-stack-app-from-scratch/",
      "bio": "Understand the differences between the popular web dev stacks MERN and Next JS by building a Real World Blog Project",
      "objectives": [
        "Creating a MERN Stack application versus creating a Next JS application",
        "Connecting front and back ends in both stacks",
        "Connecting to databases",
        "Making HTTP API calls with different methods with query strings and also parameters",
        "Performing all the CRUD operations",
        "Client component versus server-side components",
        "Deploying the application",
        "Complete Source Code"
      ],
      "course_content": {
        "Creating MERN App": [
          "Creating React APP",
          "React App Folder Structure",
          "Create Node App"
        ],
        "Creating Next JS App": [
          "Create Next JS App",
          "Next JS Folder Structure",
          "Next JS API Calls"
        ],
        "Creating Pages / Routing in MERN": [
          "Pages / Routing in React",
          "Creating Backend Endpoints"
        ],
        "Pages and API Routes in Next JS": [
          "Creating Pages",
          "Creating API Routes"
        ],
        "Mongo DB Connection": [
          "Mongo DB Connection in MERN Stack",
          "Mongo DB Connection in Next JS"
        ],
        "Layout and Blog Form in MERN": [
          "Layout",
          "Blog Form"
        ],
        "Layout and Blog Form in Next": [
          "Layout and Blog Form in Next JS"
        ],
        "Adding a Blog": [
          "Blog Model and Add Blog API in MERN",
          "Blog Model and Add Blog API in Next"
        ],
        "Show Blogs in MERN": [
          "Home Page (All Blogs)",
          "Single Blog (Blog Info Page)"
        ],
        "Show Blogs in Next": [
          "Home Page (All Blogs)",
          "Blog Info Page (Single Blog)"
        ]
      },
      "requirements": [
        "MERN Stack",
        "Next JS"
      ],
      "description": "Hello Guys, Welcome to the course MERN Stack vs Next JS\nThis course is all about understanding the main differences between MERN Stack and Next JS.\nFirstly, let's start with understanding what MERN Stack and Next JS are.\nMERN Stack stands for MongoDB, Express, React, and Node.js. It is a popular web development stack used to build full-stack web applications. MongoDB is a NoSQL database, Express is a web application framework, React is a JavaScript library for building user interfaces, and Node.js is a JavaScript runtime environment.\nNext JS, on the other hand, is a framework built on top of React. It is used to build server-rendered React applications with automatic code splitting and optimized performance. Next JS provides a variety of features that make it easier to build complex web applications, including server-side rendering, automatic code splitting, and optimized performance.\nNow let's move on to the topics we will be covering in this course.\n\n\nCreating a MERN Stack application versus creating a Next JS application\nIn this topic, we will compare the process of building a full-stack web application using MERN Stack versus building a server-rendered React application using Next JS. We will discuss the advantages and disadvantages of each approach and how to decide which one to use for your project.\n\n\n\n\nConnecting front and back ends in both stacks\nBoth MERN Stack and Next JS consist of a front-end and a back-end. In this topic, we will cover how to connect the front-end and back-end in both stacks, using RESTful APIs in MERN Stack and server-side rendering in Next JS.\n\n\n\n\nConnecting to databases\nIn MERN Stack, we use MongoDB as the database. In Next JS, we can use any database that is compatible with Node.js. In this topic, we will discuss how to connect to databases in both stacks and perform database operations.\n\n\n\n\nMaking HTTP API calls with different methods with query strings and also parameters\nIn both MERN Stack and Next JS, we need to make HTTP API calls to communicate between the front-end and back-end. In this topic, we will cover how to make HTTP API calls using different methods and how to pass query strings and parameters.\n\n\n\n\nPerforming all the CRUD operations\nCRUD stands for Create, Read, Update, and Delete. In this topic, we will discuss how to perform all the CRUD operations in both MERN Stack and Next JS.\n\n\n\n\nClient component versus server-side components\nIn MERN Stack, the front end is entirely client-side, whereas in Next JS, we can have server-side components. In this topic, we will discuss the differences between client-side and server-side components and when to use each one.\n\n\n\n\nDeploying the application\nFinally, we will discuss how to deploy the application built using MERN Stack or Next JS. We will cover different deployment options and best practices for deploying web applications.\nBy the end of this course, you will have a clear understanding of the main differences between MERN Stack and Next JS and how to choose the right stack for your project. You will also have the knowledge and skills to build and deploy full-stack web applications using both stacks.",
      "target_audience": [
        "Fullstack Developers",
        "MERN Stack Develoers",
        "Next JS Developers"
      ]
    },
    {
      "title": "React and Deno.js Authentication, Forgot and Reset Password",
      "url": "https://www.udemy.com/course/react-deno-authentication/",
      "bio": "Deno APIs, React Hooks, Typescript, MySQL, Migrations, Send Emails",
      "objectives": [
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Connect Deno with MySQL",
        "Run Migrations with Cotton",
        "Reset User Passwords",
        "Send Emails"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Deno": [
          "Installation",
          "Router",
          "Denon",
          "Request Inputs",
          "Migrations",
          "Register",
          "Repository Pattern",
          "Validations",
          "Generating Jwt Token",
          "Auth Helper",
          "Middlewares",
          "Authenticated User",
          "Environment Variables",
          "Forgot Password",
          "Sending Emails",
          "Reset Password",
          "Logout",
          "CORS"
        ],
        "React": [
          "Installation",
          "Template",
          "Routes",
          "Navigation",
          "Register",
          "Redirecting",
          "Login",
          "Authenticated User",
          "Logout",
          "useEffect Dependencies",
          "Forgot Password",
          "Reset Password"
        ]
      },
      "requirements": [
        "Beginner Javascript Developer"
      ],
      "description": "Learn how to authenticate using React and Deno.\nIn Deno you will learn:\nUse Typescript\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nRegister Users\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nSend Emails\nIn React you will learn:\nUse Typescript\nCreate components and routes\nConsume API calls\nUse React Hooks\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner Javascript Developer"
      ]
    },
    {
      "title": "Nextjs 14, Tailwind CSS Create Modern Portfolio Website",
      "url": "https://www.udemy.com/course/next-js-tailwind-css-create-modern-portfolio-website/",
      "bio": "Master Nextjs 14 and Tailwind CSS: Build Your Own Cutting-Edge Portfolio Website with Modern Techniques",
      "objectives": [
        "You will learn Next js 14",
        "You will learn Tailwind css",
        "You will learn clean coding",
        "You will learn dark and light theme",
        "You will learn masonry layout",
        "You will learn how to maintain the image aspect ratio"
      ],
      "course_content": {
        "Resources & Requirements": [
          "Prerequisite",
          "Download Source Code"
        ],
        "Next JS Basics": [
          "Create Next.js Project",
          "Next.js Folder Structure",
          "Next.js Routing",
          "Next.js Server Side vs Client Side Components",
          "What is Tailwind CSS?",
          "Set Font Family"
        ],
        "Dark and Light Theme Setting": [
          "Section Intro",
          "Install Next Themes Package",
          "Create Switch Component",
          "Make Switch Component Dynamic"
        ],
        "Header": [
          "Section Intro",
          "Let's Start Header Section",
          "Add More Header Data",
          "Make Header Responsive"
        ],
        "Contacts & About": [
          "Intro",
          "Setup Data For Contacts Section",
          "Style Contacts Section",
          "About Section Data",
          "Style About Section"
        ],
        "Skills": [
          "Intro",
          "Skills Data",
          "Loop Skills Array"
        ],
        "Work History": [
          "Intro",
          "Work History Section Data",
          "Use Work History Data",
          "Loop Skills and Options"
        ],
        "Projects": [
          "Intro",
          "Projects Data",
          "Use Projects Data",
          "Image Aspect Ratio",
          "Create Model",
          "Make Model Dynamic",
          "Display Project Details in Model"
        ],
        "Reviews": [
          "Intro",
          "Reviews Data",
          "Loop Reviews",
          "Masonry Layout",
          "Show More Button",
          "Create Footer Component"
        ],
        "Deployment": [
          "Upload Source Code on Github",
          "Deploy on Vercel",
          "Fix Issue"
        ]
      },
      "requirements": [
        "Basic React knowledge is required"
      ],
      "description": "Embark on a journey to master NextJS 14 and Tailwind CSS with our comprehensive Udemy course designed to empower you in building a cutting-edge portfolio website. Whether you're a seasoned developer looking to level up your skills or a beginner eager to dive into the world of modern web development, this course is tailored to suit your learning needs.\nWith NextJS 14, you'll harness the power of server-side rendering, static site generation, and seamless client-side navigation, all while enjoying the benefits of a streamlined development experience. You'll learn to leverage Next JS's efficient routing system, enabling you to create dynamic web applications with ease.\nIn parallel, you'll explore the versatility of Tailwind CSS, a utility-first CSS framework that enables rapid UI development without sacrificing flexibility or design freedom. By mastering Tailwind CSS, you'll discover how to craft visually stunning layouts and responsive designs effortlessly.\nThroughout the course, you'll follow along with practical, hands-on tutorials, where you'll build a modern portfolio website from scratch. From structuring your project to styling components and implementing interactive features, you'll gain invaluable insights and best practices every step of the way.\nBy the end of this course, you'll not only have a polished portfolio website to showcase your skills but also a deep understanding of NextJS 14 and Tailwind CSS, empowering you to tackle a wide range of web development projects with confidence. Enroll now and unlock the secrets to creating professional-grade websites with NextJS and Tailwind CSS.",
      "target_audience": [
        "For everyone who's want to enhance their nextjs and tailwindcss skills"
      ]
    },
    {
      "title": "Build a Web App with Python , Django , SQLite",
      "url": "https://www.udemy.com/course/build-a-web-app-with-python-django-sqlite/",
      "bio": "Create a web application with a backend database",
      "objectives": [
        "Setup Development Environment",
        "Create Django Project",
        "Create Django App",
        "Interact with Models",
        "Create Database Model",
        "Render HTML with Django Templates",
        "Create URL Routes",
        "Create View Functions"
      ],
      "course_content": {
        "Development Environment Setup": [
          "Introduction",
          "What is Python",
          "What is Django",
          "Install Python on Windows",
          "Install Python3 on Macs",
          "Create a virtual environment on Windows",
          "Activate a virtual environment on Windows",
          "Create a virtual environment on Macs",
          "Activate a virtual environment on Macs",
          "Updating Pip on Windows",
          "Updating Pip on Macs",
          "Install Atom Text Editor",
          "Install Django on Windows",
          "Installing Django on Macs",
          "Create a superuser account",
          "Create a superuser account on macs"
        ],
        "Building a Web Application": [
          "What we will build",
          "Create a Django Project",
          "Start Django Development Server",
          "Django Project vs Django App",
          "Creating Django App",
          "Installing Pillow",
          "Creating a Model",
          "Interacting with Models",
          "Defining URL Routes",
          "Creating views",
          "Django Templates",
          "Populating Django Templates",
          "Running your app",
          "Project Code"
        ]
      },
      "requirements": [
        "All you need is covered in the course."
      ],
      "description": "Python is an interpreted, object-oriented, high-level programming language with dynamic semantics. Its high-level built in data structures, combined with dynamic typing and dynamic binding, make it very attractive for Rapid Application Development, as well as for use as a scripting or glue language to connect existing components together.\nPython supports modules and packages, which encourages program modularity and code reuse. The Python interpreter and the extensive standard library are available in source or binary form without charge for all major platforms, and can be freely distributed.\nDjango is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.\nDjango was designed to help developers take applications from concept to completion as quickly as possible.\nDjango takes security seriously and helps developers avoid many common security mistakes.  Some of the busiest sites on the web leverage Django’s ability to quickly and flexibly scale.\nSQLite3 is a compact free database you can use easily create and use a database.\nIn this course covers how to build a web application with Python, Django  and SQLite Database.",
      "target_audience": [
        "Beginners to creating web apps with Python"
      ]
    },
    {
      "title": "Reactive Programming in Java: Spring WebFlux & Testing",
      "url": "https://www.udemy.com/course/reactive-programming-in-java/",
      "bio": "Build Reactive REST APIs, Master Unit and Integration Testing - Java, Spring Boot, WebFlux, REST, MongoDB, IntelliJ",
      "objectives": [
        "Introduction to Reactive Programming in Java",
        "Learn how to Use Spring WebFlux in Spring Boot App",
        "Learn to Build Reactive CRUD REST APIs for Employee Management Project",
        "Learn to Write Unit Tests for Reactive CRUD REST APIs",
        "Learn to Write Integration Tests for Reactive CRUD REST APIs"
      ],
      "course_content": {
        "Introduction to Reactive Programming": [
          "Introduction to Reactive Programming",
          "Reactive Stream Specifications",
          "Reactive Stream Workflow",
          "Understanding Project Reactor Mono and Flux"
        ],
        "Spring WebFlux - Reactive CRUD REST APIs for Employee Management": [
          "Introduction to Spring WebFlux",
          "Spring Boot WebFlux Application Architecture",
          "Deploy MongoDB in Docker Container",
          "Create and Set up Spring Boot Project in IntelliJ IDE",
          "Create Employee Entity",
          "Create EmployeeRepository and Understanding Internals",
          "Create EmployeeDto and EmployeeMapper",
          "Build Reactive Add Employee REST API",
          "Build Reactive Get Employee REST API",
          "Build Reactive Get All Employees REST API",
          "Build Reactive Update Employee REST API",
          "Build Reactive Delete Employee REST API",
          "Download Source Code of this Section",
          "Section Quiz: Test Yourself"
        ],
        "Introduction to Testing": [
          "What is Unit and Integration Testing?",
          "Unit Testing Best Practices"
        ],
        "Spring WebFlux - Unit Tests for Reactive CRUD REST APIs": [
          "Overview of Testing CRUD Reactive REST APIs using WebFlux",
          "Unit Test Add Employee REST API",
          "Unit Test Get Employee REST API",
          "Unit Test Get All Employees REST API",
          "Unit Test Update Employee REST API",
          "Unit Test Delete Employee REST API",
          "Download source code of this section"
        ],
        "Spring WebFlux - Integration Tests for Reactive CRUD REST APIs": [
          "Write a Integration Test for Add Employee REST API",
          "Write a Integration Test for Get Employee REST API",
          "Write a Integration Test for Get All Employees REST API",
          "Refactor the Code to Use @BeforeEach Annotation",
          "Write a Integration Test for Update Employee REST API",
          "Write a Integration Test for Delete Employee REST API",
          "Download Source Code of this Section",
          "Quiz on Spring WebFlux Unit and Integration Testing"
        ]
      },
      "requirements": [
        "Java programming",
        "Good to know how to use IntelliJ IDEA",
        "Familiar with Spring Boot",
        "Good to know MongoDB"
      ],
      "description": "In this course, you will learn how to build and Unit test Reactive REST APIs for Employee Management System projects using Java, Spring Boot, WebFlux, REST, MongoDB, and IntelliJ IDEA.\nLearn to build powerful Reactive REST APIs using Java, Spring Boot, and WebFlux in this beginner-friendly course. You'll discover how to handle data in a reactive way, making your applications more efficient and scalable. We’ll work with MongoDB for data storage, ensuring your projects are up-to-date with modern web development practices.\nTesting is a key part of building reliable software, so you’ll also learn how to write clear and effective Unit and Integration tests. Using tools like JUnit and Mockito in IntelliJ IDEA, you'll gain the skills to ensure your code works as expected.\nBy the end of this course, you'll have the confidence to build and test reactive applications, setting you apart in today’s tech world.\n\n\nTools and Technologies Used:\nJava 17+\nSpring Boot 3\nSpring WebFlux\nProject Reactor\nMaven\nIntelliJ IDEA\nMongoDB\nDocker\nWhat You’ll Learn:\nHow to build Reactive REST APIs with Spring Boot and WebFlux.\nHow to use MongoDB for reactive data handling.\nThe basics of reactive programming in Java.\nHow to write Unit tests for Reactive REST APIs.\nHow to create and run Integration tests for Reactive REST APIs.\nHow to use IntelliJ IDEA for coding and testing.",
      "target_audience": [
        "This course is for beginners who want to learn how to build Reactive REST APIs and master writing Unit and Integration tests."
      ]
    },
    {
      "title": ".NET - Clean Architecture Solutions",
      "url": "https://www.udemy.com/course/net-clean-architecture-solutions/",
      "bio": "Developing .NET Web Application with Clean Architecture Guidelines",
      "objectives": [
        "Clean Architecture – Build a well-structured and scalable API",
        "Response Wrapper Pattern – Standardize your API responses with global response wrappers",
        "Entity Framework Core – Master migrations, entity relationships, lazy & eager loading",
        "Repository Pattern – Implement abstraction for data access",
        "CQRS & MediatR – Use custom pipeline behaviors to handle commands and queries efficiently",
        "Redis Caching – Improve performance by integrating distributed caching",
        "FluentValidation – Apply powerful request validation techniques",
        "Mapster – Simplify object mapping with high-performance transformations",
        "Hybrid Endpoints – Combine Controllers and Minimal API for optimal flexibility",
        "Configurations & Dependency Injection – Manage app settings and service lifetimes effectively",
        "MSSQL Database – Use SQL Server as your database backend"
      ],
      "course_content": {
        "Introduction": [
          "Clean Architecture Overview",
          "What we shall develop",
          "Visual Studio and SQL Server important links"
        ],
        "Solution Design": [
          "The Solution",
          "Domain Layer",
          "Application Layer",
          "Infrastructure Layer",
          "Presentation (WebApi) Layer",
          "Project References",
          "Core Folder",
          "Turn Off Nullable Warnings",
          "First Api Launch"
        ],
        "EntityFrameworkCore Migration": [
          "Property Entity",
          "Agent Entity",
          "EntityFrameworkCore Packages",
          "Database Context",
          "DbContext Dependency Injection Grouping",
          "Renaming Migration History Table",
          "Add infrastructure to DI",
          "Connection String",
          "Database Migration"
        ],
        "Global Response Wrapper Pattern": [
          "Response Wrapper Part 1",
          "Response Wrapper Part 2",
          "Response Wrapper Part 3",
          "Response Wrapper Part 4",
          "Response Wrapper Part 5",
          "Response Wrapper - Sample testing"
        ],
        "Request Response Pattern": [
          "Requests and Responses models intro",
          "Create Agent Request Model",
          "Update Agent Request Model",
          "Create and Update Property Request Models",
          "Agent and Property Response Models",
          "Why not expose domain entities"
        ],
        "Command and Query Responsibility Segregation (CQRS)": [
          "MediatR and CQRS Intro",
          "Folder Structures",
          "IAgentService - Create",
          "IAgentService - Update and Delete",
          "IAgentService - GetById, GetAll and DoesExist",
          "Create Agent Command",
          "Create Agent Command Handler",
          "Create Agent Command Handler - Manual Mapping",
          "Create Agent Command Handler - Library Mapping",
          "Add MediatR into Dependency Injection Container",
          "Update Agent Command",
          "Delete Agent Command",
          "Get Agent By Id Query",
          "Get Agents Query"
        ],
        "Service Implementations": [
          "AgentService Creation",
          "AgentService - Create Agent",
          "AgentService - Delete Agent",
          "AgentService - Does Exist",
          "AgentService - Get Agents",
          "AgentService - Get Agent By Id",
          "AgentService - Update Agent",
          "Agent services in Dependency Injection Container"
        ],
        "Controller Endpoints": [
          "Base Controller - Injecting ISender",
          "Agent Controller endpoint - Create Agent",
          "Create Agent Endpoint Testing - Pass",
          "Update Agent endpoint",
          "Delete and Agent endpoint",
          "Get Agent By Id Endpoint",
          "Get Agents Endpoint",
          "Agents endpoints testing - success"
        ],
        "Property Service Definition and Implementations": [
          "IPropertyService definition",
          "PropertyService - Create and Delete Property",
          "PropertyService - Does exist, Get by Id, Get All and Update Property"
        ],
        "Property Features - CQRS": [
          "Create Property Command",
          "Update Property Command",
          "Delete Property Command",
          "Get Property By Id Query",
          "Get All Properties Query",
          "IPropertyService - GetByAgentId",
          "Get Properties for Agent Query"
        ]
      },
      "requirements": [
        "Basic Knowledge of C# and .NET – Familiarity with C# syntax, object-oriented programming, and .NET fundamentals is recommended.",
        "Understanding of Web APIs – Some experience with building or consuming APIs will be helpful but not mandatory.",
        "Basic SQL Knowledge – A fundamental understanding of relational databases (MSSQL)",
        "Visual Studio Installed – Any modern IDE that supports .NET development (Visual Studio 2022 recommended).",
        "SQL Server Installed – You’ll need Microsoft SQL Server (or SQL Server Developer Edition recommended) for database operations.",
        ".NET SDK Installed – Ensure you have the latest .NET 8 SDK installed for development.",
        "No prior experience with MediatR, CQRS, Redis, or FluentValidation is required! Everything will be explained from the ground up."
      ],
      "description": "Unlock the full potential of .NET 8 Web API development by mastering Clean Architecture, advanced patterns, and industry best practices. This course is designed for developers who want to build scalable, maintainable, and high-performing APIs using the latest technologies and design principles.\nFrom structuring your projects with Clean Architecture to implementing CQRS with MediatR, this course covers everything you need to build professional-grade APIs. You’ll learn how to manage data persistence with Entity Framework Core, implement caching with Redis, use FluentValidation for request validation, and optimize your API with Hybrid Endpoints (Controllers & Minimal API).\n\n\nWhat You'll Learn\n\n\nClean Architecture – Build a well-structured and scalable API\nResponse Wrapper Pattern – Standardize your API responses with global response wrappers\nEntity Framework Core – Master migrations, entity relationships, lazy & eager loading\nRepository Pattern – Implement abstraction for data access\nCQRS & MediatR – Use custom pipeline behaviors to handle commands and queries efficiently\nRedis Caching – Improve performance by integrating distributed caching\nFluentValidation – Apply powerful request validation techniques\nMapster – Simplify object mapping with high-performance transformations\nHybrid Endpoints – Combine Controllers and Minimal API for optimal flexibility\nConfigurations & Dependency Injection – Manage app settings and service lifetimes effectively\nMSSQL Database – Use SQL Server as your database backend\n\n\nThis course is beginner-friendly for backend developers but assumes basic programming knowledge in C#. If you’re new to some topics like Clean Architecture, CQRS, or Redis, don’t worry—we’ll break them down step by step!",
      "target_audience": [
        ".NET developers looking to level up their Web API skills",
        "Backend engineers aiming to build scalable and maintainable APIs",
        "Developers transitioning to enterprise-grade API design",
        "Software engineers preparing for real-world API projects"
      ]
    },
    {
      "title": "Master AWS deployment: Build & Deploy a Java full stack App",
      "url": "https://www.udemy.com/course/build-a-task-manager-spring-boot-react-aws-deployment/",
      "bio": "Build a full-stack Task App with Spring Boot, React & Angular, and deploy it to AWS",
      "objectives": [
        "How to Build a full-stack task management app using Spring Boot, React, and deploy to production.",
        "How to Implement secure authentication, authorization, and user roles with Spring Security & JWT.",
        "How to Design RESTful APIs with Spring Boot and integrate them with a dynamic React frontend.",
        "How to Deploy your complete application (backend, frontend, database) to AWS (EC2, S3, RDS)"
      ],
      "course_content": {},
      "requirements": [
        "Basic Understanding of Java and Javascript(react.js)",
        "Access to a Laptop and Internet"
      ],
      "description": "Master Full-Stack Development & Cloud Deployment by Building a Task Manager! Dive deep into Spring Boot for a robust backend and React for a dynamic frontend in this comprehensive, project-based course. You'll gain practical, hands-on experience as you build a fully functional task management application from the ground up, learning industry-standard best practices along the way.\nIn this course, you will:\nDevelop a robust Spring Boot backend.\nBuild a responsive React frontend.\nBuild a responsive Angular frontend.\nImplement secure Authentication and Authorization.\nUtilize JWT (JSON Web Tokens) for secure communication.\nManage user roles with Spring Security.\nGain hands-on experience with MySQL and PostgreSQL (deployed to AWS RDS).\nLearn to deploy your React Frontend to  AWS S3.\nLearn to deploy your Angular Frontend to  AWS S3.\nLearn to deploy your Spring Boot backend toAWS  EC2.\nLearn and understand Spring Boot architecture.\nLearn entity design and relationships.\nGain practical deployment experience on AWS\nThis comprehensive course goes beyond just theory, providing you with the practical skills and confidence to build, secure, and deploy modern full-stack web applications on the powerful AWS cloud platform. By the end of this course, you'll have a tangible project to showcase your abilities and a solid understanding of the entire development lifecycle. Start your journey to becoming a proficient full-stack developer today!",
      "target_audience": [
        "Junior developers looking to expand their skillset to full-stack development",
        "Backend developers",
        "Frontend developers wanting to learn Spring Boot for the backend",
        "Anyone interested in learning how to deploy web applications on AWS"
      ]
    },
    {
      "title": "Building a Vue.js 3 and Laravel 11/12 E-commerce Website",
      "url": "https://www.udemy.com/course/building-a-vue-js-3-and-laravel-11-e-commerce-website/",
      "bio": "Build a dynamic e-commerce website with Laravel, Vue 3 Composition API & Pinia, styled with Bootstrap 5",
      "objectives": [
        "Create dynamic, responsive user interface for e-commerce website using Vue.js 3.",
        "Explore Vue.js 3 component system, life cycle hooks, state management (via Pinia).",
        "Build out key features like product listings, shopping carts, customer accounts, checkout, implement secure payment using stripe.",
        "Explore advanced Laravel features such as implementing authentication, authorization, and robust API endpoints.",
        "Build a real-world project with Vue frontend, Laravel API backend, and Blade for the admin dashboard — all without using Laravel starter kits."
      ],
      "course_content": {
        "Demo of the project": [
          "Demo of the project",
          "Technologies We Use"
        ],
        "Backend - Database": [
          "Create Models & Migrations",
          "Model Relationships"
        ],
        "Backend - Admin Dashboard": [
          "Seeding the Admin",
          "Admin Login",
          "Admin Dashboard",
          "Monthly & Yearly Orders Fix"
        ],
        "Backend - Manage Categories": [
          "Create Update & Delete Categories"
        ],
        "Backend - Manage Brands": [
          "Create Update & Delete Brands"
        ],
        "Backend - Manage Colors": [
          "Create Update & Delete Colors"
        ],
        "Backend - Manage Sizes": [
          "Create Update & Delete Sizes"
        ],
        "Backend - Manage Products": [
          "Create Update & Delete Products Part 1",
          "Create Update & Delete Products Part 2",
          "Create Update & Delete Products Part 3",
          "Create Update & Delete Products Part 4",
          "Fix Remove Old Product Images Bug"
        ],
        "Backend API - Manage Products": [
          "Product API Controller Resource & Routes"
        ],
        "Frontend - Products": [
          "Adding Routes",
          "Fetch & Display Products",
          "Load more Products",
          "Filter Products By Brand",
          "Filter Products By Category Color & Size",
          "Search for Products",
          "Product Details"
        ]
      },
      "requirements": [
        "Good knowledge of Laravel (routes, controllers, views, migrations).",
        "Good knowledge of Vue.js composition API.",
        "Experience working with MySQL databases.",
        "Familiarity with HTML, CSS, and Bootstrap 5 for frontend development.",
        "A local development environment (we will use XAMPP).",
        "Visual Studio Code (VS Code) as the code editor."
      ],
      "description": "Important Notice Before Enrolling:\n\n\nThis course is not for beginners. It is designed for students who already have a good understanding of Laravel and Vue, including how to work with routes, components, APIs, and basic project structures.\n\n\nIf you are new to Laravel or Vue, please do not enroll in this course. We strongly recommend completing beginner-level tutorials or courses before joining, to ensure you can follow along and get the most out of the content.\n\n\nWelcome to Building a Vue.js 3 and Laravel 11/12 E-commerce Website. This comprehensive course guides intermediate developers through building a fully functional, modern e-commerce website using Vue.js for the front end and Laravel 11/12 for the back end.\n\n\nWhether you're looking to add e-commerce functionality to a client project or start your online store, this course covers key aspects of web development, including user authentication, product management, shopping carts, payments, and order management.\n\n\nBy the end of the course, students will be able to create scalable, performant, and secure e-commerce websites that integrate modern JavaScript frameworks with robust backend technologies.\n\n\nTechnologies We Use\nLaravel 11/12 – Powerful PHP framework for building modern web applications.\nVue.js 3 – Modern JavaScript framework for building reactive frontend components.\nBootstrap 5 – For responsive layouts and styling.\nMySQL – Database for app data.\nVisual Studio Code (VS Code) – Code editor we will use throughout the course.\nXAMPP – Local development environment (Apache, MySQL, PHP).\n\n\nThe course is project-based, and students will build an e-commerce website from scratch and learn how to implement complex features like shopping carts, user authentication, and payment processing, and build RESTful APIs with Laravel 11/12.\n\n\nThey’ll gain hands-on experience integrating Laravel with Vue to create a seamless, dynamic front end and a solid, scalable back end.\n\n\nThis course is perfect for developers looking to enhance their full-stack skills and gain hands-on experience with two of the most popular technologies in modern web development today.\n\n\nThis course assumes a good knowledge of JavaScript, Vue.js, Laravel, and basic web development concepts.",
      "target_audience": [
        "This course is specifically designed for intermediate web developers who are looking to advance their skills in Vue and Laravel development."
      ]
    },
    {
      "title": "Create a web app with React, MongoDB, Express and Nodejs",
      "url": "https://www.udemy.com/course/create-a-web-app-with-mern/",
      "bio": "Learn full-stack MERN is a few hours",
      "objectives": [
        "Understand how to create a web application with the MERN stack.",
        "Create a database with MongoDB and store it in the cloud.",
        "Create a REST API with Nodejs and Express.",
        "Get information from the web server by using javascript promises.",
        "How to configure React by using Webpack from scratch.",
        "How to use a REST Client",
        "How to add CSS styles to React applications.",
        "How to set up a router with React from scratch",
        "How to create your own React components from scratch."
      ],
      "course_content": {
        "Creating the BACKEND": [
          "'Hello World' web app with Nodejs",
          "Configure an static web server with Nodejs and Express",
          "Create the REST API routes",
          "Set up a database with MogoDB",
          "Connection to MongoDB with Nodejs and Express",
          "Creating a Mongoose Model",
          "Body Parser",
          "Installing the REST Client",
          "Configure REST API : creating an invoice",
          "Testing REST API : save information into the database",
          "REST API : read all information from the database",
          "Configure REST API : read one invoice",
          "Testing REST API : read one invoice",
          "Nodemon",
          "Configure REST API: delete information",
          "Configure REST API: update infromation",
          "Testing REST API: update information"
        ],
        "Configure React using Webpack": [
          "Configure React with Webpack: installing dependencies",
          "Configure React with Webpack : configuration file",
          "Configure React with Webpack : explanation"
        ],
        "Creating the FRONTEND": [
          "Create your first web app using React",
          "Create a router with React",
          "Testing Router",
          "Saving Components into different files",
          "Setting up and testing React Bootstrap",
          "Creating a text field with React",
          "Create a custom text field with React",
          "Testing the text field for the seller's name",
          "Setting up more text fields created with React",
          "Testing four text fields created with React",
          "Creating a textarea with React",
          "Testing whether the textarea works",
          "Creating another textarea with React",
          "Display items and prices with a React component",
          "Testing the component that displays items and prices",
          "Create a React component that diplays the final price",
          "React component for adding new item and price",
          "Create a React component for adding a new item and price",
          "Testing the React component for adding a new item",
          "Adding a button to create an invoice",
          "Storing the information into an object",
          "Saving invoice into MongoDB",
          "Setting up dialog box with React",
          "Testing the dialog box created with React",
          "Creating a layout with React",
          "Custom Card component",
          "Last improvements to the layout",
          "Reading information from MongoDB",
          "Getting Ids and Descriptions of the invoices",
          "Creating a listing of invoices with React",
          "Testing the invoices table",
          "Deleting invoices from the database",
          "Testing how to delete an invoice",
          "View Invoice Button",
          "Passing parameters to the routes",
          "Display a single invoice with React",
          "Creating the layout of a single invoice",
          "Reading information from MongoDB using Javascript",
          "Handling errors with javascript promises and React",
          "Completing the invoice layout",
          "Completing the invoice webpage",
          "Adding a navigation button with React",
          "Improving the layout of the invoice",
          "Creating Update Invoice button with React",
          "Testing the update button created with React",
          "Creating the Update Invoice Form with React",
          "Handle errors with React",
          "Saving information into state variables",
          "Completing the form used to update information",
          "Update invoice form created with React",
          "Adding information to the form dinamically",
          "Last improvements to Update Invoice form",
          "Updating information by using a javascript promise",
          "Set up a dialog box by using React",
          "Completing the Update Invoice form",
          "Adding navigation button with React",
          "Creating a Homepage with React",
          "Adding more navigation buttons",
          "Creating the production code",
          "Testing the web application"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and Javascript is required.",
        "Google Chrome installed on your PC",
        "Windows installed on your PC"
      ],
      "description": "This course shows you how to create a web application using full-stack MERN from scratch. This course is intended for developers who want to learn MERN stack by doing a web app instead of by reading tutorials or ebooks. You will create the backed of the web application with Nodejs, Express and MongoDB. The frontend will be created with React. React will be configured using Webpack. All the lessons are clear and easy to understand!!! Enroll today!!!",
      "target_audience": [
        "Beginner web developers",
        "Beginner web designers",
        "Beginner Nodejs developers"
      ]
    },
    {
      "title": "The Complete Back End Web Development Course",
      "url": "https://www.udemy.com/course/the-complete-back-end-web-development-course/",
      "bio": "Master back-end web development with PHP and MySQL, & integrate AI into your web applications. Build real-world projects",
      "objectives": [
        "Build powerful and dynamic back-end systems with PHP and MySQL",
        "Design and manage professional-grade databases",
        "Create real-world web applications from scratch",
        "Integrate AI tools to enhance web development workflows",
        "Develop complete, database-driven websites and projects",
        "Master server-side scripting and advanced backend logic"
      ],
      "course_content": {
        "Introduction to Back-End Web Development": [
          "Welcome and What to Expect",
          "What is Back-End Development?",
          "Front-End vs Back-End: How They Work Together",
          "Why PHP and MySQL Are Still Important",
          "Installing Sublime Text for PHP Development",
          "Installing XAMPP to Run PHP & MySQL Locally"
        ],
        "Getting Started with PHP": [
          "PHP Syntax Basics",
          "Variables, Data Types, and Constants",
          "Rules for Creating Variables in PHP",
          "Operators in PHP",
          "Control Structures: If, Else, Switch",
          "Loops: For, While, Foreach",
          "Functions in PHP",
          "Array Functions: sort, push, pop, etc.",
          "Array Functions"
        ],
        "Working with Forms in PHP": [
          "Handling GET and POST Requests",
          "Form Validation in PHP: Writing the Validation Logic",
          "Form Validation in PHP: Testing and Displaying Errors",
          "Sanitizing and Validating User Input"
        ],
        "PHP and File Handling": [
          "Reading from and Writing to Files",
          "File Modes for reading and Writing Files in PHP",
          "Uploading Files",
          "Error Handling for Uploading Files in PHP"
        ],
        "PHP and MySQL": [
          "What is a Database?",
          "Introduction to SQL",
          "Connecting PHP to MySQL Database",
          "CRUD in PHP: Creating and Reading Data from MySQL",
          "CRUD in PHP: Updating and Deleting Records"
        ],
        "User Authentication Systems": [
          "Sessions vs Cookies",
          "Project: Creating Registration System",
          "Project: Creating Login System",
          "Logout Systems and User Management"
        ],
        "Project: Building a CMS (Content Management System)": [
          "Planning the CMS",
          "Creating the Admin Panel",
          "Creating New Blog Posts in PHP",
          "Displaying Blog Posts from the Database",
          "Editing Blog Posts in PHP",
          "Deleting Blog Posts Securely"
        ],
        "Using AI (ChatGPT) for Back-End Development": [
          "Using ChatGPT to Generate PHP Code",
          "Using ChatGPT to Create MySQL Queries and Database Structures",
          "Debugging PHP Errors with ChatGPT",
          "Using ChatGPT to Refactor and Optimize Backend Code",
          "Conclusion: What’s Next After This Course?"
        ]
      },
      "requirements": [
        "No prior programming experience is needed (we start from scratch)"
      ],
      "description": "Are you ready to become a complete back-end web developer and build powerful, dynamic websites from scratch?\nIn this hands-on course Back End Web development, you'll master PHP and MySQL — the essential tools behind the web’s biggest platforms — and learn how to take your skills even further by integrating AI technologies into your projects.\nWe’ll start from the very basics, ensuring you understand every step — from setting up your environment to deploying live applications. You’ll learn how to structure back-end code, build secure user authentication systems, design and manage professional-grade databases, and create full CRUD (Create, Read, Update, Delete) operations — all with real-world practice.\nBut we’re not stopping at the traditional backend.\nYou’ll also discover how AI is changing web development and how you can integrate AI features like chatbots, smart content generators, and automation directly into your PHP projects — giving you an edge that most developers don't have.\nThis course is built around doing — not just theory. You'll work through projects, challenges, and a capstone project that pulls everything together. By the end, you won't just know PHP and MySQL—you'll have real, practical, and in-demand skills you can use immediately.\n\n\nWhat you will learn:\nThe fundamentals of back-end web development\nPHP programming from beginner to advanced level\nHow to build and manage MySQL databases\nBuilding complete CRUD systems (Create, Read, Update, Delete)\nDeveloping user authentication systems (Login, Registration, Password Reset)\nCreating a full Content Management System (CMS)\nFile handling and image uploads in PHP\nBuilding and consuming APIs with PHP\nIntegrating AI APIs into your PHP projects\nCreating AI-powered features like chatbots and auto-content generators\nBest practices for securing PHP and MySQL applications\nDeploying PHP and MySQL applications to live servers\nMajor Projects You’ll Build:\nUser Authentication System (Login, Registration)\nA Complete Mini CMS (Content Management System)\nAI-Powered Comment Auto-Replier\nFull Capstone Web Application with User Accounts, Blog Posts, AI Features, and Admin Dashboard\nSkills You Will Gain:\nBackend Programming\nDatabase Design and Management\nAPI Development and Consumption\nAI Integration into Web Applications\nFull-Stack Web Development Basics\nWeb Application Deployment and Security\nGet ready to:\nBuild back-end systems like a pro\nDesign powerful MySQL databases\nAutomate and enhance your apps with AI\nCreate a portfolio that gets attention\nLaunch your journey as a full-stack developer\nWhether you're starting your first line of code or leveling up your skills, this course will equip you with the tools, mindset, and confidence to succeed in today’s digital world.\nEnroll now and start building real web applications that stand out!",
      "target_audience": [
        "Beginners who want to learn back-end web development",
        "Front-end developers who want to expand into full-stack",
        "Web developers who want to integrate AI into their applications",
        "Students preparing for a career in web development",
        "Entrepreneurs looking to build dynamic, database-driven websites",
        "Anyone interested in learning practical PHP, MySQL, and AI development skills"
      ]
    },
    {
      "title": "Full Stack Next.js And Strapi",
      "url": "https://www.udemy.com/course/full-stack-nextjs-and-strapi/",
      "bio": "Build And Deploy A Website With Next.js And Strapi",
      "objectives": [
        "Build a complete Full Stack Web App with NextJS and Strapi",
        "Build the Front End Application with NextJS",
        "Use Strapi as a Headless Content Management System (CMS)",
        "Test the Strapi REST API with Postman VSCode Extension",
        "Style the application with TailwindCSS",
        "Implement common web dev patterns including filtering, sorting, and pagination",
        "Deploy NextJS to Vercel",
        "Deploy Strapi to Heroku",
        "Use Strapi's data transfer tool to sync development and production data",
        "Handle image uploads with Cloudinary",
        "Debug deployment gotchas",
        "Quick tips on common NextJS caching gotchas"
      ],
      "course_content": {
        "Introduction": [
          "Demo",
          "Introduction",
          "Resources"
        ],
        "Setup Next.js": [
          "Initialize And Clean Up",
          "Static Home Page"
        ],
        "Initialize Strapi": [
          "Initialize Strapi",
          "Quick Tour Of Strapi Code",
          "Connect To Database With SQLTools",
          "Single Type",
          "Test Api",
          "Build Dynamic Home Page"
        ],
        "Strapi Collection Type": [
          "Create The Content Type",
          "Generate Data",
          "Upload Images",
          "Associate Images To Content"
        ],
        "Ui List View": [
          "Route Group And Layout",
          "Render List",
          "Populate Image",
          "Style The List",
          "Pagination",
          "Filter By Attribute"
        ],
        "Relations": [
          "Create A Related Content Type",
          "Render Related Content Type",
          "Filter By Related Content Type"
        ],
        "Contact Form": [
          "Create The Server Action",
          "Create The Contact Form"
        ],
        "Sorting": [
          "Sort By Attribute"
        ],
        "Detail Page": [
          "Detail Page",
          "Radar Chart"
        ],
        "Deployment": [
          "Deployment Intro",
          "Deploy Strapi To Heroku",
          "Cloudinary",
          "Data Transfer",
          "Deploy Next To Vercel",
          "Caching",
          "Test The Contact Form"
        ]
      },
      "requirements": [
        "Basic web dev and command line knowledge is recommended",
        "Basic JavaScript and React knowledge is recommended",
        "Basic knowledge of Git and GitHub is recommended"
      ],
      "description": "Hello and welcome to the Full Stack CMS Website With Next.js and Strapi Course.\n\n\nIn this course, we will learn just enough about Next.js and Strapi to build and deploy a website for a fictional flying machine company.\n\n\nSave time by not having to reinvent the wheel, and use the battle-tested and leading headless CMS solution.\n\n\nWe will explore various Next.js and React features through example-driven learning:\n\n\nRoute groups and layouts\nServer components and Client components\nSearch Params and Path Params\nServer actions\nCaching\nuseFormState hook\nuseSearchParams and usePathname hooks\n\n\nWe will also explore various Strapi features including:\n\n\nSingle Types\nCollection Types\nREST API\nSwagger Documentation\nRelations\nData Transfer\nMedia Uploads\n\n\nWe will focus on building practical features commonly found in content-driven marketing websites, such as:\n\n\nList and Detail view\nPagination\nFiltering\nSorting\nContact form\nBookmarkable URLs\nData Visualization Chart\n\n\nThis course is fast paced and designed to get you up to speed on using Next.js and Strapi together to rapidly build a content-driven website. Familiarity with basic web development and React concepts is highly recommended before taking this course. The intended learner is someone who has some web dev experience and wants to gain additional practice building a standard marketing website using a modern tech stack.",
      "target_audience": [
        "This course is for beginner to intermediate web developers",
        "This course is for anyone looking for a crash course on using NextJS and Strapi together"
      ]
    },
    {
      "title": "Easily Learn Web Development With OptimizePress",
      "url": "https://www.udemy.com/course/optimizepress/",
      "bio": "Web Development: Build Professional High Converting Sales Pages, Landing Pages, Squeeze Pages and Authority Blogs!",
      "objectives": [
        "Know how to navigate the Live Editor",
        "Understand The Fundamentals Of Building a High Converting Page",
        "Competent at building your very own pages from scratch"
      ],
      "course_content": {
        "Introduction To Web Development With OptimizePress": [
          "Introduction To OptimizePress",
          "FAQ",
          "Blogging Course FREE"
        ],
        "Tips on Web Development With OptimizePress & This Course": [
          "Tips"
        ],
        "Setting Up Your Web Development Software": [
          "Settings & Menu's pt1",
          "Settings & Menu's pt2",
          "OP Activation & Blog Setup",
          "Privacy Policy & T.O.S."
        ],
        "Web Development To Build an Authority Blog": [
          "Sidebar Customization",
          "Professional Opinion on Sidebar"
        ],
        "Quality High Converting Pages": [
          "Testimonials Page",
          "Coaching Page Template",
          "Products Page pt1",
          "Products Page pt2"
        ],
        "Most Proven And Highest Converting Homepage Design": [
          "Intro To Homepage",
          "Homepage pt1.",
          "Homepage Finish"
        ],
        "Other": [
          "Split Tests",
          "Use Canva For Professionally Designed Images In Minutes"
        ],
        "Bonus Downloads - Download Your FREE Templates": [
          "Template Downloads",
          "Download Page Link",
          "Uploading Templates"
        ],
        "Wishlist Member Bonus Section": [
          "Wishlist Member Registration Form Integration",
          "[Cheat Sheet] List Of Shortcodes"
        ],
        "Do You Want Some Feedback On Your Site?": [
          "Feedback"
        ]
      },
      "requirements": [
        "You should know how to install optimizepress",
        "Know your way around Wordpress"
      ],
      "description": "Web Development: Build Professional High Converting Sales Pages, Landing Pages, Squeeze Pages and Authority Blogs!\n- NEW MASSIVE BONUS - Buy 1, Get 1 Free ($98 Value in Total)\nI have decided that I wanted to provide massive value to your design career. So buy this course and get access to \"Authority Blogging\" course. Enjoy!\nThe biggest mistake many online marketers make when starting a blog is using outdated WordPress themes at the very start for Web Development. These days, having a professionally designed webpage or blog is vital if you want to make money online. Web Development using landing pages can help increase the chances of your website visitors turning into loyal fans and increases the odds of them buying from you in the future from your blog.\nBUT HOW DO YOU CREATE THEM QUICKLY, EASILY AND MOST IMPORTANTLY PROFESSIONALLY?\nThis Web Development course will teach you how to use OptimizePress to get more of your website visitors to subscribe to your email list which will ultimately make you more money from your blog.\nThe simple fact is, it's much easier to double your email opt in conversion rate from your website or blog, than it is to double your website traffic. Creating high converting landing pages, sales pages & authority blogs using OptimizePress is both quick and easy and this course walks you through how to use the Web Development software on your own website.\n==== As a bonus you get all of our trialled and tested Web Development pages as a downloadable file. This means you simply upload it to your OptimizePress platform, tweak the copy to suit your blog and then you are done! =====\nThe 100% Money Back Guarantee - This course comes with a 100%, no questions asked, money back guarantee. I am so confident in the course that if for whatever reason you are not fully satisfied, you will receive a full refund direct from Udemy. So there is no risk on your part.\nStop Sitting Around Any Longer, Click \"Take This Course\" At The Top Right, Enrol In This Course Now And Learn The Easy Drop & Drag Techniques That Will Get You Building Your Own Website!",
      "target_audience": [
        "You should have at least some experience in building a wordpress website or similar",
        "You should take this course if you want to learn to build high converting sales, landing and home pages"
      ]
    },
    {
      "title": "Building Branded E-Commerce Websites on Webflow",
      "url": "https://www.udemy.com/course/build-e-commerce-website-webflow/",
      "bio": "Build beautiful E-commerce websites that actually gets sales quickly (using no-coding) with Webflow.",
      "objectives": [
        "The rules of strategic & beautiful E-commerce website design",
        "The difference between a $500 vs $10,000 E-commerce website",
        "Strategic E-commerce website design",
        "Webflow Essentials Crash Course",
        "Examples of world-class E-commerce website design",
        "How to improve your E-commerce website overtime"
      ],
      "course_content": {
        "An Introduction to Strategic Branded Website Design": [
          "The difference between a $500 vs $10,000 Website",
          "Examples of World-class E-Commerce Brand Websites",
          "How to get Free Website Templates & Webflow Support",
          "Creating a Seamless Website User Experience",
          "Building a Website that can Promote Brand Growth",
          "The 5-Second Rule *Do not miss lesson*"
        ],
        "Strategic Website Design Mini-Bootcamp": [
          "Alignment & Grids",
          "Visual Hierarchy",
          "Fonts & Typography",
          "Creating Website Colour Palettes",
          "Using Your Website Colours Properly",
          "Button Hierarchy Design",
          "The Importance of Great Imagery",
          "Where to find Great Stock Imagery (Free & Paid)",
          "Cropping & Framing Images (The Rule of Thirds)",
          "Contrast Rules (Including USA Legal Requirements)",
          "Repetition & Consistency",
          "Overlapping",
          "White Space"
        ],
        "Results-Driven Strategic Website Design": [
          "Defining your Websites Strategic Objectives",
          "E-Commerce Best Website Structure Inspiration",
          "Finding Inspiration for your Website",
          "Deciding what pages you need to meet objectives",
          "Creating the Structure of each Website Page Strategically",
          "Why use a Website Template & Where Can You Find Them?",
          "More Inspiring E-Commerce Brand Website Examples"
        ],
        "Webflow Essentials Crash Course": [
          "What is Webflow?",
          "Webflow Packages",
          "Webflow vs Other Website Building Platforms",
          "Breakpoints in Webflow",
          "Introduction to Box Model",
          "Sections",
          "Containers",
          "Div Blocks",
          "Grids",
          "Link Blocks",
          "Buttons",
          "Typography",
          "Images",
          "Videos",
          "Lottie Animations",
          "Forms",
          "Navigation Bars",
          "Symbols",
          "Lightboxes",
          "Sliders",
          "Tabs",
          "Adding Social Media Buttons",
          "Classes",
          "Backgrounds",
          "Display Settings & Responsiveness",
          "Image Optimisation & Lazy load",
          "Positioning",
          "Hero Sections",
          "CMS & Dynamic Content"
        ],
        "Building Your E-Commerce Website": [
          "E-Commerce Brand Website Build - (PART ONE) - Website Structure Development",
          "E-Commerce Brand Website Build - (PART TWO) - Finishing Touches & Settings"
        ],
        "Launching your Website": [
          "How to make sure your Website Reaches Google's Page #1",
          "How to Secure a Great Domain for your Website",
          "Adding a Custom Domain to your Website"
        ],
        "How to Get More Sales After Website Launch": [
          "Installing Hotjar to Gather Valuable Data to Improve your Website",
          "Creating a Marketing Strategy to Drive Website Traffic",
          "Refining your Website to Optimise for Conversion",
          "How to know when your Website is Perfect?"
        ]
      },
      "requirements": [
        "Internet connection",
        "A hunger to build a world-class e-commerce website"
      ],
      "description": "What's the difference between an E-commerce website that just looks good and a website that looks great and actually gets lots of sales?\n\n\nAnd better, what if you could build an amazing E-commerce website in just a few hours?\n\n\nWell this is exactly what this course has been designed to do.\nAnd we want to help as many people learn how to design, build & develop strategic E-commerce websites that actually get sales.\n\n\nAnd that's not all...\n\n\nWe'll cover everything you need to know in order to become a master the art of building world-class E-commerce websites with Webflow.\n\n\nIn this course, you'll learn:\n\n\nWebflow Essentials Crash Course\nBuilding a fully-branded website that can get sales\nThe rules of strategic & beautiful website design\nStrategic website design\nExamples of world-class website design\nThe difference between a $500 vs $10,000 E-commerce website\nHow to improve your websites sales and conversion-rate overtime\nAnd so much more...\n\n\nThis course also includes a *Free Beautiful Website Template* you can use within Webflow.\n*We will show you how to secure it inside the course.\n\n\nSo simply follow the steps and by the end of this course, you'll have a world-class E-commerce website that can help your brand grow and generate sales online.\n\n\nI'll see inside the course :)\n\n\nScott",
      "target_audience": [
        "Someone wanting to learn how to build e-commerce websites",
        "Someone who wants to learn how to design beautiful websites easily on Webflow"
      ]
    },
    {
      "title": "Creating & Selling Squarespace Website Templates",
      "url": "https://www.udemy.com/course/creating-selling-squarespace-website-templates/",
      "bio": "Learn how to build, design, and sell Squarespace web templates",
      "objectives": [
        "Learning the basic fundamentals of Squarespace, getting to know its use cases and features",
        "Learning how to integrate Squarespace websites with other platforms",
        "Exploring Squarespace dashboard and all features available",
        "Learning how to build and design an E-commerce store with Squarespace",
        "Learning how to integrate Squarespace with Printify and add product automatically",
        "Learning how to add product to E-commerce store manually",
        "Learning how to connect Squarespace to payment processor",
        "Learning website testing objectives, such as functionality testing, user experience testing, performance testing, and compatibility testing",
        "Learning effective marketing strategies to promote Squarespace template and generate more sales",
        "Getting to know several marketplaces where you can sell your Squarespace web template"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Highlight of the Course",
          "Whom This Course is Intended for?"
        ],
        "Tools & Resources": [
          "Tools & Resources"
        ],
        "Introduction to Squarespace": [
          "Introduction to Squarespace"
        ],
        "Getting Web Design Inspirations": [
          "Getting web design inspirations from Dribbble and Pinterest"
        ],
        "Squarespace Integration with Other Platforms": [
          "Squarespace Integration with Other Platforms"
        ],
        "Squarespace Tutorial": [
          "Signing Up on Squarespace",
          "General Overview of Website Creation Process on Squarespace",
          "Exploring Squarespace Templates",
          "Exploring Squarespace Features"
        ],
        "Generating Design & Wallpaper with Leonardo AI": [
          "Generating Wallpaper, Design, and Logo with Leonardo AI"
        ],
        "Building E-Commerce Website with Squarespace": [
          "Setting Up Printify Store & Adding Product",
          "Editing Website Content & Uploading Product Images",
          "Connecting Squarespace to Printify Store",
          "Adding Printify Product to Squarespace Website",
          "Uploading Product Manually to Squarespace Website",
          "Editing Contact Page & Social Media Link"
        ],
        "Squarespace Payment Integration with Square": [
          "Squarespace Payment Integration with Square"
        ],
        "Testing Squarespace Website": [
          "Publishing & Testing Squarespace Website",
          "Testing Objectives"
        ]
      },
      "requirements": [
        "No previous experience in Squarespace or web design is required",
        "Willingness to learn, be creative, and think out of the box"
      ],
      "description": "Welcome to Creating & Selling Squarespace Website Templates course. This is an extensive project based course where you will be guided step by step on how to build and design websites using Squarespace which is no code development tool where you can build a website from scratch without having to write a single line of code. This course mainly concentrates on two different aspects, the first one is the technical aspect where you will learn how to build and design websites using Squarespace and the other one is the business aspect where you will learn how to potentially start your web design business by selling Squarespace web templates on online marketplace like Etsy. In the introduction session, you will learn the basic fundamentals of Squarespace, get to know its use cases like what you can build using this tool, as well as its main features that Squarespace has to offer. Then, continued by exploring a platform called Dribbble to get web design inspirations since it is very essential as a web designer to be constantly exposed to new innovations. Afterward, you will also get to know how Squarespace can actually be integrated with other platforms for a variety of purposes, such as payment integration, social media integration, E-commerce, etc. Before starting the project where you are going to be building an E-Commerce website from scratch using Squarespace, you will get to know the general overview of Squarespace website creation process to make sure that you are familiar with the process. Once you have all necessary knowledge about Squarespace, you will be guided step by step on how to build and design an E-commerce website that sells a variety of products. Not only that, you are also going to extensively learn how to integrate several extensions to your website. Then, once the website has been built, we are going to be conducting testing to make sure that the website has been fully functioning, all the features that we have added have been fully functioning, and most importantly the website has a user friendly interface. Hence, in the testing session, there will be four main testing objectives and those are functionality testing, performance testing, user experience testing, and compatibility testing. Once you have learnt all the technical aspects of building and designing websites, you are going to continue by being exposed to the business perspectives. Firstly, you will get to know several marketplaces where you can sell your Squarespace web templates, not only that, you will also learn effective pricing strategies that you can implement to determine the ideal pricing point where it is not to low but also not to high and most essentially making sure that the price is still a competitive price in the market. Lastly, at the end of the course you are also going to learn effective marketing strategies to potentially generate more sales, reach more potential customers or clients, and even increase your brand awareness on social media.\nThings that you can expect to learn from this course:\nLearning the basic fundamentals of Squarespace, getting to know its use cases and features\nLearning how to use Dribbble and Pinterest to get web design inspirations\nLearning how to integrate Squarespace websites with other platforms\nExploring Squarespace dashboard and all features available\nLearning how to build and design an E-commerce store with Squarespace\nLearning how to integrate Squarespace with Printify and add product automatically\nLearning how to add product to E-commerce store manually\nLearning how to connect Squarespace to payment processor\nLearning website testing objectives, such as functionality testing, user experience testing, performance testing, and compatibility testing\nGetting to know several marketplaces where you can sell your Squarespace web template\nLearning effective pricing strategies to find ideal price range while maintaining competitiveness\nLearning effective marketing strategies to promote Squarespace template and generate more sales",
      "target_audience": [
        "People who are interested in building and designing website using Squarespace",
        "Entrepreneur who want to sell Squarespace web templates as their digital products",
        "Business owners who want to create websites for their products or services with no code"
      ]
    },
    {
      "title": "Master the JavaScript Interview + Coding Exercises + More",
      "url": "https://www.udemy.com/course/master-the-javascript-interview-coding-exercises-more/",
      "bio": "Get Ready for your JavaScript Interview. Learn the internals of the JavaScript language.",
      "objectives": [
        "Learn the internals of the JavaScript language.",
        "Get prepared for any JavaScript programming interview question you will have.",
        "Master the JavaScript language broadly and deeply.",
        "Start your JavaScript journey with basics questions every JavaScript developer should know.",
        "Expand your JavaScript knowledge by solving advanced challenges.",
        "Practice well known JavaScript questions types including Q&A.",
        "Watch animations, images or any other media that will help you to understand hard concepts.",
        "Become confident solving any JavaScript programming interview question you will have.",
        "Learn advanced concepts that are not only related to JavaScript but can be very handy."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Course Layout": [
          "Course Layout"
        ],
        "Mixing a thread to the extreme": [
          "Mixing a thread to the extreme - Question",
          "Mixing a thread to the extreme - Question Source Code",
          "Mixing a thread to the extreme - Solution"
        ],
        "Closures Revisited": [
          "Closures Revisited - Introduction and basics",
          "Closures Revisited - Introduction and basics - Source Code",
          "Closures Revisited - Warm up Q&A",
          "Closures Revisited - Warm up Q&A - Source Code",
          "Closures Revisited - Advanced Q&A",
          "Closures Revisited - Advanced QA - Source Code"
        ],
        "Stranger Things": [
          "Stranger Things - Warm up Q&A",
          "Stranger Things - Warm up Q&A - Source Code",
          "Stranger Things - Advanced Q&A",
          "Stranger Things - Advanced QA - Source Code"
        ],
        "Out of Context": [
          "Out of Context - Introduction and basics",
          "Out of Context - Introduction and basics - Source Code",
          "Out of Context - Solutions - The Four Magic Rules",
          "Out of Context - Advanced Q&A",
          "Out of Context - Advanced QA - Source Code"
        ],
        "The Stack of Infinity": [
          "The Stack of Infinity - Question",
          "The Stack of Infinity - Question - Source Code",
          "The Stack of Infinity - Answer",
          "The Stack of Infinity - Possible Solution - Source Code",
          "The Stack of Infinity - Trampoline - Intro - What is Tail Recursive Style?",
          "The Stack of Infinity - Trampoline - Intro - Tail Recursive Style - Source Code",
          "The Stack of Infinity - Trampoline - What is Thunk and Continuation Style?",
          "The Stack of Infinity - Trampoline - Thunk and Continuation Style - Source Code",
          "The Stack of Infinity - Trampoline - Solution",
          "The Stack of Infinity - Trampoline - The Trampoline Solution - Source Code"
        ],
        "Yanny Vs Laurel": [
          "Yanny Vs Laurel - Introduction and basics",
          "Yanny Vs Laurel - Introduction and basics - Source Code",
          "Yanny Vs Laurel - Advanced Q&A",
          "Yanny Vs Laurel - Advanced QA - Source Code"
        ],
        "Add Some Curry": [
          "Add Some Curry - Question",
          "Add Some Curry - Question - Source Code",
          "Add Some Curry - Solution",
          "Add Some Curry - Solution - Source Code"
        ]
      },
      "requirements": [
        "Basics JavaScript knowledge (for example, if statement, while loops and etc..)",
        "Be able to test and play with the JavaScript source code delivered in this course (Optional - Use Codepen for playing with every interview question)."
      ],
      "description": "This course is dedicated for anyone who wants to be well prepared for an upcoming JavaScript interview. The JavaScript programming language is one of the most challenging languages to understand deeply and master this language. Programming interviews can feel sometimes very hard as they are based heavily on the internals of the language. In this course we are going to practice broadly and mainly deeply on JavaScript concepts. We will go over both simple and advanced JavaScript interview questions, and we will also go over different types of JavaScript interview types. For each interview question, you will have to attempt to solve the problem by yourself, and then we will go through the best solutions and most important dive deeply into the concept appeared in the interview question to understand it completely.\nAfter the completion of this course you will be able to understand deeply the JavaScript internals which will give you high confident to take more and more JavaScript interview questions. Moreover, you will gain understanding of the concepts, skills and techniques that are used in JavaScript (and other languages) – some of them are mandatory for any JavaScript developer and some of them can benefit you to solve harder questions simply and easily. Also this course will help you to strengthen your JavaScript knowledge and skills and become better JavaScript developer.\nIn the end of this lecture you will have a chance to extend the level of difficulty and take on harder JavaScript questions that will make you even better, and with time will help you to master the JavaScript programming language.",
      "target_audience": [
        "Anyone who is looking for a job as a JavaScript programmer",
        "Anyone who is looking for a job as a Web developer.",
        "Anyone who wants to bootstrap his JavaScript programming knowledge.",
        "Anyone who wants to understand the JavaScript programming language deeply and broadly.",
        "Anyone who will be interviewing for a JavaScript programming or Web developer job.",
        "Anyone who feels non confident with the JavaScript language.",
        "Anyone who wants to expand his JavaScript skills and knowledge."
      ]
    },
    {
      "title": "How to build a website with WordPress - A Beginners Course",
      "url": "https://www.udemy.com/course/how-to-build-a-website-with-wordpress-a-beginners-course/",
      "bio": "Learn how to create a simple, yet professional website with WordPress and Elementor - Crash course for beginners",
      "objectives": [
        "Create and Build a Simple yet Professional Website with WordPress and Elementor without any previous experience.",
        "Secure your domain name",
        "Learn to select appropriate colors for a website",
        "Utilize a number of Elementor widgets on your web page",
        "Install and Utilise WordPress",
        "Create multiple pages for your website",
        "Create a blog page and sample post",
        "No coding required, simply drag and drop features!"
      ],
      "course_content": {
        "Welcome and Introduction": [
          "Introduction"
        ],
        "Build your website from scratch": [
          "Secure your domain and hosting package",
          "Install WordPress",
          "WordPress overview",
          "Install plugins",
          "Install a template",
          "Elementor overview",
          "Customize menu and footer",
          "Customize the Home page",
          "Customize the About Us page",
          "Customize the Contact Us page",
          "Customize the Services page",
          "Create a Blog page and Post"
        ],
        "Thank you for taking my course!": [
          "Thank you and next steps"
        ]
      },
      "requirements": [
        "No previous experience. This is a course 100% for beginners!"
      ],
      "description": "The Problem: There are many courses that teach you how to build a massive and long website, and for a beginner, this is extremely overwhelming.\n\n\nThe Solution: I was in your shoes at one point. This course covers the basics of WordPress and shows you how to use Elementor to build a website. The course is designed for beginners who know little to nothing about web design.\n\n\nWordPress powers over 455 million websites across the world, and Elementor is the number one website builder that allows you to design a website by simply dragging and dropping elements into your design area. Zero coding experience is needed. If you are very new to web design, know nothing about coding, don’t know where to begin, and you are eager to learn how to build your own website or potentially start a web design business, then I invite you to join me and build a website together. I created this course because many people, like myself, feel overwhelmed by courses that show you how to build this massive and long website, especially when all this is new to you. I truly believe that in order to run, you must first learn how to walk. Taking this into consideration, I designed this course to help you establish a strong foundation in website design without getting overwhelmed.\n\n\nWhy Take This AMAZING Course?\nHighest Rated Instructor Here On Udemy\nComplete beginners course to build a website with WordPress and Elementor\nUse and MASTER The Elementor Page Builder for FREE\nI Am A TOP RATED INSTRUCTOR on Udemy.\nGet a Modern And Amazing Look For Your Website That Will Impress!\nLearn from a self-taught entrepreneur who always masters new and complex subjects (like website building!)\nGet A fully Responsive Website And Mobile Responsive\n\n\nWhat Will I Learn From This Course?\nSetting up your domain and hosting\nCreate Modern,beautiful, and STUNNING Websites!\nCreate Pages With Elementor and Wordpress\nUnderstand how to use templates\nMaster The #1 FREE Page Builder - Elementor\nMaster Wordpress. Create Your Own Website Simply And Easily.",
      "target_audience": [
        "Anyone who wants to learn the basics of building a website with WordPress.",
        "No previous website building experience required.",
        "No technical or coding experience required.",
        "Easy to follow instructions to build a simple website."
      ]
    },
    {
      "title": "Become Fullstack Developer with NextJS SpringBoot Tailwind",
      "url": "https://www.udemy.com/course/become-fullstack-developer-with-nextjs-springboot-tailwind/",
      "bio": "Become fullstack developer by building real world projects using NextJS-14, Springboot-3 and Tailwind CSS",
      "objectives": [
        "You will learn how to setup Tailwind CSS and get started with development",
        "You will learn various concepts of Tailwind CSS by building small projects",
        "You will learn how to setup Tailwind CSS NextJS14 and start with development",
        "You will learn to develop Frontend with NextJS",
        "You will learn to develop REST API with NextJS and MongoDB with Mongoose",
        "You will learn to integrate NextJS Frontend with NextJS based backend REST API",
        "You will learn about the concepts of Springboot 3",
        "You will learn to develop Springboot 3 based REST API with MySQL database using Spring Data JPA",
        "You will learn to integrate NextJS based Frontend with Springboot based backend REST API",
        "You will learn to troubleshoot and debug issues and solve them",
        "You will get the complete source code"
      ],
      "course_content": {
        "Introduction, Installation and Setup": [
          "Course Introduction",
          "About your Instructor",
          "Overview Of Tailwind CSS and How it Differs from Bootstrap",
          "Installing and Setup for Development Environment"
        ],
        "Master Tailwind CSS with Practical Handson Examples": [
          "Overview Of Tailwind CSS and How it Differs from Bootstrap",
          "Setting Up Tailwind CSS the Right Way",
          "How to explore the documentation",
          "Project-1 Align Element at center of the page",
          "Project-2 Utility First by Creating a Card Component",
          "Project-3 Hover Focus And Other states by creating a custom Button",
          "Concept of Responsive Design in Tailwind",
          "Practicals to understand Responsive Design concept for different devices",
          "Project-4 Designing Responsive Card - Part-1",
          "Project-4 Designing Responsive Card - Part-2",
          "Project-4 Designing Responsive Card - Part-3",
          "Variable Styling in Tailwind",
          "Animations Transitions and Translate in Tailwind",
          "Responsive Row Column Layout - Part-1",
          "Responsive Row Column Layout - Part-2",
          "Responsive Navbar - Part-1",
          "Responsive Navbar - Part-2",
          "Responsive Navbar - Part-3",
          "Free Tailwind UI Components"
        ],
        "Fullstack Development with NextJS14 Tailwind CSS and MongoDB with Mongoose": [
          "Creating new next app",
          "Folder structure and working of Next app",
          "Installing MongoDB database and creating database",
          "Installing npm dependencies",
          "Creating NavBar component",
          "Styling the navigation bar with tailwind css",
          "Create the Item List component",
          "Styling the ItemList component - Part-1",
          "Styling the Delete Item button",
          "Styling the ItemList component - Part-2",
          "Create Add New Item Page",
          "Styling the Add Item page",
          "Creating Edit Item dynamic page",
          "Creating and Styling the Edit Item component",
          "Establishing connection with mongodb",
          "Create new mongoose schema for Item model",
          "POST API to create new item and save it into database",
          "GET API to fetch all items created so far",
          "DELETE an item with provided id as url search param",
          "PUT update an item with dynamic id passed in url path",
          "GET details of one item with matching id",
          "Call getAll Items API from Frontend",
          "Displaying the data from API on UI",
          "Testing the Item List functionality and Verifying Server Side Rendering for SEO",
          "Adding state variables and submit handler to Add Item component",
          "Integrating Create Item API with frontend, routing to home on success and test",
          "Integrating Delete item with backend and testing the functionality",
          "Getting the Item ID inside the Edit Page via the dynamic route params",
          "Getting Item Detail from API and passing it to Edit Item Component",
          "Binding the state variables to the form",
          "Calling Update Item API and test the functionality"
        ],
        "Developing SpringBoot 3, Java 17, MySQL based REST API's": [
          "Installing Java and IDE",
          "Installing Postman Tool",
          "Installing MySQL Database Server",
          "Creating SpringBoot project with required dependencies",
          "Importing Project to IDE and Setting JDK",
          "Adding H2 Database Spring Data JPA configuration",
          "Creating the JPA Entity class with different fields",
          "Creating the DTO class for presentation layer",
          "Layered architecture and various packages",
          "Creating the Repository Interface",
          "Creating Controller class",
          "Developing POST API Endpoint",
          "Developing the GET All API endpoint",
          "Developing GET Detail API Endpoint",
          "Developing UPDATE API Endpoint",
          "Developing DELETE API and PathVariable VS RequestParam",
          "Return 204 as status code after deletion",
          "Developing PATCH API Endpoint",
          "Declaring the Service Layer Abstract Methods",
          "Adding Service Impl methods and Integration with Controller",
          "Saving the Data into the Database using Repository",
          "Getting All Data From the Database using Repository",
          "Get Detail from Database using Repository",
          "Full Update in Database using Repository",
          "Partial Update in Database using Repository",
          "Delete data from Database using Repository",
          "Implement Search functionality End to End",
          "Test CREATE and GET ALL API with POSTMAN Tool",
          "Setting Postman Variable and Testing GET Detail API",
          "Testing Search API",
          "Testing Full Update, Partial Update and Delete API",
          "Code Improvement to avoid returning null response",
          "Creating Converter to make code reusable",
          "Testing the complete functionality",
          "Create Database on MySQL DB Server",
          "Profiles in Springboot, Setup MySQL DB Profile",
          "Concept of Spring Profile",
          "Testing All APIs with MySQL Database",
          "Enabling CORS"
        ],
        "Fullstack Development with NextJS14 Tailwind CSS and Springboot3 with MySQL DB": [
          "Recap of NextJS Crud and futher Developing Springboot API",
          "Recap of what has been developed so far",
          "Deleting the API and Mongoose code from Next JS app",
          "Modifying NextJS code to connect to Springboot API to get all Items",
          "Modifying NextJS code to connect to Springboot API for Update Item",
          "Modifying NextJS code to connect to Springboot API for Creating new Item",
          "Modifying NextJS code to connect to Springboot API for Deleting an Item"
        ],
        "Source code": [
          "Code base"
        ]
      },
      "requirements": [
        "Basics HTML, CSS, JavaScript, React, Java"
      ],
      "description": "In this course you will learn about NextJS and Springboot. You will learn to develop Fullstack applications using NextJS Tailwind CSS MongoDB with Mongoose. You will also learn to develop Fullstack application using NextJS-14 and Springboot-3.\nEverything will be explained in a step by step manner and concepts will be implemented in a handson based approach. Source code will be provided.\nEmbarking on a Full Stack Development journey with Next.js, Tailwind CSS, and Spring Boot is not just a technological choice; it's a strategic move toward crafting powerful, scalable, and aesthetically pleasing web applications. Next.js, with its React foundation, ensures a seamless and responsive user experience, optimizing performance through server-side rendering and efficient client-side navigation.\nTailwind CSS complements this synergy by offering a utility-first approach to styling, accelerating the development process while maintaining design consistency. Its flexibility empowers developers to create visually appealing interfaces without sacrificing customization.\nSpring Boot, renowned for its robust backend capabilities, provides a solid foundation for building scalable and secure APIs. The framework simplifies complex tasks, enabling developers to focus on business logic rather than boilerplate code.\nThis trinity of technologies not only streamlines development but also ensures a delightful user experience. Fast, efficient, and secure, this stack caters to the demands of modern web applications. From rapid prototyping to seamless deployment, the combination of Next.js, Tailwind CSS, and Spring Boot is a testament to the future of Full Stack Development. Embrace this powerful trio, and elevate your projects to new heights of innovation and efficiency.",
      "target_audience": [
        "Anyone who wants to become fullstack developer using NextJS and Springboot"
      ]
    },
    {
      "title": "UnderscoreJS - The Master Guide",
      "url": "https://www.udemy.com/course/underscore-master-guide/",
      "bio": "Underscore.JS complete guide - beginner to master UNDERSCOREJS, FUNCTION BY FUNCTION, *ALL 100 FUNCTIONS EXPLAINED*",
      "objectives": [
        "Gain an understanding of all the functions of Underscore and when to use them",
        "Get an example of EVERY (over 100!) Underscore functions, to use as a reference when you need to use it",
        "Become familiar with one of the most popular Javascript libraries",
        "Learn how to use the functions, and how they can help your project",
        "Test your knowledge as you go - Lots of quizzes to test your knowledge and understanding of what you have learnt",
        "Gain another skill to put on your Resume / Curriculum Vitae!",
        "Learn how to manipulate strings, arrays, collections, objects and even functions!",
        "Chaining and Sequencing",
        "Mixins",
        "Templates",
        "Composing",
        "Memorizing",
        "Debouncing",
        "Throttling",
        "Bind",
        "Defer",
        "Cloning",
        "Flattening",
        "And SO MUCH MORE!"
      ],
      "course_content": {
        "Introduction": [
          "Welcome!",
          "Community and Help",
          "Is this course for you?",
          "Why Underscore?",
          "Know these terms",
          "Installing Underscore.JS",
          "Test arrays for the course"
        ],
        "Manipulating Arrays and Collections": [
          "Module Introduction",
          "Arrays and Collections Definition Difference",
          "Iteration - ForEach / Each / ForEachRight",
          "Challenge Yourself - ForEach",
          "Pluck",
          "Mapping Arrays and Collections",
          "Challenge Yourself - Map",
          "Challenge Yourself - Map Solution",
          "First, Last, Initial and Rest",
          "Matching by Condition - Filter",
          "Matching by Condition - Where and FindWhere",
          "Matching by Condition - Find",
          "Reduce and ReduceRight",
          "Shuffle",
          "Sample",
          "Size",
          "IndexOf and LastIndexOf",
          "SortedIndex",
          "FindIndex and FindLastIndex",
          "Min and Max",
          "Reverse",
          "Reject",
          "Every and Some",
          "Contains",
          "Invoke",
          "SortBy, GroupBy, IndexBy, CountBy",
          "ToArray",
          "Partition",
          "Compact",
          "Flatten",
          "Without",
          "Merging Lists with Union, Intersection and Difference",
          "Uniq",
          "Zip and Unzip",
          "Object",
          "Chunk",
          "Range"
        ],
        "Manipulating Functions": [
          "Module Introduction",
          "Bind",
          "BindAll",
          "Partial",
          "Memoize",
          "Delay",
          "Defer",
          "Throttle",
          "Debounce",
          "Once, Before and After",
          "Wrap",
          "Negate",
          "Compose",
          "RestArguments"
        ],
        "Manipulating Objects": [
          "Module Introduction",
          "Reading Properties - Keys, Values and AllKeys",
          "Invert",
          "Create",
          "Functions",
          "FindKey",
          "Extend",
          "ExtendOwn",
          "Pick and Omit",
          "Defaults",
          "Clone",
          "MapObject",
          "ToPath",
          "Has and Get",
          "Property and PropertyOf",
          "Comparing Objects - IsEqual",
          "Comparing Objects - Matcher",
          "Comparing Objects - IsMatch",
          "IsEmpty, isNull, isNaN, isUndefined",
          "Checking Types - IsString, IsBoolean, IsDate, IsNumber",
          "Checking Types - Structures",
          "Checking Types - Utils"
        ],
        "Utility Functions": [
          "Module Introduction",
          "NoConflict",
          "Identity",
          "Times",
          "Constant and Random",
          "Mixin",
          "Iteratee",
          "Escape and Unescape",
          "Result",
          "Now",
          "UniqueId",
          "Template"
        ],
        "Chaining and Functional Programming": [
          "Module Introduction",
          "Our First Chain",
          "How Chaining Works",
          "Challenge Yourself! Chain",
          "Challenge Yourself Solution - Chain",
          "Tap"
        ],
        "Extra Lessons - String Underscore Add-On": [
          "Module Introduction",
          "Installing String Underscore",
          "Number Format",
          "Comparing Strings - Levenshtein",
          "Changing Cases - Capitalize, Decapitalize, SwapCase, Titlelize, Camelize",
          "Checks - StartsWith, EndsWith, IsBlank, Includes",
          "Escaping - EscapeHTML and UnescapeHTML",
          "Manipulation - Classify, Dasherize, Underscore and Humanize",
          "Trimming - Trim, LTrim, RTrim, Clean",
          "Successors - Succ, Pred",
          "Chopping - Chop, Chars",
          "Reversing - Reverse",
          "Counting - Count",
          "URL Friendly - Slugify ** CHECK IT OUT **",
          "Quoting Strings",
          "Repeating Strings",
          "Surrounding Strings",
          "Cleaning Strings - StripTags, CleanDiacritics",
          "Join Strings - Join and Splice",
          "Splitting Strings - Lines and Words",
          "Inserting / Replacing - Insert and ReplaceAll",
          "Mapping Strings - Map",
          "Converting - ToNumber and ToBoolean",
          "Humanizing - ToSentence and ToSentenceSerial",
          "Searching Strings - StrLeft/Right - StrLeftBack/RightBack",
          "Padding Strings - Pad",
          "Comparing As a Human - NaturalCmp"
        ],
        "Conclusion": [
          "Well Done!",
          "BONUS: Other courses!"
        ]
      },
      "requirements": [
        "Prior knowledge of Javascript is assumed. Understanding of arrow functions ES6 concepts"
      ],
      "description": "** UNDERSCOREJS - LEARN and MASTER ALL 100+ FUNCTIONS! **\nWhy is this course for you?\nThis course is the most complete course on Underscore! And probably the most complete course about Underscore available anywhere! Underscore is a huge library, and so is this course!\nThis course will teach you all you need to do to become a master with Underscore.JS, one of the most popular Javascript libraries on the web. It will provide an example of every available function in Underscore, that's over 100+ examples!, in a step by step, function by function method.\nThis course will start at the most basic functions all the way up to the more complex functions.\nI've spent days creating this course for you, and hours researching examples. There are not many examples on Underscore.JS out there, so I've put in all the effort so that you don't need to!\nIt's a one time investment. The course will be updated with more examples and lectures over time!\nThis course has been built in a modular way, so you can either learn the functions one by one, or just the ones that you wish to learn more about. You can still become an expert in Underscore even by following a few modules.\nBy the end of the course, you will become very sufficient with using Underscore.JS. Don't forget, if you are not entirely happy with the course, you have the 30 day Money-Back-Guarantee.\n\n\nWhat's Included in this Course Package?\nUp-to-date HD-Quality videos with the latest version of Underscore.JS\nAn example and explanation of all 100+ Underscore functions!\nFree support in the Q&A\nThis course is for you if...\nYou are a Javascript developer looking to learn how to use Underscore in your everyday coding\nYou already know about Underscore but struggling to understand some of the more complex functions\nYou want to test your existing knowledge of Underscore.JS\nYou want to gain another skill for your Resume or CV\nIf you're serious about becoming an expert at Underscore.Js, then start your journey and master Underscore.Js with this course!",
      "target_audience": [
        "Developers with some prior knowledge of Javascript who are new to Underscore",
        "Developers with some familiarity of Underscore but want to learn more about it"
      ]
    },
    {
      "title": "WordPress Shortcodes Ultimate Advanced Expert",
      "url": "https://www.udemy.com/course/wordpress-shortcodes-ultimate-advanced-expert/",
      "bio": "Become an expert and add scheduled content, animations, private member content & more all without knowledge of coding.",
      "objectives": [
        "Take the skills from the basic Shortcodes Ultimate class to a higher level and become an expert",
        "Become an expert using the Shortcodes Ultimate plugin and create beautiful websites without coding",
        "Add CSS classes to each plugin for even more control",
        "Create member-only content and websites with paid content",
        "Create and add QR codes right from within WordPress",
        "Animate text and images right inside the WordPress post editor",
        "Schedule text to show only on certain days of the year or hours of the day including holidays",
        "Add professional looking lightboxes without any knowledge of HTML or Javascript",
        "Create a Google Map in less than a minute just by typing the central location of the map",
        "Add RSS feeds from any feed site like the New York Times and display it on your website."
      ],
      "course_content": {
        "Introduction to Shortcodes Ultimate Advanced From The Instructor": [
          "Introduction to Shortcodes Ultimate Advanced From The Instructor"
        ],
        "Setting Up the Advanced Features of Shortcodes Ultimate": [
          "The Shortcodes Ultimate Settings Page",
          "Shortcode Ultimate Attribute Cheat Sheet",
          "Saving Shortcode Form Settings With Presets",
          "Editing CSS and Creating Shortcode CSS with the built in CSS Editor",
          "PROJECT: Add 3 shortcodes and create 3 different CSS Classes For Them."
        ],
        "Managing Conent for Users, Paid Members, & Guests": [
          "Guests: Display content to website visitors who are not logged in.",
          "Users and Private Content",
          "Private Content",
          "Members: Make Content Accessible to Members Who Are Logged In Only",
          "Members/Guests Quiz",
          "PROJECT: Create a web page displaying content to logged in & logged out members."
        ],
        "Images and Animations": [
          "Create QR Codes without leaving your WordPress website",
          "Introduction to Animation With Shortcodes Ultimate",
          "Advanced Animation and the Rows Shortcode: Animated buttons",
          "Display Text and Images Inside Beautiful Lightboxes"
        ],
        "Cool Web Design Tricks With Shortcodes Ultimate": [
          "Centering and Distributing Content With Rows",
          "Box Styles",
          "Automatically generating Lorum Ipsem text for quick Dummy Text and Dummy Images",
          "Adding cool tooltips in over 10 different styles",
          "Highlighting Text",
          "Adding labels to display tiny colored notes to users or to display statistics"
        ],
        "Other Cool Tricks With Shortcodes Ultimate": [
          "Get outside content from any website with RSS feeds.",
          "Build Google Maps Of Any Area with Ease"
        ],
        "Adding Scheduled Content To Display on Any Day of the Week or Hours of the Day": [
          "Basic Scheduler",
          "Advanced Scheduler: Display Content on Any Holiday",
          "Schedule Quiz"
        ],
        "Advanced Tips and Tricks With Shortcodes Ultimate": [
          "Adding Shortcodes Ultimate features to Sidebar Widgets",
          "Adding Shortcodes Ultimate Globally Through do_shortcode()"
        ]
      },
      "requirements": [
        "A WordPress website",
        "Basic knowledge of the WordPress administrative back end (www.yoursite.com/wp-admin)"
      ],
      "description": "This class picks up where the basic Shortcode Ultimate class left off and offers video lectures on the more powerful shortcodes to make you a complete expert with this plugin.\nBenefits of this Course:\nCreate the most beautiful web pages that previously only web developers could create without any code.\nTransform your plain WordPress pages and posts into the most exciting web pages just by filling out a simple form for over 50 different shortcodes.\nCombine the features and functionality of over 30 popular WordPress plugins into just one.\nCreate dynamic and awesome looking sidebar widgets with any shortcode from this plugin.\nLearn how to add shortcode features globally to all posts and pages and get the code to add it to your theme or plugins.\n\n\nWhat Kind Of Web Pages Can Be Created With the Shortcodes Explained In This Course?\n\nThe following list is just a partial set of the most advanced and powerful features that you can add to any WordPress page or post:\n\nanimation\nprivate member content\nQR codes\nGoogle Maps\nscheduled content that displays only at certain hours or days of the week or even on any holidays. For example, which your website visitors Merry Christmas on December 25 of every year without coding the website to recognize the date.\ntooltips\nRSS feeds\nlightboxes\ndummy images and text\nmany more\nHow Is This Course Presented?\nI explain in each video lecture how to fully fill out the form for each shortcode and exactly what data you need to enter.\nProjects are available to exercise your knowledge and creativity with each shortcode.\nQuizzes test your knowledge and reinforce the concepts presented.",
      "target_audience": [
        "Web designers who would like to create beautiful web pages without additional coding",
        "WordPress administrators who would like to add spectacular web pages without any knowledge of coding"
      ]
    },
    {
      "title": "React Project Course for Beginners with Redux (2025)",
      "url": "https://www.udemy.com/course/react-project-course-for-beginners-with-redux-2023/",
      "bio": "Mastering React: Build Dynamic Web Applications with Redux - A Beginner's Guide (2025)",
      "objectives": [
        "You will Learn and create a reactjs project on your own",
        "You will learn basics to intermediate level.",
        "Good for Beginners",
        "Step by Step Coarse video"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation and Folder Structure of react app",
          "Navbar",
          "React-router-dom",
          "Footer",
          "LoginContainer",
          "Login Page Container",
          "Login Validation -1",
          "Login Validation - 2"
        ],
        "Dashboard Page": [
          "Storage data Pie Chart dashboardui-1",
          "Storage data Pie Chart dasboard Ui-2",
          "StorageList dynamic",
          "Notification Lists",
          "Ordered Lists"
        ],
        "Product Page": [
          "Product Page UI",
          "Product Page Delete Each item",
          "Product Page Deleteitems on Click CheckBox"
        ],
        "Add Products Page": [
          "Add Product Page UI - 1",
          "Add Product UI - 2"
        ],
        "Account Settings page": [
          "AccountsPage"
        ],
        "Deploy the Code": [
          "Deploy code and run on live server web app"
        ],
        "Complete ReactJs Project Code": [
          "Complete Code File"
        ],
        "Bonus: Most asked ReactJs Interview Question and Answers (Top 50)": [
          "Most Asked Question and Answers"
        ]
      },
      "requirements": [
        "Should know html,css,js,es6 and reactjs",
        "Should have Laptop or PC",
        "Should have ability to learn and practice"
      ],
      "description": "Are you a beginner looking to dive into the world of web development using React and Redux? Look no further! Our comprehensive course, \"Mastering React: Build Dynamic Web Applications with Redux - A Beginner's Guide,\" is designed to provide you with a solid foundation in these popular JavaScript libraries.\n\n\nIn this course, we will take you on a step-by-step journey to understand the fundamental concepts of React and Redux. Whether you're completely new to programming or have some experience with JavaScript, this course is tailored to meet your needs.\n\n\nYou will start by learning the basics of React, including JSX syntax, component structure, and state management. We'll guide you through the process of building interactive user interfaces by creating reusable components and handling events.\n\n\nNext, we'll introduce Redux, a predictable state container for JavaScript applications. You'll explore the principles of Redux, such as actions, reducers, and the single source of truth, and understand how to integrate Redux into your React projects for efficient state management.\n\nThroughout the course, you'll work on hands-on projects that reinforce your understanding and allow you to apply your knowledge in real-world scenarios. By the end, you'll have built multiple web applications, showcasing your newly acquired skills.\nHere's what you'll learn:\n- Setting up a development environment with React and Redux\n- Creating reusable components and understanding component lifecycle\n- Managing application state using React's built-in state management\n- Integrating Redux into your React projects for centralized state management\n- Handling asynchronous actions and API requests with Redux middleware\n- Routing and navigation using React Router\n- Building responsive and mobile-friendly web applications with React\n- Optimizing performance and debugging techniques in React applications\n- Deploying React and Redux applications to production\n\n\nTopics covered:\n- useState and useEffect\n- Api Calling\n- Login Validation\n- component based styling (scss)\n- Reusable Component\n- map , filter and many more array methods\n- Charts and graphs\n- CRUD operations: Create, Read, Update and Delete\n- React Router\n- Forms handling\n- Redux\n- Checkbox based delete delete the Items\n- Top 50 Interview Question and Answer ( Bonus )\nJoin us on this exciting journey to become a proficient React and Redux developer. Enroll now and unlock the power of building dynamic web applications with ease!",
      "target_audience": [
        "Front end developer",
        "Front end reactjs developer",
        "reactjs developer",
        "javascript developer"
      ]
    },
    {
      "title": "Build SaaS Apps with Laravel, Paddle, and n8n AI Automation",
      "url": "https://www.udemy.com/course/build-saas-apps-with-laravel-paddle-and-n8n-ai-automation/",
      "bio": "Learn to build SaaS apps using Laravel 12, Vue 3, Shadcn, Inertia 2, Paddle for payments, and n8n for no-code automation",
      "objectives": [
        "Build full-featured SaaS applications using Laravel, Inertia.js, and Vue.js with real-world project structure.",
        "Set up and manage subscription-based billing using Paddle, including handling webhooks and integrating Paddle's SDK and APIs.",
        "Create rich, collaborative tools like a Notion-style text editor using the TipTap headless editor.",
        "Design and implement automated workflows and AI agents using n8n, including real-time triggers and external API integration.",
        "Securely integrate Laravel with n8n using Header Auth and JWT tokens for protected and scalable automation.",
        "Recording User Reading Time like Medium"
      ],
      "course_content": {
        "Paddle": [
          "Setting Laravel Project",
          "Introduction to Paddle Interface",
          "Setting Admin and User Routes",
          "Integrating Paddle SDK",
          "Setting Paddle Webhooks",
          "Adding Subscription Cancellation Feature",
          "Introduction to Paddle Simulation",
          "Handling Past Due payment and Setting Payment Method Update Mechanism",
          "Setting Subscription Pausing and Resuming"
        ],
        "TipTap": [
          "Creating Rich Text Editor",
          "Adding Code Blocks and Image Insertion Features"
        ],
        "Preparing Backend for Blogs and Users": [
          "Create Blog Page For Admin",
          "Saving Blogs in the Database",
          "Admin Blogs Table",
          "View and Delete Blogs",
          "Display Users Table",
          "Protecting Blogs",
          "Recording User Reading Time"
        ],
        "Automation with N8N": [
          "N8N Installation",
          "Introduction to Workflows",
          "Introduction to Nodes",
          "Integrating with Airtable",
          "Introduction to N8N Webhooks",
          "AI models with Webhook",
          "Webhook Authentication",
          "Integrating N8N with Laravel"
        ],
        "Final Capstone Project": [
          "Project Introduction"
        ]
      },
      "requirements": [
        "A basic understanding of Laravel (routes, controllers, models, migrations)",
        "Familiarity with Vue.js fundamentals (components, props, basic reactivity)",
        "Basic knowledge of Inertia.js and how it connects Laravel and Vue",
        "No prior experience with Paddle, n8n or TipTap is required — both will be taught from the ground up."
      ],
      "description": "Do you want to build and monetize your own SaaS product using modern tools like Laravel, Vue.js, Inertia, Paddle, and automation via n8n?\nIn this hands-on course, you’ll learn how to build a fully functional, subscription-based blogging platform from scratch. We’ll walk through the entire development process of a modern SaaS application—starting from setting up the Laravel backend, to building a dynamic frontend with Vue.js and Inertia.js, and finally integrating Paddle for user subscriptions and payments.\nYou’ll create a real-world blogging app where users can register, subscribe to premium plans, create and edit rich blog posts using a Notion-style editor, and automate workflows using n8n (such as sending emails or notifications).\nWhether you're a backend developer looking to expand into full-stack development or an indie developer aiming to launch your own paid app, this course is the perfect guide.\nWhat You’ll Build\nBy the end of this course, you’ll have a complete SaaS blogging platform that includes:\nUser roles: Admin and Regular Users\nRich-text blog editor powered by TipTap (Notion-style)\nAuthentication, profile management, and plan-based access\nSubscription payments using Paddle (including webhooks)\nAdmin dashboard for managing users and content\nAutomation using n8n: Welcome emails, subscription alerts, Blog Summerization using AI, etc.\nSecure integration between Laravel and n8n using JWT/Auth headers\nResponsive and modern UI using Shadcn and Tailwind CSS\nWhat You Will Learn\nBuild SaaS-style apps using Laravel, Vue, and Inertia.js\nIntegrate Paddle for handling subscriptions and payments\nCreate and manage user roles and permission-based access\nImplement a Notion-style rich text editor using TipTap\nSet up and secure workflows using n8n and Laravel\nHandle Paddle webhooks for dynamic subscription management",
      "target_audience": [
        "Backend developers looking to learn full-stack development with Vue and Inertia",
        "Developers or freelancers interested in monetizing apps using Paddle’s subscription billing system",
        "Entrepreneurs and indie hackers aiming to launch their own SaaS products quickly",
        "Anyone curious about no-code/low-code automation and how to integrate n8n with Laravel",
        "Developers who want to build apps like Notion, with rich text editing using TipTap"
      ]
    },
    {
      "title": "The Complete HTML & CSS Practice Test With Explanations 2023",
      "url": "https://www.udemy.com/course/the-complete-html-css-practice-test-with-explanations-2020/",
      "bio": "HTML & CSS Practice Test | Helpful for interviews and exam preparation | All topics of HTML & CSS covered + explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Hypertext Markup Language (HTML) and CSS (Cascading Style Sheets) are standard markup languages for formatting and styling documents, that are displayed in the web browser. Nowadays, every web developer should know the basics of HTML and CSS.\n\n\nBut this is still not enough: the new version of HTML provides several features, that are useful when we would like to create web applications. If you know WELL the features of HTML and HTML5, you would like to solve several issues, that you may not be able to.\n\n\nSome examples of the course HTML coverage:\nbrowsers in general\ngeneral HTML elements\nattributes\nforms\nlists, tables\nformatting elements, texts\nIframes\nquotations\nthe new features of HTML5\n\n\nSome examples of the course CSS coverage:\nSelectors, preference\nBackgrounds, shadows, overflow, tables\nSizing, Positioning\nFonts\nResponsive web design\nAnimations\nFlexbox & Grid\nCommon situations, with simple solutions\n\n\nThis course is designed for everybody, who would like to learn about HTML and CSS-there are easy and simple questions, and advanced also. The course uses a practice-orientated approach: we try to focus on these topics and elements, that are common in real situations. The course mainly uses a quiz-based approach, for testing yourself, but the found code snippets can be downloaded fully after practicing.\n\n\nWhat does this course offer?\nquestions with detailed explanations, in a well-organized manner\nall topics of HTML and CSS are covered\ncommon situations, with simple solutions\nthe new features of HTML5 are also included\nfor beginners and experienced developers - for improving yourself",
      "target_audience": [
        "Beginner in HTML and CSS, who wants to become a professional",
        "Anyone, who already knows a little HTML and CSS, but would like to improve their skills",
        "Anyone, who knows HTML well, but would like to learn something new and interesting",
        "Anyone who is preparing for interviews",
        "Those who are preparing for exams"
      ]
    },
    {
      "title": "Google Maps JavaScript API for beginners",
      "url": "https://www.udemy.com/course/google-maps-javascript-api-for-beginners2/",
      "bio": "Google Maps JavaScript API is a guide for beginners to create Google Maps Application for Web and Mobile Devices.",
      "objectives": [
        "able to setup google map apis",
        "able to create Google map for devices",
        "able to create Google map in your websites",
        "control the maps UI events"
      ],
      "course_content": {
        "Introduction and About Instructors": [
          "About Course and Instructor"
        ],
        "Installing Netbeans": [
          "Navigating and Downloading Netbeans IDE",
          "Installing Netbeans 8.0.2"
        ],
        "Getting Started with Google Map API": [
          "Introduction to Google Map JavaScript API",
          "Obtaining API Key",
          "Initialize a Simple Map",
          "Loading Google Map API",
          "Initializing Google map",
          "Run Simple Google Map",
          "loadScript function with mapoptions object",
          "Adding Button event to Load Google Map",
          "Using input element for locating location coordinates in Google Map"
        ],
        "Developing for Mobile Devices": [
          "Making Google Map Devices compatible",
          "Alert to check Device compatibilities",
          "Using meta tag for Android and IPhone Devices compatibility"
        ],
        "Localization": [
          "Google map for Language Localization",
          "Controlling the versions of Google Map"
        ],
        "Map Controls": [
          "Map control overview",
          "Disable Default UI control",
          "Enabling with Map Control Options",
          "Zoom Control options",
          "Displaying map with Map and Zoom controls options",
          "Control Positioning in Map"
        ],
        "Events in Google Map": [
          "Accessing arguments in UI events",
          "display marker on mouse click in particular location",
          "Practical : Placing Markers from input type select"
        ],
        "Map Types in Google Map": [
          "Basic Map Types",
          "Basic Map Types continue.....",
          "Global and local map object",
          "Rotate map to 45 degree imaginary"
        ],
        "Signed - In Maps": [
          "Sign in to Google map with gmail account",
          "Testing Google Signed in Map",
          "Testing Google Map Sign in and Android Device"
        ],
        "Info Window": [
          "Save to Google Map with Info Window",
          "Info Window Output"
        ]
      },
      "requirements": [
        "HTML5 and JavaScript"
      ],
      "description": "Did you want to integrate Google Map in your Websites or Mobile application like Android,IOS and don't no how to integrate and create programs in Google Map by using Google Map JavaScript APIs.\n\"This is a perfect startup guide for YOU\"\nThis conceptual Course is designed to let you quickly start exploring and developing applications with the Google Maps API. This 45 minute tutorial contains videos with complete explanation of Google Map APIs and guide you from the scratch to create google map application and integration of google map apps in your websites or Android / IOS application.\nThis course structured in a Video format tutorial and at the end of each section source code is included for future reference.\nTake this course if you want to have a good startup in Google Map JavaScript API or want to integrate Google Map in your Websites/Android/IOS apps.",
      "target_audience": [
        "This is course is for newbies who are interested in integrating Google maps APIs in Desktop or Mobile devices environment."
      ]
    },
    {
      "title": "Build a Modern Full-Stack Web App Form with Flask and SQLite",
      "url": "https://www.udemy.com/course/build-a-modern-full-stack-web-app-form-with-flask-and-sqlite/",
      "bio": "Create Responsive, Data-Driven Web Applications Using Python, Flask, HTML, CSS, Bootstrap, JavaScript and SQLite",
      "objectives": [
        "Understand Flask Framework Basics: Describe the core concepts and features of the Flask web framework.",
        "Set Up Development Environment: Install and configure Flask, SQLite, and other necessary tools for web development.",
        "Create a Flask Project Structure: Organize and structure a Flask project following best practices for scalability and maintainability.",
        "Design a Responsive Frontend",
        "Configure Flask Application: Configure Flask applications for development",
        "Design a Responsive Frontend: Use HTML, CSS, and Bootstrap to create a responsive and user-friendly web form interface.",
        "Implement Client-Side Validation: Apply JavaScript to perform client-side form validation for enhanced user experience.",
        "Handle Form Submissions: Capture form data and send it to the server using AJAX and Flask routes.",
        "Set Up SQLite Database: Initialize and configure an SQLite database for storing form submissions.",
        "Create Database Tables: Define and create database tables to store and manage user data.",
        "Manage Cross-Origin Requests: Configure Cross-Origin Resource Sharing (CORS) to handle secure cross-origin requests.",
        "Develop API Endpoints: Create RESTful API endpoints with Flask to manage form data submissions and retrievals.",
        "Handle Errors Gracefully: Implement error handling in Flask to manage and respond to client and server-side errors."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Overview of Python",
          "Overview of Flask Framework",
          "Best Practices for Flask Project Layout",
          "Understanding SQLite Databases",
          "Benefits of Using SQLite in Flask Applications"
        ],
        "Setting Up the Development Environment": [
          "Python Installation (Windows)",
          "What are virtual environments",
          "Create and activate a virtual environment (Windows)",
          "Python Installation (MacOS)",
          "Create and activate a virtual environment (MacOS)",
          "Installing Flask",
          "Installing Visual Studio Code (Text Editor)",
          "Create a minimal Flask Application",
          "Running a Flask App",
          "Download and Install SQLiteStudio",
          "Modifying the minimal app into a contacts form app",
          "Installing and Configuring CORS",
          "Importing more modules",
          "Creating the function to initialize the database",
          "Configuring Routes and Functions",
          "Creating the template : Part 1",
          "Creating the template : Part 2",
          "Creating the template part 3",
          "Running the application",
          "Viewing the data stored in the database",
          "Project Files"
        ]
      },
      "requirements": [
        "Understanding of Python syntax and programming concepts",
        "Basic knowledge of HTML for structuring web content.",
        "Understanding of CSS for styling web pages.",
        "Familiarity with JavaScript basics, including syntax, variables, and functions.",
        "Understanding of how to use JavaScript for simple client-side interactions.",
        "A computer (Windows, macOS, or Linux) capable of running a text editor",
        "A stable internet connection for downloading necessary software",
        "A code editor such as Visual Studio Code, Sublime Text, or an integrated development environment (IDE) like PyCharm."
      ],
      "description": "Welcome to \"Build a Modern Full-Stack Web App Form with Flask and SQLite\"! This  course is designed to equip you with the skills and knowledge required to create dynamic, data-driven web applications using Flask, a popular Python web framework, and SQLite, a lightweight and efficient database engine.\nCourse Overview:\nIn today's digital age, the ability to build and deploy full-stack web applications is a highly sought-after skill. Whether you are an aspiring web developer or a seasoned programmer looking to enhance your skillset, this course offers a deep dive into the practical aspects of web development. By the end of this course, you will be able to design, develop, and deploy a fully functional web application form that seamlessly integrates the frontend and backend.\nWhat You Will Learn:\n1. Introduction to Flask and SQLite:\nGet started with Flask, understanding its core concepts and why it is a go-to framework for Python web development.\nLearn about SQLite, its advantages, and how it integrates with Flask to provide a robust backend solution.\n2. Setting Up Your Development Environment:\nStep-by-step guidance on setting up your development environment, including installing Flask, SQLite, and other essential tools.\nBest practices for organizing your project structure for scalability and maintainability.\n3. Building the Backend:\nCreate and configure a SQLite database to store user data securely.\nDevelop API endpoints with Flask to handle form submissions and database interactions.\nImplement data validation and error handling to ensure the integrity and reliability of your application.\n4. Designing the Frontend:\nDesign a user-friendly and responsive web form using HTML, CSS, and Bootstrap.\nImplement client-side validation to enhance user experience and reduce server load.\nIntegrate JavaScript to handle dynamic behaviors and interactions on the frontend.\n5. Ensuring Secure Cross-Origin Requests:\nUnderstand the importance of Cross-Origin Resource Sharing (CORS) in web development.\nConfigure your Flask application to securely handle cross-origin requests, enabling seamless communication between your frontend and backend.\nWhy Take This Course?\nThis course offers a hands-on, project-based approach to learning, ensuring that you gain practical experience by building a real-world application. You will not only learn the theoretical aspects of web development but also apply them in practice, reinforcing your understanding through coding exercises and projects.\nBy the end of this course, you will have a complete, functional web application form that can be adapted and expanded for various use cases, from simple contact forms to complex data entry systems. This project will serve as a valuable addition to your portfolio, showcasing your ability to build modern, full-stack web applications.\nWho Is This Course For?\nAspiring Web Developers: Gain a solid foundation in web development with Flask and SQLite.\nExperienced Programmers: Enhance your skillset by learning to build full-stack applications.\nTech Enthusiasts: Explore the exciting world of web development and create your own applications.\nJoin us on this journey to become a proficient full-stack web developer. Enroll now and start building your own modern web applications with Flask and SQLite!",
      "target_audience": [
        "Aspiring Web Developers",
        "Entry-level developers seeking to enhance their knowledge of Flask and SQLite.",
        "Python developers interested in expanding their skillset to include web development using Flask.",
        "Developers with experience in backend development who want to learn how to integrate their work with frontend technologies.",
        "Frontend developers who want to gain a better understanding of backend processes and how to connect their frontend code to a backend server.",
        "Developers looking to become full-stack developers by learning backend development with Flask.",
        "Individuals with a passion for technology and web development who enjoy learning new skills and building personal projects.",
        "Hobbyists who want to create their own web applications and understand the full development lifecycle.",
        "Students studying computer science or related fields who want to supplement their academic learning with practical, real-world projects."
      ]
    },
    {
      "title": "PHP from the ground up : Fundamentals",
      "url": "https://www.udemy.com/course/php-from-the-ground-up-fundamentals/",
      "bio": "The journey to become a PHP programmer begins right here",
      "objectives": [
        "Build a basic web application",
        "Understand how to use php documentation",
        "Set up your local environment",
        "Publish your php website to the remote web server / host"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Local environment": [
          "Web server",
          "PHP Web Server on Windows with XAMPP",
          "Virtual Host on Windows with XAMPP",
          "PHP Web Server on Mac OS X with MAMP",
          "Virtual Host on Mac OS X with MAMP (free version)",
          "Virtual Host on Mac OS X with Mamp Pro",
          "PHP Web Server on Ubuntu with XAMPP",
          "Virtual Host on Ubuntu with XAMPP",
          "Which PHP Editor?"
        ],
        "Syntax": [
          "PHP Syntax",
          "Variables",
          "Variable expressions",
          "Variables and string",
          "Constants",
          "Type juggling"
        ],
        "Arrays": [
          "Defining array",
          "Getting items from the beginning and end of the array",
          "Adding to array (Part 1)",
          "Adding to Array (Part 2)",
          "Removing items from array",
          "Sorting arrays",
          "Counting items in array",
          "Searching array",
          "Mapping array",
          "Filter array"
        ],
        "Superglobals": [
          "Superglobals",
          "GET",
          "POST",
          "COOKIE (Part 1)",
          "COOKIE (Part 2)",
          "SESSION (Part 1)",
          "SESSION (Part 2)",
          "REQUEST",
          "SERVER",
          "FILES",
          "ENV"
        ],
        "Operators": [
          "Arithmetic Operator",
          "Assignment Operator",
          "Comparison Operator",
          "Incrementing / Decrementing Operators",
          "Logical Operators",
          "String Operators",
          "Array Operators"
        ],
        "Conditional statements": [
          "If / else / elseif",
          "Switch"
        ],
        "Functions": [
          "What functions are",
          "Custom functions",
          "Callable / Closure",
          "Global, parent and private scope (Part 1)",
          "Global, parent and private scope (Part 2)",
          "Function argument list",
          "Constant and Superglobal scope (Part 1)",
          "Constant and Superglobal scope (Part 2)",
          "Return statement (Part 1)",
          "Return statement (Part 2)",
          "References (Part 1)",
          "References (Part 2)",
          "Variable functions",
          "Built in functions (Part 1)",
          "Built in functions (Part 2)",
          "Built in functions (Part 3)",
          "Explode and Implode",
          "List",
          "New lines and floats",
          "String functions (Part 1)",
          "String functions (Part 2)",
          "Mail function (Part 1)",
          "Mail function (Part 2)",
          "Includes (Part 1)",
          "Includes (Part 2)"
        ],
        "Iterators": [
          "While",
          "Do while",
          "For",
          "Foreach",
          "Loop controls"
        ],
        "Project": [
          "Project setup",
          "Layout",
          "Slicing",
          "Configuration",
          "Request",
          "Mod rewrite",
          "Template and slider",
          "Meta tags",
          "Dynamic slider",
          "Active navigation",
          "Form structure",
          "Departments",
          "Post array",
          "Validation messages",
          "Validation",
          "Display validation and sticky form fields",
          "Send email"
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS would be useful, but not essential",
        "Basic knowledge of how to use computer"
      ],
      "description": "This is the Season 1 of the series of courses on how to become a PHP programmer.\nIn this season we will cover the absolute basics and learn how to program using Procedural PHP in order to build a simple website.\nDuring this series we will learn how to:\nSet up local environment (install all required software on your computer)\nUse PHP documentation to learn about what PHP offers\nLearn basic programming terminology and PHP syntax\nPublish the completed project to the web server\nThis course is for those who want to learn new skill and take their first step in web programming with PHP. It will give you the solid understanding of basic concepts and prepare you for Season 2 where we will discover Object Oriented Programming (OOP) with PHP.",
      "target_audience": [
        "Anyone with NONE or very basic knowledge of PHP",
        "Web designers who want to learn server side programming",
        "Anyone who wants to take first step into the world of PHP Programming"
      ]
    },
    {
      "title": "Html and CSS complete course for beginners",
      "url": "https://www.udemy.com/course/html-and-css-complete-course-for-beginners/",
      "bio": "Learn Everything You Need To Know About HTML And CSS",
      "objectives": [
        "Learn how to Create a Website with HTML and CSS",
        "Solid Understanding of Html and CSS Programming Language",
        "Working with Borders, Margins, Links, Float and Padding in CSS",
        "Building a Responsive Website From Scratch",
        "HTML class and CSS head styling",
        "Inline HTML elements",
        "Creating Google search page with html and CSS"
      ],
      "course_content": {
        "Setting working environment": [
          "How to set working environment"
        ],
        "Introduction to Html and CSS": [
          "Introductions to Html and CSS"
        ],
        "CSS Head and Styling": [
          "CSS Head Styling"
        ],
        "Html heading and text formatting": [
          "Html heading and text formatting"
        ],
        "Project 1": [
          "Building Google Search Page"
        ],
        "Proper html layout": [
          "Proper html layout"
        ],
        "Block and Inline elements": [
          "Block and Inline elements"
        ],
        "Padding and Margin": [
          "Padding and Margin"
        ],
        "Html Button": [
          "Html Button"
        ],
        "Working with Image, Audio and Video": [
          "Working with Image, Audio and Video"
        ]
      },
      "requirements": [
        "Passion to learn"
      ],
      "description": "The HTML and CSS Complete Course for Beginners is designed to provide you with a solid foundation in front-end web development. Whether you are a complete novice or have some basic understanding, this course will empower you with the knowledge and skills necessary to create beautiful and responsive web pages.\nIn this course, you will start by learning the fundamentals of HTML (Hypertext Markup Language) and CSS (Cascading Style Sheets). HTML is the building block of every webpage, defining its structure and content, while CSS is responsible for the visual presentation and layout. You will dive into HTML tags, elements, attributes, and their usage, mastering the art of creating structured web documents.\nNext, you will explore CSS styling techniques, including selectors, properties, and values. You will learn how to apply colors, fonts, backgrounds, and borders to enhance the visual appeal of your web pages. You will also discover the power of CSS layouts to create flexible and responsive designs that adapt to different screen sizes and devices.\nThroughout the course, you will work on hands-on exercises and projects to apply your newfound knowledge. You will build multiple web pages, incorporating various HTML elements and CSS styles. By the end of the course, you will have a portfolio of well-designed web pages that showcase your proficiency in HTML and CSS.\nKey Topics Covered:\nIntroduction to HTML: Tags, Elements, and Attributes\nHTML Document Structure and Semantics\nWorking with Text, Links, Images, and Lists\nHTML Tables and Forms\nIntroduction to CSS: Selectors and the Box Model\nCSS Styling: Colors, Fonts, Text Properties, and Backgrounds\nCSS Layouts: Floats, Flexbox, and Grid Systems\nResponsive Web Design and Media Queries\nCSS Transitions, Animations, and Transformations\nCSS Best Practices and Optimization Techniques\nCourse Benefits:\nGain a strong foundation in HTML and CSS for web development.\nLearn to create well-structured and visually appealing web pages.\nUnderstand the principles of responsive web design.\nDevelop the ability to customize the appearance and layout of web pages.\nAcquire practical skills through hands-on exercises and projects.\nReceive guidance and support from experienced instructors.\nBuild a portfolio of web pages to showcase your skills to potential employers or clients.\nPrerequisites: No prior knowledge of HTML or CSS is required for this course. Basic computer literacy and familiarity with web browsing are recommended.\nWho Should Enroll:\nBeginners with no prior experience in web development\nStudents interested in learning HTML and CSS from scratch\nAspiring web designers and front-end developers\nProfessionals looking to expand their skill set in web development\nEmbark on your journey into the world of web development with the HTML and CSS Complete Course for Beginners. Enroll now and unlock the creative possibilities of building visually stunning web pages!",
      "target_audience": [
        "Complete beginners",
        "Any person that want to build and edit their website",
        "Any person who want become a freelance web developer"
      ]
    },
    {
      "title": "Complete React.js Web Guide: From Beginner to Master",
      "url": "https://www.udemy.com/course/complete-reactjs-web-guide/",
      "bio": "Master core React principles with easy practical guide, incl. hooks, REST API, authentication, routing and many more!",
      "objectives": [
        "Create a React website from scratch",
        "Understand the basics of Next JS",
        "Use React Context and React Hooks",
        "Create your own custom Hooks",
        "Understand the basics and Integrate REST APIs in the project",
        "Implement user authentication in the website",
        "Fetch and show data, filter by categories",
        "Build your own components and use open source packages"
      ],
      "course_content": {
        "1. Introduction": [
          "Introduction",
          "What we will build"
        ],
        "2. React principles": [
          "Environment setup",
          "Initialize a project",
          "Typescript vs. Javascript",
          "JSX explained",
          "Basics of HTML & CSS",
          "Understanding React Components",
          "Component Props",
          "Component State",
          "useEffect Explained",
          "Introducing Git"
        ],
        "3. Building Landing Page": [
          "Figma Overview",
          "Creating Header Component",
          "File Conventions in Next",
          "Introducing SASS",
          "Creating Button Component",
          "Using Next Images",
          "Making Layout Responsive",
          "Creating Custom Hook",
          "Building Responsive Header",
          "Adding Highlights Section",
          "Adding Map Section",
          "Building Footer: Part 1",
          "Building Footer: Part 2"
        ],
        "Authentication Modals": [
          "Building Modal Layout",
          "Using React Context",
          "Styling Modal",
          "Building Input Component",
          "Sign In Form",
          "Adding Sign In Form Footer",
          "Create Account Form",
          "Building Checkbox Component",
          "Getting Form Values"
        ],
        "Website Routing": [
          "Routing in Next.js",
          "Building FAQ Screen",
          "Adding Links in Header",
          "Adding Links in Footer"
        ],
        "Building Listings Page": [
          "Redirecting when Authenticated",
          "Implementing Tags",
          "Building Card Component",
          "Handling Different Card Icons",
          "Handling Card Click Events",
          "Filtering Listings"
        ],
        "Building Settings Page": [
          "Building Settings Page",
          "Highlighting Header Link"
        ],
        "Introduction to REST APIs": [
          "REST APIs Explained",
          "HTTP Methods Explained",
          "Overview of Listicle API",
          "Making Http Requests"
        ],
        "Integrating Auth APIs": [
          "Authentication Form Validation",
          "Error Handling",
          "Storing Auth Token",
          "Creating useUser Hook",
          "Higher Order Component (HOC): Protected Route",
          "Authentication Check Fixes"
        ],
        "Service Page UIs": [
          "Building Service Details Page",
          "Adding New Listing Page",
          "Image Upload Input",
          "Custom Styles for Image Uploader",
          "Reusing Input and Button",
          "Using Textarea",
          "Using React Dropdown Package"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript, HTML and CSS would be beneficial"
      ],
      "description": "Want to become a web developer and master one of the most popular and demanded frameworks for it? Learn everything you need to know about React.js? This course is for you!\n\n\nThis course covers all the topics that you need to know to build enterprise websites with all high-demand features.\n\n\nWant to learn about Next.js and Routing? Covered. Learn the most important React hooks and create your own custom hooks? Sure! Use REST APIs to communicate with servers? Included. Does it include User Authentication? Of course!\n\n\nWe'll start by mastering the fundamentals of React, including JSX, props, state and styles. And of course, hooks will be used for the reusable functional components. We will learn the basics of git and the source code will be provided in git provided for each section, so you can follow the code there as well. The course will cover creating many different reusable components which will be reused in the website included in the course, as well as you can use them for your own personal projects later.\n\n\nReact.js is a great choice for developing websites as it is highly demanded in the industry and offers solutions for every kind of task. There are 20mln downloads of react framework every week!",
      "target_audience": [
        "Beginner developers eager to learn website development with React"
      ]
    },
    {
      "title": "Modern Web Design Patterns in Angular 8",
      "url": "https://www.udemy.com/course/modern-web-design-patterns-in-angular-8/",
      "bio": "An overview of enterprise-ready, modern web development with examples showing popular Angular concepts and strategies",
      "objectives": [
        "How TypeScript differs from JavaScript",
        "Define a component's application logic inside a class to interact with the view",
        "Leverage core Angular fundamentals to build dynamic templates",
        "Utilize NgModules to achieve application scalability and organization",
        "Implement reactive forms and template-driven forms",
        "Add routing and navigation guards to your web application",
        "Optimize your application and hosting it on AWS"
      ],
      "course_content": {
        "Getting to Know Angular": [
          "The Course Overview",
          "What Is Angular?",
          "Understanding TypeScript",
          "The Angular CLI",
          "Generating a Project",
          "Test your knowledge"
        ],
        "Deep Dive into Components": [
          "Introduction to Components",
          "Component Styling",
          "Component Class",
          "Data Binding and Conditionals",
          "Test your knowledge"
        ],
        "Creating Effective Templates": [
          "Class, Style, and Attribute Binding",
          "Loops",
          "Pipes",
          "Directives",
          "Test your knowledge"
        ],
        "Organizing Your App with NgModules": [
          "NgModules",
          "Feature Modules",
          "Services"
        ],
        "Productivity with Forms": [
          "Introduction to Forms",
          "Template-Driven Forms",
          "Reactive Forms",
          "Form Validation",
          "Test your knowledge"
        ],
        "Defining Application Routes": [
          "Defining Routes",
          "Route Resolvers",
          "Navigation Guards",
          "Lazy Loading Feature Modules",
          "Test your knowledge"
        ],
        "Deploying Your App to the Web": [
          "Using Express.js and Node.js to Serve Your Application",
          "Preparing the Application for Production",
          "Deploying to Amazon Web Services",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "This course is divided into multiple sections, each one presenting a fundamental aspect of the popular Angular framework. The topics covered will provide the knowledge and skills you'll need to create a professional and sophisticated modern web application. The course takes a step-by-step approach while providing complete and helpful explanations. By the end of the course, you will be able to understand and implement advanced programming concepts in your own projects."
      ],
      "description": "Angular is one of the largest and most widely used frameworks for front-end and full-stack web development; the Angular community is very eager to get hands-on with its latest features. Design patterns allow for a structured and more intuitive way to build applications that are modular, highly scalable and fault-tolerant.\nThis course will serve as a practical and insightful journey through the most valuable design patterns in use, and provides clear guidance on how to use them effectively in Angular. You will explore the best ways to work with Angular and how to use it to achieve the stability and performance required in today's web development world. You'll get to know best practices to improve your productivity and your application's code base.\nBy the end, you’ll be capable using Angular 8 (and future versions) to build better applications that are scalable and high-performing.\nAbout the Author\nDavid Acosta is a professional software developer with a Bachelor of Science degree in Information Technology Management and more than three years' experience in web development. As a developer for CollaborateMD Inc., David develops web-based medical billing and practice management software services for independent practices and hospitals. His work mainly focuses on JavaScript, TypeScript, and Java-based technologies such as all the versions of Angular right up to Angular 8, Spring, Swing, and JQuery. He also has extensive knowledge of many other libraries and frameworks such as Laravel, React.JS, Vue.js, Ruby on Rails, Bootstrap, and more.",
      "target_audience": [
        "Angular web developers who want to improve their skill set and increase the performance of their apps will find this course beneficial."
      ]
    },
    {
      "title": "Learn React In Depth (2024 Edition)",
      "url": "https://www.udemy.com/course/react-in-depth/",
      "bio": "Learn React In Depth With Learning Latest Tech Stacks like Redux, MUI, Deployment, Docker, Typescript & More",
      "objectives": [
        "Learn React In Depth Without Wasting 100 Hours",
        "Learn the Essentials and Advance concepts for building real world applications",
        "Become a Frontend Export With Managing State Dynamically",
        "Learn the fastest growing library, React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Problems With Traditional Approach (Without React)",
          "Why Use React? What does it Solves?",
          "Pre-Requisites"
        ],
        "Diving Into React's Core Concepts In Depth": [
          "Components",
          "Working with JSX",
          "The Rules Of Using JSX",
          "Creating your first React App",
          "Creating First Component",
          "Dynamic Rendering With Expressions",
          "Rendering Lists With React",
          "Using Props",
          "The children With Props",
          "Events",
          "What is State? A Core of React",
          "Using a Hook, useState",
          "UseState In Depth",
          "Rendering Concept Of React",
          "What is Really A State?",
          "Using State With React's Hook",
          "useState In-Depth"
        ],
        "Example - Form handling": [
          "Introduction to Module",
          "Designing UI",
          "Handling Form Data With useState Hook",
          "Creating a Dynamic Form Handler"
        ],
        "Hooks - Manage State Effectively and Efficiently": [
          "Introduction to Hooks",
          "Introduction to Effect Hook (UseEffect)",
          "How Effect Hook Works, Cleanup Functions",
          "Lifecycle Methods With Hooks"
        ],
        "Example - Fetch Data From API with Hooks": [
          "Introduction",
          "Fetching Data from an external API",
          "Store and Display Data",
          "Fix UI and Finalize Project"
        ],
        "Advanced Hooks": [
          "useRef Hook",
          "useRef In Depth",
          "useReducer Hook To Manage Complex States",
          "useReducer In Depth!"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge is required",
        "No past present React knowledge is required"
      ],
      "description": "Unlock the power of React and elevate your Full Stack Web Development skills with our comprehensive course!\nAre you ready to dive deep into the world of React and take your web development expertise to the next level? Join me, a seasoned Full Stack Developer and Educator on YouTube, as I guide you through the intricacies of React in this all-encompassing course designed for Udemy.\nWhat You'll Learn:\nFundamentals to Advanced Concepts: Start from the basics and progress to advanced React concepts to build a strong foundation.\nReal-world Applications: Gain hands-on experience by building practical, industry-relevant projects that showcase your newfound skills.\nReact Hooks and State Management: Master the art of state management with React Hooks, enabling you to create dynamic and responsive user interfaces.\nIntegration with Node.js and Express: Seamlessly integrate React with Node.js and Express to create powerful full-stack applications.\nRESTful API Integration: Learn how to connect your React applications to MongoDB, creating a robust and scalable backend.\nAuthentication and Authorization: Implement secure user authentication and authorization mechanisms to ensure your applications are safe and protected.\nDeployment Strategies: Explore various deployment options and strategies, ensuring your applications are ready for the real world.\nWhy Choose This Course?\nInstructor Expertise: Benefit from the experience of a Full Stack Developer and Educator with a proven track record on YouTube.\nPractical Examples: Every concept is backed by real-world examples and projects, providing you with practical skills you can apply immediately.\nEngaging Learning Environment: Join a community of learners, participate in discussions, and enhance your understanding through collaborative learning.\nTake your Full-Stack Web Development journey to new heights with this React course on Udemy. Enroll now and empower yourself with the skills to create cutting-edge web applications!",
      "target_audience": [
        "Beginner Web Developers who want to learn React In Depth"
      ]
    },
    {
      "title": "Building Projects using Jamstack",
      "url": "https://www.udemy.com/course/building-projects-using-jamstack/",
      "bio": "Learn and build fast, reliable and secure web apps using Jamstack",
      "objectives": [
        "Learn the fundamentals of Jamstack",
        "Learn to build fast, scalable and cost effective web solutions",
        "Build real world app along with the instructor",
        "Learn Gatsby JS by building an ecommerce app"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro Video",
          "Prerequisites",
          "What is the JAMStack?",
          "What are the advantages of the JAMStack"
        ],
        "All About Static Hosting": [
          "Static Hosting Basics",
          "Static Hosting with Netlify",
          "Modifying the DOM with Javascript",
          "Deploying Javascript on Netlify",
          "Quiz"
        ],
        "Setting up a JAMStack Project": [
          "Using our First API",
          "Static Site Generators",
          "Setting up Eleventy",
          "Quiz"
        ],
        "Building a JAMStack Project with Eleventy": [
          "HTML Templates in Eleventy",
          "Extending our HTML Template",
          "Eleventy Config File",
          "Setting up a build script",
          "Including Javascript in the Build",
          "Hosting on Netlify",
          "Continuous Deployment with Git",
          "Rendering Data with Eleventy",
          "Finishing up the JAMStack",
          "Quiz"
        ],
        "Building a Movie-Picker App": [
          "Intro to the Movie Picker App",
          "Setting up the Movie Database API",
          "Working with the Docs",
          "Working Inside the Movie Database",
          "Processing and Cleaning API Data",
          "Adding Data to the Page",
          "Integrating Data Into the App",
          "Setting up Site Navigation",
          "Applying CSS",
          "Finalizing and Uploading to Netlify",
          "Quiz"
        ],
        "Building a Gatsby ECommerce Store": [
          "Intro to Gatsby E-Commerce Project",
          "Setting up the Gatsby Project",
          "Setting up the Stripe API",
          "ntegrating Gatsby and Stripe",
          "All About .env Files",
          "Building the Storefront",
          "Fixing Store Errors",
          "Styling the Store",
          "Finalizing and Uploading to Netlify"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript is essential for completing the course",
        "The course is developed on VSCode so students will need to download it before the course"
      ],
      "description": "Want to learn & master the modern way to build better and scalable web apps?\nThis course is designed for someone who wants to upgrade their web development skills and wants to create websites and web apps using modern and popular tools and frameworks. This course will help you learn & understand the serverless functioning of frameworks while building static websites. Upgrading your skill sets is a must in today’s technologically advancing & highly competitive world. But, our expert-curated comprehensive course will allow you to explore & master the latest Jamstack technologies with ease.\nSo what are you waiting for? Join us to learn the latest in Jamstack from scratch and become a complete developer.\nMajor Topics Covered\nAdvanced JavaScript\nReact, JSX,\nNode JS, Express JS, Rest API & Microservices\nGatsby, GraphQL\nNext JS, Server-Side Rendering\nJAMStack, Static Site Generator, DOM, Client-Side Rendering API\nWebsite Development\nSoftware Engineering\nWhy should you take this course?\nJamstack is the latest technology in coding & programming. Currently, top companies like Netflix, Google, Amazon, Facebook, and Airbnb are using Jamstack, and according to a developer community survey, Jamstack architecture based companies will rise 32% by 2022. This will create career opportunities for the large pool of fresh developers.\n\n\nHands-on training with multiple projects\nIn-depth video lectures from world-class instructors\n5+ coding tools & technologies\nActual app development training\n\n\nWhy should you learn Jamstack?\nTo create new age Apps, games, and software\nFor a better understanding of serverless functioning\nTo understand the behavior of the latest frameworks\nGreat career option",
      "target_audience": [
        "Anyone who wants to learn Jamstack and other static site generation frameworks will find this course very useful"
      ]
    },
    {
      "title": "Create An Affiliate Marketing Website With WordPress | 2020",
      "url": "https://www.udemy.com/course/create-an-affiliate-marketing-website-with-wordpress-2020/",
      "bio": "Create an affiliate marketing website and start earning commissions online!",
      "objectives": [
        "How To Make An Affiliate Marketing Website With WordPress.",
        "Strategies For Creating Ideas And Content For Affiliate Marketing.",
        "Build A Website That Can Make You Money."
      ],
      "course_content": {},
      "requirements": [
        "Nothing, just have a computer!"
      ],
      "description": "In This video, I'm going to show you step by step how to start your own affiliate marketing website.  If you want to learn how to make money online, then this video will definitely help you out!  We are going to give you step by step details on how to make the website, create content, market your website, and tips and how to grow you affiliate marketing website so you can start making passive income and make money online! YOU CAN DO IT!\nWhy Take This AMAZING Course?\nHighest Rated Instructor Here On Udemy For WordPress Lessons\nLearn how to use the #1 Best selling WordPress Theme In The World\nMaster WordPress and Affiliate Marketing. Complete Beginners Guide\nGet a Modern And Amazing Look For Your Website That Will Impress!\nLearn From A Professional Who Creates Websites For a Living with over 500,000 Monthly Visits!\nTHE MOST UPDATE AND MODERN TUTORIAL. Don't Settle For Outdated Content!\nGet A fully Responsive Website And Mobile Responsive\nUnlike Other Lectures. I Cover Everything. Don't be left in the dark with other lectures that are only one hour long. I help my students and make sure they are 100% informed on all WordPress features. This lecture is very detailed and will make you fully understand how you can create your WordPress Affiliate Marketing website from scratch as a beginner.\nWhat Will I Learn From This Course?\nSetting up your domain and hosting\nCreate Modern, Beautiful, and STUNNING Websites!\nCreate An Affiliate Marketing website where you can refer products to customers and make money online!\nCreate Pre-Made layouts for clients\nMaster Affiliate Marketing And Start Earning Commissions!\nLEARN HOW TO DRAG AND DROP MODULES + VISUAL BUILDER EASY!\nMaster WordPress. Create Your Own Affiliate Marketing Website Simply And Easily.\nWhat are the requirements?\nNo Experience Required. Complete Beginners Welcome!\nWhat am I going to get from this course?\nMASTER WORDPRESS\nCreate Your Own Website From Scratch\nCreate MODERN Style 2020 Websites\nMASTER Affiliate Marketing\nWhat is the target audience?\nAnyone. This Course is for anyone with a desire to learn\nAnyone Who Wants To Start Their Own Website\nAnyone Who Wants To MASTER WordPress And Affiliate Marketing\nWhat you’ll learn\nCreate Websites From Scratch\nStart Their Own Web Design Business\nCreate Modern Style Websites In Under An Hour\nAre there any course requirements or prerequisites?\nJust an Internet Connection And A Computer!\nNo Experience Required, Beginners Welcome!\nWho this course is for:\nAnyone who wants to learn how to make a website step by step\nAnyone who wants to create their own business\nWho this course is for:\nAnyone who wants to learn how to make a WordPress website with no experience\nAnyone who wants to make a website the easiest way\nAnyone who wants to learn how to start a web design business\nAnyone who wants to make money online",
      "target_audience": [
        "Anyone who wants to learn how to make an affiliate marketing website.",
        "Anyone who wants to learn how to make money online."
      ]
    },
    {
      "title": "Figma to React : Build 10 Login Pages in React 2022",
      "url": "https://www.udemy.com/course/figma-to-react-build-10-login-pages-in-react-2022/",
      "bio": "Build 10 Login pages in React with Figma Prototypes",
      "objectives": [
        "UI UX Differences",
        "Building live projects with Figma Designs and Prototypes",
        "Main topics in CSS like flexboxes , positions , transforms , transitions , Z-indexes etc.",
        "Complete Projects Resourses with Source Code and Design Files"
      ],
      "course_content": {
        "Introduction and Resourses": [
          "Promo / Github / Figma",
          "React App Setup"
        ],
        "Login Page -1": [
          "Part-1 Structure",
          "Part -2 Alignment",
          "Part -3"
        ],
        "Login page -2": [
          "Part -1",
          "Part -2",
          "Part -3",
          "Part -4"
        ],
        "Login Page - 3": [
          "Part - 1",
          "Part - 2"
        ],
        "Login Page - 4": [
          "Part - 1",
          "Part - 2"
        ],
        "Login Page - 5": [
          "Part - 1",
          "Part - 2",
          "Part - 3"
        ],
        "Login Page - 6": [
          "Part - 1",
          "Part - 2",
          "Part - 3"
        ],
        "Login Page - 7": [
          "Part - 1",
          "Part - 2"
        ],
        "Login Page - 8": [
          "Part - 1",
          "Part - 2"
        ],
        "Login Page - 9": [
          "Part - 1",
          "Part - 2"
        ]
      },
      "requirements": [
        "Java script Basics",
        "React Basics",
        "CSS Basics"
      ],
      "description": "Figma\nFigma is a vector graphics editor and prototyping tool which is primarily web-based, with additional offline features enabled by desktop applications for macOS and Windows. The Figma mobile app for Android and iOS allows viewing and interacting with Figma prototypes in real-time on mobile devices.\nReact\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.\nWhat you will learn in this course.\nThe main concept of this course is building live projects from Figma Designs and Prototypes in React JS.\nSo this course is a combination of React + CSS Mastery and a little bit of Figma. There won't be any lectures about Figma in this course, but by this course, you will have some basic idea about Figma and how Figma works.\nWe will design 10 Login Pages in React + CSS by using Figma Resources.\nIn This 10 Login pages will cover almost every topic in the CSS like..\nTypography\nDivs, Sections, Containers\nMargins and Paddings\nPositions\nAbsolute and Relative Positions\nFlexboxes\nBox Shadows\nBootstrap\nGrids\nResponsive ness\nEvery login page will have a unique theme and purpose.",
      "target_audience": [
        "Javascript Developers",
        "React Developers",
        "UI-UX Designers"
      ]
    },
    {
      "title": "Adobe Experience Manager Essentials",
      "url": "https://www.udemy.com/course/adobe-experience-manager-essentials/",
      "bio": "All the basics you need to know - Get started with AEM",
      "objectives": [
        "Gain a solid understanding of AEM modules and architectural concepts",
        "AEM terminology",
        "Understand development concepts of AEM",
        "Hybrid CMS and how to use it in your organization"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming experience"
      ],
      "description": "You want a handbook to keep yourself updated with basics and essentials of Adobe Experience Manager? Then, you are at the right place!!\nThis course is designed to provide participants with a foundational understanding of Adobe Experience Manager (AEM), a leading content management solution used to build websites, mobile apps, and forms. Whether you are a developer, content author, or business user, this course is tailored to equip you with the essential skills required to stay abreast of latest features and technology behind AEM.\nWhat is this AEM course all about?\n\"AEM Essentials\" is a foundational course designed to empower learners with key skills in leveraging Adobe's robust Experience Manager platform. Its your gateway to unlocking the vast potential of AEM for creating, managing, and delivering exceptional digital experiences. This course covers fundamental aspects to ensure you not only understand the basics of AEM but also gain practical skills to navigate the platform with confidence.\nWho should enroll:\n· Web developers and designers\n· Content authors and editors\n· Business users and administrators\n· Anyone looking to gain a foundational understanding of Adobe Experience Manager\nPrerequisites:\nNo prior experience with Adobe Experience Manager is required. Basic knowledge of web development concepts and content management systems is beneficial.\nWhat you will get by the end of the course:\nBy the end of this course, the participants will have the essential skills to lay a strong foundation and confidently start working on advanced functionalities and specialised AEM capabilities.\nPromise to You\nI'll be here for you every step of the way. If you have any questions about the course content or anything related to this topic, you can always post a question in the course or send me a direct message.",
      "target_audience": [
        "AnyOne who is passionate to keep AEM fundamentals handy",
        "AnyOne new to the world of AEM"
      ]
    },
    {
      "title": "Develop an Ecommerce website with Laravel",
      "url": "https://www.udemy.com/course/develop-an-ecommerce-website-with-laravel/",
      "bio": "Learn How to create and develop a simle e-commerce website with Laravel.",
      "objectives": [
        "How to create an eCommerce project with laravel",
        "Admin and User Registration and Login",
        "How to add, delete and edit products from the admin area",
        "How to display products on your web page",
        "How to add, edit and delete users cart",
        "How to make and view orders",
        "How to enable product purchase",
        "How to receive payments through paystack method"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. you will learn everything you need to know",
        "A good computer with an Internet connection",
        "A basic knowledge of css and Html"
      ],
      "description": "Laravel is an open-source PHP framework, which is robust and easy to understand.\nLaravel has made web programming soo much easier that you do not have to start writing long codes for your website. Once you are acquainted with the documentation, it makes life soo much easy. This is wat we strive to achieve in this course. Developing our ecommerce website in an effective yet easy way.\nThis course , with the use of Laravel, will enable you to develop a user friendly project . Our  project will be a simple e-Commerce website. In The this course functions such as these will be handled:\n\n\nAdmin and user login and register system: This will enable admin or users to make changes related to their roles. For example, the admin can add, delete and update logged in or registered users, add or  modify product or services and so on. On the other hand, the user can make changes such as updating his or her account, make orders for a product and so on.\nImporting user and admin template\nData | products upload from the admin panel and display on the project page.\nDatabase storage and query: This means storing data in our database and retrieving the data when necessary.\ncheckout and order details.\nOne payment and delivery methods.\nThis is a basic course to learn how to create an ecommerce website in just few hours.",
      "target_audience": [
        "Beginner Web developers",
        "All who want to create an ecommerce website"
      ]
    },
    {
      "title": "Learn Redis with Python & Django: Build Real-Time Projects",
      "url": "https://www.udemy.com/course/learn-redis-python-django-build-real-time-projects/",
      "bio": "A practical, project-based course to master Redis fundamentals and build fast, scalable Python Django apps.",
      "objectives": [
        "Core Redis data types: Strings, Hashes, Lists, Sets, and more",
        "Key Redis commands: SET, GET, HSET, LRANGE, SADD, etc.",
        "How to manage data expiration, caching, and key patterns",
        "Using Redis pipelines and transactions for performance and safety",
        "Integrating Redis with Django for session management and real-time features",
        "Building a session-based shopping cart with Redis and Django REST Framework",
        "Developing a real-time voting analytics app using Redis and Django Ninja",
        "Using Redis for rate limiting, data expiration, and caching strategies",
        "Containerizing Django and PostgreSQL apps with Docker",
        "Debugging and exploring Redis data using RedisInsight"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Python programming (variables, functions, data structures)",
        "Some familiarity with Django is helpful but not required — core concepts are covered",
        "A computer capable of running Docker (macOS, Windows, or Linux)",
        "Willingness to use the command line/terminal for development tasks",
        "Enthusiasm to build and debug real-world web apps!"
      ],
      "description": "Redis is one of the most powerful tools in modern web development — known for blazing-fast performance, real-time capabilities, and a simple yet flexible data model. Whether you're building e-commerce carts, analytics dashboards, or scalable backend systems, Redis can dramatically improve your app’s responsiveness and architecture.\n\n\nWho This Course Is For:\nPython or Django developers looking to add Redis to their tech stack for performance and scalability\nBackend engineers who want hands-on experience with Redis in real-world projects\nWeb developers aiming to build fast, real-time features like session carts, live analytics, or rate-limited APIs\nStudents or bootcamp grads who want practical Redis experience to stand out in job applications\nDevOps or full-stack developers interested in Docker-based workflows and caching strategies\nAnyone curious about Redis who wants to go beyond tutorials and apply it in full-stack Django apps\n\n\nIn this hands-on course, you’ll go beyond theory to build full-stack projects that integrate Redis with Python and Django. You’ll start with the fundamentals — keys, strings, hashes, lists, sets, pipelines, and transactions — all with practical coding exercises. From there, you’ll dive into real-world applications:\n\n\nProject 1: A session-based shopping cart using Django and Redis for fast session management, cart persistence, quantity tracking, and TTL-based auto-expiry.\nProject 2: A real-time analytics voting app built with Django Ninja, using Redis for vote counting, rate limiting, and live results in the Django Admin.\n* More projects will be added in the future.\n\n\nThe course uses Docker to ensure smooth local development and RedisInsight for better data visualization.\nWhether you’re a backend developer, Python enthusiast, or Django pro, this course gives you the Redis foundation and confidence to build high-performance, scalable applications — fast.",
      "target_audience": [
        "Backend developers looking to integrate Redis into Django projects",
        "Web developers who want to learn Redis by building real-world apps",
        "Django beginners who want hands-on experience with Redis and APIs",
        "Intermediate learners aiming to improve app speed, scalability, and architecture",
        "Anyone curious about session handling, caching, or real-time analytics with Redis"
      ]
    },
    {
      "title": "Mastering JavaScript: From Advanced Concepts to Real-World",
      "url": "https://www.udemy.com/course/advanced-javascript-course-2021/",
      "bio": "Advanced Skills for Developers",
      "objectives": [
        "Experienced JavaScript developers seeking to deepen their knowledge and skillset.",
        "Front-end developers aiming to excel in creating dynamic and interactive web interfaces.",
        "Full-stack developers looking to enhance their server-side JavaScript capabilities.",
        "Software engineers and programmers interested in mastering JavaScript"
      ],
      "course_content": {
        "JavaScript Part 01": [
          "What's JavaScript and where is it used ?",
          "Strings, Arrays, Objects, Arrow Method and DOM Element",
          "What's JavaScript Engine ?",
          "Array Destructing",
          "Object Destructing",
          "Challenge #1 Object Destructing",
          "Spread Operator",
          "Spread Operator with functions",
          "REST Pattern",
          "Challenge #2"
        ],
        "JavaScript Data structure": [
          "Sets",
          "Maps",
          "Challenge #3"
        ]
      },
      "requirements": [
        "Proficiency in JavaScript fundamentals, including variables, data types, loops, and functions.",
        "Familiarity with HTML and CSS for web development.",
        "Experience working on real-world JavaScript projects is beneficial."
      ],
      "description": "Our Approach:\nWe believe in a hands-on and practical approach to learning. Throughout the course, you'll work on coding exercises, projects, and real-world examples to reinforce your knowledge and skills. You'll also have the opportunity to collaborate with your fellow learners and get support from our experienced instructors\n\n\nIn this course, you will dive deep into the world of JavaScript, from the fundamentals to advanced concepts. Whether you're a complete beginner or already have some programming experience, this course is designed to help you build a strong foundation in JavaScript and become proficient in web development.\n\n\nKey Topics Covered:\nAdvanced JavaScript Concepts: Explore advanced JavaScript concepts such as closures, prototypes, scope, and execution context. Gain a deep understanding of how JavaScript works under the hood.\nES6 and Beyond: Dive into the latest features of ECMAScript (ES6 and beyond) and learn how to leverage them to write cleaner, more efficient code.\nAsynchronous JavaScript: Master asynchronous programming with promises, async/await, and the event loop. Understand how to handle asynchronous operations effectively.\nFunctional Programming: Explore functional programming principles in JavaScript, including higher-order functions, pure functions, and immutability.\nDesign Patterns: Learn common design patterns used in JavaScript development, such as the Module, Singleton, Factory, and Observer patterns. Apply these patterns to solve real-world problems.\n\n\nAre you ready to become an expert in JavaScript programming? Take your career to new heights by enrolling in our Advanced JavaScript Programming course. Join a community of like-minded developers and embark on a journey of continuous learning and growth.\n\n\nPay once, benefit a lifetime! with 30 Days money-back guarantee. Certification after course completion",
      "target_audience": [
        "JavaScript Intermediate and expert level"
      ]
    },
    {
      "title": "HTML5 and CreateJS Tutorial - Learn Interactive Development",
      "url": "https://www.udemy.com/course/get-creative-with-html5-and-createjs/",
      "bio": "Learn how to build Interactive content with HTML5 and CreateJS. An essential training course for all Web Developers",
      "objectives": [],
      "course_content": {
        "01. Introduction": [
          "Working Files - Download These First",
          "Welcome to this course",
          "0102 Installing the Plugin",
          "0103 Export To Canvas"
        ],
        "02. Title Screen Interactions": [
          "0201 Mouse Interactions",
          "0202 Tidying The Display"
        ],
        "03. Controlling Movement": [
          "0301 Clicking And Debugging",
          "0302 Creating Movement :",
          "0303 Adding Animation"
        ],
        "04. Object Control": [
          "0401 Managing Attacks",
          "0402 Setting The Retreat",
          "0403 Controlling The Steal"
        ],
        "05. Controlling The Collectables": [
          "0501 Controlling The Collectables",
          "0502 Cracking Up",
          "0503 Collision Detection",
          "0504 Returning The Collectable"
        ],
        "Completing The Project": [
          "0601 Setting Game Over",
          "0602 Increasing Difficulty"
        ]
      },
      "requirements": [],
      "description": "In this training video on creating Interactivity with HTML5 and CanvasJS, author and designer Mark Shufflebottom will introduce you to CanvasJS and how to use it with the HTML5 Canvas to create rich, interactive content.\n\nThroughout the course of this tutorial, Mark uses the example of an interactive game to show you how to use CanvasJS. You will build this game using EaselJS and Flash components (provided in the working files), and along the way learn how to create mouse interactions, debugging, create animation and movement, deal with collisions and much more.\n\nBy the completion of this training course, you will be familiar with the Canvas tag for HTML5, and using EaselJS to create interactive content for your website. Working files are included to allow you to follow along and use the same files that the author uses throughout the training.",
      "target_audience": []
    },
    {
      "title": "The Ultimate Front-End Web Developer Course",
      "url": "https://www.udemy.com/course/ultimate-front-end-frameworks-web-development/",
      "bio": "Master the skills to start a career in Front-End Development.",
      "objectives": [
        "Learn How to use Front-End Frameworks",
        "Building a Complete Application with Backbone",
        "Building a Complete Application with AngularJS",
        "Building a Complete Application with React",
        "Building a Complete Application with Ember"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "How to become a front-end web developer",
          "How important is it to be on the cutting edge?",
          "The Rest API"
        ],
        "Building a Complete Application with Backbone": [
          "Setup Application With Backbone",
          "Creating the Model",
          "Building the Application Router",
          "Display the Contact List",
          "Single Contact View",
          "New Contact"
        ],
        "Building a Complete Application with AngularJS": [
          "Setup Application With AngularJs",
          "Creating the Model for Angular",
          "Building the Application Router",
          "Display the Contact List",
          "Single Contact View",
          "New Contact"
        ],
        "Building a Complete Application with React": [
          "Setup Application with react",
          "Creating the Model for React",
          "Building the Application Router",
          "Display the Contact List",
          "Single Contact View",
          "New Contact"
        ],
        "Building a Complete Application with EmberJS": [
          "Setup Application With EmberJS",
          "Creating the Model for Ember",
          "Building the Application Router",
          "Display the Contact List",
          "Single Contact View",
          "New Contact"
        ],
        "Outro": [
          "Summary",
          "Thank You!"
        ]
      },
      "requirements": [
        "PC or Mac",
        "A will to learn"
      ],
      "description": "Propel Your Career into the Stratosphere: Become a Front-End Development Powerhouse!\nAre you ready to transcend the limitations of ordinary tech skills and command a premium salary in the most dynamic sector of the digital world? This isn't just another course; it's your launchpad to becoming a highly sought-after Front-End Developer, capable of shaping the future of web experiences.\nThe digital landscape is exploding, and at its core lies the power of front-end frameworks. These are the engines that drive modern web design and development, and mastering them is no longer optional—it's essential for career dominance. The challenge? Navigating the ever-expanding universe of frameworks. That's where we come in.\nThis meticulously crafted course cuts through the noise, delivering a laser-focused learning experience that will transform you into a front-end virtuoso. We don't just teach frameworks; we forge experts.\nInside this immersive program, you will:\nArchitect Feature-Rich Applications with Backbone: Go beyond the basics and harness the full potential of Backbone.js to build complex, data-driven web applications with unparalleled structure and maintainability.\nEngineer Dynamic User Experiences with Angular: Dive deep into the Angular ecosystem and master the art of creating interactive, single-page applications that redefine user engagement and performance.\nConstruct High-Performance Applications with React: Unlock the secrets of React, the industry-leading library for building blazing-fast, scalable, and reusable UI components that power the web's most sophisticated platforms.\nDevelop Scalable Architectures with Ember: Ascend to the highest level of web development with Ember.js, the framework of choice for ambitious projects that demand robust architecture and long-term maintainability.\nThis course is your strategic advantage, providing you with:\nIn-Demand Skills: Master the frameworks that top companies actively seek, positioning you for immediate career advancement and higher earning potential.\nReal-World Expertise: Gain hands-on experience through practical projects and simulations that mirror the challenges of professional web development.\nFuture-Proof Knowledge: Stay ahead of the curve with a curriculum that is constantly updated to reflect the latest industry trends and best practices.\nCareer Transformation: Emerge from this course not just with knowledge, but with a powerful portfolio and the confidence to conquer any technical interview and secure your dream role.\nDon't settle for being a spectator in the digital revolution. Become an architect. Become a creator. Become a Front-End Development Powerhouse.\nEnroll now and ignite your trajectory to a six-figure career. Your future in web development starts here.",
      "target_audience": [
        "Anyone who wants to learn Front-End Frameworks",
        "Programmers"
      ]
    },
    {
      "title": "Google Script Apps Email From Spreadsheet list",
      "url": "https://www.udemy.com/course/google-script-apps-project/",
      "bio": "Google Script Apps Google Script Apps Email From Spreadsheet list",
      "objectives": [
        "How to build applications with google Apps Script",
        "How to create code and connect GSuite Applications"
      ],
      "course_content": {
        "Introduction to connecting Spreadsheet and Google Apps Script": [
          "Email from Spreadsheet Introduction",
          "Google Apps Script Bound Scrip",
          "Get ready set Start Scripting",
          "Source Code",
          "Get Values from Spreadsheet Google Apps Script",
          "Source Code Get Active Row",
          "Google Apps Script Create User Object",
          "Source Code Get Values",
          "Spreadsheet UI Alert UI Buttons Yes No",
          "Source Code",
          "HTML Template for email",
          "Source Code",
          "Send Email Message Mail function within Google Apps Script",
          "Send Email Source Code",
          "Update Spreadsheet column from Google Script",
          "Source Code",
          "Final Code Review Project review and code overview Google Script",
          "Final Google Script Source Code Project"
        ],
        "Google Apps Script Coding Examples": [
          "Google Apps Script Resource and code example Guide",
          "Additional Resources and Guides PDF learning more"
        ]
      },
      "requirements": [
        "JavaScript HTML and CSS",
        "Previous coding experience",
        "Google Account"
      ],
      "description": "Explore how you can create a simple powerful application with Google Apps Script that connects your Google Suite together\nUse Google Apps Script to create advanced functions within your spreadsheet\nUse the spreadsheet to manage a user list, click the members on the list and send out confirmation emails.  Track emails that have been sent.  Create your own custom HTML template mail that gets sent to the users on the list.  Use the spreadsheet UI menu to add buttons for administration of the spreadsheet data.  You will be amazed at how easy it is to create powerful functionality that helps power up your Google Suite of products.\nJavaScript is a prerequisite to this course.\nCourse covers applying Google Apps Script to build a project application.\nAdd items to the spreadsheet UI menu that can trigger functions in Google Apps Script\nSelect user active cell content from the spreadsheet\nCreate HTML template to send email\nUse Alerts to accept user actions\nUpdate values of the spreadsheet data\nSelect ranges and update content in the range\nGet content from the spreadsheet\nSend email from Google Apps Script\nGoogle Script Apps Email From Spreadsheet list Source code is included so you can copy and paste the code to try for yourself.\nStep by step learning\nFast friendly support is always available within the Q&A section\nExperienced instructor with over 20 years of experience ready to help you learn\nYou have nothing to lose - Join now and start learning to create your own version of this helpful application today!!!",
      "target_audience": [
        "web developers",
        "application developers",
        "anyone who wants to learn more about the power of Google Apps Script"
      ]
    },
    {
      "title": "Create A Youtube Clone: React, Typescript, Redux Toolkit etc",
      "url": "https://www.udemy.com/course/create-a-youtube-clone/",
      "bio": "Create a beautiful real world portfolio project that makes your portfolio stand out. Using React, typescript , Redux etc",
      "objectives": [
        "I would build a beautiful real world project that makes my portfolio stand out from the rest, and gives me a lot of talking points in your interviews.",
        "I will learn how to use the latest technologies, including React, Typescript, Redux toolkit, Styled-components, Netlify, Javascript, etc",
        "I will learn how to use React and it's advanced concepts to breakdown and build any application that i want.",
        "I will learn how to use Typescript with React to build more resilient applications",
        "I will learn how to use Styled components to add Themes to my applications and to create highly customizable and re-usable components",
        "I will learn how to use the latest Redux toolkit with React and Typescript.",
        "I will learn how to add voice recognitions (speech to text) in my applications",
        "I will learn how to support different languages in my applications",
        "I will learn how to use advanced api and npm libraries with Typescript.",
        "I will learn how to handle Routing with React-router-dom",
        "I will learn how to host my app on the web along with Continuous integration.",
        "This course would make me an advanced, confident, and modern Front-end developer developer.",
        "I will sign up for this course ;)"
      ],
      "course_content": {
        "Introduction and Setup": [
          "What we are going to build",
          "Create project",
          "Fix package warning",
          "Project files cleanup",
          "Install styled-components",
          "Creating the app container",
          "Adding fonts",
          "Adding Global styles",
          "Introducing themes",
          "Any type, Type annotations and inference",
          "More on type annotations",
          "More on Types",
          "Finish setting up themes",
          "Using theme",
          "Union types",
          "Function annotations",
          "Using theme from React Context"
        ],
        "Header Section": [
          "Creating the Header container",
          "Left Section of the header",
          "Create Auth Button and More Icon Button",
          "Show tooltips and Dropdown settings",
          "Settings container",
          "Searchbar",
          "Search by voice",
          "Handling events"
        ],
        "Side menu": [
          "Side menu container",
          "Side menu - Small",
          "Side menu - Large"
        ],
        "Categories & Search Features": [
          "Categories section",
          "Fetching videos",
          "Adding a loading backdrop"
        ],
        "Homepage Videos section": [
          "Videos Container",
          "Homepage video item",
          "Fix video not showing bug",
          "Adding video time",
          "Adding video pic and title",
          "Adding video name and date",
          "Video shorts section",
          "Show More/Less Short videos",
          "Shorts Video wrapup"
        ],
        "Watch Video page section": [
          "Handling Routing",
          "More Video Suggestions",
          "More Videos suggestions wrapup",
          "Watch video screen",
          "Watch video title and description",
          "Watch video - User details and subscribe button",
          "Watch video details wrapup",
          "App cleanup",
          "Adding icon",
          "App wrapup"
        ],
        "React & Redux Toolkit": [
          "Installations",
          "Introduction and Slice setup",
          "Setting up the store",
          "Creating custom hooks",
          "Handling Dispatch and select",
          "Actions with Payloads"
        ],
        "Hosting (Make the app live)": [
          "Push to github",
          "Deploy with netlify",
          "Fix failed deployment"
        ],
        "Bonus!": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Have a computer with Internet",
        "A bit of experience with React would be helpful. I try to explain things as we go along",
        "Be ready to learn an insane amount of awesome stuff",
        "Prepare to build real world web apps!"
      ],
      "description": "Welcome, and thank you for you interest in this course.\nI am a strong believer in learning by doing. If you wanted to know about how a technology works , you could have just read the documentation. But you're here to get your hands/keyboard dirty and see how it works, especially in the real world.\nIn this course we would make a clone of the second most popular website in the world , YouTube! . This would be a hands on practical guide. Which means you would learn about the how to use the latest and greatest technologies in the React ecosystem, as you build the project. This is the type of project that makes your portfolio stand out and gives you alot of talking points in your interviews.\n\n\nSome cool features you would build :\nHandle voice recognition to let a user search by voice.\nAdd different color themes to your project.\nSupport different languages in your application.\nbuild highly customizable and re-usable components with styled-components.\nand so much more !\nTechnologies you would learn work with:\nReact\nJavascript\nTypescript\nRedux toolkit\nStyled-components\nReact router dom\nNetlify\nScss\nWeb design\nFront end dev best practices\n... etc\nWhat are you waiting for ? We have some work to do , let's get started!    :-)",
      "target_audience": [
        "Anyone interested in learning how to build real world apps with React and it's ecosystem",
        "Anyone looking to add a Massive real worl project to make them stand out from the rest"
      ]
    },
    {
      "title": "Setup A WordPress Website & Hosting For Your Business",
      "url": "https://www.udemy.com/course/business-wordpress-website-hostinger/",
      "bio": "Build a WordPress Website for any business and create a Hostinger account for affordable web hosting & free domain name",
      "objectives": [
        "Grasp the fundamentals of of the internet, with a deep understanding of web hosting, domain names and the modern web browser",
        "Uncover what separates the bad web hosting companies from the great ones so you can ensure your web hosting won't hinder your business success",
        "Learn how to build a WordPress website with no experience by leveraging starter themes and templates",
        "Learn how to create your own professional email address for your business",
        "Grasp the importance of page loading times and how slow speeds can negatively impact your website performance",
        "Master how to configure and amend your business website so that you can change changes on the fly, as you need to"
      ],
      "course_content": {
        "Step 1 - Laying The Foundations": [
          "Support & additional resources (Important!)",
          "The fundamentals of building a website",
          "Web hosting & the modern web browser",
          "Domain name basics"
        ],
        "Step 2 - Purchasing Fast & Affordable Web Hosting": [
          "Speed, Service & Scalability - the foundations and potholes to watch for",
          "Which Hostinger plan is best for you and your business?",
          "Purchasing your hosting pan"
        ],
        "Step 3 - How To Pick A Great Domain Name": [
          "Student hub",
          "Tips and advice on picking a great domain name",
          "My favourite way to research domain name ideas",
          "Claiming your free domain with Hostinger",
          "Purchasing a domain name from other popular services",
          "No Hostinger account? Make sure you update your nameservers"
        ],
        "Step 4 - Design & Build Your Website": [
          "Why WordPress?",
          "Adding your website to Hostinger",
          "Navigating the WordPress admin dashboard",
          "Posts vs Pages",
          "Adding a theme",
          "Adding a starter template to your new website",
          "Configuring your website settings",
          "Customising your website",
          "Amending your page designs",
          "Adding / editing your navigation menu"
        ],
        "Step 5 - Professional Email, SSL & Finishing Touches": [
          "Setting up your professional email address",
          "Installing an SSL for secure web browsing",
          "Adding additional plugins to expand website functionalities",
          "How to get a certificate",
          "Design and edit your different pages"
        ],
        "BONUS Section": [
          "Bonus lesson"
        ]
      },
      "requirements": [
        "Complete beginner course - No experience necessary"
      ],
      "description": "Have you ever felt left behind with your inability to grasp the basics of the internet, web hosting and how to build an impactful website for your company or business?\n\n\nThis course is designed to take complete beginners by the hand and introduce them to the world of web hosting and how to build a WordPress website for any business.\n\n\nWelcome to this no-nonsense WordPress & web hosting course aimed to help you set up your first business website using WordPress. You will master the art of building a business website from scratch using WordPress, and we will cover everything from the basics of the internet to the intricacies of web hosting, domain names, and effective web design. By the end of this course, you'll be equipped with the knowledge and skills to build a professional and scalable website for any business.\n\n\nWhat You Will Learn:\n\n\nFundamentals of the Internet and Web Browsing:\nUnderstand the structure and functioning of the internet.\nGet familiar with modern-day internet browsers and their features.\nDomain Names and Web Hosting:\nLearn how to claim a domain name completely for free, with powerful, practical tips on picking the very best name.\nExplore the world of web hosting and how to select the very best, cost-effective option for your needs.\nUnderstand the importance of website speed, uptime, and scalability in web hosting.\nWordPress Basics:\nDive into WordPress, the world's most popular website builder.\nNavigate through the WordPress dashboard and understand its functionalities.\nCreate and manage content using WordPress's intuitive interface and block editor.\nWebsite Design and User Experience:\nLearn the principles of effective web design.\nCreate visually appealing layouts that are also user-friendly.\nEssential Plugins and Tools:\nGet acquainted with essential WordPress plugins for SEO, security, and performance.\nExplore tools like Wordfence for website security and RankMath for search engine optimisation.\n\n\nSo who am I? Well, my name is Ricky, and I'm an experienced web developer and entrepreneur with a career spanning over 15 years working online. During this time, I have helped hundreds of businesses and entrepreneurs create an impactful online presence using WordPress.\n\n\nWhy should you learn from me?\nI have over 15 years of experience working online: a successful e-commerce business owner, SEO agency owner, WordPress Developer, and authoritative blogger and owner of 5 blogs.\nI have worked with 250+ aspiring business owners, crafting a powerful online presence for them and setting them up for future success\nPassionate WordPress course creator, with over 10,000 students and counting, helping my students create a better version of their lives through their new and empowered skills.\n\n\nThis course is ideal for:\nEntrepreneurs looking to create a professional online presence for their business.\nFreelancers aiming to expand their skills in web development and digital marketing.\nAnyone interested in learning how to build and manage a business website effectively?\n\n\nCourse Format:\nOur course is structured to be interactive and engaging, ensuring a comprehensive learning experience. We utilise a blend of video tutorials and hands-on lectures where you will be designing, crafting and learning all about developing your own WordPress website for your business.\nWhether you're a complete beginner or have some experience, this course will take you through every step of building a dynamic and successful business website. Join me inside, and together we will hone your skills and empower your online business presence for success :)",
      "target_audience": [
        "Aspiring business owners looking to uncover the very best way to set up your website for success",
        "Entrepreneurs looking to create a professional online presence for their business.",
        "Freelancers aiming to expand their skills in web development using WordPress and lightning-fast web hosting"
      ]
    },
    {
      "title": "Clean Architecture in .NET 8 Core MVC with real time project",
      "url": "https://www.udemy.com/course/clean-architecture-in-net-8-core-mvc-with-real-time-project/",
      "bio": "Build Concert Booking application using .NET Core MVC, Entity Framework Core and ASP.NET Core Identity with Clean Archit",
      "objectives": [
        "Clean Architecture based scratch project : Concert Booking Application",
        "Four Layers like Domain, Application, Infrastructure and UI Layer.",
        "Repository Pattern with Unit of Work",
        "Identity with Razor Pages",
        "one role in the application that is Admin and rest of user like a Authenticated User",
        "Proper Authentication and Authorization",
        "Data Seeding , Role and User Seeding",
        "Data Access layer known as infrastructure layer. Repository done using generic and unit of work",
        "Application layer with extra utility services"
      ],
      "course_content": {
        "Introduction": [
          "What is Clean Architecture",
          "Core Component",
          "Design Layers For Clean Architecture",
          "Concert Booking Project"
        ],
        "Domain layer": [
          "Project Entities",
          "Concert Entity",
          "Ticket and Booking Entity"
        ],
        "Entity Relationship": [
          "Relationship between Venue, Artist and Concert",
          "Relationship between Ticket and Booking"
        ],
        "Model Validation": [
          "Model Validaton - Apply with all entities"
        ],
        "Infrastructure Layer for Database Connection": [
          "Create Entityframework Core based Context Class"
        ],
        "Connection String": [
          "Create ConnectionString in Web Project",
          "Register Connection String in Web Project"
        ],
        "Repositories Interfaces in Application Layer": [
          "Generic Repository Interface",
          "Artist Interface",
          "Venue Interface",
          "Concert Interface",
          "Booking and Ticket Interface",
          "Unit of work and Data Seeding Interface"
        ],
        "Implement Repository in Infrastructure Layer": [
          "Generic Repository Implementation",
          "Artist Repository",
          "Concert and Venue Repository",
          "Booking and Ticket Repository",
          "Unit of Work Repository"
        ],
        "Configure Identity": [
          "Configure Identity Part-1"
        ],
        "Migration": [
          "First Migration"
        ]
      },
      "requirements": [
        "Before start this course must to know about ASP. NET CORE MVC",
        "Approx 6 month experienced in .NET MVC"
      ],
      "description": "This Course Include the following key points.  First of all it include clean architecture layers like domain layer , Infrastructure layer, Application layer and UI layer. This is a Beginner to the Advance level course on ASP.NET Core using Clean Architecture that will take you from basics all the way to advance mode. any one can learn concept of clean architecute and related topics but must to know the basics of ASP.NET CORE MVC.\n\n\nBuilding a concert booking application using ASP.NET Core with Clean Architecture involves structuring a solution that is maintainable, scalable, and decoupled. This approach not only leverages the robust features of ASP.NET Core but also implements Clean Architecture principles, ensuring that the application's business logic remains central and unaffected by external changes like database integrations or web frameworks. Here, we'll explore the key components of this architecture and their roles within an ASP.NET Core application designed for concert booking.\n\n\nOverview of Clean Architecture\nClean Architecture, advocated by Robert C. Martin, focuses on the separation of concerns by dividing the software into layers with strict boundaries. The main goal is to achieve a system where the business rules (domain) are at the core and all other dependencies (like UI, database, and external services) are externalized. This decoupling ensures that changes in external layers like the database or UI frameworks have minimal impact on the core logic.\n\n\nCore Components of the System\nDomain Entities: These are the core business models representing concepts such as Concert, Venue, User, and Booking. They contain only business data and behavior which are critical to the business domain.\n\n\nApplication Interfaces: This layer contains interfaces that define operations which can be performed from the outside world, such as IBookingService or IConcertRepository. These interfaces help in achieving Dependency Inversion, a key principle of Clean Architecture, which stipulates that higher-level modules should not depend on lower-level modules but should depend on abstractions.\n\n\nApplication Services: Implements the interfaces defined previously. This layer acts as a coordinator between the Domain and Infrastructure, handling business logic implementations and transforming domain data for delivery to external layers (like API endpoints or MVC Controllers).\n\n\nInfrastructure: This layer implements persistence logic and any other operations on external services (e.g., sending emails). For a concert booking system, it would typically implement the IConcertRepository with Entity Framework Core, handle database migrations, and manage SQL or NoSQL database connections.\n\n\nPresentation Layer: In the case of an ASP.NET Core application, this could be an MVC project, a Razor Pages web app, or even a REST API. This layer is only concerned with user interaction, and it utilizes Application Services to handle business operations.\n\n\nImplementing Clean Architecture in ASP.NET Core\nSetting Up the Solution\nStart by creating an ASP.NET Core Web Application. Organize the solution into projects based on responsibilities:\n\n\nDomain: Class library for business models and interfaces.\nApplication: Class library for application logic, DTOs (Data Transfer Objects), and interfaces implementation.\nInfrastructure: Class library for database operations, file system interactions, etc.\nWeb: The entry point of the application, which could be an API or an MVC project.\nDependency Injection (DI)\nASP.NET Core comes with built-in support for dependency injection. Use this feature to wire up interfaces from Application to their implementations in Infrastructure. For example, in the Startup.cs file, configure services like",
      "target_audience": [
        "Beginner to advanced user learn from it"
      ]
    },
    {
      "title": "Mastering React JS: A Hands-On Course for Web Developers",
      "url": "https://www.udemy.com/course/mastering-react-js/",
      "bio": "React JS Essentials: Dive into Component-Based Development, State Management, Routing, and Hooks.",
      "objectives": [
        "Learn how to effectively plan, set up, and structure a React project, including project organization, folder structure, and component hierarchy.",
        "Build interactive web applications with React JS, mastering component-based development and state management.",
        "Learn and apply industry best practices to create efficient, scalable, and maintainable websites using React JS and follow coding standards.",
        "Gain proficiency in testing and identifying issues within your React application using debugging techniques and error handling strategies.",
        "Understand the lifecycle of React components and effectively manage state and props for optimal application performance.",
        "Develop a deep understanding of React Router for seamless navigation and Redux for advanced state management in React applications.",
        "Gain hands-on experience integrating external APIs and cloud storage into React JS projects for enhanced functionality.",
        "Learn how to publish and deploy your React JS project, making it live for your audience by leveraging hosting platforms and CI/CD pipelines."
      ],
      "course_content": {
        "Introduction": [
          "What is React?",
          "What isn't React?",
          "Environment Setup",
          "Environment Setup for Windows",
          "Environment Setup for macOS",
          "Environment Setup for Linux",
          "Creating a Project",
          "Running the Application",
          "Node.js Structure",
          "File Structure"
        ],
        "JSX": [
          "What is JSX?",
          "JSX isn't HTML",
          "Expressions in JSX",
          "Inserting Large Blocks",
          "Elements Must be Closed",
          "Helper Functions",
          "One Top-Level Element"
        ],
        "Deployment": [
          "Deployment",
          "Deployment via Pipeline",
          "Example of Deployment via Pipeline"
        ],
        "Extra: JavaScript Recap": [
          "JavaScript Recap",
          "Declaring Variables",
          "Template Literals",
          "Functions",
          "Function Expressions",
          "Arrow Functions",
          "Function Return",
          "Nested Functions and Closures",
          "Assignment Operators",
          "Comparison Operators",
          "Arithmetic Operators",
          "Logical Operators",
          "Logical AND Operator",
          "Logical OR Operator",
          "Conditional Operator (Ternary Operator)",
          "Arrays",
          "Array: push()",
          "Array: forEach()",
          "Array: map()",
          "Array: includes()",
          "Array: filter()",
          "Objects",
          "JSON",
          "Classes",
          "Class Inheritance",
          "Destructuring Assignment",
          "Object Reference",
          "Spread Syntax (...)",
          "Functions Reference",
          "Promises",
          "async/await"
        ],
        "Components": [
          "What are Components?",
          "Virtual DOM",
          "Starting the Demo App",
          "Organizing your Code",
          "Import & Export",
          "Types of Components",
          "Class Components",
          "Function Components",
          "Debugging",
          "Creating Component Tree",
          "Properties"
        ],
        "Events": [
          "Handling Events",
          "Reference in a Function Component",
          "Reference in a Class Component",
          "Default Behavior",
          "Parameters"
        ],
        "State Management": [
          "What is State?",
          "Stateful vs Stateless",
          "State in Class Components",
          "State in Function Components",
          "Introduction to Hooks",
          "State Hook",
          "Implementing State: Variables",
          "Implementing State: Arrays",
          "Lifting State Up"
        ],
        "Forms": [
          "Form Handling",
          "Controlled Components",
          "input",
          "null",
          "label",
          "textarea",
          "select",
          "checkbox",
          "radio",
          "Validating Forms",
          "Uncontrolled Components",
          "createRef",
          "useRef",
          "The file input Tag",
          "Image Preview",
          "Adding Data",
          "Displaying Data",
          "Form Submission"
        ],
        "Components Lifecycle": [
          "Time-consuming functions",
          "Lifecycle of a Component",
          "Lifecycle Methods",
          "render()",
          "constructor()",
          "componentDidMount()",
          "componentDidUpdate()",
          "componentWillUnmount()",
          "Other Lifecycle Methods",
          "Effect Hook",
          "useEffect on componentDidUpdate()",
          "useEffect on componentDidMount()",
          "useEffect on componentWillUnmount()"
        ],
        "Styling Components": [
          "Styling Components",
          "Preparing our App",
          "Inline Styling",
          "CSS",
          "Self-Contained Components",
          "Using Variables for Class Name",
          "Sass",
          "Sass - Setup",
          "Sass - Nesting",
          "Sass - Variables",
          "Sass - Import",
          "Sass - Mixins",
          "Using Libraries",
          "CSS Layouts",
          "Responsive Web Design",
          "Styling the App (1 of 2)",
          "Styling the App (2 of 2)"
        ]
      },
      "requirements": [
        "Understanding the fundamentals of web development and familiarity with HTML tags.",
        "Familiarity with basic JavaScript concepts and syntax.",
        "Basic knowledge of CSS for styling web applications.",
        "Knowledge of Git and GitHub for version control will be beneficial."
      ],
      "description": "Master the art of building dynamic and modern web applications with our comprehensive React JS course. Whether you're a beginner or an experienced web developer, this course will take you from the fundamentals to advanced concepts, equipping you with the skills to create robust and interactive user interfaces.\nIn this course, you'll start with an introduction to React JS and learn how to leverage JSX, a powerful syntax extension, to build reusable components. You'll dive into essential topics like component composition, event handling, and state management, gaining a solid understanding of how React manages the UI and data flow.\nOur course covers critical aspects of React JS development, including forms, components lifecycle, and styling techniques to create visually appealing interfaces. You'll explore popular libraries like Redux for efficient state management and React Router for building single-page applications with smooth navigation.\nTo enhance your application's functionality, we'll guide you through integrating cloud storage using Firebase and interacting with RESTful APIs for seamless data retrieval and manipulation. As an extra section, we'll introduce TypeScript, a statically typed superset of JavaScript, to help you write more reliable and scalable React applications.\nWith hands-on projects, you'll gain real-world experience and reinforce your learning. By the end of the course, you'll have the confidence to build powerful web applications from scratch and deploy them for the world to see.\nUnlock the potential of React JS and become a proficient web developer. Enroll now and embark on an exciting journey of learning, growth, and creativity in the world of React JS!",
      "target_audience": [
        "Beginner web developers looking to learn React JS from scratch and build a strong foundation in professional front-end development.",
        "Experienced web developers who want to expand their skill set and enhance their knowledge of React JS for building modern web applications.",
        "Students and professionals seeking to boost their employability by acquiring in-demand React JS skills, as React is widely used in the industry.",
        "Individuals familiar with JavaScript who want to dive deeper into the world of component-based UI development and state management with React JS.",
        "Freelancers and entrepreneurs aiming to create interactive and dynamic user interfaces for their own projects or client work using React JS.",
        "Front-end developers interested in learning popular libraries and tools like Redux, React Router, and integrating APIs and cloud storage into their applications."
      ]
    },
    {
      "title": "Introduction to Backend development with Kotlin & Micronaut",
      "url": "https://www.udemy.com/course/introduction-to-backend-development-with-kotlin-micronaut/",
      "bio": "Learn how to build fast, Lightweight and reactive applications with Micronaut, Kotlin, Redis, JDBC/JOOQ, and Kafka",
      "objectives": [
        "How to set up a development environment for Micronaut",
        "How to Building a simple REST API",
        "Test driven development, Unit & Integration Testing",
        "Integrate with a database using Micronaut Data-JDBC",
        "Integrate with a database using JOOQ",
        "Integrate with Apache Kafka using Micronaut Kafka",
        "Integrate with Redis, and Cache an endpoint.",
        "Integrate with MongoDB, and perform common operations."
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of the Kotlin programming language (optional)",
        "Familiarity with SQL and database management systems.",
        "Understanding of microservices architecture and RESTful API design",
        "Exposure to Kafka and message-based systems (optional but recommended)",
        "Familiarity with Dependency Injection (optional)"
      ],
      "description": "In this course, you will learn how to use Micronaut and Kotlin to create fast, lightweight and reactive web applications.\nMicronaut is a modern framework for building microservices and serverless applications with Kotlin. It offers compile-time dependency injection, AOP, configuration management, HTTP client and server, and GraalVM support.\nKotlin is a concise and expressive language that runs on the JVM and can interoperate with Java. It offers many features that make web development easier and more enjoyable, such as null safety, data classes, coroutines, extension functions, and DSLs.\n\n\nYou will explore the main features and benefits of Micronaut and Kotlin through a series of hands-on exercises. You will learn how to create REST APIs with Micronaut and test your applications with Micronaut Test and JUnit 5.\nYou will also learn how to use Micronaut Data to interact with relational (E.g. MySQL/Postgres) and non-relational (E.g., MongoDB) databases.\n\n\nThis course is suitable for developers who have some basic knowledge of Kotlin and web development, as well as those who want to explore new frameworks and tools. By the end of this course, you will have a solid understanding of how to use Micronaut and Kotlin to create scalable and resilient web applications.",
      "target_audience": [
        "Developers who want to learn how to use Micronaut and Kotlin to create fast, lightweight and reactive web applications.",
        "Developers who are interested in learning about data management and repository development in Micronaut with Kotlin",
        "Beginners who have some basic knowledge of Kotlin and web development",
        "Intermediate or advanced developers who want to explore new frameworks and tools."
      ]
    },
    {
      "title": "Selenium WebDriver +Java-Basic to Advanced+ RealTime Project",
      "url": "https://www.udemy.com/course/selenium-webdriver-java-basic-to-advanced-realtime-project/",
      "bio": "Selenium Web Driver beginner to Master level content.",
      "objectives": [
        "Student will learn Selenium WebDriver from basic to experience level",
        "Student will Learn to write basic script .",
        "Student will learn to develop framework",
        "Student will learn to automate any web Application"
      ],
      "course_content": {
        "Syllabus And Feedback": [
          "Syllabus And Feedback_Part-1"
        ],
        "Introduction of Selenium": [
          "When Should go for Automation Testing-Part-2",
          "What is Automation Testing Part-3",
          "Introduction Of Selenium_Part-4"
        ],
        "What is difference between Selenium IDE Selenium RC and Selenium Grid": [
          "Selenium IDE Selenium RC and Selenium Grid_Part-5"
        ],
        "Types of Locators & Xpath in Selenium": [
          "Locator_part-7",
          "What is Xpath-Part-8",
          "X-path And Type Of Xpath_Part-9"
        ],
        "Selenium First Script and Basic Method": [
          "Selenium First Script and Basic Method_part-10"
        ],
        "How to verify Text on WebPage-getText()": [
          "Verify Text On WebPage_Part-11",
          "Reusable Method For GetText() Method_Part-12"
        ],
        "How to handle Radio Button In Selenium_Part-13": [
          "How to handle Radio Button_Part-13",
          "Reusable Method For_is Selected() _Radio button_Part-14"
        ],
        "How to handle Checkbox And Create reusable Method": [
          "How to handle Checkbox And Create reusable Method_Part-15"
        ],
        "How to Select multiple Check Box_Part-16": [
          "How to Select multiple Check Box_Part-16",
          "Multiple Check Box Reusable Method_Part-17"
        ],
        "What is isDisplayed() isEnabled and isSelected()_Part-18": [
          "What is isDisplaye()_isEnabled()_isSelected()_Part-18"
        ]
      },
      "requirements": [
        "prerequisites you having very good knowledge in Core java skills ."
      ],
      "description": "Hi all, We have designed  Selenium WebDriver  beginner to Master level content. This, course for Manual Tester, Non-Tech Or If having long gap and trying to get job in Automation Testing . After completing course  you are very confidence Selenium WebDriver  basic to framework development and You can crack any interview .\nThis, course for Manual Tester, Non-Tech Or If having log gap and trying to get job in Automation Testing  After completing course you are very confidence  Selenium WebDriver basic to advanced and You can crack any interview .\n\n\nSelenium Syllabus\n=================\n1>Download and Install Java\n\n\n2>Configure Setup-Eclipse,Selenium,TestNG\n\n\n3>Difference between Webdriver, RC and IDE\n\n\n4>How to execute test cases in IE browser using Selenium Webdriver\n\n\n5>Challenges with IE browser in Selenium Webdriver\n\n\n6>XPath plugin for Firefox\n\n\n7>Complete study of Dynamic XPath in Selenium\n\n\n8>XPath plugin for Chrome\n\n\n9>How to verify Page title in Selenium Web driver\n\n\n10>How to work with Radio button and Checkbox in Selenium\nWebdriver + How to create re-suabe method to add in Framework\n\n\n11>Handle Basic Drop down in Selenium WebDriver + How to create re-usable method to add in Framework\n\n\n12>Guide to perform Drag and Drop in Selenium + How to create re-usable method to add in Framework\n\n\n13>How to perform Advance activity in Selenium like- Mouse Hover,\nRightClick, DoubleClick, Keyboard Event ( How to create re-usable method to add in Framework)\n\n\n14>Implicit wait in selenium Webdriver ( How to create re-usable method to add in Framework)\n\n\n15>Explicit Wait in Selenium Webdriver ( How to create re-usable method to add in Framework)\n\n\n16>Fluent Wait in Selenium Webdriver ( How to create re-usable method to add in Framework)\n\n\n17>How to capture error message in Selenium Webdriver. ( How to create re-usable method to add in Framework)\n\n\n18>How to handle frames in Selenium Webdriver ( How to create re-usable method to add in Framework)\n\n\n19>How to handle Alert in Selenium Webdriver( How to create re-usable method to add in Framework)\n\n\n20>How to handle Calender in Selenium Webdriver( How to create re-usable method to add in Framework)\n\n\n21>How to capture Screenshot in Selenium( How to create re-usable method to add in Framework)\n\n\n22>How to capture screenshots of failed test cases in Selenium\nWebdriver ( How to create re-usable method to add in Framework)\n\n\n23>How to capture tooltip in Selenium Webdriver\n\n\n24>How to scroll page in Selenium Webdriver ( How to create re-usable method to add in Framework)\n\n\n25>How to handle Exception in Webdriver\n\n\n26>Solution for java.lang.illegalstateexception in Selenium\nWebdriver\n\n\n28>How to handle Element not visible exception\n\n\n29>Solution for sendkeys(CharSequence) in Selenium\n\n\n30>How to Handle Stale element reference exception in Selenium\nWebdriver\n\n\n31>Difference between findElement and findElements in Selenium\nWebdriver\n\n\n32>- Page Object Model in Selenium – Complete Guide\n\n\n33>Read and Write Excel file in Selenium using Apache\n\n\n34>Data Driven Framework in Selenium\n\n\n35>Maven Integration with Selenium\n\n\n36>Configure Eclipse with Selenium and TestNG\n\n\n37>Create First TestNG Program and Execute.\nConfigure Eclipse with Selenium and TestNG\n\n\n38>Check reports generated by TestNG\n\n\n39>Cross browser testing using TestNG\n\n\n40>Create Data driven framework using DataProivider\n\n\n41>How to execute only failed testcases in Selenium Webdriver\n\n\n42>How to disable testcase in Selenium using TestNG\n\n\n43>How to group Testcases in Selenium using TestNG\n\n\n44>How to create dependency between Test cases in Selenium\nWebdriver\n\n\n45>How to execute testng.xml file through Java Program\n\n\n46>Execute Selenium Webdriver Test cases parallel using TestNG\n\n\n48)Git\n\n\n49>Jenkins\n50>Framework from scratch\n1)Develop Maven project (How to configure maven)\n2)Create Page Object model\n3)Create Base class\n4)create utility class\n5)create Handler class\n6)Run all test cases using XML file\n7)Create log4j\n8)Take screenshot for fail test cases\n51) Real Time project Assignments",
      "target_audience": [
        "Beginner and experiences",
        "B Tech ,Bcom ,Fresher and Experience (Technical and non-technical ,Manual Tester and Non-CSE)"
      ]
    },
    {
      "title": "Advanced Python Programming: Mastering Key Concepts",
      "url": "https://www.udemy.com/course/advanced-python-programming-mastering-key-concepts/",
      "bio": "Advanced Python Programming: Multiple-Choice Questions for Mastery",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is designed for Python developers looking to master advanced programming concepts through hands-on practice and multiple-choice questions (MCQs). In this course, you'll deepen your understanding of key Python topics such as context managers, decorators, exception handling, file handling, generators, iterators, and object-oriented programming (OOP). Additionally, you will explore functional programming principles, including higher-order functions and lambda expressions. Each topic is carefully broken down with clear explanations and MCQs to test your comprehension and application of the concepts.\nThe course will challenge you with real-world scenarios where you'll need to apply Python techniques to solve complex problems. By focusing on multiple-choice questions, you'll reinforce your knowledge and ensure you are ready to tackle practical Python coding challenges.\nWhether you're aiming to refine your skills for professional development, preparing for technical interviews, or looking to deepen your understanding of Python's advanced features, this course offers a structured and interactive learning experience.\nYou'll gain proficiency in writing efficient, scalable, and maintainable Python code that can handle large datasets, perform complex computations, and build real-world applications. Upon completion, you'll be well-equipped to approach Python programming with confidence, applying best practices across various domains and real-world situations. This course will prepare you for tackling advanced Python challenges with clarity and precision.",
      "target_audience": [
        "Intermediate to advanced Python developers looking to deepen their knowledge.",
        "Software engineers seeking to enhance their coding skills with advanced Python techniques."
      ]
    },
    {
      "title": "Full Stack LinkedIn Prototype With Next.js",
      "url": "https://www.udemy.com/course/full-stack-nextjs-professional-network-app/",
      "bio": "Build And Deploy A Professional Network App With NextJS, Drizzle ORM, PostgreSQL, TailwindCSS, NextAuth, And Vercel",
      "objectives": [
        "Build a well-crafted, full stack, and modern business web application",
        "Implement features commonly found in modern applications including pagination, sorting, authentication, and more",
        "Leverage NextJS features such as App Router, Route Groups, Server Components, Client Components, Server Actions, and Caching",
        "Build a recommendation system from scratch",
        "Deploy the app to Vercel and troubleshoot deployment gotchas"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Description",
          "Project Requirements",
          "UI Design",
          "Database Design",
          "Technologies",
          "Installation",
          "Resources"
        ],
        "Initial Setup": [
          "Initialize Next.js Project",
          "Open Project Directory",
          "Clean Up Home Page And Global CSS",
          "Home Page Design Review",
          "Install Mantine Dependencies",
          "Mantine Setup",
          "Hard Code Dark Mode",
          "Style The Home Page",
          "Mantine Vs TailwindCSS"
        ],
        "Caching": [
          "Caching Introduction",
          "Cached Page Example",
          "Not Cached Page Example",
          "Time Based Revalidation Example",
          "On Demand Revalidation Example",
          "Link Prefetching Example",
          "What Makes A Page Dynamic"
        ],
        "Authentication: NextAuth, DrizzleORM": [
          "Authentication Introduction",
          "Create Database",
          "Install Dependencies",
          "Create Schema",
          "Create Config File",
          "Create Drizzle DB Instance",
          "Create Auth Options",
          "Create NextAuth API Routes",
          "Create GitHub OAuth App",
          "Copy Env Variables Into Env Local",
          "Create Drizzle Config",
          "Run The Push Command",
          "Session Provider",
          "Login Button Component",
          "Test The Login Button",
          "Create Restricted API Route",
          "Create Restricted Page",
          "Create Custom Sign In Page",
          "Test Custom Sign In Page",
          "Problem With Session Provider At Root Layout",
          "Route Group For Dynamic Routes",
          "Style The Sign In Page",
          "Drizzle ORM"
        ],
        "Dashboard Layout: App Shell, Mobile Burger, Nav Links": [
          "Dashboard Introduction",
          "Dashboard Page Stub",
          "Dashboard Layout",
          "App Shell Container",
          "Mobile Burger",
          "Header Menu And Sign Out",
          "Nav Links",
          "Display Avatar Image"
        ],
        "People Page: Database Seed, Pagination, Skeletons": [
          "People Page Introduction",
          "Seed Users Script",
          "Seed Job Titles",
          "Render User List",
          "Page Search Params",
          "Limit And Offset",
          "Count And Num Pages",
          "Pagination Container",
          "Pagination On Change",
          "Highlight Active Page",
          "User Card And Grid Layout",
          "Loading Skeletons",
          "Path Param And Link To Person Detail",
          "Loading Page For Person Detail"
        ],
        "Search Page: ILIKE And Fuzzy Matching": [
          "Search Introduction",
          "Search Input",
          "Search Page",
          "Search Result Table",
          "Drizzle Logger",
          "Fuzzy Search And Raw SQL"
        ],
        "Skills List Page: DrizzleORM Aggregates": [
          "Skills Page Introduction",
          "Skills Schema",
          "Seed Skills Script",
          "Seed Users To Skills",
          "Skills List Page"
        ],
        "Skill Detail Page: Sorting And Query Building": [
          "Skill Detail Page Introduction",
          "List Users With Skill",
          "Sort Skill Select Component",
          "Order By Sort Param",
          "Style Skill Detail Page"
        ],
        "Profile Page: Rich Text Editor, Forms, And Notifications": [
          "Profile Page Introduction",
          "Server Actions Vs API Routes",
          "Server Component Vs Client Component",
          "Install Zod",
          "Update User Action",
          "Bio Field",
          "Update User Action Continued",
          "User Form",
          "Fix Session Bug",
          "User Form Submission",
          "Mantine Notification System",
          "Rich Text Editor Stub",
          "Wire Up The Editor",
          "Editor Style",
          "Working With Forms And Server Actions",
          "Fix Use Effect Bug"
        ]
      },
      "requirements": [
        "Basic knowledge of Web Dev and Command Line is recommended",
        "Basic knowledge of JavaScript and React is recommended",
        "Basic knowledge of Git and GitHub is recommended"
      ],
      "description": "Embark on a transformative journey in our comprehensive course, \"Full Stack Next.js: LinkedIn Prototype,\" where you'll gain the skills and knowledge needed to develop a cutting-edge full stack web application. This course is designed to equip you with proficiency in Next.js, a powerful framework for building modern web applications.\n\n\nHere's a glimpse of what you'll learn:\n\n\nBuild with Next.js: Learn the art of developing a full stack web application using Next.js, leveraging its capabilities for seamless server-side rendering.\n\n\nDatabase Interaction: Utilize TablePlus to interact seamlessly with a PostgreSQL database, gaining hands-on experience in managing and retrieving data.\n\n\nDesign with TailwindCSS: Elevate your application's aesthetic appeal by styling it with TailwindCSS, a utility-first CSS framework known for its flexibility and responsiveness.\n\n\nCaching Strategies: Explore various caching mechanisms in Next.js to optimize performance and enhance user experience.\n\n\nAuthentication with NextAuth: Set up OAuth authentication seamlessly with NextAuth, ensuring secure and user-friendly login processes.\n\n\nORM Schemas with Drizzle: Dive into Drizzle ORM schemas to efficiently manage database updates, and use Drizzle Kit to push schema changes effortlessly.\n\n\nDashboard Creation: Build a dynamic and feature-rich dashboard using Mantine AppShell, enhancing the usability of your application.\n\n\nResponsive Design: Implement responsive design principles using Mantine AppShell and TailwindCSS breakpoints, ensuring a seamless experience across devices.\n\n\nWeb Development Patterns: Implement common web development patterns such as pagination, sorting, and filtering for an intuitive user experience.\n\n\nAdvanced Database Features: Implement fuzzy search with pg_trgm.\n\n\nScripting: Write TypeScript scripts to seed the database with realistic fake data.\n\n\nForm Building: Construct robust forms using React's useFormState hook and Server Actions, while ensuring server-side data validation with zod.\n\n\nRich Text Editing: Leverage Mantine's TipTap Rich Text Editor to enhance content creation within your application.\n\n\nData Visualization: Build visually appealing charts using Mantine charts, adding depth and clarity to your application's insights.\n\n\nDark Mode Switcher: Implement a local storage-based dark mode switcher, providing users with a personalized and visually comfortable experience.\n\n\nRecommendation System: Construct a recommendation system using Cosine Similarity and K Nearest Neighbors algorithm, and validate its functionality with unit testing using Vitest.\n\n\nDeployment: Deploy your application seamlessly to Vercel, while learning to debug unexpected deployment challenges like a pro.\n\n\nEmbark on this transformative learning experience, and empower yourself with the skills needed to create robust and professional full stack web applications. Elevate your career with \"Full Stack Next.js: Professional Network App\" today.",
      "target_audience": [
        "Beginner to intermediate web developers looking to explore full stack development with NextJS",
        "Beginner to intermediate web developers seeking to build a business dashboard app with a modern tech stack"
      ]
    },
    {
      "title": "Create a Photography Website With WordPress - From Scratch",
      "url": "https://www.udemy.com/course/create-a-professional-photography-website-using-wordpress/",
      "bio": "Learn How to Create a Professional Looking Photography Website to Display Your Portfolio and Attract Clients (NO CODING)",
      "objectives": [
        "How to create a professional photography website using WordPress",
        "Understand the different elements that make a professional website",
        "Learn how to use WordPress to create a professional website without coding",
        "How to change the look and feel of a website with a few clicks",
        "How to upload photos and portfolio content on the website",
        "Best practices for creating and maintaining a professional website",
        "How to create a professional website in the least possible budget",
        "Learn how to create a stunning photography website without any coding knowledge.",
        "Understand the best website platforms and why WordPress is ideal for photographers.",
        "Get step-by-step guidance on buying a domain and hosting in a budget-friendly way.",
        "Discover how to install WordPress and a beautiful photography theme with ease.",
        "Customize demo content to create your own unique portfolio and service pages.",
        "Learn how to structure your website to attract clients and display your work professionally.",
        "Build a complete, live photography website that promotes your brand and grows your business."
      ],
      "course_content": {
        "Understanding the Process of Creating a Photography Website": [
          "Introduction to the Course",
          "Different Platforms That Can be Used to Create a Photography Website",
          "(Optional video) - How to Create a Photography Website Using Wix",
          "Why WordPress is the Best Platform for Creating Your Photography Website",
          "Understanding the Anatomy and Structure of a Website"
        ],
        "Understanding Domain Name, Hosting and Website Making Software": [
          "What is a Domain Name?",
          "Link to the Business Name Generator Tool",
          "What is a Hosting Service?",
          "What is a Website Making Software or a Content Management System (CMS)?",
          "What is the Exact Process of Creating a Photography Website Using WordPress?"
        ],
        "Buying a Domain Name and Hosting Service": [
          "Important Links to be Used in the Upcoming Videos",
          "Buying a Domain Name for Your Photography Website",
          "IMPORTANT UPDATE - I have changed my hosting company",
          "Links to Hostinger and Fiverr",
          "Buying Hosting Service for Your Photography Website - Part 1",
          "Buying Hosting Service for Your Photography Website - Part 2"
        ],
        "Connecting Domain Name and Hosting Service and Installing WordPress": [
          "Connecting Domain Name and Hosting Service and Installing WordPress - Part 1",
          "Connecting Domain Name and Hosting Service and Installing WordPress - Part 2"
        ],
        "Installing Photography Theme and Importing Demo Content": [
          "Installing Photography Theme and Importing Demo Content - Part 1",
          "Link to the Photography Theme Shown in the Video",
          "Installing Photography Theme and Importing Demo Content - Part 2",
          "Installing Photography Theme and Importing Demo Content - Part 3",
          "Installing Photography Theme and Importing Demo Content - Part 4"
        ],
        "Checking Mobile Responsiveness": [
          "Making Some Initial Changes Inside WordPress and Checking Mobile Responsiveness"
        ],
        "Changing the Content on the Website": [
          "Link to the Image Resizing and Optimizing Tool",
          "Changing the Main Front Page Image - Part 1",
          "Changing the Main Front Page Image - Part 2",
          "Changing the Gallery Images - Part 1",
          "Changing the Gallery Images - Part 2"
        ],
        "Changing the Different Pages on the Website": [
          "Changing the About Us Page",
          "Changing the Contact Us Page",
          "Making Miscellaneous Changes - Blog, Gallery and Menu"
        ],
        "Creating the Website Logo": [
          "Important Links Shown in the Upcoming Videos",
          "Creating the Logo for Website and Business - Part 1",
          "Creating the Logo for Website and Business - Part 2"
        ],
        "Creating the Favicon": [
          "Creating the Website Favicon"
        ]
      },
      "requirements": [
        "There are no pre-requisites. You DON'T need to know coding. It's perfect for complete beginners."
      ],
      "description": "Want to showcase your photography in a professional, stunning website — without writing a single line of code?\nWhether you're a freelance photographer, a hobbyist looking to go pro, or a creative building your online presence — a website is non-negotiable in today’s digital world. But here’s the good news:\nYou don’t need to hire an expensive developer or learn complex tech skills.\nYou can do it all yourself — faster and cheaper than you think.\nIn this hands-on course, I’ll walk you step-by-step through creating a fully functional, professional-grade photography website using WordPress, the world’s most powerful website platform — no coding required.\nOver the years, I’ve studied hundreds of photography websites to identify what makes them effective, eye-catching, and conversion-ready. Based on that research, I’ve created a simple yet powerful system that allows anyone — even total beginners — to build a sleek and modern site that beautifully showcases your work and helps you attract clients.\nWhat You’ll Learn:\n• The best platform for creating a photography website — and why WordPress wins\n• The essential anatomy of a great photography site: layout, pages, galleries, calls to action, and more\n• How to choose and purchase your domain name and hosting — the smart and budget-friendly way\n• How to connect everything and install WordPress without tech headaches\n• The exact theme I recommend for photographers — optimized for beauty and speed\n• How to install demo content and customize it with your own photos and text\n• How to structure your site to promote both your portfolio and services\nBy the end of this course, you'll have your own fully functional photography website live on the internet — something that not only builds credibility, but also gives you a permanent online hub to attract clients and showcase your craft.\nWhy take this course from me?\nI’m a professional photography and videography instructor who’s taught over 40,000 students from more than 165 countries. I’ve seen firsthand how many creatives delay building a website because they think it’s too complicated or expensive. But once they go through this course, they realize they can do it themselves — and often end up helping others do the same.\nNo coding. No design skills. No unnecessary fluff.\nJust a clear, beginner-friendly process to create a powerful photography website — from scratch.\nIf you’re serious about growing your photography brand, getting more clients, and owning your corner of the web, this is the course for you.\nSo let’s get started — enroll now and build your website today!",
      "target_audience": [
        "This course is for photographers who want to learn how to create their own professional website in the easiest and cheapest possible manner."
      ]
    },
    {
      "title": "JWT Authentication using MERN Stack",
      "url": "https://www.udemy.com/course/jwt-authentication-using-mern-stack/",
      "bio": "Learn how to use JSON Web Token to secure REST applications, manage authentication.",
      "objectives": [
        "What is JWT ? (JSON Web Token)",
        "How to make your application more secure",
        "Encrypting password with hashing and verification",
        "Manage User security roles with tokens"
      ],
      "course_content": {
        "Promo": [
          "What's in this course"
        ],
        "Introduction Section": [
          "Introduction to JWT",
          "Demo of Project"
        ],
        "First Steps into Project": [
          "Creating and setting up frontend",
          "Creating and setting up backend",
          "Join our community"
        ],
        "Database connection": [
          "MongoDB Connection to our Project",
          "Creating Database in Mongo Atlas"
        ],
        "Creating Auth Pages": [
          "Implementing Routing",
          "Login Page - 1",
          "Login Page - 2",
          "Register page"
        ],
        "User Authentication Implementation": [
          "Form validation",
          "Creating user Model and route",
          "Registering user with backend",
          "Registering user with frontend",
          "Logging in user"
        ],
        "Adding password Hashing": [
          "Hashing - 1",
          "Hashing - 2",
          "Adding Toastify alerts"
        ],
        "JSON Web Token": [
          "Problem with saving cred in local",
          "JWT Implementation",
          "Protecting routes"
        ],
        "Dashbaord": [
          "Dashbaord part 1",
          "Dashboard part 2",
          "Decrypting Token into data",
          "Logout Function",
          "Update Password Backend",
          "Update Password Frontend"
        ],
        "Email Verification": [
          "Nodemailer basics",
          "Mail verify 1",
          "Gmail App Passwords Document",
          "Backend Mail Verify",
          "Frontend Mail Verify"
        ]
      },
      "requirements": [
        "Familiarity with Javascript",
        "Basic Knowledge of MongoDb database",
        "Prior experience in React and Node JS",
        "Clear Idea about Redux State Management Library"
      ],
      "description": "What is JSON Web Token?\nJSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.\n\n\nJSON Web Token (JWT, pronounced /dʒɒt/, same as the word \"jot\"[1]) is a proposed Internet standard for creating data with optional signature and/or optional encryption whose payload holds JSON that asserts some number of claims. The tokens are signed either using a private secret or a public/private key.\n\n\nJWTs consist of three parts separated by dots (.), which are:\nHeader\nPayload\nSignature\n\n\nLet’s explain some concepts of this definition further.\nCompact: Because of its size, it can be sent through an URL, POST parameter, or inside an HTTP header. Additionally, due to its size its transmission is fast.\nSelf-contained: The payload contains all the required information about the user, to avoid querying the database more than once.\nIn authentication, when the user successfully logs in using their credentials, a JSON Web Token will be returned. Since tokens are credentials, great care must be taken to prevent security issues. In general, you should not keep tokens longer than required.\nYou also should not store sensitive session data in browser storage due to lack of security.\nWhenever the user wants to access a protected route, it should send the JWT, typically in the Authorization header using the Bearer schema. Therefore the content of the header should look like the following.",
      "target_audience": [
        "Developers interested in JSON Web Token (JWT)",
        "Developers interested in Developing Websites",
        "Developers interested in React JS",
        "Developers interested in Node JS"
      ]
    },
    {
      "title": "Next.js Course: Build a Production-Ready Movie App Project",
      "url": "https://www.udemy.com/course/next-js-bootcamp-build-real-world-production-ready-projects/",
      "bio": "Build Real-World Apps with Next.js, Tailwind CSS, Material UI, and TypeScript—Starting with a Dynamic Next.js Project.",
      "objectives": [
        "Build A Fully Functional Movie App Using Next JS And TMDB API",
        "Master Core Next JS Concepts Like Server-Side Rendering (SSR) And Static Site Generation (SSG)",
        "Implement Responsive Designs Using Tailwind CSS",
        "Learn To Create Modern, Stylish Components With Material UI",
        "Integrate TypeScript For Type-Safe And Scalable Application Development",
        "Handle API Routes And Data Fetching In Next JS",
        "Develop A Dynamic Search Feature With Real-Time Results",
        "Build Pagination, Filtering, And Advanced Layouts For Movies And TV Shows",
        "Deploy Projects To Vercel For Live, Production-Ready Applications",
        "Optimize Apps For Responsiveness Across Mobile And Desktop Devices"
      ],
      "course_content": {
        "Next JS Movie Web App : Project - 1": [
          "Next JS Movie Web App Project Overview - Live Demo",
          "Next JS Movie Web App Project : Source Code",
          "Project and Theme Setup Part - 1",
          "Absolute Routes Part - 2",
          "Nested Route and Dynamic Route Part - 3",
          "Layout Part - 4",
          "Navbar Part - 5",
          "Navbar Adjustments for Mobile Screen Part - 6",
          "Navbar Input Field Part - 7",
          "React Context API Part - 8",
          "TMDB API Part - 9",
          "Fetch Movie Data for Context API Part - 10",
          "Simple Banner Section Part - 11",
          "Dynamic Banner Page Movie Type Part - 12",
          "Global Type Safely for Each Movies Part - 13",
          "Custom Function for the Banner Slider Part - 14",
          "Custom Countdown Progress Circle for Banner Part - 15",
          "Banner Button Optimized Part - 16",
          "Banner BG Banner Poster Banner Gradient Overlay Part - 17",
          "Banner Details Part - 18",
          "Rating Element from MUI Part - 19",
          "Second Slider Part - 20",
          "Slider Data Fetched Part - 21",
          "Slider Customization Part - 22",
          "Slider Styling Part - 23",
          "Card Group Containers Data Fetch Part - 24",
          "Griding The Card Group Part - 25",
          "Prop Drilling Media Into TV and Movie Card Part - 26",
          "Movie Cards Part - 27",
          "Finishing The Movie Card Part - 28",
          "Setting Up The Page Context Part - 29",
          "Conditionally Rendering The Pages Part - 30",
          "Make The Pagination Functional Part - 31",
          "Updating States and Context Type Part - 32",
          "Update The Default Context Part - 33",
          "Update The Fetch API for The Context Part - 34",
          "Introduction to TABS Part - 35",
          "Adding Handler to Active Tabs Part - 36",
          "TV Show Page Part - 37",
          "TV Show Cards Part - 38",
          "TV Show Type for The TV Card Part - 39",
          "Details Movie Page Part - 40",
          "Detailed Movie Page Functionality Part - 41",
          "Data Drilling Into UI Components Part - 42",
          "Media Details Banner in Detailed Movie Page Part - 43",
          "Rendering Data Into Media Details Component Part - 44",
          "Finishing The Media Details Component Part - 45",
          "Intro to Trailer Component Part - 46",
          "Intro to YouTube Player Component Part - 47",
          "Intro to Casting Component Part - 48",
          "Rendering The Casts Part - 49",
          "Adding Animations to The Casting Component Part - 50",
          "Intro to Scenes Component Part - 51",
          "Finishing The Scenes Component Part - 52",
          "Intro to Scene Modal Component Part - 53",
          "Intro to Similar Movie Component Part - 54",
          "Finishing The Similar Movie Component Part - 55",
          "Details Page for The TV Shows Part - 56",
          "Intro to The Footer Component Part - 57",
          "Make the Navbar Conditional Base on Current Path Part - 58",
          "Adjusting the Navbar Style Part - 59",
          "Intro to Theme Toggle Component Part - 60",
          "Adjusting the Search Box Component Part - 61",
          "Finishing The Search Box Component Part - 62",
          "Intro to Search Result Component Part - 63",
          "Correcting The States and Debug Part - 64",
          "Hosting The Entire Project on Vercel Part - 65"
        ]
      },
      "requirements": [
        "Students Don't Need To Have Any Prior Knowledge To Take This Course; They Will Learn Everything From It."
      ],
      "description": "In this comprehensive Next.js Bootcamp, you will build real-world, production-ready applications from scratch. The core project is a Movie Web App using the TMDB API, where students will learn:\n\n\nFetching movie data from the TMDB API\nImplementing a dynamic movie search feature\nCreating a movie details page with trailers and cast information\nBuilding a responsive slider for featured movies\nPagination and filtering functionality for movies and TV shows\nMaking the application fully responsive for mobile and desktop using Tailwind CSS and Material UI\n\n\nThis hands-on course covers all essential Next.js concepts, including server-side rendering (SSR), static site generation (SSG), and API routes. You'll enhance your TypeScript skills while learning to manage complex states and props in Next.js.\nAdditionally, you will master how to style modern web applications using Tailwind CSS for fast, responsive design and Material UI for elegant component libraries.\nWe’ll also guide you through deploying your project on Vercel, so you’ll be able to showcase your movie app live on the web with a custom domain, setting up production environments effortlessly.\nBy the end of this course, you'll have the expertise to build and deploy any web application using Next.js, TypeScript, Tailwind CSS, and Material UI—all while deploying production-ready projects to the cloud.",
      "target_audience": [
        "Beginners Looking To Dive Into Web Development With Next JS",
        "Aspiring Developers Wanting To Build Real-World Projects",
        "Front-End Developers Seeking To Enhance Their Skills With Modern Technologies",
        "Anyone Interested In Learning About TypeScript And Its Benefits",
        "Designers Wanting To Implement Functional Prototypes With Tailwind CSS",
        "Students Eager To Learn About API Integration In Web Applications",
        "Professionals Aiming To Expand Their Skill Set With Material UI",
        "Individuals Interested In Building Responsive And Dynamic Web Apps",
        "Developers Who Want To Deploy Their Projects To The Cloud",
        "Anyone Looking To Create A Portfolio With A Completed Movie App Project"
      ]
    },
    {
      "title": "Complete Web Development Bootcamp: Full-stack Course 2025",
      "url": "https://www.udemy.com/course/complete-web-development-bootcamp/",
      "bio": "Master Full-Stack Skills in 2025: Build, Deploy, and Launch Modern Web Apps from Scratch!",
      "objectives": [
        "Learn HTML, CSS, and JavaScript to build responsive, dynamic websites and lay a strong foundation for web development.",
        "Master Tailwind CSS and Bootstrap for efficient, modern web design and rapid prototyping.",
        "Build dynamic web apps using React.js and Next.js, with expertise in component-based architecture and server-side rendering.",
        "Develop secure backend systems with Python and Django, handling data and creating scalable web applications.",
        "Use Git for version control, enabling smooth collaboration and effective project management in team environments.",
        "Deploy web apps to the cloud using AWS, gaining essential skills in hosting, storage, and server management."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Complete Web Development Bootcamp: Full-stack Course 2025",
          "Introduction to Learning Tools"
        ],
        "HTML (Hyper-Text Markup Language)": [
          "Introduction To HTML",
          "Understanding How HTML Works In The Browser",
          "HTML Basic Structure (Writing Some HTML Codes!)"
        ],
        "Elements In HTML": [
          "How HTML Meta Data Work",
          "Text Elements In HTML",
          "Text Element (part 2) - Bold, Strong, Sub, Sup, Cite, Quotation e.t.c",
          "HTML Comments, Elements Glossary and Module Summary.",
          "Lists In HTML - Order and Unordered, Nested, Description List and More",
          "Links and URLs in HTML",
          "Images In HTML",
          "Block and Inline Level Elements",
          "Tables In HTML",
          "Forms and Inputs In HTML",
          "Semantic HTML",
          "Video, Audio, IFrame and Multimedia In HTML"
        ],
        "CSS (Cascading Style Sheet)": [
          "Introduction To CSS",
          "Structure Of CSS Rules Selectors, Properties and Values."
        ],
        "Adding CSS To HTML": [
          "Inline CSS",
          "Internal CSS",
          "External CSS"
        ],
        "CSS Properties, Styling, Selectors": [
          "CSS Selectors Class, ID, Group and Universal Selectors",
          "Element Styling, Colors and Properties.",
          "Background Image Properties",
          "Text Properties In CSS"
        ],
        "CSS Box Model, Units, Positions, Display and Overflow": [
          "Box Model Padding, Margin, Height, Width and Borders.",
          "CSS Calculation Box Model Width and Height",
          "CSS Borders Border and Border Radius Property",
          "CSS Display: Inline, Block, Flex, Inline-Block",
          "CSS Overflow Handling Scroll and Hidden",
          "CSS Unit and Positions Absolute and Relative."
        ],
        "Animations In CSS, Z-Index, Floating and Pseudo Classes": [
          "Z-Index Property",
          "Floating Elements",
          "Pseudo Classes In CSS",
          "Animations and Transitions In CSS"
        ],
        "Media Query and Responsive Design In CSS": [
          "Media Queries and Responsive Design"
        ],
        "Flexbox and Grid In CSS": [
          "Flexbox",
          "Grid"
        ]
      },
      "requirements": [
        "A computer with internet access to follow along with the course materials and complete coding exercises.",
        "Basic computer literacy, such as navigating files is recommended but not mandatory.",
        "A willingness to learn and practice consistently to build and enhance your web development skills.",
        "No prior coding experience is required, but familiarity with how websites work is a plus.",
        "Dedication to completing projects and engaging with hands-on challenges to reinforce learning."
      ],
      "description": "Join our 30+ hour immersive Web Development Bootcamp and embark on a comprehensive journey to master full-stack development in 2025. This course is designed for learners of all levels, from complete beginners to those with some coding experience, and provides all the tools, resources, and guidance needed to succeed in the field of web development.\nWhether you're aiming to build modern, responsive websites, create powerful web applications, or take your skills to the next level, this bootcamp has you covered.\nWhat You’ll Learn:\nWe’ll guide you through every essential aspect of web development, equipping you with the technical skills and knowledge to become a confident full-stack developer. Here’s a detailed breakdown of the tech stacks and topics covered:\nFrontend Development\nHTML5: Build the foundation of web pages with semantic structure.\nCSS3: Create beautiful, responsive, and dynamic designs.\nJavaScript: Learn core programming concepts, DOM manipulation, and asynchronous programming.\nCSS Frameworks:\nTailwind CSS: Build modern, utility-first designs efficiently.\nBootstrap: Quickly prototype and develop responsive layouts.\nReact.js: Master component-based architecture and build interactive user interfaces.\nNext.js: Dive into server-side rendering, static site generation, and optimized performance.\nBackend Development\nPython: Understand core programming and scripting skills.\nDjango: Build robust, scalable, and secure backend systems.\nVersion Control & Collaboration\nGit: Track, manage, and collaborate on code effectively.\nCloud Services\nAWS: Explore cloud deployment, storage, and hosting solutions for scalable web applications.\nDesign Fundamentals\nFigma: Design and prototype user interfaces that resonate with users.\nProject-Based Learning:\nApply your knowledge to build real-world projects for each language and stack. By the end of the course, you’ll have an impressive portfolio showcasing:\nResponsive websites.\nFull-stack applications.\nCloud-deployed projects.\nDesign prototypes.\nExclusive Learning Tools from Desphixs:\nWe go beyond just videos with a range of innovative tools to enhance your learning experience:\nTutorial-with-Steps: Written forms of video content for clear, step-by-step guidance.\nReal-World Coding Challenges: Tackle practical problems validated by AI for instant feedback.\nInteractive Q&A Practice Tests: Test your knowledge and improve weak areas interactively.\nPersonalized Learning Path: Begin at your current skill level and follow a tailored roadmap.\nPersonalized Developer Mentorship: Get one-on-one guidance from experienced developers.\nArticle Hub: Access in-depth articles for deeper insights and additional learning.\nWhy Choose This Bootcamp?\nComprehensive Coverage: Gain expertise across the full spectrum of web development.\nProject-Based Learning: Learn by doing, ensuring you’re ready for real-world challenges.\nCareer-Focused Tools: Build a portfolio that stands out and access career-enhancing mentorship.\nFlexible Learning: Personalized paths ensure you learn at your pace and level.\nWho is this Course For?\nBeginners looking to start a career in web development.\nIntermediate learners wanting to expand their skill set.\nAnyone passionate about building websites, applications, and modern digital experiences.\nCourse Outcome:\nBy the end of this bootcamp, you will:\nHave a strong understanding of frontend and backend technologies.\nBe proficient in using modern frameworks and tools.\nBuild, deploy, and optimize full-stack web applications.\nHave an impressive portfolio ready to showcase to potential clients or employers.\nBe equipped with the skills and confidence to succeed as a full-stack developer.\nTake the first step toward a successful career in web development. Enroll today and transform your passion into a profession with the support of Desphixs!",
      "target_audience": [
        "Aspiring Developers: If you're looking to switch careers or start a new journey into the world of web development, this bootcamp will give you the skills to build full-stack applications.",
        "Beginner Programmers: No prior experience is required. This course is designed to take you from basic programming concepts to mastering modern web technologies.",
        "Frontend Developers: If you already know frontend development and want to expand your skills to the backend, this course will teach you how to build complete web applications with both frontend and backend knowledge.",
        "Backend Developers: If you're familiar with backend technologies but want to expand your expertise into full-stack development, this course will give you the tools to work seamlessly with both sides.",
        "Tech Enthusiasts: If you’re passionate about learning the latest web technologies and want to understand the entire web development process, this bootcamp is for you."
      ]
    },
    {
      "title": "inventory Management system platform with MERN stack",
      "url": "https://www.udemy.com/course/mern-stack-inventory-management-system-2024-2025/",
      "bio": "Build a Real-World Inventory Management System From Zero to Deployment – Learn by Building",
      "objectives": [
        "build full stack inventory management system from scratch With MERN stack and redux toolkit",
        "the only course U need For Redux Toolkit And Tailwing Css From Zero To Hero",
        "this is based project course u will build and develop a inventory full stack web app system from scratch",
        "Inventory products Stock update Incrementing and decrementing in real time",
        "Purchase requisition and Factory requisitions Note in Inventory",
        "set up and manage mongodb database for storing inventory data",
        "Advance user Authentication and Authorization Functionality",
        "create responsive , modern and appealing Design using Tailwing CSS",
        "Follow Industry best practice for coding Standards Like Pro",
        "Finally deployment"
      ],
      "course_content": {
        "Introduction": [
          "For You",
          "Intro",
          "tailwing css set up",
          "Course Resource",
          "Step by Step"
        ],
        "backend Set up And user Auth": [
          "backend set up",
          "Set Up Mongodb atlas",
          "Connect with Mongoose",
          "user Modal",
          "Register user Api & userRoutes",
          "Middlewares And postman",
          "ErrorHandler And Hash passwords",
          "JWT HTTP COOKIE",
          "Sign in User and Compare passwords",
          "Push to github Backend"
        ],
        "Frontend Setup And User Auth": [
          "Frontend Setup",
          "Landing Screen",
          "Layout Design",
          "Push to github frontend",
          "Set Header",
          "Sidebar",
          "Sidebar part2",
          "Sidebar part3",
          "Login Screen frontend",
          "Register User Screen"
        ],
        "REDUX RTK": [
          "Redux Toolkit",
          "Redux",
          "Login Frontend",
          "Login part2",
          "Register User",
          "Little Fix"
        ],
        "Product Api backend": [
          "Product Modal backend",
          "AuthMiddleware setup",
          "Create Product backend",
          "Get products And product Api",
          "Product Slice Frontend",
          "Dashboard Screen",
          "Refactor CodeAnd Logout User",
          "Protected Routes",
          "Product Detail Screen"
        ],
        "Cart And Requisitions": [
          "CartSlice setup",
          "Push product To Cart",
          "Sidebar little Fix",
          "Cart Requisitions",
          "Cart Requisition part2",
          "Requisition Type Screen",
          "Purchase requisition",
          "Approved Modal",
          "Approved Modal part2",
          "Approved Modal Footer",
          "Delete Reqs From Cart",
          "Little Fix requisition Type"
        ],
        "Orders backend And frontend": [
          "Order Modal backend",
          "Create New Order backend",
          "Orders List And Order detail api",
          "Place Order Slice And screen",
          "place Order screen part2",
          "My Orders list screen part1",
          "My orders List part2",
          "Order Detail Screen",
          "Order detail Summary And Confirm Reqs",
          "LPO - Local purchase Orders",
          "LPO - part2"
        ],
        "Stock Increment And Decrement": [
          "Procurement Navigations",
          "LPO - Procurement",
          "Stock Decrement Backend + Slice",
          "Stock Decrement Factory Reqs",
          "Pending Orders",
          "Pending Orders part2",
          "Little Fix CartItems",
          "Little Fix",
          "Stock Increment By procurement Dept"
        ],
        "Users And Clearance": [
          "get users And update backend",
          "List users",
          "List users part2",
          "List users Screen part3",
          "Edit user Screen",
          "Edit user Data",
          "Screens And Clearance"
        ],
        "Create Sections": [
          "Category Modal backend",
          "Category Slice RTK",
          "Category Modal Frontend",
          "Create product",
          "Create product Modal part2",
          "Create Product finally",
          "Little Fix",
          "Update Product backend",
          "update Product Screen",
          "GRN - Good receive Note backend & frontend",
          "Little Fix",
          "Admin Middleware backend"
        ]
      },
      "requirements": [
        "basic of JS and react is important to follow up this course the rest we will Cover in the Course"
      ],
      "description": "In this hands-on, project-based course, you will build a complete Inventory Management System from scratch using the MERN stack (MongoDB, Express.js, React, Node.js) along with Redux Toolkit for state management and Tailwind CSS for sleek, responsive designs.\nYou will gain real-world experience by developing a fully functional inventory platform—the same kind used by businesses to track stock, manage orders, and streamline operations between departments like warehouse, procurement, and logistics.\nBy the end of this course, you will understand:\nHow inventory companies operate in real time—tracking stock levels, processing requisitions, and updating data across departments.\nHow to build a full-stack application from scratch, including backend APIs, frontend interfaces, and secure authentication.\nHow to use Redux Toolkit like a pro for scalable state management in large applications.\nHow to design stunning UIs with Tailwind CSS, one of the most in-demand CSS frameworks today.\nHow real-time updates work—automatically incrementing/decrementing stock levels when items are added or removed.\nWhat You Will Learn\nMERN Stack Development: Build a full-stack app with MongoDB, Express, React, and Node.js.\nRedux Toolkit: Master state management for large-scale applications.\nTailwind CSS: Design professional, responsive dashboards with ease.\nJWT Authentication: Secure your app with HTTP-only cookies.\nReal-World Workflows: Simulate inventory processes like stock updates, order tracking, and inter-department communication.\nDeployment: Take your project live and learn best practices for production.\nWhy This Course?\nOne Project, End-to-End: No fragmented tutorials—just one cohesive project from start to finish.\nReal-Time Systems: Learn how businesses track inventory dynamically.\nHands-On Coding: Jump in and build with step-by-step guidance.\nProfessional Techniques: Use industry-standard tools (Redux Toolkit, Tailwind) like a seasoned developer.\nBy the end, you will have a portfolio-ready project and the skills to build any full-stack application with confidence.\nEnroll now and start building!",
      "target_audience": [
        "Are u ready to learn to build any full stack we application specially a management platform i will teach u here how to create an inventory management system Later on u can build your own management platform this comprehensive course is design for developers Entrepreneurs and anyone interested in how inventory warehouse works in any company later on can implement any inventory management system"
      ]
    },
    {
      "title": "WhatsApp Clone: Spring Boot, Angular, Keycloak & WebSocket",
      "url": "https://www.udemy.com/course/whatsapp-clone-spring-boot-angular-keycloak-websocket/",
      "bio": "Learn Spring boot, Angular 19, Keylcoak, WebSockets, Bootstrap in one course",
      "objectives": [
        "Develop a Secure Backend with Spring Boot",
        "Create a Dynamic Frontend with Angular 19",
        "Implement Real-Time Messaging",
        "Configure Authentication with Keycloak",
        "Design a Responsive UI with Bootstrap",
        "Deploy and Maintain a Full-Stack Application"
      ],
      "course_content": {
        "Introduction": [
          "Application Demo"
        ],
        "Backend (Spring boot, Keycloak, WebSocket)": [
          "Entity Relationship Diagram (ERD)",
          "Setting up the infrastructure",
          "Create the Spring project",
          "Keycloak initial configuration",
          "Configure the project",
          "Security configuration",
          "Create the entities and the relationships",
          "Create the named queries",
          "Synchronize the users with Keycloak",
          "Implement the Chat domain",
          "Implement the message domain",
          "Implement the file service",
          "Implement the user domain",
          "Implement the WebSocket configuration",
          "Implement the notifications service",
          "Add OpenApi support",
          "Start & test the backend"
        ],
        "Frontend (Angular 19, Bootstrap, Keyclaok, WebSocket)": [
          "Create and configure the frontend project",
          "Keycloak configuration",
          "Add the http interceptor and test the flow",
          "Implementing the main interface",
          "Implement the chat list UI",
          "Implement the messages list",
          "Implement sending messages with emojis",
          "Implement the WebSocket",
          "Attach media files",
          "Implement auto scroll"
        ]
      },
      "requirements": [
        "Basic knowledge about Spring and Java"
      ],
      "description": "Unlock the skills to build a fully functional WhatsApp clone application in this comprehensive course! Designed for developers eager to learn full-stack development, this course takes you step-by-step through creating a real-time messaging app from scratch.\nUsing Spring Boot, Angular 19, Keycloak, WebSockets, and Bootstrap, you'll learn how to integrate modern technologies to create a seamless, secure, and responsive user experience. Whether you're a backend or frontend developer, this course covers everything you need to build and design a robust application.\nWhat You'll Learn:\nBackend Development with Spring Boot: Set up a powerful server-side application with APIs and database integration.\nFrontend Development with Angular 19: Create an interactive and user-friendly interface with reusable components and advanced features.\nReal-Time Messaging: Implement WebSockets for instant communication between users.\nSecure Authentication: Configure Keycloak to handle user authentication and authorization for seamless single sign-on (SSO).\nResponsive Design: Use Bootstrap to design a mobile-friendly and aesthetically pleasing UI.\nStep-by-Step Guidance: Follow a clear roadmap from setting up your development environment to deploying the final product.\nBest Practices: Learn industry-standard practices for structuring, coding, and debugging a full-stack application.\nWho Is This Course For?\nAspiring developers looking to build their portfolio with a full-stack project.\nBackend developers wanting to explore frontend technologies.\nFrontend developers seeking to deepen their knowledge of backend development.\nSoftware engineers interested in mastering WebSockets, Keycloak, and secure authentication.\nAnyone excited to learn by building a real-world application!\nBy the end of this course, you’ll have a fully functional WhatsApp clone app and the knowledge to create similar real-time, secure, and scalable applications.\nJoin us and start building your future as a full-stack developer today!",
      "target_audience": [
        "Developers looking to build a full-stack application from scratch.",
        "Backend developers eager to learn modern frontend technologies like Angular.",
        "Frontend developers interested in mastering backend development with Spring Boot.",
        "Software engineers exploring real-time communication using WebSockets.",
        "Professionals wanting to implement secure authentication using Keycloak.",
        "Aspiring developers seeking hands-on experience with a real-world project."
      ]
    },
    {
      "title": "Build Role-based Authentication using Node.js, JWT, MongoDB",
      "url": "https://www.udemy.com/course/build-role-based-authentication-using-nodejs-jwt-mongoose/",
      "bio": "Learn to Build Token base Authentication APIs with JWT using Nodejs, MongoDB and implement role based API authorization.",
      "objectives": [
        "Learn to setup Express server",
        "Learn to setup mongoDB database",
        "Learn how to build CRUD APIs with Nodejs and Mongoose",
        "Learn how to hash the password before saving it to database.",
        "Learn how to add JWT Authentication with Nodejs",
        "Learn how to implement role based Authentication and Authorization.",
        "Learn How to build Signup, Login, Logout API",
        "Test your API with Postman"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installation",
          "VS Code Setting"
        ],
        "Create Project": [
          "Create Project"
        ],
        "Create MongoDB Database": [
          "Setup MongoDB Database",
          "Create User Model"
        ],
        "Perform CRUD Operation": [
          "Create User Registration",
          "Create User Login",
          "Update User",
          "Delete User"
        ],
        "Create Hash Password": [
          "Create Hash Password for Registration",
          "Create Hash Password for Login"
        ],
        "Authenticate Users with JSON Web Token (JWT)": [
          "Create JWT for registration",
          "Create JWT for Login"
        ],
        "Protect the Routes with Role-based Authentication and Authorization": [
          "Create Admin Authentication",
          "Create Basic User Authentication"
        ],
        "Create Home Page": [
          "Home Page"
        ],
        "Create Registration Page": [
          "Registration Page"
        ]
      },
      "requirements": [
        "Basic understanding of NodejS. If you create any NodeJS project than it is more than sufficient."
      ],
      "description": "Easy, Simple, and step by step guide Course to Build Node.js Role based Authentication APIs with JWT and Consume in Frontend\nThis course is designed for everyone who wants to learn Rest API with JWT and role based authentication using Node.js.\n\n\nWhat we are building in this course!\nFirst, we create our project, setup up our server and create our user model, connect with MongoDB database then create simple registration and login function functionality, after than we perform crud operation on our user model. I will show you how you can hash registration and login password after that I will teach you how to add JWT authentication in Nodejs. I will also show you how to add role-based authentication and then we use Embedded javascript (ejs) to create frontend of the application. We also test our API with Postman.\n\n\nJust follow along with me. I will holding your hand through the course. at the end of the course you have a solid understanding of role based authentication and how to use it to build a JWT authentication API that can you use a foundation to any project.\n\n\nThis course contain 14 section contain 23 video which over 4 hr 19 min long. you can watch at your own pace and at any point you get lost you can absolutely send a message. I Will happy to answer all your queries.",
      "target_audience": [
        "Anyone wanting to learn to build web API's.",
        "Beginner's programmers who already have some understanding of NodeJS and want to skill up.",
        "Anyone interested in building a clean RESTFul backend API in NodeJS",
        "Developers proficient in other languages but looking to add NodeJS to their toolkit."
      ]
    },
    {
      "title": "React.js shopping cart",
      "url": "https://www.udemy.com/course/reactjs-shopping-cart/",
      "bio": "React.js shopping cart with context API and local storage from zero to hero.",
      "objectives": [
        "htm-css-javascript explaination of project",
        "how to make the react shopping cart responsive",
        "How to make a shopping cart with react",
        "How to use context API with react",
        "How to use locale storage to save data"
      ],
      "course_content": {},
      "requirements": [
        "A computer for sure is required",
        "Html css and javascript at least a couple of things. (i will cover all the things with explanation)",
        "Good mood for the project",
        "It will be explanation from zero to hero."
      ],
      "description": "Hello everybody! In this course you will learn how to create an easy shopping cart with the top technology which is react.js. We are going to use html, css, javascript and react.js in order to complete this amazing project. We have many cool functionalities and i am sure that you will love this course because it will help you create different kind of projects. We use local storage for saving data and context API for  state management.",
      "target_audience": [
        "People who start the trip on react",
        "People who has at least some knowledge about html-css-javascript but not idea about react",
        "People who want to learn react",
        "People who want to learn about saving data with localstorage in react"
      ]
    },
    {
      "title": "Connecting to RESTful APIs for beginners",
      "url": "https://www.udemy.com/course/beginning-restful-apis-java/",
      "bio": "Windows/Java/Eclipse",
      "objectives": [
        "Read and Understand API documentation. Basics of creating a URL connection in Java."
      ],
      "course_content": {},
      "requirements": [
        "Some very basic programming knowledge will be helpful."
      ],
      "description": "This course has been designed to help the Java beginner understand how to establish connections to RESTful APIs. Examples will be taught on a Windows environment using Eclipse and Java.  The course will make minimal use of 3rd party libraries to help the student fully understand what their software is doing. We will cover the structure of an API call, the most commonly used authentication methods, and handling responses. We will also cover Http verbs, response codes and headers.\nNo tests or quizzes. Lets just write some code.\nThis course has been designed to help the Java beginner understand how to establish connections to RESTful APIs. Examples will be taught on a Windows environment using Eclipse and Java.  The course will make minimal use of 3rd party libraries to help the student fully understand what their software is doing. We will cover the structure of an API call, the most commonly used authentication methods, and handling responses. We will also cover Http verbs, response codes and headers.\nNo tests or quizzes. Lets just write some code.\nThis course has been designed to help the Java beginner understand how to establish connections to RESTful APIs. Examples will be taught on a Windows environment using Eclipse and Java.  The course will make minimal use of 3rd party libraries to help the student fully understand what their software is doing. We will cover the structure of an API call, the most commonly used authentication methods, and handling responses. We will also cover Http verbs, response codes and headers.\nNo tests or quizzes. Lets just write some code.",
      "target_audience": [
        "Beginning Developers who need to connect and use data from a RESTful API."
      ]
    },
    {
      "title": "Responsive Website from Scratch using Html CSS & Javascript",
      "url": "https://www.udemy.com/course/responsive-website-from-scratch-using-html-css-javascript/",
      "bio": "How to Make an attractive and responsive website from scratch for all devices by using HTML5 CSS3 and Javascript",
      "objectives": [
        "Responsive Web Design Tutorial",
        "Web Design Responsive Website Template from Scratch HTML CSS",
        "Build Responsive Real World Websites with Html CSS & Javascript",
        "How to build a responsive HTML5 website Step by Step",
        "Learn Responsive Web Development from Scratch",
        "Create a Responsive Website Using HTML, CSS & JavaScript ...",
        "Mastering Responsive Website Design with HTML, CSS, and JavaScript"
      ],
      "course_content": {
        "Complete Responsive Website": [
          "Introduction",
          "Project Setup",
          "Include Custom Font From Google",
          "CSS Flex",
          "Website Banner Section",
          "Header Section",
          "About Us Section",
          "Our Menu Section",
          "Expert Section",
          "Testimonial Section",
          "Contact Us Section",
          "Add Smooth Scrolling",
          "Make It Responsive"
        ]
      },
      "requirements": [
        "Basic knowledge of html css and javascript",
        "Any Code Editor Of Your Choice",
        "An Internet Connection"
      ],
      "description": "In this comprehensive online course, immerse yourself in the art of building dynamic and visually stunning websites that seamlessly adapt to any screen size. Through a hands-on approach, this course equips you with the essential skills needed to create responsive web designs using the power of HTML, CSS, and JavaScript.\nDiscover the fundamentals of creating flexible and fluid layouts, and dive into the intricacies of media queries and responsive design patterns. Learn how to craft compelling user experiences by implementing interactive elements and animations with JavaScript. Gain a deep understanding of the principles of mobile-first design and the latest techniques for ensuring optimal performance across all devices.\nThroughout the course, you'll work on real-world projects, honing your ability to create captivating, user-friendly websites that function flawlessly on desktops, tablets, and mobile devices. With expert guidance from seasoned professionals, you'll grasp the nuances of cross-browser compatibility, accessibility, and best practices for search engine optimization (SEO) to ensure your websites are both aesthetically pleasing and highly functional.\nWhether you're a seasoned developer looking to expand your skill set or a newcomer to the world of web development, this course provides a solid foundation in responsive website design, empowering you to create cutting-edge, responsive websites that leave a lasting impression on users across all platforms.\nEnroll now and unlock the potential to craft engaging and adaptable web experiences that captivate audiences worldwide.",
      "target_audience": [
        "Responsive Web Design",
        "Create Responsive Website Using HTML5 CSS3",
        "Learn Web Development Courses and Tutorials",
        "Responsive website design from scratch 2021",
        "Web Design For Beginners",
        "Web Design HTML CSS Create Single Page Website from Scratch",
        "Front End Web Development",
        "Build a real world responsive website"
      ]
    },
    {
      "title": "Build a photo web app using Instagram API in Node.js",
      "url": "https://www.udemy.com/course/photo-webapp-instagramapi/",
      "bio": "Build a photo app using Instagram API!",
      "objectives": [
        "Learn using an API",
        "Build basic websites"
      ],
      "course_content": {
        "Project: Photo application (Build with node.js)": [
          "Setting up Node.js",
          "EJS template",
          "More on EJS template",
          "Setting up Instagram API",
          "Styling up with custom css",
          "Tying up everything"
        ]
      },
      "requirements": [
        "Basic Javascript",
        "Basic HTML/CSS"
      ],
      "description": "Last updated: 25/4/2015\nThis course is a basic course that will teach basic nodejs capabilities like using an API and using one of nodejs finest templates which is EJS.\nThe course is aim at beginner students who still struggling to get the basic of nodejs and as well as understanding the true power of nodejs.\nNodejs is different from other programming languages because of its power of non-blocking. In this course we will be building a basic photo application, and we are not going to build it from scratch, we are going to use Instagram API.\nBasic requirements:\n1) HTML/CSS\n2) Javascript\nYou are going to learn all of these technologies by doing. This course is really simple compare to my other course.",
      "target_audience": [
        "Beginner",
        "entrepreneur",
        "students"
      ]
    },
    {
      "title": "Practical Git and GitHub: From Basics to Pro Workflows",
      "url": "https://www.udemy.com/course/practical-git-and-github-from-basics-to-pro-workflows/",
      "bio": "Learn the essential Git commands and real-world GitHub workflows used by modern development teams.",
      "objectives": [
        "Master Core Git Commands and Concepts",
        "Work with Branches, Merges, and Rebases Like a Pro",
        "Collaborate with GitHub in Real-World Scenarios",
        "Recover, Undo, and Manage Git Projects with Confidence"
      ],
      "course_content": {
        "Introduction": [
          "What is Git?",
          "Course Resources",
          "Things We Will Need",
          "Useful Info",
          "Review"
        ],
        "Git Basics": [
          "Git Global Config",
          "Git General Concepts Overview",
          "First Git Project",
          "Modify Content",
          "Git with VSCode GUI",
          "Navigate Git Commit History",
          "Git Add Explained and Repo Nesting Pitfalls",
          "Git Commit Message Tips",
          "Section Challenge"
        ],
        "Git Branches": [
          "Git Branches",
          "Merge Branches",
          "Delete Branches",
          "Rebase Intro",
          "Rebase Example",
          "Rebase and Merge with VSCode GUI",
          "Section Challenge"
        ],
        "Understanding Git": [
          "Local Git Config File and .gitignore",
          "Git Stash Intro",
          "Git Stash Example",
          "Git Head and Reflog Command",
          "Git Reset Command",
          "Revert Staged and Unstaged Changes with Git Reset and Checkout",
          "Section Challenge"
        ],
        "Git Merge Conflicts": [
          "Git Merge Conflicts : Setup",
          "Git Merge Conflicts : When Merging",
          "Git Merge Conflicts : When Rebasing",
          "Git Squash Commits",
          "Git Cherry Pick Command",
          "Section Challenge"
        ],
        "Github": [
          "Github Intro",
          "Setup SSH Keys",
          "Create Our First Github Repository",
          "Create Github Repository in VSCode and Host Github Repository on Netlify",
          "Create and Merge Our First Pull Request",
          "Challenge - Second PR",
          "Complete Second PR",
          "Github Section Challenge - First Part",
          "Github Section Challenge - Second Part",
          "Git Push: Upstream Tracking and Remote Branch Naming",
          "Git Fetch when Cherry-Picking Remotes"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "No prior Git or GitHub experience needed — this course starts from the absolute basics. A computer with internet access — Windows, macOS, or Linux are all supported. Basic familiarity with the command line is helpful but not required — all commands are explained clearly. Visual Studio Code (VSCode) is recommended for exercises and challenges, especially when using the built-in Git GUI."
      ],
      "description": "Course Description:\nThis hands-on course is your complete guide to mastering Git and GitHub, starting from absolute basics and progressing through real-world, production-level workflows. You'll not only learn how Git works—you'll use it in structured projects, exercises, and challenges that mimic how modern development teams operate.\nSection 1: Git Fundamentals & Setup\nYou'll begin by understanding what Git is and why it's essential for version control. In this section, you'll:\nInstall and configure Git globally and locally.\nLearn how Git tracks code history and changes.\nExplore critical commands like git init, git status, git add, and git commit.\nUnderstand the difference between tracked, untracked, staged, and modified files.\nBuild your first Git project from scratch using the command line and VSCode.\nSection 2: Exploring Commits & History\nDig deeper into Git internals and learn how to:\nView detailed commit logs using git log and git log --oneline.\nNavigate between commits with git checkout <hash>.\nUnderstand HEAD and the concept of a detached HEAD.\nSafely recover lost commits using git reflog.\nSection 3: Branching, Merging & Rebase Workflows\nYou'll learn how teams manage parallel workstreams with branches and bring everything back together:\nCreate, switch, and delete branches.\nPerform Fast-Forward and Three-Way merges.\nUse git rebase to create a clean, linear history.\nCompare merge vs rebase visually using Git log and VSCode GUI.\nResolve merge conflicts manually and understand common scenarios.\nSection 4: Advanced Git Techniques\nGo beyond the basics and unlock Git’s full power:\nPerform soft and hard resets (git reset --soft, --hard, --mixed).\nUnstage and discard changes using git restore and git checkout.\nClean untracked files with git clean.\nUse .gitignore to exclude sensitive and temporary files.\nStash in-progress work and safely apply it later (git stash).\nSection 5: Commit Squashing & Cherry-Picking\nUnderstand how to craft clean and focused commit histories:\nUse git rebase -i to squash commits interactively.\nLearn how to apply individual commits from other branches using git cherry-pick.\nPractice real scenarios that simulate production cherry-picking across cloned repositories.\nSection 6: Working with GitHub\nPush your local skills into the cloud and collaborate like a pro:\nCreate a GitHub repo and connect via SSH.\nPush and pull branches, configure remotes, and set up upstream tracking.\nLearn the difference between git fetch and git pull.\nUse GitHub UI and VSCode to publish branches and manage repos.\nSection 7: Real-World GitHub Workflows\nWork through end-to-end collaborative GitHub challenges:\nClone repositories and simulate multiple developer environments (dev1, dev2, dev3).\nCreate and merge branches using pull requests.\nPerform merge and rebase-based strategies for integrating code.\nExplore GitHub branching models and workflow decisions.\nPractice Challenges Throughout\nEach section includes exercises and challenges to reinforce concepts:\nBuild isolated Git projects for hands-on repetition.\nSimulate team-based workflows using multiple local environments.\nApply real-world recovery tools like reflog, stash, and cherry-pick.",
      "target_audience": [
        "Complete beginners who want to learn Git and GitHub from scratch — no prior version control experience required. Self-taught developers and coding bootcamp graduates looking to solidify their understanding of real-world Git workflows. Frontend, backend, and full stack developers who want to collaborate more effectively using branches, pull requests, and remote repositories. Students preparing for technical interviews or internships, where Git knowledge is often expected. Engineers working in teams who want to confidently handle merge conflicts, rebase cleanly, and contribute to shared codebases. Freelancers and solo developers who want to manage personal projects using Git and publish them on GitHub with best practices."
      ]
    },
    {
      "title": "Java Web Technologies: Become A Java Web Developer",
      "url": "https://www.udemy.com/course/java-web-technologies-/",
      "bio": "This course is designed for those interested to learn about the basics concepts of Java programming .",
      "objectives": [
        "You will have learned about basic concepts about programming with Java.",
        "The basic of most popular Java technologies",
        "After this course you will be preparing for the ORACLE exam"
      ],
      "course_content": {
        "Let's Start": [
          "Introduction To Java EE",
          "Creating The First Web Application",
          "Installing The GlassFish Server",
          "Introduction To Web Programming",
          "Servlets",
          "JSP",
          "User-defined Tags",
          "EL Expressions And Standard Tag Library (JSTL)",
          "HTML Forms",
          "Advanced Controls Of HTML Forms",
          "Handling The Condition",
          "EJB",
          "JMS And Message Driven Beans",
          "Let’s Start With Spring",
          "Creating Spring Web MVC Application",
          "Forms And Validation",
          "JSF",
          "Java And AJAX",
          "Java Applets"
        ]
      },
      "requirements": [
        "You must have a good knowledge of the JAVA STANDARD EDITION",
        "You need to be familiar with the HTML structure",
        "Knowing the database is also a necessary for starting this course"
      ],
      "description": "This course will deal exclusively with web programming in the Java programming language. We’ll mention some basic terms, such as scripts, servlets, applets, JSP stations, methods for integrating Java code into HTML and more.\nIn addition to handling basic concepts, the course will also focus on processing the most commonly used frameworks in the development of a web application: Spring web MVC and JSF. Upon successfully completing the course, you’ll be able to learn the practical use of the most common programming language when creating web applications. In other words, the course will introduce you to advanced web concepts, the security and the efficiency of web applications, while these and many other acquired skills during the lecture will enable you to start a professional career as a web application developer.\nThis course is just an introduction to web programming and web technologies such as Spring, JSF, JSP, you must continue learning after this course if you want to actively use one of these technologies.\nThis course also prepares you for the ORACLE certification exam(Oracle Certified Expert, Java EE 6 Web Component Developer), increasing your chances of finding a great job.\nWhat are the requirements?\nYou must have a good knowledge of the JAVA STANDARD EDITION\nYou need to be familiar with the HTML structure\nKnowing the database is also a necessary for starting this course\nGet started today and learn more about the Java programming.",
      "target_audience": [
        "Advanced",
        "Java developers",
        "Web developers"
      ]
    },
    {
      "title": "Create a Thriving Online Community Like Facebook With Joomla",
      "url": "https://www.udemy.com/course/how-to-create-a-money-making-social-network-with-joomla/",
      "bio": "Social networks are great for connecting with others. Build your own community, monetize it and network with others.",
      "objectives": [
        "Create a social network"
      ],
      "course_content": {
        "My First Section": [
          "Before you start",
          "Manually installing Joomla",
          "Choosing frontend design",
          "Editing the menus and footer",
          "Updating your Joomla version",
          "Component Installation"
        ],
        "Configurations": [
          "Site settings",
          "Media management",
          "Anti Spam",
          "Group management",
          "Events management",
          "Layout management",
          "Privacy settings",
          "Facebook connect",
          "Remote storage",
          "Google maps integrations"
        ],
        "User Profiles": [
          "Site users",
          "Multiple profiles",
          "Custom profiles",
          "User points"
        ],
        "Group Settings": [
          "Managing groups"
        ],
        "Events Settings": [
          "Managing events"
        ],
        "Videos Management": [
          "Video categories"
        ],
        "Branding": [
          "Menu & Logo",
          "Adding more pages"
        ],
        "Conclusion": [
          "Final words",
          "Quiz"
        ]
      },
      "requirements": [
        "Joomla"
      ],
      "description": "Join 350+ Successful Students Already Taking This Course.\nSocial networks have played a major role in how we communicate and network with people. From Geocities, Myspace, Facebook, Twitter, Linked, etc, all of these networks have completely transformed how we communicate.\nThe reason why social networks have been so effective is because they allow us to:\n\n1. Connect with people or businesses\n2. Share what we love\n3. Create a dedicated following\n4. Sell our products/services easily\n5. Make easy money without any experience\n6. Promote our businesses to the masses\n7. And many more\n\nWhat if I you too could learn how to create your traffic generating, money making social network without spending the millions or hundreds of thousands of dollars that these network did in the beginning, would you be interested? Well, brace yourself because in this course, you are going to learn how to do just that. I am going to teach you how anyone can create a thriving social network with Joomla! without knowing or writing a single line of code.\n\nIf you've ever wanted to create a social network for your business; a place where your clients, prospects and visitors can all meet and get life changing information and share contacts, ideas, etc, then this course is for you. See, when you provide your clients (and prospects) with a place that they can connect and learn from each other like linked in or Facebook, you will instantly increase your brand's visibility by a whopping 400%.\nFeatures in this course includes:\nUser profile creation\nCreation of groups\nCreation of events\nAdding videos from Youtube, Vimeo & 20+ video streaming websites\nCreate a bulletin board\nCreate a forum\nShare status update\nAdd photos\n\nLet's face it, using social websites like Facebook, Twitter, Linkedin for business and personal networking is great. However, the down side to that, you are driving traffic away from your website to their websites. Can you imagine if you could build a group, fan page, event creation on your website how that would drive up your traffic!\n\nTo create a social network with all the features you need will cost you at minimum $1000+. When you add maintenance, addons, etc, you could easily spend $5000. I am going to help you save thousands of dollars from hiring someone to create your website and show you how to do it...fast and...easy!",
      "target_audience": [
        "Website owners who want to create their own social network like Facebok, Linkedin, etc!"
      ]
    },
    {
      "title": "Huawei Network Automation - Python 3 and Ansible Labs",
      "url": "https://www.udemy.com/course/huawei-datacom-network-automation-developer/",
      "bio": "Automate your Network with Python3 TELNET, Netmiko, Napalm, NETCONF, Ansible, with automated configuration tasks",
      "objectives": [
        "Python 3 Network Programming Basics",
        "Develop Python 3 scripts with Network Libraries (Telnet, Netmiko, and Napalm)",
        "Perform network automated tasks with Python 3",
        "Develop NETCONF scripts for Huawei Routers",
        "Automate with Ansible",
        "The course gives you support on how to install all required modules on Ubuntu Linux",
        "All modules with examples, hands-on practise, and all used scripts attached, and can be downloaded"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Module 1: Install Python 3 for Ubuntu Linux": [
          "Install Python 3 for Ubuntu Linux"
        ],
        "Module 2: Python 3 Basics": [
          "Section Intro",
          "If statement",
          "Dictionary",
          "For Loop",
          "Input Function",
          "Lists",
          "Read from a file",
          "Write in a file",
          "While Loop",
          "Python 3 Basics Quiz"
        ],
        "Module 3: Python TELNET": [
          "TELNET Library"
        ],
        "Module 4: Python Netmiko": [
          "What's Netmiko?",
          "Install Netmiko for Ubuntu Linux",
          "Netmiko for Huawei Routers",
          "Python Netmiko Quiz"
        ],
        "Module 5: Python Napalm": [
          "What's Napalm? and how to install?",
          "Get Facts API",
          "Get Interfaces IP API",
          "Ping API"
        ],
        "Module 6: Automate Configuration Task": [
          "Intro",
          "OSPF with Napalm",
          "OSPF with Netmiko",
          "Napalm vs. Netmiko"
        ],
        "Module 7: Build Automated Tasks": [
          "Backup Configuration Files",
          "Is this IP used? Automated APP"
        ],
        "Module 8: NETCONF": [
          "What's NETCONF?",
          "Install NETCONF",
          "Test NETCONF",
          "NETCONF Get Interface",
          "NETCONF Configure Interface",
          "NETCONF Configure VLAN",
          "NETCONF"
        ],
        "Module 9: Ansible": [
          "Ansible!",
          "How Ansible Works",
          "Install Ansible",
          "Basic Configuration with Ansible",
          "Configure Eth-trunk with Ansible",
          "Save Configuration file with Ansible",
          "Ansible Batch Configuration",
          "Can I run Ansible Playbook for NE40E?",
          "Ansible"
        ]
      },
      "requirements": [
        "Networking Basics",
        "Python Basics"
      ],
      "description": "Welcome to Huawei Datacom Network Automation Developer Course, Network programming and automation became one of the most important network topics for building large automated networks that can scale and react easily to network changes. All daily network manual tasks should be converted into automated tasks to save time, increase productivity, and minimise human mistakes specially when it comes to large networks like Telecom Operator Networks. Python programming language is commonly and widely used for network engineers because of its simplicity and its rich network modules. Because Huawei is widely used in Telecom operators networks all over the world, it would be important to discuss automation tools Huawei devices.\n\n\nPython Network Programming for Huawei devices course introduces how to install python 3 on Ubuntu linux with getting rid of python 2 when the terminal comes by default with python 2, and how to install network libraries (like Netmiko and Napalm) to connect with Huawei Routers like a robot (on behalf of a network engineer) that can automatically collect information and configure the routers with the usage of python scripts. The course is explained through practical exercises on EVE-NG and ubuntu Linux desktop.\n\n\nUpon completing this course, you will be familiar with python 3 and network modules and build automated scripts to collect information about Huawei router with Netmiko library, and use napalm different libraries to collect information such as ‘display ip interface brief’ or ‘display version’, build automated script to check ip connectivity to a certain IP address with ping module and get the result, make automated configuration changes like configuring OSPF on Huawei Routers with the usage of both Netmiko and Napalm modules to know the difference between them.\nYou will also get familiar to NETCONF and how to practise it with Huawei NE40 to get information from it, and make configuration (configure interface and VLAN).\nAnsible! you will learn about it, and how to perform automation for Huawei devices. It’s easy, simple to deploy with ready network modules, scalable, and doesn’t require python knowledge to deploy automated scripts.\nThe module gives you support on how to install all required modules on Ubuntu Linux.",
      "target_audience": [
        "Huawei Datacom Network Operations Engineers",
        "Huawei Datacom Network Planning & Design Engineers",
        "Datacom Network Engineers",
        "Huawei Pre-sales Network Engineers"
      ]
    },
    {
      "title": "Next.js 15 & Supabase - Build a Salon & Spa Booking App",
      "url": "https://www.udemy.com/course/nextjs-15-supabase-build-a-salon-spa-booking-app/",
      "bio": "Build a Full-Stack Salon & Spa Booking App with Next.js 15, Supabase & Tailwind CSS",
      "objectives": [
        "Build a Full-Stack Salon & Spa Booking App – Learn how to create a fully functional booking platform using Next.js 15, Supabase, and Tailwind CSS.",
        "Implement Authentication and Authorization – Set up user authentication with JWT and manage different roles for salon or spa owners and customers.",
        "Develop a Responsive and Modern UI – Use Tailwind CSS to design a visually appealing, mobile-friendly, and interactive user interface.",
        "Integrate PostgreSQL for Data Management – Learn how to store and manage user, salon, and appointment data efficiently with a relational database.",
        "Enable Real-Time Booking & Management – Implement features that allow users to search, book, and manage appointments, while salon or spa owners can track their",
        "Deploy and Optimize a Scalable Web App – Deploy the application on Vercel and ensure smooth performance with best practices in Next.js server actions."
      ],
      "course_content": {
        "Introduction": [
          "Project setup",
          "Setup shadcn"
        ],
        "Authentication - Frontend": [
          "Homepage",
          "Login Page",
          "Register Page"
        ],
        "Authentication - Backend": [
          "Setup supabase",
          "Create user profiles table",
          "Register new user",
          "Login user",
          "Protecting private routes"
        ],
        "Layout": [
          "Layout skeleton",
          "Header",
          "Sidebar part - 1",
          "Sidebar part - 2",
          "Display loader",
          "Display error message",
          "Save user data in global store"
        ],
        "Salons Spas CRUD - Backend": [
          "Intro",
          "Creating table and interface",
          "Salon spas server actions"
        ],
        "Salons Spas CRUD - Frontend": [
          "Creating folder structure and re-usable components",
          "Salon-spa form - part 1",
          "Salon-spa form - part 2",
          "Save salon and spa",
          "Show salons and spas",
          "Edit salon and spa",
          "Delete salon and spa"
        ],
        "Salon Spa Location Selection On Map": [
          "Integrate openlayers maps",
          "Select and store location on map"
        ],
        "Schedule appointment - Frontend": [
          "Intro",
          "Display salons and spas",
          "Show selected salon and spa",
          "Display dates based on salon and spa config",
          "Display slots based on salon and spa config"
        ],
        "Schedule Appointment - Backend": [
          "Appointments table and interface",
          "Appointments server actions",
          "Appointments availability based on booked slots"
        ],
        "Display appointments": [
          "Appointments of user",
          "Update appointment status",
          "Appointments of salon spa owner",
          "Filter appointments - part 2",
          "Filter appointments - part 2"
        ]
      },
      "requirements": [
        "Basic Knowledge of JavaScript & React – Familiarity with JavaScript fundamentals and React concepts will help you follow along easily.",
        "Understanding of HTML & CSS – Basic experience with HTML and CSS is recommended, especially for styling components.",
        "Familiarity with Git & Version Control – Knowing how to use Git for managing code versions will be beneficial."
      ],
      "description": "Next.js 15 & Supabase – Build a Salon & Spa Booking App\n\n\nCourse Overview\n\n\nLearn to build a fully functional Salon & Spa Booking App using Next.js 15, Supabase, and Tailwind CSS. This hands-on course will help you master modern web development by creating a real-world project from scratch. Whether you are a beginner or an experienced developer, this course will enhance your skills in full-stack development.\n\n\nWhat You Will Learn\nBuild a booking system for salons and spas\nImplement Next.js 15 and Supabase for a full-stack solution\nDesign a responsive UI with Tailwind CSS\nManage authentication with JWT\nDeploy seamlessly with Vercel\nWork with PostgreSQL for data management\n\n\nKey Features\nFor Salon & Spa Owners\nCreate a profile and list services\nManage bookings, customers\nFilter appointments by date and location\nAccess a dashboard with insights\nFor Normal Users\nSearch salons and spas by location, services, and ratings\nBook and manage appointments\nTrack past and upcoming bookings\n\n\nWho Should Enroll?\nDevelopers looking to build real-world projects\nAnyone interested in Next.js, Supabase, and Tailwind CSS\nEntrepreneurs and students wanting to create a booking platform\nFreelancers who want to expand their portfolio\n\n\nEnroll now and start building your own Salon & Spa Booking App!",
      "target_audience": [
        "Frontend and Full-Stack Developers – Developers who want to learn how to build a scalable booking platform using Next.js 15, Supabase, and Tailwind CSS.",
        "React & JavaScript Learners – Those familiar with React who want to expand their skills into Next.js, authentication, and database management.",
        "Freelancers & Entrepreneurs – Anyone interested in creating a Salon & Spa Booking App for personal projects, clients, or business startups.",
        "Students & Job Seekers – Learners who want to enhance their portfolios with a fully functional project to improve job prospects."
      ]
    },
    {
      "title": "Learn NestJS from Scratch",
      "url": "https://www.udemy.com/course/nestjs-from-scratch/",
      "bio": "Learn how to build efficient and scalable server-side and client-side applications with NestJS",
      "objectives": [
        "Becoming familiar with the NestJS framework and its components",
        "Designing and developing REST APIs performing CRUD operations",
        "Using TypeORM for database interaction",
        "Authentication and Authorization for back-end applications",
        "Security best practices, password hashing and storing sensitive information",
        "Persisting data using a database",
        "Writing clean, maintainable code in-line with industry standards",
        "Utilizing the NestJS Command Line Interface (CLI)",
        "Using Swagger for testing back-end services",
        "Implement efficient logging in a back-end application",
        "Environment-based configuration management and environment variables",
        "Implementing data validation and using Pipes",
        "Guarding endpoints for authorized users using Guards",
        "Modelling entities for the persistence layer",
        "TypeScript best practices",
        "Handling asynchronous operations using async-await",
        "Using Data Transfer Objects (DTO)",
        "Hands-on experience with JSON Web Tokens (JWT)",
        "Unit testing NestJS applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "House Keeping",
          "What we will build"
        ],
        "Getting Started": [
          "Start NestJS App",
          "Files overview",
          "Setting up config"
        ],
        "Authentication": [
          "Set up auth module",
          "Passport local auth setup",
          "Passport JWT auth setup",
          "Testing authentication module"
        ],
        "React Admin Setup": [
          "Getting started with React Admin",
          "React admin auth setup"
        ],
        "Database": [
          "Initialize database",
          "User entity",
          "User migration",
          "User repository",
          "Column Types",
          "One to Many",
          "Many to many",
          "One to one",
          "Transactions"
        ],
        "CRUD": [
          "Generate CRUD operations",
          "Write test for get one user",
          "Write test for create and get many users",
          "Validation",
          "Write test for update user",
          "Write test for delete user"
        ],
        "Swagger": [
          "Setup swagger",
          "Tags and Body",
          "Bearer auth setup",
          "Swagger doc continued",
          "Swagger security"
        ],
        "Nestjsx Crud": [
          "Setup Nestjsx Crud",
          "Enhance Nestjsx Crud",
          "Users List in admin portal",
          "Users List and edit in admin portal",
          "Users create and delete in admin portal",
          "Soft Delete",
          "Nested Route 1",
          "Nested Route 2",
          "Wire up recommendation in react admin"
        ],
        "Logging": [
          "Winston logger",
          "Logger middleware",
          "Typeorm Logger"
        ],
        "Conclusion": [
          "Next steps"
        ]
      },
      "requirements": [
        "Having a basic understanding of JavaScript and/or NodeJS",
        "Having basic knowledge of TypeScript is recommended, but not required",
        "Having basic knowledge of React framework is recommended, but not required"
      ],
      "description": "Nest (NestJS) is a framework for building efficient, scalable  Node.js server-side applications. It uses progressive JavaScript, is built with and fully supports  TypeScript (yet still enables developers to code in pure JavaScript), and combines elements of OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Reactive Programming).\nUnder the hood, Nest makes use of robust HTTP Server frameworks like  Express (the default) and optionally can be configured to use  Fastify as well!\nNest provides a level of abstraction above these common Node.js frameworks (Express/Fastify), but also exposes their APIs directly to the developer. This gives developers the freedom to use the myriad of third-party modules which are available for the underlying platform.\n\n\nPhilosophy\n\n\nIn recent years, thanks to Node.js, JavaScript has become the “lingua franca” of the web for both front and backend applications. This has given rise to awesome projects like  Angular,  React, and  Vue, which improve developer productivity and enable the creation of fast, testable, and extensible front-end applications. However, while plenty of superb libraries, helpers, and tools exist for Node (and server-side JavaScript), none of them effectively solve the main problem of - Architecture.\nNest provides an out-of-the-box application architecture that allows developers and teams to create highly testable, scalable, loosely coupled, and easily maintainable applications. The architecture is heavily inspired by Angular.\n\n\nWhat you’ll learn\n\n\nBecoming familiar with the NestJS framework and its components\nDesigning and developing REST APIs performing CRUD operations\nAuthentication and Authorization for back-end applications\nUsing Typeform for database interaction\nSecurity best practices, password hashing, and storing sensitive information\nPersisting data using a database\nWriting clean, maintainable code in line with industry standards\nUtilizing the NestJS Command Line Interface (CLI)\nUsing Swagger for testing back-end services\nImplement efficient logging in a back-end application\nEnvironment-based configuration management and environment variables\nImplementing data validation and using Pipes\nGuarding endpoints for authorized users using Guards\nModeling entities for the persistence layer\nTypeScript best practices\nHandling asynchronous operations using async-await\nUsing Data Transfer Objects (DTO)\nHands-on experience with JSON Web Tokens (JWT)\nUnit testing NestJS applications\nCreate admin portal with basic crud operations using React admin framework\nCreate CRUD endpoints using NestJSX Crud library\n\n\nWhat you should know\n\n\nHaving a basic understanding of JavaScript and/or NodeJS\nHaving a basic knowledge of TypeScript is recommended, but not required\n\n\nWho is this course if for\n\n\nIntermediate JavaScript developers who want to dive into back-end development\nAny developers willing to apply TypeScript on the back-end\nDevelopers eager to learn how to develop performant, secure, and production-ready REST APIs following best practices\nDevelopers who want to follow building a practical, real-world application from zero to production\nFront-end developers who want to move to the back-end development",
      "target_audience": [
        "Intermediate JavaScript developers who want to dive into back-end development",
        "Any developers willing to apply TypeScript on the back-end",
        "Developers eager to learn how to develop performant, secure and production-ready REST APIs following best practices",
        "Developers who want to follow building a practical, real-world application from zero to production",
        "Front-end developers who want to move to the back-end development"
      ]
    },
    {
      "title": "Spring Boot 2.0: Apps & Microservices",
      "url": "https://www.udemy.com/course/spring-boot-20-apps-microservices/",
      "bio": "Learn how to create production-ready web applications and microservices from scratch with Spring Boot 2.0",
      "objectives": [
        "Build Spring Boot and Spring MVC applications",
        "Implement exception handling and validation in Spring Boot",
        "Test your Spring Boot applications with @WebMvcTest and @MockBean",
        "Secure your applications using Spring Security",
        "Explore microservices-based architecture",
        "Use Domain-Driven Design for designing your Microservices",
        "Develop and design RESTful web services with Spring Boot",
        "Develop microservices with Spring Boot and Spring Cloud",
        "Build RESTful APIs with Spring HATEOAS",
        "Perform integration testing with Spring MVC"
      ],
      "course_content": {
        "Spring Boot 2.0 in 7 Days": [
          "The Course Overview",
          "What’s Spring and Spring Boot?",
          "Build Systems – Maven, Gradle, Starters",
          "Starting with Spring Initializr",
          "Configuration Classes and Spring Automatic Configuration",
          "Understanding the Anatomy of a Spring Boot Project",
          "Building Your Spring Boot Project",
          "Setting Your App Configuration",
          "Creating the View and the Controller",
          "Using Starters and Defining the Entry Point",
          "Testing Your App",
          "Creating Your First REST Service",
          "Implementing HTTP Verbs",
          "Sending and Receiving Data",
          "Service Validation and Error Handling",
          "Documentation with Swagger",
          "Exploring Reactive Programming",
          "Setting Up the App and Getting Reactive Database Interaction",
          "Creating REST Endpoints",
          "Adding Security",
          "Exploring Spring Data",
          "Using Plain and Simple SQL with JdbcTemplate",
          "Using JPA for Managing Relational Data",
          "JPA with NoSQL Databases",
          "Adding Security to the Data",
          "Property Defaults in Development – Time Configuration",
          "Automatic Restart and Live Reload",
          "Remote Update, Restart, and Debug",
          "Testing with Spring TestRestTemplate",
          "Testing Spring MVC Apps with @WebMvcTest",
          "Integration Testing with @DataJpaTest",
          "Testing with @MockBean",
          "Test Your Knowledge"
        ],
        "Hands-On Microservices with Spring Boot 2.0": [
          "The Course Overview",
          "Spring Fundamentals and Features",
          "REST Services, Microservices, and Monoliths",
          "Creating Domain Classes for a Flight Booking Service",
          "Spring Configuration and Dependency Injection",
          "Creating Persistence for Our Domain Object",
          "Building RESTful Interfaces with Spring MVC HATEOS",
          "Using Spring WebFlux and WebClient",
          "Calling Services with RestTemplate and Dealing with Outages",
          "DDD-Oriented Microservice",
          "Using Bounded Contexts to Deal with Large Models",
          "Design an API with a Bounded Context",
          "Communication between Bounded Contexts",
          "Testing Services with Spring MVC Tests",
          "Mocking Out External Services",
          "Securing HTTP with UserDetailsService for Authentication",
          "CORS, CSRF Attacks, and SSL",
          "Getting Ready for Production with Spring Boot Actuator",
          "Caching Responses",
          "Exception Handling and Logging",
          "Packaging Your Application with Docker",
          "Monitoring Systems",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "No prior knowledge of Spring Boot is assumed. However, a basic knowledge of Java and Spring would be beneficial."
      ],
      "description": "Spring is one of the best frameworks in the market for developing web, enterprise, and cloud-ready applications and services. Spring Boot simplifies the building of complex apps dramatically by reducing the amount of boilerplate code, and by providing production-ready features and a simple deployment model. It is the fastest way to get a Spring application up-and-running with the fewest lines of code and the least configuration. If you're a Java developer who wants to build applications with Spring Boot 2.0 and run microservices based application for production in Spring Boot 2.0, then go for this course.\nThis comprehensive 2-in-1 course is a step-by-step guide to building, testing, deploying, and monitoring your robust and scalable web applications and web services using Spring MVC. You will learn to build microservices using Spring Boot 2.0 and see how microservices address common operational and infrastructural concerns. You will also explore a suite of tools that Spring Cloud offers for the discovery, routing, and deployment of microservices to the enterprise and the cloud. Next, you will learn how to build RESTful web services application using the Spring WebFlux framework. Spring WebFlux is a new framework that helps in creating a reactive application in a functional way. Finally, you will leverage the additional features offered by Spring Boot Actuator to help you monitor and manage your applications and services when it's pushed to production.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Spring Boot 2.0 in 7 Days, is your perfect guide to rapidly developing enterprise-grade applications with Spring Boot. It will kick-start the task of achieving your business goals with Spring Boot. You will spend more time understanding your customers' needs and less time building applications to address them.\nThe second course, Hands-On Microservices with Spring Boot 2.0, takes a hands-on, practical approach to implementing microservices for your app development with the Spring ecosystem. You will delve into the two main components of the Spring ecosystem for microservice development—Spring Boot and Spring Cloud—in detail. You will see how to build microservices with Spring Boot 2.0. You will also explore a suite of tools that Spring Cloud offers for the discovery, routing, and deployment of microservices to the enterprise and the cloud.\nBy the end of this course, you will be able to develop, secure, deploy, and monitor your own applications, web services, and microservices from scratch with Spring Boot 2.0.\n\nAbout the Authors :\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nPetra Simonis is a software developer with extended expertise in Java, Spring, Spring Boot, C++, and other programming and scripting languages. Over the past 15 years, she has gained experience in the fields of multimedia retrieval, telecommunications, GIS services, and healthcare.\nTomasz Lelek is a Software Engineer who programs mostly in Java and Scala. He is a fan of microservices architecture and functional programming. He has worked with more than 700 production microservices in the microservices ecosystem written in Spring Boot. He has 5+ years of experience in product development in Spring. He is also the co-founder of an e-learning platform that was built with the Java language.",
      "target_audience": [
        "This course is for Java developers who want to build applications with Spring Boot 2.0 and run microservices based application for production in Spring Boot."
      ]
    },
    {
      "title": "JQuery Datatables ServerSide Processing Project with Web API",
      "url": "https://www.udemy.com/course/jquery-datatables-large-datasets/",
      "bio": "Learn how to handle large datasets in your application",
      "objectives": [
        "How to use jquery datatables",
        "How to use jquery datatables server side for high performance data display",
        "How to use aspnet core 3.1 to retrieve information from sql server using stored procedures"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Code walkthrough": [
          "Part 1",
          "Part 2",
          "Part 3",
          "Part 4"
        ],
        "Download Demo Project": [
          "Download Demo Project"
        ]
      },
      "requirements": [
        "JavaScript",
        "JQuery",
        "ASPNET Core",
        "SQL Server"
      ],
      "description": "The stated goal of DataTables is \"To enhance the accessibility of data in HTML tables\". In order to achieve this we recognise that DataTables has two categories of users that interact with the interfaces the software has:\nEnd users - those who use the interface in the browser that you create with DataTables\nDevelopers - yourself and the other developers working with DataTables to create your apps, sites, services, etc.\nEnd users need to be able to obtain useful information from the table as quickly as possible and for this DataTables has built in features such as ordering, searching and paging. This documentation doesn't detail how that interface can be used by end users, under the assumption that these controls are self-evident (type into search input box and you search the table, for example).\nWhat this documentation does focus on is giving you, the developers using DataTables, the information you need to be able to use DataTables in your applications, customising it to match your exact requirements, to allow your end users to benefit from the features DataTables can present them. As such, this documentation covers details from how to install DataTables on your site in the first instance, explaining how it can source data for the tables it creates and detailing how its end user interface can be customised, right the way through to more advanced topics such as creating your own plug-ins for DataTables to further enhance its abilities and interface seamlessly with your application.\nAlthough the end user and developer interfaces that DataTables presents are of course completely disparate, each is of equal importance to DataTables meeting its goal of ensuring data in HTML tables can be accessed and consumed as quickly and as efficiently as possible.",
      "target_audience": [
        "Beginners",
        "Intermediate",
        "Advanced"
      ]
    },
    {
      "title": "Blazor - Rapid and Practical Course",
      "url": "https://www.udemy.com/course/blazor-rapid-and-practical-course/",
      "bio": "Let's build a webshop in Blazor",
      "objectives": [
        "Will learn the Microsoft Blazor in a rapid and practical way"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge in any web programming language"
      ],
      "description": "Are you interested to learn Blazor ?\n\n\nThis course is very-very hands on, much practical, less theoretical.\n\n\nFor professionals with at least some knowledge in any web programming language.\n\n\nIt's not a complete guide, it's a sort of big push so you can have the bases to start to code your project in a very short time. It means that you will be learning at least 80% of the things that you used to use in any professional and commercial web project in Blazor: Consuming RestAPIs, Navigation and Routing, Service Classes, Comnponents, Differences betwen Server, Webassembly and PWA, stylying pages, conditional rendering, rendering data collection, handling http errors, templates, reusable components, debugging, etc.\n\n\nIf you are the kind of student that's get bored with theoretical and long explanations or are very anxious and wants to starts to produce ASAP, you are the righr person for this course.\n\n\nWe will be developing togheter from scratch a webshop that's sell computer devices using ficticious brands and models (to not use registered marks and logos) . It's a webshop that's instead work with money, it works with points like the usual webshops driven to loyalty programs, but you will face the usual of a webshop: Login, Signup, Categories, Shopping Cart, etc...",
      "target_audience": [
        "Developers with at least experience in one web language"
      ]
    },
    {
      "title": "Salesforce REST APIs Integration through Workbench & Postman",
      "url": "https://www.udemy.com/course/salesforce-rest-apis-integration-through-workbench-postman/",
      "bio": "Learn end-to-end how to use Workbench and Postman to build REST APIs in Salesforce",
      "objectives": [
        "Salesforce Rest API Using Workbench",
        "Salesforce Rest API Using Postman",
        "Create GET, POST, PUT, DELETE Requests",
        "Understand GET vs POST Request Method",
        "Postman Salesforce Authentication",
        "Workbench Salesforce Authentication",
        "Students will learn to use Postman and Workbench Rest API in Salesforce"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Salesforce and JavaScript",
        "Basic understanding of Salesforce Apex and SOQL",
        "Basic knowledge of Salesforce Admin Concepts",
        "Basic Knowledge of Internet Surfing"
      ],
      "description": "REST API is a web service that allows external applications to interact with Salesforce and perform various operations on its data and services.\nIn this course we are going to learn all about the Complete Integration Testing through Workbench and Postman in Salesforce.\nThis course suitable for that developers, who have experience with Salesforce Administrator, Aura Component, LWC and want to learn Rest API Integration through Workbench & Postman, how to send request to Post, Put, Patch, Get and Delete Record through Postman and Workbench on Salesforce Platform.\n\n\nHere are some key points about the REST API in Salesforce::\nHTTP Methods: REST APIs use standard HTTP methods like GET, POST, PUT, PATCH, and DELETE to perform operations on resources. For example, you can use GET request to retrieve data, POST request to create new records, PUT request to update records, and ‘DELETE request to remove records.\nData Formats: REST APIs in Salesforce typically support various data formats, such as JSON and XML, for exchanging data between the client and Salesforce.\nAuthentication and Authorization: To access the REST API, external applications first need to authenticate. Salesforce supports various authentication methods, including OAuth 2.0, to ensure that only authorized users or applications can access the API.\nCustomization: Salesforce allows you to customize the REST API by defining custom REST endpoints that can perform specific actions or retrieve sets of data.\nIntegration: REST APIs are commonly used for integrating Salesforce with other systems, such as external websites, mobile applications, or third-party services.\nBulk Operations: The REST API also supports bulk operations, allowing you to perform actions on multiple records in a single request, which can be particularly useful for data manipulation tasks.\n\n\nCourse Overview::\nWhat will be you able to do after taking this course?\nI have created two sections to complete the syllabus to testing REST APIs through Workbench and Postman in Salesforce.\n\n\nREST APIs Integration Testing in Workbench::\nSalesforce Rest API Integration basic Structure & Configuration.\nHow to Insert an Opportunity Record Using httpPost through Workbench?\nHow to Fetch of Opportunity Record based on Record Id Using httpGet through Workbench in Salesforce?\nHow to Use httpPut to update a record through Workbench in Salesforce?\nHow to use httpPatch to Update record through Workbench in Salesforce?\nHow to use httpDelete to Delete record through Workbench in Salesforce?\n\n\nREST APIs Integration Testing in Postman::\nHow to test Rest API through Postman and create Connected App in Salesforce?\nHow to Authenticate Postman using Connected App with OAuth 2.0 and Security Token in salesforce?\nHow to run Apex REST API to Get record using Get Request through Postman in Salesforce?\nHow to Insert an Account Record using Post Request through Postman in Salesforce?\nHow to Update an Account Record based on Record Id using Patch Request through Postman in Salesforce?\nHow to Delete an Account Record based on Record Id using Delete Request through Postman in Salesforce?",
      "target_audience": [
        "Salesforce Developer",
        "Salesforce Administrator",
        "Project Manager",
        "Students Who Want to Learn Development and Integration in Salesforce"
      ]
    },
    {
      "title": "MERN Stack Student Result Management App",
      "url": "https://www.udemy.com/course/mern-stack-student-result-management-app/",
      "bio": "Build a real time students result management application using mern stack",
      "objectives": [
        "Building a real time application from scratch",
        "Working with complex MongoDB, queries , schemas, models",
        "Separate User Interfaces for Students, Employees",
        "Ant Design Library for building UI Components,",
        "Redux and Redux-Toolkit (State Management)",
        "Managing complete student information from the employee panel",
        "Adding Results with Dynamic Subjects",
        "QA Support and Code Resourses"
      ],
      "course_content": {},
      "requirements": [
        "React Basics",
        "Node Basics"
      ],
      "description": "Hi Guys, Welcome to the course 'MERN Stack Student Result Management App'\nIn this course, you will learn the following topics\n\n\nBuilding full-stack applications from scratch\nWorking with complex MongoDB, queries, schemas, models\nSeparate User Interfaces for Normal Users and Employees in the University to check the results.\nJWT Authentication and Password Hashing\nAnt Design Library for UI Components,\nRedux Toolkit,\nAdding customized subjects in result form.\nGetting examination statistics like number of students passed , number of students failed etc.\nManaging students and their results from the employee and admin panels\nPushing Code to GitHub,\nHosting application in Heroku\n24/7 Q/A Support.\nMERN stands for MongoDB, Express, React, Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework and Node.js is the famous and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser designed to build scalable network applicatio",
      "target_audience": [
        "Full Stack Developers",
        "MERN Stack developers"
      ]
    },
    {
      "title": "Angular and Deno Authentication: Forgot and Reset Password",
      "url": "https://www.udemy.com/course/angular-deno-authentication/",
      "bio": "Deno APIs, Angular 10, Typescript, MySQL, Migrations, Send Emails",
      "objectives": [
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Connect Deno with MySQL",
        "Run Migrations with Cotton",
        "Reset User Passwords",
        "Send Emails"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Deno": [
          "Installation",
          "Router",
          "Denon",
          "Request Inputs",
          "Migrations",
          "Register",
          "Repository Pattern",
          "Validations",
          "Generating Jwt Token",
          "Auth Helper",
          "Middlewares",
          "Authenticated User",
          "Environment Variables",
          "Forgot Password",
          "Sending Emails",
          "Reset Password",
          "Logout",
          "CORS"
        ],
        "Angular": [
          "Installation",
          "Navigation",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Forgot Password",
          "Reset Password"
        ]
      },
      "requirements": [
        "Beginner Javascript Developer"
      ],
      "description": "Learn how to authenticate using Angular and Deno.\nIn Deno you will learn:\nUse Typescript\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nRegister Users\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nSend Emails\nIn Angular you will learn:\nUse Angular CLI\nCreate components and routes\nConsume API calls\nUse Event Emitters\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner Javascript Developer"
      ]
    },
    {
      "title": "HTML and CSS Crash Course",
      "url": "https://www.udemy.com/course/web-crash-course-sd/",
      "bio": "Learn the basics of HTML and CSS through short, bite-sized videos!",
      "objectives": [
        "How to use HTML tags, content, elements, attributes, and values",
        "CSS selectors, properties, and values",
        "Learn the basics of using VS Code",
        "Developer productivity tips"
      ],
      "course_content": {
        "VS Code": [
          "VS Code Introduction",
          "Install VS Code",
          "My VS Code Settings",
          "Install Live Preview Extension",
          "VS Code Alternative: Replit",
          "Getting Help: Google and Stack Overflow",
          "Downloading code for this course: GitHub",
          "Advice: Copy first, then improvise",
          "Introduction Recap"
        ],
        "HTML Basics": [
          "HTML Basics Introduction",
          "Create HTML file",
          "Add boilerplate code",
          "Tags, content, and elements",
          "Attributes and values",
          "Title element",
          "Live Preview alternative",
          "HTML Vocabulary Quiz",
          "HTML Basics Recap"
        ],
        "Paragraph Element": [
          "Paragraph Element Introduction",
          "Paragraph element",
          "Emmet",
          "Lorem ipsum text",
          "HTML comments",
          "Whitespace",
          "Advice: Absolutes and exceptions",
          "Paragraph Element Recap"
        ],
        "Heading Elements": [
          "Heading Elements Introduction",
          "Heading elements",
          "Heading order",
          "Validate HTML",
          "Heading Elements Recap"
        ],
        "List Elements": [
          "List Elements Introduction",
          "Ordered list element",
          "Unordered list element",
          "List Elements Recap"
        ],
        "Anchor Elements (Links)": [
          "Anchor Elements Introduction",
          "Creating more HTML files",
          "Internal links",
          "External links",
          "Open link in new tab",
          "View Page Source",
          "Anchor Elements Recap"
        ],
        "Image Element": [
          "Image Element Introduction",
          "Downloading images",
          "Image element",
          "Image Element Recap"
        ],
        "Learning More": [
          "Learning More Introduction",
          "Mozilla Developer Network and HTML elements list",
          "Deprecated Elements",
          "Learning More Recap"
        ],
        "CSS Basics": [
          "CSS Basics Introduction",
          "Creating a CSS file",
          "Link element",
          "CSS rules",
          "CSS comments",
          "CSS Vocabulary Quiz",
          "CSS Basics Recap"
        ],
        "CSS Colors": [
          "CSS Colors Introduction",
          "Background color property",
          "Hex colors",
          "RGB colors",
          "CSS Colors Recap"
        ]
      },
      "requirements": [
        "Be comfortable using a computer and web browser (you don't have to be an expert though!)"
      ],
      "description": "Learn the basics of HTML and CSS in no time at all! Each video in this course is under 5 minutes long to help you learn faster. The videos were carefully recorded and edited to avoid any major errors that would slow you down. Each video also features hands-on activities for you to follow along with.\nHTML and CSS are two of the main coding languages that are used to build web pages. HTML allows you to add different types of text, like paragraphs, headings and lists, to your web pages, as well as images, video, and audio. It’s different from CSS, which is used to add color, change fonts, and change the layout of a web page. HTML is usually the first language a web developer learns, and CSS is the second.\nWe’ll cover all of the basic concepts of HTML in this course, including tags, content, elements, attributes, and values. We’ll also cover a variety of elements, including paragraphs, headings, lists, anchors, and images. On the CSS side, we'll cover rules, properties, values, and selectors. By the end of this course, you’ll be ready to explore HTML and CSS on your own and learn about even more advanced elements.\nTo write code, you need a program called a text editor, so we’ll also learn the basics of using VS Code, which is the most popular text editor today. You’ll learn how to download and install it and how to use it to create projects.\nAlong the way, you’ll also learn some useful developer productivity tips to help you code even faster. We’ll talk about VS Code extensions, the Live Preview extension, and Emmet, which helps you write code even faster using different shortcuts.",
      "target_audience": [
        "Beginner developers interested in coding and web development",
        "Intermediate developers outside of web development that want to quickly learn the basics of HTML and CSS"
      ]
    },
    {
      "title": "How to Build a Golang Blog Engine Web Application",
      "url": "https://www.udemy.com/course/building-blog-in-golang/",
      "bio": "Go applications with application data, html templates, javascript and css",
      "objectives": [
        "In the end of my course you will learn how to build a Blog application with Go. You used MongoDB as the data store for the RESTful API application in which you organized the application logic, you create html templates and write javascript for handle process"
      ],
      "course_content": {
        "Getting Started Building Blog in Go": [
          "Introduction",
          "Intro,bower components, index handler",
          "write handler",
          "render all new posts",
          "edit post",
          "delete post",
          "add framework",
          "beautiful context",
          "storage data"
        ]
      },
      "requirements": [
        "You should have basic level of knowledge in CRUD, mongoDB and go language"
      ],
      "description": "This course will help you to build your blog, where you can post your own posts. You can define the data\nmodel of your Go applications using structs, in which you can program against the structs for working with\napplication data, also you can create different templates, adding css styles to your tags.\nThis course shows you how to build blog application with modern database MongoDb.\nThis course covers the following:\nintro,bower components, index handler\nwrite handler\nrender all new posts\nedit post\ndelete post\nadd framework martini\nmake beautiful context with markdown\nstore all data into local db\nThe Go programming language can be simply described in three words: simple, minimal, and pragmatic. If you look deeply into the language design of Go, you see its simple and minimalistic approach, coupled with a pragmatic design. You can observe this simplicity with all the Go language features, including the type system. Today, many programming languages provide too many features that make applications more complex for developers. The design goal of Go is to be a simple and minimal language that provides all the necessary features for developing efficient software systems.\nWhat are the requirements?\nA familiarity of programming in Golang.\nA familiarity of Linux or OSx\nA familiarity of MongoDB\nA familiarity of javascript and jQuery\nA familiarity of Html and css\nWhat am I going to get from this course?\nLearned how to build blog with Mongo in GO. How create handlers and routers.\nWhat is the target audience?\nBig Data professionals who want to MongoDB, Golang, Html, Css, Javascript, jQuery.\nIT professionals and managers who want to understand and learn this hot new technology",
      "target_audience": [
        "It can be helpful from high school level"
      ]
    },
    {
      "title": "Deno - The Practical Guide (MVC, SQL, NoSQL, REST API)",
      "url": "https://www.udemy.com/course/deno-the-practical-guide/",
      "bio": "Build modern web applications with Deno.js. Get a solid understanding from the ground up.",
      "objectives": [
        "Get a solid understanding of the Deno ecosystem",
        "Use the MVC model to build modern web applications",
        "Learn how to work with both SQL and NoSQL databases",
        "Build REST APIs"
      ],
      "course_content": {
        "Getting Started": [
          "What Is Deno?",
          "How Is Deno Different From Node.js?",
          "Installation",
          "Our First Programs",
          "Using deno install",
          "Using deno compile",
          "Giving Specific Permissions",
          "The Deno Ecosystem",
          "Coding Conventions"
        ],
        "Understanding Runtime API": [
          "Section Intro",
          "Using Web API",
          "Using Namespace API",
          "Understanding Lifecycle Events"
        ],
        "Understanding Standard Library": [
          "Section Intro",
          "Exploring Standard Library",
          "Creating a Simple Web Server",
          "Using Imports"
        ],
        "Working with Oak Framework": [
          "Section Intro",
          "Exploring Third Party Modules",
          "Overview of Oak Framework",
          "Single Middleware Function",
          "Using Denon",
          "Multiple Middleware Functions",
          "Using Routers",
          "Processing Forms",
          "Working with Cookies"
        ],
        "Working with Views": [
          "Section Intro",
          "What Is a Template Engine?",
          "Creating Views with EJS",
          "Showing Dynamic Content with EJS",
          "Using Partial EJS Template",
          "Serving Static Content",
          "Handling Not-Found Pages"
        ],
        "Validating Input": [
          "Section Intro",
          "Creating the EJS Files",
          "First Validation Rule",
          "More Validation Rules & Error Message Formats",
          "Displaying Error Messages with EJS",
          "Redirecting User to Another Page",
          "Custom Error Messages",
          "Custom Validation Rule"
        ],
        "Module System and Debugging": [
          "Section Intro",
          "How Module System Works",
          "Using deps.ts",
          "Using Import Maps",
          "Debugging Your Code"
        ],
        "Working with SQL Databases": [
          "Section Intro",
          "SQL vs NoSQL",
          "The MVC Model",
          "Setting Up PostgreSQL",
          "Creating the Table",
          "Creating the Views",
          "Creating the Controller",
          "Creating the Model",
          "Connecting to PostgreSQL and Inserting Data",
          "Retrieving Data",
          "Finding Data by ID",
          "Updating Data",
          "Deleting Data"
        ],
        "Working with NoSQL Databases": [
          "Section Intro",
          "Setting Up MongoDB",
          "Preparing Our Code",
          "Connecting to MongoDB and Inserting Data",
          "Retrieving Data",
          "Finding Data by ID",
          "Updating Data",
          "Deleting Data"
        ],
        "Building REST APIs": [
          "Section Intro",
          "Overview of REST API",
          "Preparing Our Code",
          "Creating Routers",
          "Inserting Data",
          "Retrieving Data",
          "Finding Data by ID",
          "Updating Data",
          "Deleting Data"
        ]
      },
      "requirements": [
        "A general understanding of how the web works",
        "Basic HTML and JavaScript knowledge"
      ],
      "description": "Welcome to Deno - The Practical Guide! Deno (or Deno.js, as some people call it) is a new technology for backend development released in 2020. It's created by Ryan Dahl - the original developer of Node.js - after his 2018 talk \"10 Things I Regret About Node.js\". Deno takes a modern approach to web development that may become the trend for years to come.\nIn this course, you will learn the ins and outs of Deno. You will learn about the different parts of Deno ecosystem and how they fit together. This course takes a gradual approach where you will learn Deno from its basic building blocks up to a full web application. Along the way, you will get a solid understanding of how Deno works and how to best use it to build web applications.\nThis course includes:\nWhat Deno is and how it's different from Node.js\nThe three main parts of Deno ecosystem and how they are related\nUsing Runtime API\nUnderstanding lifecycle events\nUsing Standard library\nHow imports work in Deno\nUsing third party modules\nWorking with Oak framework (including middleware, routers, etc)\nUsing EJS to create views\nValidating input (starting with basic validation up to creating your own custom rules)\nUsing the module system\nDebugging your code\nImplementing the MVC model\nDoing CRUD operations on SQL databases\nDoing CRUD operations on NoSQL databases\nBuilding REST APIs\nBy the end of the course, you will have the skills to build modern web applications with Deno.",
      "target_audience": [
        "Web developers who want to take a modern approach in the backend"
      ]
    },
    {
      "title": "Online Login / Authentication System without database",
      "url": "https://www.udemy.com/course/online-login-authentication-system-without-database-using-php/",
      "bio": "Learn How to Develop the Login System Step by Step",
      "objectives": [
        "How to develop login application using PHP without database"
      ],
      "course_content": {
        "Introduction": [
          "Understanding the Curriculum",
          "The Essentials Before Getting Started",
          "The Fundamentals of HTML",
          "The Fundamentals of PHP",
          "Fundamentals of Validation"
        ],
        "Overview of the Login Application": [
          "The Basic Logic / Algorithm"
        ],
        "What we are going to use?": [
          "Tools Required"
        ],
        "Analysis and Design Phase": [
          "A/D Phase"
        ],
        "Development Phase": [
          "Introduction to Development of Login System",
          "Front End Design",
          "Back End Design"
        ],
        "Testing the Application": [
          "Test the login system"
        ]
      },
      "requirements": [
        "You should be able to know fundamentals of computer science"
      ],
      "description": "Online Login Application System Development Without Database\nTo ensure security, any application should be accompanied with the login page which provides access only to the permitted users. This video illustrates about how to design and develop a simple login page for web applications without using any database connectivity. This lecture will be very useful for beginners to understand the logic behind the authentication system and it is very easy to implement too.\nI followed SDLC (Software Development Life Cycle) Approach to develop this software so that the learner can feel more comfortable while learning the lectures.",
      "target_audience": [
        "Basic level programmers",
        "Web Designers and developers - Basic level"
      ]
    },
    {
      "title": "MongoDB For Absolute Beginners",
      "url": "https://www.udemy.com/course/mongodb-for-absolute-beginners/",
      "bio": "A complete guide to learn MongoDB from Scratch",
      "objectives": [
        "Learn the foundation of NoSQL database development",
        "Learn to use MongoDB from ground up",
        "Learn to use MongoDB in your projects"
      ],
      "course_content": {
        "MongoDB Overview": [
          "Introduction",
          "Know your instructor",
          "What is Mongodb",
          "Use Cases",
          "Installation Prerequisites",
          "Installation",
          "Commands and Queries",
          "Mongo Shell Part 1",
          "Mongo Shell Part 2"
        ],
        "Add MongoDB to Node.js Server": [
          "Adding MongoDB to your Application",
          "Local NodeJS server",
          "Package Manager",
          "RESTful API",
          "Creating Express Application",
          "Setup Cloud Host for MongoDB",
          "Connecting Databse to our Application",
          "Root Setup",
          "Setting up Controller"
        ],
        "Data Modeling & Schemas": [
          "Schema Intro",
          "Schema Configuration",
          "Creating A Schema",
          "Schemas In Action Part 1",
          "Schemas In Action Part_2",
          "Required Validator",
          "Custom Validators & Enums",
          "Default Values"
        ],
        "Operations": [
          "Basic Query",
          "Query Properties",
          "Dynamic Queries",
          "Semantic Naming Conventions",
          "Dynamic Inserts",
          "Inserting Arrays",
          "Array Query Overview",
          "Array Query Operator $All",
          "Query Operator $In",
          "Array Query Operator $In",
          "Array Query Operator $Nin",
          "Query Operators $Lt & $Gt",
          "Update Single Array Member",
          "Array Update Many",
          "Update One",
          "Array Push & Pull",
          "Dynamic Update",
          "Dynamic Delete",
          "Adding New Collections",
          "Embedded Documents"
        ],
        "Advanced Usage": [
          "Sharding & Replicas",
          "Indexing",
          "Unit Testing",
          "Pagination"
        ]
      },
      "requirements": [
        "Basic knolwedge of JavaScript and NodeJs will be helpful in completing the course"
      ],
      "description": "Become an expert  from ground up in MongoDB with this carefully structured course!\nMongoDB is a NoSQL database program. It uses JSON like documents with Schemata. This contributes to the ability of MongoDB to function perfectly on a tiny RAM. MongoDB proves to be fast running as well when compared to other DBMSs (Database Management Software). MongoDB is also highly flexible and for companies that are considering scaling their businesses, MongoDB is an excellent choice for a database. Because of its ability to handle a gigantic quantity of data, it can be used in teams comprising a vast number of people.\nMongoDB is simple to use but still considered immensely powerful along with being able to solve the general issues of load-balancing, storing and indexing.\nThe evidence of MongoDB’s ability lies in its list of clients. Some of those big names are IBM, GAP, Urban Outfitters, eBay, Google, MTV, Uber and many more.\nWhat makes this course so valuable?\nMongoDB’s popularity continues to grow across the world as more and more people are realizing its benefits. So, consequentially, resources for learning and understanding MongoDB are on high demand.\nIf you are a beginner in MongoDB, this course will help you figure out the fundamentals of MongoDB. Mainly users struggle with understanding the terms associated with it. This course is particularly helpful for that.\nVenture through all the concepts of MongoDB; from the basics such as installing MongoDB to more advanced topics like replication, database sharding and how to connect your MongoDB with an active Node.js server. You’ll also learn what makes MongoDB unique among other NoSQL databases. You’ll also become familiar with local databases and cloud services.\nThere are many labs and exercises to ensure that you understand every topic and ensure that you are fluent in the subject.\nThe course includes\nInstallation and connecting with an active Node.js server-side\nConnecting to Cloud services and Mongo Shell\nMongoose Library\nPackage manager and RESTful API\nConnecting the database to the application\nBasic query and query properties\nDynamic inserts and inserting arrays\nError handling and schemas\nQuizzes\nAnd much more!\n\n\nLearning MongoDB just got a whole lot easier! Try this online tutorial today.",
      "target_audience": [
        "Anyone who wants to learn MongoDB will find this course very useful"
      ]
    },
    {
      "title": "React Projects Course: Build Real World Projects",
      "url": "https://www.udemy.com/course/react-project-course/",
      "bio": "Learn React by Building 5 Interesting Projects",
      "objectives": [
        "The React basics",
        "Functional React components",
        "React hooks like useState() and useEffect()",
        "Handling user events",
        "Props and State",
        "Building real-world React applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Starter and Final Files in GitHub"
        ],
        "Project 1 - Pomodoro": [
          "Preview",
          "Time and Start",
          "Stop and Reset"
        ],
        "Project 2 - Markdown Editor": [
          "Preview",
          "Build a Markdown Editor"
        ],
        "Project 3 - Highlight Tabs": [
          "Preview",
          "Highlight Tabs",
          "React Router",
          "Refactoring"
        ],
        "Project 4 - Rock Paper Scissors": [
          "Preview",
          "Getting Started",
          "Displaying Game State",
          "Choosing a Winner"
        ],
        "Project 5 - Moving Boxes": [
          "Preview",
          "Setting up a Canvas and Box",
          "Handling Keyboard Arrows"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS"
      ],
      "description": "React is a JavaScript library for building user interfaces. It is developed and maintained by Facebook, and is often used for building single-page applications and mobile applications.\nEvery successful business uses react and is looking for new talents daily.\nOne reason to learn React is that it is a popular and in-demand technology, so learning it can improve your job prospects and make it easier to find work as a front-end developer. React is also a good choice for building modern web applications because it is efficient, scalable, and fast, and it uses a virtual DOM (a lightweight in-memory representation of the actual DOM) to minimize the number of DOM manipulations required, which makes it easier to build high-performance applications.\nAnother reason to learn React is that it saves you time and money on development because it's component-based. You can break down an interface into reusable components that allow you to build dynamic user interfaces.\nOverall, React is a powerful and widely used tool for building modern web applications, and learning it can be a valuable addition to your skillset as a front-end developer.\nDuring the course we are going to use latest version of React - React 18.\nAs far as concepts we are going to cover\nThe React basics\nFunctional React components\nReact hooks like useState() and useEffect()\nHandling user events\nJSX and Rendering templates\nProps and State\nCreating and organising components\nBuilding real-world React applications\n\n\nHere are some of the projects we are going to build in this course\n1. Pomodoro\n2. Markdown Editor\n3. Highlight Tabs\n4. Rock Paper Scissors\n5. Moving Boxes",
      "target_audience": [
        "Developers who are familiar with HTML and CSS and want to learn ReactJS"
      ]
    },
    {
      "title": "DJANGO EASY COURSE, BUILD BLOG WEB APPLICATION with DEPLOY!",
      "url": "https://www.udemy.com/course/django-3/",
      "bio": "WE WILL TEACH YOU FROM SCRATCH TO THE ADVANCED LEVEL OF WEB APPLICATIONS WITH PYTHON 3 AND DJANGO",
      "objectives": [
        "How to Setup Django",
        "Setup Virtual Environments",
        "Install & configure Django",
        "How to create Django app",
        "Django widgets and forms",
        "Models, views & migration",
        "Admin panel customization & Bootstrap integration",
        "Pagination under Django",
        "User Authentication",
        "Django Templates",
        "Filtering and Linting issues with flake8",
        "Debugging basics in Django",
        "Deployment on Heroku",
        "Setting up AWS MySQL Database"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "Setup Django",
          "Django startproject",
          "Django runserver",
          "Quiz on section 1"
        ],
        "Getting Started": [
          "Getting started with app",
          "Creating the first view",
          "Connecting app with the project",
          "Quiz on section 2",
          "Note"
        ],
        "Template with Django": [
          "Add another page with title via variable",
          "The template",
          "Template in Django",
          "Fixing the static links",
          "Fixing the url link of the template",
          "Head and footer of the template",
          "Add base template, removing redundancy",
          "Bootstrap NAV classes",
          "Fixing the navigation links",
          "Quiz on section 3",
          "Note"
        ],
        "Read from database and display on bootstrap page in Django": [
          "Introduction to admin panel",
          "Admin panel continues",
          "Django models",
          "Django Migrations",
          "Register Django admin model",
          "Reading from database in Django, getting started",
          "Update the homepage with the blog entries from database",
          "Update the homepage with the blog entries from database continues",
          "Section warp up",
          "Quiz on section 4",
          "Note"
        ],
        "User Registration in Django": [
          "Users app setup and app registration",
          "UserCreation form basics",
          "UserCreation form under Django",
          "The UserCreation form kick-start",
          "Django Forms rendering option overview",
          "Djang UserCreation from with Crispy Forms",
          "Customizing user registration form",
          "Customizing user registration form continues",
          "Disable the help text from Django user registration form",
          "Saving the form in the database in Django",
          "Django Widgets",
          "Linting issues fixer with flake8",
          "Update on navigation bar",
          "Adding flash messages",
          "Displaying the message on view",
          "Section Wrap up",
          "Django's registration process Flowchart",
          "Quiz on section 5",
          "Project files"
        ],
        "User authentication in Django": [
          "Django Built-in login view - overview",
          "Use build-in Django login form for the app",
          "Build a working login page",
          "The logout functionality in Django",
          "Fixing the navigation bar",
          "Linting issues fixed with a small update __str__",
          "The login logout process flowchart",
          "Quiz on section 6",
          "Project files"
        ],
        "User profile management": [
          "Getting started with profile management",
          "Building the user update form",
          "Updating the profile template",
          "Adding the update profile functionality",
          "Quiz on section 7",
          "Project files"
        ],
        "Profile management with profile picture feature": [
          "Add OneToOne model for User model",
          "Extending user model with profile picture model",
          "Extending user model - updating the form handing",
          "Fixing the issues",
          "Django database naming conventions",
          "Fixing the missing link issue",
          "Understand the media static files settings",
          "Login required decorator in Django",
          "Display profile picture on the form",
          "How to change form label in Django",
          "Pillow with Django form image resize",
          "Section Wrap up",
          "Profile management flowchart",
          "Quiz on section 8",
          "Project files"
        ],
        "Django Signals overview": [
          "Getting started with signals",
          "Signals in Django",
          "Signals in Django continues",
          "Section wrap up",
          "Quiz on section 9",
          "Project files"
        ],
        "Django class based views introduction": [
          "Django Class Based Views - getting started",
          "Django Class Based views documentation"
        ]
      },
      "requirements": [
        "A system with internet access is required",
        "IDE (Pycharm, VS Code, Sublime text, Atom, etc)"
      ],
      "description": "Welcome to our Django web development course!\nIn this course, you'll learn how to use Django, a powerful web development framework written in Python, to build robust and scalable web applications.\nIn today's digital world, web development is an essential skill. Building web applications is a great way to bring your ideas to life and reach a global audience. Django is a powerful web development framework written in Python that allows you to build robust and scalable web applications. Whether you are a beginner or an experienced developer, our comprehensive Django web development course will provide you with the skills and knowledge you need to build web applications using Django.\n\n\nCourse Overview\nOur Django web development course covers various topics, including building a blog web application, setting up virtual environments, customization of the admin panel, integration of Bootstrap, user authentication, setting up a MySQL database in AWS, deployment on Heroku, password change and reset in Django, Django-storages in AWS S3 Bucket, and user profile management.\n\n\nCourse Outline:\nThe course will cover the following topics:\nSetting up Virtual Environments\nBuilding a Blog Web Application\nCustomization of the Admin Panel\nBootstrap Integration\nUser Authentication\nSetting up AWS MySQL Database\nDeployment on Heroku\nPassword Change and Reset in Django\nDjango storages in AWS S3 Bucket\nUser Profile Management\nIn the following sections, we will give an overview of each topic to provide you with a better understanding of what you will learn in this course.\nSetting up Virtual Environments:\nIn this section, you will learn how to set up virtual environments for your Django projects. A virtual environment is a tool that allows you to create an isolated Python environment for your project. This is essential for managing dependencies, avoiding version conflicts, and keeping your project organized.\nBuilding a Blog Web Application:\nIn this section, you will learn how to build a blog web application using Django. You will learn how to create models, views, and templates for your blog. You will also learn how to use Django's built-in admin panel to manage your blog content.\nCustomization of the Admin Panel:\nIn this section, you will learn how to customize the admin panel in Django. You will learn how to add custom fields, change the layout, and create custom views for your admin panel.\nBootstrap Integration:\nIn this section, you will learn how to integrate Bootstrap into your Django projects. Bootstrap is a popular front-end framework that provides pre-designed components for building responsive web pages. You will learn how to use Bootstrap to create a modern and responsive user interface for your web applications.\nUser Authentication:\nIn this section, you will learn how to implement user authentication in Django. You will learn how to create user models, login and logout views, and password reset views. You will also learn how to use Django's built-in authentication views to manage user authentication in your web applications.\nSetting up AWS MySQL Database:\nIn this section, you will learn how to set up a MySQL database in AWS. Amazon Web Services (AWS) is a cloud computing platform that provides a range of services, including databases, storage, and compute resources. You will learn how to set up a MySQL database instance in AWS and how to connect to it from your Django project.\nDeployment on Heroku:\nIn this section, you will learn how to deploy your Django project on Heroku. Heroku is a cloud platform that allows you to deploy, manage, and scale web applications. You will learn how to create a Heroku account, configure your Django project for deployment, and deploy your project to Heroku.\nPassword Change and Reset in Django:\nIn this section, you will learn how to implement password change and reset functionality in Django. You will learn how to create password change and reset views, and how to use Django's built-in password reset functionality to manage password reset requests.\nDjango-storages in AWS S3 Bucket:\nIn this section, you will learn how to use Django-storages to work with an AWS S3 bucket. S3 is a cloud storage service provided by AWS, and Django-storages is a library that provides a simple way to store static and media files in S3. You will learn how to set up an S3 bucket, configure Django-storages to work with the bucket, and use it to store static and media files for your Django.\nCourse Benefits:\nUpon completing this course, you'll be able to:\nBuild web applications using Django\nCustomize the admin panel\nImplement user authentication\nDeploy your web application on Heroku\nSet up a MySQL database in AWS\nUse Django storages to work with an S3 bucket\nImplement password change and reset functionality\nManage user profiles\n\n\nCourse Duration\nThis course is self-paced, and you can complete it at your own pace. The course is designed to take approximately 8-10 hours to complete, depending on your experience level.\n\n\nWhy Learn from Me\nMy exclusive and straightforward teaching style helps students to understand easy to challenging Django concepts easily. I am also a web application developer, which also brings my industry experience to students and I have taught IT for more than eight years to more than 1, 40,000+ students, and all are happy.\nHelping you master these issues is my highest priority. My teaching style is different from others and easy to understand because I usually take simple and easy examples and follow a step-by-step approach. If you find any difficulty in any video which I have covered in this course please feel free to ask your doubt. I am always happy to help you.\nOverall, if you are interested in building web applications using Python and Django, and want to learn from Instructor's experience who can guide you through the process, then our Django web development course is perfect for you.\n\n\nNo question asked - Money Back Guarantee!\nThere is no risk, this course comes with a 30-day money-back guarantee. Once you purchase the course, if for any reason you are not satisfied with the course, please let me know, and I will refund 100%, no questions asked. So you've got nothing to lose, check-in for this course, and learn “Django”!\nSo, what are you waiting for?\nEnroll now and take the first step toward becoming a Django expert!\nJoin me on this adventure today! See you on the course.",
      "target_audience": [
        "Complete beginners",
        "Beginner python developers, who are willing to learn web application development",
        "Students who have at least Python knowledge and who are familiar with the basic front-end technologies",
        "Software developers or programmers who want to transition into the Web development career path will learn a lot from this course"
      ]
    },
    {
      "title": "Ember : A beginner's introduction",
      "url": "https://www.udemy.com/course/ember-a-beginners-introduction/",
      "bio": "Practical introduction to ember an open-source JavaScript web framework",
      "objectives": [
        "Install ember dependencies",
        "Install ember",
        "Use Ember CLI",
        "Create templates",
        "Create Models",
        "Start and run ember server",
        "Create controllers",
        "Define Routes"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Overview of Ember",
          "What is Ember",
          "Who is using Ember",
          "Some ember core concepts",
          "Step-by-Step Guide to Setting Up Ember.js on Multiple Platforms(text version)"
        ],
        "Installing Ember": [
          "Dependencies",
          "Installing Git",
          "Installing Nodejs",
          "Installing bower",
          "Installing PhantomJS",
          "Installing Ember",
          "The Ember CLI",
          "Installing Text Editor"
        ],
        "Creating a basic Application": [
          "What we will create",
          "Generating the scaffolding",
          "The app structure - Part 1",
          "The app structure - Part 2",
          "Starting and running the server",
          "How ember works",
          "Introduction to Routes",
          "Defining a Route",
          "Modifying the templates -Part 1",
          "Modifying the templates -Part 2",
          "Create a controller",
          "Updating the clock",
          "Introduction to ES6 Modules",
          "Http Methods",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript",
        "Basic knowledge of HTML",
        "Ember dependencies - We will cover this in thecourse"
      ],
      "description": "Ember is a JavaScript framework that is used for building ambitious web projects. It adopts the MVC (Model ,View ,Controller) architecture where the Model represents the data layer for the application, the view which presents the data the user can see and the controller which communicates between model and the view.\nEmber is used by some famous names like Yahoo, Microsoft, Square and LinkedIn .This is just a sample of ember users there are much more companies and organisations that use ember in one way or the other.\nEmber is quite popular framework used by  a lot of web developers who have an active community.   MVCs\" have emerged to help developers be more productive and build these user interfaces more easily. Ember.js helps web developer's build scalable  web applications by providing a framework that eliminates boilerplate, enforces good code organization, and provides tools for common practices.\nIn this course, we'll start by looking at some sites built with Ember.js and learning the core concepts that underly the framework. Next, we'll examine each major area of Ember.js one at a time: templates, controllers, and models.\nThis is a practical course and you should have some understanding of javascript,HTML and CSS before taking this  course as it will make it easier for you to follow along . Ember is modern web framework that comes built with a development server that will enable us to test any applications we will build.   We will be using the Ember CLI command line tool a lot in this course so i hope you do not mind using the command line or the terminal.   What you'll learn\nWhat is ember Ember CLI Ember core concepts How ember works Installing ember dependencies Installing ember Routes and Templates  Controllers  Models  Data",
      "target_audience": [
        "Beginners to ember",
        "Anyone who wants to learn something new"
      ]
    },
    {
      "title": ".NET 9 with OpenAI Complete Guide with Real time Project",
      "url": "https://www.udemy.com/course/net-9-with-openai-complete-guide-with-real-time-project/",
      "bio": "Chat Service , Image Service etc",
      "objectives": [
        "Introduction about Open AI , How to Integrate OpenAI in ASP. NET 9 Application. How to Generate Open API Keys from Official website. How to use abstract classe",
        "How to use new abstract classes in .NET 9 for AI Service like Microsoft extension AI interface, use chat based prompt for seraching data from list or in-memory",
        "How to generate chat based AI Images, its taking too much token so carefully to use gpt-40-mini model and ollama model. How many models are existing in Open AI",
        "Text to Audio and Vice versa model are also existing but in this project we will work on wisper model. also work on DALL-E 2 model. How to generate Dashboard"
      ],
      "course_content": {
        "Introduction": [
          "Introduction about OpenAI",
          "Configure AI using Open AI Api Key and .NET 9 nuget Packages",
          "First AI Demo and Why we use it with ASP.NET 9"
        ],
        "How to register AI Models in Program File": [
          "Register AI Models in Program File"
        ],
        "Test Open AI Model": [
          "Sales Data Entity",
          "Design View Interface for your AI Project",
          "Prepare Chat App Functionality"
        ],
        "Test Model for Object Detection in Image": [
          "Prepare views for Object Detection",
          "Controller Functionality for Object Detection"
        ],
        "Generate Chat based AI Images": [
          "Change AI Model",
          "Image Generation Service Class",
          "Image Generate View or UI",
          "Functionality for Image Generation",
          "Course code the project"
        ]
      },
      "requirements": [
        "You need to know basics of Object Oriented Programming and MVC knowledge and"
      ],
      "description": "Introduction to OpenAI and ASP.NET Core 9\nKey Models and Capabilities Provided by OpenAI\nWhy Use OpenAI with ASP.NET Core 9? Benefits of Integrating AI Capabilities in Web Applications\nSetup Requirements: Understanding How OpenAI API Works, Including Obtaining API Keys and Authentication\nMaking Text Requests to OpenAI\nCreating Chat-Based Applications: Sending prompts to the API and generating text (simple Q&A bot, content generation, etc.).\nUsing IChatCompletionService: Integrating OpenAI's chat completion models like GPT-4 into your ASP.NET application.\nDisplaying AI-generated results: Rendering the output in an MVC view.\nHandling Advanced Text Generation Tasks\nText summarization: Using OpenAI for summarizing large pieces of text.\nText Classification: Sending data for text classification tasks.\nSentiment Analysis: Analyzing the sentiment of user-submitted text using OpenAI.\nGenerating Structured Data (Tables): Asking OpenAI to return results in specific formats (e.g., HTML tables, JSON).\nImage Handling and Generation with OpenAI\nIntroduction to DALL·E: Understanding how OpenAI’s DALL·E model can generate images based on text descriptions.\nIntegrating Image Generation: Using the OpenAI API to generate images (like product images or artwork) in response to queries.\nImage Upload and Analysis: Sending images to OpenAI for analysis (multimodal queries like GPT-4 Vision).\nDynamic Responses Based on User Input\nUnderstanding Dynamic Responses: Crafting prompts that request specific, structured responses from OpenAI.\nCreating Custom AI Responses: Handling a variety of user queries dynamically (e.g., sales data, trend analysis).\nGenerating HTML from OpenAI: Instructing OpenAI to generate HTML (tables, charts) in response to queries.\nUsing AI to Generate Structured Content: Formatting AI’s response into structured data, like HTML or CSV.\nManaging Large Datasets with OpenAI\nChunking large datasets: Dividing data into chunks and sending it to OpenAI for processing.\nEfficient Querying and Summarization: Using OpenAI’s model to analyze large datasets in smaller, manageable pieces.\nIntegrating OpenAI with Databases: Querying data from an SQL database (e.g., sales data) and passing it to OpenAI for processing.\nCaching and Optimizing OpenAI Requests\nMinimizing OpenAI API Calls: Implementing caching for frequently asked queries to avoid redundant API requests.\nStoring Results Locally: Caching OpenAI responses in memory or a database.\nUsing In-memory Data: Optimizing response times by calculating results in-memory before asking OpenAI for more complex analysis.\nHandling File Uploads (Images, CSV) with OpenAI\nUploading and Processing Files: Allowing users to upload images or CSV files and sending the data to OpenAI for analysis.\nImage and Document Analysis: Using OpenAI to analyze files (e.g., extracting text from an image or generating insights from CSV data).\nStoring Uploaded Files Temporarily: How to handle large file uploads and process them efficiently.\nReal-Time Application: Building a Chatbot with OpenAI\nIntegrating OpenAI into a Chatbot: Building a chatbot that responds to user queries using OpenAI’s models.\nHandling Multi-turn Conversations: Maintaining state across multiple interactions with OpenAI to make conversations more natural.\nCustomizing the Chatbot’s Behavior: Tweaking the AI’s personality, responses, and behavior according to user needs.\nSecurity Considerations\nSecuring OpenAI API Keys: Properly securing API keys using environment variables or secret management services.\nRate Limiting: Handling rate limiting by OpenAI’s API to avoid hitting request limits.\nUser Data Privacy: Ensuring that user input and any sensitive data are securely managed.",
      "target_audience": [
        "Beginners to Advanced Level"
      ]
    },
    {
      "title": "Professional Certification in Web Development",
      "url": "https://www.udemy.com/course/webdesign-made-easy/",
      "bio": "Professional Web development made easy",
      "objectives": [
        "Professional web development , including HTML, CSS and Javascript",
        "Professional Development",
        "Create Amazing sites with ease",
        "Be able to read code"
      ],
      "course_content": {},
      "requirements": [
        "Download ATOM or any text editor"
      ],
      "description": "Ready to change your life? This course will take you from zero to coding legend! This course was designed to produce expert web developers by teaching everything from a basic level until an expert level. All this is cramped into a powerful 3 Hour course. That's right! Unlike all the other courses for web development that take FOREVER to complete this one covers all you need to know in a simple to understand 3 Hour course.\n\n\nContents of this course are structured as follows:\n*The main course*\nHTML\nCSS\nJavaScript\n\n\n*Bonus material*\nWordPress\nMobilizer\nGoogle Sites\n\n\nSee that? I even added a bonus section that teaches you how you can make free, yes  free websites online. So what are you waiting for? Come join our team, the winning team.\n\n\nAbout your instructor:\nName : Mathew\nQualifications:\nDiploma web developer\nDiploma in behavioral Psychology\nDiploma in Project Management\nDiploma in Graphic Design\nDiploma in Advanced Management\nDiploma in IT Support\nPython Programming\nC++ Programming\nDegree in Anime studies\n\n\nBackground:\nI started working with computers at a young age , roughly 6, and was captivated and intrigued by all the things I could do, thus as I got older I started experimenting with different aspects of computers and computing devices and that's when I  learnt that I could change the coding of a website to manipulate the whole site. As I got older I found my self more and more attracted to coding. The biggest change for me come in high school when I was first introduced to the computer class ,  I was so nervous that I wouldn't be good enough, but to my surprise I  surpassed all my peers and even became the teachers go to guy when she couldn't figure something out . And thereafter I went to collage and studied in different fields.\n\n\nExtra: Kick-ass attitude",
      "target_audience": [
        "People who want to learn how to create fun , responsive and creative websites and web applications.",
        "Beginners",
        "Professionals",
        "Enthusiasts"
      ]
    },
    {
      "title": "The React Mega-Tutorial",
      "url": "https://www.udemy.com/course/react-mega-tutorial/",
      "bio": "Learn front end development with React by building a complete project step-by-step",
      "objectives": [
        "Write complete front end applications using JavaScript and React",
        "Rendering of text, images and layout elements such as sidebars and headers",
        "User registration, login and logout",
        "Password change and recovery",
        "Pagination",
        "Client-side routing and navigation",
        "Automated testing"
      ],
      "course_content": {
        "The React Mega-Tutorial": [
          "Preface",
          "Prerequisites",
          "How to Work with the Example Code"
        ],
        "Modern JavaScript": [
          "Introduction",
          "ES5 vs. ES6",
          "Summary of Recent JavaScript Features"
        ],
        "Hello, React!": [
          "Introduction",
          "Installing Node.js",
          "Creating a Starter React Project",
          "Installing Third-Party Dependencies",
          "Application Structure",
          "A Basic React Application",
          "Dynamic Rendering"
        ],
        "Working with Components": [
          "Introduction",
          "User Interface Components",
          "The Container Component",
          "Adding a Header Component",
          "Adding a Sidebar",
          "Building Reusable Components",
          "Components with Props"
        ],
        "Routing and Page Navigation": [
          "Introduction",
          "Creating Page Components",
          "Implementing Links",
          "Pages with Dynamic Parameters"
        ],
        "Connecting to a Back End": [
          "Introduction",
          "Running the Microblog API Back End",
          "Using State Variables",
          "Side Effect Functions",
          "Rendering Blog Posts",
          "Displaying Relative Times"
        ],
        "Building an API Client": [
          "Introduction",
          "What is an API Client?",
          "A Simple Client Class for Microblog API",
          "Sharing the API Client through a Context",
          "The User Profile Page",
          "Making Components Reusable Through Props",
          "Pagination"
        ],
        "Forms and Validation": [
          "Introduction",
          "Introductions to Forms with React-Bootstrap",
          "A Reusable Form Input Field",
          "The Login Form",
          "Controlled and Uncontrolled Components",
          "Accessing Components through DOM References",
          "Client-Side Field Validation",
          "The User Registration Form",
          "Form Submission and Server-Side Field Validation",
          "Flashing Messages to the User"
        ],
        "Authentication": [
          "Introduction",
          "Enabling Back End Authentication",
          "Authentication in the API Client",
          "A User Context and Hook",
          "Implementing Private Routes",
          "Public Routes",
          "Routing Public and Private Pages",
          "Hooking Up the Login Form",
          "User Information in the Header",
          "Handling Refresh Tokens"
        ],
        "Application Features": [
          "Introduction",
          "Submitting Blog Posts",
          "User Page Actions",
          "Changing the Password",
          "Password Resets"
        ]
      },
      "requirements": [
        "Basic experience with JavaScript, HTML and CSS",
        "Familiarity with the command-line prompt in your operating system to perform basic file and directory functions."
      ],
      "description": "The React Mega Tutorial is a comprehensive step-by-step tutorial for beginner and intermediate JavaScript developers that teaches front end web development with React, a popular JavaScript library for building user interfaces in the browser.\nWith the help of this course, you will build a nicely featured social blogging application. The course begins from the absolute beginning, by showing you how to create a brand new React project. Then, each successive chapter adds and expands the project with new features. All the code featured in this course is open source and available on GitHub. Once you learn with this project, you are welcome to use the code for your own projects!\nSome of the topics covered in this course include the following:\nOverview of modern JavaScript features commonly used in React applications\nRendering of text, images and layout elements such as sidebars and headers\nUser registration, login and logout\nPassword change and recovery\nPagination\nClient-side routing and navigation\nAutomated testing\nDeployment strategies\nand more!\nMany of the features covered in this course require the support of a back end service. While this course does not cover back end development, a complete open source back end project specifically designed for this course is provided, along with instructions to install it and run it.",
      "target_audience": [
        "Beginner and intermediate JavaScript developers interested in learning front end web development with React."
      ]
    },
    {
      "title": "Pass SCS-C02: AWS Certified Security - Specialty in 3 Days",
      "url": "https://www.udemy.com/course/pass-scs-c02-aws-certified-security-specialty-in-3-days/",
      "bio": "SCS-C02: AWS Certified Security - Specialty | Real Questions | Dump | Covers All Exam Topics",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "80+% Student Passed Exam After Only Studying These Questions. Pass yours, enroll now!\n\n\nFree Sample Question 1 out of 3:\nThe CloudOps Team at GlobalTech Solutions is setting up a new public-facing web application and needs to ensure all user connections are secured with HTTPS. Which of the following is a valid option for storing the necessary SSL/TLS certificates?\nA. Custom SSL certificate that is stored in AWS Key Management Service (AWS KMS)\nB. Default SSL certificate that is stored in Amazon CloudFront\nC. Custom SSL certificate that is stored in AWS Certificate Manager (ACM)\nD. Default SSL certificate that is stored in Amazon S3\n\n\nCorrect Answer: C\nExplanation:\nThe security engineer needs a valid option for storing SSL/TLS certificates for a website to enable HTTPS.\n* A. Custom SSL certificate that is stored in AWS Key Management Service (AWS KMS): AWS KMS is primarily used for managing cryptographic keys to encrypt data, not for storing and managing SSL/TLS certificates directly. While KMS can be used in conjunction with other services (like ACM Private CA) to protect private keys, it is not the service for general certificate storage.\n* B. Default SSL certificate that is stored in Amazon CloudFront: Amazon CloudFront is a Content Delivery Network (CDN) service that can use SSL/TLS certificates. While CloudFront does have a default certificate for its own endpoints, it is not for custom domains. Furthermore, CloudFront itself is not the primary storage service for *your custom* SSL/TLS certificates; it *uses* certificates managed elsewhere (e.g., in ACM).\n* C. Custom SSL certificate that is stored in AWS Certificate Manager (ACM): AWS Certificate Manager (ACM) is the correct and most appropriate service for provisioning, managing, and deploying public and private SSL/TLS certificates for use with AWS services and internal connected resources. It integrates seamlessly with services like Elastic Load Balancing (ELB), Amazon CloudFront, and Amazon API Gateway, making it the ideal choice for securing website communications with HTTPS. ACM handles the complexity of certificate renewals and deployment.\n* D. Default SSL certificate that is stored in Amazon S3: Amazon S3 is an object storage service. While you can store any type of file, including certificate files, in S3, it is not designed to function as a certificate management service for actively enabling HTTPS on a website. S3 itself doesn't provide \"default SSL certificates\" for user-defined websites, nor does it automate the lifecycle management (issuance, renewal, deployment) of certificates.\nTherefore, AWS Certificate Manager (ACM) is the dedicated and correct service for storing and managing custom SSL/TLS certificates in AWS.\n\n\n\n\nFree Sample Question 2 out of 3:\n\n\nA security engineer on the CyberGuard Team at TechSolutions Inc. needs to establish an incident response process for their AWS EC2 fleet, which uses Amazon EBS for storage and is managed by AWS Systems Manager. The process must adhere to AWS security best practices and satisfy these criteria: A compromised EC2 instance's volatile memory and non-volatile memory must be preserved for forensic purposes. A compromised EC2 instance's metadata must be updated with corresponding incident ticket information. A compromised EC2 instance must remain online during the investigation but must be isolated to prevent the spread of malware. Any investigative activity during the collection of volatile data must be captured as part of the process. Which combination of steps should the security engineer take to meet these requirements with the LEAST operational overhead? (Choose three.)\n\n\nA. Gather any relevant metadata for the compromised EC2 instance. Enable termination protection. Isolate the instance by updating the instance's security groups to restrict access. Detach the instance from any Auto Scaling groups that the instance is a member of. Deregister the instance from any Elastic Load Balancing (ELB) resources.\nB. Gather any relevant metadata for the compromised EC2 instance. Enable termination protection. Move the instance to an isolation subnet that denies all source and destination traffic. Associate the instance with the subnet to restrict access. Detach the instance from any Auto Scaling groups that the instance is a member of. Deregister the instance from any Elastic Load Balancing (ELB) resources.\nC. Use Systems Manager Run Command to invoke scripts that collect volatile data.\nD. Establish a Linux SSH or Windows Remote Desktop Protocol (RDP) session to the compromised EC2 instance to invoke scripts that collect volatile data.\nE. Create a snapshot of the compromised EC2 instance's EBS volume for follow-up investigations. Tag the instance with any relevant metadata and incident ticket information.\nF. Create a Systems Manager State Manager association to generate an EBS volume snapshot of the compromised EC2 instance. Tag the instance with any relevant metadata and incident ticket information.\n\n\nCorrect Answer: A C E\nExplanation:\nThe security engineer must implement a process that preserves volatile and non-volatile memory, updates instance metadata, isolates the instance while keeping it online, captures investigative activity, and minimizes operational overhead.\nLet's evaluate each option:\n* A. Gather any relevant metadata for the compromised EC2 instance. Enable termination protection. Isolate the instance by updating the instance's security groups to restrict access. Detach the instance from any Auto Scaling groups that the instance is a member of. Deregister the instance from any Elastic Load Balancing (ELB) resources.\n* Rationale: This option effectively addresses several critical requirements. Gathering metadata is a standard first step. Enabling termination protection prevents accidental deletion. Isolating the instance by updating security groups is an AWS best practice for incident response; it allows specific forensic access while blocking all other traffic, keeping the instance online. Detaching from Auto Scaling Groups and deregistering from ELB ensures the instance is not automatically terminated, replaced, or routed public traffic, further aiding isolation and preservation. All these actions involve simple API calls with minimal operational overhead.\n* B. Gather any relevant metadata for the compromised EC2 instance. Enable termination protection. Move the instance to an isolation subnet that denies all source and destination traffic. Associate the instance with the subnet to restrict access. Detach the instance from any Auto Scaling groups that the instance is a member of. Deregister the instance from any Elastic Load Balancing (ELB) resources.\n* Rationale: This option is incorrect because an Amazon EC2 instance's subnet cannot be changed after it is launched. To move an instance to a different subnet, a new instance would need to be launched in the desired subnet, typically from an AMI created from the original instance, which violates the requirement to keep the original instance online during investigation and introduces significant operational overhead. Furthermore, a subnet that denies *all* source and destination traffic would prevent any forensic access to the instance, making investigation impossible.\n* C. Use Systems Manager Run Command to invoke scripts that collect volatile data.\n* Rationale: This is an excellent choice for collecting volatile data (e.g., memory dumps). Since Systems Manager Agent (SSM Agent) is already installed on all EC2 instances, using Systems Manager Run Command provides a secure, auditable, and low-overhead method to remotely execute forensic scripts on the compromised instance. Run Command logs activities, fulfilling the requirement to capture investigative activity. It avoids the need for direct SSH/RDP access, which can be riskier and have higher overhead to set up for forensic purposes.\n* D. Establish a Linux SSH or Windows Remote Desktop Protocol (RDP) session to the compromised EC2 instance to invoke scripts that collect volatile data.\n* Rationale: While technically possible to collect volatile data this way, it generally involves higher operational overhead compared to using Systems Manager Run Command, especially for a compromised instance. It requires managing SSH keys or RDP credentials, ensuring network access (which might need to be opened/closed specifically for forensics), and the audit trail might be less centralized and comprehensive than that provided by Systems Manager. Given that SSM Agent is already available, Systems Manager is the preferred method for least operational overhead and better control.\n* E. Create a snapshot of the compromised EC2 instance's EBS volume for follow-up investigations. Tag the instance with any relevant metadata and incident ticket information.\n* Rationale: Creating an EBS snapshot is the standard and most efficient way to preserve the non-volatile memory (disk state) of a compromised instance for forensic analysis. This directly addresses the preservation requirement. Tagging the instance with relevant metadata and incident ticket information is the AWS best practice for associating operational and incident-specific details with a resource, meeting the metadata update requirement. Both actions are simple API calls with very low operational overhead.\n* F. Create a Systems Manager State Manager association to generate an EBS volume snapshot of the compromised EC2 instance. Tag the instance with any relevant metadata and incident ticket information.\n* Rationale: Systems Manager State Manager is primarily designed for continuous configuration management and compliance, not for one-off, reactive incident response actions. While it *can* create snapshots, setting up a State Manager association for a single, ad-hoc forensic snapshot introduces more overhead than directly calling the `CreateSnapshot` API. For an immediate incident response task, a direct snapshot creation is more appropriate and has less overhead.\nBased on these evaluations, options A, C, and E collectively meet all the requirements with the least operational overhead.\n\n\n\n\nFree Sample Question 3 out of 3:\n\n\nThe Infrastructure team at Zenith Corp is migrating a legacy system from their on-premises data center to AWS, where the application server will run while the database must remain on-premises due to compliance. The database is sensitive to network latency, and data between the data center and AWS must have IPsec encryption. Which combination of AWS solutions will meet these requirements? (Choose two.)\n\n\nA. AWS Site-to-Site VPN\nB. AWS Direct Connect\nC. AWS VPN CloudHub\nD. VPC peering\nE. NAT gateway\n\n\nCorrect Answer: A B\nExplanation:\nThe scenario requires connecting an AWS application server to an on-premises database with two critical conditions:\n1. Low network latency: The database is sensitive to network latency.\n2. IPsec encryption: Data traveling between on-premises and AWS must have IPsec encryption.\nLet's evaluate each option:\n* A. AWS Site-to-Site VPN: This solution creates an encrypted tunnel between your on-premises network and an AWS VPC using IPsec. It fulfills the requirement for IPsec encryption. While it provides encryption, a standard VPN connection over the public internet might still introduce latency variations. However, when combined with AWS Direct Connect, it provides an encrypted connection over a private, low-latency link.\n* B. AWS Direct Connect: This service provides a dedicated private network connection from your on-premises data center to an AWS Region. It bypasses the public internet, significantly reducing network latency, increasing bandwidth, and providing a more consistent network experience. This directly addresses the requirement for low network latency. However, by itself, Direct Connect provides a private connection but does not inherently encrypt the traffic at the IPsec layer.\n* C. AWS VPN CloudHub: This is a hub-and-spoke VPN solution designed to connect multiple on-premises sites to a single AWS VPC or to connect multiple AWS VPCs to each other. While it uses IPsec VPNs, its primary purpose is multi-site connectivity and it doesn't specifically address the low-latency requirement for a single point-to-point connection as efficiently as Direct Connect does. Moreover, it's not the primary solution for achieving both low latency and IPsec for a direct on-prem to AWS link without Direct Connect.\n* D. VPC peering: VPC peering allows two VPCs within AWS to communicate with each other as if they are on the same network. It is used for connecting AWS VPCs, not for connecting an AWS VPC to an on-premises data center. This option is irrelevant to the requirement.\n* E. NAT gateway: A NAT Gateway allows instances in a private subnet to connect to services outside their VPC (e.g., the internet or other VPCs) while preventing unsolicited inbound connections from the outside. It is primarily for outbound internet access or controlled private network routing within AWS, not for establishing connectivity with an on-premises data center with specific latency and encryption requirements. This option is irrelevant to the requirement.\nTo meet *both* requirements:\n* Low network latency: AWS Direct Connect is the ideal solution for dedicated, private, low-latency connectivity.\n* IPsec encryption: AWS Site-to-Site VPN provides the necessary IPsec encryption.\nWhen these two are combined (a VPN over Direct Connect), you get the best of both worlds: a private, low-latency connection (Direct Connect) and IPsec encryption for data in transit over that private connection (Site-to-Site VPN). This setup is commonly referred to as a \"Direct Connect + VPN\" solution or \"hosted VPN.\"\nThe final answer is $\\boxed{AB}$\n\n\nWhy Choose Our Certification Exam Prep Courses?\nWhen it comes to passing your certification exam—whether it’s AWS, Microsoft, or Oracle—quality training makes all the difference. Our exam prep courses are designed to give you the knowledge, confidence, and skills you need to succeed on test day and beyond.\n\n\nComprehensive Coverage of All Exam Objectives\nWe teach every topic outlined in the official certification blueprint. No shortcuts, no skipped sections—just complete coverage to ensure you walk into your exam fully prepared.\n\n\nClear, Step-by-Step Learning\nOur expert instructors break down complex concepts into easy-to-follow explanations. You won’t just memorize answers—you’ll understand the reasoning behind them so you can apply your knowledge in any scenario.\n\n\nRealistic Practice for Real Exam Readiness\nExperience exam-like simulations, practice questions, and hands-on scenarios that mirror the style, difficulty, and pacing of the real test. This ensures that by the time you sit for your certification, you’ve already “been there” before.\n\n\nAlways Current, Always Relevant\nTechnology changes fast—and so do exams. That’s why we continuously update our content to match the latest certification requirements and platform capabilities across AWS, Microsoft, and Oracle.\n\n\nDesigned for All Skill Levels\nWhether you’re a seasoned professional aiming to validate your expertise or a newcomer taking your first steps in the cloud and IT world, our courses adapt to your needs with clear explanations, structured practice, and actionable insights.\nOur Promise: We deliver exam prep that’s more than just test questions—it’s a complete learning experience that equips you with real-world skills, helps you master the material, and gives you the confidence to pass your certification the first time.\n\n\nStart your certification journey today with trusted, high-quality training that works—no matter which exam you’re taking.",
      "target_audience": [
        "Cloud security professionals seeking AWS Security Specialty certification to validate their expertise.",
        "AWS architects, engineers, and administrators responsible for securing AWS environments.",
        "IT professionals with experience in AWS who want to deepen their knowledge of cloud security best practices.",
        "Security analysts and auditors aiming to understand AWS security services and compliance requirements.",
        "Anyone preparing for the SCS-C02 exam looking for comprehensive training and hands-on experience."
      ]
    },
    {
      "title": "Advanced search form with PHP",
      "url": "https://www.udemy.com/course/advanced-search-form/",
      "bio": "Learn how to code a set of reusable component to filter your records",
      "objectives": [
        "How to make good use of the design patterns",
        "How to make design decisions",
        "Build a simple database Object Relational Mapper",
        "Build a reusable search component to filter collection of records",
        "Write tests using PHPUnit"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup": [
          "Exercise files and dependencies",
          "Environment and PHPUnit"
        ],
        "Database component": [
          "Database manager test",
          "Database drivers",
          "Database execute method",
          "Inserting new record",
          "Database insert method",
          "Database update and fetchObject method",
          "Fetch object tests",
          "Remove and count methods",
          "Fetch objects and bootstrap"
        ],
        "Container": [
          "Container"
        ],
        "Models": [
          "Abstract model class",
          "Update, delete and all methods",
          "Order By and Limit methods",
          "Lookup model test case",
          "Update and remove tests",
          "Model refactoring",
          "Form dropdown",
          "Year class",
          "Book class",
          "Testing update, remove, all and books methods",
          "List of books",
          "Group concatenation"
        ],
        "Search and Sticky": [
          "Search class",
          "Sticky (Part 1)",
          "Sticky (Part 2)"
        ],
        "Filter": [
          "Concatenators",
          "Abstract Query",
          "Pivot classes",
          "Pivot under test",
          "Query classes",
          "Filter class"
        ],
        "Filter tests": [
          "Equals tests",
          "Filter equals tests",
          "Exists tests",
          "Filter exists tests",
          "LikePercentBoth tests",
          "Filter like percent both tests"
        ],
        "Filtering records": [
          "Filter set",
          "Model search method",
          "Filter manager",
          "Search tests"
        ],
        "Pagination": [
          "Pagination class",
          "Accessor methods",
          "Pagination under test",
          "Pagination view",
          "Pagination view tests",
          "Pagination test refactoring",
          "Paginator",
          "Paginator and view"
        ]
      },
      "requirements": [
        "Intermediate OOP PHP knowledge"
      ],
      "description": "During this course you will learn how to use the best practice and how to make use of the Design Patterns in order to code the reusable component, which will allow you to filter your records.\nWe will build a simple Object Relational Mapper - to be used with Model classes representing entities of our project.\nFor each sub-component will write a set of tests using PHPUnit.\nThis course is for anyone who has a fundamental understanding of PHP programming language in its Object Oriented environment.",
      "target_audience": [
        "Intermediate PHP developers or simply those who want to improve their knowledge of the subject"
      ]
    },
    {
      "title": "WordPress 2025 : Complete WordPress Website Course",
      "url": "https://www.udemy.com/course/wordpress-2024-complete-wordpress-website-course/",
      "bio": "Become a WordPress expert - Build any dynamic website with WordPress and WooCommerce",
      "objectives": [
        "Understand WordPress Fundamentals: Learn about the architecture of WordPress, including themes, plugins, and the WordPress dashboard.",
        "Create Compelling Content: Master the art of creating and formatting posts and pages using the WordPress editor.",
        "Customize Your Site: Explore different themes and learn how to customize them to fit your brand identity.",
        "Add Functionality with Plugins: Discover how to enhance your website's functionality by installing and configuring various plugins.",
        "Set Up Your Website: Acquire skills to choose a web hosting provider, register a domain name, and install WordPress.",
        "Optimize for SEO: Learn the basics of search engine optimization to increase your website's visibility in search engines.",
        "Launch Your Website: Prepare your website for launch, including best practices for testing and maintaining your site.",
        "Manage and Update Content: Understand how to regularly update your content and manage your site's performance.",
        "You learn complete project with Hosting knowledge",
        "Create a \"Contact Us\" page with interactive map and email form",
        "You will learn How to Create Your Own Plugin from Scratch"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Get Most Out of this Course?",
          "What is WordPress?",
          "WordPress - How and Where it's Used"
        ],
        "Local Environment Setup for WordPress": [
          "Install Xampp",
          "Start Local Server",
          "Access PhpMyAdmin and Create New Database",
          "Create a New Database in XAMPP for WordPress"
        ],
        "Setting Up WordPress": [
          "Install WordPress on Local Machine / localhost",
          "WordPress File Structure",
          "Start Xampp and Run Wordpress on Browser",
          "Access Admin Panel - WordPress Admin",
          "Install WordPress Locally Using XAMPP"
        ],
        "WordPress Admin Panel Overview": [
          "WordPress Admin Panel Overview",
          "Basic WordPress Website Settings",
          "Clear WordPress Default Content",
          "Explore and Configure WordPress Admin Panel Settings"
        ],
        "Themes in WordPress": [
          "WordPress Free Themes",
          "Method 1 - Install WordPress Theme by Search - Direct Method",
          "Install and Activate a WordPress Theme",
          "Method 2 - Install WordPress Theme by Upload",
          "Install a Theme from a ZIP File",
          "Remove Theme From WordPress Website"
        ],
        "Pages in WordPress": [
          "Add - Edit - Delete Page (Default Editor)"
        ],
        "WordPress Plugins": [
          "Method 1 - Install Plugin by Search - Direct Method",
          "Method 2 - Install WordPress Plugin by Upload"
        ],
        "WordPress Blog": [
          "Create Blog Category in WordPress",
          "Blog Category - 2",
          "Create Blog Post in WordPress",
          "Post - Tags"
        ],
        "Comments management in WordPress": [
          "Allow Comments for Blog Posts",
          "Approve / Reject User comments",
          "Disable Comments for Posts",
          "Disable Comment for Entire Website"
        ],
        "Navigation - Menu in WordPress": [
          "Create Menu",
          "Set Primary Menu for Website",
          "Delete Menu",
          "Remove Menu Item",
          "Create and Organize Website Pages in WordPress"
        ]
      },
      "requirements": [
        "No Programming Knowledge needed.",
        "No prior experience required.",
        "We will start from scratch. You will learn everything you need to know."
      ],
      "description": "Welcome to the \"WordPress 2025 : Complete WordPress Website Course\" course! In this comprehensive program, you will learn how to create and manage your own website using WordPress, one of the most popular content management systems (CMS) in the world. Whether you're a complete beginner or someone looking to enhance your web development skills, this course is designed to provide you with the knowledge and tools needed to build a professional-looking website from scratch.\nCourse Objectives\nBy the end of this course, you will:\nUnderstand WordPress Fundamentals: Learn about the architecture of WordPress, including themes, plugins, and the WordPress dashboard.\nSet Up Your Website: Acquire skills to choose a web hosting provider, register a domain name, and install WordPress.\nCreate Compelling Content: Master the art of creating and formatting posts and pages using the WordPress editor.\nCustomize Your Site: Explore different themes and learn how to customize them to fit your brand identity.\nAdd Functionality with Plugins: Discover how to enhance your website's functionality by installing and configuring various plugins.\nOptimize for SEO: Learn the basics of search engine optimization to increase your website's visibility in search engines.\nLaunch Your Website: Prepare your website for launch, including best practices for testing and maintaining your site.\nManage and Update Content: Understand how to regularly update your content and manage your site's performance.\nCustom WordPress Plugin Development : You will learn how to create your own WordPress plugin from scratch\nCourse Outline\nModule 1: Introduction to WordPress\nModule 2: Setting Up WordPress\nModule 3: Creating and Publishing Content\nModule 4: Customizing Themes\nModule 5: Essential Plugins\nModule 6: SEO Best Practices\nModule 7: Launching Your Website\nModule 8: Post-Launch Maintenance\nA Powerful WooCommerce Website\nTake your skills further by building a full-fledged eCommerce store using WooCommerce, the go-to platform for online stores. You’ll learn how to set up products, configure payment gateways, manage shipping options, and create a user-friendly shopping experience.\n\n\nWho Should Enroll?\nThis course is ideal for:\nEntrepreneurs and small business owners wanting an online presence.\nBloggers looking to share their passions and interests.\nMarketers and content creators interested in website management.\nAnyone interested in learning web development skills with WordPress.\nCourse Deliverables\nEach module includes:\nVideo lectures\nStep-by-step guides\nResources for further learning and exploration\nConclusion\nJoin us on this exciting journey to become proficient in WordPress! Whether you want to build a personal blog, a portfolio, or a fully functional e-commerce site, this course will provide you with foundational skills and confidence to succeed. Let's get started on your web development adventure!",
      "target_audience": [
        "This course is for anyone who wants to get started creating websites and/or blogs.",
        "For all who want to learn WordPress",
        "For all who want to learn Content Management System",
        "For all who want to build real world project and deploy in live hosting from scratch"
      ]
    },
    {
      "title": "How to Create a WordPress Menu Driven Site & blog",
      "url": "https://www.udemy.com/course/wordpress-menu/",
      "bio": "WordPress Theme Customization 103 teaches you all about the WordPress menu system and how to customize it & much more!",
      "objectives": [
        "Create a WordPress Site with a Solid Menu System",
        "Customize WordPress Menu",
        "Create WordPress Blog Menu Items",
        "Create External Links in WordPress Menu",
        "Edit WordPress Footer File For Custom Links",
        "Add a Lightbox (Fancybox) to WordPress Links for Privacy and Other Less essential Links",
        "Add Basic Mobile Responsiveness to WordPress",
        "Add Custom Mobile Responsiveness to WordPress to Allow Device Specific Content to Display",
        "Add Custom Mobile Reponsiveness to WordPress to Make Content Show Depending On The Type of Device Viewing the Page (For example: Phone can show different content in a page or post than a computer will show, etc)",
        "Create nesting WordPress menu"
      ],
      "course_content": {
        "Course Intro and Welcome": [
          "WordPress Menu: Introduction"
        ],
        "WordPress Menu: WordPress Theme Customization 103 Course": [
          "WordPress Menu: Getting Your Site Prepared & Some Tips and Tricks",
          "WordPress Menu: Your First Menu & Tips For Content Structure",
          "WordPress Menu: Customizing Your Menu Further, Normal Site vs Blog Site",
          "WordPress Menu: Footer Links & Using a Lightbox or Fancybox for Links",
          "WordPress Menu: Better Mobile Responsiveness"
        ],
        "Wrap Up": [
          "Course Wrap Up"
        ]
      },
      "requirements": [
        "How to install WordPress",
        "You can learn how at WordPress for Beginners, my free course."
      ],
      "description": "In WordPress Menu, the latest of my WordPress Theme Customization series of training courses, I show you step by step how to get the most out of your menus, create custom linking in the footer, utilize a lightbox for less essential links, and make your site more mobile responsive.\nThis latest WordPress Theme Customization course walks through a real life site and shows you the exact steps to take to make your menu and your site respond to your liking and specific needs, whatever they are.\nNot only do I walk you through menu setup, customization and design, I show you a lot of tricks and tips in between to make your WordPress site easier for you to manage and easier for users to use!\nI show you how to create your first menu, how to place it in the right spot, how to nest menu items, how to create a lightbox function for certain links, and much more.\nPart of making a WordPress site really easy to use and operate is allowing for the co-existence of your standard \"website\" and a \"blog\". I show you how to make your blog operate in conjuction with your normal site functions while keeping things organized and easy to use on both ends...user and web admin.\nThis course is perfect for the beginner who knows nothing about WordPress menus, or even the intermediate who needs a few things cleared up.\nI answer questions like:\nHow do I create a \"Blog\" menu item that shows my blog posts in order?\nHow do I create direct links to Blog posts in my menu?\nHow do I make things like a Privacy Policy or other \"legal\" links appear inside a lightbox like an image would, so users aren't taken to a separate page?\nHow do I customize the mobile responsiveness of my site beyond the theme's capabilities?\nI want certain content to appear for iPhones and different to appear for PC, how do I do that?\nHow do I just create a solid menu with all the function and tweaks that I want?\nand MUCH more!\nThis course, as with all my Theme Customization courses, is designed to make your learning easy, enjoyable and fun. Although it's designed for the beginner, I know many intermediate users who find it extremely useful as well.\nIf you have any questions about this course or any of my other WordPress Theme Customization courses, please don't hesitate to ask me! I love hearing from current or future students and doing what I can to help.\nThanks!",
      "target_audience": [
        "This course is intended for a beginner to intermediate WordPress user who knows how to install WordPress and select a theme",
        "Anyone looking to create a WordPress site that uses Menus and special linking",
        "Anyone who wants a way to have a \"normal\" website and a \"blog\" on the same WordPress install, the blog being accessible by a single link",
        "Anyone who wants to learn how to create and edit menus in WordPress",
        "Anyone who wants to learn how to open links in a Lightbox or Fancybox",
        "Anyone wanting to learn how to make their WordPress site Mobile Responsive, making different content appear for different devices"
      ]
    },
    {
      "title": "React Crash Cours For Busy Developers With React Hooks[2023]",
      "url": "https://www.udemy.com/course/react-quick-start-for-beginners-with-react-hooks-2023/",
      "bio": "No need to be an expert developer to learn React, this is a quick guide to learn basic concepts of React in just 1 hour!",
      "objectives": [
        "Build React Projects",
        "Use Props and State",
        "Use React Hooks (useState & useEffect)",
        "Map Elements from Json To HTML"
      ],
      "course_content": {
        "Introduction": [
          "What Is React js",
          "Setting up The Environment"
        ],
        "Basics of ReactJs": [
          "Build your first react app",
          "Folder structure",
          "How to install the packages",
          "Components in react",
          "Styling the components",
          "Inline styling the components"
        ],
        "Props & State": [
          "How to use props",
          "How to use state"
        ],
        "React Hooks": [
          "What is useState?",
          "What is useEffect?",
          "Example of using the useEffect and useState"
        ],
        "Map elements in React": [
          "How to use arrays in mapping an element in react"
        ]
      },
      "requirements": [
        "Fundamentals of Js, HTML and CSS"
      ],
      "description": "This short course will cover basic and core concepts that you need to know to get up and running with ReactJS.\nThis series will explore the basic fundamentals of React to get you started. video course with interactive code examples that will help you learn React. A beginner-friendly crash course through the most important React topics.\n\n\nAlso in this course, it will get you up to speed quickly with easy to follow short videos. It is project-oriented with hands-on examples, from simple to complex, that will help you with the most fundamentals concepts of React:\nReact custom syntax and the JSX transform\ncomponents, properties and state\nUsage of useState and useEffect\nProps and state and the difference between the both\nTopics include:\nCompiling JSX to plain JS\nStyle your components with css, css modules\nDisplay data and images in your components\nShare data across components\nintroduction to Npm react-tools\nCreating components\nAdding and using state and props\nHandling events\nUsing useState and useEffect\nBy the end of this course you'll be able to\nLearn basic concepts like components, states, props, lists, events, forms\nAnd you will learn how to deploy react applications on the internet\n\n\nWho this course is for:\nThis is a FAST-paced course intended for developers who are brand new to React.\nYou don't need to be an expert developer to learn React from this course, but brand new developers may find it too fast-paced.\nExperienced developers will love the fast pace and focus on quick delivery of the most critical information.\nNon-developers and brand new developers may find this course too fast paced.",
      "target_audience": [
        "Beginners"
      ]
    },
    {
      "title": "Adobe Experience Manager (AEM) Basics",
      "url": "https://www.udemy.com/course/adobe-experience-manager-aem-basics/",
      "bio": "A Complete Beginner's Guide to Adobe Experience Manager (AEM 6.5 LTS & AEMaaCS)",
      "objectives": [
        "Understand what Adobe Experience Manager (AEM) is, its history, and the evolution of the product.",
        "Perform a local setup of both AEM 6.5 LTS and AEM as a Cloud Service (AEMaaCS), learn the key differences between them, and explore the CRX Quickstart folder.",
        "Learn how to create new AEM projects using the AEM Project Archetype and understand the local development flow.",
        "Get familiar with creating and managing pages using AEM’s authoring tools, including configuring page properties and understanding page structure.",
        "Learn how to use CRXDE Lite for content and code management, explore the AEM repository, and learn how to use the Package Manager.",
        "Learn what templates and template types are, how to create, configure, and manage them in your codebase, how to restrict templates for specific page sections.",
        "Learn what policies are and how to create and manage them in your codebase.",
        "Learn what components are, how to create cq:dialog and cq:design_dialog, use Expression Language, implement show/hide functionality, and so on.",
        "Learn what HTL (HTML Template Language) is, its syntax, HTL Objects, block statements, and so on.",
        "Learn how to create and manage Client-Side Libraries in AEM and how to add validation to a cq:dialog.",
        "Understand the purpose of the ui.frontend module and how it enables modern front-end workflows and tooling in your AEM project.",
        "Learn how to enable, configure, and extend the Style System to offer flexible styling options for your components.",
        "Understand what Apache Sling is, how it handles URL Decomposition, Request Processing, and Render Script rRsolution.",
        "Learn what Sling Models are, how to create them, inject data, use annotations, and so on.",
        "Explore various AEM and Sling APIs and their practical applications in development.",
        "Learn what the OSGi Framework is, learn about OSGi bundles, OSGi Components and Services, and how to configure them using OSGi configurations.",
        "Learn about different environments and how to customize the behavior and settings of your AEM instance based on the environment.",
        "Learn about Sling Servlets, how to create and register them by path and resource type.",
        "Learn about Sling Servlets, how to create and configure them.",
        "Learn how to test your AEM codebase, including Sling Models, OSGi services, Sling Adapters, and other features, using AEM Mocks.",
        "Learn what Experience Fragments are, how to create and reuse them, and learn about their APIs.",
        "Learn how to manage assets in AEM and explore Asset APIs.",
        "Learn what Content Fragments and Content Fragment Models are, and learn about their APIs",
        "Learn how to use tags for organizing, classifying, and managing content in AEM, how to resolve tags, and how to work with their APIs."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is AEM?",
          "AEM History"
        ],
        "Installation": [
          "AEM 6.5 LTS vs AEMaaCS",
          "Installation of AEMaaCS",
          "Exploring CRX Quickstart"
        ],
        "Archetype": [
          "Local Development Flow",
          "AEM Project Archetype"
        ],
        "Pages Overview": [
          "Pages Overview"
        ],
        "CRXDE Lite / Repository Overview": [
          "CRXDE Lite / Repository Overview",
          "Package Manager"
        ],
        "Templates & Template Types": [
          "Templates Overview",
          "Template Aspects",
          "Layout Mode & Initial Page Properties",
          "Template Creation",
          "Templates in the Repository",
          "Exporting to Maven",
          "Template Types Creation",
          "Allowing Templates"
        ],
        "Policies": [
          "Policies"
        ],
        "Components": [
          "Components Overview",
          "Components Creation",
          "cq:dialog",
          "Common Attributes",
          "Show/Hide Functionality",
          "cq:design_dialog",
          "Expression Language",
          "cqDesign Variable",
          "Hide Conditions",
          "Icons"
        ],
        "HTL": [
          "HTL",
          "HTL Objects",
          "Syntax",
          "Block Statements",
          "WCMMode"
        ],
        "Client-Side Libraries": [
          "Client-Side Libraries",
          "Validation",
          "Homework"
        ]
      },
      "requirements": [
        "Basic knowledge of Java is recommended, no other prerequisites required."
      ],
      "description": "Hi, and welcome to this course! My name is Andrii Bortnikov, and I am a Software Engineer specializing in Adobe Experience Manager.\n\nThis is the first course in a two-course series dedicated to Adobe Experience Manager. In this course, we will start learning Adobe Experience Manager from scratch.\n\n\nWe'll start with the Introduction section, where we’ll get familiar with Adobe Experience Manager, its history, different versions, and so on.\nNext, we'll cover the installation process, discuss the local development flow, and explore the codebase of an AEM project.\nAfter that, we will learn about different fundamental concepts and features, such as pages, the repository, package management, learn about templates and template types, policies, components, and so on.\nThen, we will dive deeper into the coding aspects and learn about the HTML Template Language, Client-Side Libraries, the ui.frontend module, the Style System, and so on.\nThen, we’ll go even further, and learn about the Apache Sling Framework, Sling Models, explore different AEM APIs, learn about the OSGi Framework, as well as different environments, run modes, Sling Servlets, Sling Filters, and so on.\nThen, we will also have a dedicated section on testing our AEM code, where we will learn how to test everything we learned in the previous sections.\nThen, once we’re done with that, we’ll learn about even more AEM features, such as Experience Fragments, Assets, Content Fragments, and Tags.\n\n\nOkay, great! So, as you can see, this is quite a comprehensive course. And because of that, let’s talk a little bit about how to get the most out of it:\nFirst of all, the topics in this course are structured logically, starting from the basics and moving to more advanced concepts. So, you do not need to have any prior knowledge of AEM; we’ll learn everything step by step. And, because of this, I highly recommend following the course sequentially, without skipping any lessons.\nSecondly, I really encourage you to take notes or even code along with me.\nThen, there are also homework assignments for almost every section, sometimes even more than one. And, I strongly encourage you to complete these assignments and then review my solutions as well. That way, you’ll not only learn the theory but also gain practical experience.\n\n\nOkay, great! I hope you are now familiar with the structure of this course.\nBut, in order to support the course videos, I’ve also created a GitHub repository containing all the code we’ll write throughout the course. For each section, there is a starting branch, which contains the code before we begin the section, and a finalized branch containing the completed code for that section. So, this way, you can always review the entire codebase or compare your code with mine if you have any questions. And, you’ll find the link to the GitHub repository in the file attached to the Introduction video.\nAlso, if you’d like to connect with me, you can find the link to my LinkedIn profile in the file attached to the Introduction video.\nI’ve also created a Discord community where we can discuss AEM and where I’ll post updates regarding this course. You can find the link to the Discord community in that file as well.\n\n\nOkay, great!\nSo, that’s pretty much it. Let's start learning AEM!",
      "target_audience": [
        "Beginner AEM Developers",
        "Web Developers New to Adobe Experience Manager",
        "Software Engineers New to AEM",
        "IT Professionals Transitioning to AEM Projects",
        "Students or Recent Graduates Interested in AEM",
        "Anyone Interested in Learning the Basics of Adobe Experience Manager"
      ]
    },
    {
      "title": "Build a decentralized Todo application using Solidity",
      "url": "https://www.udemy.com/course/build-a-decentralized-todo-application-using-solidity/",
      "bio": "Master the art of building web3 application using Solidity, Hardhat, Ethers and React",
      "objectives": [
        "Blockchain Knowledge",
        "Web3 architecture",
        "Solidity implementation",
        "Use of Hardhat and Metamask",
        "Real world dApp"
      ],
      "course_content": {
        "Introduction": [
          "Discussing course curriculum",
          "Setup hardhat project",
          "Alchemy and Metamask keys"
        ],
        "Creating Smart Contract": [
          "Creating a Task Contract",
          "Delete and Fetch Task functionality"
        ],
        "Writing Unit Test": [
          "Writing test for our contract",
          "Run the unit test"
        ],
        "Deploying the Smart Contract": [
          "Writing the deployment script"
        ],
        "React Js Frontend": [
          "Working on the React frontend",
          "Connect MetaMask Wallet",
          "Add Task Functionality",
          "Delete and Fetch Task Functionality",
          "Creating the Task Component",
          "Basic CSS styling"
        ],
        "Working of the Application": [
          "Testing the Complete Application"
        ]
      },
      "requirements": [
        "Basics of Solidity",
        "Knowledge of Hardhat",
        "Basics of React js"
      ],
      "description": "Blockchain is a key technology behind Web3. It is most-often associated with the cryptocurrency bitcoin and is the technology that underpins it. The bitcoin blockchain is a public ledger of activity of the bitcoin network. But bitcoin is not owned by a single company or person and it is not issued by a central authority like a central bank. Instead, it is decentralized and the network is maintained by a global group of people running specialized computers.\nIn this course we will learn how to create a complete decentralized Todo application from scratch. We will be using Solidity for the smart contract, hardhat for testing and deployment purpose, Ethers js to communicate with the contract, Metamask to sign the transaction, React js for the frontend and Alchemy as the blockchain node provider. By the end of the course you will understand all the concepts required to apply for a developer job or even build your own application on the Ethereum blockchain.\nOur stack\nSolidity (To write our smart contract)\nHardat (build, test and deployment framework)\nReact (Create our frontend)\nEthers (web3 library for interacting with the blockchain and our smart contract)\nAlchemy (Ethereum node provider)\nAs cryptocurrency and blockchain attain their increasing success rate every year, there is an increase in job opportunities provided in blockchain and cryptocurrency sector. The jobs in blockchain are growing at an exponential rate of 2,000-6,000% while offering salaries higher than 50-100% than conventional developers. In the field of blockchain, one can work as a blockchain developer.",
      "target_audience": [
        "Intermediate Blockchain Developer",
        "Developer who want to get practical knowledge",
        "Student curious about Web3 development"
      ]
    },
    {
      "title": "Chart js 4 Creating Perfect Charts [ Tips and tricks ]",
      "url": "https://www.udemy.com/course/chart-js-creating-perfect-dynamic-interactive-graph-tips-tricks/",
      "bio": "Chart.js Learn how to build dynamic and interactive graphs charts and diagram using Chart js v.4 [ Theory and Practice ]",
      "objectives": [
        "Charting using Chart js library",
        "Theoretical foundations of using Chart js",
        "Practical examples of how to use Chart js",
        "Data visualization techniques and methods"
      ],
      "course_content": {
        "Basic Concepts": [
          "Preparation [Setting Up Your Environment]",
          "3 Steps to create a chart with chart.js library",
          "The basic scenario of creating a chart",
          "Inspecting a chart object",
          "The arsenal of the chart js library in terms of chart variety",
          "The additional configuration sections",
          "Your help is needed here!"
        ],
        "Doughnut and Pie Charts [The interactive chart \"Visualizing the Seasons]": [
          "Introduction. Historical background.",
          "Html structure, css styles, the simplest kind of graphics in JavaScript",
          "Additional properties, datasets",
          "Fine-tuning [options, plugins, hover effects]"
        ],
        "PolarArea chart. Dynamics. [Unlocking the Secrets of Pi]": [
          "General information. Problem statement. Structure of html",
          "Preparing a template to display the graph.",
          "Parsing and preparation of data for dynamical charting",
          "Development of a mechanism for updating the dynamic chart",
          "Acceleration. The Secret of Pi. Conclusions."
        ],
        "Bar Chart [Interactive work with colors]": [
          "Introduction. HTML & CSS setup",
          "Customize the initial appearance and of the chart.",
          "Linking sliders to the chart. Update.",
          "Fine-tuning the chart"
        ],
        "Bubble Chart & Scatter Chart [Statistical chart of shots in basketball]": [
          "Introduction. HTML structure.",
          "Events. Overview of the structure. Canvas setup.",
          "Building the method of reading and parsing the source data. Source chart.",
          "Precise positioning of the background. Adjustment of axes. Data selection.",
          "Use of hyperlinks. Statistics for experiments. Conclusion."
        ],
        "Radar Chart [Wind Rose]": [
          "Introduction, general information. Project composition, Html setup.",
          "Analyzing the structure of the original data. Collection and processing.",
          "Build the initial view of the chart and initial setup.",
          "Fine-tune the appearance of the chart.",
          "A few finishing touches. Assignments for independent work."
        ],
        "Line Chart [Exploring Dynamic Graphs of Functions]": [
          "Introduction. HTML structure.",
          "The overall structure of the module. Events. Initial view of the chart.",
          "Work on dynamics and animation. Control methods.",
          "Methods of customizing the chart view. Alternative animation option.",
          "Drawing on top of the chart using custom plugins."
        ],
        "Bonus section": [
          "Information",
          "Interactive Web Animation. Demo lesson [part 1]",
          "Interactive Web Animation. Demo lesson [part 2]",
          "Interactive Web Animation. Demo lesson [part 3]",
          "Creative Web Animation with GSAP 3. Demo lesson",
          "Staggered animations [numerical values part1",
          "Staggered animations [numerical values part2",
          "Staggered animations [numerical values part3",
          "Staggered animations [configuration objects]",
          "HTML Canvas element [Introduction]. Part1",
          "HTML Canvas element [Introduction]. Part2",
          "HTML Canvas element [Introduction]. Part3",
          "Mastering Web Animation with Canvas. Demo lesson [part 1]",
          "Mastering Web Animation with Canvas. Demo lesson [part2]",
          "Mastering Web Animation with Canvas. Demo lesson [part 3]",
          "Mastering Web Animation with Canvas. Demo lesson [part 4]",
          "Mastering Web Animation with Canvas. Demo lesson [part 5]"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript",
        "Internet connection",
        "Web browser - Google Chrome",
        "A text editor"
      ],
      "description": "Are you interested in creating dynamic and interactive charts for your web projects? Whether you're a seasoned developer looking to expand your skills or a beginner eager to dive into the world of web data visualization, my course on \"Chart js v.4 [Creating the Perfect Diagram: Tips and Tricks]\" is tailored for you!\n\n\nIn this course, you will introduce you to an exceptionally powerful tool for building web-based charts: the Chart.js library. You will gain proficiency in the latest version of Chart.js, equipped to craft visually compelling and data-rich charts for your websites and applications. Chart.js is renowned as one of the most versatile and high-performance JavaScript charting libraries available.\n\n\nMy teaching approach follows a structured model, combining theory and hands-on practice. Each lesson begins with comprehensive theoretical insights, laying a solid foundation for your understanding of dynamic chart creation. Then, we transition seamlessly into practical examples, allowing you to apply your newfound knowledge immediately. The primary goal of this course is to demonstrate the full spectrum of charting techniques that Chart.js offers.\nThe course progression is carefully designed to take you from the fundamentals to more advanced topics. You start with the basics, ensuring you grasp core concepts and construct simple charts. As the course unfolds, you delve into Chart.js's extensive capabilities, exploring its properties and methods to build increasingly complex and interactive charts. Toward the end, you'll be introduced to Chart.js tools that will allow you to create the most sophisticated web-based data visualizations.\n\n\nMy course interface is designed for clarity and convenience:\nChapter Title: Positioned in the upper right corner, it outlines the current section's focus (e.g., \"Types of Сharts\").\nLesson Number: Found in the upper left corner, it tracks your progress within the chapter (e.g., \"Lesson 1b\").\nLesson Name: Situated in the upper center, it identifies the current topic or lesson (e.g., \"Doughnut and Pie Charts [Visualizing the Seasons]\").\nTheoretical Information: Displayed on the right side of your screen, this area provides in-depth insights into charting concepts.\nVisual Studio Code Editor: Located on the left side, it offers a live code editor where you can see real-time examples and practice your skills.\nAdditional Resources: Positioned at the bottom, this section may contain supplementary information to enhance your understanding (e.g., \"Tips for Smooth Animations\").\nAll lessons are available in crystal-clear 1080p quality, ensuring a seamless learning experience.  I recommend viewing the lessons in the highest quality possible for optimal comprehension.\n\n\nThroughout the course, you'll find numerous JavaScript charting examples complete with code snippets. You can also actively experiment with this code.\nDownloadable Archive: Download the course archive (e.g., \"Chapter 1 Lesson 2 zip\"), extract it to your local disk, and open the files in a text editor of your choice. Follow the instructions provided in the 1-st chapter to set up the library.\n\n\nUpon completing this course, you'll possess a comprehensive mastery of Chart.js, enabling you to craft captivating and interactive charts that elevate your web projects. You'll have the skills to bring your data to life with precision and creativity.\nWhether you're building data dashboards, infographics, or interactive reports, this course will empower you to turn your data into compelling visual narratives. Join now and embark on a journey to become a proficient web charting expert with Chart.js!",
      "target_audience": [
        "Everyone interested in data visualization",
        "JavaScript developers",
        "Website designers",
        "Frontend developers",
        "UX/UI designers",
        "for people who collect a unique library of knowledge in order to have access to it from anywhere in the world",
        "Creative people interested in learning new things"
      ]
    },
    {
      "title": "HTML and CSS Complete Course with Hands-on Portfolio Project",
      "url": "https://www.udemy.com/course/html-and-css-complete-course-with-hands-on-portfolio-project/",
      "bio": "HTML and Advanced CSS Course. Learn HMTL CSS with CSS Animations, Flexbox, Grid and build responsive portfolio web sites",
      "objectives": [
        "What is HTML and how to use it?",
        "Creating a web page with HTML fundamentals.",
        "What is CSS and how to use it?",
        "The most used features of CSS from the past to the present and modern CSS features.",
        "Creating web pages using HTML and CSS.",
        "CSS, Css3 for everyone from scratch",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "We will learn to place pages in the easiest way by talking about all layout models in CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "Learning how to code HTML without also learning CSS is like learning how to read but not write.",
        "Consider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size.",
        "What is Cascading Style Sheets (CSS)? CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "What careers use CSS? CSS applies to any career that involves web development.",
        "Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser.",
        "Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites."
      ],
      "course_content": {
        "Intro to \"HTML and CSS Complete Course with Hands-on Portfolio Project\" course": [
          "Built a Real-World Website with HTML and CSS",
          "General Terms in HTML",
          "Useful Links for HTML&CSS",
          "How the Website Works?",
          "What Is IDE?",
          "Project Files",
          "First Webpage with HTML and CSS"
        ],
        "HTML Fundamentals": [
          "About the Section",
          "What is HTML?",
          "HTML Document Structure",
          "Text Element in Html",
          "Lists in HTML CSS",
          "Images in HTML",
          "Hyperlinks in HTML - CSS",
          "Container Elements in HTML",
          "What is Semantic HTML?",
          "Creating Tables with HTML",
          "Colspan & Rowspan in Html, Css",
          "Working With Form Elements , Web Development",
          "Checkbox in Html",
          "Input type; Radio & File in HTML CSS",
          "Select & Option in HTML",
          "New Visual Studio Code Extensions",
          "Challenge in HTML",
          "Let’s Make the Challenges with HTML",
          "Challenge Solutions Continue",
          "Quiz"
        ],
        "CSS Fundamentals": [
          "About the Section",
          "What is CSS",
          "Styling Methods-Inline, Internal and External",
          "Let’s Do Some Styling with CSS",
          "Combining Selectors with CSS",
          "Style Operation With Class and Id Assignment",
          "Order of Priority in CSS",
          "Working with Colors",
          "Working with Colors on Code in CSS",
          "Using Border in CSS",
          "Pseudo-Class in CSS",
          "Styling Hyperlinks With Pseudo-Class with HTML CSS",
          "Crome DevTools",
          "Important Advices for CSS",
          "Challenge 1",
          "Box Model in HTML CSS",
          "Margin & Padding in CSS",
          "Let’s Start Using Margin & Padding for Web Development",
          "Dimensioning with CSS",
          "Let’s Centre Our Page with CSS",
          "Challenge 2",
          "Types of Boxes ,HTML CSS",
          "Element Positioning with CSS",
          "Use of Fixed and Sticky",
          "Creating Shadow in CSS",
          "Challenge 3",
          "Quiz"
        ],
        "Layout on Webpage - (Float, Flexbox, CSS Grid)": [
          "About the Section",
          "3 Ways to Create Layout on Web Pages",
          "Float in CSS",
          "Flexbox in CSS HTML",
          "Flexbox Overview",
          "Let’s Keep Using Flexbox",
          "Flex-Wrap in CSS",
          "Adding Flexbox to Our Project",
          "Adding Flexbox to Our Project 2",
          "Let’s Change the Page Layout with Flexbox",
          "Introduction to CSS Grid",
          "What Is CSS Grid?",
          "Let’s Continue Examining CSS Grid Features in CSS",
          "Other Grid Features in Web Development",
          "Quiz"
        ],
        "Media Query and CSS Animations": [
          "Section Overview",
          "Media Query and CSS Animations Code Samples",
          "Responsive Menu Making With Media Query",
          "CSS Animations",
          "Making a Slider Menu With Transform",
          "Keyframes",
          "Animation Examples With Keyframes",
          "Quiz"
        ],
        "Portfolio Website": [
          "Portfolio Website",
          "Let’s Start Creating the Sections",
          "Let’s Start With Header Creation",
          "Home Section",
          "About Section",
          "Services Section",
          "Portfolio Section",
          "Contact Section & Footer",
          "Responsive Page Design"
        ],
        "Extra": [
          "HTML and CSS Complete Course with Hands-on Portfolio Project"
        ]
      },
      "requirements": [
        "This course is ideal for volunteers who want to become a web developer but don't know how to get started. You don't need to know anything. Just be willing.",
        "We preferred macOs but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Desire to learn Web Application Development",
        "Nothing else! It’s just you, your computer, and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to Built a Real-World Website with HTML and CSS | 2024\nBuild static web sites from scratch with HTML and CSS| Learn HTML fundamentals, CSS fundamentals and other.\n\n\nHypertext markup language (HTML) is the foundational computer code used to create web pages. HTML is used by web developers, email marketers, and many others for various purposes, from adding character to text fonts to creating entire sites. Without HTML, none of it would be possible. HTML training can provide you with fundamental web building knowledge.\n\nAs the foundational language of the entire World Wide Web, working knowledge of HTML is essential for any profession that involves any sort of web developing. Whether you develop web sites or apps that use PHP, Java, or JavaScript, it is necessary to first understand HTML.\n\n\nLearning how to code HTML without also learning CSS is like learning how to read but not write. All of your hard web development work is lost if you don’t optimize it for different screen sizes.\n\n\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work, and is rightfully considered a cornerstone of internet technology.\n\n\nIn this course, you will learn to develop a web site with HTML & CSS from scratch.\nIf you are thinking to start to learn HTML & CSS, this course is the best match for you.\nWe have explained HTML CSS from beginner to all levels. We have explained all the topics as simple as possible with examples, slides, and diagrams.\nWe have created a lot of projects while explaining the subjects. Because we believe that applied educations are much more useful than other teaching methods.\nLet's talk about the course curriculum now.\nFirst, we will see what we will learn in the course. Then we will learn the basics of HTML. Here we will see all the html tags used from past to present. Then we will start to see semantic html tags. We will learn why and how to use them. We will create a website with just HTML only. Then we will start to see CSS topics. First we will see basic CSS topics. Then we will learn modern CSS features.\nThe appearance of a website is very important nowadays. The layout of websites is very important to create beautiful websites. We have a section where we will learn how to do this. In addition, responsive designs are very important today. The sites we have made should have a proper image on all screen sizes. There is a method we can apply this for all screens, this method is called media query. We will also learn how to use them.\nWe will also learn CSS animations to create small animations on our pages. To reinforce what we have learned throughout the course, we will design a nice portfolio site together with you. Thus, we will complete our course.\nAfter taking your course, there will be no subject that we have not seen from basic HTML and CSS topics. With what you learn in this course, you will be able to design the site you want. Besides all these, we will use Visual Studio Code IDE to create your applications. We will also learn how to use it.\n\n\nNo Previous Knowledge is needed!\nYou don’t need to have previous knowledge about HTML and CSS. This course will take you from a beginner to a more advanced level with hands-on examples.\nYou will be confident in using HTML and CSS , and if you ever get stuck, we will be there to help.\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize HTML and CSS. In this course, we will be teaching HTML and CSS by creating various projects.\n\n\nIn this tutorial you will learn;\n\n\nHow to create Web Site with HTML & CSS\nMost important HTML & CSS topics.\nHow to create responsive designs for websites\nHow to easily build the largest and most advanced web site using HTML & CSS\n\n\n\nWhat is HTML?\nHTML (HyperText Markup Language) is a standard markup language used to create the structure and content of web pages. It consists of a set of tags and attributes that define the structure and layout of the content within a web page. HTML tags are used to mark up elements such as headings, paragraphs, lists, links, images, forms, and other types of content.\nHTML documents are text files with a .html or .htm extension and can be created using any text editor. These documents are interpreted by web browsers, which render the content according to the instructions provided by the HTML markup.\nHTML provides a way to organize and structure content on the web, allowing developers to create documents that are easily understood by both humans and machines. It is often used in conjunction with other web technologies such as CSS (Cascading Style Sheets) for styling and JavaScript for interactivity, to create dynamic and visually appealing web pages.\n\nWhat is CSS?\nCSS (Cascading Style Sheets) is a style sheet language used to describe the presentation of a document written in markup languages such as HTML and XML. CSS defines how elements of a web page should be displayed, including aspects like layout, colors, fonts, and spacing. By separating the presentation style from the content of the document, CSS enables greater flexibility and control over the visual appearance of web pages.\nCSS works by associating styles with HTML elements through selectors. Selectors target specific elements in the HTML document, and styles are applied to those elements according to the rules defined in the CSS stylesheet. CSS styles can be applied inline within HTML elements, internally within the HTML document using <style> tags, or externally in separate CSS files linked to the HTML document using <link> tags.\n\n\nWhat can we do using HTML and CSS?\nHTML and CSS are fundamental technologies for web development and together they enable developers to create rich and interactive web experiences. Here are some of the things you can do using HTML and CSS:\nStructuring Content: HTML provides a way to structure the content of a web page using elements like headings, paragraphs, lists, tables, and more. CSS allows you to control the layout and appearance of these elements, including their size, position, and spacing.\nStyling: CSS allows you to style the visual presentation of HTML elements, including properties like colors, fonts, backgrounds, borders, and shadows. With CSS, you can create visually appealing designs and ensure consistency across multiple pages of a website.\nResponsive Design: CSS provides features like media queries that enable you to create responsive layouts that adapt to different screen sizes and devices. This allows your website to provide an optimal viewing experience on desktops, tablets, and smartphones.\nAnimation and Transitions: CSS includes properties for creating animations and transitions, allowing you to add movement and interactivity to elements on a web page. This can be used to create engaging user interfaces and improve the user experience.\nFlexibility: HTML and CSS provide flexibility in terms of design and layout. You can create complex page layouts, implement custom navigation menus, design forms for user input, and more, all using these technologies.\nAccessibility: HTML and CSS include features that support accessibility, making it possible to create websites that are usable by people with disabilities. This includes features like semantic HTML markup, proper use of headings and landmarks, and providing alternative text for images.\nIntegration with Other Technologies: HTML and CSS can be integrated with other web technologies like JavaScript, allowing you to create dynamic and interactive web applications. JavaScript can be used to add behavior to HTML elements, manipulate the DOM, and handle user interactions.\nOverall, HTML and CSS are powerful tools for creating visually appealing, responsive, and accessible websites and web applications. They form the foundation of web development and are essential skills for anyone working in the field.\n\n\n\n\nHow does HTML and CSS work?\nHTML (HyperText Markup Language) and CSS (Cascading Style Sheets) work together to create and style web pages. Here's how they work:\n\nHTML: HTML is used to create the structure and content of a web page. It consists of a set of elements, each represented by a tag, which define different parts of the content such as headings, paragraphs, lists, links, images, and more. HTML provides the semantic structure of the document, organizing the content in a meaningful way. When a web browser parses an HTML document, it interprets these tags and renders the content accordingly, displaying it on the screen.\nCSS: CSS is used to style the appearance of the HTML elements defined in the document. It allows you to specify properties such as colors, fonts, margins, padding, borders, and more for individual or groups of elements. CSS rules are applied to HTML elements using selectors, which target specific elements or groups of elements. When a web browser renders an HTML document, it applies the styles defined in the CSS to the corresponding HTML elements, affecting their visual presentation.\nIntegration: HTML and CSS are often integrated by linking a separate CSS file to the HTML document using the <link> element in the <head> section of the HTML document. This allows for separation of concerns, with HTML defining the structure and content of the page, and CSS defining the presentation and styling. Additionally, inline styles and internal styles can also be used to apply CSS directly within HTML elements or within the HTML document itself.\nOverall, HTML and CSS work together to create visually appealing and well-structured web pages by defining both the content and presentation of the page.\n\n\nWhat is responsive design?\nResponsive design is a new type of design intended to respond to the platform and environment that a user is on. When HTML was created, most people used PCs. Today, people can browse a website on a PC, phone, tablet, or even a game console. In the past, developers created separate sites for “desktop” and “mobile.” While it worked, it wasn't easy to maintain. Rather than creating separate sites, responsive design generates the site based on the environment it detects. This greatly reduces the amount of development and maintenance for the site. Responsive design is generally achieved with a combination of HTML, CSS, and Javascript.\n\n\nIs it hard to learn HTML and CSS?\nLearning HTML and CSS is often considered one of the easier aspects of web development compared to other programming languages and technologies. Here's why:\nSimple Syntax: HTML and CSS have relatively simple syntax compared to other programming languages. HTML consists of a set of tags, while CSS uses property-value pairs. This simplicity makes it easier for beginners to understand and learn.\nImmediate Results: With HTML and CSS, you can see the results of your work immediately in a web browser. This instant feedback can be motivating and helps reinforce learning.\nAbundance of Learning Resources: There are countless tutorials, guides, videos, and online courses available for learning HTML and CSS, many of which are free. Additionally, there are supportive online communities where you can ask questions and get help if you're stuck.\nProgressive Learning Curve: You can start with the basics of HTML and CSS and gradually build upon your knowledge as you become more comfortable. You don't need to learn everything all at once; you can start by creating simple web pages and gradually tackle more complex concepts and projects.\nWidespread Use: HTML and CSS are the foundation of web development and are used extensively in building websites and web applications. This means that there are ample opportunities to practice and apply your skills in real-world projects.\nWhile HTML and CSS are generally considered easier to learn compared to other programming languages, mastering them and becoming proficient may still require time, practice, and dedication. However, with persistence and the right resources, many people find that they can quickly grasp the fundamentals and begin creating their own web pages and designs.\n\n\n\n\n\n\nAt the end of the course\nBy the end of the course, You will be able to start building your own website using HTML and CSS.\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\n\n\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer. You will always have up-to-date content for this course at no extra charge.\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\n· Seeing clearly\n· Hearing clearly\n· Moving through the course without distractions\n\nYou'll also get:\nLifetime Access to The Cours\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\nDive in now into; \"Built a Real-World Website with HTML and CSS\" course.\n\n\nWe offer full support, answering any questions.\n\nSee you on the other side!",
      "target_audience": [
        "Anyone who wants to learn to HTML and CSS.",
        "Programmers who are interested in building websites with HTML and CSS.",
        "Anyone who has no previous Web Development coding experience but wants to become an expert",
        "A total beginner, with a curious mind and wants to be a web developer",
        "Anyone planning a job transformation and wants to become a web developer"
      ]
    },
    {
      "title": "The Complete Angular Course- Beginner to Advanced 2022",
      "url": "https://www.udemy.com/course/the-complete-angular-course-beginner-to-advanced-2022/",
      "bio": "The most updated Angular Training: Zero to Mastery",
      "objectives": [
        "Establish yourself as a skilled professional developer",
        "Build real-world Angular applications on your own",
        "Troubleshoot common Angular errors",
        "Master the best practices",
        "Write clean and elegant code like a professional developer",
        "You will learn HTML, CSS, JavaScript, Bootstrap, TypeScript, Angular"
      ],
      "course_content": {},
      "requirements": [
        "No Angular, React and Node previous knowledge is required!",
        "Fundamentals in HTML and CSS, but isn't a must-have.",
        "You don't need familiarity with TypeScript or any previous versions of Angular. You're going to learn both TypeScript and Angular from scratch in this course."
      ],
      "description": "If you are intended to become an Angular developer, you can go for this course. Angular developers are basically JavaScript developers. So basically angular is a platform for building mobile, desktop, and web applications. During this course, you will be learning to create web applications using angular. Before learning angular you should have an idea of HTML, CSS & JavaScript. So we will be learning that first. After that you will learn another language ie, Typescript then we will be learning angular. And you can apply for the post of an angular developer, or else a JavaScript developer. Anyone can learn this course, there are no particular criteria for learning this course because we will be starting from the very basics and there are so many opportunities available both in our country as well as abroad.\nIf you are planning to start your career as a developer or you just want to improve your programming skills, then this course is right for you. Get all you need to start web development in one course!\nThis resource is the only thing you need in order to start Web Development with Angular, and during this course, you will get the confidence and skills required to start your own projects. You will get the right mindset to apply for a developer career and to improve in modern frameworks like Angular.",
      "target_audience": [
        "Developers who want to upgrade their skills and get better job opportunities",
        "Front-end developers who want to stay up-to-date with the latest technology",
        "Back-end developers who want to learn front-end development and become full-stack developers",
        "Hobbyist developers who are passionate about working with new frameworks",
        "Starting as well as experienced developers interested in Angular.",
        "This course is for everyone eager to understand how javascript frameworks work."
      ]
    },
    {
      "title": "Full-Stack Web Development Bootcamp 2025",
      "url": "https://www.udemy.com/course/full-stack-web-development-bootcamp-complete-course-2025/",
      "bio": "Complete Full-Stack Development Course with Latest Tech – Hands-On Frontend, Backend, Database & Deployment Training",
      "objectives": [
        "Understand how the internet and websites work from scratch",
        "Build websites with HTML, CSS, JavaScript, Boostrap, React, Node, SQL",
        "Create responsive layouts",
        "Work with Git & GitHub for version control and collaboration",
        "Build and deploy multiple frontend and full-stack projects",
        "Learn JavaScript",
        "Master React",
        "Master Node.js and Express.js for backend development",
        "Create and test RESTful APIs",
        "Work with SQL databases",
        "Develop a Full-Stack Event Management App (frontend + backend + database + authentication)",
        "Deploy your apps to the cloud",
        "Gain hands-on, job-ready full-stack developer skills"
      ],
      "course_content": {
        "Introduction": [
          "Curriculum",
          "How Does the Internet Work",
          "How Do Websites Work",
          "Tips For the Course"
        ],
        "Introduction To HTML": [
          "What is HTML?",
          "The Heading Element",
          "Test Editor",
          "My First HTML Code",
          "The Paragraph Element",
          "Self Closing Tags",
          "Project 1 Assignment",
          "Project 1 Solution"
        ],
        "Intermediate HTML": [
          "The List Element",
          "Nested List",
          "Attributes & Anchor element",
          "Image Element",
          "Project 2 (Profile Portfolio)",
          "Project 2 Solution",
          "Multi Page Websites",
          "Website Hosting",
          "Deploy Project"
        ],
        "CSS": [
          "Introduction to CSS",
          "How to Add CSS To HTML Page",
          "CSS Selectors",
          "Colors"
        ],
        "Intermediate CSS": [
          "The BOX Model",
          "Texts & Fonts",
          "Display Types",
          "Grid vs FlexBox",
          "Positioning(Relative, Static, Absolute, Sticky e.t.c)",
          "Profile Project(Project 3)",
          "Media Query"
        ],
        "HTML & CSS Project (Hotel Booking Page)": [
          "Hotel Home Page",
          "Home Page Styling",
          "Rooms Page",
          "Rooms Page Styling",
          "Booking Page",
          "Booking Page Styling",
          "Upload Project To Github",
          "Host Project As Website"
        ],
        "Bootstrap (with project)": [
          "Introduction to boostrap",
          "Setup",
          "Project Overview & Intro",
          "Navbar & Colors",
          "Padding, Margin, Button, Container",
          "grid, row,col,card",
          "testimonials",
          "cta",
          "footer",
          "bootstrap forms"
        ],
        "Javascript Introduction": [
          "What is Javascript & Uses",
          "Java vs JavaScript",
          "First JS Code",
          "The Console",
          "Comments"
        ],
        "JavaScript Fundamentals": [
          "Variables",
          "Naming Conventions",
          "Data Types",
          "Programming Symbol",
          "Arithmetic Operations",
          "Math Methods",
          "Task Assignment 1 & 2",
          "Task 1 & 2 Solutions",
          "Strings",
          "String Manipulation Part 1",
          "String Manipulation Part 2",
          "String Manipulation Part 3",
          "Equality Comparison (== vs ===)",
          "Task Assignment 3 & 4",
          "Task 3 & 4 Solutions"
        ],
        "Controlling Program Flow": [
          "Conditional Statement",
          "Switch",
          "Ternary Operator",
          "For-Loop",
          "For Each-Loop",
          "While & Do-While Loop",
          "Break & Continue"
        ]
      },
      "requirements": [
        "No prior coding experience required – we start from the very basics",
        "A computer (Windows, Mac, or Linux) with internet access",
        "A willingness to learn by doing (this is project-based learning)",
        "Patience and consistency – becoming a developer takes practice",
        "(Optional but helpful) A GitHub account to showcase your projects"
      ],
      "description": "Are you ready to become a Job-Ready Full-Stack Web Developer in 2025?\nThis Complete Full-Stack Web Development Bootcamp takes you from absolute beginner to professional developer, covering everything from HTML, CSS, JavaScript, Bootstrap, React, Node.js, Express.js, SQL, MySQL, Git, GitHub, and Cloud Deployment – all in ONE hands-on course.\nUnlike other tutorials, this course is project-based. You won’t just learn theory – you’ll build real-world websites and applications step by step, with clear explanations every time. By the end, you’ll have multiple portfolio projects to showcase to employers or clients.\n\n\nWhat You’ll Learn\nFrontend Development\nMaster HTML, CSS, and JavaScript from scratch\nLearn Bootstrap for responsive, professional websites\nBuild and style multiple projects, including a Hotel Booking Website and Portfolio Page\nWork with React – components, props, state, hooks, and routing\nBackend Development\nUnderstand the role of servers, databases, and APIs\nLearn Node.js and Express.js for backend apps\nBuild RESTful APIs and test them with Postman\nCreate a Task App backend and a Product App with Node.js & MySQL\nDatabases\nLearn  SQL & MySQL fundamentals – tables, queries, filtering, joins, and functions\nConnect databases with backend apps for dynamic full-stack applications\nVersion Control & Collaboration\nMaster Git & GitHub for tracking changes and team collaboration\nPush projects to GitHub to showcase your work\nFull-Stack Projects\nBuild a Blog Website with React + API integration\nCreate a Full-Stack Event Management App with authentication, event filtering, and attendee features\nDeploy both frontend and backend to the cloud with AWS (EC2 & S3)\nCloud Deployment\nHost and manage your apps on the cloud\nConfigure servers, databases, and security for production-ready apps\nWhy Take This Course?\nComplete Roadmap to Full-Stack Development with the Latest Tech\nHands-On Training in Frontend, Backend, Databases, and Deployment\nLearn by building real projects (not just theory)\nFully explained, step by step – perfect for beginners and career changers\nGet job-ready skills in one single course\nWho This Course Is For\nBeginners who want to become professional full-stack developers\nStudents who want a clear roadmap for web development in 2025\nCareer changers looking to get into tech with job-ready skills\nAnyone who wants to build and deploy full-stack apps from scratch\nBy the end of this bootcamp, you’ll be confident in building, deploying, and managing full-stack web applications – and ready to land your first developer role or start freelancing.\nEnroll now and let’s build amazing full-stack projects together!",
      "target_audience": [
        "Absolute Beginners who want to become professional full-stack developers",
        "Beginners with a Passion for Tech",
        "Aspiring Web Developers (Front-End or Back-End Focused)",
        "Students who want a clear roadmap for software development",
        "Career changers looking to get into tech with job-ready skills",
        "Anyone who wants to build and deploy full-stack apps from scratch",
        "Freelancers Seeking New Skills"
      ]
    },
    {
      "title": "Three.js Essentials: From Zero to 3D Hero",
      "url": "https://www.udemy.com/course/threejs-essentials/",
      "bio": "Master Interactive 3D Graphics with Three.js",
      "objectives": [
        "Understand the fundamentals of Three js: Learn the core concepts and principles behind Three js, including scenes, cameras, renderers, and basic geometries.",
        "Create interactive 3D scenes: Build engaging 3D environments by incorporating objects, textures, lighting, and animations using Three js.",
        "Develop skills in 3D model integration: Import and manipulate 3D models within Three js, and understand the process of optimizing models for web performance.",
        "Master basic interactivity and user controls: Implement user interactions such as object picking, mouse events, and camera controls to create intuitive 3D exper"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites required!",
        "This course is designed for beginners with no prior experience in Three js or 3D web design.",
        "Access to a modern web browser (Chrome, Firefox, Safari, etc.) and a reliable internet connection are recommended for practicing and implementing course exercises.",
        "Basic familiarity with HTML, CSS, and JavaScript is beneficial but not mandatory."
      ],
      "description": "Are you ready to transform your web development skills and dive into the world of 3D creation? Three.js Essentials: From Zero to 3D Hero is designed to help you master the essential concepts and techniques needed to create stunning 3D graphics and interactive experiences for the web. Whether you're a novice or an experienced developer, this course will equip you with the knowledge and confidence to stand out in the field of web design.\nThrough a series of engaging lessons and hands-on projects, you'll learn the key concepts and best practices in 3D web development, covering areas such as 3D object creation, animation, visual effects, and interactivity. You will also get the chance to apply your skills in real-world scenarios and creative projects.\nOur expert instructors will guide you through every step of the process, providing you with the support and insights you need to succeed. By the end of this course, you will be well-prepared to create immersive 3D web experiences using Three.js with confidence and creativity.\nWhat the course will cover:\nThree.js Basics: Understand the core elements of Three.js, including scenes, cameras, and renderers.\nInteractive 3D Objects: Learn to create and animate various 3D objects and scenes.\nVisual Effects & Physics: Apply colors, textures, lighting, and simulate physics behaviors.\nCamera Control: Master camera movements and perspectives.\nFractals & Complex Geometries: Explore fractal patterns and advanced geometries.\nAdvanced Interactivity: Implement user controls and create interactive 3D environments.\nAt the end of the course, you will receive a certificate!\nCourse requirements:\nBasic familiarity with HTML, CSS, and JavaScript is beneficial but not mandatory.\nNo specific programming language proficiency is required.\nA modern web browser and a reliable internet connection.\nAbout the instructor:\nI am an experienced developer with a passion for 3D graphics and interactive web design. With 6 years experience in the tech field, I am dedicated to helping you unlock your creative potential and master Three.js.\nWhether you're looking to enhance your web development skills or embark on a new creative journey, the Three.js course is an essential resource for anyone looking to excel in 3D web design. Don't let a lack of knowledge hold you back from creating breathtaking 3D web experiences.\nEnroll now and take the first step toward transforming your web design skills!\nClick the BUY NOW button and start your 3D coding journey!",
      "target_audience": [
        "Students and Enthusiasts: Those eager to explore the world of 3D web design, regardless of their previous programming experience.",
        "Web Developers: Beginners or intermediate developers looking to enhance their skills in 3D web design without deep diving into complex programming languages.",
        "Graphic Designers: Individuals with a background in graphic design wanting to explore 3D visualization and animation for web projects."
      ]
    },
    {
      "title": "Learn to Code in HTML5, CSS3, and JavaScript",
      "url": "https://www.udemy.com/course/learn-to-code-in-html5-css3-and-javascript/",
      "bio": "The absolute beginner's tutorial on beginning web development using languages such as HTML, CSS, and JavaScript!",
      "objectives": [
        "By the end of the course, you will be able to create websites.",
        "You will learn how to use JavaScript, HTML, and CSS."
      ],
      "course_content": {
        "The Basics": [
          "Introduction",
          "Helpful Tools",
          "HTML Syntax",
          "CSS Syntax",
          "JavaScript Syntax",
          "Put It All Together"
        ],
        "Intermediate Topics": [
          "JavaScript Objects",
          "JavaScript Flow Control",
          "CSS Box Model",
          "More HTML",
          "New in HTML5",
          "JavaScript Math",
          "JavaScript Date",
          "JavaScript Array",
          "JavaScript RegExp",
          "Putting It All Together"
        ],
        "The Compilation": [
          "Building a Full Website, Part 1",
          "Building a Full Website, Part 2",
          "Building a Full Website, Part 3"
        ]
      },
      "requirements": [
        "A computer with a text and image editor."
      ],
      "description": "(If you think this course is what you would like to purchase, be sure to get it as quickly as possible as prices will rise on December 1.)\nThis course is for those who are new to or have just started using HTML, CSS, and JavaScript. You will be learning how to use these languages to develop a basic website. With enough work and effort, this course will take around 2-3 weeks to complete. The course will start out with the basics, eventually incorporating all the techniques you have learned into a full-blown website. If you are just wanting to learn a bit of programming, or you eventually want to take a profession in web development, this is the perfect place to start.\nThis course is split into three sections, a introduction and basics of HTML, CSS, and JavaScript section, a section for more intermediate topics, and finally, a cumulative section where we'll build a website from scratch.",
      "target_audience": [
        "Anybody can take this course, however, this course is intended for those who have little to no experience with these languages."
      ]
    },
    {
      "title": "Master Neural Networks: Build with JavaScript and React",
      "url": "https://www.udemy.com/course/master-neural-networks-build-with-javascript-and-react/",
      "bio": "Build and integrate Neural Networks in Web Apps with JavaScript, React, and Node.js. From Scratch with Math Included.",
      "objectives": [
        "Understand and implement perceptrons (single neuron) for binary classification",
        "Learn and apply neural network fundamentals in code",
        "Integrate neural networks into web applications using JavaScript and React",
        "Work with large-scale data, understanding and parsing it effectively"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to approach the lectures",
          "Few words before start"
        ],
        "Neuron vs Perceptron": [
          "Initial Setup",
          "Neuron",
          "Biological neuron vs perceptron"
        ],
        "Classify objects": [
          "Define data",
          "Define data in code",
          "Weighted sum",
          "Change the weight",
          "Update weights",
          "Compute sums in code",
          "Update weights for all inputs",
          "Update weights in code",
          "Measure accuracy",
          "Testing data",
          "Init weights randomly",
          "Measure acuracy each epoch"
        ],
        "Mnist Dataset": [
          "Mnist data",
          "Read bytes",
          "Read info bytes",
          "Show label file",
          "Parse labels out",
          "Parse out images",
          "Save testing data"
        ],
        "Frontend in React": [
          "Init react app",
          "Init home and navigation",
          "Basic router",
          "Finish routing",
          "Load mnist data",
          "Batch the data",
          "Display all labels",
          "Display images"
        ],
        "Real data training": [
          "Save training data",
          "Process labels and inputs",
          "Train the perceptron",
          "Testing accuracy",
          "Show misclassified data",
          "Export model"
        ],
        "Prediction on Frontend": [
          "Fetch model on frontend",
          "Make predictions",
          "Display prediction visualy",
          "New image prediction page",
          "Canvas preparation",
          "Draw on cavnas",
          "Get inputs from canvas",
          "Make prediction from canvas",
          "Clear canvas and display prediction"
        ],
        "Improving the model": [
          "Adjust pixel values",
          "Experimenting with training",
          "Get misclassified data ready",
          "Send data to server",
          "Store misclassified data",
          "Simple perceptron wrap up"
        ],
        "Neural Networks - Forward Propagation": [
          "Mlp introduction",
          "Mlp Finish Network",
          "Forward pass hidden activations",
          "Mlp data in code",
          "Compute hidden sum in code",
          "Compute hidden activations in code",
          "Hidden to output sums math + code",
          "Softmax explanation + math",
          "Additional info",
          "More explanation - recap",
          "Compute output probabilities"
        ],
        "Neural Networks - Backward Propagation": [
          "Code cleanup",
          "Calculate output deltas",
          "Delta hidden neuron 1",
          "Delta Hidden neuron 2",
          "Hidden deltas in code",
          "Gradient of loss math",
          "Update hidden output weights math",
          "Update hidden output weights in code",
          "Weights input hidden math",
          "Weights input hidden code"
        ]
      },
      "requirements": [
        "Basic coding experience in any programming language."
      ],
      "description": "Welcome to Master Neural Networks: Build with JavaScript and React. This comprehensive course is designed for anyone looking to understand and build neural networks from the ground up using JavaScript and React.\n\n\nWhat You'll Learn:\nIntroduction to Neural Networks\nUnderstand the basics of perceptrons and their similarities to biological neurons.\nLearn how perceptrons work at a fundamental level.\nBuilding a Simple Perceptron\nCode a perceptron to classify simple objects (e.g., pencils vs. erasers) using hardcoded data.\nImplement a basic perceptron from scratch and train it with sample inputs and outputs.\nDraw graphs and explain the steps needed, including defining weighted sums and activation functions.\nPerceptron for Number Recognition\nAdvance to coding a perceptron for number recognition using the MNIST dataset to identify if a number is 0 or not.\nTrain the perceptron using the MNIST dataset, optimizing weights and biases.\nLearn techniques to calculate accuracy and handle misclassified data.\nSave and export the trained model for use in web applications.\nParsing and Preprocessing MNIST Data\nLearn to parse and preprocess MNIST data yourself.\nUnderstand the file formats and the steps needed to convert image data into a usable format for training.\nBuilding a Multi-Layer Perceptron (MLP)\nDevelop a more complex MLP to recognize digits from 0 to 9.\nImplement training algorithms and understand backpropagation.\nExplore various activation functions like ReLU and Softmax.\nPractical Implementation with JavaScript and React\nIntegrate neural networks into web applications using JavaScript, React, and Node.js.\nBuild and deploy full-stack applications featuring neural network capabilities.\nCreate a React application to test and visualize your models, including drawing on a canvas and making predictions.\nIntegrate TensorFlow library\nLearn to setup Neural networks with TensorFlow\nUse Tensorflow to recognize numbers from 0-9\nCourse Features:\nStep-by-step coding tutorials with detailed explanations.\nHands-on projects to solidify your understanding.\nGraphical visualization of neural network decision boundaries.\nTechniques to save and export trained models for real-world applications.\nComprehensive coverage from basic perceptrons to multi-layer perceptrons.",
      "target_audience": [
        "Beginners who want a comprehensive, step-by-step guide to neural networks",
        "Anyone interested in learning neural networks using JavaScript and React",
        "Web developers looking to enhance their skills with AI"
      ]
    },
    {
      "title": "Build an Interactive Telegram Bot using Django",
      "url": "https://www.udemy.com/course/build-an-interactive-telegram-bot-using-django/",
      "bio": "In this course, we are going to build a Telegram bot which will interact with the Backend built with Django.",
      "objectives": [
        "Create Telegram Bot",
        "Create Django Project",
        "Customise Django Project",
        "Writing API for Third PartyInteraction",
        "To Deploy Code on EC2",
        "Deploy using Fabric file"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Demo of what we are going to build",
          "Resources"
        ],
        "Setting up Project Environment": [
          "Installing Virtual Env",
          "Installing and Create Empty Django project",
          "Create Django App",
          "Create Django App"
        ],
        "Interacting with Third Party Services": [
          "Intro about ThirdParty: APiSetu",
          "Create config and Objects file",
          "Creating Request file for making API calls",
          "Convert response to Objects",
          "Create Models for State and District"
        ],
        "Interacting with Telegram": [
          "What we have learn till now",
          "About telegram and signup",
          "Create bot using botfather and use telegram example file",
          "Add options in Telegram Bot",
          "Some Refractoring",
          "Added more option to Telegram Bot",
          "Add bot to command handler"
        ],
        "Advance functionality for telegram bot": [
          "Intro for Advance Option",
          "Add TelegramUser model",
          "Add TelegramUser Functionality",
          "Add Last searches and Back Button",
          "Add Cron for Notification to User"
        ],
        "Lets Deploy the project to AWS": [
          "Introduction",
          "Deploy to AWS",
          "Install service using supervisor"
        ],
        "Miscellaneous Section. Useful tools and tips for Production purpose": [
          "Introduction",
          "Add python-decouple reading secrets from .env",
          "Add code to git repo",
          "Auto Deployment using Fabric",
          "Add Sentry for Exception handling"
        ]
      },
      "requirements": [
        "Basic Python",
        "Basic Django Framework(Good to Have)",
        "Using of IDE( Good to Have)"
      ],
      "description": "In this course, we are going to build a Telegram bot which will interact with the Backend built with Django.\n\n\nIDE we are going to use is IntelliJ IDEA.\n\n\nWe will write the services for Third Party.\nIntegrate these services to Telegram Bot.\nWill add a lot of options in Telegram in order to make it useful for the end user.\nWe will Push the code to Github\nFinally we will deploy the code on EC2.\nSupervisor in to demonising the process\nIntegrate Sentry for Runtime exception in Projects\nUse Fabfile for auto deployment on Servers.\n\n\nBrief About what we are going to use.\n\n\nTelegram Bot: Bots are simply Telegram accounts operated by software – not people – and they'll often have AI features. They can do anything – teach, play, search, broadcast, remind, connect, integrate with other services, or even pass commands to the Internet of Things.\nThe problem we are going to solve\n\n\nDjango :\nDjango is a high-level Python Web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of Web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.\n\n\nEc2:\nAmazon Elastic Compute Cloud (Amazon EC2) is a web service that provides secure, resizable compute capacity in the cloud. It is designed to make web-scale cloud computing easier for developers. Amazon EC2’s simple web service interface allows you to obtain and configure capacity with minimal friction. It provides you with complete control of your computing resources and lets you run on Amazon’s proven computing environment.",
      "target_audience": [
        "College Students",
        "Working Professionals",
        "Hobbist"
      ]
    },
    {
      "title": "Master Materialize and code 3 projects with 9 pages",
      "url": "https://www.udemy.com/course/materialize-responsive-web-design-and-development/",
      "bio": "Master the latest version of Materialize and create real projects and themes while learning HTML, web design and coding",
      "objectives": [
        "Learn how to create and use all elements, collections, views and modules of the Materialize framework",
        "Learn how to create three different responsive websites using the Materialize framework",
        "Practice with 19 coding exercises and a special built Materialize Learning Kit (100+ source files)",
        "Master the latest version: Materialize 1.0.0",
        "How to creating fluid and responsive layouts",
        "How to use breakpoints and the grid system",
        "How to structure all kinds of content",
        "How to use all of the 9 types of CSS classes",
        "How to build all of the 12 components",
        "How to build all of the 15 JavaScript modules",
        "How to build all of the 9 components for forms",
        "Project 1: Create a Resume and CV Page",
        "Project 2: Create a Small Business Website",
        "Project 3: Create a Knowledge Base"
      ],
      "course_content": {
        "Introduction": [
          "About the Course",
          "Understanding Materialize",
          "Materialize Learning Kit",
          "Downloading and Installing Materialize"
        ],
        "CSS": [
          "About the CSS Section",
          "Color",
          "Color",
          "Grid",
          "Helpers",
          "Helpers",
          "Media",
          "Media",
          "Pulse",
          "Pulse",
          "Shadow",
          "Shadow",
          "Table",
          "Table",
          "Transitions",
          "Typography",
          "Typography"
        ],
        "Components": [
          "About the Components Section",
          "Badges",
          "Badges",
          "Buttons",
          "Buttons",
          "Breadcrumbs",
          "Breadcrumbs",
          "Cards",
          "Collections",
          "Collections",
          "Floating Action Button",
          "Footer",
          "Icons",
          "Icons",
          "Navbar",
          "Pagination",
          "Pagination",
          "Preloader",
          "Preloader",
          "Table Of Contents",
          "Table Of Contents"
        ],
        "JavaScript": [
          "About the JavaScript Section",
          "Auto Init",
          "Carousel",
          "Collapsible",
          "Collapsible",
          "Dropdown",
          "Feature Discovery",
          "Media",
          "Modals",
          "Parallax",
          "Pushpin",
          "Scrollspy",
          "Sidenav",
          "Tabs",
          "Toasts",
          "Tooltips",
          "Tooltips",
          "Waves",
          "Waves"
        ],
        "Forms": [
          "About the Forms Section",
          "Autocomplete",
          "Checkboxes",
          "Chips",
          "Pickers",
          "Radio Buttons",
          "Range",
          "Select",
          "Switches",
          "Switches",
          "Text Inputs"
        ],
        "Project 1: Resume and CV Page": [
          "About the Project",
          "Index – Basic Setup",
          "Index – About",
          "Index – Work Experience",
          "Index – Education",
          "Index – Testimonials",
          "Index – Contact Info",
          "Index – Portfolio",
          "Index – Skills"
        ],
        "Project 2: Small Business Website": [
          "About the Project",
          "Index – Basic Setup",
          "Index – Navigation",
          "Index – Hero",
          "Index – Hiring",
          "Index – What and Who",
          "Index – News",
          "Index – Footer",
          "Services – Our Services",
          "About – Story",
          "About – Office",
          "About – Clients",
          "Team – Team",
          "Contact – Address",
          "Contact – Hours",
          "Contact – Message",
          "Contact – Map"
        ],
        "Project 3: Knowledge Base": [
          "About the Project",
          "Index – Basic Setup",
          "Index – Top Bar",
          "Index – Search",
          "Index – Articles",
          "Index – Footer",
          "Category – Breadcrumbs",
          "Category – Page Navigation",
          "Category – Article List",
          "Category – Support",
          "Article – Breadcrumbs",
          "Article – Page Navigation",
          "Article – Content",
          "Article – Feedback",
          "Article – Related Articles"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "A code editor and a browser"
      ],
      "description": "ABOUT\nMaterialize - one of the world's most popular front-end frameworks!\nThis course covers all the different parts of the latest version of one of the world's most popular front-end framework, Materialize 1.0.0. Materialize has been used by thousands of people around the world and have been carefully developed to cover a wide range of typical user interfaces.\nWeb pages built with Materialize works across all kinds of devices, browsers and screen sizes and will have a clean and modern design.\nThis course is for the beginner who want to learn Materialize from the bottom up. It goes through all the different parts, but each lecture can be watched independently.\nIn addition to just learning about the different parts of Materialize you will find a detailed walk-through of how to build three different responsive and modern complete projects using only Materialize.\nPROJECTS\nLearn to build the following projects using Materialize:\nProject 1: Resume and CV Page\nProject 2: Small Business Website\nProject 3: Knowledge Base\nLEARNING STYLE\nMore than just video lectures\nIn addition to the video lectures this course contains the following kinds of learning materials:\n19 coding exercises:\nA total of 99 automatic tests against your code. This is one of the best ways to learn how to code - no downloads or installations required.\nMaterialize Learning Kit:\nDownloadable ZIP file that works offline\nA custom built learning kit with source code for all parts of Materialize. Features a reference section with many examples and a practice section, which you can use while learning about Materialize. More than 100 source files included in this learning kit.\nUPDATES\nUpcoming future updates for this course will include the following:\nNew projects will be added: online shop, social network, portfolio, CMS admin, dashboard and more...\nNew components, utilities and other features in future versions of Materialize will be added\nAdvanced section on how to customize Materialize with Sass\nQuizzes and assignments",
      "target_audience": [
        "Anyone who wants to learn how to make responsive and modern websites with Materialize",
        "Anyone who wants to learn how to make quick prototypes"
      ]
    },
    {
      "title": "Create an online casino website by mysql,php and javascript",
      "url": "https://www.udemy.com/course/create-an-online-casino-website-by-mysqlphp-and-javascript/",
      "bio": "how to create an online casino using html, css , php , javscript",
      "objectives": [
        "website design",
        "html",
        "css",
        "javascript",
        "php",
        "networking",
        "how website works",
        "how to create a website",
        "how to design a website",
        "creating roulette",
        "creating roulette using javascript",
        "creating games using php and javascript",
        "databases",
        "mysql databases",
        "how to connect to a database",
        "apache",
        "what is apache"
      ],
      "course_content": {
        "introduction - what you will learn in this course": [
          "introduction - what you will learn in this course"
        ],
        "networking": [
          "definition of protocol",
          "definition of ports",
          "computer structure(transistors)",
          "private ip address",
          "how addressing works in computer world",
          "nat(network address translation)",
          "tcp-ip network stack",
          "format of a packet",
          "http request",
          "http response",
          "web hosting",
          "apache",
          "using apache to make linux as a webserver"
        ],
        "Mysql": [
          "what are databases",
          "xampp and lamp",
          "creating database and tables in mysql cli",
          "select-insert-delete-update in mysql"
        ],
        "create our online casino website (html and css)": [
          "what is html",
          "format of an html page",
          "html basic tags",
          "html important tags",
          "different types of applying css",
          "format of our casino website",
          "creating main page of our casino",
          "margin and padding in css",
          "id and margin in html and css",
          "links in html and css",
          "colors in css",
          "colors of links",
          "completing main page-part1",
          "completing main page-part2",
          "completing main page-part3",
          "creating sign-up page- html",
          "creating sign-up page - css - part1",
          "creating sign-up page - css - part2",
          "creating sign-up page- css- borders and shadowing",
          "creating sign-up page- css- transition and transform",
          "login page- part1",
          "login page - part2",
          "what is roulette",
          "roulette-part1",
          "roulette-part2",
          "roulette-part3",
          "roulette-part4",
          "roulette-part5",
          "roulette-part6",
          "roulette-part7",
          "roulette-part8",
          "roulette-part9",
          "roulette-part10"
        ],
        "creating sign-up page using mysql and php": [
          "php in html and vice versa",
          "using mysql inside php",
          "connecting to database using mysql inside php",
          "retreiving results from database",
          "retreiving data using fetch_assoc()",
          "get vs post method",
          "inserting unique emails into database",
          "form validation"
        ],
        "javascript crash course": [
          "DOM(document object model)",
          "including javascript in our webpage",
          "variables and if-else statements",
          "accessing html elements-getelementbyid ()",
          "javascript injection",
          "accessing html elements-getelementsbyclassname()",
          "accessing html elements - getelementsbytagname()",
          "functions in javascript",
          "EventHandlers-onclick",
          "addEventListener()",
          "Math object",
          "creating elements using javascript",
          "arrays in javascript",
          "for and while loops"
        ],
        "creating roulette game using javascript": [
          "creating some more sections using html and css",
          "some animation using javascript",
          "creating bet and money textboxes using html and css",
          "writing the algorithm of our roulette game",
          "defining variables for roulette game",
          "creating bet function for roulette-part1",
          "creating bet function for roulette-part2",
          "handling the spin button",
          "handling money in roulette game",
          "starting the roulette game by creating a random number",
          "winning and loosing in the roulette game",
          "completing the roulette game"
        ],
        "added sections (answers to students questions)": [
          "installing virtual box and kali linux",
          "installing apache2 and mysql and troubleshooting"
        ]
      },
      "requirements": [
        "everything would be explained from beginning"
      ],
      "description": "in this course we will teach you , how to create an online casino website using several programming languages including, php , mysql , javascript . so some of the topics are as following :\n1- networking:\nincluding overall introduction to networking , definition of protocol and port numbers , computer structure , private and public ip addresses , tcp/ip networks, http and https protocol and some other concepts about networking .\n2-Mysql :\nwe will explain the definition of databases and benefits of mysql , . what xampp and lamp are and how to install lamp on linux which includes apache, linux, mysql and php . after that we give an introduction about how to work with mysql in linux using cli or command line interface.\n3- html and css :\nin this module we will teach you almost everything you need to create the graphics of a website including almost all the tags in html , and how to use css to modify the appearance including margins, borders, padding , animation in css and many more topics that you could check in the module four of the course html and css .\n4- creating a sign-up form using php and mysql\nin this module we will give you an introduction about what php is and how to use php and mysql with each other . and then we use php and mysql to create a sign-up and register page . the graphics of this page has already been created using html and css in the earlier module , so in here we program it , we connect to database using mysql and we do various kind of validation including email validation using php .\n5- javascript crash course\nthis module could be a complete separate course . we give you a complete introduction about javascript . what is javascript, what is DOM and how to access html and css using javascript are some questions which would be answered in this module.  also eventhandlers , object and addeventlisteners which could listen for user events and do something based on the user code are some benfits of them .\n6- creating roulette game using javascript\nin this module finally we use everything we learned in previous module to implement our module and design a game using javascript.",
      "target_audience": [
        "website developers",
        "php programmers",
        "javascript developers",
        "graphic designers"
      ]
    },
    {
      "title": "Servicenow Application Developer Exam(New)-Practice Test",
      "url": "https://www.udemy.com/course/servicenow-application-developer-examnew-practice-test-c/",
      "bio": "Servicenow Application Developer Mock Test. Code :FUNFLIP",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome! I'm here to help you prepare and PASS the Servicenow Certified Application Developer Exam (CAD).\n\n\nThis course contains 3 timed practice tests for the Servicenow Certified Application Developer certification.\nThis is Mock Exam .\nThis Practice Tests Course Is For Anyone Who Is Preparing For The Servicenow Certified Application Developer Exam (CAD) and Want To Evaluate Their Knowledge, Identify Their Weakness and Clear The Exam From The First Attempt.\nAll the questions are absolutely aligned with real exam.\nQuestions from all the topics as per the Servicenow CAD Exam Blueprint are covered in this practice test.\n\n\nI have prepared these practice test after lot of research and I hope you like this.\n\n\n(Updated as per Paris Version)",
      "target_audience": [
        "Students who have scheduled or are planning to appear for Servicenow CAD exam should try this test.",
        "ServiceNow Developers",
        "ServiceNow Administrators",
        "ServiceNow Consultants"
      ]
    },
    {
      "title": "PSD To HTML Tutorial Using Photoshop And Dreamweaver",
      "url": "https://www.udemy.com/course/psd-to-html-tutorial/",
      "bio": "Learn how to quickly turn your Photoshop designs into valid HTML & CSS. An essential course for any web developer",
      "objectives": [
        "Learn How To Create HTML From Photoshop PSD Files"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 What You Will Learn",
          "0102 What Is PSD To Web Conversion?",
          "0103 Working With Lesson Files",
          "0104 Developing A Site Map",
          "0105 How To Access Your Working Files"
        ],
        "Creating A PSD Mockup": [
          "0201 Deciding On A Site layout",
          "0202 Selecting Color And Fonts",
          "0203 Using Photoshop To Create A Color Palette :",
          "0204 Setting Up Document Size And Image Resolution",
          "0205 Creating The PSD Mockup Navigation",
          "0206 Completing The PSD Mockup",
          "0207 Working With Placeholder Text",
          "0208 Transparency And Graphics",
          "0209 Slicing The Mockup",
          "0210 Slice Options",
          "0211 Saving For Web - Part 1",
          "0212 Saving For Web - Part 2"
        ],
        "Moving To Dreamweaver": [
          "0301 Organizing Files",
          "0302 Setting Up And Managing A New Site",
          "0303 Testing The Site Connection",
          "0304 Working With The Files Tab",
          "0305 Working With Code, Design And Split Views",
          "0306 Working With Images And Layout Objects"
        ],
        "Converting The PSD Mockup": [
          "0401 Opening Files In Dreamweaver",
          "0402 Adding Title And Meta Name Tags",
          "0403 Replacing Placeholder Slices With Div Tags",
          "0404 Replacing Placeholder Text With HTML Using Div Tags",
          "0405 Using AP Div Tags - Part 1",
          "0406 Using AP Div Tags - Part 2",
          "0407 Working With Stylesheets",
          "0408 Creating New Style Rules",
          "0409 Adding Hyperlinks - Relative And Absolute"
        ],
        "Testing Your Site": [
          "0501 Working With Live View In Dreamweaver",
          "0502 Checking Remote Files And Refreshing",
          "0503 Viewing The Site In A Browser"
        ],
        "Conclusion": [
          "0601 Summary"
        ]
      },
      "requirements": [
        "Dreamweaver and Photoshop"
      ],
      "description": "This PSD to HTML Using Photoshop and Dreamweaver training course from Infinite Skills teaches you the core principles of creating workable websites using these two Adobe programs. This course is designed for users that already have a working knowledge of Photoshop and Dreamweaver.\n\nYou will start out by creating a PSD mockup using Photoshop. David will teach you about the design basics in Photoshop, layer properties, slicing, and web optimization. From there, you will dive into working in Dreamweaver to transform your Photoshop document into a working website. In Dreamweaver you will explore the process of setting up and managing a website, working with different view modes, and working with images and layout objects. This video tutorial will also teach you some fundamental HTML and CSS rules. Finally, you will work with the Live View in Dreamweaver to test your website.\n\nBy the completion of this video based training course, you will have developed the necessary skills needed to design, create, and publish a working website. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Web and Graphic Designers"
      ]
    },
    {
      "title": "Spring Framework | Spring Boot For Beginners with MVC, Rest",
      "url": "https://www.udemy.com/course/spring-framework-spring-boot-for-beginners-with-mvc-rest/",
      "bio": "Learn Spring Framework and Spring Boot For Beginners with MVC, Thymeleaf, Rest API & PostgreSQL with hands-on projects",
      "objectives": [
        "The Spring Framework provides a comprehensive programming & configuration model for modern Java-based enterprise applications on any kind of deployment platform",
        "Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can \"just run\".",
        "Installing java jdk and most useful IDEs like eclipse and intellij.",
        "Spring Basics",
        "Lombok",
        "Postman",
        "Spring Rest API",
        "Spring MVC",
        "Thymeleaf",
        "JPA",
        "Hibernate",
        "IOC Container,",
        "Dependency Injection,",
        "Aspect Oriented Programming",
        "Spring Core Container",
        "spring boot",
        "Spring Web",
        "Spring Security",
        "Spring Data Access/Integration",
        "Spring Cloud",
        "Spring Testing",
        "Scheduling",
        "And sending email with spring."
      ],
      "course_content": {
        "Introduction to Spring Framework | Spring Boot For Beginners with MVC, Rest": [
          "Introduction Spring Framework | Spring Boot For Beginners Course",
          "Project Files Link",
          "Install Java 17 On Windows",
          "Install Eclipse on windows",
          "Install Intellij on windows"
        ],
        "Introduction to Spring Framework": [
          "What is Spring Framework",
          "IoC container",
          "Dependency Injection",
          "Aspect Oriented Programming",
          "Spring Core Container",
          "Spring Data Access/Integration module",
          "Spring Web module",
          "Spring Security module",
          "Spring Boot",
          "Spring Cloud Module",
          "Spring Testing"
        ],
        "Introduction To Coding with Spring Boot": [
          "First Spring MVC Project",
          "Application Properties File",
          "YML File",
          "Postman",
          "Rest API",
          "Rest API 2",
          "Rest API 3",
          "JPA With MySQL",
          "Thymeleaf",
          "Introduction to Lombok",
          "Lombok Examples",
          "Creating Personal Project",
          "Personal List Page",
          "Update Person",
          "Delete Person and Pagination",
          "Email Operations",
          "Scheduling",
          "Logging",
          "File Operations"
        ],
        "Extra": [
          "Spring Framework | Spring Boot For Beginners with MVC, Rest"
        ]
      },
      "requirements": [
        "Basic knowledge of Java",
        "Familiarity With SQL or Programming Experience Will Be Good But Not Required",
        "A working computer",
        "Desire to learn Spring Framework, Spring Boot",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to my \" Spring Framework | Spring Boot For Beginners with MVC, Rest \" course.\nLearn Spring Framework and Spring Boot For Beginners with MVC, Thymeleaf, Rest API & PostgreSQL with hands-on projects\n\n\nThe Spring Framework is a comprehensive framework for Java development that provides infrastructure support, enterprise-level features, and promotes the use of best practices in software design and architecture.\nA key element of Spring is infrastructural support at the application level: Spring focuses on the \"plumbing\" of enterprise applications so that teams can focus on application-level business logic, without unnecessary ties to specific deployment environments.\nSpring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can \"just run\".\nSpring makes programming Java quicker, easier, and safer for everybody. Spring’s focus on speed, simplicity, and productivity has made it the world's most popular Java framework.\nIt was created by Rod Johnson and was first released in 2003. The primary goal of the Spring Framework is to simplify the development of complex enterprise applications by providing a cohesive, modular, and extensible framework.\n\n\nThe components and features of Spring Framework are;\nInversion of Control (IoC) Container\nAspect-Oriented Programming (AOP)\nData Access\nTransaction Management\nModel-View-Controller (MVC)\nSecurity\nDependency Injection\nEnterprise Integration\nand Testing\nWe will examine all of these topics in our course.\nWeb development in the context of Spring typically involves using various components and modules from the Spring ecosystem to build web applications.\n\n\nHere are some key aspects of web development with Spring:\nSpring Web Module\nThe Spring Web module provides features for building web applications, and it includes the Spring MVC framework. Spring MVC (Model-View-Controller) is a powerful and flexible framework for developing web applications. It allows you to build clean and maintainable code following the MVC design pattern\nSpring Boot\nSpring Boot is a project within the Spring ecosystem that simplifies the process of building production-ready applications. It includes a set of conventions and defaults that allow developers to quickly create stand-alone, production-grade Spring-based applications with minimal configuration\nRESTful Web Services\nSpring provides support for building RESTful web services through the Spring MVC framework. You can easily create RESTful controllers, handle HTTP methods, and produce/consume JSON or XML data\n\n\n\n\nSpring Security\nSecurity is a critical aspect of web development, and Spring Security provides comprehensive security services for Java EE-based enterprise software applications. It enables you to handle authentication, authorization, and protection against common security vulnerabilities.\nSpring Data\nWhen working with databases in a web application, Spring Data provides a simplified and consistent data access framework. It supports various data storage technologies, including relational databases, NoSQL databases, and more.\nThymeleaf\nAs mentioned earlier, Thymeleaf is a templating engine that integrates well with Spring for server-side rendering of web pages. It allows you to create dynamic and data-driven HTML templates.\nSpring WebFlux\nFor reactive programming, Spring WebFlux provides an alternative to the traditional Spring MVC framework. It allows you to build reactive, non-blocking web applications.\nWebSocket Support\nSpring Framework includes support for WebSocket communication, allowing you to build real-time, bidirectional communication between the client and the server.\nInternationalization and Localization\nSpring provides features for internationalization and localization, allowing you to build applications that support multiple languages and regions.\nWebSockets\nSpring supports WebSocket communication, allowing for real-time, bidirectional communication between clients and servers.\n\n\nWhen starting a web development project with Spring, you might use Spring Boot to quickly set up a project with sensible defaults. You can then leverage other Spring modules based on your specific requirements, such as Spring MVC for web applications, Spring Data for database interactions, Spring Security for handling security aspects, and more\n\n\nIn our course, you will learn;\nInstalling java jdk and most useful IDEs like eclipse and intellij\nSpring Basics\nLombok\nPostman,\nSpring Rest API\nSpring MVC\nThymeleaf\nJPA,\nHibernate\nIOC Container,\nDependency Injection,\nAspect Oriented Programming\nSpring Core Container\nspring boot\nSpring Web\nSpring Security\nSpring Data Access/Integration\nSpring Cloud\nSpring Testing\nScheduling\nAnd sending email with spring\n\n\nWhat is the Spring Framework?\nThe Spring Framework (Spring) is an open source software development framework that provides infrastructure support for building primarily Java-based applications.\n\n\nWhat is Spring Boot and why it is used?\nJava Spring Boot (Spring Boot) is a tool that makes developing web application and microservices with Spring Framework faster and easier through three core capabilities: Autoconfiguration. An opinionated approach to configuration. The ability to create standalone applications.\n\n\nIs Spring Boot a backend?\nIn the fast-paced world of web development, backend frameworks play a crucial role in building scalable, robust, and high-performance applications. Among the many options available, Spring Boot stands out as a top choice for backend development.\n\n\nWhy Spring?\nSpring makes programming Java quicker, easier, and safer for everybody. Spring’s focus on speed, simplicity, and productivity has made it the world's most popular Java framework.\nSpring is everywhere: Spring’s flexible libraries are trusted by developers all over the world. Spring delivers delightful experiences to millions of end-users every day—whether that’s streaming TV, online shopping, or countless other innovative solutions. Spring also has contributions from all the big names in tech, including Alibaba, Amazon, Google, Microsoft, and more.\nSpring is flexible: Spring’s flexible and comprehensive set of extensions and third-party libraries let developers build almost any application imaginable. At its core, Spring Framework’s Inversion of Control (IoC) and Dependency Injection (DI) features provide the foundation for a wide-ranging set of features and functionality. Whether you’re building secure, reactive, cloud-based microservices for the web, or complex streaming data flows for the enterprise, Spring has the tools to help.\nSpring is productive: Spring Boot transforms how you approach Java programming tasks, radically streamlining your experience. Spring Boot combines necessities such as an application context and an auto-configured, embedded web server to make microservice development a cinch. To go even faster, you can combine Spring Boot with Spring Cloud’s rich set of supporting libraries, servers, patterns, and templates, to safely deploy entire microservices-based architectures into the cloud, in record time.\nSpring is fast: With Spring, you’ll notice fast startup, fast shutdown, and optimized execution, by default. Increasingly, Spring projects also support the reactive (nonblocking) programming model for even greater efficiency. Developer productivity is Spring’s superpower. Spring Boot helps developers build applications with ease and with far less toil than other competing paradigms. Embedded web servers, auto-configuration, and “fat jars” help you get started quickly, and innovations like LiveReload in Spring DevTools mean developers can iterate faster than ever before.\nSpring is secure: Spring has a proven track record of dealing with security issues quickly and responsibly. The Spring committers work with security professionals to patch and test any reported vulnerabilities. Third-party dependencies are also monitored closely, and regular updates are issued to help keep your data and applications as safe as possible.\nSpring is supportive: The Spring community is enormous, global, diverse, and spans folks of all ages and capabilities, from complete beginners to seasoned pros. No matter where you are on your journey, you can find the support and resources you need to get you to the next level.\n\n\n\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\n\n\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\n\n\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\n\n\nSee you in the \" Spring Framework | Spring Boot For Beginners with MVC, Rest \" course.\nLearn Spring Framework and Spring Boot For Beginners with MVC, Thymeleaf, Rest API & PostgreSQL with hands-on projects",
      "target_audience": [
        "Users That Want to Learn Spring Framework and Spring Boot.",
        "Users That Want to Learn Spring Rest API and MVC.",
        "Anyone who wants to make database operations easier and faster with spring.",
        "Developers who wish to use the Spring Frameworks for enterprise application development",
        "Java developers: beginners to advanced who want to master Spring framework modules with Spring Boot"
      ]
    },
    {
      "title": "Coding Stripe Subscriptions with NodeJS",
      "url": "https://www.udemy.com/course/coding-stripe-subscriptions-with-nodejs/",
      "bio": "How to charge people for things month after month.",
      "objectives": [
        "A fully functional NodeJS site running on their local system that will charge a test account for a subscription.",
        "Understand the Stripe Subscription technical process",
        "Understand how to debug the Stripe Subscription Process",
        "Understand how to set up and run all of the required code locally"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting up your local environment": [
          "Setting up your local environment"
        ],
        "Setting up your Stripe Subscription Product": [
          "Setting up your Stripe Subscription Product"
        ],
        "The code!": [
          "The NodeJS Code"
        ],
        "Debugging & adding more features.": [
          "Debugging & other good to know things."
        ]
      },
      "requirements": [
        "a Junior developer level understanding of NodeJS."
      ],
      "description": "In this course we'll walk you through all the technical details of handling Stripe Subscriptions via your NodeJS application.  We'll start by walking you through everything you need to do to set up your local environment for building, testing, and debugging Stripe Subscriptions. This will include cloning our course repo from Github, downloading and installing a local instance of MongoDB, and downloading and installing the Stripe Command Line Interface (CLI).\nThen we'll walk you through each step you need to take to set up your subscription products within the Stripe system (including the difference between test mode and production mode).\nNext we'll go in-detail through the NodeJS application code and where, when, and how to use the Stripe package within it to programmatically trigger Stripe Subscriptions and Subscription updates. Throughout this section we'll also discuss the structure of our NodeJS project and provide tips on where and how you might want to evolve it over time as your subscription needs evolve.\nFinally we'll walk you through some debugging tips & tricks and show you how to do some more advanced things like setting up trial periods and offering more than one price for a given subscription.\n\nBy the end of this course you'll have everything you need (knowledge and code) to successfully integrate Stripe Subscriptions into your NodeJS projects.",
      "target_audience": [
        "Junior developers (and beyond) that have basic NodeJS knowledge and are looking to integrate Stripe Subscriptions into their systems & services"
      ]
    },
    {
      "title": "React TypeScript Course – Start Up Ready Application",
      "url": "https://www.udemy.com/course/react-typescript-course-start-up-ready-application/",
      "bio": "From Middle to Leader. Start your React project with Internalization, permissions, online chart today",
      "objectives": [
        "The course provides you with an enterprise ready application using React and TypeScript",
        "Authorization and authentication flow (Roles and permissions)",
        "React + Redux + Hooks for REST API",
        "The best practices and conventions will be available to you right after the purchase",
        "Colors customization",
        "Configure Jest, Enzyme, Webpack (dev and prod)"
      ],
      "course_content": {},
      "requirements": [
        "At least one study/production project completed using React. Being familiar with TypeScript."
      ],
      "description": "Pre-requirements:\nAn experienced React Developer familiar with TypeScript, or an Angular developer with basic React knowledge or a developer who can fluently use google to understand technologies.\nNode.js >=10, PostgreSQL 11, Python 2.7, node-gyp and Desktop development with C++ (all links and instructions are provided within the course), Git.\n\n\nThe course contains production and mobile ready React application for a large project, dirty backend on Node.js and PostgreSQL database for store users and sessions.\n\n\nI'm going to show you how to cook:\n✅  One of the best architectures for React.\n✅ Redux + React hooks (you should use Redux in 2019 for best performance).\n✅  Login, registration, logout and check authentication flow (administrators can drop session for the target user).\n✅  Security authentication using http only cookie.\n✅  Universal error handlers for request/response. Errors are shown for fields, forms, connection. Written once. Use anywhere.\n✅  Form validators (i18n support).\n✅  Dynamic breadcrumbs. Inserted once. Working anywhere you wish.\n✅  Internalization (multi-language support). Your customers will be thankful for concern. Conquer different markets now.\n✅  Permissions (static and dynamic) based on roles and access rights.\n✅  User search and User Edit Page (for admins, self-edit for moderators).\n✅  A11y ready. Try to use without a mouse. It's possible.\n✅  SEO module for different titles and descriptions in the app. Just add text for new page, not more action required. i18n support.\n✅ Universal UX guard. Your users will not lose important changes in forms. Site prevents internal and external navigation while there are some changes in fields.\n✅  Live color changer. Every user can use their own colors.\n✅  Right way to Cache data in Redux.\n✅  Live chart with real-time data using Plotly and WebSockets.\n✅  Cancel http request that you want.\n✅  Jest, Enzyme configuration.\n✅  Webpack for development and production (with chunks and optimizers).\n✅ TSconfig (and cheat: write your aliases in one place, they will be applied to Jest and Webpack).\n✅  Cache using Service Worker.\n✅  Jest and Enzyme with TypeScript test examples (basic; how to mock redux, test axios, mount and shallow, work in progress).\n\n\nAll components are written the way that they are inserted in one place and work everywhere.\nYou will see how to type functions, components, wrappers, axios, redux-forms and etc.\nBe smart, be passionate, be happy!\n\n\nSave up to 4 months of development with this course!\n\n\nI’m going to update this course.\nJust message me what you want to know.\n\n\nMy ideas:\n- User self-edit page.\n- Handle on backend and show on UI unhandled phrases in i18n (if you forget to translate something).\n- Edit page for languages.\n- What is Idempotency and why we should use it in our app.\n- Add support for oldest browsers.\n- Infinite table/scroll.\n- Dynamically add field in form.\n- Collapsed menu (children support)\n- Monorepo.\n\n\nAfter 100 000 a new course will be developed:\nHow to create safe backend using Node.js or Golang.\n\n\nNotice:\nYou get the finished application and concentrate on the processes. The lecturer explains what the thing is and how it works.\nMy main task is that you can start doing the right things as soon as possible.\n\n\nVideo: 1920x1080 (Full HD)\nLexicon: simple English.\nOur goal is to be understood by the whole world.\n\n\nThere is a killer feature of this course.\nYou can contribute to this React course!\nYour name will be in the title of the lecture, as well as at the beginning of the video with your github page.\nHow is it possible?\nSee the chapter: “How to contribute?”",
      "target_audience": [
        "Junior++ and Middle developers.",
        "Ideal for Angular developers"
      ]
    },
    {
      "title": "Build A TodoList Fast with Spring Boot, Java and Svelte",
      "url": "https://www.udemy.com/course/build-a-todolist-fast-with-spring-boot-java-and-svelte/",
      "bio": "Build a Full Stack Todolist Application Fast and Easy",
      "objectives": [
        "The student will learn the basics of RESTful API development with java Spring Boot",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the Hibernate ORM with JPA",
        "Learn to consume JSON with Svelte"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Install Java"
        ],
        "Create Java Spring Boot Todo API": [
          "Create Java Project",
          "Create Spring Boot Project",
          "Create Spring Boot Database Connection",
          "Create Spring Boot JPA Entity",
          "Spring Spring Boot Flyway Migrations",
          "Create Spring Boot Java Controller",
          "Build Get Requests in Spring Boot",
          "Build Update Requests in Spring Boot",
          "Build Delete Requests in Spring Boot"
        ],
        "Create Svelte TodoList UI": [
          "Generate a Svelte Project",
          "Add Carbon UI Library",
          "Create TodoList Service",
          "Clean Project Code",
          "Add Todo Events",
          "Add TodoList UI",
          "Fix Carbon UI Bugs",
          "Add Todo Form",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Understand basic Java",
        "Be familiar with Spring Boot",
        "Some familiarity with SQL"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use Java, Spring Boot, and Svelte. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a Svelte Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, Java, Java, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nSvelte\nHTTP Requests with Fetch\nCRUD Methods\nJava Programming Language\nSpring Boot\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with Svelte, Java, and Spring Boot.",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "The React Hooks Course",
      "url": "https://www.udemy.com/course/the-react-hooks-course/",
      "bio": "Master React Hooks in depth, elevate your web development skills, create web applications",
      "objectives": [
        "Master React Hooks",
        "Foundation for advance learning in development",
        "Problem solving mindset",
        "Practical skills for the web development insdustry"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Overview and Prerequisites",
          "What is React",
          "Facebook Page"
        ],
        "Set Up Project": [
          "React Developer Tool",
          "Set Up Project",
          "ESLint and Prettier",
          "Brief Introduction to JSX",
          "What Is A Component",
          "Explanation of React Project Files",
          "Render Process",
          "React Class Life Cycle"
        ],
        "JSX In Detail": [
          "Dynamic Rendering",
          "Destructuring",
          "Map",
          "Filter Part 1",
          "Filter Part 2",
          "Filter Exercise",
          "Filter Exercise Completed",
          "Conditional Rendering",
          "If Else Render",
          "Ternary Operator",
          "Logical And Operator",
          "Logical And (&&) Hands On Part 1",
          "Logical And (&&) Hands On Part 2 - Avoid 0",
          "Styling",
          "Styling Hands On"
        ],
        "Hooks": [
          "Attachments",
          "Hooks Introduction Part 1 - Overview",
          "Hooks Introduction Part 2 - Grainy Detail",
          "Hooks Introduction Part 3 - Rules",
          "useState - Part 1 - Introduction",
          "useState Part 2 - Local Variables",
          "useState Part 3 - Render Cycle",
          "useState Part 4 - Snapshots",
          "useState Part 5 - Batching",
          "useState Part 6 - Stale State",
          "useState Part 7 - Private Variables",
          "useState Part 8 - Lifting State",
          "useState Part 9 - Optimize",
          "useEffect - Overview",
          "useEffect Hands On",
          "useRef - Overview",
          "useRef - Preserve Variable",
          "useRef - Accessing Nodes",
          "useRef - Forward Ref",
          "useContext Overview",
          "useContext - Hands On Part 1",
          "useContext - Hands On Part 2",
          "useContext - Exercise",
          "useReducer - Overview",
          "useReducer - Hands On Part 1",
          "useReducer - Hands On Part 2",
          "useReducer - Exercise",
          "useCallback - Overview",
          "useCallback - Hands On Part 1 (Memoize Function)",
          "useCallback - Hands On Part 2 (Memo)",
          "useCallback - Hands On Part 3 (Effects)",
          "useMemo - Overview",
          "useMemo - Hands On (Optimization)",
          "useCustomHooks - Overview",
          "useCustomHook - Hands On"
        ],
        "Closing": [
          "Closing"
        ]
      },
      "requirements": [
        "An access to a computer",
        "Basic understanding of web development: HTML, CSS, and Javascript",
        "Basic understanding of React, such as what components, jsx, or running React application",
        "An Integrated Development Environment (IDE), such as Webstorm or Visual Studio",
        "Node, and package manager (pnpm, npm, or yarn)"
      ],
      "description": "Welcome to The React Hooks Course, your journey from React basics to becoming a React Hooks expert starts here. You will start from understanding the fundamentals of React to delving deep into the magic of React Hooks for seamless state management to fine-tuning your code for optimal performance, this course is your gateway to building dynamic modern web applications that excel in efficiency and user experience.\n\nCourse Highlights:\nFoundations of React and JSX: Lay a strong groundwork by diving into React and JSX, creating components and interfaces that set the stage for more advanced concepts.\nEfficient Learning through Exercises: Get ready to roll up your sleeves and put theory into practice. With hands-on exercises, you'll have the chance to apply what you learn, solidifying your understanding of each topic.\nTheory and Illustration: Each topic is not just about writing code; it's about understanding why things work. Clear explanations are provided and backed by illustrative slides to drive the concepts home. You'll gain a solid theoretical foundation that complements your hands-on experience.\nGrainy Details of React Render Cycle: Gain a deep understanding of the React render cycle, tracing the path from triggering an update to its final commit, and uncovering the nuances that drive component behavior.\nTransitioning to React Hooks: Embrace the revolutionary power of React Hooks, exploring their impact on state management within functional components compared to traditional class components.\nExploring Multiple React Hooks: Immerse yourself in a variety of Hooks in detail, demystifying how they revolutionize state management along with engaging theory.\nAdvanced State Management and Optimization:\nBatching Updates: Uncover how React optimizes updates by batching changes, ensuring smoother performance through minimized renders.\nRendering Cycle Analysis: Delve deeper into the rendering cycle, understanding how changes propagate through components to optimize your application's responsiveness.\nLifting State Up: Master the art of elevating state to higher components, promoting clean data flow and encapsulation while constructing resilient applications.\nHandling Stale State: Navigate the intricacies of stale state and develop strategies to maintain data integrity and reliability.\nOptimizing State Variables: Learn advanced techniques to optimize state variables, from effective data structuring to implementing memoization, ensuring your codebase remains highly efficient.\nAdvanced Code Optimization Techniques: Discover the power of memoization to optimize resource-intensive calculations and function calls, enhancing performance.",
      "target_audience": [
        "Beginner React developers, who want to polish their skills on React Hooks",
        "React developers who want to become well rounded developers or fill knowledge gaps",
        "React beginners and intermediate friendly"
      ]
    },
    {
      "title": "Easy CSS with Sass",
      "url": "https://www.udemy.com/course/sass-css/",
      "bio": "Learn how to easily build and manage your Css3 files with the use of Syntactically Awesome Stylesheets.",
      "objectives": [
        "By the end of this course you will be able to produce the stylesheet for a set of attractive looking web buttons",
        "In this course you will learn how to install and use Sass in order to easily produce and manage your css files"
      ],
      "course_content": {
        "Introduction": [
          "What's in the package?",
          "Resources"
        ],
        "Installation": [
          "Mac OSX",
          "Windows"
        ],
        "Setup": [
          "Page structure",
          "Sass watch",
          "Output styles"
        ],
        "Usage": [
          "Class inheritance",
          "Placeholder",
          "Variable",
          "Mixin",
          "Grouping items",
          "Function",
          "Width mixin",
          "Looping with @for",
          "Loop output",
          "Comments"
        ],
        "Buttons component": [
          "Organising files",
          "Variables",
          "Button specific variables",
          "Pixels to Em",
          "Opacity and Inset shadow",
          "Rounded corners",
          "Set of placeholders",
          "Global styles",
          "Placeholder sequence",
          "Button padding",
          "Button border, size and main button mixin",
          "Button base",
          "Button style",
          "Button rounded",
          "Rounded corners and disabled",
          "Argument binding",
          "Button classes"
        ],
        "Fun time": [
          "Adding buttons to the page",
          "Modifying buttons"
        ],
        "Conclusion": [
          "What's next?"
        ]
      },
      "requirements": [
        "Text or html editor"
      ],
      "description": "This course will give you a solid understanding of what Sass is and how to use it to easily produce and manage your project's css files.\nDuring this course we will cover the most commonly used features of Sass and see how they can help to create the optimised stylesheets with just a few lines of code.\nWe will complete the course by creating the set of buttons ready to use with any future project - changing colours, sizes and shapes with a simple change of the value assigned to a relevant variable.\nThis course is suitable for those with the good understanding of Css and who want to learn how to reduce the time creating and easily manage their css files.\nUpdate\nThe Font-Awesome is now available at the following location: http://fontawesome.io/. And in order to add icon to the 'i' element use the class in the following way:\n</>",
      "target_audience": [
        "This course is intended for everyone with the knowledge of CSS"
      ]
    },
    {
      "title": "Customize Enfold WordPress Theme for Your Business",
      "url": "https://www.udemy.com/course/customize-enfold-wordpress-theme/",
      "bio": "Learn how to customize every neccessary element of the Enfold theme with no coding required.",
      "objectives": [
        "Customize the Enfold WordPress Theme",
        "Utilize Enfold's Avia Advanced Layout Editor",
        "Build Your Own Business Website with Enfold"
      ],
      "course_content": {
        "Before We Begin": [
          "Introduction"
        ],
        "Install the Enfold WordPress Theme": [
          "Installing Enfold Demonstration"
        ],
        "Import Enfold's Business Startup Demo Content": [
          "Importing Enfold Demo Content Demonstration"
        ],
        "Add Your Logo and Customize Header": [
          "Adding Logo and Header Settings Demonstration"
        ],
        "Customize Page Content": [
          "Customizing Home Page Content Demonstration",
          "Customizing Products Page Content Demonstration",
          "Customizing Pricing Page Content Demonstration",
          "Customizing Our Story Page Content Demonstration",
          "Customizing News Page Content Demonstration",
          "Customizing Contact Page Content Demonstration"
        ],
        "Footer Customization and Widgets": [
          "Customize Sitewide Footer Styling and Widgets"
        ],
        "Publishing": [
          "Setup and Testing Contact Forms and Mailchimp Subscribe",
          "Final Steps for Publishing Your New Website"
        ]
      },
      "requirements": [
        "This course requires a fresh live default WordPress installation to begin. If you are unable to set this up yourself most hosting companies offer this as an affordable service."
      ],
      "description": "This course is about how to customized the Enfold WordPress theme's demo content to your own business. The course is structured as a workshop and students are expected to follow along with their own sites. There is absolutely no coding required which is awesome and means this is a beginner course. Included with the course are a ton of resources besides each lectures video that make the process more efficient. This course contains over 2 hours of video content which results in a publishable website for a mock example business. Students will require additional time for creating content for their own sites. Take this course if you recognize the value of learning how to customize the Enfold WordPress theme for yourself.",
      "target_audience": [
        "This Enfold theme customization course is for the do-it-yourself people who consider themselves somewhat tech savy.",
        "Some WordPress experience is encouraged but not required.",
        "No coding required!"
      ]
    }
  ]
}