{
  "courses": [
    {
      "title": "Learn to Build Web Apps using D3JS",
      "url": "https://www.udemy.com/course/learn-to-build-web-apps-using-d3js/",
      "bio": "Master the powerful data visualization tool for modern web development",
      "objectives": [
        "Use D3 JS in your Web Apps",
        "Understand the concepts behind the D3 Library",
        "Learn data visualisation using D3"
      ],
      "course_content": {},
      "requirements": [
        "Student should know basic HTML, CSS and JavaScript"
      ],
      "description": "Turn your ordinary data into extra ordinary using D3js. What is D3js? Well it is the answer to all you data presentation needs. It is a vast JavaScript library that allows users to easily make data visualizations. The open source JavaScript library allows users to apply any pre-built data visualizations and create interactive graphics in common web browsers. It uses the widely implemented SVG, HTML5, and CSS standards.\nOur D3js course follows a structured and practical approach to understanding D3js and the philosophy behind it. The course breaks down complex concepts and makes it easier to understand and master D3js. With topics such as Frontend Development, D3 Library, JQuery, Data Visualization, JSON, Array & Objects, SVG – Scalable Vector Graphics, Transitions, Data Scaling, Data Binding, and Data Display this course offers a complete training program.\nThe course comes with detailed explanations along with many easy to understand coding examples.\nThe course will cover:\nGetting Started with D3 – Set up your system and start building D3 apps.\nBasic Selecting & Binding – Learn all about the selection and the Binding tools.\nSVG – Understand the concepts behind Scalar Graphics library.\nUsing Scales Transitions & Display – Learn to perform complex tasks for scale transition and Display.\nScatterplot Project – Put your ideas to action by building a real world project.\nGet started and learn this powerful technology from ground up. Learn using project based pedagogy and start developing powerful applications using D3js",
      "target_audience": [
        "Students who want to learn data visualization using D3JS"
      ]
    },
    {
      "title": "AWS & React: Deploy an Auto-Scaling E-Commerce App with ELB",
      "url": "https://www.udemy.com/course/aws-react-deploy-an-auto-scaling-e-commerce-app-with-elb/",
      "bio": "AWS Foundations | Amazon EC2 | EC2 Configuration | AWS Storage (EBS, EFS) | ELB | ASG | Route 53 | ReactJS | E-Commerce",
      "objectives": [
        "Navigating the AWS Management Console",
        "Securing an AWS account with Multi-Factor Authentication (MFA)",
        "Creating Billing Alerts",
        "Deploying and Configuring EC2 Instances",
        "Creating IAM roles for EC2",
        "Working with Various EC2 Storage Services (EBS, EFS)",
        "Creating EBS Snapshots and Amazon Machine Images (AMIs)",
        "Attaching EC2 Instances to EBS and EFS Storage",
        "Dynamic Workload Distribution using Elastic Load Balancers (ELBs) and Auto Scaling Groups (ASGs)",
        "Routing Traffic through Amazon Route 53 and DNS",
        "Understanding the Foundations of React",
        "Creating a Basic Development Setup for Building a ReactJS App",
        "Building a Customizable E-Commerce App using ReactJS"
      ],
      "course_content": {
        "Getting Started with AWS": [
          "Introduction",
          "AWS Pricing Foundations",
          "AWS Free Tier Overview",
          "AWS Acceptable Use Policy",
          "AWS Account Registration",
          "AWS Cloud Practitioner Exam - Key Topics",
          "AWS Global vs. Regional Services",
          "Global vs. Regional Services Example",
          "Creating Billing Alerts",
          "AWS Multi-Factor Authentication (MFA)",
          "Activate MFA for the Root User Account",
          "Creating IAM Users and Groups",
          "IAM User Custom Sign-In Link",
          "Configure a Custom Password Policy"
        ],
        "Amazon Elastic Compute Cloud (EC2)": [
          "Introduction to EC2",
          "EC2 Instance Core Features",
          "EC2 Instance Types",
          "Amazon Machine Images (AMI)",
          "Creating an IAM User for EC2",
          "The EC2 Dashboard",
          "Deploying an EC2 Instance",
          "Deploying an EC2 Instance (Continued)",
          "EC2 Instances Console",
          "Elastic IP (Theory)",
          "Elastic IP (Guide)",
          "EC2 Instance Administration (Guide)",
          "EC2 Instance Launch Templates",
          "Creating an Amazon Machine Image (AMI)",
          "IAM Roles (Theory)",
          "IAM Roles (Practial Guide)",
          "IAM Roles for EC2 (Guide)",
          "Introduction to Security Groups",
          "Security Groups (Guide)",
          "Secure Socket Shell (SSH) Overview",
          "PuTTY (SSH) Client for Windows",
          "EC2 Instance Connect (Guide)"
        ],
        "AWS Storage (EC2)": [
          "Introduction",
          "Block vs. File. vs Object Storage",
          "Amazon Elastic Block Store (EBS) Overview",
          "Amazon EBS Guide [Part 1]",
          "Amazon EBS Guide [Part 2]",
          "EBS Snapshots Overview",
          "EBS Snapshots (Guide)",
          "Amazon Machine Image (AMI)",
          "Amazon AMI Guide [Part 1]",
          "Amazon AMI Guide [Part 2]",
          "Amazon EC2 Image Builder",
          "Amazon EC2 Image Builder Guide [Part 1]",
          "Amazon EC2 Image Builder Guide [Part 2]",
          "Amazon Elastic File System (EFS)",
          "Deploy an EC2 Instance with Ubuntu (Guide)",
          "Creating an EFS (Guide)",
          "Attach EFS to EC2 (Guide)",
          "Upload Files to EFS via FTP (Guide)",
          "Attach EFS to Second EC2 Instance (Guide)",
          "Account Cleanup"
        ],
        "ELB, ASG, Route 53": [
          "Introduction",
          "High Availability & Elasticity",
          "Elastic Load Balancer (ELB) Overview",
          "Auto Scaling Groups (ASG)",
          "ELB + ASG Prep: Setup AMI from EC2",
          "ELB Deployment (Guide)",
          "Creating a Launch Template (Guide)",
          "Auto Scaling Groups (Guide)",
          "Auto Scaling Strategies",
          "Dynamic Scaling (Guide)",
          "Step and Simple Scaling (Guide)",
          "Predictive Scaling (Guide)",
          "Creating a Launch Template (Guide)",
          "Virtual Private Cloud (VPC) Guide",
          "Amazon Route 53 & DNS Foundations (Guide)",
          "Route 53 Domain Registration & Routing (Guide)",
          "Route 53 Domain Settings and Hosted Zones",
          "Route 53 DNS Records in the Hosted Zone",
          "Account Clean-Up"
        ],
        "Intro to React": [
          "Skills Required",
          "What is React?",
          "Hello React",
          "Tools Needed",
          "Code Pen",
          "Intro to JSX"
        ],
        "React Project - Build an E-Commerce Store": [
          "Project Overview",
          "Scaffolding the Project",
          "Intro to JSON Server",
          "Fetch API",
          "Styling the Store",
          "Rendering the Categories",
          "Binding the Products",
          "Refactor the Fetch API call",
          "Dealing with errors in Fetch API",
          "Tidy the Fetch API call",
          "Styling the Product List",
          "Installing React Router",
          "Fixing the Key Warning",
          "React Router - Detail Page",
          "Fetch API - Get Product By Id",
          "Product Description",
          "Intro to Styled Components",
          "Styled Components - Product Description",
          "Dangerously Set HTML (yeah really)",
          "Refactor the Categories",
          "Refactor the Layout",
          "Refactor the Home Page",
          "Intro to Context in React",
          "UseContext Hook and UseReducer Hook in React",
          "Basket Layout",
          "Implementing the Basket",
          "Implementing Basket Icons",
          "Implementing Basket Total",
          "Finishing the Checkout",
          "Checkout - Fixing the State",
          "Implementing the Order Confirmation",
          "Intro to Local Storage",
          "Implementing Search Results",
          "Better Searching with Debouncing",
          "Validating Forms in React - Part 1",
          "Validating Forms in React - Part 2",
          "Validating Forms in React - Part 3",
          "Validating Forms in React - Part 4",
          "Project Summary"
        ]
      },
      "requirements": [
        "Basic Computer Skills",
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "This course is designed to teach students the foundations of Amazon Web Services (AWS) and React.js. By the end of the course, students will have the skills necessary to build a fully customizable e-commerce site on an Amazon Elastic Compute Cloud (EC2) instance. The entire infrastructure will be highly available and scalable using Elastic Load Balancers (ELBs) and Auto Scaling Groups (ASGs).\n\nThe course begins by introducing students to AWS and the various services it offers. This includes a brief overview of the AWS management console and how to navigate it. From there, we delve deeper into the Amazon Elastic Compute Cloud (EC2) service. EC2 will serve as the backbone of the e-commerce site we build using React.JS. Students will learn how to launch and configure EC2 instances, as well as how to connect to them securely using remote connection utilities like PuTTY and Terminal.\n\nNext, we will cover AWS Storage, including Elastic Block Store (EBS) and Elastic File System (EFS). Here, students learn to create and manage storage volumes, and how to securely connect them to EC2 instances. We also explore the different types of storage available on AWS and when to use each one.\n\nAfter covering the basics, students learn to create Elastic Load Balancers and integrate them with Auto Scaling Groups for workload distribution. Here, we demonstrate how to create a highly available and scalable infrastructure for the e-commerce site which will be built in the last section of the course. The infrastructure will automatically scale based on traffic and overall load. Traffic will only be distributed to healthy nodes in the network, based on parameters that are established during configuration.\n\nFinally, students learn how to build a fully customizable e-commerce site using React.js. Here, students will create and manage a React project, as well as effectively use React components to build a dynamic user interface. We also explore how to integrate the e-commerce site with other AWS services such as AWS storage, to efficiently scale capacity based on application requirements.\n\nThroughout the course, students will work on hands-on projects to apply the concepts they have learned. These projects include building a simple e-commerce site to start and scaling up to a more complex site with advanced features such as product search, and product categories.\n\nBy the end of the course, students will have a solid understanding of the basics of AWS and React.js. Students will be able to build a fully functional and customizable e-commerce site on an EC2 instance. This includes having the knowledge and skills necessary to continue learning more advanced AWS and React.js concepts and being able to build out new projects independently.\n\nThis course is designed for developers and IT professionals who want to learn how to build scalable and highly available applications on AWS using React.js. No prior experience with AWS or React.js is necessary, but basic understanding of web development and programming concepts is recommended.",
      "target_audience": [
        "Students interested in the foundations of Amazon Web Services",
        "Students interested in Deploying and Configuring EC2 Instances on AWS",
        "Students interested in learning how to Administer an EC2 Instance Remotely",
        "Students interested in Deploying Distributed Workloads using Elastic Load Balancers",
        "Students interested in Auto-Scaling using Auto Scaling Groups (ASGs)",
        "Students interested in Building Dynamic Web Applications using ReactJS"
      ]
    },
    {
      "title": "Testing REST APIs using Postman",
      "url": "https://www.udemy.com/course/testing-rest-apis-using-postman/",
      "bio": "Manual and Automated Testing, Collections, Environment Variables, Mock Servers, Monitors",
      "objectives": [
        "Postman",
        "Testing REST API",
        "API Test Automation",
        "Collections",
        "Monitors",
        "Newman",
        "Environments",
        "Environment Variables"
      ],
      "course_content": {},
      "requirements": [
        "Willingness to learn",
        "Interest in learning about REST APIs",
        "Interest in Manual Testing",
        "Interest in Test Automation"
      ],
      "description": "This course will give you the skill set that you would need to test REST APIs using Postman. The course will cover the concepts of APIs and how to use Postman to test APIs manually. You will also learn how write and run automated tests, verify their correct behaviour by writing meaningful assertions and running them using Newman CLI. We will then cover some of the advanced features offered by Postman such as Environment Variables, Collections, Mock servers, and Monitors using step by step examples.",
      "target_audience": [
        "Front-end Developers",
        "Back-end Developers",
        "Software Engineers",
        "Test Engineers",
        "Quality Assurance Engineers",
        "Software Developer in Test"
      ]
    },
    {
      "title": "Comprehensive JavaScript Programming",
      "url": "https://www.udemy.com/course/comprehensive-javascript-programming/",
      "bio": "This comprehensive JavaScript programming course will teach you how to develop JavaScript applications in around 2 hours",
      "objectives": [
        "By the end of this course you will be able to program in the JavaScript programming language.",
        "In this course you will learn the fundamentals needed for working with popular JavaScript libraries such as jQuery, Angular, and NodeJS"
      ],
      "course_content": {
        "JavaScript Basics": [
          "JavaScript Course Intro",
          "How to use Variables in JavaScript",
          "How to Use Math in JavaScript - Part 1 of 2",
          "How to Use Math in JavaScript - Part 2 of 2",
          "How to Use Strings in JavaScript",
          "How to Get Data from a JavaScript Prompt"
        ],
        "JavaScript Conditionals": [
          "How to Use the If - Else Statement in JavaScript - Part 1 of 4",
          "How to Use the If - Else Statement in JavaScript - Part 2 of 4",
          "How to Use the If - Else Statement in JavaScript - Part 3 of 4",
          "How to Use the If - Else Statement in JavaScript - Part 4 of 4",
          "How to Use Comments in JavaScript",
          "How to Use the JavaScript Switch Statement"
        ],
        "JavaScript While and For Loops": [
          "How to Use the While Loop in JavaScript - Part 1 of 3",
          "How to Use the While Loop in JavaScript - Part 2 of 3",
          "How to Use the While Loop in JavaScript - Part 3 of 3",
          "How to Use the For Loop in JavaScript - Part 1 of 2",
          "How to Use the For Loop in JavaScript - Part 2 of 2"
        ],
        "JavaScript Arrays and Data Structures": [
          "How to Use Arrays in JavaScript - Part 1 of 6",
          "How to Use Arrays in JavaScript - Part 2 of 6",
          "How to Use Arrays in JavaScript - Part 3 of 6",
          "How to Use Arrays in JavaScript - Part 4 of 6",
          "How to Use Arrays in JavaScript - Part 5 of 6",
          "How to Use Arrays in JavaScript - Part 6 of 6"
        ],
        "JavaScript Functions": [
          "How to Create Functions in JavaScript - Part 1 of 2",
          "How to Create Functions in JavaScript - Part 2 of 2"
        ],
        "JavaScript Objects": [
          "How to Create Objects in JavaScript - Part 1 of 2",
          "How to Create Objects in JavaScript - Part 2 of 2"
        ]
      },
      "requirements": [
        "No experience is required, however knowledge of how to utilize a web browser is helpful."
      ],
      "description": "This comprehensive JavaScript programming course will teach you how to develop JavaScript applications, specifically you will learn: functions, objects, strings, arrays, debugging, and much more.\nUpon completion of the course you will receive a certificate of completion.\nJavaScript is one of the world's most utilized programming languages, and this course will teach you how to build programs and lay the ground work for utilizing popular JavaScript libraries such as: jQuery, Ajax, and Node.js.\nNo experience is necessary to take this course, if you are looking to become a developer, this is a great starting point. Beginning with basic lessons on variables and string manipulation, and going all the way to developing custom functions to work with arrays and data structures, this course is truly comprehensive.",
      "target_audience": [
        "Basic to intermediate developers, this is a comprehensive course, so there is something for all experience levels."
      ]
    },
    {
      "title": "The Complete JavaScript Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-javascript-bootcamp/",
      "bio": "Learn Fundamental of JavaScript, jQuery, AngularJS and NodeJS",
      "objectives": [
        "Understand the basics of working with JavaScript, jQuery, AngularJS and NodeJS",
        "Understand DOM in a better way",
        "Understand Functions, Events, Conditions and many more"
      ],
      "course_content": {
        "Introduction to JavaScript Bootcamp": [
          "Introduction"
        ],
        "Overview and Basic JavaScript Setup": [
          "JavaScript Overview",
          "JavaScript Setup"
        ],
        "JavaScript Variables and Primitive Types": [
          "Numbers Demo",
          "Variable Demo",
          "String Demo",
          "String Method Demo"
        ],
        "JavaScript Object Types": [
          "Array Demo",
          "Functions Demo",
          "Objects Demo"
        ],
        "JavaScript Control Flow": [
          "Conditional Demo",
          "Loops Demo",
          "Errors"
        ],
        "JavaScript Document Object Model (DOM)": [
          "Elements and Attributes",
          "Events",
          "Function Calculator Exercise"
        ],
        "jQuery Selectors, Events & Effects": [
          "Selector Demo",
          "Events Demo",
          "Effects Demo",
          "Animation Demo"
        ],
        "jQuery Document Object Model (DOM)": [
          "Content Demo",
          "Structure Demo",
          "Traversal Demo"
        ],
        "jQuery Ajax": [
          "Ajax Demo 1",
          "Ajax Demo 2"
        ],
        "AngularJS Beginning": [
          "Simple Hello World App",
          "Expressions",
          "Abstracting the Controller into a Module"
        ]
      },
      "requirements": [
        "We assumes that you are comfortable writing and understanding object oriented programming",
        "Knowledge of any programming language is helpful, but not necessary"
      ],
      "description": "In this course you will learn very popular programming languages like JavaScript, jQuery, AngularJS and NodeJS\nJavaScript is a programming language that can be run by all modern web browsers. It is downloaded alongside the HTML code of a webpage. Unlike HTML, which can only be used to display content, JavaScript allows web designers to add functionality and interactivity to their websites.\nJQuery is a popular JavaScript library that is used extensively in modern websites. This library facilitates common JavaScript tasks such as animations, event handling, manipulating HTML content, and communication with external servers. In addition to its easy-to-use features, JQuery also takes care of many cross-browser compatibility issues automatically.\nAngularJS is basically a JavaScript framework (an open source web application framework) library, which is distributed as JavaScript file. Mainly used in developing Single Page Application (SPA). It extendes HTML with additional new attributes hence making simple development and making it more responsive at user’s end, since HTML was never design for dynamics views. AngularJS is very easy to understand hence learning it is a fun.\nNodeJs is a powerful JavaScript engine that can be used for a variety of tasks. In this course, we’ll learn the basics of working with NodeJS. We’ll work with the core libraries, but also learn about using npm: the Node Package Manager to load and work with any third party package that has been developed for NodeJS. We’ll also look at three ways to write and run a simple web server using node.\nCourse Topics\nJavaScript\nNumbers\nVariables\nString\nArrays\nFunctions\nConditions\nLoops\nEvents\njQuery\nSelectors\nEvents\nEffects\nAnimations\nDOM\nAjax\nAngularJS\nExpressions\n2 way data handling\nForm submissions\nFilter search\nForm validation\nNodeJS\nInstalltion\nIntro to NPM\nREPL utility\nFile input and output\n\nPrerequisites\nHTML: The student must know how to use HTML tags and attributes. Only a very basic understanding of HTML is assumed.\nNotepad++ (Recommended): Notepad++ is a free, open-source text editor. Although JavaScript and HTML can be written using any text editor, Notepad++ is highly recommended because of features such as syntax highlighting and auto-complete.",
      "target_audience": [
        "Any fresher who wants to learn JavaScript, jQuery, AngularJs and NodeJS",
        "Expert who needs to brush up their knowledge"
      ]
    },
    {
      "title": "Full stack MERN Blog Project: MERN Stack Blog with Dashboard",
      "url": "https://www.udemy.com/course/full-stack-mern-blog-with-admin-dashboard/",
      "bio": "Learn full stack MERN Blog project with JWT Firebase and Google OAuth by building a MERN full Stack blog with dashboard",
      "objectives": [
        "Create a new blog app step by step using the latest MERN stack technologies.",
        "Master email, password, and OAuth authentication with JWT for secure user access.",
        "Learn how to keep user access safe by mastering email, password, and OAuth authentication using JWT.",
        "Allow users to easily create, update, and delete property listings with the ability to perform basic operations like adding, editing, and removing items.",
        "Add a smart search function to your project with filters and sorting choices. Make sure to fine-tune MongoDB queries for better performance.",
        "Create a user-friendly profile management system that includes the ability to upload profile images and securely delete accounts. Implement JWT cookie validatio",
        "Discover how to deploy your MERN blog app on the 'Render' platform, getting it ready to showcase in your portfolio or share it with the public.",
        "Enhance your Reactjs skills by practicing dynamic routing, managing state with Redux Toolkit, and integrating third-party APIs such as Google OAuth.",
        "Keep yourself informed about the latest industry trends by incorporating React Router Dom and Tailwind CSS into your frontend development practices.",
        "Make use of Firebase Storage to efficiently handle images, allowing users to easily upload and manage property images without hassle."
      ],
      "course_content": {
        "Introduction, preview and Installation": [
          "Overview of the project",
          "Install React.js and Tailwind CSS and create the first template"
        ],
        "Pages and routes and header component": [
          "Create pages and routes",
          "Create Header components"
        ],
        "Create the server and connect to the database": [
          "Create and run the server",
          "Connect to the database",
          "Create user model",
          "Create a test API route"
        ],
        "Signing up the users": [
          "Create signup API route",
          "Add a middleware and a function to handle errors",
          "Create signup page UI",
          "Add functionality to the sign up page"
        ],
        "Footer section": [
          "Create and add the footer component"
        ],
        "Signing in users": [
          "Create signin API route",
          "Complete signin page functionality"
        ],
        "Redux toolkit and Redux persist": [
          "Add redux toolkit",
          "Add redux persist"
        ],
        "Google OAuth, update header and add dark mode": [
          "Add Google OAuth functionality",
          "Update header component with user data",
          "Complete dark mode functionality"
        ],
        "Dashboard page": [
          "Make the dashboard private",
          "Complete sidebar of the dashboard",
          "Complete profile page UI",
          "Complete user image upload functionality",
          "Add update user API route",
          "Complete update user profile page functionality",
          "Add delete user API route",
          "Complete delete user account functionality",
          "Add signout functionality",
          "Add admin functionality to the user"
        ],
        "Create and update a post": [
          "Complete create a post page UI",
          "Add create a post API route",
          "Complete upload post image functionality",
          "Complete create post functionality",
          "Add posts section to the dashboard",
          "Create get posts API route",
          "Show user posts inside dashboard",
          "Add show more functionality to the posts results of the dashboard",
          "Add delete post functionality to the dashboard",
          "Add update post functionality"
        ]
      },
      "requirements": [
        "Before diving into this topic, learners should have a basic grasp of JavaScript, including knowledge of variables, functions, and basic syntax.",
        "Having some previous experience with Reactjs would be beneficial, as the course explores advanced React concepts and best practices.",
        "It will be helpful to have a basic understanding of web development concepts such as HTML, CSS, and web architecture.",
        "Learners should feel comfortable using a text editor or integrated development environment (IDE) for writing code."
      ],
      "description": "Get ready for an exciting journey into the world of modern web development! Our course, \"Full stack MERN Blog Project: MERN Stack Blog with Dashboard\" is designed to guide you from the basics to creating a fully functional MERN (MongoDB, Express.js, React, and Node.js) stack blog.\n\n\nWhether you're an aspiring full-stack developer, a React enthusiast, or someone looking to expand your web development skills, this course has you covered. Here's what you can expect:\n\n\n1. Comprehensive MERN Stack Mastery: We start from the basics, guiding you through essential tool installations like React.js and Tailwind CSS for a strong foundation.\n\n\n2. Advanced Authentication: Learn to implement email and password authentication using JSON Web Tokens (JWT), and seamlessly integrate Google OAuth for a smooth login experience.\n\n\n3. Real-world CRUD Operations: Master Create, Read, Update, and Delete (CRUD) operations with hands-on experience in managing property listings using MongoDB.\n\n\n4. User-friendly Features: Enhance user experience by allowing effortless creation and management of property listings, including the ability to upload and modify multiple images.\n\n\n5. Advanced Search Functionality: Implement a modern search feature that allows users to filter listings by title, apply sorting options, and efficiently limit search results using cutting-edge MongoDB techniques.\n\n\n6. Admin Dashboard: Implement a modern admin dashboard to see the recent users, comments and posts plus taking a full control over them.\n\n\n7. Deployment Made Easy: Learn how to deploy your fully functional MERN stack blog application for free using the 'render' platform.\n\n\nPrerequisites:\nA basic understanding of JavaScript and React is recommended, but if you're excited about building a blog app and diving into full-stack development, you're more than ready to get started.\n\n\nJoin us on this immersive journey to master the MERN stack, JWT authentication, Firebase integration, Google OAuth, and more. By the end of the course, you'll not only have a fully functional blog app but also the skills to boost your web development career. Enroll now and let's embark on this exciting learning adventure together!",
      "target_audience": [
        "This course is designed for individuals who want to become proficient in the MERN stack and create a blog app starting from the ground up.",
        "This course is tailored for React enthusiasts who are eager to enhance their skills through engaging in complex real-world projects.",
        "For developers looking to broaden their skill set with authentication, Redux, and advanced MongoDB usage, this course is an excellent choice.",
        "This course is ideal for students and hobbyists who are looking for a challenging, hands-on project to elevate their web development expertise."
      ]
    },
    {
      "title": "Angularjs for Beginners",
      "url": "https://www.udemy.com/course/angularjs-angular/",
      "bio": "This course teaches Angularjs i.e. Angular 1.X step by step.",
      "objectives": [
        "They will learn AngularJS i.e. Angular 1.X .",
        "$scope, $rootscope, controller, models, expression , Digest cycle , watchers , $watch and $apply.",
        "services , factory , services vs factory , $http,Custom Directives, Restrict , Isolation Scope,deferred , promises",
        "SPA , Routing , Filters , unit testing with jasmine,Emit , broadcast,Angular Provider (Constant, Values, Provider, Service and Decorator)."
      ],
      "course_content": {
        "Lab 1:- $scope, $rootscope, controller, models, expression & debugging.": [
          "Lab 1:- $scope, $rootscope, controller, models, expression & debugging."
        ],
        "Lab 2 :- Digest Cycle, watchers, One time, $watch and $apply.": [
          "Lab 2 :- Digest Cycle, watchers, One time, $watch and $apply."
        ],
        "Lab 3 :- Services and Factory": [
          "Lab 3 :- Services and Factory"
        ],
        "Lab 4 :- Using $http service with WebAPI as back end.": [
          "Lab 4 :- Using $http service with WebAPI as back end."
        ],
        "Lab 5 :- Custom Directives, Restrict and Isolation Scope.": [
          "Lab 5 :- Custom Directives, Restrict and Isolation Scope."
        ],
        "Lab 6:- Deferred and Promises.": [
          "Lab 6:- Deferred and Promises."
        ],
        "Lab 7 :- Angular Unit Testing using Jasmine.": [
          "Lab 7 :- Angular Unit Testing using Jasmine."
        ],
        "Lab 8 :- Implementing SPA using Angular Route and Angular UI Router.": [
          "Lab 8 :- Implementing SPA using Angular Route and Angular UI Router."
        ],
        "Lab 9 :- Emit, BroadCast and On Events.": [
          "Lab 9 :- Emit, BroadCast and On Events."
        ],
        "Lab 10 :- Filters in Angular.": [
          "Lab 10 :- Filters in Angular."
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and Javascript"
      ],
      "description": "This course teaches Angularjs 1.X version step by step, below are the topics covered :-\n\nLab 1:- $scope, $rootscope, controller, models, expression & debugging.\nLab 2 :- Digest Cycle, watchers, One time, $watch and $apply.\nLab 3 :- Services and Factory\nLab 4 :- Using $http service with WebAPI as back end.\nLab 5 :- Custom Directives, Restrict and Isolation Scope.\nLab 6:- Deferred and Promises.\nLab 7 :- Angular Unit Testing using Jasmine.\nLab 8 :- Implementing SPA using Angular Route and Angular UI Router.\nLab 9 :- Emit, BroadCast and On Events.\nLab 10 :- Filters in Angular.\nLab 11 :- JQuery with AngularJS.\nLab 12 :- Dot Rule and Controller AS Keyword.\nLab 13:- Angular Provider (Constant, Values, Provider, Service and Decorator).",
      "target_audience": [
        "Students who want to learn AngularJS i.e. Angular 1.X"
      ]
    },
    {
      "title": "The Complete E-Commerce Web Developer Course 5.0",
      "url": "https://www.udemy.com/course/e-commerce-web-developer-course/",
      "bio": "Learn how to become a Web Developer from scratch using PHP, SQL, CSS, and HTML",
      "objectives": [
        "Become a Web Developer!",
        "Create E-Commerce Web Site using PHP",
        "Build Shopping Cart from scratch using code",
        "Understand CSS and HTML",
        "Gain valuable skills and career boost",
        "Back-end database and complete Front-end functionality"
      ],
      "course_content": {},
      "requirements": [
        "You need to be tech savvy",
        "You also need to be able to commit 8 weeks for this course",
        "Stable and high speed internet connection",
        "Account at Stripe would be helpful for e-commerce cart functionality"
      ],
      "description": "Added the .sql file Section 18, lecture 97.\nCourse Description\nAre you ready to become a Web Developer and enjoy a fascinating high paying career?\nOr maybe you just want to learn additional tips and techniques taking to a whole new level?\nWelcome to The Complete E-Commerce Web Developer Course 5.0\nThis is by far the mother of all courses – It is not only a comprehensive course but with over 200 lessons, you are will not find a course similar to this.\nIt’s our most current, in-depth and exciting coding course—to date.\nWe have designed the course especially for beginners and intermediate level students -no matter where you are in your web site development and coding journey—It is for sure that the future belongs to web developers who know how to code real world responsive websites built on Bootstrap framework. Completely hands-on tutorials with practice task is nearly guaranteed to get you a solid career with the industry. We also use state-of-the-art editors that are easy to learn and use.\nYou will find several practice tasks before we actually begin the coding process - essentially following the flipped classroom model\nWe’ve left no stone unturned.    We guarantee, this is THE most complete and thorough, as well as up-to-date coding course available ANYWHERE on the market—or your money back. We walk you through e-commerce web site development from scratch using PHP, SQL, CSS, and HTML\nThis is for sure that you will find everything you need to get up and coding fast.\nSee what our students say “It is such a comprehensive course that I don’t need to take any other course but this one to learn all the skills to become a web developer, and I would without a doubt recommend it to anyone looking for a complete web developing course.” -Chris Portman\nFrom zero to hero in just six weeks.\nSo, how is our course really different? Well – we go from beginner right from scratch with no gloves on either and make you a web developer in 8 weeks or so. It is your pace – your time really!\n“This is such an awesome course. I loved every bit of it – Awesome learning experience!” Sami Shah.\nJoin thousands of other students and share valuable experience\nGet started today and join thousands of our happy students, many of whom have changed careers, created second incomes or added critical new skills to their tool kits. Our students have become successful web developers and are earning six figure salaries. Some are freelancing and earning even more with high scaled projects.\nOh, and did I mention you get FREE unlimited hosting for one year – ClayDesk Web hosting Service?\nEnroll now in The Complete E-Commerce Web Developers Course 5.0 today and revolutionize your learning. Start with scratch and learn the fundamentals. Jump right in and take an in-depth look into the website development front-end and back-end functionality and features. Start building powerful e-commerce web sites and apps and cash-earning websites today—and enjoy bigger, brighter opportunities.\n“Excellent course gives you everything you need to know for developing cart functionality!”  Waheed Zia\nDon’t believe us at all? Well - We offer full money back guarantee if you haven’t earned your money back within 60 days of completing the course.\nReady to open new doors and become a smart, in-demand e-commerce web developer? You do need to put effort though\nHere’s what you get with The Complete E-commerce Web Developer Course 5.0\nYou’ll get access to ten sections that dive deep into the nitty gritty of building successful e-commerce websites.\nSo enroll now and we will see you in class.",
      "target_audience": [
        "This course is for beginners and intermediate level students",
        "Experts will definitely benefit form this course"
      ]
    },
    {
      "title": "Mastering Angular 15/16/17 From Scratch Step By Step",
      "url": "https://www.udemy.com/course/masteringangular/",
      "bio": "Learn Angular Using Problem-Solving Approach",
      "objectives": [
        "Learn How To Setup Development Environment for Angular Development",
        "Understanding MVC Architectural Pattern",
        "Understanding the Execution Flow of an Angular Application",
        "Learn How to work with Angular components in many ways",
        "Learn How to work with various Built-in Directives of Angular",
        "Understanding One Way and Two Way Binding Techniques",
        "Learn How to work with various Built-in Pipes of Angular",
        "Learn How to consume REST API from Angular",
        "Learn How to develop Custom Services",
        "Learn How to share data between Parent and Child Components",
        "Learn How to work with Behavior Subject",
        "Learn How to work with Cookies in Angular",
        "Learn How to work with various HTML Form Controls using Reactive Forms Approach",
        "Learn How to work with various HTML Form Controls using Template Driven Approach",
        "Learn How to Create Custom Directives",
        "Learn How to Create Custom Pipes",
        "Learn How to implement Pagination, Sorting and Filter functionality",
        "Learn How to create intuitive Reports",
        "Learn How to perform Bulk Insert,Bulk Update and Bulk Delete Operations",
        "Learn How to export data to Excel,CSV,PDF formats",
        "Learn How to implement Routing for Angular Application",
        "Learn How to create a REST API Using ASPNET Core",
        "Learn How to consume REST API from Angular"
      ],
      "course_content": {},
      "requirements": [
        "Visual Studio Code Editor, NodeJS",
        "Basic Knowledge of TypeScript,CSS,Bootstrap"
      ],
      "description": "Angular is one of the leading frameworks to develop apps across all platforms.\nAngular helps us to reuse our code and build fast and high performing apps for any platform.\nAngular is a Single Page Application (SPA) development framework open-sourced by Google.\nThe Angular framework is written in Typescript language, which enables a web developer to write JavaScript code in Object-Oriented fashion. TypeScript makes it easier to build a client-side web application with classes, interfaces, generics, inheritance and other Object-Oriented features.\nAngular is a framework that comes with Components, Directives, Pipes, Services, Modules, Dependency Injection, HTTP Communication, Reactive Forms, Template Driven Forms, Routing and other features out of the box.\nAs a framework, Angular has clear advantages while also providing a standard structure for developers to work with. It enables users to create large applications in a maintainable manner.\nThis course provides developers with a thorough knowledge in developing dynamic web sites using Angular Framework.\nIn this course by development expert Kameswara Sarma Uppuluri, you'll learn essential concepts that you need to know to master the building blocks of Angular.\nThis course provides step-by-step walk-throughs and demos that you're encouraged to practice along with to enhance the learning process.\nThis course is broken down into 28 Modules with each module providing source code so that you can follow along with Kameswara Sarma Uppuluri.",
      "target_audience": [
        "This course is for all web developers, software programmers, front-end developers and entry-level developers who want to learn Angular or enhance the existing Angular skills to the next level."
      ]
    },
    {
      "title": "Advanced Prestashop module developer guide",
      "url": "https://www.udemy.com/course/prestashop-module-development/",
      "bio": "In this course you will learn how to create modern Prestashop module using the Symfony Framework",
      "objectives": [
        "Understand the anatomy of Prestashop module",
        "Understand Module development",
        "Symfony development in PrestaShop",
        "Smarty",
        "Payment module"
      ],
      "course_content": {},
      "requirements": [
        "Intermediate understanding of Prestashop development",
        "Smarty templating engine",
        "Symfony and Twig"
      ],
      "description": "Welcome to the Advanced Prestashop module developer guide course!\nIn this course you will learn all what you need to start coding modules for Prestashop 1.7.\nModules can play a major role in creating a successful business hence the importance of learning to code them.\nThe main focus point is to deliver a simple and straight to the point information.\nWe will walk through 5 hours of content as follow:\nFirst section: The fundamentals of Prestashop development\nStarting by Prestashop architecture, coding standards\nSecond section: modules\nWe will create a basic module and learn about various topic such as  the various module methods and the use of each, the hooking system, creating an admin configuration page with template and with helpers.\nWe will also explore the widget API and understand the main two methods\nThird section : controllers\nWe will learn about the module controllers and the various types of them such as admin and front controllers also we will dive in the modern controllers with a solid example including CRUD operations.\nLearn how to use Symfony bundle inside Prestashop, how to setup routing, create action and define forms and entities\nFinal part : Payment modules\nIn this section we will focus on a specific type of modules known as 'Payment module', I'll be explaining the anatomy of a payment module, the various types and end up by creating a fully functional payment option ( module ).\nWho this course is for:\nPHP developers with basic knowledge who want to develop complex modules form Prestashop 1.7\nPrestashop Backend developer\nWeb agencies",
      "target_audience": [
        "PHP developers with basic knowledge who want to develop complex modules form Prestashop 1.7",
        "Prestashop Backend developer",
        "Web agencies"
      ]
    },
    {
      "title": "FastAPI for Busy Software Engineers",
      "url": "https://www.udemy.com/course/fastapi-for-busy-software-engineers/",
      "bio": "The No-Fluff Guide to FastAPI",
      "objectives": [
        "Create & deploy production ready APIs using the FastAPI Framework",
        "Develop a deep understanding of the principles and capabilities of FastAPI",
        "Acquire the skills to be productive with FastAPI quickly",
        "Increase your career prospects with a highly in-demand skill",
        "FastAPI endpoint validation with Pydantic",
        "Error Handling",
        "Serving HTML with Jinja2 Templates",
        "Working with FastAPI and a Database (including migrations)",
        "Structuring large projects",
        "Performance with Async",
        "Auth with JWT",
        "Integrating with React",
        "Deploying FastAPI",
        "Emails & Background Tasks"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of Python",
        "Knowledge of REST APIs (at least the basics)",
        "Knowledge of git",
        "No previous FastAPI experience is required",
        "For the frontend section (1 section) - basic knowledge of React",
        "For the Docker section (1 section) - basic knowledge of Docker"
      ],
      "description": "Do you really want another 20-hour course (which will probably gather dust)? This is the no-fluff alternative you've been searching for. Go from zero to confident with FastAPI in a single morning - and keep a reference guide you will return to time and again.\n\n\nI've got skin in the game: I run my own SaaS platform on FastAPI, and have run it in production for multiple significant client projects.\n\n\nThis course covers all key areas you need quickly. That means it's an intermediate course - there's no \"Python syntax basics\" or \"what is a REST API\" filler. It's right into FastAPI and very much \"we're all adults here\", with references and additional reading for those who want to go deep down the rabbit hole. That doesn't mean I gloss over important details, quite the opposite.\nThe whole course is entirely project-based and will take you through all the key elements of a production-ready FastAPI application:\n\n\nEndpoint Basics\nWorking with Pydantic\nError Handling\nServing HTML with Jinja2 Templates\nWorking with a Database (SQLite and Postgres) via ORM (SQLAlchemy) & DB migrations (alembic)\nHow to Structure Your FastAPI Projects for Production\nSetting Up Auth (JWT)\nUnlocking Async Performance\nFastAPI's Dependency Injection Framework + Testing\nWorking with Frontends (React)\nDockerizing FastAPI\nDeployment\nSending emails via Background Tasks\nSetting up logging for production\nOther FAQ\n\n\nEverything is taught through an example project which has 100% code coverage on github.\nYou will build a realistic web application, including an integrated React frontend. You will also learn how to deploy it.\n\n\nIf you've used Flask, Django, Pyramid etc. and want to quickly get up to speed with FastAPI then this course is ideal for you. It will also well-suit those who have used Ruby on Rails, Spring Boot, ExpressJS, CakePHP or other web development frameworks and know Python basics.",
      "target_audience": [
        "Hobby/Professional Software Engineers who know what a REST API is and want to get straight to the point",
        "Software engineers who have built things with frameworks like Flask/Django/Express/Spring Boot/Rails or similar"
      ]
    },
    {
      "title": "Building Web Applications with Django and PostgreSQL",
      "url": "https://www.udemy.com/course/building-web-applications-with-django-and-postgresql/",
      "bio": "Take Your Web Development Skills to the Next Level with Django and PostgreSQL",
      "objectives": [
        "Comprehensive coverage of Django web framework and PostgreSQL database",
        "Practical projects to apply concepts learned",
        "Hands-on experience with PostgreSQL as a database backend",
        "Best practices for structuring Django projects and securing web applications",
        "In-depth understanding of Django's ORM for database interactions",
        "Integration of third-party libraries and Import",
        "Real-world examples and use cases",
        "learn What is Generative AI for prompt engineering",
        "Participate in Practice test to test your learning skills"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Python programming",
        "Understanding of relational databases and SQL - optional",
        "Familiarity with web development concepts (HTML, CSS, and JavaScript) - optional"
      ],
      "description": "Master the art of web development with \"Building Web Applications with Django and PostgreSQL\", a comprehensive course that equips you with the skills to create dynamic, robust, and scalable web applications. Whether you’re a beginner or an aspiring full-stack developer, this course will guide you step-by-step through the development process using Django, a powerful Python web framework, and PostgreSQL, a versatile relational database.\n\n\nStart with the foundations of Django, including setting up a development environment, creating your first project, and understanding the Model-View-Template (MVT) architecture. Learn how to build models, manage views, and design templates to craft user-friendly web interfaces.\n\n\nDive into PostgreSQL integration to manage and query databases efficiently. Explore how to define relationships between models, handle migrations, and optimize your database for performance. You’ll also learn to implement advanced database operations and secure your data effectively.\n\n\nBy the end of the course, you’ll have the confidence to build end-to-end web applications, handle complex data interactions, and deliver seamless user experiences. Whether you're aiming for a career in web development or looking to bring your ideas to life, this course provides everything you need.\n\n\nEnroll now to unlock the potential of Django and PostgreSQL, and start building professional-grade web applications today!",
      "target_audience": [
        "Beginners Python Django developers curious about web application development",
        "Web developers who want to learn how to build web applications using Django and PostgreSQL",
        "Python developers who want to expand their skillset to web development",
        "Students or professionals looking to enhance their web development skills with Django and PostgreSQL."
      ]
    },
    {
      "title": "Build a Shopping App With Next.js + NestJS & Prisma",
      "url": "https://www.udemy.com/course/build-a-shopping-app-with-nextjs-nestjs-prisma/",
      "bio": "Learn how to build cutting edge web apps with Next.js and connect it to a scaleable NestJS backend",
      "objectives": [
        "Build a scaleable full-stack web application following best practices",
        "Use the modern Nextjs app directory approach to build a cutting edge performant UI",
        "Create Nextjs server components & actions for improved performance & security",
        "Build an enterprise grade backend using NestJS & Prisma ORM with a Postgres DB",
        "Implement a continuous delivery pipeline on AWS & Vercel to easily deploy our code into production",
        "Secure the UI & backend using industry-standard JWT authentication",
        "Use Prisma ORM to generate TypeScript types to reduce boilerplate & perform database migrations",
        "Utilize Material UI & Tailwind CSS to build beautiful components with ease",
        "Learn how to upload images to the filesystem & AWS S3 from a Nextjs UI",
        "Connect Stripe to collect payments and integrate webhooks to recieve realtime updates",
        "Integrate WebSockets to get real-time updates from the backend to the Nextjs UI",
        "Learn how to cache data with Nextjs fetch to avoid duplicating requests and achieve a blazing fast user experience",
        "Provision a custom domain & secure traffic with HTTPS"
      ],
      "course_content": {},
      "requirements": [
        "Intermediate experience with React",
        "Intermediate experience with Express/NodeJS backends",
        "Beginner experience with NestJS"
      ],
      "description": "This course will teach you how to build a modern Next.js app using the latest App directory approach. We will build a shopping app and learn all the core fundamentals of building a modern Next.js app. We will also connect the app to a NestJS backend and store data using Prisma ORM.\nThis architecture allows us to take advantage of the amazing performance & security features of Next.js with server-side rendering while still maintaining a clean scaleable backend using NestJS. By building a real working shopping app integrated with Stripe to accept payments we will go beyond the documentation & learn what it takes to build and deploy a full-stack web application to production.\nAdditionally, we will cover production deployment using AWS & Vercel to implement a continuous delivery pipeline and expose our application to the internet on a real working domain. This will ensure the app is automatically built & deployed with every commit without us having to do a thing.\nThe entire project will be protected with industry-standard JWT authentication so only authenticated users can access our application. We will utilize WebSockets to receive real-time updates from our backend whenever a new product is added or purchased. This will be facilitated with the usage of Stripe webhooks.\nBy the end of the course, we’ll have gone through the bulk of the Next.js documentation by building a real working app. You’ll be able to apply what you’ve learned to build your own modern full-stack app.",
      "target_audience": [
        "Intermediate full-stack developers who want to learn how to build incredible UIs with Nextjs & connect it to a NestJS backend"
      ]
    },
    {
      "title": "Building Applications with Angular 19 and ASP.NET Core 9",
      "url": "https://www.udemy.com/course/building-applications-with-angular-and-aspnet-core-v2/",
      "bio": "Use Angular, ASP.NET Core, Entity Framework Core, Material Design, JWT, Leaflet, to build a full application!",
      "objectives": [
        "Build Web APIs with .NET Core",
        "Develop Single-Page Apps with Angular",
        "Using Entity Framework Core to work with databases",
        "Create register and login functionality",
        "Deploy .NET Core and Angular apps"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML, CSS and C#"
      ],
      "description": "With ASP.NET Core we can develop Web APIs using C#.\nWith Angular we can create modern web applications without too many headaches.\nIn this course we will use both tools to create a project. We will make an application with a database, user system, back-end and UI, where you will put into practice the concepts learned in the course.\nWe will go step by step, both in the development of the front-end with Angular, and with the back-end in ASP.NET Core. You can take this course without having too much knowledge of both technologies. In fact, I will teach you the basics of these technologies throughout the course.\nAt the end we will publish our Angular application and our ASP.NET Core application.\nSome of the topics we will cover:\nDeveloping Web APIs with ASP.NET Core\nCreating a Database in SQL Server using Entity Framework Core\nUser system with Json Web Tokens (JWT)\nDeveloping a single page application (SPA) with Angular\nCreating reactive forms in Angular\nMaking HTTP requests from Angular to ASP.NET Core\nUsing Angular Material components\nUsing maps with Leaflet\nSaving spatial data in a database with NetTopologySuite\nAllowing users to upload images to be saved in Azure Storage or locally\nAutomatic tests in .NET and Angular\nUpon completing this course, you will have sufficient knowledge to face challenges involving ASP.NET Core and Angular applications.",
      "target_audience": [
        "Developers who want to be full-stack",
        ".NET Developers who want to learn Angular (and vice versa)"
      ]
    },
    {
      "title": "Redux JS - Learn to use Redux JS with your React JS apps!",
      "url": "https://www.udemy.com/course/redux-js-learn-to-use-redux-js-with-your-react-js-apps/",
      "bio": "Create React JS & Redux JS apps by going through the details. Build 3 React-Redux apps using ES6, APIs and NPM packages",
      "objectives": [
        "Build fantastic single page full-fledged React and Redux JS application.",
        "Build Applications that consume data from 3rd Party systems or Api's using web requests.",
        "Master fundamental concepts on how to structure your React JS and Redux JS applications",
        "Be a person who can talk about and explain Redux to other developers because you will know it very well.",
        "Deploy your React JS application on Cloud.",
        "You will go all the way from React js beginner to advanced React and Redux js developer.",
        "You will be able to debug your code and understand other developer's code.",
        "You will be able to design faster websites using React Js and Redux Js"
      ],
      "course_content": {},
      "requirements": [
        "Good understanding of React JS - There is a bonus section on getting started with React JS",
        "Basic knowledge of HTML, CSS, Javascript and Web Development",
        "Understanding of \"state\" and \"props\" in React",
        "Understanding Components management in React"
      ],
      "description": "*** Brand New Course Launched in August 2017 ***\n*** Learn React JS and Redux JS by creating 4 real world apps ***\n*** With more than 40,000 students and counting. Make sure to check out other courses by the instructor. ***\nDo you want to learn the number #1 programming language that is powering awesome User Interfaces of the internet?\nAre you tired of wasting your time and money on random youtube videos or React JS and Redux JS courses that are either too simple, or too difficult to follow?\nOr do you struggle to deeply understand and use React in real projects?\nOr are you someone who is curious to know and learn React.js along with Redux.js?\nIf your answer is a big YES... Then this is exactly the course you are looking for!\nRemember -\nThere is no formation without repetition!\n...\nWhy Should I take this course?\nIf you have seen the job market or job boards, you will know how popular React Js and Redux Js frameworks are for Single Page Web Development. As one of the most popular pairs of frameworks, learning React and Redux is a must. Simply put, learning React will open doors and jobs for you.\nHere is exactly what we cover in this course:\nAll the React JS and programming fundamentals: What is React? Who uses it? Adding React to your site.\nEverything you need to know in order to gain a deep understanding of how JavaScript works behind the scenes: React components, properties, state and parent/child relationship within React and more..\nHow to make React code interact with webpages: DOM manipulation. Learn how to select and change webpage elements, create new elements and handle DOM events. Accessing React DOM.\nThis is project-based, self-paced course that will get you started with coding your React Js and Redux Js apps.\nWe will start by learning the essentials of React JS concepts (this is an optional section for students who already know React JS) - We will also build a full-fledged React JS app, before moving on to Redux JS.\nNext, create your first Redux application to learn how to pair this elegant and complex framework with React.\nNext, build an application that uses an API along with routing for multiple pages and has more advanced redux mechanics.\nYou’ll not only learn React and Redux, but get comfortable with popular libraries like,  redux, react-redux, react-bootstrap, react-router-dom, and more. Plus, you will see how React js and Redux js work together with simple diagrams.\n...\nLet's now find out if this course is for you. It's a perfect fit if...\nStudent #1: You want to gain a deep understanding of the most popular programming front-end library in the world: React.js.\nStudent #2: You have taken other React.js and Redux.js courses but: 1) still don't really understand React and Redux, or 2) still don't feel confident to code real-world apps. This course is perfect for you!\nStudent #3: You are interested in using React and React-Native in your application to make it cross-platform, but don't know where to start. *I will also recommend, you start with my other React JS course*\nStudent #4: You want to get started with programming in general in the Javascript world. React.js is a great language to learn how to code the latest in the programming world.\n...\nNow it's your turn to decide. This is what you get:\n• Lifetime access to my HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• All videos are downloadable. Learn wherever you want, even without an internet connection!\n• Downloadable final code for each section.\n• My personal support in the course Q&A.\nSounds great? Then start learning today by clicking the “Take this course\" button right now, and join me in the only React.js and Redux.js course that you will ever need!\nI will See you in the Lectures!",
      "target_audience": [
        "Programmers looking to learn Redux JS",
        "Programmers who are looking to use Redux JS in their next full-fledged application",
        "A perfect student who wants to use React JS Responsibly.",
        "Programmers who have used React JS and are fed up with the state management"
      ]
    },
    {
      "title": "Build a Stock Market Web App With Node and Javascript",
      "url": "https://www.udemy.com/course/build-a-stock-market-web-app-with-node-and-javascript/",
      "bio": "Learn Web Development With Node JS - Javascript - and Express JS!",
      "objectives": [
        "Introductory Node",
        "How To Use API's In Your Node App",
        "How to Use Express JS for Static Webpages",
        "How to Use Handlebars for Dynamic Pages",
        "How To Get Stock Market Data For Your App",
        "Download and Install Node",
        "Basic CSS with Bootstrap 4.1",
        "How To Push Your App To Heroku for Webhosting"
      ],
      "course_content": {},
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser",
        "Prior Knowledge of Javascript is Helpful but not Necessary",
        "We'll Download Some Free Tools To Work With"
      ],
      "description": "Node and Javascript can seem overwhelming at first, but they don't have to be! In this course I’ll walk you through it step by step and you’ll be building your first web app in MINUTES. You’ll be amazed how quick and easy it is to create very professional looking websites, even if you have no programming or web design experience at all.\n\nWatch over my shoulder as I build a cool Stock Market app step by step right in front of you. You’ll follow along and build your own copy. By the time we’re finished, you’ll have a solid understanding of Node and how to use it to build awesome web apps.\nThe course contains 28 videos – and is just over 2 hours long. Watch the videos at your own pace, and post questions along the way if you get stuck. You don’t need any special knowledge or software to take this course, though any experience with Javascript, HTML, or CSS is a plus.  I’ll walk you through EVERYTHING.\nNode is a great web development tool and learning it has never been this easy.\nWhat We'll Build...\nWe'll build a cool Stock Market Portfolio app that let's you search stock ticker symbols by connecting to a third party API to collect stock market information about your stocks!\nWe'll style the website using the popular Bootstrap CSS framework (I'll show you how to use it!)\nSign up today and I'll see you on the inside!",
      "target_audience": [
        "This course is aimed towards beginners who want to learn the to build Websites with Node and Javascript",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "JavaScript for beginners: Create 27 projects from scratch",
      "url": "https://www.udemy.com/course/javascript-for-beginners-create-27-projects-from-scratch/",
      "bio": "Learn JavaScript with practical and useful step by step hands-on projects",
      "objectives": [
        "Install and use a text editor",
        "Understand Data Types",
        "Understand Variables",
        "Understand Constants",
        "Understand Arrays",
        "Understand Functions",
        "Understand Conditional statements",
        "Understand Arrow functions",
        "Use comments",
        "Build 27 projects"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use a computer at beginner level",
        "You should be able to use the internet at beginner level"
      ],
      "description": "JavaScript is the most popular scripting language in the world. It is responsible for the interactivity like games, online forms or surveys and other activities user’s can engage with on a website. Most dynamic if not all website contains some element of JavaScript.\nJavaScript programming language drives millions of interactive web sites, powers fast web servers and can even be used to build desktop and mobile applications\nIn this course we will together create 27 beginner JavaScript projects from scratch. The projects are listed below:\nAnalogue Clock\nMortgage| Loan Calculator\nQuote of the day app\nBMI Calculator\nWeight Coversion App\nTheme color changer\n2d breakout game\nDigital calculator\nDigital clock\nEvent countdown timer\nTip calculator\nWord count tool\nContact form\nDay of week app\nBackground color changer\nImage slider\nAddition game\nTodo List App\nInteractive Quiz App\nCountdown Timer\nBaloon Popping Game\nRRS NewsFeed\nNumber guessing game\nLight switch effect\nGreeting message\nHeight Conversion App\nWack a mole game\nIn this course you will learn useful and practical steps to creating web based browser apps that will work when viewed with any modern web browser. I will be using google chrome for this project and i advise you do the same.\nA good text editor makes writing code fun and productive.  I will be using  a mixture of text editors for this course  .\nBy the end of this course you will be confident to build more useful projects .",
      "target_audience": [
        "Beginner developers",
        "Beginner programmers",
        "Anyone who wants to learn JavaScript"
      ]
    },
    {
      "title": "Salesforce Fundamentals : A Complete Guide for Beginners",
      "url": "https://www.udemy.com/course/salesforce-fundamentals-a-complete-guide-for-beginners/",
      "bio": "Salesforce Completely Beginners Course. Everything You Need to Know to Start Using Salesforce Today",
      "objectives": [
        "Cloud Services",
        "Developer Account",
        "Apps",
        "Object & Tabs",
        "Fields",
        "Formula Fields",
        "Page Layouts",
        "Custom Page Layouts",
        "Record Types",
        "Validation Rules",
        "Profiles",
        "Permission Set",
        "Roles",
        "Data Management",
        "Classic Email Templates",
        "Workflows",
        "Approval Processes"
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience",
        "No Salesforce Experience"
      ],
      "description": "Learn the basics of Salesforce and start your journey to becoming a Salesforce professional.\nWelcome to \"Salesforce Fundamentals: A Complete Guide for Beginners,\" your comprehensive pathway to understanding and mastering the foundational aspects of Salesforce, the world's leading customer relationship management (CRM) platform. This course is designed for beginners who aim to grasp the fundamental concepts and functionalities of Salesforce.\n\n\nSalesforce is a powerful cloud-based platform that revolutionizes how businesses manage customer relationships, streamline processes, and drive growth. Whether you're an aspiring Salesforce administrator, consultant, or someone eager to understand CRM principles, this course is your gateway to unlocking the potential of Salesforce.\n\n\nThis course include-\nTypes of Services\nCloud Services\nDeveloper Account\nApps\nObject & Tabs\nFields\nFormula Fields\nPage Layouts\nCustom Page Layouts\nRecord Types\nValidation Rules\nProfiles\nPermission Set\nRoles\nData Management\nClassic Email Templates\nWorkflows\nApproval Processes\n\n\nEnroll once and enjoy lifetime access to the course materials, allowing you to learn at your own pace and revisit concepts whenever needed. This course covers the essential aspects of Salesforce, providing a solid foundation for beginners to build upon. Enroll now in \"Salesforce Fundamentals: A Complete Guide for Beginners\" and embark on your journey to understanding Salesforce's core principles and functionalities.\n\n\nDon't miss this opportunity to grasp the essentials of Salesforce and lay the groundwork for a rewarding career in the dynamic realm of customer relationship management!",
      "target_audience": [
        "Salesforce Administrator",
        "Salesforce Business Analyst",
        "Students who are looking to become Salesforce Developers"
      ]
    },
    {
      "title": "Ultimate Guide to FastAPI and Backend Development",
      "url": "https://www.udemy.com/course/fastapi-guide/",
      "bio": "Build REST APIs For The Modern Web. Learn FastAPI, SQLModel, OAuth2, Pytest, React and Docker",
      "objectives": [
        "Build a complete RESTful API for a delivery management system, adhering to best practices",
        "Define Pydantic models for request and response data validation, ensuring type safety",
        "Connect a FastAPI application to a SQL database (SQLite, PostgreSQL) and integrate with endpoints using dependency injection",
        "Operate on SQL database with SQLModel and define One-to-Many and Many-to-Many SQL Relationships",
        "Manage database schema changes with alembic migrations, upgrade, downgrade and auto-generate revisions",
        "Implement secure authentication using OAuth2 Scheme in a FastAPI application, including email validation, login/logouts and password resets",
        "Send Email and SMS notifications from a FastAPI application triggered by shipment events",
        "Integrate Celery with a FastAPI application to offload time-consuming tasks to a background worker from an API Endpoint",
        "Package a FastAPI Application with Docker and related services using Docker Compose",
        "Deploy a FastAPI Application along with other services"
      ],
      "course_content": {
        "Introduction": [
          "Curriculum Overview",
          "What are REST APIs?",
          "What is FastAPI?",
          "Why choose FastAPI?"
        ],
        "Getting Started": [
          "Installation & Setup",
          "Installation (MacOS)",
          "API Endpoint",
          "API Documentation"
        ],
        "Path Parameter": [
          "Type Hinting",
          "Function Decorator",
          "Path Parameter",
          "Route Ordering",
          "Simple Database"
        ],
        "Query Parameter": [
          "Introduction",
          "HTTP Exception",
          "POST Method",
          "Request Body",
          "Path & Query Parameters"
        ],
        "CRUD Operations": [
          "PUT Method",
          "PATCH Method",
          "DELETE Method"
        ],
        "Pydantic Model": [
          "Why use Pydantic?",
          "Model Fields",
          "Python Enum",
          "Response Model",
          "Different Models",
          "Tips & Tricks"
        ],
        "SQL Database": [
          "JSON",
          "What is SQL?",
          "SQLite Database",
          "Insert Row",
          "Fetch Row",
          "Primary Key",
          "Update Row",
          "SQL Query Parameters",
          "Database",
          "API Usage"
        ],
        "SQLModel": [
          "Overview",
          "Context Manager",
          "sqlmodel",
          "Database Engine",
          "Server Lifespan",
          "Dependency Injection",
          "Annotated Type",
          "Session Dependency",
          "Database Model vs API Schema"
        ],
        "AsyncIO": [
          "Synchronous Programming",
          "Async & Await",
          "Task",
          "Task Group"
        ],
        "PostgreSQL": [
          "Overview",
          "Installation",
          "Environment Variable",
          "Async Session",
          "API Router",
          "Service Layer",
          "Dependency Chaining",
          "General Tips"
        ]
      },
      "requirements": [
        "Python",
        "HTML/JS (Optional)"
      ],
      "description": "Unlock the Power of APIs with Python and FastAPI!\nReady to transform your Python skills into building blazing-fast, production-ready APIs? This hands-on course is your definitive guide to crafting high-performance APIs using FastAPI and Python.\nGo beyond theory and build a complete backend API for a real-world Delivery Management System. You'll master essential backend concepts like the request/response cycle, data modeling, databases, asynchronous programming, and dependency injection – all while leveraging the power of FastAPI's built-in features: asynchronous speed, automatic data validation, OpenAPI support, and exceptional developer productivity.\n\n\nPython\nEven though having a basic understanding of python is required, core language concepts like type hinting, decorator functions, context managers, async programming and others will still be covered.\n\n\nSQL Database\nWe will cover databases and SQL from the basics. Especially if you're a beginner, we will first learn the need for structured databases, what SQL is, how to define tables and write SQL queries.\nThen we will integrate a SQLite database manually with our FastAPI application and then leverage modern tools like SQLModel to define database table schema and FastAPI's powerful dependency injection to provide database session to API endpoints.\nAfter covering the essentials, we will move onto advanced concepts like asynchronous database (PostgreSQL), manage schema changes with alembic migrations, define one-to-many and many-to-many SQL relationships and link models.\n\n\nUser Authentication\nFastAPI has built-in support for OAuth2 Scheme. Implement secure user authentication with OAuth2 Password Flow and handle user signups, email verification of registered users, login, control access to endpoints with JWT, allow password resets and logout users.\n\n\nEmail and SMS Notifications\nIn our delivery management system, we will send email updates and sms to recipients on shipment updates. Like sending tracking links with email on order placed, shipment status updates, and sending verification codes or OTP as sms to recieve shipments.\n\n\nAPI Testing\nLearn the basics of the pytest - testing framework. Write and run simple tests, and use fixtures to manage test state. Then, write test for API endpoints with FastAPI's built-in test client.\nWe will cover required concepts when testing APIs like setting up test databases, overriding dependencies, authentication in test functions and automate testing with schemathesis.\n\n\nFrontend?\nAs a bonus, we will also cover frontend web development with React JS. Covering the essentials like components, state management, hooks, context providers and routing. Using modern and meme proof tools like Vite, Axios, React Router, Shadcn UI, and Tanstack React Query.\n\n\nDocker\nLearn the industry standard tool for packaging applications. We will cover the basics of docker and the essential concepts of containerisation. And run our API Server, PostgreSQL database, Redis and Celery background worker seamlessly with Docker Compose.\n\n\nIf you're a Python developer looking to create fast, reliable, and modern web APIs, and if you're eager to understand and build the backend yourself, then this course is your perfect starting point.\n\n\nJoin us in the first lesson and start building today!",
      "target_audience": [
        "Beginner Python Developers"
      ]
    },
    {
      "title": "Computer Science And Programming Fundamentals",
      "url": "https://www.udemy.com/course/fundamentals-of-computer-science-and-programming/",
      "bio": "Computer Science and Programming Fundamentals . Must know Computer Science And Programming Knowledge .",
      "objectives": [
        "1. To create important foundational knowledge base in computer science.",
        "2. To gain knowledge about computer science fundamental concepts.",
        "3. To Learn Basics of computer science and programming.",
        "4. To gain practical knowledge about computer hardware and software"
      ],
      "course_content": {
        "Introduction to Computer Science": [
          "What is a Computer Science - Part - 1",
          "What is a Computer Science - Part - 2",
          "Why should you select Computer Science as Career ?",
          "Computer Science – Evaluation as a Career Option",
          "Computer Science And Moore’s Law",
          "Applications Of Computer Science"
        ],
        "Introduction to Computer System": [
          "Introduction to Computer System",
          "Computer System - Input And Output Devices",
          "Computer System - Hardware and Software Components .",
          "Types Of Computer Systems .",
          "Computer System - Architecture ."
        ],
        "Computer and Binary Number System": [
          "What is Number System ?",
          "Types of Numbering Systems",
          "Why Binary Number System is Used For Computers ? .",
          "How Data is Represented in Binary ? .",
          "Introduction - Binary Code and Binary Units .",
          "Binary Number System and ASCII .",
          "Binary Number System and Logic Gates .",
          "Binary Number System and Boolean Algebra ."
        ],
        "Computer System - Memory Unit": [
          "Introduction - Computer System Memory.",
          "Why Computer System Needs Hierarchy of Memory ?",
          "Computer System - Memory Hierarchy",
          "Computer System - Memory Types .",
          "Computer Primary Memory ( Main Memory ) - RAM .",
          "Computer Secondary Memory ( Permanent Memory ) - Disk Memory .",
          "Computer System - Memory Organization .",
          "Computer System - Read Only Memory ( ROM ) ."
        ],
        "The Computer System Memory - RAM": [
          "What is Random Access Memory ( RAM ) ? .",
          "Why Computer System needs RAM ?",
          "Types of Random Access Memory ( RAM ) .",
          "RAM And Instruction Cycle .",
          "Computer System - Virtual Memory .",
          "How Operating System Implements Virtual Memory ? ."
        ],
        "The Computer System - Cache Memory": [
          "What is a Computer System Cache Memory ?",
          "Why Computer System needs a Cache Memory ?",
          "Types of Cache Memory in Computer System .",
          "Computer CPU Performance And Cache Memory ."
        ],
        "The Computer System CPU - Microprocessor": [
          "What is a CPU ( Microprocessor ) ?",
          "What are different components of CPU ?",
          "What is the main function of CPU ?",
          "How CPU Executes a Computer Program ?",
          "What is a Program Instruction ?",
          "What is an CPU Instruction Cycle OR Machine Cycle ?",
          "CPU Instruction Cycle - Step by Step Execution",
          "CPU Types , Speed and Performance"
        ],
        "The Computer System - CPU Registers": [
          "What are Computer System CPU Registers ? .",
          "Why CPU Needs Registers ?",
          "Types of CPU Registers .",
          "Functions of different CPU Registers ."
        ],
        "The Computer System - CPU Clock": [
          "CPU Clock And Program Execution .",
          "What is a CPU CLOCK ?",
          "CPU Performance and Clock Speed ."
        ],
        "The Computer System - Motherboard": [
          "What is a Motherboard in Computer ?",
          "Computer System - Motherboard Components - Part 1",
          "Computer System - Motherboard Components - Part 2",
          "Computer System - Motherboard Expansion Slots .",
          "Computer Motherboard Chipset - Northbridge And Southbridge ."
        ]
      },
      "requirements": [
        "No prior knowledge or experience required for this course incomputer science and programming fundamentals ."
      ],
      "description": "This is the most comprehensive  and unique  computer science course which will give you in depth understanding of most important fundamental concepts in computer science And Programming . This course is specifically designed for anyone who aspires to be a computer science professional ( programming , hardware , web development )  . You could be a budding programmer , hardware engineer or computer professional interested in enhancing the depth of your knowledge . This  course  will  has been  designed to arm you with most important  foundational  concepts and  knowledge  in  computer  science which every computer professional  is expected to know irrespective of which field in computer science you may choose in future .\nComputer science is  inherently  an interdisciplinary science and therefore It is important for every computer professional to have a good understanding of the fundamental concepts in computer science no matter  which  programming language or any other stream  you may choose as career option .\nEach  concept  has been discussed in detail with the help of  graphics  and multimedia  to facilitate  your understanding . Computer science is full of  technical jargon and  therefore  all the topics have been presented  in a most simplified language to ease your learning curve .\nAfter  completing this  course, you will have the critically important foundational knowledge to confidently learn any programming language or any other course in computers . This course is ideal as a both a study tool and an on-the-job reference .\nThis course comes with a 30 day money back guarantee! If you are not satisfied in any way, you'll get your money back.\nSo what are you waiting for ?  Let  your professional career take off  on the solid foundation . I am sure , this  course will give competitive edge  , confidence  and knowledge base  to master any subject in computer science.",
      "target_audience": [
        "Students interested in learning Fundamental Concepts in Computer science And Programming.",
        "Beginners who have never programmed before .",
        "Programmers interested in learning all fundamental concepts in computer science and programming.",
        "All computer professionals who want to be updated on fundamentals of computer science and programming."
      ]
    },
    {
      "title": "React Hook Form: The Complete Guide with React (2025)",
      "url": "https://www.udemy.com/course/react-hook-form-the-complete-guide-with-react-js/",
      "bio": "Master React Hook Form for building performant, flexible and extensible React forms.",
      "objectives": [
        "Creation of performant, flexible and extensible forms in React",
        "Learn A - Z about React Hook Form library",
        "Reduction of boilerplate code in creating React forms with best practices",
        "Validation of React forms with built-in easy-to-use validation methods",
        "Interdependent field validation",
        "Asynchronous validation in React forms",
        "Form submission & re-population with already submitted data",
        "Creation of reusable react components for form creation",
        "Dynamic generation of form fields in React",
        "CRUD Operations in data grid or Inline table editor using React Hook Form",
        "Form state indications, like validation error, submit count, etc.",
        "Restricting of re-rendering of sub-components when possible (Isolated Re-rendering)",
        "Subscription to form fields and form state indications",
        "Seamless integration of React Hook Form with React UI components like Material UI,Ant-Design, etc.",
        "Integration of React Hook Form with schema validators like Zod,Yup, etc."
      ],
      "course_content": {
        "Welcome Aboard!": [
          "Course Preview",
          "Course Structure",
          "Introduction to React Hook Form",
          "How to Navigate Course Resources ?",
          "Where Can I Find More Assistance?"
        ],
        "What’s Wrong with Normal Form Creation?": [
          "Let's Start from Scratch",
          "Difficulties with Normal Ways of Creating React Forms",
          "Let’s Start Using React Hook Form"
        ],
        "Fundamentals of RHF": [
          "How to Register a Form Control?",
          "Performance Gain in RHF Vs Normal Form",
          "Pass Default Values to the Entire Form"
        ],
        "Validation in RHF": [
          "Define Validation Rules",
          "How to make use of Validation?",
          "Define Custom Validation"
        ],
        "Organizing the Form with Reusable Components": [
          "Reusable Components for Input Fields",
          "Add a Dropdown List with RHF"
        ],
        "Nested Form Fields & Reusable Form Components": [
          "Nested Form Field in RHF",
          "useFormContext for Reusable Forms",
          "Divide Complex Forms into Subtle Components"
        ],
        "Form State Properties & Isolated Re-rendering": [
          "Introduction to Form State",
          "Form Submission Related State Properties",
          "Isolated Re-rendering with useFormState",
          "useFormState with control",
          "Be Specific with getFormState Method"
        ],
        "Listen or Watch Form Control Values": [
          "How to Watch Form Control Values",
          "useWatch hook for Isolated Re-rendering",
          "getFieldValues() & setValue()"
        ],
        "Dynamically Generated Fields": [
          "Let’s Start with Array of Fields",
          "useFieldArray Hook",
          "CRUD Operations within Field Arrays",
          "Validation of Field Array"
        ],
        "A Practical Inline Table Editor or Data Grid": [
          "Dropdown List in an Inline Editing Table",
          "Ensure Proper Data Type from Form Controls",
          "How to Deal with Interdependent Properties",
          "Calculate the grand total"
        ]
      },
      "requirements": [
        "Basics of React - Knowing components, props, and state makes you ready for the course!",
        "Don't worry about the rest, enough explanations are given when necessary."
      ],
      "description": "Welcome to the Course \"React Hook Form : The Most Popular React Form Library\".\n\n\nAre you frustrated with typical ways of creating React Forms?\n\n\nSpending more time preventing the default behaviors of HTML forms.\nManaging entire form data with state variables leads to poor performance.\nImplementation of custom requirements necessitates from-scratch development.\netc.\n\n\nUndoubtedly, the React Framework is an exceptional JavaScript framework that outperforms its competition at doing many things, but one thing it's bad at out of the box is building forms. You must have experienced it already. so there comes the most popular React Form library, React Hook Form.\n\n\nReact Hook Form is a form library for React applications that makes it really easy for you to build scalable and flexible forms with better performance. It makes working with React Forms a lot smoother and easier.\n\n\nApart from being a more straight-forward solution to the basic needs of a form like\nManaging form data\nEnforcing validation\nRealtime validation feedbacks\nSubmission of form data\nReact Hook Form delivers the following promising features:\nPerformant, flexible & extensible forms\nBuilt-in easy-to-use validations\nDynamic generation of form fields\nIsolated re-rendering for refreshing a sub component without affecting the other.\nSubscription to form field values and states.\nSeemless integration with React UI Components like Material UI, Ant-Design & React-Select.\nIntegration with Schema Validators like Zod, Yup, etc.\nAnd these integrations definitely facilitate app development, and they also help in bringing advantages from other wonderful packages or libraries in various aspects of form creation.\n\n\nThis course will teach you all you need to know about the library React Hook Form, from Zero to Hero.  Everything is discussed and demonstrated with real-world projects in React. We developers always come up with better solutions for others why don't we try, React Hook Form library to make our job easier.\n\n\nJoin me now! and acquire the superpower of building better React forms in less-time.",
      "target_audience": [
        "To all React developers because forms are crucial part of any application",
        "To any React developer who want to speed up his work flow",
        "To anyone who fed up with tedius aspects of Typical React form creation",
        "To Any React developer looking to building performant forms"
      ]
    },
    {
      "title": "DjangoFlix - Build a Netflix-Like Service in Django & Python",
      "url": "https://www.udemy.com/course/djangoflix/",
      "bio": "Learn advanced Django concepts to build better & more resilient web applications.",
      "objectives": [
        "Django Proxy Models",
        "UnitTesting Models & Proxy Models",
        "Techniques for building the fundamentals of a Netflix-like service (except the actual video streaming)",
        "Implementing a 5-Star Rating in Django alone",
        "Generic Foreign Keys & Generic Relations for flexible model relations",
        "Implementing Tagged Items & Categories for Improved Content Discovery",
        "Creating the conditions for a machine learning model (the way the data is structured)"
      ],
      "course_content": {},
      "requirements": [
        "30 Days of Python (or equivalent python experience)",
        "Try Django (or equivalent Django experience)",
        "You know how to implement classes, functions, variables, iterators, and more in Python"
      ],
      "description": "This is not a Netflix clone and not even close. Why? Netflix is a complex system of engineer that no one class could ever fully cover. If I told you that you could build a Netflix clone in less than 40 hours, I would be lying to you.\n\n\nInstead, this is a foundation of what a Netflix-like service could be. This foundation only matters as it serves a roadmap to understanding Django on a whole new level.\n\n\nDjango is the most popular web framework in the world written in Python and for good reason: Django is incredibly simple and incredibly complex.\n\n\nModels, Views, Forms, User Auth and Templates are fundament to Django. After completing one of my Try Django series, you'll see that creating rich web applications is, well, pretty simple.  Models map to database tables. Views essentially handle a url and render templates. Forms help validate data and templates are essentially HTML with a little programming built it.\nIf the paragraph above is unclear, this course is not for you.\n\n\nDjango's complexity comes with the layers of abstraction you can start to build within your projects. To me, these layers come from Generic Foreign Keys & Proxy Models.  The complexity on the surface might be intimating (it was for me) but after you get familiar with them you'll come to find their complexity to be less daunting and potentially, no longer complex.\n\n\nThe goal of this course is to introduce your to a number of concepts you may have never seen before while building the foundation for a service that could potentially grow into Netflix.\n\n\nHere's some topics we'll cover:\nProxy Models\nGeneric Foreign Keys\nGeneric Relations\nAutomated Unit Testing\nManyToMany Fields vs Foreign Keys vs Generic Foreign Keys\nThrough models for ManyToMany\nReverse Relationships\nCreating a Rating System (user ratings)\nComplex Search Lookups with Q Lookups\nRe-usuable model receiver functions\nCustom template tag for rending a rating form\nand much more",
      "target_audience": [
        "Django Developers looking for a deeper dive into Django Model Capabilities",
        "Beginner Django Developers needing to better understand Testing in a practical use case."
      ]
    },
    {
      "title": "GraphQL with React: Build Real World Graphql Projects",
      "url": "https://www.udemy.com/course/graphql-with-react-build-real-world-graphql-projects/",
      "bio": "Learn GraphQL by building real web apps with React JS, NodeJS and MongoDB. Build react graphql projects from scratch!",
      "objectives": [
        "Learn the GraphQL language, how to write queries and mutations both on the client and the server",
        "Understand how to use and set up Apollo Client within React applications",
        "React Hooks, also using latest Apollo GraphQL Hooks for Queries Mutations",
        "GraphQL Server with Node Express MongoDB",
        "Realize the power of building flexible data schemas",
        "Learn graphql for web development, front end web development",
        "Learn react graphql for web development",
        "Learn full stack web development using graphql, react js",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstra",
        "The good news is that web development generally uses light-weight code that is easier to learn than many other languages.",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, Mongodb",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "What is React? React is a front-end library in Javascript that was developed by Facebook",
        "The simplest definition of React is that it is a user interface library used for building UI components for the web.",
        "What is React used for? React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard"
      ],
      "course_content": {
        "Intro to GraphQL, Graphql react projects for Web development": [
          "Introduction to Graphql, React JS",
          "GraphQL Project Files",
          "FAQ About Full Stack Web Development, React JS, Graphql"
        ],
        "Let's start to Graphql": [
          "GraphQL Overview",
          "Which Technologies Are We Going to Use in This Graphl Course?",
          "How to Make Queries on Graphiql?",
          "Quiz - Graphql, React Graphql",
          "Quiz Web development with React Graphql, Graphql Node, Graphql"
        ],
        "Initial Setups for GraphQL Server": [
          "Setup Express App and Nodemon",
          "GraphQL Setup",
          "Setting Up GraphQL Schema"
        ],
        "Building GraphQL Server": [
          "Root Query",
          "Handling Resolve Function",
          "Graphql Setup and Testing Queries",
          "GraphQL ID Type",
          "Creating Author Type",
          "Relationship Between Types in Graphql",
          "GraphQL List",
          "Adding More Queries"
        ],
        "Setting Up MongoDB": [
          "Database Setup in Mongodb",
          "Connecting App to Database",
          "Creating Mongoose Models and Schema"
        ],
        "GraphQL Mutations": [
          "Mutations in GraphQL",
          "Adding More Mutations",
          "Refactor Resolve Functions",
          "GraphQL NonNull",
          "Quiz Graphql project"
        ],
        "Building Frontend": [
          "Frontend Setup in React graphql",
          "Create-React-App",
          "Creating MovieList Component",
          "Setting up Apollo Client"
        ],
        "Making Queries with React and GraphQL Hooks": [
          "Making Queries with React",
          "Rendering Data in a Component",
          "Creating AddMovie Component",
          "Storing Queries in External File",
          "How to Update Component State",
          "useMutation Hook",
          "Assigning Form Values to Query Variables",
          "Refetching Queries",
          "Creating MovieDetails Component",
          "Making a Single Movie Query"
        ],
        "Extra": [
          "GraphQL with React: Build Real World Graphql Projects"
        ]
      },
      "requirements": [
        "A basic understanding of Javascript",
        "A basic understanding of React",
        "Must be familiar with main technologies like Node, React, MongoDB",
        "Desire to learn graphql for web development, front end web development",
        "Desire to learn react graphql",
        "Desire to learn graphql project",
        "Desire to learn react project with node js, express js, mongodb",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to GraphQL with React: Build Real World Graphql Projects course\nLearn GraphQL by building real web apps with React JS, NodeJS and MongoDB. Build react graphql projects.\nGraphQL is an API query language from Facebook, designed to describe the complex, nested data dependencies of modern web applications whereas Apollo is an open-source GraphQL toolkit. It is quickly becoming the standard for API development. Graphql, graphql react, apollo graphql, react graphql, graphql node, vue graphql, react native graphql, apollo graphql, graphql react, fastapi, hasura, nestjs, react hooks, react, redux framework\nThis hands-on course gets you started with the basics of GraphQL, its various features, and its differences from REST. Then you will step ahead to learn the implementation of GraphQL and React using a relay for networking with the latest technologies and working examples & also create truly decoupled clients and servers. Moving further, you will learn to build an end-to-end full-stack application as well as how to overcome challenges & problems and fix them via GraphQL's unique features by testing your application's frontend and backend.\nLearn GraphQL from absolute scratch along with React Node MongoDB (Full Stack / MERN Stack).\nIn this course, you learn GraphQL from Scratch in a fun and easy learning environment\nYou will learn GraphQL from the very beginning\nLearn to build Apollo GraphQL Server with Node Express and MongoDB\nLearn to build Apollo GraphQL Client with React hooks and Firebase\nBuild frontend using latest Hooks from React and Apollo Client\nTons of real-world skills (Performing GraphQL Queries, Mutations)\nGain theoretical and practical knowledge necessary to build your next big GraphQL Project with MERN Stack\nA most up-to-date course that uses 100% React Hooks, and Latest Apollo GraphQL Hooks for performing Queries, Mutations.\nWeb development with react graphql\nGraphql, graphql react\nApollo, apollo graphql\nReact, react graphql\nFront end web developer for graphql, react, react graphql\nMongoDB for Graphql\n\n\nUsing a practical approach, you'll understand the benefits of using GraphQL on your client, engine, and server and use React for the backend in your stack. You'll cover challenges and problems and fix them via GraphQL's unique features. After your stack is complete, you will test your application's frontend and backend. By the end of the course, you will be proficient in using GraphQL and React to all your full-stack development requirements.\nReact is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from.\nAt the end of the course\nBy the end of the course, you will be able to build amazing GraphQL projects\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better front-end web developer. You will always have up-to-date content for this course at no extra charge.\nWhat is Web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mock up their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nGraphQL with React: Build Real World Graphql Projects\nWe offer full support, answering any questions.\nSee you in the class!",
      "target_audience": [
        "React Node Developers looking to learn GraphQL from Scratch",
        "This course is for anyone who is in the software industry.",
        "People who want to learn graphql for web development",
        "People who want to learn graphql for full stack web development",
        "People who want to create react graphql project with redux, hooks and context"
      ]
    },
    {
      "title": "Yii 2: From Beginner to Expert",
      "url": "https://www.udemy.com/course/yii-2-from-beginner-to-expert/",
      "bio": "Transform yourself into a Yii 2 wizard: Comprehensive and hands-on course for all levels",
      "objectives": [
        "Build websites and web applications using Yii 2",
        "Develop a website with an admin panel",
        "Become a digital nomad by working as a freelance web developer",
        "Master Gii, a magic tool that writes code for you",
        "Learn how to use Yii 2's Basic App Template",
        "Learn how to use Yii 2's Advanced App Template",
        "Deploy Yii 2 web applications using Docker and Docker Compose",
        "Migrate a Yii 2 Basic app to a Yii 2 Advanced app",
        "Database Migrations",
        "Develop Modules"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of PHP and Relational Databases"
      ],
      "description": "This course requires you to download Docker Engine and Docker Compose from the official Docker website.\nIf you are a Udemy Business user, please check with your employer before downloading software.\n\n\nWelcome!\nIn this course, you will learn how to develop amazing web applications and websites using Yii 2, one of the best PHP frameworks out there.\nYii 2 is a fast, secure, and efficient PHP framework that works right out of the box. Yii gives you the maximum functionality by adding the least possible overhead and provides built-in tools to write solid and secure code. Yii 2 enables you to write more code in less time with simple, yet powerful APIs and code generation using Gii. With Gii, you'll be able to develop CRUD operations (create, read, update, and delete records) in just a few minutes per database table! You will be astonished at how quickly you can develop full-fledged apps with automatically generated code that's easy to understand and change.\nThis course covers everything from very basics to advanced topics of Yii 2:\nSetting up the Development Environment\nYii 2's Basic App Template\nYii 2's Advanced App Template\nMVC - Model View Controller\nCreating a Database in MySQL\nDatabase Migrations\nGenerating Code with Gii\nModules\nFilters\nWidgets\nSecurity: Authentication and Authorization\nInternationalization (i18n)\nDeployment using Docker and Docker Compose in a Linux Server\nPractical Examples of How to Build:\nA Standard Website or Web App\nA Website with an Admin Panel\nIf you have very little experience with PHP or Yii, do not worry, because I will guide you step-by-step, providing detailed explanations on how to develop web applications using Yii 2.",
      "target_audience": [
        "Complete beginners with no prior experience with Yii 2.",
        "If your looking to take your Yii 2 skills from beginner to advanced level and beyond, then take this course.",
        "If you are switching from Yii 1 to Yii 2 then this is a fast-track way of doing it."
      ]
    },
    {
      "title": "5 Courses - Master AWS, Analytics, Machine Learning, Bigdata",
      "url": "https://www.udemy.com/course/5-courses-master-aws-analytics-machine-learning-bigdata/",
      "bio": "Cloud Compute, Database, Security, Containers, Migration, data science, Database, Kinesis, Glue, Hadoop, Spark",
      "objectives": [
        "Underastand Amazon Web Services, Migrate to Amazon Cloud, Machine learning and Data science"
      ],
      "course_content": {},
      "requirements": [
        "Just basic computer knowledge to unleash the power of Cloud to rollout Awesome Amazon Web Services"
      ],
      "description": "5 courses pack including below topics.\n# Course Lectures Duration (hh:mm:ss)\n1 AWS - Cloud Services 27 05:38:02\nElastic Beanstalk,   ELB, ECS, EKS, Dynamo DB, Migration Hub\n2 AWS - Data Analytics 10 02:38:08\nAWS Analytics and Data Lakes, Amazon Athena - Interactive query service, Amazon CloudSearch - Managed search service, Amazon Elasticsearch Service, Amazon Kinesis - Data Streams, Amazon Redshift - Data warehousing\nAmazon QuickSight - Business Analytics Intelligence Service, Amazon Data Pipeline - Automate data movement, AWS Glue – Managed ETL Service\n3 BigData and Hadoop framework 14 01:20:13\nBig data introduction, history, technologies, characteristics and Applications\nData Lake, Data science and Data scientist\nHadoop introduction, HDFS-Overview, Hadoop Architecture, assumptions and goals\nDemo-Hadoop install - sw download verify integrity,  Java ssh configure,  Hadoop access by browser\n4 Machine Learning 00:32:19\nIntroduction,   Algorithms, Softwares\n5 AWS Machine Learning 14 02:06:00\nBigdata and AWS, Hadoop on Amazon Elastic Map Reduce  -   EMR, Amazon EMR,   Amazon EMR Architecutre, TensorFlow - Open source Machine Learning framework, Amazon SageMaker - TensorFlow Part 1 & 2, AWS Deep Learning AMIs, AWS Translate - Natual language translation, Amazon Polly - turn text to speech, Apache MXNet - Deep learning framework\nTOTAL < 68 Lectures > 12hours 15min",
      "target_audience": [
        "For all those who is interested in learning about cloud Infrastructure, want to reap the benefits of migrating to AWS"
      ]
    },
    {
      "title": "Back to School Web Development and Programming Bundle",
      "url": "https://www.udemy.com/course/back-to-school-web-development-and-programming-bundle/",
      "bio": "This course has 42 hours of content!",
      "objectives": [
        "To learn HTML",
        "To learn HTML 5",
        "To learn CSS",
        "To learn CSS3",
        "To learn C++",
        "To learn C#",
        "To learn jQuery",
        "To learn Game Salad",
        "To learn Stencyl",
        "To learn great development techniques",
        "Learn how to make apps in Xcode",
        "Learn how to make games in Construct 2",
        "Learn adobe illustrator"
      ],
      "course_content": {},
      "requirements": [
        "An internet connection",
        "Google Chrome (Free Web browser)"
      ],
      "description": "It's that time of year again, you want to learn a new skill. But you don't want to learn just any skill you want to learn an in demand skill. Programmers make on average 80k a year and they are in constant demand. This course is the perfect entry point to a better career! In this course you get to learn about HTML, HTML5, CSS, CSS3, C++, C#, JavaScript, jQuery, GameSalad, Xcode, Construct 2, Adobe illustrator, and Stencyl. Stencyl and game salad are visual programming languages. With these engines you can upload to the app store, android marketplace and more! This course has 42 hours of content and is a real bargain.",
      "target_audience": [
        "Complete beginners",
        "People who have never coded before"
      ]
    },
    {
      "title": "Python Microservices: Breaking a Monolith to Microservices",
      "url": "https://www.udemy.com/course/python-microservices/",
      "bio": "Break a Python Django Monolith into Microservices with Apache Kafka and Event-Driven Architecture",
      "objectives": [
        "Event Driven Architecture with Apache Kafka",
        "Multiple Database Connections",
        "Internal Http Requests",
        "Run Docker with multiple networks",
        "Import Data from multiple databases",
        "Use Kubernetes",
        "Deploy to Google Cloud Platform"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Monolith": [
          "Setup",
          "Stripe Keys",
          "Exploring the Code",
          "Monolith vs Microservices"
        ],
        "Email Microservice": [
          "Email Diagram",
          "Setup",
          "Kafka Setup",
          "Confluent Cloud CLI",
          "Consuming Kafka Messages",
          "Producing Kafka Messages",
          "Sending Emails"
        ],
        "Users Microservice": [
          "Users Diagram",
          "Setup",
          "Importing Data",
          "Moving Views",
          "Register",
          "Login",
          "Authenticated User",
          "User Token",
          "User Service",
          "Ambassadors",
          "Middlewares",
          "Removing the User",
          "External Networks",
          "Scopes"
        ],
        "Admin Microservice": [
          "Admin Diagram",
          "Setup",
          "Importing Data",
          "Moving Views",
          "Admin Consumer",
          "Admin Queue",
          "Listeners"
        ],
        "Ambassador Microservice": [
          "Ambassador and Checkout Diagram",
          "Setup",
          "Importing Data",
          "Importing Views",
          "Using Kafka",
          "Syncing Data",
          "Handling Errors"
        ],
        "Checkout Microserice": [
          "Setup",
          "Importing Views",
          "Using Kafka",
          "Testing"
        ],
        "Kubernetes & Deployment": [
          "Kubernetes",
          "Pods",
          "Environment Variables",
          "Kompose",
          "Secrets",
          "Google Kubernetes Engine",
          "Google Cloud Shell",
          "Google Cloud SDK",
          "Google Container Registry",
          "Cloud SQL",
          "Users Kubernetes Files",
          "Users Deployment",
          "Ingress",
          "Database Private IP",
          "Force Script Name",
          "Admin Setup",
          "Admin Kubernetes Files",
          "Admin Deployment",
          "Ambassador Setup",
          "Ambassador Kubernetes Files",
          "Ambassador Deployment",
          "Checkout Setup",
          "Checkout Kubernetes Files",
          "Checkout Deployment",
          "Testing the Frontend"
        ]
      },
      "requirements": [
        "Good understanding of Python"
      ],
      "description": "Welcome to Python and Kafka: Breaking a Monolith to Microservices Course - the course that will take your Python development skills to the next level.\nHere are some interesting facts:\nThe average Django developer salary in the US is $100k\nHowever:\nThe average Kafka developer salary in the US is $126.750\nThe average Microservices developer salary in the US is $134,546\nThis means if you are a Django developer you have the potential to increase your salary by up to 35% just by purchasing this course!\n\n\nHow this course works\nThis course will start with a pre-built monolith, the building of the starting app won't be covered in this course. So in this course, you will start immediately with Microservices Architecture, this course is intended for people that have a solid understanding of Python and Django and want to learn in a short amount of time more advanced concepts. I am very clear and precise in my way of teaching so this course won't have unnecessary explanations on my part, I will explain what is needed when it is needed.\nIf you are interested in learning how the Monolith is created you can check my other courses:\nAngular Material, Universal & Django: A Rapid Guide\nReact, Next.js and Django: A Rapid Guide - Advanced\nVue 3, Nuxt.js and Django: A Rapid Guide - Advanced\nIn those courses, you will learn how to build a SPA with your favorite frontend framework.\n\n\nWhat you will learn in this course\nIn this course, you will start with a pre-built monolith and you will learn:\nWhat is the Microservices Architecture\nHow to Configure Kafka with Python\nInternal Http Requests\nHow to make a Microservice only for Authentication Purposes\nRun Docker with multiple networks\nProduce Kafka Events to multiple topics\nCreate Custom Middlewares & Services\nImport Data from multiple databases\n\n\nAbout Me\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Python developers curious about the Microservices Architecture"
      ]
    },
    {
      "title": "JavaScript 101: JavaScript for absolute beginners",
      "url": "https://www.udemy.com/course/javascript-tutorial/",
      "bio": "Learn how to code in JavaScript even if you've never written any JavaScript in your life.",
      "objectives": [
        "JavaScript",
        "Programming fundamentals",
        "Moderns JavaScript concepts like let, const, forEach functions, fat arrow functions and more",
        "Moderns JavaScript concepts like template literals, object literals and more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting started": [
          "Getting your hands dirty with your first line of JavaScript",
          "What is JavaScript?",
          "You need a text editor. Let's go get one",
          "Your personal coding playgrounds",
          "JavaScript syntax"
        ],
        "Coding with JavaScript": [
          "Console logging",
          "Debugging external files",
          "Storing data in variables",
          "Let and Const variable types",
          "Coding comments",
          "JavaScript operators",
          "Data structures",
          "Conditional statements",
          "The Document Object Model (The DOM)",
          "Selecting elements by their IDs",
          "JavaScript objects",
          "String methods",
          "Demystifying data types",
          "Casting data types",
          "String concatenation",
          "JavaScript numbers",
          "JavaScript arrays",
          "Array iteration",
          "Selecting multiple DOM nodes",
          "Functions: The DRY principle",
          "Functions: Re-using code",
          "Functions: The rest operator",
          "Objects with functions",
          "Final project"
        ],
        "Summary": [
          "Summary"
        ]
      },
      "requirements": [
        "You should know a little HTML and CSS"
      ],
      "description": "JavaScript 101: JavaScript for absolute beginners\nIf you have never written any JavaScript, this course is absolutely for you.\nWe're going to get started at the very beginning, even if you don't have a code editing program installed on your computer.\nThe short version:\nLook, here's the short version:\nIf you are interested in learning JavaScript from scratch, this is the course for you. Try it out on Udemy, there's nothing to lose if you don't like it.\nBeginner friendly:\nThis course is designed for beginners. You should already know some HTML and a little CSS at this point and that will make learning JavaScript a lot easier.\nJavaScript is nothing like HTML or CSS though because JavaScript is a REAL programming language, whereas HTML and CSS are not programming languages.\nModern JavaScript included:\nJust because this is a beginner-friendly course doesn't mean you shouldn't learn the ins-and-outs of modern JavaScript. You will learn about modern JavaScript concepts such as:\nlet/const variables\ntemplate literals\nfat arrow functions\nforEach function-based loops\nobject literals\nnode selectors and query selectors\nand much more\nPractice:\nThere is A LOT of practice (hands on coding) in this course. And you'll be writing code from the very first lesson!\nPlus there's a very interactive project at the end of this course.\nIn this course you will learn these major concepts:\nJavaScript syntax\nWhere to put your JavaScript and how it affects your page\nHow to debug your JavaScript using developer tools (Inspect tools, console logging, and more)\nStoring variables with var, let, and const JavaScript variable types (Variables)\nHow to tell a computer what to do based on certain circumstances (Conditionals)\nThe Document Object Model (DOM)\nMaking custom sentences with string concatenation and template literals\nData types and structures and why they're important (Data structures)\nHow to make lists and take an action on every item in that list (Iteration)\nHow to select elements on your web page and change them\nFunctions, function parameters, and how to use JavaScript rests\nFinal Project:\nLastly, there's a final project that will make use of almost everything you will have learned in this course.\nRequirements:\nTo start learning JavaScript you should know a little HTML and CSS. These aren't hard requirements, but I strongly suggest knowing the basics of HTML and CSS before learning JavaScript.\nJavaScript is how you make your page interactive, so you'll need to know how to make a basic webpage first.\nBasic HTML\nBasic CSS\nWho is JavaScript 101 for?\nIf you've never written any JavaScript in your life, this course is for you.\nIf you just finished learning HTML and CSS, this course is for you.\nIf you want to learn modern JavaScript in an easy way, this course is for you.\nIf you want lots of hands on practice writing JavaScript, this course is for you.\n––\nIf you already know JavaScript, this course is NOT for you.\nIf you know about features such as fat arrow functions and object literals, this course is NOT for you.\nIf you already know how to manipulate the DOM using JavaScript, this course is NOT for you.\nTestimonials\nI've produced several JavaScript courses with a total of over 80,000 JavaScript students. Here are what some of them have to say about my other courses (and you can trust this course will be even better because it's new!)\n\"Almost there. A lot to learn and Kalob makes it easy and interactive with the video and files. But he also pushed you to try it on your own for homework and mini projects.\"\n\"Its a great course! Love the way Kalob teaches, very clear understanding. Thank you for this course, really needed something like this.\"\n\"It was a great, this is the first time to find Java Script easy to learn\"\n\"I have a computing degree (4years), none of my teachers were this clear!! Thank you\"",
      "target_audience": [
        "Aspiring web developers",
        "Frontend web developers",
        "Web developers who want to make their sites more interactive"
      ]
    },
    {
      "title": "HTML5 and CSS3 Bootcamp 2021",
      "url": "https://www.udemy.com/course/complete-html5-and-css3-course-1-start-to-finish-project/",
      "bio": "Complete Web Development in HTML5 and CSS3 in 2021 Feb + Websites Project from Start to End!",
      "objectives": [
        "You will learn the complete Html5 and CSS3",
        "You will learn how to make a website professionally",
        "After this course you are able to code your own website",
        "After this course you have a lot of knowledge of web designing and you can get a job",
        "You will get the 94 lecture of 8.5 hours content.",
        "You will be able to ask any type of question. i will answer it.",
        "You will be able to design your own website. if you stuck at any point. i will help you"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Html basics": [
          "Setting up notepad++",
          "Things keep in mind",
          "Html page structure",
          "Html attributes",
          "Html paragraph and heading",
          "Html comments",
          "Formating text",
          "How to add quotes in html page",
          "Anchor tag part 1",
          "Anchor tag part 2",
          "How to add image in html page",
          "How to map a image",
          "Html table",
          "How to span a table",
          "Html lists",
          "Block level elements",
          "Inline elements",
          "Html frames"
        ],
        "Html5 form": [
          "Basic form",
          "Different from elements",
          "Different input types",
          "Form attributes part 1",
          "Form attributes part 2"
        ],
        "Html5 media": [
          "Adding audio in html page",
          "Adding video in html page",
          "Adding plugins in html page",
          "Adding video form youtube in html page"
        ],
        "Html5 graphics and semantics": [
          "How to draw graphics html page",
          "Html5 semantics elements"
        ],
        "Css basics": [
          "Introduction to css",
          "How to apply css",
          "How to write Css selector & syntax",
          "Css comments",
          "Adding backgrounds in html page",
          "Styling text",
          "Css font properties",
          "How to handle multiple stylesheets",
          "How to apply classes",
          "Styling html anchor tag",
          "Styling html lists",
          "Adding border",
          "Adding outline",
          "Adding margin",
          "Adding padding",
          "Css dimension",
          "Styling table",
          "Styling div",
          "Styling html5 semantics",
          "How to apply id",
          "Things to know about class and id",
          "How to float elements",
          "Positioning elements",
          "Absolute position",
          "Relative position",
          "Fixed position",
          "Css clip",
          "How to cursor symbols",
          "How to handle overflow",
          "Css display and visibility",
          "Css combinators",
          "Css opacity",
          "Css pseudo elements",
          "Css pseudo classes part 1",
          "Css pseudo classes part 2",
          "How to code a navigation bar",
          "How to code a gallery",
          "Code a complete layout"
        ],
        "Css3 advance stuff": [
          "Prefixes",
          "Css3 Border radius",
          "How to insert Border image",
          "Adding multiple backgrounds",
          "Css3 background properties",
          "Css3 colors",
          "Css3 gradient",
          "Css3 shadows",
          "Extra CSS3 properties to handle text",
          "Css3 web fonts",
          "Css3 transition",
          "Css3 2d transform",
          "Css3 3d transform",
          "Css3 animations",
          "Adding multiple columns",
          "Handling user interface"
        ],
        "Coding website": [
          "Introduction to project",
          "Code basic html structure",
          "code body and main",
          "Code header",
          "Code slider",
          "Code content area",
          "Code footer",
          "Create product page",
          "Code gallery and footer",
          "Final words and website",
          "Thank you"
        ]
      },
      "requirements": [
        "You don't need to know anything. i will teach you each and everything.",
        "You only need a desire to learn."
      ],
      "description": "During this amazing course, you'll discover the necessary elements behind becoming a web developer in 2021.\nThe objective of this great course is to take someone who is a “mouse and keyboard\" user and teach them web development by teaching HTML5 and CSS3.\nThis is a fundamental course for learning HTML5 and CSS3 and it does not assume that participants have prior knowledge.\nBy the end of this great course, you will know the techniques for creating your first website. If you are unaware of the new the features and tags that HTML5 offers, then this course intended for you. This insightful and fast paced overview will help you quickly discover exactly what makes HTML5, the 5th revision of HTML, such an important standard to learn.\n\nIn the last section of this course we will create an amazing website from start to finish and that will help you to understand how to manage the code in a effective way and where we need to be careful to avoid errors. Let's create the history, you don't need any other course after this. Be a web designer and developer, I will also answer your every question in minutes. We will do a professional project to enhance your skill set to the next level. After this course, you can go into the field and take a job. Let's start making your fate. This is a complete bootcamp to change your web design and development to next level.",
      "target_audience": [
        "Any one can take this who want to learn web design.",
        "No matter you how much knowledge you have.",
        "I will teach beginner and advance level things",
        "if you listen web design word first time. you can still take this course. Because i will teach each and everything.",
        "If you want to earn money from web design and want to learn web design"
      ]
    },
    {
      "title": "React practice course. Build React app from scratch.",
      "url": "https://www.udemy.com/course/react-practice-course-build-react-app-from-scratch/",
      "bio": "Learn React doing a real project with Storybook and unit tests.",
      "objectives": [
        "How to create React application",
        "Developing independent components with Storybook",
        "React hooks: default and custom",
        "Creating unit tests for components and hooks",
        "React",
        "Git & GitHub",
        "Axios",
        "React patterns",
        "Storybook",
        "Unit tests",
        "Enzyme",
        "Code coverage",
        "NodeJS",
        "Yarn"
      ],
      "course_content": {
        "React practice intro": [
          "Introduction",
          "What do we need to start"
        ],
        "App Development": [
          "Installing ReactJS",
          "Setting up React development app environment",
          "Configuring Git and GitHub",
          "React AutoComplete installation",
          "Fetching data with REST from Wikipedia",
          "useSearch custom hook with Axios",
          "Cancelling Axios calls",
          "useDebounce custom hook",
          "Custom Input component",
          "useSearchForm custom hook",
          "useCallback hook",
          "React render props pattern",
          "Configuring SCSS",
          "Routing with react-router-dom",
          "Adding app pages",
          "Home page",
          "Search page"
        ],
        "Storybook configuration": [
          "Installing Storybook",
          "Storybook configuration",
          "Fixing possible issues with Storybook",
          "Storybook interface overview",
          "The first story with Storybook",
          "ListItem story",
          "Search result page story",
          "Installing moxios to configure mocks",
          "Storybook documentation with mdx"
        ],
        "Unit tests": [
          "Unit tests intro with Jest",
          "Unit tests convention",
          "Input component unit test",
          "Enzyme installation",
          "Coverage reporting",
          "Autocomplete unit tests",
          "Container component unit test",
          "useSearchForm hook unit test",
          "useDebounce hook unit test",
          "useSearch hook unit test",
          "App unit test",
          "Unit tests summary"
        ],
        "Best practices of React app development": [
          "React PropTypes",
          "React DefaultProps"
        ],
        "Bonus": [
          "Installing NodeJS on Windows",
          "Installing Yarn on Windows",
          "Bonus: More Content!"
        ]
      },
      "requirements": [
        "JavaScript + HTML + CSS fundamentals are absolutely required",
        "Basic React knowledge",
        "ES6+ JavaScript knowledge at beginning level"
      ],
      "description": "React is the most popular Javascript library of the last five years, and the job market is still hotter than ever. Companies large and small can't hire engineers who understand React fast enough, and salaries for engineers are at an all-time high. It's a great time to learn to React! It's a great time to do a lot of React practice!\n\n\nWhat's this course about?\nThere are a huge number of React courses for beginners where authors describe the first steps. They are great for beginners. But, what to do next? How to create a real React application for customers?\n\n\nIn this course, we'll do React practice. We'll deliver a high-quality product with unit tests (UT) and Storybook stories for all major components. These practices are \"must-have\" for developers.\n\n\nWho's teaching you in this course?\nSenior Software Engineer with more than 8 years of production experience in Web Development. Experienced both in frontend and backend technologies.\n\n\nFor the last 2+ years, I've been working with React. Created a lot of different projects and have a huge experience. The practice is the most important in programming and I want to share it with you.\n\n\nWhat's inside the course?\nWe'll create a simple React application with 3 different pages: Home page, Search page, and Not found page. React Router is the best choice!\nIt will be a copy of the Google home page with fetching data from Wikipedia using its API. For fetching data we'll use Axios and for mocking this data in Storybook and UTs, we'll use Moxios.\nReact hooks are a must-have. Default hooks useState, useEffect, and others are used.\nCustom React hooks will be created, explained, and covered with UTs.\nStorybook is one of the best practices in development. We'll learn how to install and use it. Will create stories for the most important components.\nEnzyme and Jest are used for unit testing. React hooks testing library is used for hooks.\nAccording to the unit tests code convention, we'll get 80% of code coverage.\nBy the end of this course, you'll have learned how to deliver high-quality React application. How to do it fast and following best practices.\nIf you have any questions, please don't hesitate to contact me. I have a huge experience in development and would love to share it and help students learn something new. Sign up today and see how fast you can improve your seniority in React software development.",
      "target_audience": [
        "Students who want to learn how to build React application",
        "Developers who want to improve their React skills",
        "Students who want to learn a future-proof technologies"
      ]
    },
    {
      "title": "Frontend Web Development HTML5 CSS3 JavaScript and Bootstrap",
      "url": "https://www.udemy.com/course/frontend-web-development-html5-css3-javascript-and-bootstrap/",
      "bio": "Your Complete Guide to Professional Frontend Development with HTML5, CSS3, JavaScript & Bootstrap",
      "objectives": [
        "HTML5: The foundation of modern web development. Learn to structure your web pages, create semantic layouts, and work with multimedia elements like audio and vi",
        "CSS3: Style your websites beautifully using advanced CSS techniques. Discover how to create responsive designs, animations, and custom layouts that work across",
        "JavaScript: Make your websites dynamic and interactive with JavaScript. From DOM manipulation to event handling and basic programming concepts, you'll master th",
        "Bootstrap: Learn how to use the powerful Bootstrap framework to quickly design responsive websites without writing extensive CSS from scratch. Build mobile-firs"
      ],
      "course_content": {
        "HTML5 Introduction": [
          "Section Overview",
          "Introduction to HTML5",
          "HTML5 Tags",
          "Tag's Attributes",
          "Favicon in HTML5 Webpage",
          "History of HTML5",
          "Section Conclusion"
        ],
        "HTML5 Formatting": [
          "Section Overview",
          "Headings",
          "Paragraph",
          "Different Formatting Tags",
          "Section Conclusion"
        ],
        "HTML5 Quotation": [
          "Section Overview",
          "Blockquote Tag",
          "Short Quotation Tag",
          "Abbreviation Tag",
          "Address Tag",
          "Cite Tag",
          "Bi-Directional Override",
          "Section Conclusion"
        ],
        "HTML5 Hyperlinks": [
          "Section Overview",
          "Internal Hyperlink",
          "External Hyperlink",
          "Email Hyperlink",
          "Pagejump Hyperlink or Bookmark Hyperlink",
          "Link Attribute",
          "Image as a Link",
          "Section Conclusion"
        ],
        "HTML5 Images": [
          "Section Overview",
          "Images in HTML5",
          "Section Conclusion"
        ],
        "HTML5 Block Level and Inline Level": [
          "Section Overview",
          "Block Level Tags",
          "Inline Tags",
          "Section Conclusion"
        ],
        "HTML5 Table": [
          "Section Overview",
          "Tables in HTML5",
          "Section Conclusion"
        ],
        "HTML5 Media": [
          "Section Overview",
          "Media in HTML5",
          "Video Tag",
          "Audio Tag",
          "Embedding Youtube Video in HTML5 Webpage",
          "Section Conclusion"
        ],
        "HTML5 Form": [
          "Section Overview",
          "Form and Its Attributes",
          "Form Element",
          "Different Input Types",
          "Input Attributes",
          "Section Conclusion"
        ],
        "HTML5 Semantic Elements": [
          "Section Overview",
          "Semantic Elements Part 1",
          "Semantic Elements Part 2",
          "Section Conclusion"
        ]
      },
      "requirements": [
        "Basic Computer Skills: Familiarity with using a computer and navigating the web.",
        "No Prior Coding Experience Needed: This course is beginner-friendly, and you’ll start learning from the basics of web development.",
        "A Code Editor: A free text editor like Visual Studio Code, Sublime Text, or Atom for writing code.",
        "Curiosity and Willingness to Learn: A positive attitude and eagerness to build websites from scratch."
      ],
      "description": "Are you ready to dive into the exciting world of frontend web development? This comprehensive course covers everything you need to know to build professional, responsive, and interactive websites from scratch using HTML5, CSS3, JavaScript, and Bootstrap.\nWhat You'll Learn:\nHTML5: The foundation of modern web development. Learn to structure your web pages, create semantic layouts, and work with multimedia elements like audio and video.\nCSS3: Style your websites beautifully using advanced CSS techniques. Discover how to create responsive designs, animations, and custom layouts that work across all devices.\nJavaScript: Make your websites dynamic and interactive with JavaScript. From DOM manipulation to event handling and basic programming concepts, you'll master the essential tools for client-side development.\nBootstrap: Learn how to use the powerful Bootstrap framework to quickly design responsive websites without writing extensive CSS from scratch. Build mobile-first layouts, responsive navigation bars, and stylish components with ease.\nWhether you're a complete beginner or looking to expand your frontend skills, this course offers hands-on projects, real-world examples, and practical knowledge to help you build stunning websites. By the end of the course, you'll have the confidence and skills to create fully functional, professional websites from start to finish.\nJoin now and start your journey to becoming a frontend web developer today!",
      "target_audience": [
        "Beginners in Web Development: Those who have no prior experience in coding and want to start learning frontend web development.",
        "Students and Career Changers: People who want to explore or pursue a career in web development.",
        "Anyone Looking to Refresh Their Web Development Skills: Those with basic knowledge who want to update their skills with the latest tools and techniques in HTML5, CSS3, JavaScript, and Bootstrap."
      ]
    },
    {
      "title": "Master HTML5 CSS3 Bootstrap5 by building Responsive Website",
      "url": "https://www.udemy.com/course/master-html5-css3-bootstrap5-by-building-responsive-website/",
      "bio": "Develop responsive websites with HTML CSS3 and Bootstrap5",
      "objectives": [
        "You will learn to develop website using HTML CSS3 & Bootstrap5",
        "You will learn about Responsive web design and development",
        "You will learn the concepts of Media Queries and how to use them",
        "You will learn to use HTML and CSS3",
        "You will learn to use Visual Studio Code editor and related extension"
      ],
      "course_content": {
        "Introduction & Installation": [
          "Installing VS Code and Server extension",
          "What is meant by Responsiveness",
          "Example Non Responsive website",
          "Creating HTML Skeleton for non-responsive website",
          "Styling the non responsive page"
        ],
        "Media Queries & Device Breakpoints": [
          "Different Device break points",
          "Make Responsive in device upto 768px",
          "Make Responsive for device width upto 468px",
          "Make Responsive for device width above 1024px",
          "Making Responsive between 769px and 1023px"
        ],
        "Website Development with Bootstrap5": [
          "Adding Bootstrap Font Awesome Google Fonts",
          "Skeleton for different sections",
          "Adding navbar section",
          "Adding Carousel Section",
          "Giving custom height to carousel image",
          "Adding Latest Listings section",
          "Making Latest Listings Responsive",
          "Working on View All Listings Banner",
          "Applying FontAwesome Icon",
          "Contact form layout",
          "Contact form customization",
          "Converting button to full width",
          "Setting up the footer layout",
          "Designing Footer 3 Sections",
          "Working on Footer Quick Links Section",
          "Designing the newsletter section of footer",
          "Designing Contact Details section of footer",
          "Working on Copyright section",
          "Changing background Color of Navbar"
        ]
      },
      "requirements": [
        "Laptop with Internet connection"
      ],
      "description": "In this course, you will learn to develop responsive websites using HTML, CSS3, Mediaqueries and Bootstrap5.\nWe will be also setting up IDE with required extensions to make our development experience smooth.\nWe will learn all the concepts with the help of code examples.\nFollowing are the topics we will cover:\n1.1-What is meant by Responsiveness\n1.2-Example Non_responsive website\n1.3-Creating HTML Skeleton for non-responsive website\n1.4-Styling the non responsive page\n2.1-Different Device break points\n2.2-Make Responsive in device upto 768px\n2.3-Make Responsive for device width upto 468px\n2.4-Make Responsive for device width above 1024px\n2.5-Making Responsive between 769px and 1023px\nWe will then learn about Bootstrap5, Font awesome, Google fonts in which we will be using following:\n1. Navigation navbar\n2. Buttons and nav links\n3. Carousel and slides\n4. Margin , Padding, Fontsize\n5. Container & Container fluid\n6. Column and Grid system\n7. Form and Form controls\n8. Fontawesome icons\n9. Google fonts poppins\n10. Block button\n11. Bootstrap cards\nWe will develop website using all concepts of HTML CSS3 and Bootstrap5 and we will develop website with different sections like navigation section, slider section, listing section, call to action section, contact us section, footer section, copyright section.\nAfter this course you will be able to develop any website of your own and use it for your own purpose.",
      "target_audience": [
        "Anyone who wants to learn and develop responsive websites using HTML, CSS3 and Bootstrap5"
      ]
    },
    {
      "title": "Essentials of JavaScript Practice Coding Exercises Tips",
      "url": "https://www.udemy.com/course/essentials-of-javascript-practice-coding-exercises-tips/",
      "bio": "Guide to practicing and learning more about JavaScript. Review course on key essentials for JavaScript Coding",
      "objectives": [
        "Know how JavaScript works",
        "Learn how to add validation on a web form",
        "Create your own JavaScript code",
        "Implement JavaScript solutions within your HTML",
        "Create your own JavaScript code",
        "How JavaScript works in a browser"
      ],
      "course_content": {
        "JavaScript Course Information": [
          "JavaScript Course Intro",
          "Online JavaScript Console.log"
        ],
        "Learn to Use JavaScript Practice": [
          "JavaScript Variables",
          "JavaScript Operators",
          "Logical and Comparison operators",
          "Practice JavaScript Online",
          "Online JavaScript practice",
          "JavaScript Loops Switching",
          "JavaScript Working with Strings",
          "Online JavaScript Practice Strings",
          "JavaScript Objects",
          "Online JavaScript practice Objects",
          "JavaScript Arrays",
          "Online JavaScript practice Arrays",
          "JavaScript Functions",
          "JavaScript form submission validation",
          "Form email validation process JavaScript HTML5",
          "Online JavaScript practice JavaScript Form validation",
          "jQuery Form Validation",
          "Online JavaScript practice jQuery Form Validation"
        ],
        "Course Bonus Resources and Extra Lectures": [
          "JavaScript Resources",
          "Learning Guides and resources PDF guides"
        ]
      },
      "requirements": [
        "Desire to learn JavaScript",
        "Desire to practice JavaScript",
        "Learn explanations of how to use Javascript",
        "Create validation on a web form"
      ],
      "description": "Practice Practice and Learn how to USE JavaScript!!!\nWe have designed this course to optimize practicing JavaScript coding.\nCODE SAMPLES INCLUDED!!\nPRACTICE EXERCISES\nCODE EXPLANATIONS\nCODE IMPLEMENTATIONS\nTry the code after each video lesson. PDF copy and paste code that we use within the course and TRY FOR YOURSELF.\nBy the end of the course you will understand how to add validation to a web form and all the essential elements needed to customize and implement it within your own web projects.\nLearn JavaScript from a real world example.\nWeb Development project create a JavaScript validation for a web form. Using CSS, HTML, JavaScript toegther we show you how..\n\nThis JavaScript course is exclusive on Udemy we build web development courses. Learn to create DYNAMIC INTERACTIVE web pages using JAVASCRIPT.\nEverything you need to learn about JavaScript is provided within this course.\nexclusive download PDF resource ebook\nno wasted time watching someone type\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nLearn how Javascript works and it's fundamental concepts. Learn to build your own Javascript code to make you website interactive.",
      "target_audience": [
        "Learn the advantages of using JavaScript",
        "Learn the fundamentals of JavaScript",
        "Learn the essentials of JavaScript",
        "Web coders",
        "Web developers",
        "Web masters",
        "Web managers",
        "Web content creators",
        "want to make dynamic web content",
        "make interactive web pages",
        "learn to integrate HTML CSS with JavaScript"
      ]
    },
    {
      "title": "Django: Create Your Own Modern Banking App with Django 2023",
      "url": "https://www.udemy.com/course/create-a-mordern-banking-app-with-django/",
      "bio": "The Best Django Course: Building an Advanced Banking App with Django from Setup to Deployment.",
      "objectives": [
        "Basic Django Features and Tools",
        "Practical challenges, Business Logic and Strategies",
        "Create Bank Account with Account Numbers, PIN Numbers e.t.c",
        "Advanced KYC Registrations and Verification",
        "Send Money/Payments to Other Users using Account Number",
        "Accept payments from your friends, family or anyone",
        "Create New or Link Existing Virtual Credit/Debit Cards",
        "Send Money to Credit/Debit Card for Online purchase or Payments",
        "Withdraw money from Credit/Debit Card to Account Balance",
        "Advanced User Authentication (Login, Logout, Register)",
        "Learn Django From Scratch & Gain Essential Skills To Apply For Junior Django Developer Positions",
        "Learn Django Right From the Basics Like Creating A Django Project, Understanding Models, Making Migrations, Running Django Application On Local Server"
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome to \"Build your own Fintech Website using Django\"",
          "Complete Project DEMO",
          "Goal of This Course",
          "Tools and Requiement needed to Take Course",
          "Meet your Instructor",
          "What is Django? in \"Easy to Understand\" explanation.",
          "Download Source Code, Template, Course Docs and Materials."
        ],
        "Project & Workspace Setup": [
          "Django Project Creation and Setup",
          "Admin Panel Customization using Jazzmin"
        ],
        "User Models In Django": [
          "Custom User Model using Django"
        ],
        "User Authentication": [
          "Registrations Authentication Feature using Django",
          "Logout Authentication Feature using Django",
          "Login Authentication Feature using Django"
        ],
        "KYC Models and Signals In Django": [
          "Create Bank Account Model",
          "Signals: Automatically create bank account for users when they create an account",
          "KYC Models using Django"
        ],
        "KYC Forms In Django": [
          "Creating KYC Forms using Django Forms"
        ],
        "KYC Views In Django": [
          "Creating KYC Views using Django Views"
        ],
        "Alerts In Django": [
          "Message Alerts using Django Messages."
        ],
        "Account Dashboard": [
          "Bank Account Dashboard using Django views and URLs"
        ],
        "Transfer Payment - Main Banking Logics": [
          "Search Users using Account Number or Accouny ID",
          "Allow users enter amount to be paid then perform basic processing using Django"
        ]
      },
      "requirements": [
        "Google Chrome Browser",
        "Visual Studio Code",
        "Pen & Book",
        "No much programming experience needed",
        "No much Django/Python experience needed(Little Django Basics Needed)",
        "You will learn everything you need to know about django in this one course"
      ],
      "description": "Unleash your coding prowess and dive into the world of advanced web development with our cutting-edge Django course! Join us on a thrilling journey as we guide you through the creation of a state-of-the-art banking app using the powerful Django framework.\n\n\nIn this immersive course, you'll gain hands-on experience and master the art of building robust, scalable, and secure web applications. With Django as your trusty companion, you'll harness its extensive features and unleash your creativity to bring the next-generation banking app to life.\n\n\nUnder the expert guidance of our experienced instructors, you'll learn the ins and outs of Django, from setting up a development environment to creating dynamic views and managing complex data models. Explore advanced topics like user authentication, transaction handling, and data encryption to ensure the utmost security and privacy for your users.\n\n\nTake your skills to new heights as you architect a sleek and intuitive user interface, seamlessly integrating essential banking functionalities. From managing accounts and funds to processing transactions and generating insightful reports, you'll acquire the knowledge to craft a comprehensive banking experience that your users will love.\n\n\nWith hands-on projects and real-world examples, you'll tackle the challenges faced by modern banking apps head-on, master the art of Django development, and emerge as a sought-after full-stack web developer. Are you ready to revolutionize the world of banking? Enroll in our advanced Django course today and unlock limitless possibilities!\n\n\nHere's a glimpse of what you'll learn:\n\n\nPractical challenges, business logic, and strategies\nBuilding a robust authentication system using Django\nUnderstanding Basic Django Features and Tools\nCreate a bank account with account numbers, PIN numbers, e.t.c., using only Django and no APIs.\nAdvanced KYC Registrations and Verification\nSend money or payments to other users using your account number.\nAccept payments from your friends, family, or anyone else.\nCreate new or link existing virtual credit and debit cards.\nSend money to a credit or debit card for online purchases or payments.\nWithdraw funds from your credit or debit card to your account balance.\nDelete the linked credit cards and send the remaining funds back to the account balance.\nNotification System\nTracking of Transaction History\nLearn Django right from the basics, like creating a Django project, understanding models, making migrations, and running a Django application on a local server.\nHost our website on railway hosting.\nProvision a live Postgresql database.\nLearn how to make changes to our live application without causing issues and bugs.\nLearn how to deploy static and media files to AWS services using S3.\nAnd a lot more cool things and tricks that I’ll be showing you.\n\n\nSo in general, this course would guide you to understanding how banking systems and business/programming logics are created.\n\n\nSo what are you waiting for? Go ahead and enroll in the course right now, and I’ll be waiting for you in class.",
      "target_audience": [
        "Complete Django Beginners",
        "Those looking to create thier own Fintech Application like Stripe or Flutterwave",
        "This course is primarily intended for developers who have a basic knowledge of Django and want to implement payment functionality within their web application."
      ]
    },
    {
      "title": "Drupal 8, 9 & 10 advanced module development guide",
      "url": "https://www.udemy.com/course/drupal-advanced-module-development-guide/",
      "bio": "Learn all the advanced concepts of Drupal",
      "objectives": [
        "Programmatic database actions on custom entities: insert / update / reference / delete",
        "Validate entity submission with constraints",
        "Save a revision of an entity, compare a numeric value with its previous value",
        "Add menu items in code with Menu Plugin and a dynamic counter",
        "Create a block plugin and use dependency injection to load in the current entity",
        "Set up and use advanced core caching mechanisms like cache tags and cache contexts",
        "Delete an entity with a core dialog while staying on the same page"
      ],
      "course_content": {
        "Getting started": [
          "Getting started with the project files"
        ],
        "Building the application. Storing, validating and rendering data": [
          "Add dynamic menu links with Menu plugins",
          "Adding a bidding block with dependency injection",
          "Enhancing the layout of the application",
          "Adding a code only bid entity",
          "Saving the bid entities on form submission",
          "Form validation based on highest bids",
          "Adding dynamic variables to our entity teasers",
          "Validate entity submission with constraints",
          "Displaying all bids in a dynamically rendered table",
          "Integrating the core revision system into the bidding process to raise a bid"
        ],
        "Intermezzo": [
          "Importing data seeds"
        ],
        "Transitions, Events, Caching and user registration": [
          "Deleting a bid with a core dialog pop-up",
          "User notifications on transition events",
          "Update entire view with an ajax callback",
          "OO in practice: deletion of bid and notification entities on offer deletion",
          "Caching in-depth intro",
          "Caching of views pages",
          "Caching of custom entity pages",
          "Cacheable dependencies in render arrays",
          "Invalidate cache of a referenced entity",
          "Cache menu items with a custom cache tag",
          "Using the Middleware API to create a http filter for user redirection",
          "Customize the user registration process with a RouteSubscriber"
        ],
        "Finishing up": [
          "Finising up"
        ]
      },
      "requirements": [
        "At least two years experience with programming (preferably PHP)",
        "Preferably, you have already made a custom module",
        "You are able to set up a local development environment with Drupal 8, 9 or 10",
        "Optionally you have taken the prequel of this course: Drupal 8 & 9 module development: start with custom entities"
      ],
      "description": "[Please read the table of contents first! Also the prerequisites are important]\nIn this hands-on course, an offer software where users are able to create offers and place bids will be created. The course builds further on the Udemy course \"Drupal 8 & 9 module development: start with custom entities\" but can be taken individually as well. Please read the table of contents to know what to expect!\n\n\nStart Code and end code available, PDF with text per chapter\nThis is the best resource for custom module development with Drupal 8, 9, or 10.\nAdvanced topics like custom entities, entity forms, access control, events, caching, workflows, and many more are discussed while building actual software platform\nAfter the course, you’ll be able to build robust and scalable software solutions of many kinds.\nStef Van Looveren has more than 10 years of expertise with Drupal.\nI’ve been around in the drupal ecosystem for ten years and have supported in many ways: code contributing, blogging, sharing solutions on DrupalAnswers, and attending conferences. With this course, I share almost all of the knowledge I’ve built up so far since using Drupal 8 and 9.\nMy message is: \"It struck me that there are so few good learning paths for drupal. With this course, I try to fill the gap. I gave it my best and I hope you will enjoy it!\"",
      "target_audience": [
        "Developers with preferably at least two years of experience with PHP or Drupal",
        "Back-end developers"
      ]
    },
    {
      "title": "NEW Complete Laravel for Beginners to Mastery Bootcamp",
      "url": "https://www.udemy.com/course/new-complete-laravel-10-for-beginners-to-mastery-bootcamp/",
      "bio": "Build Modern Web Applications Quickly and Easily with Laravel / PHP Framework, Vue.js, Tailwind CSS, and Bootstrap",
      "objectives": [
        "Setting Up Your Local Development Environment",
        "Understanding the MVC Architecture in Laravel",
        "Routing and Controllers in Laravel",
        "Comprehensive Understanding of Laravel",
        "Front-End Mastery with Vue js and Tailwind CSS",
        "Hands-On Experience with Real Projects",
        "Efficient Workflow with Modern Tools",
        "Advanced Techniques in PHP and Laravel",
        "Full-Stack Development Skills",
        "Security and Performance Optimization",
        "Community Support and Collaboration",
        "Confidence in Setting and Achieving Development Goals",
        "Blade Templating Engine: Creating Dynamic Views",
        "Working with Laravel Models and Eloquent ORM",
        "Database Migrations: Creating and Managing Tables",
        "Form Handling and Validation in Laravel",
        "Authentication and Authorization in Laravel",
        "Laravel Artisan CLI: Automating Development Tasks",
        "Middleware: Managing HTTP Requests",
        "Managing File Uploads and Storage in Laravel",
        "Optimizing Laravel Performance and Security",
        "Building a CRUD Application with Laravel",
        "Advanced Laravel: Queues, Jobs, and Event Broadcasting",
        "Laravel Blade Components and Layouts",
        "Task Scheduling with Laravel",
        "Advanced Eloquent Techniques: Scopes, Mutators, and Accessors"
      ],
      "course_content": {
        "Starting up with Laravel": [
          "Laravel Upgrades and Releases (IMPORTANT)"
        ],
        "Windows - Local Environment Setup": [
          "The tools we need to run Laravel in Windows",
          "Laravel installation in WIndows",
          "Installing specific versions of laravel and packages"
        ],
        "MAC OS - Local Environment Setup": [
          "Downloading and Installing PHP for MAC OS",
          "Laravel installation in MAC OS",
          "Installing specific versions of laravel and packages"
        ],
        "Routes": [
          "Creating a basic route",
          "Syntax examples of routes",
          "Dependency injection and redirects",
          "View method and artisan route list",
          "Route parameters",
          "Optional route parameters",
          "Route regulars expressions - part 1",
          "Route regulars expressions - part 2 - more complex expresions",
          "Route regulars expressions - part 3 - Multiple values",
          "Route regulars expressions - part 4 - Constraint methods",
          "Named routes"
        ],
        "Middlewares": [
          "Creating a Middleware",
          "Using a Middleware",
          "Larave 10 and 11 middleware differences",
          "Creating middleware Aliases",
          "Global registration",
          "Laravel 10 creating middlewareAliases (Optional)",
          "Laravel 10 - Global registration - (Optional)"
        ],
        "CSRF Security": [
          "CSRF Intro",
          "Blade CSRF directive",
          "CSRF methods",
          "Using Laravel CSRF tokens with JS AJAX - part 1 - jQuery install",
          "Using Laravel CSRF tokens with JS AJAX - part 2 - pulling values from meta",
          "Using Laravel CSRF tokens with JS AJAX - part 3 - submitting post request easily",
          "Using Laravel CSRF tokens with JS AJAX - part 4 - using jQuery AJAX object",
          "Using the JS AXIOS library to submit AJAX requests the EASY way"
        ],
        "Controllers": [
          "Creating a controller manually",
          "Creating a controller with artisan",
          "Controller Middlewares",
          "Creating a resource controller",
          "Creating a resource Controller - part 2 - Store method",
          "Creating a resource Controller - part 3 - Show method",
          "Creating a resource Controller - part 4 - Edit method",
          "Creating a resource Controller - part 5 - Update method",
          "Creating a resource Controller - part 6 - Destroy method",
          "Organizing multiple resource controllers",
          "Partial resource routes",
          "API resource routes",
          "Changing resource route names",
          "Naming resource routes parameters",
          "Adjusting Resource URI's to your language of choice",
          "Supplementing resources with additional methods"
        ],
        "Requests": [
          "Accessing the request",
          "Dependency injection and parameters",
          "Request methods, Path, Host, IP and more",
          "Inspecting some extra useful methods"
        ],
        "Requests - Inputs": [
          "Getting all input data",
          "Using the collect method",
          "Using the input method",
          "Placing default values on data returned",
          "Retrieving dates as objects and using dynamic properties",
          "The only and except methods",
          "Checking data with the has method",
          "Checking for input data missing keys",
          "Supplementing inputs with more data"
        ],
        "Requests - Inputs - FLASH": [
          "Flashing data intro",
          "Redirecting with flash data",
          "Some more redirects and cookie retrieving"
        ]
      },
      "requirements": [
        "HTML",
        "PHP"
      ],
      "description": "Unlock the World of Laravel: NEW Complete Laravel for Beginners to Mastery Bootcamp\nAre you ready to dive into the dynamic world of web development with one of the most powerful PHP frameworks available? Welcome to your immersive journey into Laravel, specifically designed for beginners who are eager to learn and excel. Whether you're just starting out or looking to expand your skills, this guide will take you from the basics of Laravel 10 and 11 to the creation of sophisticated web applications with ease and confidence.\n\n\nWhy Laravel?\nLaravel stands out as a leading PHP framework due to its elegant syntax, robust feature set, and active community support. It’s not just about building web applications; it's about building them efficiently, securely, and with the potential for scalability. For those new to web development, Laravel offers an excellent starting point with a gentle learning curve, allowing you to gradually build your knowledge and skills.\nGetting Started with Laravel for Beginners\nThis guide is crafted with beginners in mind, ensuring that you build a solid foundation in Laravel before moving on to more advanced concepts. We’ll start with the basics—understanding the MVC (Model-View-Controller) architecture, setting up routes, and working with migrations. These essential concepts will serve as your building blocks as you progress.\n\n\n1. MVC Architecture\nThe MVC architecture is at the heart of Laravel, and understanding it is crucial for any web developer. We'll break down each component, showing you how models represent your data, views handle your presentation, and controllers process user inputs and interactions. This structure not only makes your code more organized but also more maintainable.\n\n\n2. Routing\nRouting in Laravel is simple yet powerful. You’ll learn how to define routes, manage controllers, and even create route groups for better organization. This section will help you understand how to direct user requests to the appropriate part of your application.\n\n\n3. Migrations\nDatabase migrations are a game-changer in Laravel. They allow you to version control your database, making it easy to collaborate with others and roll back changes if needed. You'll get hands-on experience creating and managing migrations, ensuring your database evolves alongside your application.\nMoving to Advanced Laravel Topics\nOnce you have a grasp on the fundamentals, it’s time to dive deeper into Laravel’s advanced features. This is where you’ll truly see the power of Laravel and how it can transform your web development workflow.\n1. Eloquent ORM\nEloquent ORM is Laravel’s built-in tool for working with databases. It simplifies database operations, allowing you to interact with your database using an intuitive, object-oriented syntax. We’ll cover everything from basic CRUD operations to more complex queries and relationships, giving you the tools to manage your application’s data with ease.\n\n\n2. Blade Templating\nLaravel’s Blade templating engine makes it easy to create dynamic, reusable views. You'll learn how to leverage Blade’s powerful features, such as template inheritance and components, to build scalable and maintainable user interfaces. By the end of this section, you'll be able to create clean and efficient front-end code that integrates seamlessly with your backend.\n\n\n3. Authentication\nSecurity is a top priority in any web application, and Laravel provides a comprehensive authentication system out of the box. We’ll walk you through setting up user registration, login, password resets, and even more advanced features like two-factor authentication. With Laravel, securing your application is straightforward and hassle-free.\n\n\n4. Package Development\nOne of the most exciting aspects of Laravel is its vibrant ecosystem of packages. You’ll discover how to find, install, and use third-party packages to extend your application’s functionality. Plus, we’ll guide you through the process of creating your own packages, allowing you to share your work with the community or reuse it across multiple projects.\nHands-On Learning: Real-Time Coding and Projects\nThis guide isn't just about learning concepts—it's about applying them in real-time. With hands-on coding examples and projects, you'll put your new skills to the test, building functional web applications as you progress. These practical exercises are designed to reinforce your learning and ensure that you’re not just reading about Laravel, but actually using it to solve real-world problems.\nMastering Laravel: Beyond the Basics\nAs you continue your journey, you'll unlock the true power of Laravel. You’ll explore advanced topics like middleware, queues, and event broadcasting, which allow you to build scalable and high-performing applications. By the end of this guide, you'll have the confidence and skills to tackle even the most complex web development challenges.\n\n\nWhy This Course?\nWhen I set out to create this guide, my goal was simple: to make web development accessible to everyone, especially beginners. I’ve structured each section to build on the last, ensuring that you never feel overwhelmed. The lessons are paced to allow you to absorb and apply new information effectively, making the learning process smooth and enjoyable.\nImagine diving into development with the confidence that every question you have will be answered as you go along. That’s the experience I’ve aimed to create. Whether it’s demystifying the robust features of Laravel or guiding you through complex coding challenges, this guide is here to support you every step of the way.\nLaravel for Beginners: Setting the Stage for Success\nLaravel is more than just a framework—it’s a tool that empowers you to turn your creative ideas into deployable realities. As you work through this guide, you’ll gain a deep understanding of how to use Laravel to build web applications that are not only functional but also secure and efficient.\n\n\nWhy Choose Laravel?\nLaravel makes it incredibly easy to integrate JavaScript, CSS, and other tools with just a few lines of code. It’s a framework that simplifies complex tasks, allowing you to focus on what really matters: building great applications.\n\n\nCommunity and Support\nLaravel has an active and welcoming community, which means you’re never alone in your learning journey. Whether you’re looking for advice, feedback, or collaboration opportunities, there’s a whole community of developers ready to help.\nConclusion: Start Your Laravel Journey Today\nWith a 30-day money-back guarantee, there’s no risk in starting your Laravel journey today. Whether you’re a complete beginner or looking to enhance your skills, this guide will equip you with everything you need to succeed. So, what are you waiting for? Let’s dive in and start building something amazing together.\nSee you inside!",
      "target_audience": [
        "Aspiring Web Developers",
        "Frontend Developers Looking to Expand Their Skills",
        "Backend Developers Seeking to Modernize Their Toolkit",
        "Entrepreneurs and Business Owners",
        "Freelancers and Consultants",
        "Students and Recent Graduates",
        "Experienced Developers Transitioning to Laravel",
        "Hobbyists and Coding Enthusiasts"
      ]
    },
    {
      "title": "React JS Portfolio Website with Theme Customization",
      "url": "https://www.udemy.com/course/react-js-portfolio-website-with-theme-customization/",
      "bio": "Build a premium modern Responsive React JS Portfolio Website for yourself today! Course comes with complete source code.",
      "objectives": [
        "How to Build Modern and Responsive Apps/Websites using React 18",
        "How to use React Hooks like (useState, useEffect, useRef, useReducer, and more)",
        "How to Create and use Custom React Hooks",
        "How to use the Context API and the useContext Hook",
        "How to use React Portals",
        "How to create Re-Usable Components",
        "How to add a Theme Customization feature that persists to browser local storage",
        "How to create carousel/slides with SwiperJS",
        "How to add Filtering to your portfolio projects",
        "How to use CSS3 Variables for efficient project customization",
        "CSS Positioning",
        "How to use the Flexbox and Grid System",
        "How to use CSS Media Queries for website Responsiveness",
        "How to use CSS units like rem, %, vh, and vw to achieve responsive design",
        "How to create an elegant Floating Navbar that adds a native app feel to your website, and more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction (What you'll learn)",
          "Full Project Demo"
        ],
        "Hosting & Domain, Tools & Extensions, and Project Folder Structure": [
          "Project Live Demo link & Brief Info",
          "Hosting & Free Domain Name",
          "Installing Necessary Tools",
          "Creating Our React App & Installing Helpful Extensions",
          "Project Folder Structure",
          "CSS3 Variables & General CSS Styles",
          "Media Queries for General CSS"
        ],
        "Navbar": [
          "Navbar JSX & Using React Icons",
          "Navbar CSS"
        ],
        "Header": [
          "Header JSX",
          "Header CSS",
          "Header Media Queries (Responsive Design)"
        ],
        "About": [
          "About JSX",
          "Creating Re-Usable Card Component",
          "Card Component CSS",
          "Making use of the Card Component in About JSX",
          "About CSS",
          "About Media Queries (Responsive Design)"
        ],
        "Services": [
          "Services JSX",
          "Services CSS",
          "Services Media Queries (Responsive Design)"
        ],
        "Portfolio": [
          "Portfolio JSX (useState Hook)",
          "Projects JSX",
          "Project JSX",
          "Projects CSS",
          "Getting Unique Categories From data array",
          "Projects Categories JSX",
          "Category Button JSX",
          "Projects Categories CSS",
          "Filter Projects Functionality",
          "Portfolio Media Queries (Responsive Design)"
        ],
        "Testimonials": [
          "Testimonials JSX",
          "Creating Carousel/Slides with Swiper JS",
          "Testimonial JSX",
          "Testimonials CSS",
          "Firefox Bug Fix",
          "Creating Breakpoints for Swiper JS (Responsive Design)"
        ],
        "FAQs": [
          "FAQs JSX",
          "FAQ JSX",
          "FAQs CSS",
          "FAQs Toggle using useState Hook"
        ],
        "Contacts": [
          "Adding your contact details",
          "Contact JSX",
          "Contact CSS"
        ]
      },
      "requirements": [
        "Although I will be explaining EVERY step in this course, a basic knowledge of React, Hooks, props, JavaScript, and CSS will help."
      ],
      "description": "Source Code, Assets, Hosting discount link, and Free Domain are all included in this course!\n\n\nThis course is for ALL levels of React Developers looking to build THE PERFECT PORTFOLIO website to showcase their work.\nMy approach to this course is simple. I will explain every step needed to create this amazing responsive portfolio website (without wasting your time). You will learn modern React and CSS best practices, together with easy-to-use tools that'll add astonishing functionalities to the project.\nBy the end of this course, you will have a full-featured, modern, responsive portfolio website with:\nComplete theme customization functionality that stores theme state/value in your browser's local storage. This way your clients will have their last theme settings saved even if they close their browser or refresh the page.\nAnimate-On-Scroll feature\nConvenient Contact Options (WhatsApp, messenger, mail)\nAuto-scroll carousel/slides for testimonials\nFilterable portfolio projects\nFAQs toggle feature\nElegant Floating Navbar (for tablets and phones), and more!\n\n\nThroughout the course, you will learn:\nHow to Build Modern and Responsive Apps/Websites using React 18\nHow to use React Hooks like (useState, useEffect, useRef, useReducer, and more)\nHow to Create and use Custom React Hooks\nHow to use the Context API and the useContext Hook\nHow to use React Portals\nHow to create Re-Usable Components\nHow to add a Theme Customization feature that persists to LocalStorage\nHow to Create carousel/slides with SwiperJS\nHow to add Filtering to your portfolio projects\nHow to use CSS3 Variables for efficient project customization\nCSS Positioning\nHow to use Flexbox and Grid System\nHow to use CSS Media Queries to create responsive websites\nHow to use Responsive units like rem, %, vh, and vw\nHow to create an elegant Floating Navbar for your website, and more!",
      "target_audience": [
        "This course if for ALL levels of React Developers looking to build THE PERFECT PORTFOLIO website!"
      ]
    },
    {
      "title": "The Complete Guide to Java EE 8: 3-in-1",
      "url": "https://www.udemy.com/course/the-complete-guide-to-java-ee-8-3-in-1/",
      "bio": "Explore the Java EE platform to build enterprise-ready Java applications",
      "objectives": [
        "Get the most out of this guide to learn the Java EE APIs",
        "Get hands-on with best practices and patterns in Java EE 8",
        "Develop microservice applications that runs in highly scalable cloud environments",
        "Demonstrate how to implement application business logic with minimal boilerplate code",
        "Explore and apply various patterns to achieve enhanced performance in application development",
        "Create microservices using Java’s best microservice frameworks"
      ],
      "course_content": {
        "Learning Java EE 8": [
          "The Course Overview",
          "Implementing domain business logic in Java EE",
          "EJBs and CDI managed beans",
          "CDI producers",
          "Qualifiers",
          "Scopes",
          "Events",
          "JAX-RS resources",
          "Integrating JSON-B",
          "Integrating JSON-P",
          "Custom HTTP responses",
          "Validating communication",
          "Exception handling",
          "Mapping domain entities with JPA",
          "Entity relations",
          "Datasources",
          "Transactions",
          "Interceptors",
          "Binding custom interceptors",
          "Configuring Java EE applications",
          "Caching",
          "Logging",
          "Asynchronous EJBs",
          "Asynchronous CDI events",
          "Managed threads",
          "Timers",
          "Asynchronous JAX-RS resources",
          "Accessing HTTP using JAX-RS",
          "Extended client usage",
          "Making HTTP clients resilient",
          "Asynchronous, reactive clients",
          "Implementing SSE resources with JAX-RS",
          "Server-sent event clients",
          "Implementing WebSocket server endpoints",
          "Accessing WebSocket endpoints",
          "Asset 1- Learning Java EE 8"
        ],
        "Design Patterns and Best Practices in Java EE 8": [
          "The Course Overview",
          "Discovering Design Patterns",
          "Practicing Design Patterns",
          "Categorization of Design Patterns",
          "How to Select and Use One",
          "Factory Pattern",
          "Understanding Factory Pattern Using Real-Time Scenario",
          "Implementing Factory Pattern",
          "Abstract Pattern",
          "Implementing Abstract Factory Pattern",
          "Singleton Pattern",
          "Understanding Why to Use Singleton with Demo",
          "Implementing Singleton Pattern",
          "Decorator Pattern",
          "Understanding Decorator Pattern",
          "Understanding Decorator Pattern Using Real-Time Scenario",
          "Implementing Decorator Pattern",
          "Façade Pattern",
          "Implementing Façade Pattern",
          "Creating Façade Class and Client",
          "Command Pattern",
          "Implementing Command Pattern",
          "Observer Pattern",
          "Implementing Observer Pattern",
          "Asset 2- Design Patterns and Best Practices in Java EE 8"
        ],
        "Java EE 8 Microservices": [
          "The Course Overview",
          "What are Microservices?",
          "Microservices Architectural Advantages and Enhancements",
          "Breaking the Monolith into Microservices",
          "Java (EE) Microservice Frameworks Overview",
          "Installing and Configuring Java, Maven and the IDE",
          "Creating and Running the First Microservice Using Payara Micro",
          "Building Basic RESTful APIs with JAX-RS 2.1",
          "Configuring JAX-RS",
          "Adding Error Handling, Filters and Interceptors with JAX-RS",
          "Microprofile Overview Using CDI and JSON-P",
          "Decomposing an Existing Monolith Application",
          "Stateless Versus Stateful Highly Available Microservices",
          "Finishing the First Microservice with Payara Micro",
          "Creating and Running the Second Microservice Using Dropwizard",
          "Monitoring Microservices with Dropwizard Metrics",
          "Integrating with JAX-RS and HTTP",
          "Integrating with OpenID Connect",
          "Automatically Testing Microservices",
          "Introduction to Spring and Spring Boot",
          "Integrating Spring into a Java EE Environment",
          "Creating the Microservice with Spring Boot and JAX-RS",
          "Creating the Microservice with Spring Boot and Spring MVC",
          "Complete the Application Using All Three Created Microservices",
          "Introduction to Containers and Docker",
          "Building, Packaging and Running Java Microservices",
          "Scalable Fault Tolerant Container Management Systems",
          "Preparing Java Microservices to Run in Highly Scalable Platforms",
          "Asset 3- Java EE 8 Microservices"
        ]
      },
      "requirements": [
        "Familiarity with Java is assumed.",
        "Basic knowledge of Java EE will be helpful for this course."
      ],
      "description": "Java EE provides a standard set of specifications that can be used to develop standardized applications, independent of the vendor. Enterprise applications do not change that often, and hence we need a robust platform such as Java EE to ensure sustainability. To learn features and APIs in Java EE for building enterprise-ready applications, you’ll need to be familiar with programming in Java.\nThis  comprehensive 3-in-1 course teaches you how to develop enterprise applications using the Java Enterprise platform and modern APIs. It covers each and every concept of the Java EE platform with the help of practical examples making it easy for you to understand and implement in your own applications.\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Learning Java EE 8, course starts off by exploring the core Java EE components. You will then learn about HTTP endpoints. You will also learn how to map domain entities with JPA. Next, you will understand how interceptors realize technical cross-cutting concerns. You will learn to access external systems. Finally, you will learn about the asynchronous communication protocol.\nThe second course, Design Patterns and Best Practices in Java EE 8, starts off with exploring various design patterns. You will then learn to work with categorizing design patterns. You will also work with creational patterns. Next, you will explore different types of behavioural patterns. Finally, you will learn the implementation of key patterns such as Façade, Singleton, Factory, Decorator, and Observer in Java EE.\nThe third course, Java EE 8 Microservices, begins with explaining the benefits of using the microservice architecture. You will then learn to decompose and refactor monolithic applications into microservices. You will also learn to create microservice with the best Java microservice frameworks such as Payara Micro, Dropwizard, and Spring Boot. Next, you will learn to implement RESTful services using JAX-RS 2.1 and Java EE 8. You will learn to monitor, test, secure, and integrate microservices with each other and existing monoliths. Further, you will learn to integrate Spring into a Java EE ecosystem. Finally, you will learn to package microservices into Docker containers making it suitable to run in a highly scalable cloud environment.\nBy the end of this Learning Path, taking the challenge of building a cloud-ready, enterprise application in the microservice architecture will be a walk in the park.\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nSebastian Daschner is a Java freelancer working as a consultant, author, and a trainer. He is enthusiastic about programming and Java (EE). He is the author of the book Architecting Modern Java EE Applications. He participates in the JCP, helping to form the future standards of Java EE such as serving in the JAX-RS, JSON-P, and Config Expert Groups, and collaborating on various open source projects. For his contributions to the Java community and ecosystem, he was recognized as a Java Champion, Oracle Developer Champion, and double 2016 JavaOneRockstar. He is a regular speaker at international IT conferences such as JavaLand, JavaOne, or Jfokus.\nSekhar Srinivasan (Microsoft Certified Trainer) is a highly reputed trainer. He is well known for imparting unique techniques in training for the past 22 years. He has trained students on various Java technologies such as Core Java, JDBC, Servlets, JSP, JSF, Spring, Hibernate and also various Microsoft technologies and JavaScript frameworks. He is a firm believer of being constantly up to date with the upcoming technologies to deliver the best possible training he can. He provides extensive training programs such as classroom training, online training programs and is also an author with Pluralsight and Packt Publishing.\nTilen Faganel is the main developer of the frame KumuluzEE. He received the Java Duke's Choice Award Winner 2015. He is the head of development of integration solutions in high-tech start-ups Sunesis, and has worked on numerous projects developing advanced cloud applications for enterprises in Slovenia and abroad.",
      "target_audience": [
        "This Learning Path targets software developers who are keen to explore the Java EE platform to build enterprise-level applications."
      ]
    },
    {
      "title": "Learn CSS Transition and Animation",
      "url": "https://www.udemy.com/course/css-transition-and-animation/",
      "bio": "Learn CSS Transition and Animation with examples and finally we will create an animated banner in Css",
      "objectives": [
        "Learn Css Transition and Animation",
        "You will learn all the CSS properties of Transition and Animation",
        "You will be able to create cool Transition and Animation Effects",
        "You will be able to create Animated Banner in Css"
      ],
      "course_content": {},
      "requirements": [
        "Basic Html structuring and Css Basics"
      ],
      "description": "=============== Over 2000 Happy students =============\nReviews :\nThanx for this usefull information and clear explanation!\nThis teacher clearly explains what CSS-Animation is and how to set the properties. Step by step .. so you can apply it yourself.\nVery Nice And Detailed\nThis course gives the knowledge from grounding to a good level in various topics. Thank you other.\nQuick basics\nGood for those who need to jump start CSS3 transition and animation basics.\n===================================================================\nDo you know javascript / jquery animations are outdated nowadays as it takes much time for page loading and also mobile devices comes into play.\nDo you want to increase the standard of your projects by including Css Transitions and Animations like fading in / fading out /sliding in / sliding out\nAren't you taking advantage of Modern browsers solution which comes up with Css Transition and Animation.\nSo, Learn Css Transition and Animation with examples and finally we will create an animated banner in Css.\nWe will cover the followings :\nCss Transition and Animation\nExploring all the CSS properties of Transition and Animation\nHow to create cool effects using transition and animation\nCreating Animated Banner in Css\nIn just 1-2 hours , you will know how to do cool effects using Css Transition and Animation",
      "target_audience": [
        "If you want to create cool transition and animation effects , this course is for you",
        "If you want to create animated banner in Css , you would love this course",
        "If you want to increase the standard of your project , by adding some cool transition effect using css , this course is for you",
        "This is a coding course and hence its not a design course"
      ]
    },
    {
      "title": "Learn Bootstrap - Make Real Projects & Templates",
      "url": "https://www.udemy.com/course/learn-bootstrap-html5-css3-javascript/",
      "bio": "Learn HTML, CSS, Javascript and Bootstrap 4 and Sell Premium Templates Online - Build Premium Themes and Make Money!",
      "objectives": [
        "Build responsive websites from Scratch",
        "Learn HTML, CSS and Javascript from Scratch",
        "Learn complete Bootstrap with HTML 5",
        "Working with HTML 5, CSS 3 and Javascript Tags",
        "Creating Premium Bootstrap Themes",
        "Learn to Sell Themes Online While You Sleep"
      ],
      "course_content": {},
      "requirements": [
        "You need a PC, Mac or Linux with an internet connection",
        "Passion to become a Web Developer"
      ],
      "description": "Are you Looking to boost your income as a Web Developer? Maybe you have a lot of web app ideas but don't know where to start? Or you are seeking a career in Web Development with Bootstrap Programming that will finally give you freedom and flexibility you have been looking for?\n\nBootstrap makes front-end web development faster and easier. It's made for folks of all skill levels, devices of all shapes, and projects of all sizes. Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.\nBuild a strong foundation in HTML5, CSS3, Javascript and Bootstrap Programming with this tutorial and complete course.\nBuild websites from scratch using HTML5, CSS3, Javascript and Bootstrap\nUpload your website to the internet and reach millions of web users\nMake Money from websites by displaying ads. (How to monetise my website)\nContent and Overview\nThis course will take you from knowing nothing about bootstrap web development to a complete Web developer in 5 weeks. You will learn the following:\nGetting started & setup your Mac or PC\nFundamentals of Web Programming\nA complete section on HTML 5\nA complete section on CSS3\nA complete section on Javascript (JS)\nAnd much more.. see course content.\nCourse description if you take this course (which you should!!) know that you are on your way to building a solid and stable foundation for Web Development using HTML5, CSS3, Javascript, JQuery and Bootstrap. You don’t need to spend years and years on learning, with us you can learn in 5 weeks!!!! YES! That is right, in five weeks you’ll be able to make and develop your own app and you never know, you could have it running at the app store and be an instant hit!\nWe have built this course in a way that everything that you learn, you will be able to retain it for a long time. This is why we have distributed the whole course into various sections and not sessions. The reason why we did this is because our course is live and ON DEMAND. Once you buy this course, you have LIFETIME ACCESS to it. You can always refer back to any section that you want to revise and move along. Every section of ours has been built to test your ability. You not only get the content but also are given quizzes and assignments to ensure that what you have learnt is retained and you fully understand the content. (Don’t worry, we won’t scold you if you have some problem, we will be throughout). We assure you, with us you’ll be an WEB Developer in no time!\nNO NEED TO BE A PRO! Our course is designed specifically for people who have ZERO prior experience in programming and have never even programmed a single thing before. It doesn’t matter if you have absolutely no idea about the basics (that is why we are here!), we will teach you everything that you need to know about developing and programming in just 5 weeks. All you need is loads of passion, a hint of dedication, an internet connection and a laptop or PC. It’s that easy!!\nWhat do I learn from this course?\nYou will learn web development and Bootstrap programming in just 5 weeks\nYou'll create engaging and real-world responsive websites\nThis course is offered via On Demand videos that engages students and has a better chance of retention\nYou will have a personal trainer at your desk at all times that will guide you fully from start to end\nWe aren’t finished!  You can learn how to work with APIs, web services and advanced databases Upload your websites to the internet and reach millions of web users\nEARN MONEY by selling premium themes\nWhy choose us? Obviously, once you’ve made up your mind to become an expert developer, you will question the fact that why should you choose us? The answer is because we are passionate about computer programming, we breathe, live and eat code! We have been in the industry for more than a decade and along with our knowledge, we can teach you with hands on experience. We have a decade of experience in our bags of solid programming experience along with five years of application development experience. Our experience can be measured by us having over fifty applications and games (developed by us) on not only the Android Google Play but also on the Apple App Store. You’ll be taught by people who have more than 5 years of training and teaching experience, are Registered Android Developers on Google Play and manage a large community that consists of more than 15 Thousand Developers.\nAre you sold yet? No? we are dedicated teachers and want to spread the joy we receive by developing to others as well, we have made and developed this course by making sure that that joy is kept alive in every section and every lesson.\nIf you’re a … Everyone can learn this course! Whether you want to develop apps as a hobby, whether you’re an entrepreneur who’s looking to save costs and develop his/her own applications, newbies who are new to the tech world or a student looking to develop skills for extra income. You are welcome to join us and this course!\nIf you have any questions or queries related to us or our course you can contact us by email or through any Udemy forum. We shall help you before, during and after the course as well.\nEnrol now.\nWe'll be really excited to see you inside!",
      "target_audience": [
        "This course is highly recommended for you if you've never written a line of code",
        "Recommended for complete beginners",
        "Anyone who want to learn to code",
        "Passion for learning web development with Bootstrap"
      ]
    },
    {
      "title": "HTML5 CSS3 and JavaScript for Beginners: From Zero to Hero",
      "url": "https://www.udemy.com/course/html5-css3-and-javascript-for-beginners-from-zero-to-hero/",
      "bio": "Building Your Foundation in HTML5, CSS3, and JavaScript",
      "objectives": [
        "Understand the fundamentals of HTML, including its purpose, the structure of HTML tags, and the history of HTML and HTML5.",
        "Learn how to use quotation-related HTML tags, including blockquotes, short quotations, and other semantic elements for content citation and abbreviation.",
        "Learn how to use quotation-related HTML tags, including blockquotes, short quotations, and other semantic elements for content citation and abbreviation.",
        "Learn how to create tables in HTML5, including the use of table elements, attributes, and proper structuring of tabular data.",
        "Develop proficiency in creating HTML forms, understanding form attributes, and working with various input types to collect user data.",
        "Explore the essential HTML formatting elements, such as headings, paragraphs, and various formatting tags, to create well-structured web content.",
        "Explore the essential HTML formatting elements, such as headings, paragraphs, and various formatting tags, to create well-structured web content.",
        "Master the art of creating hyperlinks in HTML, including internal and external links, email links, and page jump links, while understanding link attributes etc",
        "Distinguish between block-level and inline-level HTML elements and understand their roles in web page layout and content structure.",
        "Explore HTML5 media elements, including video and audio tags, and discover how to embed multimedia content, including YouTube videos, into web pages.",
        "Embrace the use of semantic HTML elements to enhance the accessibility and meaning of web content, both in theory and practice.",
        "Introduce the fundamentals of CSS, including its role in web design, different types of CSS, and CSS selectors for styling HTML elements.",
        "Explore CSS fundamentals, including the box model, box shadow, border radius, CSS grid, and flexbox for practical web page styling.",
        "Delve into typography in web design by working with Google Fonts, custom fonts, and CSS typography properties to enhance text presentation.",
        "Master the art of using background images and gradients in CSS to create visually appealing and customizable web backgrounds.",
        "Apply the skills learned in previous sections to create a complete single-page website, including navigation, hero sections, and content sections.",
        "Learn the principles of responsive web design using media queries and create a responsive menu for your web project.",
        "Explore CSS3 transformations and animations to add interactivity and visual appeal to web elements.",
        "Discover advanced web design techniques, including implementing a slider and a gallery lightbox using JavaScript libraries.",
        "Learn how to test and debug web pages using browser developer tools and feature detection methods, ensuring cross-browser compatibility.",
        "Apply the knowledge gained throughout the course to create another single-page website project, demonstrating proficiency in web design and development.",
        "Understand JavaScript engines, Master JavaScript fundamentals, including variables, data types, and operators, and write basic JavaScript code.",
        "Create effective conditional statements, handle logical conditions, and utilize control flow mechanisms like the ternary operator and switch statements.",
        "Grasp advanced concepts like coercion, functions in JavaScript.",
        "Become proficient in working with arrays and objects in JavaScript, including using various array methods and creating custom objects with methods.",
        "Efficiently use different types of loops in JavaScript, such as for, while, do-while, forEach, for...in, and for...of loops.",
        "Interact with the DOM, select and manipulate web elements, and add event listeners.",
        "Gain expertise in advanced JavaScript topics, including objects, self-executing functions, protype, and method chaining.",
        "Understand advanced JavaScript concepts like classes, module exports, private properties, and inheritance.",
        "Develop a dynamic cards with the power of JavaScript."
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "Embark on a transformative journey into the world of web development with our comprehensive course, \"HTML5 CSS3 and JavaScript for Beginners: From Zero to Hero.\" Designed for absolute beginners, this course is your gateway to mastering the fundamental building blocks of modern web design.\nWhat You'll Learn:\nHTML5 Essentials: Dive into HTML5, the cornerstone of web development, and learn how to structure content for the web effectively.\nCSS3 Styling: Explore the power of CSS3 to create visually stunning and responsive designs, making your websites stand out across devices.\nJavaScript Basics: Gain a solid understanding of JavaScript and how to use it to add interactivity and dynamic features to your web pages.\nBuilding a Strong Foundation: This course is more than just coding — it's about building a strong foundation. Understand the principles of clean code, best practices, and the essential skills every web developer should have.\nPractical Projects: Apply your newfound knowledge through hands-on projects that simulate real-world scenarios. By the end of the course, you'll have a portfolio showcasing your skills.\nWhy Enroll:\n\"Building Your Foundation in HTML5, CSS3, and JavaScript\" is not just a course; it's your path from zero to hero in web development. Whether you're looking to kickstart a career, launch your projects, or simply understand the magic behind the web, this course provides the essential skills and knowledge you need.\nJoin me now and start building your foundation in HTML5, CSS3, and JavaScript. Let's turn your coding dreams into reality!\"",
      "target_audience": [
        "Web Developers looking to solidify their HTML, CSS and JavaScript skills.",
        "Beginners are eager to dive into web design and development.",
        "UX/UI Designers seeking a better understanding of HTML, CSS and JavaScript for their projects.",
        "Anyone interested in creating visually appealing and responsive websites",
        "Beginner Frontend Developer who want to pursue their career in Frontend Web Development"
      ]
    },
    {
      "title": "Learn Angular by building a Progressive Web App (PWA)",
      "url": "https://www.udemy.com/course/learn-angular-8-by-building-a-progressive-web-app-pwa/",
      "bio": "Develop a real world Movie Browser app and deploy on Google's Firebase free hosting service",
      "objectives": [
        "Install Node, Angular CLI, Firebase tools.",
        "Create a new Angular 8 app from scratch.",
        "Build a production ready application.",
        "Develop a real \"Movie browser\" Application.",
        "Deploy to Google Firebase's free hosting service.",
        "Understand what a PWA (Progressive Web Apps) is.",
        "Test your Angular 8 application on Android phone",
        "Install the Movie browser app as a desktop application",
        "Run your app even when you are offline (using service workers)",
        "Create web applications that look and feel like native mobile apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Characteristics of a PWA"
        ],
        "Software setup": [
          "Installing node.js",
          "Installing Angular CLI",
          "Installing Firebase tools",
          "Installing VS Code",
          "Creating an account with omdbapi.com"
        ],
        "Download the Angular app": [
          "The Movie Browser Angular App"
        ],
        "Let's create the Movie Browser App": [
          "New Angular application",
          "Changed in version 11+",
          "Home component",
          "Header component",
          "MovieList component - Part 1",
          "Routing and Single-Page-Application",
          "Getting the list of movies based on search term",
          "MovieList component - Part 2",
          "Getting the movie details based on IMDB id",
          "MovieDetails component"
        ],
        "Making the app \"Progressive\"": [
          "Adding PWA to our project",
          "Walk through of the generated artifacts",
          "Creating and updating icons",
          "New Firebase hosting for our application",
          "Deploying our Angular application to Firebase hosting",
          "Accessing the MovieBrowser PWA site on Chrome",
          "PWApp on a mobile phone"
        ],
        "Conclusion": [
          "Thank you note and bonus lecture"
        ]
      },
      "requirements": [
        "Basic HTML/CSS/JS knowledge",
        "You should have a PC or Laptop with decent internet connection"
      ],
      "description": "A Progressive Web App or PWA is a web application that has a set of capabilities (similar to native apps) which provide an app-like experience to users. PWAs need to meet a set of essential requirements that we'll see next. PWAs are similar to native apps but are deployed and accessible from web servers via URLs, so we don't need to go through app stores.\n\n\nA PWA needs to be:\nProgressive: Work for every user, regardless of browser choice, because they are built with progressive enhancement as a core tenet.\nResponsive: Fit any form factor, desktop, mobile, tablet, or whatever is next.\nConnectivity independent: Enhanced with service workers to work offline or on low-quality networks.\nApp-like: Use the app-shell model to provide app-style navigation and interactions.\nFresh: Always up-to-date thanks to the service worker update process.\nSafe: Served via HTTPS to prevent snooping and ensure content has not been tampered with.\nDiscoverable: Are identifiable as \"applications\" thanks to W3C manifests and service worker registration scope allowing search engines to find them.\nRe-engageable: Make re-engagement easy through features like push notifications.\nInstallable: Allow users to \"keep\" apps they find most useful on their home screen without the hassle of an app store.\nLinkable: Easily share via URL and not require complex installation.\n\n\nIn detail, this course will cover everything you need to build amazing PWAs - leading to a score of 100 (out of 100) in Google's PWA auditing tool \"Lighthouse\".\n\n\nThis is completely a hands-on training, bringing all the best practices that a developer should follow in his/her projects.\n\n\nHere are some of the feedbacks given by my students:\n\n\nBest instructor and best trainer on Udemy. Quick Response and very friendly .i have been checked out many angularJS courses (very long tutorials) around 30 hours on Udemy. but vinod Sir within 5 & 6 hours who taught every things very simple.he has good knowledge and good experience on Teaching method.i recommend this course .?? (Sithat iffazer)\n\n\nThis is a great and simple course for beginners. Wish the Author build more courses like this for angular 7. With a real DB, auth etc... Thanks and ThumbUp\n\n\nThe Course was clear and concise and touches upon the important Angular features. (Harsh Kedia)\n\n\nStep by step learning,explain everything easy and clear. Perfect for beginners! (Dragan Stevanovic)\n\n\nI have not yet completed the course. But I am very much confident, after completing this course, it would be wonderful experience. So far it's going very well. This course is simply superb. The tutor - Vinod, is simply great. He explained difficult concepts in a simplest way. He knows how to make a teaching session an interesting and informative one. Thanks to you Udemy for this opportunity and special thanks to Vinod. (Venkatesh)\n\n\nVery helpful. I like the way trainer Vinod makes things so simple to understand. (Robinet Gimlet)\n\n\nVery detail oriented. Explained all possible ways in each section i.e. environment setup(eclipse, tomcat, h2 DB), application development to deployment, testing with postman, error handling, eclipse shortcuts. (Hemalatha Bhimavarapu)\n\n\nI got to learn so many new things from this course and very well explained, Thank you! (Tushar Patil)\n\n\nIt is very well and detailed any one can understand and learn the course. I would recommend it to others. (Ashwini Iyer)\n\n\nGreat Course, the instructor was easy to follow and help me understand the subject better. Thank u. (Aida Hailu)\n\n\n------------------------------------------------------------------\nSo, see you inside the course,\nVinod.",
      "target_audience": [
        "Anyone who wants to know what a PWA is.",
        "Software developers to learn Angular 8 by coding a real world app",
        "Frontend developers interested to learn Angular 8",
        "Anyone exploring new features of Angular 8"
      ]
    },
    {
      "title": "Master Angular 4 by Example - Build 7 Awesome Apps!",
      "url": "https://www.udemy.com/course/learn-angular-4/",
      "bio": "Learn many advanced features in Angular 2+ by building 7 applications. Includes CRUD, Node.js, Routing and much more!",
      "objectives": [
        "Develop Applications using Angular",
        "Build Apps with Angular and Node.js",
        "Implement CRUD in Angular",
        "Use Advanced Routing",
        "Go Real-Time with SocketIO",
        "Work with Template-driven and Reactive Forms",
        "Add Modal, Tooltips and Pagination",
        "Understand how to use Observables",
        "Display Loading and Error Messages",
        "Work with Many Different API's"
      ],
      "course_content": {},
      "requirements": [
        "Angular 2 Basics",
        "Javascript Basics"
      ],
      "description": "Learn Angular 4 by building 7 interesting applications.\nIn this course we cover many important and advanced Angular features that you can use right away in your own applications.\nFor each example app, we will download a simple boilerplate and then jump right in and start coding our apps. This course is suitable for anyone who already understands the basics of putting together Angular 2+ applications.\nAbout the Apps:\n1. Simple CRUD\n- You will learn:\nTo use our Boilerplate code\nHow to perform CRUD operations on a list of products\nBasic Angular concepts such as ngFor and ngIf\nHow to build components, services and modules\n...\n2. Pokedek\n- You will learn\nCRUD using the in-memory-API\nHow to use Observables\nWorking with Template driven forms\nAdd a Modal and Tooltips\n...\n3. TV Watcher\n- You will learn:\nHow to separate your code by feature into their own Modules\nRouting to muliple parameters\nHow to pass data to unrelated components\nHow to send multiple HTTP requests using forkJoin\nHandle errors and display loaders\nUse the TVMaze API to search and display shows\n...\n4. Weather App\n- You will learn about:\nObservables including advanced concepts like debounceTime and switchMap\nHow to perform CRUD operations to add and remove new Weather items\nUsing Reactive forms\nInput and Output\nCommunicating with the OpenWeather API\n...\n5. Socket Chat\n- You will learn:\nHow to connect Angular to a Node.js backend\nUse Socket-IO to connect client with server\nSend messages in real-time across unlimited connected clients\n...\n6. Twitter Streaming\n- You will learn:\nHow to connect Angular to Node.js\nHow to use the Twit npm module to connect to the Twitter API\nTo search tweets by keyword\nTo display tweets in real-time using Socket-IO.\nCreate pagination using ng2-bootstrap\n...\n7. Geonames App\n- You will learn:\nHow to sort and filter data\nHow to route to an inner page\nUse the Geonames API\n...\nMore to come!  You can expect at least 1 more app to be added to this course.\nEnroll now to take full advantage of the limitless possibilities when using Angular to develop your applications!",
      "target_audience": [
        "Someone who already understands the basics of building Angular 2 applications using typescript.",
        "Developers who want to explore more advanced concepts in building their Angular applications."
      ]
    },
    {
      "title": "Develop RESTful Java Web Services using JAX-RS and Jersey",
      "url": "https://www.udemy.com/course/develop-restful-java-web-services-using-jax-rs-and-jersey/",
      "bio": "Everything you need to know for developing your RESTful web service.",
      "objectives": [
        "Setup a Java development environment using Java 8, Eclipse & Tomcat 9 on your computer",
        "Create a new maven project & add the necessary library dependencies for creating your first JAX-RS web service",
        "Code your web services to respond with different MIME types",
        "Handle errors",
        "Create web services that support CRUD operations",
        "Test your Java web services with the Postman Chrome extension",
        "Build and deploy web services"
      ],
      "course_content": {
        "Welcome to the world of web services": [
          "Course intro",
          "Overview of RESTful web services.",
          "Overview of JAX-RS"
        ],
        "Setup": [
          "Install JDK, Eclipse and Tomcat",
          "Configure Tomcat in Eclipse",
          "Create and run a new Maven web project in Eclipse"
        ],
        "Create REST services": [
          "Create a simple REST endpoint to understand the basics",
          "Producing different representations from the web service"
        ],
        "Setting up the database for our web service": [
          "Downloading and setting up H2 Database",
          "UPDATE: H2 database issue",
          "Importing the DB table and data"
        ],
        "Creating the DAO Layer for our web service": [
          "Creating the DAO interface",
          "Implementing the addContact() method",
          "Implementing the updateContact() method",
          "Implementing the deleteContact() method",
          "Implementing the findXXX() methods",
          "Creating the DaoFactory class"
        ],
        "Performing CRUD operations": [
          "Handling GET requests to retrieve a resource",
          "Handling POST requests to create a resource",
          "Handling PUT requests to update a resource",
          "Handling DELETE requests to delete a resource"
        ],
        "Handling errors": [
          "Responding with HTTP error codes for exceptions"
        ],
        "Custom representations (other than JSON or XML)": [
          "Using MessageBodyWriter",
          "Using MessageBodyReader"
        ],
        "Cross Origin Resource Sharing (CORS)": [
          "Creating a servlet filter to handle CORS"
        ],
        "Building and deploying": [
          "Creating WAR file from your Eclipse project",
          "Deploying on a locally installed Apache Tomcat Server"
        ]
      },
      "requirements": [
        "Basic knowledge of Java programming language",
        "Basic knowledge of web applications"
      ],
      "description": "JAX-RS the Java API for RESTful Web Services is a Java programming language API specification that provides support in creating web services according to the Representational State Transfer (REST) architectural pattern. JAX-RS uses annotations, introduced in Java SE 5, to simplify the development and deployment of web service clients and endpoints.\n\n\nFrom version 1.1 on, JAX-RS is an official part of Java EE 6. A notable feature of being an official part of Java EE is that no configuration is necessary to start using JAX-RS. For non-Java EE 6 environments a small entry in the web.xml deployment descriptor is required.\n\n\nThis course will guide you through the steps in creating powerful RESTful web services using the Java official API.\n\n\n\n\nAll the best!",
      "target_audience": [
        "Java developers"
      ]
    },
    {
      "title": "Java EE, Web Development: HTTP, Server,Servlet,HTML/CSS,JSP",
      "url": "https://www.udemy.com/course/web-development-learnit/",
      "bio": "Learn Client-Server Architecture, TCP/IP, HTTP, Web Servers, Tomcat, HTML/CSS, Servlets, Web Filters, JSP, JSTL, Maven",
      "objectives": [
        "Web Development",
        "Client-server Architecture",
        "Web Servers",
        "Apache Tomcat Web Server / Servlet Container",
        "OSI Model",
        "TCP/IP concept",
        "Deep understandanding of HTTP protocol",
        "Servlets in Java",
        "HTML & CSS",
        "HTML Forms",
        "HTTP Session",
        "Cookies",
        "Web Filters",
        "Events Handling in Web Application",
        "Error Handling in Web Application",
        "JSP (Java Server Pages)",
        "JSTL",
        "Custom Tags in JSP",
        "Tag Library Descriptors",
        "Build Tools for Java Apps",
        "Maven",
        "We will create online store web application together to practice skills gained during the course",
        "Spring Framework",
        "Spring Core",
        "Spring IoC (Inversion of control) & Spring DI (Dependency Injection)",
        "Spring MVC",
        "Spring Security",
        "Spring Data JPA",
        "Spring JDBC",
        "Spring AOP",
        "REST Architecture",
        "Spring Boot",
        "Creating of the Web application (online shop) using Srping Framework",
        "OpenAI API",
        "ChatGPT",
        "Best Practices of using ChatGPT",
        "Slack Messanger API",
        "Jira Software Cloud API",
        "ChatGPT, Slack, Jira Integration via Java Spring Boot Web App",
        "Create Web App via Spring Boot, ChatGPT, Jira, Slack for Project Management Operations Automation"
      ],
      "course_content": {},
      "requirements": [
        "Understanding of Core Java and Java Syntax",
        "Knowledge of JDBC, Relational Databases and SQL (this skills needed to understand the online shop example)"
      ],
      "description": "From this course, you can learn Web Development in Java.\nThere are a lot of other courses on this topic. So, why would you choose exactly this course?  Here are just a few reasons:\n\n- Coding examples\nTo learn to program is not enough just watching videos and reading books. You also need to have a lot of practice. In this training course, you will review multiple practical tasks and coding examples which will help you learn and understand Java better.\n\n- Open source code\nWe hide nothing from our students! Including the source code for the home task solutions and source code of examples that were shared during the lesson. Having the source code you can just copy and paste it to run it on your local computer to understand how things work better.\nYou are allowed to use all source code examples for learning purposes. This helps significantly to configure the environment and make tests work, especially in case students didn't work with any testing framework in the past.\n\n- Q&A support\nThe significant difference between the online and offline learning process is the instructor's availability. If you are in one room with a tutor he always can help you to get understand the specific concept or to help fix your code on your computer.\nIn this course, we are supporting students with answers to any questions flagged in the Q&A section. In case there will be recurring questions - separate video lessons will be created to show how to address the issue.\nSo with this course you are not just getting video materials, code exercises, source code, access to the free mobile application without limits (which is still pretty cool, huh? :) ), but you also get tutor support and answers to your questions along with this course.\n\n- Relevant knowledge\nAfter our team investigated other Java courses on Udemy we realized that most of them have nothing in common with real life. The information which is shared there is very old and significantly out of date. For example, the instructor teaches a framework which is not been used already for 15 years. Or instructors do stress on the programming design which is not used anymore at all!\nThe instructor of this course is a consultant in a top-rated IT outsourcing company and helps to bring cutting-edge solutions in IT for all his clients. Feel free to check the LinkedIn page of the instructor and check skills endorsement. More than 19 thousand people across all over the world (BTW most of them are from the top 100 companies of the world) evaluated the skills of Andrii Piatakha.\nWith this course, you can be sure that you will spend your time learning the right things from one of the best IT consultants in the world.\n\n- Free mobile App without limits for our students\nKnowing Java is one skill. Being able to pass interviews in the company - that is another skill :) Nowadays a lot of companies use tests to select candidates on the first level of interview. We developed applications to practice skills specifically for such purposes.\nIn this course, we will provide you link to download our FREE mobile app for android. (soon it will be also available for iOS platforms)\nThe instructor of this course comes up with hundreds of tests that are used to test the knowledge of candidates. With this application, you will be well-prepared for the interview.\nAlso, only for our students - there is no limit on attempts to pass certification. In the course, we will tell you how to set up a special bonus code that will remove restrictions for our students inside the app.\n\n- High concentration of useful material in each lesson\nSometimes you can notice that watching 5 minutes of our lesson is equivalent to watching another 30 minutes lesson.\nThis is because time spent for preparation for the lesson (script for the lesson, lesson structure) and video editing (to cut boring pieces of the lesson or time when the program loads) sometimes 10 times as much (sometimes even 20) as the final lesson duration after video editing.\nAlso, each topic is separated from another. In case some concept will be explained in the next lesson and you don't need to worry about understanding this in the scope of this lesson - the instructor will make an announcement when a specific topic will be covered.\nGo and try it yourself! We will appreciate your feedback.\n\n\n\n\nSo don't wait! Take a look at the lessons' preview if you still have doubts!\nBuy this course today, and you will get all updates for FREE!\nFor those who successfully passed this training course, or for students who were recognized for asking amazing questions, there is a special offer from the IT-Bulls company! The creator of this course is IT-Bulls company CEO and Founder. We are always in search of talents to run our amazing startups together with you. Probably you always dreamed about running your startup? In this course, you will be able to find the team who will teach you how to do that and (in particular cases) will be glad to help with implementation!\nHope you enjoy this course! And remember, we appreciate all your feedback! Your feedback will help us to become even better! Your feedback will help us to create to best Java course ever!\nSee you at the lessons! :)",
      "target_audience": [
        "Java Software Engineer who made a decision to learn Java Web Development"
      ]
    },
    {
      "title": "Getting Started with Building a GWT Web Application",
      "url": "https://www.udemy.com/course/getting-started-with-building-a-gwt-web-application/",
      "bio": "Learn the basics to making a GWT application quickly and easily.",
      "objectives": [
        "Understand the pieces that make up GWT Application development",
        "Understand how debug the GWT Application with Eclipse",
        "Understand how to use Super Dev Mode with Eclipse",
        "Understand how to create a GWT Application",
        "Understand how to work with GWT UI components",
        "Understand how to work with logical GWT and native browser events.",
        "Understand how to configure remote ajax RPC calls",
        "Understand how to use CSS and image resrouces"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Working with the IDE": [
          "Installing Eclipse",
          "Installing the Eclipse GWT Plugin",
          "Eclipse IDE Overview",
          "Download GWT 2.8"
        ],
        "Creating a GWT Application": [
          "Create an GWT application in Eclipse"
        ],
        "Debugging the Application": [
          "Starting the debugger - Part 1 of 2",
          "Starting the debugger - Part 2 of 2"
        ],
        "Working with the UI": [
          "GWT Widget creating options",
          "Extending a pre-existing widget",
          "Creating a Composite GWT widget",
          "Creating a Resize Composite Widget",
          "Creating a GWT IsWidget",
          "Creating and using a GWT Cell",
          "Creating a widget and using UiBinder"
        ],
        "Working with Events": [
          "Working with DOM Events",
          "Working with Logical Events"
        ],
        "Working with Ajax Data Transport": [
          "Working with RPC"
        ],
        "Working with Styling": [
          "Working with CSS and Image Resources"
        ]
      },
      "requirements": [
        "You should be familiar with Javascript.",
        "You should be familiar with CSS.",
        "You should be familiar with Java.",
        "You should be familiar with HTML."
      ],
      "description": "I’m Brandon Donnelson and I’ve been working on GWT a while since somewhere around 2008. I enjoy helping make development easier. So the other day someone said they wanted to see more getting started video content so I started out with this course.\nThis course covers the basic GWT application development by video example. It starts out with Eclipse GWT application creating and debugging. Then moves into UI component creation, event handling and ajax calls. And finishes off with providing css styling and images for the UI.\nIf you’re new to GWT, I think this would help build up quick terminology and context around building an application using GWT.",
      "target_audience": [
        "This course is suited for those beginning to learn GWT."
      ]
    },
    {
      "title": "HTML and HTML5 For Beginners 2016",
      "url": "https://www.udemy.com/course/html-and-html5-for-beginners-2016/",
      "bio": "Explanation of HTML and HTML 5 from the very beginning",
      "objectives": [
        "Implement HTML and HTML 5 websites",
        "Understand HTML code",
        "Fell free in all the areas of HTML and HTML5",
        "Create modern webpages and web applications"
      ],
      "course_content": {
        "Getting Familiar With HTML": [
          "Inroduction - What We Will Learn",
          "Let's Install Visual Studio Code",
          "Create Project Stucture",
          "Introduction to HTML",
          "Your First HTML Page",
          "Elements and Attributes",
          "Meta, Paragraph and Heading Tags",
          "Text Formatting and Comments",
          "CSS - Inline, Internal, and External",
          "Tables",
          "Links and images",
          "Meta Tags",
          "Lists",
          "Block and Inline Display",
          "Class Selector and ID Selector",
          "Introduction to JavaScript"
        ],
        "HTML Forms": [
          "Summary Of Section",
          "HTML Forms Overview",
          "Elements",
          "Types",
          "Attributes",
          "Your First Form Creation",
          "Summary on HTML Forms.mp4"
        ],
        "Understanding HTML 5": [
          "Intro HTML5",
          "HTML5 vs. Previous HTML Doctypes",
          "Elements & Semantic Layout",
          "Video & Audio Multimedia Elements.mp4",
          "Intro to Canvas and SVG",
          "Graphics - Canvas",
          "HTML5 Graphics - SVG.mp4",
          "HTML5 Input Types",
          "HTML5 - Web Workers"
        ]
      },
      "requirements": [
        "Visual Studio Code (we'll install it together in the lectures) or any other IDE"
      ],
      "description": "In this tutorial we’re going to learn from scratch many different areas of HTML and HTML 5.\nThe very first topic we're going to learn is what is HTML.\nWe will then get down and will create our first HTML page.\nWe will also cover all the different attributes and elements associated with HTML and we will touch CSS and JavaScript quickly to get a basic idea about these languages.\nWe will cover the HTML5 and we will teach you all of the new features of HTML5 related to input forms, geolocation, web sockets, and many other items related to HTML 5 so that you can advance your skills when you create modern webpages and web applications.\nThe very nice thing about the HTML, it opens up the field for many different programming languages.\nThis will improve your skills for everything that you’ve learned in all of the video lecture series, so it’s important to follow these to enhance your HTML skills.",
      "target_audience": [
        "Anyone who is going to start web development career",
        "Beginner Front end developers"
      ]
    },
    {
      "title": "MEAN project with Angular 4 (and 5) - Creating a CMS",
      "url": "https://www.udemy.com/course/mean-project-with-angular-4-creating-a-cms/",
      "bio": "Learn how to build a MEAN app with Angular 4 (and 5), Node/Express, MongoDB and Bootstrap",
      "objectives": [
        "Build custom apps using Angular 4 and node/express (or any other backend api)"
      ],
      "course_content": {
        "Introduction and Project Overview": [
          "Introduction",
          "project overview"
        ],
        "The Project": [
          "tools overview and new database",
          "creating the angular app",
          "adding jquery and bootstrap",
          "adding the navbar",
          "creating the node api project folder",
          "setting up pages routes",
          "GET pages",
          "creating the page service",
          "routes and getPages",
          "navbar page links",
          "router outlet",
          "pages component",
          "adding the page title",
          "users model and routes",
          "creating the user service",
          "register 1",
          "register 2",
          "register 3",
          "login 1",
          "login 2",
          "edit navbar and logout",
          "admin pages",
          "admin navbar",
          "add page 1",
          "add page 2",
          "add page 3",
          "add page 4",
          "add page 5",
          "edit page 1",
          "edit page 2",
          "edit page 3",
          "edit page 4",
          "delete page",
          "edit same slug bug fix",
          "sidebar 1",
          "sidebar 2",
          "sidebar 3",
          "add sidebar option when adding pages",
          "add sidebar option when editing pages",
          "display sidebar",
          "Changing Http Module to HttpClient module"
        ],
        "Bonus Material": [
          "Bonus Material"
        ]
      },
      "requirements": [
        "Some familiarity with Angular 4, Node/Express and MongoDB is assumed",
        "You should have MongoDB installed on your machine already before starting the course"
      ],
      "description": "A no-nonsense and to the point course that shows you how to create a real-world application using the MEAN stack with Angular 4.\nThis course is for everyone that has some familiarity with Angular 4 and Node/Express and wants to learn how to combine the two technologies to make a real-world application.\nNOTE 1: I do NOT explain Node/Express in this course, if you are not familiar with Node/Express I suggest first taking my other course - Node.js Express Project - Cms and Shopping Cart\nNOTE 2: You should have MongoDB installed on your machine before starting this course\nNOTE 3: If the current asking price is too much for you feel free to message me for a discount!",
      "target_audience": [
        "Anyone who wants to develop apps with Angular 4 and node/express (or any other backend api)"
      ]
    },
    {
      "title": "PHP Laravel: Build Real Estate Management System",
      "url": "https://www.udemy.com/course/php-laravel-2023-build-real-estate-management-system/",
      "bio": "Build Real Estate Property Listing Project with Laravel 10 MySQL and Bootstrap and Build up your Web Development Skills",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Laravel UI package",
        "Learn how the MVC structure works in Laravel",
        "Integrate your own theme easily",
        "Work with Models and Eloquent the professional way",
        "Work with views and Eloquent the professional way",
        "Work with Controllers and Eloquent the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn to create a working multi search box",
        "Learn some advanced routing ways",
        "work with Middlewares and Guards",
        "Learn to validate with Requests",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Before you Start with the Course",
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Getting Started and First Steps": [
          "Design and Code for the Project",
          "Creating a New Laravel Project and Running the Server",
          "Creating Authentication System",
          "Integrating our Theme pt.1",
          "Integrating our Theme pt.2"
        ],
        "Getting Main Features Done": [
          "Working with Home Page",
          "Displaying Properties pt.1",
          "Displaying Properties pt.2",
          "Displaying Property Details pt.1",
          "Displaying Property Details pt.2",
          "Displaying Related Properties",
          "Sharing Properties on Social Media"
        ],
        "Sending Requests to Agents and Saving Properties and More": [
          "Inserting Requests",
          "Validating Request Form pt.1",
          "Validating Request Form pt.2",
          "Saving Properties",
          "Validating Saving Properties",
          "Displaying Properties by Type pt.1",
          "Displaying Properties by Type pt.2",
          "Displaying Properties Based on Home Type pt.1",
          "Displaying Properties Based on Home Type pt.2"
        ],
        "Creating Users Pages and Searching for Properties": [
          "Working with Contact and About Pages",
          "Displaying Properties by Price",
          "Validating and Cleaning up",
          "Displaying Requests for every User",
          "Displaying Saved Properties for every User",
          "Cleaning Routes up",
          "Searching for Properties",
          "Validating Users Pages"
        ],
        "Getting Started with Admin Panel": [
          "Code and Design for Admin Panel",
          "Creating Custom Login System pt.1",
          "Creating Custom Login System pt.2",
          "Validating Authentication System pt.1",
          "Validating Authentication System pt.2"
        ],
        "Working with Admins Section": [
          "Working with Index Page",
          "Displaying All Admins",
          "Creating New Admins"
        ],
        "Working with Home Types": [
          "Displaying All Home Types",
          "Creating New Home Types",
          "Updating Home Types",
          "Deleting Home Types"
        ],
        "Working with Requests": [
          "Displaying Requests"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of Laravel would help a lot"
      ],
      "description": "This online course is designed to teach you how to build a complete real estate project using PHP Laravel, MySQL, and Bootstrap. The course will cover Laravel fundamentals (A to Z) and help you develop a complete dynamic multi-user real estate website with Laravel 9 or 10.\n\n\nHere are some of the key features of the course:\n\n\nLearn Laravel installation and setup\nBuild a database schema for real estate listings and applications\nCreate models, controllers, and views for real estate listings and applications\nImplement user authentication and authorization\nLearn how the MVC structure works in Laravel\nImplement search and filtering functionality for real estate listings\nBuild a dashboard for real estate agents and clients\nIntegrate your own theme easily\nLearn some advanced routing ways\nwork with Middlewares and Guards\nLearn to validate with Requests\nWrite professional maintainable code\nLearn file uploading and how to fully update and delete it and so much more\n\n\nThe course is suitable for beginners and advanced learners who want to learn Laravel and build a real estate project from scratch. You will also learn some advanced topics. Additionally, you will learn how to create a responsive design for optimal user experience on all devices.\n\n\n\nEnroll in this course today and start your journey to becoming a skilled web developer. The course includes hands-on exercises, tips, and tricks to help you practice and reinforce your learning. You will also receive a certificate of completion upon finishing the course.",
      "target_audience": [
        "People who learned PHP Laravel and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "WebSockets Protocol - Very Informative - 2025",
      "url": "https://www.udemy.com/course/websockets-protocol/",
      "bio": "Master WebSockets Without Libraries. A Complete Advanced WebSockets Course For Everyone On The WebSocket Protocol",
      "objectives": [
        "Gain a deep understanding of pure WebSockets (no libraries)",
        "Grasp how WebSockets work, under the hood",
        "Learn masking, XOR'ing, cache poisoning and why it only applies when a client sends data to a server",
        "Master the WebSocket binary data frame",
        "Build WebSocket projects to understand advanced concepts",
        "Learn how to use WebSockets with HTTP/2 and HTTP/3",
        "Learn how WebSockets are different to AJAX, Short Polling, Long Polling, and SSEs",
        "Build your own WebSocket API or library",
        "Understand how WebSockets interact with other protocols like TCP/IP/UDP/QUIC/ALPN/ARP etc",
        "Understand what it means that WebSockets offer true \"bi-directional\" communication",
        "Understand what it means that HTTP/1.1 is a text based protocol versus WebSockets that are a binary based protocol",
        "Examine WebSocket data packets",
        "Server-side code that implements WebSockets",
        "Have fun mastering WebSockets",
        "You will emerge an expert",
        "Gives you depth of knowledge to boost your ability and confidence",
        "I am here to support you, step-by-step",
        "Practical – build objects with multiple levels of prototypes with me",
        "Understand how the Sec-WebSocket-Key and Sec-WebSocket-Accept values are calculated and why they are needed",
        "Learn XOR'ing and masking",
        "Drastically improve your ability to debug problems in WebSocket applications",
        "AND A BUNCH MORE!"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTTP, JavaScript and HTML will be helpful",
        "Desire to understand the INNER-WORKINGS of the pure WebSocket protocol (no libraries)",
        "A Mac or PC is required as you need to code alongside me to learn effectively"
      ],
      "description": "*** THE BEST WEBSOCKETS COURSE ***\nPure WebSockets: Forget libraries! Learn to implement WebSockets from the ground up, harnessing their raw power for real-time applications.\nNetwork Stack: Gain a solid understanding how WebSockets work with other network communication protocols like TCP and UDP.\nHTTP Upgrade Process: Discover how WebSockets use the HTTP protocol to establish persistent connections, transitioning from HTTP to full-duplex communication.\nClient-Side API Mastery: Get hands-on experience with the native WebSocket API, enabling you to send and receive messages in real time. CRAZY!\nServer-Side Development: Learn how to use Node.js to implement WebSockets. Write server-side code that handles WS connections seamlessly.\nThis course is very informative, created with YOU in mind.\nThis WebSockets course gets YOU to the next level, and I am with you all the way. I have set out to provide you with the best WebSockets course available and I believe I achieved my goal.\n\n\nWhy WebSockets Are a Game Changer for Web App Developers\nImagine a world where your web applications can communicate instantly, just like a conversation between friends.\nWith WebSockets, this dream becomes a reality.\nUnlike the aging HTTP protocol, which relies on a request/response model, WebSockets establish a persistent connection between the client and server, enabling real-time data exchange without the need for constant polling.  In the real world, where apps are expected to deliver location-based services, real-time stock updates, and seamless live chat experiences, the limitations of HTTP become real.  The HTTP request-response model, while effective for static content delivery, struggles to keep up with the demands of newest web applications.\nWebSockets provides a solution that is both efficient and scalable. By maintaining a persistent connection, WebSockets reduce the overhead associated with multiple HTTP requests, leading to faster response times and improved user experiences.\nTHIS COURSE FOCUSES ON THE PURE WEBSOCKET PROTOCOL. VERY INFORMATIVE. WITHOUT LIBRARIES.\n\n\nWHAT SKILLS ARE NEEDED?\nYou don't need any prior WebSocket knowledge.\nI will take you through the WebSocket protocol from the basics through to the very advanced.\nA basic knowledge of HTTP, HTML and JavaScript is required. Remember, JavaScript is important because in order to use WebSockets on the client, you have to use JavaScript to interact with the WebSockets API.\n\n\nWEBSOCKETS ARE ESSENTIAL\nHere’s why learning about WebSockets is not just great, but essential for any aspiring developer:\nInstant Communication\nWith WebSockets, your applications can send and receive messages in real time. This means no more having to use HTTP to send a request to a server, just to find out if there is new data.  This also means no more refreshing the page to see updates! Whether you’re building a chat app, a live sports scoreboard, or a collaborative tool for teams, WebSockets allow users to interact quickly, creating a more engaging experience.\n\n\nEfficient Data Transfer\nWebSockets provide a more efficient way to transfer data compared to traditional HTTP requests. As you'll learn in this course, WebSockets use a binary framing layer (called a binary data frame) to wrap all messages into. This reduces latency and improves performance, making your applications faster and more responsive. It reminds me of my nifty-fifty days on the scooter\n\n\nReal-Time Features Made Easy\nWant to add real-time features to your website? WebSockets make it simple! From live notifications to instant updates, you can enhance user experience dramatically. Imagine users receiving alerts as soon as new content is available or seeing live updates in a collaborative document. With WebSockets, these features are possible.\n\n\nFuture-Proof Your Skills\nAs web technologies evolve, understanding WebSockets positions you to stay ahead of the curve. Many modern apps rely on real-time communication, and being proficient in WebSockets will make you a more versatile and sought-after developer. Plus, you’ll be ready to work with the latest web standards like HTTP/2 and HTTP/3, which further enhance WebSocket performance. By understanding how WebSockets work, you'll be able to quickly learn other technologies like WebTransport and WebRTC, enhancing your skillset even more.\n\n\nBuild Projects That Stand Out\nIn a competitive job market, having real-time capabilities in your projects can set you apart. Employers are looking for developers who can create dynamic, interactive applications. Mastering WebSockets will empower you to build standout projects that showcase your skills and creativity.\n\n\nJoin a Thriving Community\nWebSockets are widely used in various industries, from gaming to finance. By learning this technology, you’ll become part of a vibrant community of developers who are pushing the boundaries of what’s possible on the web. Collaborate, share ideas, and stay inspired as you explore new ways to leverage real-time communication.\n\n\nConclusion\nWebSockets are more than just a technical skill; they are a gateway to creating engaging, interactive web experiences. By mastering WebSockets, you’ll unlock the potential to build applications that not only meet user expectations but exceed them. Get ready to transform your development journey and make your mark in the world of real-time web development.\n\n\nThis course takes YOU on an complete journey through the intricacies of HOW WebSockets work, and WHAT they are.\nYou'll learn to harness the power of this cutting-edge technology without relying on libraries. I like to use native code. I believe this is the best way to learn.\nThis course is designed for developers or project leaders who are eager to build dynamic, interactive applications that require real-time data exchange, such as chat applications and team management tools.\n\n\nWhat You'll Learn In This WebSockets Course\nIn this comprehensive course, you will explore the following key topics:\nPure WebSockets: Forget libraries! We’ll focus on the raw power of WebSockets, teaching you how to implement them from the ground up. You'll gain a deep understanding of how to create real-time applications without any dependencies on the client-side.\nUnderstanding the Network Stack: Delve into the TCP/IP model and learn about the four layers of the network stack. This foundational knowledge will empower you to understand how WebSockets operate within the broader context of network communication.\nThe HTTP Upgrade Process: Discover how WebSockets leverage the HTTP protocol to establish a persistent connection. We’ll break down the upgrade process step by step, ensuring you grasp how WebSockets transition from HTTP to a full-duplex communication channel. WebSockets can be bootstrapped to work inside of a single stream inside of HTTP/2 and also HTTP/3, and this is discussed in detail in this course.\nWebSocket API on the Client Side: Get hands-on experience with the native WebSocket API, learning how to create and manage connections directly from the client side. You'll be able to send and receive messages in real time, enhancing user engagement and interactivity.\nServer-Side Development with Node.js: Transition to the server side as you implement WebSocket functionality using Node.js. This course will guide you through writing server-side code that can handle WebSocket connections and deliver real-time updates seamlessly. A few server-side modules are used, such as the pure \"websockets\" module, as well as the \"ws\" module.\nWebSocket Data Frames: We'll unpack the structure of WebSocket data frames and learn how data is organized and transmitted. Understanding binary data framing is crucial for optimizing performance. It's also useful if you ever want to create your own custom server-side WebSocket API where you'll have to bit-parse the WebSocket binary frame.\nExploring HTTP/2 and HTTP/3: Learn how WebSockets can work alongside the latest HTTP protocols, including HTTP/2 and HTTP/3. We’ll discuss the advantages of these protocols and how they enhance the efficiency of WebSocket communication.\nADVANCEC CONCEPTS. You'll learn about XOR'ing, masking, how to calculate client WebSocket keys, and the server accept values, you'll learn how to base64 encode data, you'll learn how to examine data packets, how to scale WebSockets with proxy servers, how CORS relates to WebSockets, how cache poisoning works, and a WHOLE LOT MORE!!!\n\n\nMeet Your Instructor: ME\nClyde is a coding enthusiast who has been immersed in the world of computers since the age of 7, in the early 1990's.\nWith years of experience in web development and a passion for teaching, Clyde brings a wealth of knowledge and practical insights to the course. His engaging teaching style and real-world examples will make complex concepts accessible and enjoyable.\n\n\nEnrol now\nDon’t miss this opportunity to elevate your web development skills and unlock the potential of real-time communication with WebSockets.\n\n\nRight this second, your competitors are learning how to become better web developers.\nWeb development is a blazing hot topic at the moment. But you have a distinct advantage. This course offers memorable learning topics, actionable tactics and real-world examples.\nGet ready to transform your projects into interactive experiences that captivate users and make you money!\nLet's get crackin'",
      "target_audience": [
        "Developers wanting to enhance their coding skills",
        "Anyone interested in learning native WebSockets",
        "BUSY PEOPLE who want to become certified and confident about what “WebSockets” mean in the shortest time possible",
        "YES: This course is for intermediates. It’s aimed at people who have some knowledge of coding, but want to dig deeper",
        "NO: This course is NOT only for intermediate beginners. It is a complete course that goes from basics to advanced.",
        "Those who want to learn modern coding without third party libraries and frameworks"
      ]
    },
    {
      "title": "HTML5 CSS3 JavaScript Bootstrap & jQuery Masterclass 5 in 1",
      "url": "https://www.udemy.com/course/html5-css3-javascript-bootstrap-and-jquery-masterclass/",
      "bio": "Build Beautiful Websites: Your Journey Through HTML, CSS, JavaScript, Bootstrap and jQuery",
      "objectives": [
        "HTML5: Build the structure of your websites with the latest HTML5 standards, including semantic elements and multimedia integration.",
        "CSS3: Master styling techniques using CSS3, from responsive designs to animations and transitions that enhance user experience.",
        "JavaScript: Gain a strong foundation in JavaScript programming, learn to manipulate the DOM, handle events, and create dynamic web applications.",
        "Bootstrap: Streamline your design process with Bootstrap, the popular front-end framework, and learn how to create mobile-first, responsive websites with ease.",
        "jQuery: Simplify JavaScript programming with jQuery, and discover how to make your web applications more interactive and user-friendly."
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Unlock your potential as a web developer with our comprehensive Masterclass covering HTML5, CSS3, JavaScript, Bootstrap, and jQuery! Whether you’re a beginner looking to start your journey or an experienced developer aiming to refresh your skills, this course is designed to guide you through the essentials and advanced techniques of modern web development.\nCourse Features:\nHands-on projects to reinforce your learning and build a portfolio.\nComprehensive quizzes and assignments to test your understanding.\nAccess to a community of fellow learners for collaboration and support, fostering networking opportunities.\nLifetime access to course materials, including updates as technologies evolve, ensuring you stay current.\nThroughout the course, you'll engage in practical exercises that simulate real-world scenarios, allowing you to apply what you learn immediately. You’ll also receive valuable feedback from instructors to enhance your skills. By the end of this course, you’ll have the skills and confidence to create stunning, responsive websites and interactive web applications. Join us in this exciting journey and take your web development skills to the next level! Transform your ideas into reality and become a sought-after developer in today’s digital landscape, ready to tackle challenges and seize opportunities in a rapidly evolving field.\nJoin us in this exciting journey and take your web development skills to the next level!",
      "target_audience": [
        "Beginners looking to build a solid foundation in web development.",
        "Aspiring Developers wanting to start a tech career.",
        "Designers aiming to enhance their coding abilities.",
        "Experienced Developers seeking to update their skills with the latest techniques."
      ]
    },
    {
      "title": "Create, Update and Manage Your Own Website Using Drupal 7",
      "url": "https://www.udemy.com/course/getting-to-know-drupal/",
      "bio": "Use Drupal 7 to build your own website in this beginner-level course. Learn all about themes, blocks, modules, and more!",
      "objectives": [
        "In this course, we'll explore the many configuration options, functions and features available in the self-hosted version of Drupal",
        "We'll focus on WHY and HOW things work in Drupal –– so you can develop an intuitive understanding of how to use Drupal",
        "By the end of this course, you'll be able to configure, edit and update a Drupal site with confidence, following best practices every step of the way!"
      ],
      "course_content": {
        "Getting started": [
          "Course introduction and welcome",
          "Getting started",
          "How do I log into my Drupal site?"
        ],
        "Basic site administration": [
          "How do I change the site name and slogan for my Drupal site?"
        ],
        "Working with content": [
          "What's the difference between Articles and Basic Pages in Drupal?",
          "How do I add a Basic Page to my Drupal site?",
          "How do I add Articles to my Drupal site?",
          "What does \"Sticky\" mean when it comes to Drupal content?",
          "How do I change the URL path alias for my Drupal content?",
          "How do I change the default settings for commenting?",
          "How do I change the default front page for my Drupal site?"
        ],
        "Troubleshooting": [
          "What should I do when my Drupal site is acting weird?",
          "How do I add shortcuts to my Shortcut toolbar in Drupal?"
        ],
        "Users, user roles, and permissions": [
          "What are user roles, and how does Drupal manage these?",
          "How do I control new user registrations on my Drupal site?",
          "How do I edit the permissions for different user roles?",
          "How do I create new user roles on my Drupal site?",
          "How do I add new users to my Drupal site?"
        ],
        "Blocks": [
          "What are blocks and block regions in Drupal?",
          "How do I enable and disable different block content?",
          "How do I move block content from one block region to another?",
          "How do I create new custom text blocks on my Drupal site?",
          "How do I change the visibility of a block by specific criteria?"
        ],
        "Menus": [
          "How do I build menus on my Drupal site?",
          "How do I add a main menu bar item that links to an external site?",
          "How can I edit and manage other types of menus on my Drupal site?"
        ],
        "Editing content types": [
          "How can I edit field options for a content type in Drupal?",
          "How can I change the way the content in a field is displayed?"
        ],
        "Creating new content types": [
          "How do I create a new content type for my Drupal site?",
          "How do I add text fields to a new content type on my Drupal site?",
          "What types of fields can I add to a content type in Drupal?",
          "How can I manage the way my new content type displays in Drupal?"
        ],
        "Taxonomy": [
          "How can I use taxonomies to organize and classify content?",
          "How do I add a new vocabulary to classify content in Drupal?",
          "How can I use a \"Genre\" vocabulary to classify \"Song\" content?"
        ]
      },
      "requirements": [
        "A computer (Windows, Mac, or Linux) with Internet access",
        "Any modern web browser (Chrome, Firefox, Internet Explorer, Opera, or Safari)",
        "Drupal 7, hosted either on a webserver or on your own local machine",
        "A desire to learn!"
      ],
      "description": "Learn how to use Drupal 7 to build your own flexible and dynamic website in this comprehensive introductory course. No prior experience necessary!\nDrupal is an open source content management platform powering millions of websites and applications. It's built, used, and supported by an active and diverse community of people around the world.\nYou can use Drupal to build everything from personal blogs to enterprise applications. Thousands of add-on modules and designs let you build any site you can imagine.\nWhether you plan to build your own Drupal website or hire a Drupal developer to help you, understanding the basics of how Drupal works will help you build and maintain a better website!\nHOW IS THIS COURSE DIFFERENT?\nMy name is Kathleen, and I've been teaching technology to beginners under the moniker Robobunnyattack! since 2009. I believe that with the right approach, anyone can learn anything.\nMy goal in this course is to help you develop an intuitive understanding of how to use Drupal 7 to build your own website.\nIn this course, we'll explore the many configuration options, functions and features available in Drupal 7. As we work together, I'll explain WHY and HOW things work in Drupal, so you can learn more quickly and with more confidence.\nAs we discover Drupal together, we'll cover:\nHow to handle basic Drupal site administration\nHow Drupal can help you better organize your website's content\nHow to handle users, user roles, and permissions\nHow to select, install and configure Drupal themes and modules\nBasic troubleshooting techniques\nAnd so much more...!\nBy the end of this course, you'll be able to configure, edit and update a Drupal site with confidence, following best practices every step of the way!\nWHAT'S INCLUDED?\nThis course includes lifetime access to over 6 hours of step-by-step videos.\nYou'll also get supplementary text lectures and links to helpful resources.\nBONUS: I've also included a FREE bonus section (\"SECTION 14: Publishing your website\") explaining how web publishing works. If you don't already have webhosting where you can install Drupal, you can start there!\nHOW LONG WILL IT TAKE ME?\nThis completely depends on your availability and learning preference. You can work through all the video lectures in one day, or pace yourself over several days or weeks — it's up to you!\nWHAT IF THIS COURSE ISN'T FOR ME?\nThis course comes with an unconditional 30-day Udemy-backed guarantee. Try out this course for 30 days and see for yourself if my approach to learning how to use Drupal is right for you. If you're not 100% satisfied with this course, simply request a full refund within 30 days — no conditions, no questions asked!\nI'm confident you'll LOVE this course, and I'm excited to help you learn. Enrol now and you can start building your very own Drupal website today!\n—Kathleen Farley (aka Robobunnyattack!)",
      "target_audience": [
        "Beginners with no previous coding or programming experience",
        "Web designers seeking to strengthen their Drupal skills",
        "Learners of all ages who want to REALLY understand how to use Drupal –– not just memorize a series of steps!"
      ]
    },
    {
      "title": "Google Sheet Data as JSON JavaScript AJAX Google Apps Script",
      "url": "https://www.udemy.com/course/api-json-ajax-google-sheet-data/",
      "bio": "Use data from your Google Sheet in your website, GET and POST content to Google Sheets using AJAX and Google Script",
      "objectives": [
        "Connect a web application to Google Sheets data",
        "Use AJAX to request and receive responses"
      ],
      "course_content": {
        "Getting Started with Google Apps Script Sheet Data as JSON Endpoint": [
          "Google Sheets as JSON data for Web Applications introduction",
          "How to setup Google Sheet Data setup WebApp for JSON data",
          "How to output JSON from Google Sheets Google Sheet Data JSON Output.",
          "How to use JavaScript AJAX to get Sheets data for web applications JSON data",
          "Source Code Apps Script WebApp Sheet as JSON AJAX get Sheet data with JavaScript",
          "Apps Script Project Sheet data Quiz Output Sheet Data as JSON web app",
          "AJAX to Google Web App GET Data use JavaScript to Create a Quiz Game",
          "Google Sheet Quiz Data Web Application Code Example Apps Script and JavaScript"
        ],
        "Google Apps Script Web Apps": [
          "How to create Webapp with Google Apps Script Google Apps Script Web Apps.",
          "Source Code Web App with JSON data and String output ContentService",
          "JSON data output Web App JSON Feed ContentService Google Apps Script Web App",
          "Code Example how to output contentService webapp as JSON",
          "Google Apps Script how to create a webapp Web App HTML Service Parameters",
          "HTMLService Code Example Source Code",
          "HTML Service Scriptlet Examples HTMLService WebApp Output.",
          "Code Example HTMLService Scriptlet Data from Apps Script to Client side",
          "WebApp Client Server Side Code how to create with Google Apps Script",
          "WebApp Server Side to Client Side Communication Coding Examples Apps Script",
          "ClientSide Form File Upload to Drive Folder WebApp File Upload to Drive",
          "WebApp File Upload to Drive Code Example",
          "How to output Google Doc content as HTML into a WebApp Page with Apps Script",
          "Code Example Google Doc as HTML output in a webapp with Apps Script Code"
        ],
        "Google Apps Script Questions and Answers Code Snippets code examples": [
          "How to use Google Sheet as JSON data with JavaScript AJAX",
          "Source Code Google Sheet as Data with JavaScript AJAX request",
          "Google Apps Script Examples Guide",
          "Send Email from sheets",
          "Supporting Documents and Extras"
        ],
        "Content From previous Course version Google Sheets data with AJAX": [
          "Please Note this is from the previous version of the course",
          "Introduction Google Sheet Data API",
          "Setup Sheet Data",
          "How to Get Sheet Data",
          "Source Code Google Script",
          "Output Sheet Data",
          "Source Lesson 3 GS data",
          "App Script Google Scripting",
          "Use Google Script to Create Output",
          "Google Script Source 5",
          "JSON feed from Google Sheets",
          "Source Code Lesson 6",
          "Google Script POST data",
          "Google Script Lesson 7",
          "Form Setup to Post",
          "Post data to Google Sheets",
          "Random User Data API",
          "Project Overview and Review",
          "Final Application Source Code",
          "Section resources"
        ]
      },
      "requirements": [
        "JavaScript HTML and CSS",
        "Web development skills",
        "Desire to Learn"
      ],
      "description": "Google Sheet Data as JSON JavaScript AJAX Google Apps Script\nAre you looking to use your Google Sheet as a Data source for your web applications?\nCreate a web app with Google Apps Script to output your Sheet data as JSON\nWeb app can be used as an API endpoint to get JSON data from your Sheet content\nUse AJAX to connect to your Google Sheet Data and output it in your web pages.\nConnect Google Sheets to your web applications.\nNo Database needed for your content as JSON - you can use Google  Apps Script to output the sheet data as JSON in a web app.\nNo Server needed use frontend code to get the JSON data and use it in your web applications.\nCoding project - Create a dynamic quiz that uses Google Sheet data for questions.\nConnect to the quiz data from JavaScript with a fetch request to the web app URL\nGet the quiz data in JavaScript\nHow to build a dynamic data driven quiz with no backend code needed.\nPlease note that this is  a coding course and previous coding experience is a prerequisite to the course.\nHave you ever want to get data from your Google Spreadsheet and use it in a web application?\nIf yes then this course is perfect for you :)\nExplore how you can use Google Script Web Apps to create interaction between the user and your google Workspace.\nWeb Apps - coding examples of Web apps with Google Apps Script how to output content into a web app\n- Client side to server side connections and communication\n- How to output Apps Script Variables to your Web App\n- Output Sheet contents as JSON to Web App with Google Apps Script\n- Upload files from your local computer to your Google Drive using a web app with Apps Script\n- Load you Google Docs file as HTML to be output to your Web App with Google Apps Script\n- Get Sheet data and allow the user to interact and get Sheet content within a Web App\nOutput content with createHTMLOutput service, UrlFetchApp fetch to get URL data, How to use Web app parameters, createHtmlOutputFromFile, Utilities.newBlob, DriveApp.getFolderById, SpreadsheetApp.openById, HtmlService.createHtmlOutputFromFile, ContentService and more coding examples.\n\n\n\n\nStep by step instruction on how to setup Google Sheets with a web app outputting data as JSON.  Use AJAX from your web application to get that data into your JavaScript code.  Extend this even further using Google Apps Script.  GET and POST to the Google Script web app adding and retrieving data in JSON format.\nApps Script is a scripting language for light-weight application development in the G Suite platform. ... According to Google, Apps Script \"provides easy ways to automate tasks across Google products and third party services.\" Apps Script is also the tool that powers the add-ons for Google Docs, Sheets and Slides.   Power up your application with spreadsheet data no database required!!!!\n\nFast and friendly support in the Q&A section to help you learn\nSource Code is included!!!\nTaught by an instructor with over 18 years development experience ready to help you learn.\nExercise based course demonstrates building a fully functional web application from start to finish.   Reviewing the code and providing useful tips and resources along the way.  What are you waiting for join now and start exploring the amazing things YOU CAN DO with Google App Script and AJAX!!!",
      "target_audience": [
        "Web developers",
        "Anyone who wants to learn more about AJAX JSON and Google Sheets",
        "Anyone who wants to learn about Google Script",
        "JavaScript developers"
      ]
    },
    {
      "title": "JavaScript for beginners",
      "url": "https://www.udemy.com/course/javascript-for-beginners-b/",
      "bio": "Build the real world interactive JavaScript Apps from scratch 2023",
      "objectives": [
        "make a professional dynamic quiz website.",
        "Create beautiful real-world apps without being bored.",
        "Learn various topics using the live in browser editor with side by side preview so you might not even need to install a code editor !",
        "Practice your skills using with specially designed quiz.",
        "Get lifetime access to my HD quality videos and Support. No monthly subscription. Learn at your own pace, whenever you want.",
        "Learn How to write clean code which is easily readable and writable.",
        "Check your JavaScript knowledge with coding exercises. exercise codes with some errors will be given to the students to fix."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "alert function",
          "window vs document",
          "Quiz: Intro"
        ],
        "Identifiers": [
          "getElementById",
          "Learn More and Run/Download Source for this video.",
          "getElementsByClassName",
          "Learn More and Run/Download Source for this video.",
          "getElementsByTagName",
          "Try this Code and Learn More",
          "innerHTML",
          "Try this Code and Learn More",
          "styling elements using javascript",
          "SourceCode and Learn More",
          "QUIZ: identifiers"
        ],
        "Variables": [
          "variables",
          "Variables behind the scenes",
          "Learn More about variables.",
          "Storing identifier in variable",
          "overwrite variable",
          "Common mistakes beginners do",
          "concatenation",
          "Quiz: Variables"
        ],
        "Arrays": [
          "Arrays",
          "SourceCode and More",
          "How arrays work",
          "push and sort functions"
        ],
        "Functions and Events": [
          "Function",
          "onclick event",
          "onmouseover & onmouseout events",
          "ondblclick & onerror event",
          "onscroll event",
          "function parameters and arguments",
          "return function"
        ],
        "Loops": [
          "while Loop",
          "more about while loop",
          "do while loop",
          "for loop",
          "break and continue statements"
        ],
        "Project : Create a quiz website": [
          "Project :quiz design Part 1",
          "Project: Quiz design part 2",
          "Project: Quiz design part 3",
          "Project: Quiz design part 4",
          "Project: Quiz design part 5",
          "Project: Quiz design part 6",
          "Project: Quiz design part 7",
          "Get source code of this project"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS .",
        "you should be able to use computer and internet"
      ],
      "description": "This JavaScript course has been specifically created for  beginners who required detailed information about basics and have no prior programming knowledge. step by step explanation and external sources will also be provided along with quiz and  in fact students will design a quiz in an exercise. source codes of each and every video will be provided. students will also learn about responsive design and dynamic features of JavaScript, HTML and CSS. although it is specially designed for beginners but anyone can give it a try to boost the knowledge of JavaScript.\nThe most complicated topics such as loops are specially focused to provide in depth explaination by using code, resources and special animations to target all the the students who face confusion to understand all these  concepts. You will have source code and thats inside a coude editor ready to execute !\nAfter every video a link will be provided with comprehensive explanation and source code for those students who had difficulty understanding the lecture. you will also get a live code editor filled with the code used in video so you can modify and try that code in browser !\nSo lets Jump in and start learning the Javascript in fun way.",
      "target_audience": [
        "Anyone who is complete beginner and has no knowledge about JavaScript or any programming Language",
        "Anyone who has finished Learning basics of HTML and CSS",
        "Anyone who wants to create real world quiz website",
        "Anyone who want to refresh his JavaScript knowledge",
        "Anyone who wants to do code practise and loves quiz exercises."
      ]
    },
    {
      "title": "Information Retrieval and Mining Massive Data Sets",
      "url": "https://www.udemy.com/course/information-retrieval-and-mining-massive-data-sets/",
      "bio": "Learn various techniques to build a Google scale Information Retrieval System.",
      "objectives": [
        "The course is primarily divided into 6 parts.",
        "Part 1: Building an Information Retrieval System",
        "Part 2: Mining Frequent Patterns and Associations",
        "Part 3: Classification and Clustering",
        "Part 4: Web Mining",
        "Part 5: Recommendation Systems"
      ],
      "course_content": {
        "Introduction To a Boolean Search Engine": [
          "What is Data Mining",
          "Structured Data, Unstructured data and Information Retrieval",
          "Term-Document Incidence Matrix (1)",
          "Term-Document Incidence Matrix (2)",
          "Inverted Index",
          "Tradeoffs in implementing an Inverted Index",
          "Processing AND, OR, NOT queries",
          "Overview of Index Construction Pipeline",
          "Query optimization using Document Frequency (1)",
          "Query Optimization Using Document Frequency (2)",
          "Boolean Retrieval Model",
          "Example of a Boolean Retrieval Model",
          "Limitations of Boolean Retrieval Model",
          "How to evaluate performance of an IR System",
          "Google zeitgeist"
        ],
        "Dictionary Data Structure. Tolerant retrieval": [
          "Parsing Documents and Issues Associated with it",
          "Tokenization Process in an IR System",
          "Normalization to Terms",
          "Faster Postings Merges With Skip Pointers",
          "How to Handle Phrase Query",
          "Phrase Query Using Positional Index",
          "How to handle proximity query",
          "Discussion on Positional Index Size"
        ],
        "Index construction. Postings size estimation, sort-based indexing, dynamic index": [
          "Dictionary Data Structure Implementation",
          "Wild card queries",
          "Questions on Wild Card Queries",
          "Wild Card Query Handling Using Permuterm Index",
          "Wild Card Query Handling Using K-Gram Index",
          "Soundex Algorithm",
          "Spelling Correction Techniques in an IR System",
          "Question On Soundex Algorithm",
          "Spelling Correction (Part 2)",
          "Introduction To Dynamic Programming",
          "How To Calculate Edit Distance Between Two Strings",
          "Spelling Correction Using Weighted Edit Distance",
          "Spelling Correction Using Ngram Overlap Technique",
          "Calculating Jaccard Coefficient (An Example)",
          "Context Sensitive Spell Correction"
        ],
        "Dictionary Compression, Posting Compression": [
          "Introduction to Index Construction",
          "Index Construction Using InMemory Sorting",
          "Index Construction Using BSBI Algorithm",
          "Index Construction Using SPIMI Algorithm",
          "Introduction To Distributed Indexing",
          "How To build distributed indexes",
          "Q & A on Distributed Index",
          "Map Reduce",
          "Dynamic indexing using naive approach",
          "Dynamic indexing using logarithimic merge",
          "Issues With Multiple Indexes"
        ],
        "Scoring, term weighting, and the vector space model": [
          "Why do we compress indexes",
          "Important Statistics about RCV Collection",
          "Various Dictionary Compression Techniques",
          "Various Dictionary Compression Techniques Part 2",
          "Various Posting Compression Techniques"
        ],
        "Efficient vector space scoring. Nearest neighbor techniques": [
          "Ranked Retrieval Model",
          "Jaccard Score",
          "Term Frequency Weighing And Bag Of Words Model",
          "Inverse Document Frequency",
          "TF-IDF Score",
          "Documents AS TF-IDF Vectors",
          "Length Normalization",
          "Cosine Similarity Example",
          "Computing Cosine Scores On Index",
          "Variants of TF IDF Weights"
        ],
        "Evaluating search engines. User happiness, precision, recall, F-measure": [
          "Term at a Time Scoring",
          "Efficient Cosine Ranking",
          "Generic Approach For Speeding up Cosine Similarity",
          "Index Elimination",
          "Champion Lists",
          "Static Quality Score",
          "High And Low Lists",
          "Impact Ordered Posting",
          "Cluster Pruning",
          "Parametric Zone Tired Index",
          "Query Term Proximity And Query Parsing",
          "How A Search Engine Works"
        ],
        "Advertisement Systen. Google AdSense. Search Engine Optimization": [
          "Performance of a Search Engine Part 1",
          "Performance of a Search Engine Part 2",
          "Performance of a Search Engine Part 3",
          "Performance of a Search Engine Part 4",
          "Performance of a Search Engine Part 5"
        ],
        "Supervised Learning. Text Classification. Naive-Bayes Text Classification": [
          "ECommerce Vs. Traditional Businesses",
          "Pricing Models For Online Advertisement",
          "AdWords and AdSense",
          "SEM And SEO"
        ],
        "Link analysis. Web as a graph. PageRank": [
          "Classification System",
          "Document Classification",
          "Manual Classification Methods",
          "Naive Bayes Classifiers",
          "Bayes Rules Of Text Classification",
          "Various Classification Methods",
          "Example of Multivariate Bernouli Model",
          "Second Version of Naive Bayes",
          "Example of Second Version of Naive Bayes"
        ]
      },
      "requirements": [
        "Knowledge of probability and linear algebra.",
        "Good grasp on graduate level algorithms.",
        "Experience with a programming language ( C, Python, Java)"
      ],
      "description": "The goal is to introduce various techniques required to build an IR System. In this course we will explore various methods to solve big data problem. We will evaluate alternative solutions and trade offs. In the later part of the course we will discuss various data mining algorithms to make sense of massive data sets.",
      "target_audience": [
        "Big Data Enthusiast",
        "Data Scientists"
      ]
    },
    {
      "title": "AWS: Elastic Load Balancing with Auto Scaling Groups",
      "url": "https://www.udemy.com/course/aws-elastic-load-balancing-with-auto-scaling-groups/",
      "bio": "AWS MFA | Amazon EC2 | Amazon Machine Images | IAM Roles | Elastic IP | EBS | Snapshots | EFS | ELB | ASG | Route 53",
      "objectives": [
        "Getting Started with AWS",
        "Working with Global and Regional Services in AWS",
        "Creating Billing Alerts and Setting up MFA",
        "Deploying and Configuring EC2 Instances in AWS",
        "Creating IAM Roles for EC2",
        "Creating Securing Groups for EC2 Instances",
        "Remote EC2 Administration with PuTTY and Terminal",
        "Working with Amazon Elastic Block Store (EBS)",
        "Creating EBS Snapshots",
        "Creating Amazon Machine Images (AMIs)",
        "Creating an Amazon Elastic File System (EFS)",
        "Attaching a Single EFS to Multiple EC2 Instances",
        "Uploading files via FTP to EFS",
        "Understanding the Concept of High Availability and Elasticity",
        "Deploying Elastic Load Balancers (ELBs) and Auto Scaling Groups (ASGs)",
        "Dynamic Scaling with ASGs",
        "Creating Launch Templates",
        "The Foundations of Route 53 and DNS",
        "Domain Registration and Routing with Route 53"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills",
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "This course offers an introduction to the Amazon Web Services (AWS) platform. The focus of the course will be on four key services, including: Amazon Elastic Compute Cloud (EC2), AWS Storage Solutions, and Elastic Load Balancers (ELB) integrated with Auto Scaling Groups (ASG).\n\nAmazon EC2 is a web service that provides resizable compute capacity in the cloud. It allows users to launch virtual machines (VMs) on demand and pay only for the compute resources they use. In this course, we will explore the different types of instances available, as well as how to launch, configure, and manage EC2 instances.\n\nIn addition to the EC2 service, we also explore AWS storage solutions including Elastic Block Store (EBS), Elastic File System (EFS), Snapshots, and Amazon Machine Images (AMIs). EBS is a block-level storage service for use with EC2 instances. It provides persistent storage for data that needs to be frequently accessed. EFS is a file-level storage service for use with EC2 instances. It allows users to create and configure file systems that can be accessed from multiple instances. Snapshots are point-in-time copies of EBS volumes that can be used for backup and recovery. AMIs are pre-configured virtual machine images that can be used to launch EC2 instances. In this course, we will explore the different storage options available and how to use them to manage data on the AWS platform.\n\nOnce students have a handle on the foundations, we explore more intermediate topics relevant to workload distribution through the integration of ELBs and ASGs. Elastic Load Balancers (ELBs) are used to distribute incoming traffic across multiple EC2 instances. They automatically scale to handle incoming traffic and can also be used to improve availability and fault tolerance. In this course, we will explore the different types of load balancers available, as well as how to configure and use them to distribute traffic across multiple instances.\n\nWe will demonstrate how to integrate the ELBs with Auto Scaling Groups (ASGs) to ensure workloads are only distributed to healthy nodes within the EC2 service. ASGs allow users to automatically scale the number of EC2 instances in response to changing demand. They automatically launch and terminate instances based on predefined rules, ensuring that the number of instances is always sufficient to handle incoming traffic. In this course, we will explore how to configure and use ASGs to automatically scale the number of instances on the AWS platform.\n\nThroughout the course, we will use hands-on exercises to help students gain practical experience with the AWS platform. Students will have the opportunity to launch and configure EC2 instances, create and manage storage volumes, configure load balancers and auto scaling groups, and work with other AWS services. By the end of the course, students will have a solid understanding of the AWS platform and will be able to use it to build scalable and reliable cloud-based applications.",
      "target_audience": [
        "Students interested in learning the foundations of AWS",
        "Students interested in Cloud Computing",
        "Students interested in exploring the Amazon EC2 Service",
        "Students interested in exploring various EC2 Storage Solutions (EFS, EBS)",
        "Students interested in setting up Highly Available cloud setups using ELBs, and ASGs on AWS"
      ]
    },
    {
      "title": "Vue 3: Create a Mobile & Desktop App (with Quasar 2 & Pinia)",
      "url": "https://www.udemy.com/course/vue-3-create-a-mobile-desktop-app-with-quasar-2-pinia/",
      "bio": "Use Vue 3 (Composition API), Quasar 2 & Pinia to build a Cross Platform App for Web, iOS, Android, Mac & Windows",
      "objectives": [
        "How to create a money management app using Vue 3 & Quasar 2",
        "How to manage the app's state management using Pinia (Setup Stores)",
        "How to to deploy the app to Mac & Windows apps (using Electron)",
        "How to deploy the app to iOS & Android apps (using Capacitor)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course App: Moneyballs",
          "What is Quasar?",
          "Vue 3 & Composition API Basics",
          "Editor & Software Setup",
          "Chrome & Vue Devtools"
        ],
        "Getting Started": [
          "Install Node.js and Quasar CLI",
          "Create & launch a new Quasar Project in the Browser",
          "Folder structure - Layouts, Pages, Routes & more",
          "Download Source Code"
        ],
        "Layout, Pages & Navigation": [
          "Customize Layout",
          "Colors & Style",
          "Pages & Routes",
          "Navigation",
          "Active Navigation State",
          "Improve Drawer width and Breakpoint",
          "Download Source Code"
        ],
        "Entries Page Design": [
          "Entries List",
          "Currency formatting",
          "Composable - useCurrencify",
          "Composable - useAmountColorClass",
          "Improve the Entry Text",
          "Add Entry Form",
          "Balance Bar",
          "Computed Property - Balance",
          "Download Source Code"
        ],
        "Add Entry": [
          "Connect Fields to Reactive Object",
          "Submit Form & Add Entry",
          "Fix the Balance Error",
          "Reset Form & Tidy Code",
          "Refocus Name Field",
          "Download Source Code"
        ],
        "Swipe to Delete Entry": [
          "Swipe to Delete with SlideItem",
          "Prompt before Delete",
          "Delete the Entry",
          "Improve the Dialog Message with HTML",
          "Show a Deleted Notification",
          "Download Source Code"
        ],
        "Pinia - Setup Store": [
          "State Management & Pinia",
          "Options vs Setup Stores",
          "Setup a Pinia Setup Store",
          "Move Data into Pinia State",
          "Move Computed Balance into Pinia Getter",
          "Add Entry Pinia Action",
          "Delete Entry Pinia Action",
          "Tidy Up the Entries Page",
          "Download Source Code"
        ],
        "Child Components": [
          "Balance",
          "Add Entry",
          "Entry",
          "Nothing Here Fallback",
          "Download Source Code"
        ],
        "Edit Name & Amount": [
          "Setup QPopupEdit for Name",
          "QPopupEdit - Customization & Style",
          "Setup QPopupEdit for Amount",
          "Update the Name & Amount",
          "Download Source Code"
        ],
        "Mark as Paid": [
          "Mark as Paid",
          "Paid Entry Style",
          "Display the Paid Balance",
          "Paid Balance Getter",
          "Download Source Code"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript",
        "Basic understanding of Vue 3 & Composition API",
        "Mac is preferred (but not required)"
      ],
      "description": "In this course, you'll learn how to use Vue 3, the Composition API, Quasar V2 and Pinia to create a beautiful cross-platform  money management app called Moneyballs - for Web, iOS, Android, Mac & Windows.\nIn this app, we can add both income and expense entries and keep track of our spending.\nAll of our income entries are in green and all of our expense entries are in red, with the amounts beautifully formatted as currency.\nWe can:\nView a balance bar along the bottom, which always shows the overall balance of all of our entries.\nEdit our entries in place by clicking on the name or the amount field.\nMark an entry as paid by swiping right (and see the balance of our paid entries).\nReorder our entries.\nSwipe left to delete our entries.\nMoneyballs also has a Settings page with a bunch of different settings.\nWe can:\nDisable the prompt to delete - so that when we swipe left on an entry - it's deleted immediately.\nShow a Running Balance, which is displayed under all our entries.\nChange the Currency Symbol.\nWe even have a Dark Mode with a completely different color scheme.\nAnd if we quit and restart our app (or reload the webpage) - all of our entries data and settings data is maintained.\nWhile creating Moneyballs you're also going to use:\nPinia Setup Stores\nQuasar Plugins\nCustom Directives\nCustom Composables\nCapacitor plugins\nTons of Quasar Components\nAnd much more...\nAnd we're going to get this app running and working on five different platforms:\nWeb Browser\niOS\nAndroid\nMac\nWindows\niOS & Android apps generated with Quasar (& Capacitor) can actually be deployed to the App Store & Play Store and monetized with in-app purchases, subscriptions and ads.\nMac & Windows apps generated with Quasar (& Electron) can be deployed to the Mac & Windows stores, or distributed online.\nFor this course, I recommend using a Mac and having a basic understanding of JavaScript, Vue 3 and the Composition API.",
      "target_audience": [
        "Vue 3 Developers looking to create Mobile & Desktop apps that can be deployed to the various app stores (or distributed online)"
      ]
    },
    {
      "title": "CSSCasts: CSS libraries Plugins Tips & Tricks (in 2020)",
      "url": "https://www.udemy.com/course/csscasts-css-libraries-plugins-tips-tricks-for-developers/",
      "bio": "Learn Modern CSS, CSS3, CSS4 , libraries, plugins, Grids, frameworks, tips & tricks and Build websites. Updates Weekly",
      "objectives": [
        "Build sites based on latest and new tips trick with CSS",
        "Complete understanding of the particular topic i will cover on this course",
        "Able to use CSS libraries and plugins fluently",
        "Able to use request a new videos on particular topic in CSS",
        "And much much more"
      ],
      "course_content": {},
      "requirements": [
        "If you have basic CSS knowledge then their nothing better then that you will take everything from this course but if you don't know anything or completely new in CSS then it's okay too, i will teach you like you are in first grade ;)",
        "You will need a browser and code editor , that's it"
      ],
      "description": "This course updates weekly, check back often for new videos.\nThis course is pretty unique on udemy. this is CSS screen casts. this course will grow every week by 2 new videos based on essentials but modern and latest CSS libraries plugins ideas with cool tips and tricks. The most important aspect of this course is student can suggest or request for making videos on their request and i will try to make that video as soon as possible but the request which get highest vote will be made first.\nI will always love to help as soon as possible if any students get stuck with in their life real world project.\n-What you will learn in this course ?\nIn simple : Almost Everything about CSS\nHow..\nTo create layout.\nto use modern tricks to solve particular problems\nTo style your content.\nTo keep your css clean , modern and faster.\nTo stay Web standard and current CSS developer\nTo use libraries.\nTo use Plugins.\nMuch much more --\n\n\nMaterials Included: to keep you in the road of success !\nall the Exercise file will be included in their respected video\n\nhtml files\ncss files\njpg\npng\nlibs\nicons\npsd\netc\nWell i do my very best to explain each and every detail of the particular topic i cover on the video with multiple demo and examples . your totally welcome to ask any questions or doubts and request for new videos based on the css library , plugins or any topics releted to CSS.\nStudents are welcomed to request new videos based on CSS.\n\nSo now get in and let's get started!",
      "target_audience": [
        "Each and every one who wants to learn web development . whether you are newbies or season developer . this is the must course on CSS you should have in your pocket.",
        "Specially must and very important for UI , UX and frontend developers"
      ]
    },
    {
      "title": "HTML and CSS Web Development: Build Responsive Websites New",
      "url": "https://www.udemy.com/course/html-and-css-web-development-build-responsive-websites-new/",
      "bio": "HTML and CSS Beginner Course: Master web development by building responsive websites and mini-projects from scratch",
      "objectives": [
        "Build complete, responsive websites using HTML and CSS from scratch—with modern best practices and real-world layouts.",
        "Understand the full structure of an HTML document, including semantic tags, forms, tables, and media elements.",
        "Apply CSS styling principles confidently, including box model, positioning, Flexbox, Grid, and responsive design using media queries.",
        "Create mobile-friendly web pages that adapt seamlessly across different screen sizes and devices."
      ],
      "course_content": {
        "Kickstart Your Web Dev Journey": [
          "Understanding Web Development: The Basics",
          "How Websites Work Behind the Scenes",
          "Setting Up Your Web Development Tools"
        ],
        "HTML Fundamentals – Building the Web’s Backbone": [
          "Getting to Know HTML: What and Why",
          "Anatomy of an HTML Page",
          "Working with Headings, Paragraphs & Text Elements",
          "Organizing Content with <div> & HTML Comments"
        ],
        "Working with Links & Images – Making Webpages Interactive": [
          "Creating Clickable Links with <a>",
          "Displaying Images Using <img>"
        ],
        "HTML Lists – Structuring Content Cleanly": [
          "Merging Table Cells with colspan & rowspan",
          "Ordered vs. Unordered Lists: What’s the Difference?",
          "Nesting & Definition Lists: Going Deeper with Structure"
        ],
        "Forms & Inputs – Capturing User Data": [
          "Intro to Forms: Capturing User Input Made Easy",
          "Exploring Input Types: From Text Boxes to Checkboxes",
          "Smart Forms: Validation, Placeholders & Autocomplete"
        ],
        "HTML Tables – Structuring Data with Style": [
          "Intro to Tables: Rows, Columns & Core Tags",
          "Organizing Table Sections with <thead>, <tbody>, <tfoot>",
          "Merging Cells with colspan & rowspan: Clean Table Layouts"
        ],
        "Semantic HTML – Writing Meaningful Code": [
          "Semantic Tags: What They Are & Why They Matter",
          "Creating a Semantic Web Page: Structure with Purpose",
          "Boosting SEO & Accessibility with Semantic HTML"
        ],
        "Introduction to CSS – Styling the Web": [
          "What is CSS? Why It’s the Web’s Design Tool",
          "How CSS and HTML Work Together",
          "Linking CSS to HTML: Internal, External & Inline"
        ],
        "Mastering CSS Selectors and Styling Rules": [
          "Understanding CSS Selectors: The Building Blocks of Styling",
          "Common CSS Selectors: Element, Class, and ID",
          "Advanced Selectors: Universal Selector (*) and Grouping",
          "CSS Properties and Values: How Styles Are Applied"
        ],
        "Typography and Text Styling Essentials": [
          "The Role of Typography in Effective Web Design",
          "Styling Text with Fonts: Families, Sizes, and More",
          "Enhancing Readability and Adding Text Decorations"
        ]
      },
      "requirements": [
        "No prior programming or web development experience required—this course is designed for absolute beginners.",
        "A computer (Windows, macOS, or Linux) with internet access.",
        "A modern web browser (like Chrome, Firefox, or Edge).",
        "A free code editor such as Visual Studio Code (we’ll guide you through setup).",
        "Willingness to learn by doing and build real projects from the ground up."
      ],
      "description": "Are you ready to build real websites from scratch—without feeling overwhelmed?\n\n\nThis course is for complete beginners who want to learn HTML and CSS the right way, by actually creating responsive websites step by step. No fluff, no jargon—just practical skills taught in a friendly, easy-to-follow way.\nWe’ll start with the absolute basics: how websites work, how to write clean HTML, and how to structure your content. From there, you’ll dive into CSS—learning how to style your pages, create layouts, and build websites that look great on any screen size.\n\n\nBut we don’t stop at theory.\nYou'll work on mini-projects throughout the course, and then bring everything together in a final, professional-grade website that you’ll be proud to showcase. By the end, you’ll not only understand how to write HTML and CSS—you’ll be thinking like a front-end developer.\nYou’ll learn how to build fully responsive websites using HTML and CSS, structure content with semantic HTML, and style everything with modern CSS tools like Flexbox and Grid. From layout to typography to responsive design, this course gives you real-world web development skills you can use immediately.\n\n\nI’m Shayan Naveed, a front-end developer at Nextpak Agile Solutions. I’ve taught myself everything I know—and now I help others get started with a clear, practical, and supportive approach. I know how frustrating it can be when you’re new and don’t know where to begin, so I’ve designed this course to make sure you never feel lost.\nNo experience? No problem. Just bring your curiosity—and by the end of this course, you’ll have real skills and a complete website project to show for it.\n\n\nReady to build your first responsive website? Let’s get started. Your future in web development begins here.",
      "target_audience": [
        "Absolute beginners who want to start their journey in web development with HTML and CSS.",
        "Aspiring front-end developers looking to build a strong foundation before learning JavaScript or frameworks like React or Vue.",
        "Students, freelancers, or career switchers aiming to create responsive, professional-looking websites from scratch.",
        "Anyone who wants hands-on practice with building real web pages, UI components, and a complete responsive project—without relying on templates or drag-and-drop tools."
      ]
    },
    {
      "title": "Build Websites from Scratch with Squarespace",
      "url": "https://www.udemy.com/course/build-websites-from-scratch-with-squarespace/",
      "bio": "Quickly and Easily Create Blogs, Rich Media and E-commerce Websites",
      "objectives": [
        "Create and manage a blog in Squarespace",
        "Sell physical and digital products through the creation of a store",
        "Control and manage a Squarespace site with collaborators"
      ],
      "course_content": {},
      "requirements": [
        "This course is designed for the absolute beginner, meaning no previous experience with Squarespace is required"
      ],
      "description": "In this course, taught by expert author Andy Anderson, you will learn how to easily create blogs, rich media, and e-commerce websites with Squarespace. This course will give you the confidence and skill set needed to utilize the power of Squarespace to assemble your own websites, blogs, and e-commerce stores.\nFollow along with Andy as he guides you through the process of creating a website, blog, and store from beginning to end, providing tips, tricks and examples along the way. You will start with the basics of learning how to open an account in Squarespace, as well as planning out your project and gathering resources.\nYou will then dive into building the site, where you will learn how to:\n- create and manage a blog in Squarespace\n- sell physical and digital products through the creation of a store\n- control and manage a Squarespace site with collaborators\nBy the end of this course, you will have learned everything you need to know to create your own web design projects in Squarespace.",
      "target_audience": [
        "Anyone who wants to learn how to create and manage a Squarespace blog or website"
      ]
    },
    {
      "title": "Web Scraping for Beginners with : Python | Scrapy| BS4",
      "url": "https://www.udemy.com/course/web-scraping-for-beginners-with-python-scrapy-bs4/",
      "bio": "Learn how to extract data from websites using : Python | Scrapy and BeautifulSoup",
      "objectives": [
        "Install python virtual environment",
        "Activate virtual environment",
        "Update python and pip",
        "Install BeautifulSoup",
        "Install Scrapy",
        "Inspect elements from a webpage",
        "Prototype web scraping script with python interactive shell",
        "Build a web scraping script with BeautifulSoup and Python",
        "Run web scraping script",
        "Save scraped (extracted) data to file",
        "Create a Scrapy project",
        "Create a Scrapy spider to crawl website and scrape data",
        "Scrape data from a webpage using Scrapy shell",
        "Run spider to scrape data from a website",
        "Save output of scraped data using Scrapy to file"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of HTML",
        "Basic understanding of CSS",
        "Basic understanding of Python",
        "Basic understanding of using command prompt | terminal",
        "Basic understanding of a text editor"
      ],
      "description": "Web scraping is  the  process of automatically downloading a web page's data and extracting specific information from it.\nThe extracted information can be stored in a database or as various file types.\n\n\nBasic Scraping Rules:\nAlways check a website's Terms and Conditions before you scrape it to avoid legal issues.\nDo not request data from a website too aggressively (spamming) with your program as this may break the website.\nThe layout of a website may change from time to time ,so make sure your code adapts to it when it does.\n\n\nPopular web scraping tools include BeautifulSoup and Scrapy.\nBeautifulSoup  is a python library for pulling data (parsing) out of HTML and XML files.\nScrapy is a free open source application framework used for crawling web sites and extracting structured data\nwhich can be used for a variety of things like data mining,research ,information process or historical archival.\n\n\nWeb scraping software tools may access the World Wide Web directly using the Hypertext Transfer Protocol, or through a web browser. While web scraping can be done manually by a software user, the term typically refers to automated processes implemented using a bot or web crawler. It is a form of copying, in which specific data is gathered and copied from the web, typically into a central local database or spreadsheet, for later retrieval or analysis.\n\n\nScraping a web page involves fetching it and extracting from it.  Fetching is the downloading of a page (which a browser does when you view the page).  to fetch pages for later processing. Once fetched, then extraction can take place. The content of a page may be parsed, searched, reformatted, its data copied into a spreadsheet, and so on. Web scrapers typically take something out of a page, to make use of it for another purpose somewhere else. An example would be to find and copy names and phone numbers, or companies and their URLs, to a list (contact scraping).\nWeb scraping is used for contact scraping, and as a component of applications used for web indexing, web mining and data mining, online price change monitoring and price comparison, product review scraping (to watch the competition), gathering real estate listings, weather data monitoring, website change detection, research, tracking online presence and reputation, web mashup and, web data integration.\n\n\nWeb pages are built using text-based mark-up languages (HTML and XHTML), and frequently contain a wealth of useful data in text form. . A web scraper is an Application Programming Interface (API) to extract data from a web site. Companies like Amazon AWS and Google provide web scraping tools, services and public data available free of cost to end users.",
      "target_audience": [
        "Beginners to web scraping",
        "Data Analyst",
        "Data Scientist",
        "Database Administrators",
        "Internet researchers",
        "Entrepreneurs"
      ]
    },
    {
      "title": "Modern React JS Hooks and Context with Most Recent Edition",
      "url": "https://www.udemy.com/course/modern-react-js-hooks-and-context-with-most-recent-edition/",
      "bio": "Dive in React and learn React JS, Hooks from scratch!You will understand React JS Hooks and Context with my React course",
      "objectives": [
        "React JS Hooks and Context",
        "React’s modern face is to develop web applications with React Js Hooks and Context",
        "Creating React Hooks and Context structures",
        "Creating React Hooks and Context structures with explanatory diagrams",
        "What is React JS Context Api and how it is used",
        "Using React JS Context Api and Hooks together",
        "Creating Context with Class Component",
        "Access to Context with Context Type",
        "To manipulate the data in Context",
        "useState, useEffect, useReducer, and useContext hooks",
        "Reducer, action and dispatch concepts and much more",
        "How to use coding techniques to make efficient development",
        "All you need is your computer and you!",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "React is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used",
        "React can be composed into either simple single-page applications or large, complex web applications.",
        "React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do",
        "React encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions.",
        "Frameworks provide an opinionated approach to building an entire application.",
        "React is worth learning. There are a couple of reasons.",
        "Every technology or programming language has a learning curve, and React is no different.",
        "React, or React JS, is a front-end Javascript library for building UI components for the web.",
        "There are many reasons why React is popular. One reason is that Facebook developed it.",
        "The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field.",
        "The answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer."
      ],
      "course_content": {},
      "requirements": [
        "A computer with access to the internet",
        "Since free tools and platforms are used during the training, you do not need to buy any web development tools or applications",
        "You need to know basic level HTML, CSS, Javascript for React js",
        "You need to know React Js at basic level",
        "Desire to learn react js",
        "Desire to learn modern react js hooks and react js hooks context",
        "Desire to learn web development with react js hooks and react js context",
        "Desire to become react developer with react js hooks and context",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to Modern React JS Hooks and Context with Most Recent Edition course.\nDive in React and learn React JS, Hooks from scratch! You will understand React JS Hooks and Context with my React course\nDo you want to learn React JS but have no experience at all.  Our React JS Hooks and Context course is the perfect place for you to start. In this course, we designed React JS  course to give you everything you need to become productive with Hooks and Context.\nReact is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.\nIn this course, we will take you through everything you need to know to master web development using ReactJS by providing powerful knowledge through a mixture of diagrams and the creation of a simple application.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and full stack web development practices and skills.\nThe world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on.\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS.  In this course, we will be teaching React by creating various projects.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer. You will always have up-to-date content for this course at no extra charge.\nAll my students will have a chance to learn not only the whats but also learn the whys and hows.\nWhat you will learn?\nCreating Context with Class Component\nAccess to Context with Consumer\nAccess to Context with Context Type\nTo manipulate the data in Context\nuseState, useEffect, useReducer, and useContext Hooks\nReducer, Action and Dispatch concepts\nAnd you will learn much more about React Hooks\nReact js\nreact hooks\nreact\nreactjs\nmodern react js hooks and context with most recent edition\nreact context\nmodern-react-js-hooks-and-context-with-most-recent-edition\nmodern react\nhooks\noak academy react js hooks and context course\nreact hook\nreact js hooks\nmodern react js hooks\nreact hooks context\nmodern react js\nmodern react js hooks and context with most recent edition\nreactjs hooks\nmodern react js hooks and context\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and React is easy to understand for beginners.\nThis course starts with the very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practice.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. Reacts method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React.JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses lightweight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our\nModern React JS Hooks and Context with Most Recent Edition course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to become an React Developer",
        "For those who want to learn React Hooks",
        "For those who want to learn React Context API",
        "People who want to start from scratch and to move more advanced level",
        "Students who want to take their web development skills to the next level and learn a future-proof technology",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "Anyone planning a job transformation and wants to become a React developer",
        "People who want to learn React js hooks and react js context",
        "People who want to learn React JS hooks and context",
        "Poeple who want to web developer with react js hooks and context",
        "Web development is a broad description of the tasks and technologies that go into creating a website"
      ]
    },
    {
      "title": "JavaScript Object Oriented Programming",
      "url": "https://www.udemy.com/course/object-oriented-programming-javascript/",
      "bio": "ES6 Classes, Prototypes, Function Constructors and Object Oriented Programming in JavaScript",
      "objectives": [
        "What is Object Oriented Programming in JavaScript",
        "How to create Prototype Chain",
        "What is method and how methods are inherited",
        "How to create prototype chain using Classes",
        "How Classes are used in React"
      ],
      "course_content": {},
      "requirements": [
        "Know basics of JavaScript",
        "Any computer Windows, Linux or Mac will work"
      ],
      "description": "Did you struggle to understand Prototypes, the Prototype Chain, or Classes in JavaScript? Do concepts like inheritance, function constructors, and object instantiation seem confusing?\n\n\nThen this course is for you!\n\n\nIn this hands-on course, you will deeply explore Object-Oriented Programming (OOP) in JavaScript, gaining the skills to write cleaner, more structured, and reusable code. Understanding how JavaScript handles objects, inheritance, and encapsulation is essential for becoming a proficient JavaScript developer.\n\n\nWhat You Will Learn:\n• What is a Prototype? – Understand how JavaScript handles objects under the hood.\n• How the Prototype Chain works – Learn how properties and methods are inherited.\n• Creating and using Function Constructors – Master an older but essential way to create objects.\n• Using Object.create() – Learn how to create objects without function constructors.\n• How to inherit properties and methods – Implement inheritance correctly in JavaScript.\n• Creating instances of specific prototypes – Learn how instances are linked to their prototype.\n• The difference between classical and prototypal inheritance – Understand why JavaScript is different from languages like Java or C++.\n• ES6 Classes and how they work internally – Uncover the modern approach to OOP in JavaScript.\n• Super() and Extends – Learn how to create class hierarchies with ease.\n• Encapsulation and private fields – Secure your data and improve code maintainability.\n\n\nThis course is practical and beginner-friendly, meaning you won’t just learn theory—you will write code, build prototypes, create objects, and explore inheritance in action. By the end of the course, you’ll feel confident in using OOP concepts in JavaScript to structure your applications effectively.\n\n\nWhether you are preparing for a JavaScript interview, working on a real-world project, or simply looking to level up your JavaScript skills, this course will provide the clarity and hands-on practice you need.\n\n\nEnroll now and take your JavaScript skills to the next level!",
      "target_audience": [
        "JavaScript beginners",
        "Experienced JavaScript developers who want to understand Object Oriented programming in JavaScript"
      ]
    },
    {
      "title": "How to Build a Professional Website on your Own in 2 hours",
      "url": "https://www.udemy.com/course/how-to-build-a-professional-website-on-your-own-in-2-hours/",
      "bio": "Create Professional Websites With Zero Experience Using WordPress",
      "objectives": [
        "If you've always wanted to build a personal or business website , this course is going to teach you exactly what you need to know. The Quick Start Website is a step-by-step video tutorial course to help you get your first professional website up and running. It is a thorough overview of the WordPress interface and is designed for small business owners, self-employed professions and any other individuals who want to build their attractive, high quality websites, quickly. In order to create a self-hosted WordPress website, under your own domain name, you will need to purchase a domain name and web hosting, though we will show you exactly what you need to do to set that up. Typically domains will cost you $10 per year and web hosting will cost between $10-15 per month. You will be able to use the same hosting account for all your websites, both business and personal. I will show you how to install WordPress onto your web hosting account. How to customize WordPress by changing the theme/ colours to match your business brand or mood, adding extra functions with plugins and widgets and add custom images and logos. I will teach you to create the 5 key pages that a website should have. Each page we create contains different functions which can be used on ANY page of your site such as adding images, video, contact forms, Google maps, testimonials, plus much more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Overview"
        ],
        "Domain": [
          "What is Domain and how to find a good domain name for your website?",
          "Tool 1 to find a profitable domain name - Leandomainsearch",
          "Tool 2 to find a profitable domain name - Bust a name",
          "Purchasing your domain name"
        ],
        "Web Hosting": [
          "What is Web Hosting?",
          "Signing up for Web Hosting"
        ],
        "Mapping Domain & Hosting": [
          "Adding Nameservers of Hosting in Domain",
          "Mapping new domain to Hosting"
        ],
        "WordPress": [
          "What is Wordpress and Why to use it?",
          "Install WordPress & Dashboard Overview",
          "Remove Default Pages,Posts and Comments & Permalinks",
          "Remove Default Themes & Plugins"
        ],
        "Professional Website": [
          "Installing Professional WordPress Theme",
          "Editing Content, Images and Add New Pages",
          "Adding Contact Form and Google Maps to your website"
        ],
        "Professional Logo": [
          "How To Make A Professional Logo in 5 Minutes – for Free"
        ],
        "Secure Website": [
          "Steps to get a Free SSL for your WordPress Website"
        ],
        "Google Analytics": [
          "How to add Google Analytics and track visitors"
        ],
        "Professional Business Email": [
          "Setup a Professional email with Gmail for FREE"
        ]
      },
      "requirements": [
        "Computer (Mac or Windows), Internet Connection",
        "No prior knowledge - just a desire to have a website!"
      ],
      "description": "Are you tired of hiring web developers for making even small changes to your website?\nTired of watching too many tutorials online, which are so scattered that you never know what are the steps in sequence to start a professional website, then you are in the right place.\nBeing in the industry for more than 6 years, I know the pain of a newbie.\nWhat if I tell, YOU can create a professional business website on your own?\nSo,this course is a specially designed course (keeping newbies in mind) which has step-by-step instructions.\nThis course is the output of my 6+ years journey in web designing and building 50+ websites for my clients.\nThe course is divided into 6 modules and has 20 videos and is designed in such a simple way that even a non-technical guy can start his/her professional website on their own.\nYes, you heard it right !!!\nAt the end of the course you can create a FULLY functional multi-page Website️, not just a dummy website that does not work!\n\n\nHow is this course different?\nI’m gonna teach you how to build a website that’ll help you market yourself. And I break it all down in a really simple, straightforward way. So if you’ve been feeling frustrated and overwhelmed, get ready to feel confident and empowered.\n5+ Assignments after each important module for you to take ACTION.\nThe course shows you how to build the same exact website I build for my one-on-one web design clients. It’s my whole entire design process packaged up into step-by-step training videos designed with the non-techies in mind!",
      "target_audience": [
        "small business owners",
        "building website as hobby",
        "startups",
        "web developers"
      ]
    },
    {
      "title": "Front-end Web developer MasterClass HTML CSS JavaScript",
      "url": "https://www.udemy.com/course/learn-html-css-javascript/",
      "bio": "Learn HTML CSS JavaScript all in one place packed with exercises and source code with examples",
      "objectives": [
        "Create interactive websites from scratch",
        "Become familiar with coding and creating web pages and applications"
      ],
      "course_content": {
        "Introduction to web development course": [
          "Web development Introduction",
          "Welcome to front end web development",
          "Quick Resources to Get started with"
        ],
        "How the internet works": [
          "DNS names and IP addresses",
          "Code of the internet",
          "HTML and CSS how they work",
          "JavaScript Code",
          "Web development and how it works",
          "Dynamic Static Frontend Backend Client Side Server Side",
          "Editors creating frontend code",
          "Web development Browsers",
          "File Structure",
          "Hosting websites",
          "Get your website files to your server",
          "Web developer Resources and info",
          "Lesson resources"
        ],
        "Basics of HTML": [
          "What is HTML",
          "How to Write and Practice HTML",
          "How to create an HTML boilerplate",
          "Exercise create a boilerplate template",
          "Exercise creating a boilerplate HTML file",
          "Self Closing tags Meta tags and attributes",
          "Heading Tags",
          "Update template",
          "Common tags P BR HR separate text",
          "Clean Code Comments and more",
          "HTML preformatted text",
          "HTML Character Codes resources",
          "Section Resources",
          "Exercise Recreate as HTML",
          "Exercise Source"
        ],
        "HTML more tags": [
          "HTML Markup Examples",
          "Source Code",
          "HTML hyperlinks",
          "Hyperlink Attributes",
          "How to create HTML bookmarks",
          "email link HTML mailto",
          "Source Code Linking",
          "Exercise Create Navbar for website",
          "Exercise Source Code",
          "Adding Images to websites",
          "Exercise Create Thumbnail portfolio",
          "Image Exercise Source Code",
          "Ordered Lists and Unordered lists",
          "HTML Description List",
          "HTML Nested Lists",
          "Source Code Lists",
          "Exercise List of services",
          "List Exercise Source",
          "HTML tables",
          "HTML spanning multiple cells",
          "Source Code Tables",
          "Quick Tip Styling",
          "Exercise HTML table",
          "Table Exercise Source Code",
          "HTML forms introduction",
          "Contact Form HTML",
          "New HTML5 input types",
          "Form elements HTML",
          "Form content",
          "HTML Form source code",
          "Exercise Create Contact Form",
          "Contact Form Exercise Source Code",
          "HTML5 semantic elements",
          "Semantic element source code",
          "HTML iframe pages",
          "Exercise Create a Website",
          "Website Exercise Source Code"
        ],
        "Introduction to CSS": [
          "Websites with and without CSS",
          "How to add CSS to HTML Pages",
          "Making selections CSS inspector",
          "Divs and spans content selection",
          "CSS selection id tag class",
          "Colors HEX RGB RGBA values",
          "CSS named color values",
          "CSS background images",
          "CSS background shorthand statement",
          "Code sample",
          "CSS borders shorthand",
          "CSS border Outline",
          "Code Sample Borders",
          "CSS Margins",
          "CSS padding",
          "CSS Box Model Dev Tools",
          "Box Model Code Example",
          "CSS height and Width",
          "Box Model Challenge",
          "Box Model Challenge Source",
          "Auto Margins Center your elements CSS",
          "CSS font property",
          "CSS Text property",
          "Chrome dev tools editors and options",
          "Adding Font families Google Fonts",
          "Line Height CSS",
          "CSS letter spacing",
          "Code examples Fonts text and letters",
          "CSS links",
          "CSS table styling",
          "Display and Hiding elements CSS",
          "Code samples",
          "Display Inline 4 squares Challenge",
          "Display Inline 4 squares Solution",
          "CSS position Properties",
          "DevTools Design Tips",
          "Code Example position",
          "Coding Challenge Make a NavBar from an unordered list",
          "NavBar start code",
          "Code Challenge Solution",
          "Source Code Code NavBar CSS",
          "Source Example Code",
          "CSS links and Resources"
        ],
        "Using CSS to build webpage layouts": [
          "Floats section introduction",
          "More about Floats",
          "Intro to Floats",
          "CSS Float images inline with text",
          "CSS float thumbnails",
          "Source Code Thumbnails",
          "HTML build basic page layout CSS.",
          "2 column CSS site",
          "Create a 2 column page layout in minutes",
          "2 column source code",
          "Create 3 column webpage",
          "3 column height background color fix",
          "Source Code 3 Column Website"
        ],
        "Advanced CSS": [
          "CSS Combinators",
          "CSS Pseudo Classes",
          "Source Code examples",
          "CSS Pseudo Elements",
          "Source Code",
          "CSS Selectors by attributes",
          "Selector example code",
          "CSS Media Queries secret to responsive design",
          "Media query example code"
        ],
        "Do more with CSS": [
          "Multiple Background Images CSS",
          "Element box properties CSS",
          "More border options CSS3",
          "Source Code Example",
          "background gradients CSS",
          "Code sample",
          "CSS3 Animation",
          "Animation example code"
        ],
        "Apply CSS create a website": [
          "HTML build a basic website structure with HTML",
          "Apply CSS build a navbar",
          "Build 2 Column main content area CSS",
          "Sidemenu links hover CSS",
          "CSS website tweak",
          "Website source Code",
          "CSS resources"
        ],
        "JavaScript do more on your web page": [
          "What is JavaScript",
          "How to add JavaScript to Webpages",
          "JavaScript Source",
          "Debugging and commenting JavaScript",
          "Code example",
          "JavaScript Basic Data Types",
          "JavaScript Variables",
          "JavaScript Variable Rules",
          "Exercise 1 Output to console link to js file",
          "Exercise Source",
          "Data type Null vs Undefined JavaScript",
          "Declaring multiple variables at once JavaScript",
          "JavaScript Operators",
          "Increment and Decrement Values JavaScript",
          "Assignment Operators JavaScript",
          "Comparison Operators JavaScript",
          "JavaScript String Operators",
          "JavaScript Logical Operators",
          "Examples and Source Operators"
        ]
      },
      "requirements": [
        "desire to learn",
        "computer access"
      ],
      "description": "Learn HTML CSS and JavaScript all in one course.  This is the complete front end web developer starting course.\nWhether you are looking to refresh your skills, expand your knowledge or looking to just get started with web development this course is for YOU!\nA complete comprehensive course covering the core foundations of the web.\nWhat you will learn within this course\nHTML and HTML5\nCSS and CSS3\nJavaScript\nJavaScript DOM selecting elements and manipulating element content\nSource Code and examples are included to get you started quickly.  Links to top resources and more all available in one massive course.\nThis course is taught by an instructor with over 18 years of real world industry experience.  Ready to help you learn web development and answer any questions you may have.\nThis course is designed to help you learn and practice front-end coding for website development and design.  Learn the core concepts of HTML, CSS and JavaScript.\nFriendly support is always available in the Q&A section ready to help you learn.\nJoin now take the first step to exploring more about web development.\nHow the internet works :\nLearn about DNS names and IP address\nWhat makes a website and how does your browser know what to show you.\nCoding languages HTML CSS JavaScript\nWeb development and what its all about\nTerms like frontend and backend code\nHosting, Browsers, FTP +++\nDeveloper tools and resources\nTips for web developers\nHTML building the code for websites :\nUnderstanding HTML foundations\nDifferent Types of tags\nCreating an HTML boilerplate template\nHTML formatting tags\nTags Elements Attributes >\nResources to Learn more about HTM\nHTML Headings\nContent separation and Common tags\nCommenting\nPreformatted text\nHTML entities ASCii characters\nMarkup Formatting HTML Markup\nHyperlinks connecting the pages\nUsing Images Images styling\nLists unordered and ordered\nNested Lists inside lists, List styles, List options, Description Lists\nTables row cells table head and body\nHTML Forms with input and methods labels and more\nHTML5 Input HTML5 Types color, date, email, month, number, range, search, tel, time, url, week\nInput type images upload\nHTML5 Semantic elements for building structure\nHow iFrames work and can be added to HTML\nCSS for presentation\nWhat is CSS\nHow to add styling to HTML elements\nCSS defined what it does in Web development\nWebsites with CSS vs without CSS\nContainers grouping content spans and divs\nSelects getting the right element\nAdding CSS to code\nCSS color options palette fonts and backgrounds\nBorders Margins Padding - Box model\nText and fonts CSS\ntables and lists with CSS\nElement Display and positioning\nBuilding a navbar\nAdvanced CSS selectors\nPseudo Classes and Pseudo Elements\nMedia Queries\nJavaScript Fundamentals\nWhat is JavaScript\nWriting JavaScript is code and what it does\nAdding JavaScript to your web page\nDeveloper console log\nJavaScript data type\nWhat variables are and how they are used\nOperators for applying logic to code\nArrays and objects to hold data\nConditionals with logic\nLoops for while and do\nJavaScript functions at the heart of JavaScript\nMore Built in functions methods\nJavaScript Document Object Model\nWhat is the DOM and how it works\nUpdating and manipulating elements\nSelecting multiple elements\nPage event listeners\nClick events",
      "target_audience": [
        "Anyone who wants to learn about web development",
        "This course is perfect for complete beginners",
        "This course is great for anyone who wants all the content in one place",
        "Web Application developers",
        "Web Designers"
      ]
    },
    {
      "title": "Flutter Masterclass (from Novice to Ninja)",
      "url": "https://www.udemy.com/course/flutter-masterclass-from-novice-to-ninja/",
      "bio": "Learn how to make dynamic and interactive Flutter applications for mobiles.",
      "objectives": [
        "Learn how to make Flutter applications from the ground up",
        "Learn how to integrate flutter with a Firebase database",
        "Discover how to add animations to your Flutter applications",
        "Learn how to add authentication to Flutter applications",
        "Learn how to use Riverpod for state management in Flutter",
        "Learn the Dart programming language as you go"
      ],
      "course_content": {
        "Introduction & Flutter Basics (Simple App Build)": [
          "Introduction & Course Files",
          "Installing on Windows",
          "Installing Flutter on Mac",
          "Making a New Flutter Project",
          "Quick Project Overview",
          "Widgets",
          "Material App & Scaffold",
          "Stateless Widgets",
          "Containers",
          "Imports & Quick Refactor",
          "Columns",
          "Rows",
          "Images",
          "The Expanded Widget",
          "Buttons & Cick Events",
          "Stateful Widgets",
          "Control Flow in Lists",
          "Making Reusable Widgets"
        ],
        "Layouts, UI, Fonts and Theming (Main App Build)": [
          "Setting up a New Project",
          "Making a Custom Theme",
          "Text Themes",
          "Reusable Styled Text Widgets",
          "Using Google Fonts",
          "Container Gradients",
          "List View",
          "Custom Card Widget",
          "Icon Buttons"
        ],
        "Data Models": [
          "Making a Character Class",
          "Mixins",
          "Getters",
          "Enhanced Enums",
          "Making a Skill Class",
          "Adding Images",
          "Adding Dummy Data",
          "Using the Character Class"
        ],
        "Handling User Input": [
          "Adding a \"Create\" Screen",
          "Making a Text Field",
          "Text Editing Controllers",
          "Submit Handler Functions",
          "Displaying Vocations",
          "Adding a Scrollable Widget",
          "The onTap Gesture",
          "Selecting an Option",
          "Submitting the Data",
          "What About the Form Widget?"
        ],
        "Routes, Screens & Project Progression": [
          "Pushing and Popping Routes",
          "Navigating Between Screens",
          "Showing a Dialog",
          "Adding a Dialog Theme",
          "Navigating to a Profile Screen",
          "Passing Data into Routes",
          "Fleshing Out the Profile Screen",
          "Arguments in Stateful Widgets",
          "Using Tables",
          "Outputting Skills",
          "Selecting an Active Skill",
          "Adding a Snackbar"
        ],
        "Global State Management": [
          "Why We Need Global State",
          "Provider Package",
          "Making a Store",
          "Providing and Consuming State",
          "Adding New Characters"
        ],
        "Adding a Database": [
          "Chapter Introduction",
          "Firebase SDK Setup",
          "Firestore Database Setup",
          "ASIDE - Factory Constructors",
          "Processing Model Data",
          "Making a Character Factory Constructor",
          "Processing Character Stats",
          "Firestore Convertors",
          "Adding Firestore Data",
          "Fetching Data",
          "Saving Data Changes",
          "Deleting Data"
        ],
        "Animations": [
          "Swipe to Dismiss",
          "Implicit vs Explicit Animations",
          "Hero Widget",
          "Animated Rotation",
          "Animation Controllers",
          "Tween Sequences",
          "Animated Builder Widgets",
          "Changing the Color",
          "Stack and Positioned Widgets"
        ],
        "EXTRA - Forms in Flutter (a Crash Course)": [
          "1 - User Input in Flutter",
          "2 - Text Fields",
          "3 - Text Editing Controllers",
          "4 - The Form Widget",
          "5 - Text Form Field",
          "6 - Dropdown Form Field",
          "7 - Saving Form Data",
          "8 - Resetting the Form"
        ],
        "EXTRA - Riverpod State Management (a Crash Course)": [
          "1 - Why Use Riverpod?",
          "2 - Setup & Installing Riverpod",
          "3 - Providers",
          "4 - Stateless Consumers",
          "5 - Stateful Consumers",
          "6 - Generated Providers",
          "7 - Notifier Providers",
          "8 - Updating State",
          "9 - Generated Notifier Providers",
          "10 - Dependent Providers",
          "11 - Final Touches"
        ]
      },
      "requirements": [
        "Basic programming concepts in any language - loops, variable, functions, etc."
      ],
      "description": "Flutter is a fantastic framework for creating cross-platform applications (mobile, desktop & web), using the Dart programming language.\nIn this Flutter Masterclass course, you'll learn how to make Flutter applications from scratch (no prior Flutter knowedge is required), including all the basics (such as widgets, layouts, images and styles) and how to make custom themes and how to set up multiple screens and routes.\nYou'll also learn how to make data models, how to handle forms & user input, manage global state (using Riverpod) and how to integrate a Flutter application with a database and authentication service (using Firebase).\nOn top of all that, you'll be learning how to animations to your Flutter applications as well, to give them a sleek and natural feel.\nAs an added bonus - there's a whole chapter near the end of the course about the Dart programming language, which we, as developers, use to make Flutter applications. So the only requirement before you start, is basic knoweldge of essential programming concepts - loops, variables, functions, control flow etc.\nAlong the way, we'll also make a fully functional mobile application - and by the end of this course, you'll be confident enough to make your very own Flutter applications from scratch.\nIf you want to preview my teaching style before you buy, you can find me on YouTube - Net Ninja - where I upload thousands of free web development tutorials!",
      "target_audience": [
        "beginner/intermediate developers with no (or little) Flutter experience."
      ]
    },
    {
      "title": "Client-Side Data Storage Ultimate Guide",
      "url": "https://www.udemy.com/course/client-side-data-storage-ultimate-guide/",
      "bio": "JavaScript, HTML5, Cookies, WebStorage, LocalStorage, SessionStorage, IndexedDB, WebSQL and more",
      "objectives": [
        "Learning basics of Client-Side Data Storage",
        "Able to build Advanced HTML5 Web Applications",
        "Store and use data on Client-Side confidently",
        "Clear and solid understandings on new generation Databases on Client-Side",
        "Able to develop offline web applications"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Setting up the Working Environment",
          "An Introduction to Client-Side Storage"
        ],
        "Cookies": [
          "What are Cookies?",
          "Creating Cookies",
          "Retrieving Cookies",
          "Lab Session: Login Using Cookies",
          "Updating Cookies",
          "Lab Session: Extend Login Expiration",
          "Deleting Cookies",
          "Lab Session: Logout by Removing Cookies"
        ],
        "Project: Building an Open Source Cookie Manager": [
          "Creating the Project Structure",
          "Creating Cookie Function",
          "Retrieving Cookie Function",
          "Updating Cookie Function",
          "Deleting Cookie Function",
          "Other Cookie Functions",
          "Module Support",
          "Publish to Github",
          "Readme.md - Documentation"
        ],
        "HTML5 Web Storage": [
          "What is Web Storage?",
          "The LocalStorage Object",
          "Lab Session: Storing Objects in LocalStorage",
          "The SessionStorage Object",
          "Lab Session: Storing Dates and Numbers in SessionStorage"
        ],
        "Project: Building a Shopping Cart with SessionStorage": [
          "Building the Project Structure",
          "Listing Items",
          "Adding Items to Cart",
          "Creating the Cart Page"
        ],
        "Project: Building a To-Do App with LocalStorage": [
          "Project Design Overview",
          "Adding To-Dos",
          "Listing To-Dos",
          "Checking/Unchecking To-Dos",
          "Removing To-Dos"
        ],
        "Web SQL": [
          "What is Web SQL?",
          "SQL Basics",
          "Web SQL Core Methods",
          "Creating Table",
          "Inserting Item to Table",
          "Fetching from Table",
          "Updating Item from Table",
          "Deleting Item from Table",
          "Removing Table"
        ],
        "IndexedDB": [
          "What is IndexedDB?",
          "Opening IndexedDB Database",
          "Working with Object Stores",
          "Start the Transaction",
          "Adding Data",
          "Lab Session: Calculating the Item Count",
          "Fetching Data",
          "Lab Session: Displaying All Data in the Store",
          "Updating Data",
          "Deleting Data",
          "Lab Session: Removing All Data in the Store",
          "Deleting Object Stores",
          "Deleting IndexedDB Database"
        ],
        "IndexedDB Advanced": [
          "Creating Indexes",
          "Indexes More",
          "Iterating with Cursors",
          "Lab Session: Limiting Cursor Queries",
          "Working with Key Ranges"
        ],
        "End of Journey": [
          "What is next?"
        ]
      },
      "requirements": [
        "Basic knowledge on HTML5",
        "Basic knowledge on JavaScript",
        "Curiosity to learn new technologies",
        "Eagerness to become an expert web developer"
      ],
      "description": "*** The one and the most comprehensive Client-Side Data Storage Course in Udemy! ***\nIn the today's modern web development, the client side is getting more and more place from the server side. The modern browsers are now able to provide many different and powerful client-side storage tools and APIs. Even as more people move toward the cloud, client-side storage can still save web developers a lot of time and money if you do it right\nIn today's world, an ideal and experienced web developer has to benefit from the power of these modern and edge technologies.\nIn this course, we will cover all of the key points of the Client-Side Data Storage topic together. This course is a best chance for whom is willing to learn this edge technology or improve personal skills set. Every topics are comprehensively explained with examples and projects.\nThe topic covered in the course are mainly :\n\nBasics of Client-Side Web Storage\nCookies\nBuilding an open source library\nLocalStorage and SessionStorage\nWebStorage projects\nNew generation Client-Side Databases\nIndexedDB\nWeb SQL\nReal Life Scenario Projects\nEnhance your JavaScript and Frontend Skills\n\nIf you have any questions related to the lectures, do not hesitate to ask!\n\n\nlocal storage, indexeddb, web storage, javascript local database, client side storage javascript, client side storage options, javascript store data on server, client side storage vs server side storage, storage api, web sql database, pwa offline storage",
      "target_audience": [
        "New beginners",
        "Experts who wants to reinforce themselves",
        "Anyone who wants to refresh knowledge",
        "Anyone who wants to improve HTML5 WebStorage API skills",
        "Anyone who wants to sharpen the skillsets"
      ]
    },
    {
      "title": "Learn AngularJS Course for Beginners to Advanced",
      "url": "https://www.udemy.com/course/learn-angular-js-course-zero-to-hero/",
      "bio": "Completely Angular JS Beginners to Advanced Course",
      "objectives": [
        "Angular JS Data Binding",
        "AngularJS Animation",
        "AngularJS Application",
        "AngularJS Controllers",
        "AngularJS Directive",
        "AngularJS Events",
        "AngularJS Expression"
      ],
      "course_content": {
        "Introduction": [
          "Angular JS Data Binding",
          "AngularJS Animation",
          "AngularJS API",
          "AngularJS Application",
          "AngularJS Controllers",
          "AngularJS Directive",
          "AngularJS Events",
          "AngularJs Expression",
          "AngularJS Filters",
          "AngularJS Froms",
          "AngularJS HTML DOM",
          "AngularJS Http",
          "AngularJS Include",
          "AngularJS Models",
          "AngularJS Modules",
          "AngularJS Routing",
          "AngularJS Scope"
        ]
      },
      "requirements": [
        "No Programming Experience needed"
      ],
      "description": "Welcome to the \"Learn AngularJS Course: Zero to Hero,\" your gateway to mastering one of the most powerful and widely-used JavaScript frameworks for web development. Whether you're a beginner taking your first steps into web development or an experienced developer looking to add AngularJS to your skillset, this course is meticulously designed to guide you from ground zero to becoming a proficient AngularJS developer.\n\n\nAngularJS, developed by Google, is known for its flexibility, efficiency, and ability to build dynamic, single-page web applications. This course is crafted with the aim of simplifying the learning process, making AngularJS accessible to learners of all levels. From understanding the basics to creating robust web applications, you'll embark on a comprehensive journey to become a hero in AngularJS development.\n\n\nThis Course Includes:\nAngular JS Data Binding\nAngularJS Animation\nAngularJS API\nAngularJS Application\nAngularJS Controllers\nAngularJS Directive\nAngularJS Events\nAngularJS Expression\nAngularJS Filters\nAngularJS Filters\nAngularJS HTML DOM\nAngularJS Http\nAngularJS Http\nAngularJS Models\nAngularJS Routing\nAngularJS Scope\n\n\nEmbark on your journey to become an AngularJS hero! Enroll now in \"Learn AngularJS Course: Zero to Hero\" and acquire the skills needed to build dynamic and robust web applications. Whether you're a student, developer, or tech enthusiast, this course equips you with the knowledge to harness the full potential of AngularJS. Don't miss this opportunity to elevate your web development skills and become a hero in AngularJS development!",
      "target_audience": [
        "Anyone want to learn AngularJS"
      ]
    },
    {
      "title": "Laravel doctor appointment system",
      "url": "https://www.udemy.com/course/laravel-php-doctor-appointment-web-application/",
      "bio": "Make a doctor appointment web application with Laravel, PHP framework",
      "objectives": [
        "How to make web application",
        "How to integrate admin template",
        "How to design database for this web application",
        "A complete doctor appointment booking system",
        "You will learn how to integrate popular JavaScript libraries to enhance the user interface and user experience of your application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project scenario"
        ],
        "Setup": [
          "Before we start",
          "setup",
          "install laravel",
          "install laravel 8",
          "Target class not found error solution in laravel 8"
        ],
        "Download code": [
          "download project code"
        ],
        "integrate admin template": [
          "make link to css,js and image",
          "splitting single file into different files",
          "explaning the concept of master file"
        ],
        "migraton of users and roles": [
          "migration of user and roles table",
          "add extra column to existing table",
          "create first user"
        ],
        "Doctor crud": [
          "create doctor form",
          "validation part1",
          "validation part 2 and store doctor record",
          "get list of doctors in datatable",
          "show information in bootstrap modal",
          "fix error",
          "edit doctor form",
          "update doctor information",
          "code refactor",
          "delete doctor",
          "sidebar",
          "adding conditions to get only doctors and admin but no patients"
        ],
        "Login and middleware": [
          "login and middleware"
        ],
        "Doctor time slot": [
          "doctor appointment time design discussion",
          "desing time slot",
          "finalize the design",
          "creation of table for appointments",
          "appointment store",
          "validation of the appointment time slot",
          "get appointment time slots",
          "mark checked if exist",
          "update appointment time",
          "doctor middleware and sidebar",
          "show doctor all his appointment",
          "redirect doctor to dashboard"
        ],
        "Frontend design": [
          "frontend design part1",
          "frontend design part2",
          "frontend design part3"
        ],
        "Doctors and Filter": [
          "get list of doctors",
          "show all appointment time slots",
          "display checkbox and display doctor information",
          "filters and find doctors",
          "fix dashboard routes"
        ]
      },
      "requirements": [
        "A good knowledge of PHP",
        "A basic knowledge of Laravel."
      ],
      "description": "This course was recorded in Laravel version 7\nThis is a doctor appointment web-based application made with laravel which you might have used in your daily life to book an appointment with the doctor. The booking application has three types of users namely patient, doctor, and admin.\nThe patient will be able to book an appointment with his doctor. In the frontend, we have a date through which the patient can filter the available doctors on a particular date.  He can book a specific time for a particular date which will be also shown inpatient dashboard later. The patient dashboard also shows whether he has visited to doctor or not. If yes, he will see the medicine prescribed by the doctor on his dashboard. He can also update his profile.\n\n\nAdmin can create and update the doctor's information. Admin can filter the patients and see who has booked an appointment on a particular date. He can toggle the status of the patient as visited/not visited. Admin can create departments and update and delete them. As an admin, he can get the information about the system on his dashboard. The information such as how many doctors are working in his clinic? how patients have made an appointment? How many departments are in the clinic? etc.\n\n\nAs a doctor, he can create an appointment time for a particular date. Each time slot is in the difference of 20min ie: patients can book an appointment with a doctor for a max 20min. He can update the time slot as well.\nHe can check how many patients have made an appointment on a particular date by filtering through the date. Finally, he can prescribe medicine to patients.",
      "target_audience": [
        "A beginner and intermediate PHP/Laravel developer"
      ]
    },
    {
      "title": "Deploy Django on Linux",
      "url": "https://www.udemy.com/course/deploy-django-on-linux/",
      "bio": "Deploy like a pro",
      "objectives": [
        "How to deploy Django to a secure production environment",
        "Understand the architecture of a Django deployment",
        "What options are available in the tech stack (Linux, Web server, WSGI, Database, SSL)",
        "How to configure PostgreSQL database",
        "How to configure gunicorn WSGI server",
        "How to configure Nginx web server",
        "How to configure SSL with free LetsEncrypt certificates or self-signed certificates",
        "How to update and backup your deployment",
        "How to setup a protected development site"
      ],
      "course_content": {
        "Architecture Overview": [
          "Introduction to Architecture",
          "The Physical Machine",
          "The Linux Operating System",
          "Which Linux Distro Will we use?",
          "The WSGI Server",
          "WSGI Quiz",
          "The Web Server",
          "Web server quiz",
          "The Database",
          "Database quiz",
          "Complete Architecture Recap",
          "Architecture quiz",
          "Alternative Architectures"
        ],
        "Walkthrough": [
          "Create a Virtual Machine on Digital Ocean",
          "Create Python Virtual Environment",
          "Create a Test Project",
          "Configure SSH Keys",
          "Clone Project from GitHub",
          "Tips for Managing Django Settings Files",
          "Configure Django to use PostgreSQL",
          "Install and Setup PosgreSQL Database",
          "Install and Test Gunicorn WSGI Server",
          "Setup Systemd Service for Gunicorn",
          "Install and Test Nginx",
          "Configure STATIC and MEDIA Directories in Django",
          "Configure a Virtual Host in Nginx",
          "Add SSL Encryption to Nginx Virtual Host"
        ],
        "Setup a Protected Dev Site": [
          "Overview",
          "Setup Dev Site"
        ],
        "Backups": [
          "Backup Options",
          "Setup Backup Job"
        ],
        "Updates": [
          "Update Options",
          "Setup Automatic SSL Certificate Renewal",
          "Write Update Script"
        ]
      },
      "requirements": [
        "Basic Python experience",
        "Basic Django experience",
        "Basic Linux experience"
      ],
      "description": "I will walk you through all the major components of deploying Django.\nLearn about the architecture of a deployment and how the different pieces fit together. You will understand the differences and similarities between different options for:\nLinux distribution (Debian vs Ubuntu vs CentOS vs Fedora)\nWeb server (Nginx vs Apache2)\nDatabase server (SQLite vs MySQL vs MariaDB vs PostgreSQL)\nWSGI server (uWSGI vs gunicorn vs waitress)\nSSL certificates (self-signed vs LetsEncrypt)\nThe first portion of the course will talk about the architecture and the role of each component. I will also discuss alternative architectures and things to consider when planning. I'll talk about the different options and which ones I recommend for various situations. The second portion of the course will be an actual walkthrough, step-by-step, of deploying a Django project to production with security in mind. At the end of the course I'll wrap up with showing you how you can automate updates and backups.\nWhen you're done with the course you'll know all my tips and tricks, have a solid understanding of the architecture to make well informed choices.\nYou can ask me questions in the Q&A section of the course and learn from others. If you have a unique situation, share your question and I will help you. Remember, you're not just buying a set of videos, you're taking a course and I am a resource for you as your instructor.\nStudents should already have proficient Linux and Python skills with some familiarity with Django.",
      "target_audience": [
        "Python or Django developers",
        "Devops engineers working with Django, Flask, or other WSGI web apps",
        "Linux system administrators working with Django, Flask, or other WSGI web apps",
        "Security Engineers who work with Python web apps",
        "Anyone curious how a Django application is deployed"
      ]
    },
    {
      "title": "Build an Employee Management System with CodeIgniter 3",
      "url": "https://www.udemy.com/course/complete-codeigniter-course-for-beginners-step-by-step/",
      "bio": "Build a real PHP CRUD app with CodeIgniter — learn MVC, routing, MySQL integration, and form handling step by step.",
      "objectives": [
        "Learn how to build a complete Employee Management System using CodeIgniter — with real routing, controllers, models, views, and MySQL.",
        "Understand the CodeIgniter MVC pattern and how to separate your logic, database interaction, and UI for clean, maintainable projects.",
        "Set up your development environment, connect to a MySQL database, and configure CodeIgniter to run projects on a local server.",
        "Create models, views, and controllers in CodeIgniter step by step to handle data, display dynamic pages, and manage CRUD operations.",
        "Build and validate forms in CodeIgniter to add, update, and delete employee records, with secure data handling and feedback messages.",
        "Use CodeIgniter's routing system to manage URLs and link to pages like employee list, add employee, edit form, and delete action.",
        "Learn how to integrate Bootstrap with CodeIgniter to create a responsive and professional user interface for your employee dashboard.",
        "Handle errors, validation, and form submissions cleanly using CodeIgniter’s built-in helpers, libraries, and controller logic.",
        "Create a working backend admin panel for managing employees — including status updates, success messages, and table listings.",
        "Gain practical experience building a functional PHP app with CodeIgniter — perfect for learning MVC and preparing for real dev work."
      ],
      "course_content": {
        "CodeIgniter Basics": [
          "Introduction to CodeIgniter",
          "What you should know",
          "Install CodeIgniter in Local Development Server",
          "Hello World in CodeIgniter",
          "Section 1: Quiz"
        ],
        "CodeIgniter Fundamentals": [
          "CodeIgniter Application Structure",
          "Configuring CodeIgniter for Development",
          "Controllers & Views in CodeIgniter",
          "Controllers Addtional Parameters Data",
          "URI Segments in CodeIgniter",
          "URL's in CodeIgniter",
          "Section 2: Quiz"
        ],
        "Setting up CodeIgniter Project": [
          "Adding Bootstrap to CodeIgniter Project",
          "Creating Default Home Controller in CodeIgniter",
          "Remove index.php from URL in CodeIgniter",
          "Section 3: Quiz"
        ],
        "Creating a Login & Registration Page": [
          "Creating a Login Page with CodeIgniter",
          "Collect login data in CodeIgniter",
          "Creating a Registration Page in CodeIgniter",
          "Collect Registration data in CodeIgniter",
          "Section 4: Quiz"
        ],
        "Database Structure and Management": [
          "Database structure for user registration",
          "Registering new users in CodeIgniter",
          "Check user login in CodeIgniter",
          "Section 5: Quiz"
        ],
        "Dashboard with CodeIgniter": [
          "Creating the dashboard",
          "Encrypting the Dashboard with Sessions",
          "Creating Navbar inside Dashbard",
          "Creating Logout method in CodeIgniter",
          "Creating sidebar for the Dashboard",
          "Section 6: Quiz"
        ],
        "Creating Jobs Sections": [
          "Create Job form in CodeIgniter",
          "Creating Jobs Table in PHPMyAdmin",
          "Inserting new jobs inside MySQLi with CodeIgniter",
          "Creating jobs list in front-end with CodeIgniter",
          "Creating job update form with data in CodeIgniter",
          "Updating details in Database with CodeIgniter",
          "Deleting jobs from Database table with CodeIgniter",
          "Section 7: Quiz"
        ],
        "Creating Employees Section": [
          "Creating employees table in Database",
          "Creating Add Employee Form in CodeIgniter",
          "Adding & Displaying Employees list in CodeIgniter",
          "Get single Employee Details in CodeIgniter",
          "Getting single Employee details in Form Fields",
          "Update Single Employee Details in CodeIgniter",
          "Delete Specific Employee from Database in CodeIgniter"
        ],
        "Hosting your CodeIgniter Web App": [
          "Hosting your CodeIgniter Web App"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "A basic understanding of PHP is required — you should know variables, functions, and how to work with basic HTML and forms.",
        "You should know how to run a PHP file on a local server using tools like XAMPP or MAMP — we’ll build everything locally, step by step.",
        "Some basic MySQL knowledge will help — like knowing what a table or query is — but we’ll explain everything as we go.",
        "You’ll need a code editor like VS Code or Sublime Text — we’ll use it to write all our CodeIgniter controller, view, and model logic.",
        "A local development setup (like XAMPP) where you can run PHP and MySQL together is needed — no advanced server config required.",
        "You don’t need to know MVC in advance — this course will teach you how the CodeIgniter MVC structure works from scratch.",
        "You won’t need any frameworks or libraries beyond CodeIgniter itself — this course focuses purely on building with the core tools.",
        "Just bring curiosity and a bit of consistency — we’ll build a complete working app together and explain every step along the way."
      ],
      "description": "Build a Real-World Employee Management System with CodeIgniter\nHey there! If you’ve been learning PHP and want to take the next big step into real-world development — this course is made for you.\nIn this hands-on course, you’ll learn how to build a complete Employee Management System using CodeIgniter, one of the most beginner-friendly PHP frameworks out there. We’ll walk through every step — from setting up your environment to structuring your app with models, views, and controllers (MVC).\nYou won’t just watch code — you’ll build a working CRUD app from scratch.\n--\nLearn the CodeIgniter Framework Through Doing\nInstead of diving into abstract concepts, this course focuses on creating a functional app that mirrors how real backends are structured. Whether you’re learning for work, freelance, or your own projects — this app will show you exactly how to:\nSet up CodeIgniter and connect it to a MySQL database\nCreate routes, controllers, and views to handle navigation and logic\nWork with models to query and manipulate employee data\nBuild pages for adding, editing, listing, and deleting employees\nUse Bootstrap to design a clean and responsive UI\nValidate form inputs and display helpful feedback messages\nHandle real user actions like update, delete, and form submissions\nKeep your code modular, clean, and organized the MVC way\n--\nWhat You’ll Have by the End\nBy the end of the course, you’ll have a fully working web application — a professional-looking Employee Management System that’s ready for your portfolio, internship, or next freelance gig.\nMore importantly, you’ll know how CodeIgniter works, how to build structured backend logic, and how to confidently build your own custom PHP apps.\n--\nNo OOP required. No frameworks besides CodeIgniter. Just real backend learning — one line at a time.\nEnroll now, and let’s build your first real PHP web app together — the right way.",
      "target_audience": [
        "PHP beginners who want to learn how to build real web applications using CodeIgniter and understand how MVC works step by step.",
        "Students and self-taught developers who want to create their first CRUD app and explore backend logic using a lightweight PHP framework.",
        "Developers looking to move beyond raw PHP and learn how to organize code properly using models, views, and controllers in CodeIgniter.",
        "Anyone who wants to build a functional Employee Management System in PHP without jumping straight into complex frameworks.",
        "Freelancers who want to build small dashboards or admin tools for clients using a clean, simple PHP framework like CodeIgniter.",
        "Backend beginners who’ve heard of MVC but never actually built a project with it — this course will help them grasp the concept practically.",
        "Web development students looking to add a real project to their portfolio and understand how PHP connects with MySQL in a structured way.",
        "Developers preparing for interviews or internships who want to strengthen their understanding of backend workflows and PHP CRUD logic."
      ]
    },
    {
      "title": "Building Web Apps Using Flask and Neo4j",
      "url": "https://www.udemy.com/course/building-web-apps-using-flask-and-neo4j/",
      "bio": "A Guide for Python Developers",
      "objectives": [
        "Once you have completed this training course, you will have learned how to incorporate Neo4j into your own web applications",
        "Learn how to incorporate graph databases into your web applications"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Course Overview",
          "About The Author"
        ],
        "Neo4j": [
          "Installing Neo4j",
          "Walkthrough",
          "Cypher"
        ],
        "Project Setup": [
          "Virtual Environments",
          "PyCharm"
        ],
        "Flask": [
          "Hello World",
          "Conventional Flask Structure",
          "Templates",
          "Views"
        ],
        "Py2neo": [
          "Creating Nodes And Relationships",
          "Merging Nodes",
          "Merging Relationships",
          "Cypher",
          "Parameterized Cypher",
          "Graph Versus Tabular Cypher"
        ],
        "Basic Functionality": [
          "Constraints And Indexes",
          "Registering A User - Part 1",
          "Registering A User - Part 2",
          "Logging In As A User",
          "Adding A Post - Part 1",
          "Adding A Post - Part 2",
          "Displaying Posts - Part 1",
          "Displaying Posts - Part 2",
          "Liking A Post - Part 1",
          "Liking A Post - Part 2",
          "Logging Out A User"
        ],
        "Social Recommendations": [
          "The Profile Page",
          "Recommending Similar Users",
          "Commonalities Between Two Users"
        ],
        "Scaling Considerations": [
          "Time Tree In Neo4j - Part 1",
          "Time Tree In Neo4j - Part 2"
        ],
        "Deploying": [
          "Deploying To Heroku - Part 1",
          "Deploying To Heroku - Part 2"
        ],
        "Conclusion": [
          "Wrap-Up"
        ]
      },
      "requirements": [
        "PC or MAC",
        "Working files are included, allowing you to follow along with the author throughout the lessons"
      ],
      "description": "In this Building Web Apps Using Flask and Neo4j training course, expert author Nicole White will teach you how to incorporate graph databases into your web applications. This course is designed for the absolute beginner, meaning no previous experience with Flask or Neo4j is required.\nYou will start by learning how to install Neo4j and set up your project. From there, Nicole will teach you the basics of Neo4j, Flask, and Py2neo. She will then walk you through building a microblogging application from scratch, where you will learn how to register and login users, add posts, and display posts. This video tutorial also covers social recommendations, including recommending similar users and commonalities between two users. Finally, you will learn about scaling considerations and how to deploy your project to Heroku.\nOnce you have completed this computer based training course, you will have learned how to incorporate Neo4j into your own web applications. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "This course is designed for the absolute beginner, meaning no previous experience with Flask or Neo4j is required",
        "Web App Developers"
      ]
    },
    {
      "title": "Building REST APIs with Flask and Python in 2025",
      "url": "https://www.udemy.com/course/building-rest-apis-with-flask-and-python/",
      "bio": "Develop expert REST APIs using Python, Flask, Docker, Flask-Smorest, and Flask-SQLAlchemy for a professional touch",
      "objectives": [
        "Establish connections between web or mobile applications and databases and servers using REST APIs.",
        "Build robust and secure REST APIs that encompass authentication, deployments, and database migrations.",
        "Grasp the various layers of a web server and comprehend how web applications interact within this framework.",
        "Implement seamless user authentication with advanced functionalities, such as token refresh.",
        "Manage user log-outs effectively and protect against abuse in REST APIs by employing JWT blacklisting.",
        "Create high-quality REST APIs with guidance from experienced professionals.",
        "Enhance the performance of your REST APIs by utilizing task queues and background workers."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Exercise: Meet Your Classmates & Instructor",
          "Environment Setup",
          "How to get started with this Course?",
          "Installing Python on Mac",
          "Install Python on Windows"
        ],
        "Let's recap Python": [
          "Section Introduction",
          "Get the code for this section from here",
          "Variables",
          "Variables",
          "String formatting",
          "Getting user input",
          "Writing our first Python app",
          "Lists, tuples and sets in Python",
          "Lists, tuples, and set",
          "Booleans in Python",
          "Advanced Sets operation",
          "if statements",
          "The 'in' keyword in Python",
          "if statements with the 'in' keyword",
          "Loops in Python - for loop",
          "Loops in Python - while loop",
          "Flow control—loops and ifs",
          "List comprehensions in Python",
          "Dictionaries",
          "Dictionary comprehensions",
          "Destructuring in Python",
          "Dictionaries called students",
          "Functions in Python",
          "Function arguments",
          "Default argument and keyword arguments",
          "Functions returning values",
          "Functions",
          "Lambda functions in Python",
          "Unpacking arguments and keyword arguments",
          "Object-Oriented Programming in Python",
          "Magic methods: __str__ and __repr__",
          "Classes and objects",
          "@classmethod and @staticmethod",
          "@classmethod and @staticmethod",
          "Class inheritance",
          "Class composition",
          "Type hinting in Python3.5+",
          "Modules and Imports in Python",
          "Absolute and Relative imports in Python",
          "Exceptions in Python",
          "Custom exception classes",
          "First-class functions",
          "Simple decorator in Python",
          "The @ syntax for decorator",
          "Mutability in Python",
          "Mutable default parameters (and why they're a bad idea)",
          "Python Basics - Quiz"
        ],
        "Advanced Python": [
          "Keep in Mind",
          "Python's map() Function Explained",
          "Python's filter() Function Explained"
        ],
        "Let's build our first REST API": [
          "Summary of the project we intend to develop.",
          "Setting up the initial configuration for a Flask application",
          "Creating the first endpoint for your REST API in Flask",
          "What is JSON?",
          "Testing and interacting with your REST API",
          "Creating shops in your REST API",
          "Adding products to shops in your REST API",
          "Retrieving a specific shop and its products in your REST API",
          "Flask and REST API Basics"
        ],
        "Introduction to Docker": [
          "What are Docker containers and images?",
          "Download resources",
          "Running a Flask app in a Docker container",
          "Virtualization and Containerization Technology Quiz"
        ],
        "Leveraging Flask-Smorest for streamlined and efficient development": [
          "Adding dependencies and adding DB",
          "Adding new endpoints to our API",
          "Testing the new endpoints and fixing the errors",
          "Running the API in Docker with auto-reload and debug mode",
          "Using Blueprints and MethodViews for Shops in your API",
          "Using Blueprints and MethodViews for Products in your API",
          "Creating Marshmallow schemas for your API",
          "Implementing data validation using Marshmallow",
          "Enhancing responses with Flask-Smorest decorators",
          "Download Postman Collection",
          "Testing our APIs after integrating marshmallow",
          "Flask-Smorest and Marshmallow Basics"
        ],
        "Store data in a SQL database with SQLAlchemy": [
          "Note before going to next lecture",
          "Introduction to SQLAlchemy",
          "Get started and create ProductModel and ShopModel",
          "Creating one-to-many relationships with SQLAlchemy",
          "Setting up Flask-SQLAlchemy configuration for your Flask app",
          "Inserting data into a table using SQLAlchemy",
          "Finding models in the database by ID or returning a 404 if not found",
          "Updating models using SQLAlchemy",
          "Retrieving a list of all models",
          "Deleting models and related models with cascading using SQLAlchemy",
          "Testing the changes we have made in this section",
          "SQLAlchemy Basics"
        ],
        "User authentication with Flask-JWT-Extended": [
          "What is a JWT?",
          "Configuring Flask-JWT-Extended for integration with your Flask app",
          "Implementing the User model and schema in our Flask app",
          "Adding a registration endpoint to your REST API",
          "Integrating a login endpoint into the REST API",
          "Securing endpoints by mandating JWT authentication",
          "Implementing a logout feature in your REST API",
          "Token refreshing with Flask-JWT-Extended",
          "Refreshing tokens using Flask-JWT-Extended in your application",
          "Testing the changes we have made with JWT so far",
          "JWT and Flask-JWT-Extended Basics"
        ],
        "Git Crash Course": [
          "Introduction to git and basic commands",
          "Understanding branches and git branch commands",
          "Understanding remote repositories and its commands",
          "Advanced Git commands",
          "Git rebase vs Git merge vs Git Squash",
          "How to resolve merge conflicts?",
          "What is .gitignore and why do we need it?",
          "Git Submodules and few tips related to git",
          "Initialising git in our REST API",
          "Test your Git knowledge"
        ],
        "Building our frontend to integrate our REST API (Optional)": [
          "Downloading front-end code and running",
          "Extracting the front-end code and running"
        ]
      },
      "requirements": [
        "Prior programming experience in any language will be beneficial, but the course also includes a comprehensive Python refresher.",
        "All the necessary software for the course is provided at no cost to participants.",
        "If you are a complete beginner, you might consider starting with a beginner Python course before enrolling in this one to ensure a smooth transition."
      ],
      "description": "Welcome to the top-rated Udemy course on REST API development! I'm Pratap, a software engineer, and I'm here to help you master web and REST API development using Python, Flask, and Docker.\n\n\nIn this comprehensive course, we will cover everything you need to know, starting with a Python refresher that will take you from the basics to advanced features. We'll then dive into creating simple, intermediate, and advanced REST APIs, complete with authentication, database handling, and more, using Flask and popular extensions like Flask-Smorest, Flask-JWT-Extended, and Flask-SQLAlchemy.\n\n\nThroughout the course, we'll explore essential technologies such as Git, Postman and database, ensuring you have all the tools you need to build production-ready REST APIs. Additionally, we'll cover Docker to simplify the process of running and deploying your APIs.\n\n\nBy the end of this course, you'll have the skills to:\nCreate resource-based, production-ready REST APIs using Python, Flask, and popular extensions.\nHandle secure user registration and authentication with Flask.\nEfficiently store resources to a database using SQLAlchemy and Flask-SQLAlchemy.\nUnderstand the complexities of deploying Flask REST APIs.\n\n\nBut first, let's understand what a REST API is.\nIt's an application that accepts data from clients and returns data back. For instance, it can handle user authentication by accepting a username and password and checking their validity in the database. REST APIs are commonly used by web apps and mobile apps as clients.\n\n\nWith the knowledge you'll gain in this course, you'll be able to develop any REST API you need for your own projects.\n\n\nI take great pride in offering exceptional support and feedback to every student. I'll be available to guide you and answer any questions you may have.\n\n\nDon't wait any longer; take the first step toward mastering REST API development. I look forward to seeing you inside the course!",
      "target_audience": [
        "Individuals interested in enhancing the functionalities of web and mobile applications through server-side technologies.",
        "Software developers seeking to broaden their expertise by mastering the development of professional-grade REST APIs.",
        "Aspirants aiming to learn Python with a focus on building web services."
      ]
    },
    {
      "title": "Architecting Reactive Angular Applications with Redux & NgRx",
      "url": "https://www.udemy.com/course/architecting-reactive-angular-applications-with-redux-ngrx/",
      "bio": "Manage state in Angular to eliminate problems when writing reactive apps by combining the power of Redux, RxJS, and NgRx",
      "objectives": [
        "Explore the architectural Redux pattern that drives the NgRx implementation",
        "Leverage the NgRx store to manage the state of your application",
        "Debug your application like a pro",
        "Handle side effects with the NgRx/effects library",
        "Reduce boilerplate code by using NgRx/entity and its readymade functions",
        "Customize the router state with NgRx/router-store library",
        "Increase your development speed with schematics",
        "Scaffold the artifacts you need for NgRx"
      ],
      "course_content": {
        "Getting Started with Redux": [
          "The Course Overview",
          "Introduction to State Management",
          "Immutability",
          "Unidirectional Data Flow",
          "Core Concepts",
          "Implementing Redux",
          "Test Your Knowledge"
        ],
        "RxJS Fundamentals": [
          "Introduction to Observables",
          "Subscribe/Unsubscribe to Observables",
          "Create Your Own Observables",
          "Use Operators to Control Observable Output and Behavior",
          "Use Advanced Operators",
          "Add Error Handling to Your Observables",
          "Subjects"
        ],
        "NgRx Store": [
          "Getting Started",
          "Dispatching Actions",
          "Action Creators and Selectors",
          "State in Feature Modules",
          "Organizing Your Code"
        ],
        "NgRx Debugging": [
          "Installation and Setup",
          "Debugging Features",
          "Advanced Configuration"
        ],
        "Routing and Router State": [
          "Installation and Setup",
          "What’s in a Router State?",
          "Writing Your Own Custom Serializer"
        ],
        "Handling Side Effects": [
          "Installation and Setup",
          "Advanced Effect Scenario with HTTP",
          "Error-Handling in an HTTP Effect and Best Practices"
        ],
        "Leverage the Entity Library to Reduce Boilerplate Code": [
          "Set Up and Introduce the Adapter",
          "Understanding Selectors",
          "Comparison between Boilerplate and Entity"
        ],
        "Schematics": [
          "Setting It Up and Taking It for a Spin",
          "Using Schematics for Actions, Reducers, and Containers",
          "Using Schematics for Effects, Entity, and Features",
          "Test Your Knowledge"
        ],
        "Build Your Own NgRx": [
          "Recap on Redux and Introducing Subjects",
          "Building Redux with RxJS",
          "Adding Side Effects",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Some basic knowledge of web development and Angular is assumed."
      ],
      "description": "Have you ever thought of combining the power of Redux and reactive JavaScript to build a responsive and reactive application? Well then, this course is your ideal choice to manage state in Angular to write reactive apps.\nThis course will help you build Angular applications by incorporating reactive programming principles and making it easier to develop, test, and debug your applications.\nThroughout the nine sections, the extensive examples will help you implement state management with Redux, create observables, and handle errors with RxJS. You will first explore NgRx to set up the state, add a store, debug its state, and customize the saved router state. After that, you will learn to handle side effects and add support to your app.\nYou’ll learn to reduce the boilerplate code and use blueprints for scaffolding out features. This course will not only empower you to use Redux and NgRx to the fullest but will also help you build your own micro implementation of NgRx for a database-backed app.\nAbout the Author\nChristoffer Noring is a software developer with more than 10 years of experience. He has successfully delivered software for different industries, ranging from telecom to aviation. Throughout his career, he has worked on everything, right from databases to frontends. He is very passionate about community and sharing knowledge, which is why he frequently speaks on topics ranging from TDD, React, and NativeScript to Angular. He also writes books and blogs frequently.\nHe holds the title of Google Developer Expert in web technologies and AngularJS/Angular. He is also a Telerik Developer Expert in the mobile framework NativeScript. Christoffer currently works for McKinsey as a fullstack developer. He is the author and maintainer of the book RxJS Ultimate, which aims to be a free resource to help the community.",
      "target_audience": [
        "If you’re a web developer and want to learn more about the Angular application architecture using state management, Redux, RxJS, and NgRx to write robust web apps, then this is the course you need! This course is also for JavaScript developers looking for web application architecture."
      ]
    },
    {
      "title": "Mastering HTML5 and CSS3 (Part 2 - Intermediate Level)",
      "url": "https://www.udemy.com/course/mastering-html5-and-css3-part-2-intermediate-level/",
      "bio": "Upgrade your HTML & CSS conception and start building awesome templates",
      "objectives": [
        "Writing semantic and well-structured HTML documents",
        "Working with colors and images in HTML & CSS",
        "Advanced topics in using text and styling fonts in HTML",
        "Tips & tricks in working with HTML & CSS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Day 1: Organize your content": [
          "Tables in HTML (Part 1)",
          "Tables in HTML (Part 2)",
          "HTML Lists",
          "Create Menu Using Lists"
        ],
        "Day 2": [
          "Iframes in HTML",
          "Gradients (Part 1)",
          "Gradients (Part 2)",
          "Image Map"
        ],
        "Day 3: Effects & Display Behavior in HTML": [
          "Display in CSS",
          "Flexbox Layout",
          "Make attractive texts using Text Shadow",
          "Beautiful boxes using Box Shadow"
        ],
        "Day 4: How to use fonts in HTML": [
          "Fonts - Part 1 : Adding font to your HTML resources",
          "Fonts - Part 2 : Using font properties",
          "Fonts - Part 3 : Font shorthand",
          "Fonts - Part 4 : Using Google Fonts and Google Icons"
        ],
        "Day 5: How to work with texts in HTML": [
          "Text Alignment",
          "Text Decoration",
          "Text Spacing"
        ],
        "Day 6: Well formed HTML documents using \"Semantic Elements\"": [
          "Semantic Elements - Introduction",
          "Semantic Elements - Basic Layout Elements: header, footer and aside",
          "Semantic Elements- Advanced Layout Elements : section, article and main",
          "Semantic Elements -nav and figure"
        ],
        "Day 7: Meta data in HTML": [
          "Head Element",
          "Title Element",
          "Favicon",
          "Meta Element",
          "Base Element"
        ],
        "Last Day": [
          "What's Next?"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML & CSS",
        "Any computer : Windows. Linux or Mac",
        "A web browser and a code editor"
      ],
      "description": "Do you have an idea to create a stunning web site template, but you don't have enough knowledge for each section?\n... Or do you want to become a professional front-end developer and you already have a basic knowledge of HTML & CSS?\n... Or you just like to know how amazing website templates are created?\n\n\nSo, this course is just created for you. you will learn intermediate topics in HTML & CSS. Soon, after finishing this course you can develop any templates you like (till the concepts that are mentioned in this course + the topics in basic level).\n\n\nThis course will cover intermediate topics about HTML & CSS. In order to upgrade your skills in HTML and CSS you will learn and work with the following concepts:\nTables & Lists in HTML\nCreating awesome menus for your web pages\nStyling your texts & fonts\nWorking with advanced color topics\nUsing Iframes and Image map\nFlexbox layout to design awesome templates working in any devices\nFundamentals of  HTML semantic\n...\n\n\nSo, if you are looking for a short course that covers the main topics in front-end developing, just stop your searches and start this course here.\n\n\nWhat is included in this course:\nDownloadable design assets from the start to the end for each day\nHD quality videos , easy to find and reference\nStep by step guide for each topic in HTML  & CSS\nIf you are not familiar with the basics of HTML & CSS you can watch my other course in this topic & come back here to learn more.\nIf you already know what HTML is and how you can create a simple template, don't hesitate and join my course. Hope you enjoy and learn!!",
      "target_audience": [
        "Any one who wants to learn how to create an awesome, stunning and professional website",
        "Any one who is looking for a job as front end developer",
        "Users with some HTML & CSS experience to go to the next level"
      ]
    },
    {
      "title": "AngularJS for the Real World - Learn by creating a WebApp",
      "url": "https://www.udemy.com/course/angularjs-for-the-real-world-learn-to-create-a-webapp/",
      "bio": "The Angular 1.x course that will teach you how to build real time applications with AngularJS and Firebase.",
      "objectives": [
        "Develop a Real Time MV* Web Application with AngularJS and Firebase",
        "Build an AngularJS SPA (Single Page Application)",
        "Get familiar with concepts like 2-Way DataBinding, Services, Views, Routing, Directives and much more..",
        "Learn about the Angular built-in services, focusing on the $http service that will help you handling XHR",
        "Learn how to secure your application by building Authentication and Authorization functionalities",
        "Learn how to implement an AngularJS API in your application",
        "Master all the built-in AngularJS directives such as ng-repeat, ng-if, ng-switch, ng-show & ng-hide, ng-model, ng-controller and so on",
        "Write better code by implementing AngularJS best practices"
      ],
      "course_content": {
        "Course Overview": [
          "Course Outline",
          "About your Instructor!",
          "Why AngularJS?",
          "MVW: Model - View - Whatever",
          "Environment Setup"
        ],
        "AngularJS - Let's see what this is all about": [
          "Your First AngularJS Application",
          "Controllers in AngularJS",
          "Application Data Model: The $scope service",
          "Best Practice: ControllerAs Syntax",
          "Services, Factories and Providers",
          "Best Practice: Avoiding Globals when declaring a Module",
          "AngularJS Basics"
        ],
        "Routing and Templating in AngularJS": [
          "Introduction to Routing: ng-route and ng-view",
          "Enabling the HTML5 Mode for friendly URLs",
          "HTML5 Mode and Subfolders",
          "Route Controllers and the $routeParams service",
          "NgInclude: Templating in Angular",
          "AngularJS Routing and templating"
        ],
        "It's time to build our AngularJS Event App": [
          "NgForm: How to quickly \"Angularize\" a bootstrap form",
          "The NgSubmit Directive (and a quick look at angular.copy)",
          "Refactoring and Annotation: Moving our code from a controller to a Factory",
          "Retrieving Data from a Service"
        ],
        "Loops in AngularJS: The ng-repeat directive": [
          "NgRepeat: Loop on a Dataset and display the records",
          "Repeat multiple DOM elements with ng-repeat-start and ng-repeat-end",
          "Deal with duplicates in ng-repeat: track by explained"
        ],
        "AngularJS Form Controls": [
          "Ng-Options and grouping",
          "NgSelect: How to set a Default option by using the track by property",
          "Radio Buttons: The ng-value directive",
          "ng-true-value, ng-false-value and ng-click",
          "Dynamically display content: the ng-if directive",
          "Exploring the input 'date' directive"
        ],
        "AngularJS Form Validations": [
          "Introduction to Validation",
          "Tracking a Form validity",
          "4 Useful directives: ng-show/ng-hide and ng-minlength/ng-maxlength",
          "The ngPattern Directive: RegExp driven validation",
          "Prevent invalid form data from being submitted: 2 different methods",
          "Cosmetic Changes: Angular CSS for Validations & ngClass",
          "ng-messages - Improved Validation message management"
        ],
        "AngularJS Filters: Let's make our events searchable!": [
          "Introduction & App improvements",
          "Basic filtering in Angular",
          "Strict search and OrderBy",
          "Using filters inside controllers (and services, and directives)",
          "The $filter service",
          "Implementing Custom Filters in AngularJS"
        ],
        "Services: Interacting with REST APIs and Promises": [
          "Introduction",
          "$http and AngularJS Promises: Fetching our events by using a GET request",
          "Using the \"resolve\" property to initialize data",
          "The $q Service: Process promises and chaining"
        ],
        "BONUS: NgMock: How to simulate backend functionalities in Angular": [
          "NgMock: Introduction",
          "NgMock in Action"
        ]
      },
      "requirements": [
        "Beginner/Intermediate in HTML and CSS",
        "Basic Javascript knowledge is preferred"
      ],
      "description": "In this Course you'll learn how to build an Angular 1.x Real Time Application using Firebase and AngularJS while leveraging great Angular Development best practices.\n\n\n\nAdded a new Section (30+ mins of brand new content): Authentication and Authorization with AngularJS and Firebase.\n\nAngularJS is famous Javascript framework developed by Google and an increasing number of companies are currently looking for expert AngularJS Developers. Mastering AngularJS is a great opportunity that will help you getting a new and better job in the web development industry.\nReviews\n\n\"The best AngularJS course I have seen\", \"Great course, with clear explanation, easy to follow and a lot of content\", \"Teaching and Learning Angular at it's best\", \"This course is simply awesome ... , after taking this course, I became aware of what I'm doing and what I'm coding\".\n\nThis AngularJS course will teach you how this framework can dramatically improve your efficiency, reduce your coding time and deliver your next project as a Single Page Application (SPA).\n\nYou'll learn how to create AngularJS directives, controllers, modules, how 2-way data binding works and, more important, how to build an AngularJS Web Application from scratch.\nYou'll learn some of the best practices and how to deal with common mistakes that a developer can face when dealing with AngularJS projects and you'll dig deeper into the built-in components of this technology.\nAngularJS is a Javascript framework used to create Single Page Applications (SPAs) with a declarative approach. This means that Angular is completely extensible: you can define, for example, your own DSL (Domain Specific Language) and services.\nThe framework is developed and maintained by Google. At the minute it has more then 1.3K contributors on GitHub and is being used in more than 243.000 live websites (Youtube, IndieGoGo, Aerlingus, Virgin America, Forbes are only a few) and is backed by a wide community (more than 122k questions only on stackoverflow).\nThere are plenty between documentation, tutorials, examples and fiddles in additions to discussion groups, specialized sites and forums where you can find inspiration or solutions to common problems.\nAudience\nIf you are new to AngularJS, no worries. I will drive you through the main topics and will not assume that you are already familiar with the framework.\nOn the other hand, If you already know AngularJS, you know that it can be as sweet as a rainbow unicorn or as bitter as your worst nightmare: this is why we will teach you a few best practices as well as examples of patterns and anti-patterns all over the course, so that you'll learn a more efficient and clear way of coding your NG apps.\nContent and Overview\nIn this course you'll find 7+ hours of video content; source code is provided for each lesson and in general there will be 2 downloadable attachments per lesson: the start and final source code; this will let you double check that your changes are correct as long as you proceed throughout each chapter. Links to external resources are also provided where useful. Last but not least, I will support you with each question you might have.\nThe course is divided in 16 sections, each one consisting in several videos (more than 63in total) where we will cover the different components of the AngularJS framework.\nBy the end of course, you will:\nLearn how to setup AngularJS and how its architecture is built; (Installation, MVW approach)\nAcquire familiarity with the main AngularJS components: modules, controllers, routing, 2 way data binding, dependency injection, prototypical inheritance, scopes, filter, directives, services and templates;\nWe will talk a lot about forms, user data validation and filtering. You will learn how to implement a robust form with validation, thanks to Angular Forms and its built-in validator. In other words you will learn how to improve the user experience of your application;\nLearn how to use $http to query a webserver and handle promises in a response;\nBe able to build a full Backend Mock to test your application, by using the Angular $HttpBackend service in the NgMock module;.\nWe will dedicate some lessons to custom directives: first a simple implementation then we will unveil the secrets of the \"link function\", how to isolate the scope and how to make directives reusable with any application.\nTransform your App into a Real Time application, and learn how to use Firebase and Angular to make updated content available in Real Time on any device.\nLearn how to secure your application by building Authentication and Authorisation functionalities.\n\n\nWhat you will obtain at the end of the course\nAt the end of the course you will have a deep understanding of the basic concepts of AngularJS, and you will be ready to start your next project by using this great framework.",
      "target_audience": [
        "This AngularJS (1.x) Course is meant for Web Developers looking to build a solid knowledge on AngularJS",
        "Beginners will find a solid AngularJS foundation enriched with real world examples and best practices",
        "Developers already familiar to AngularJS but looking to improve their skillset",
        "People who are not yet familiar with HTML, CSS, Javascript should take this course after acquiring at least a basic knowledge on the topics"
      ]
    },
    {
      "title": "ChatGPT & React: Introduction to the AI Chatbot Revolution",
      "url": "https://www.udemy.com/course/chatgpt-react-introduction-to-the-ai-chatbot-revolution/",
      "bio": "Integrating AI & Web Development: Master ChatGPT, React.js, API Integration, and UI Design",
      "objectives": [
        "Integrating ChatGPT with React JS: Embedding OpenAI's ChatGPT into React JS applications for AI-driven conversations.",
        "UI Design in React JS: Mastering user interface design for chat applications, focusing on aesthetics and user interaction.",
        "API Handling and Backend Integration: Connecting the React JS frontend with a Node JS backend and integrating APIs for data exchange.",
        "Error Management in API Integration: Learning to handle and troubleshoot common API integration errors.",
        "Responsive Design Techniques: Creating designs that are compatible across various devices and screen sizes.",
        "State Management in React JS: Managing application state efficiently, particularly in real-time chat applications.",
        "Customizing ChatGPT Parameters: Tailoring ChatGPT responses and behavior through parameter customization.",
        "Implementing Chat History Features: Storing and displaying chat history within the application.",
        "Security Best Practices: Ensuring application security, focusing on safe API usage and data protection.",
        "Performance Optimization: Optimizing application performance for a smoother user experience.",
        "Real-World Application Deployment: Deploying the React JS and ChatGPT application to a live server.",
        "Testing and Debugging: Ensuring application reliability and efficiency through rigorous testing and debugging.",
        "Personalizing Chatbot Responses: Enhancing user engagement by personalizing the chatbot's personality and responses.",
        "Advanced React JS Features: Exploring advanced features and hooks in React JS.",
        "Chatbot Analytics: Implementing and analyzing chatbot analytics for ongoing performance and user experience improvement."
      ],
      "course_content": {},
      "requirements": [
        "Basic Programming Knowledge: While not mandatory, having a fundamental understanding of programming concepts will be helpful. Familiarity with JavaScript, in particular, can ease the learning process.",
        "Web Development Basics: A basic understanding of HTML and CSS can be advantageous for understanding web application structure and styling.",
        "React JS Fundamentals: Some familiarity with React JS will be beneficial, but the course will also cover introductory React concepts.",
        "Text Editor or Integrated Development Environment (IDE): Learners should have access to a text editor or IDE for writing code. Popular choices include Visual Studio Code, Sublime Text, or others.",
        "Node JS: Understanding the basics of Node JS can be useful, as the course covers backend integration using Node JS. However, detailed Node JS expertise is not required.",
        "API Usage: While not mandatory, having some prior knowledge of making API requests and handling responses can be helpful."
      ],
      "description": "This comprehensive course, designed for budding developers and tech enthusiasts, delves deep into the fascinating world of AI chatbot development using two powerful tools: React.js and OpenAI's ChatGPT. With a focus on practical, hands-on learning, the course guides you through every step of creating a dynamic, AI-powered chatbot application.\nSpanning over several detailed modules, the course begins with a solid foundation in React.js, a popular JavaScript library for building user interfaces. You'll learn to set up your development environment, understand the basics of React components, state management, and the overall architecture of a React application. This knowledge is crucial as you start to build the layout and interface of your chatbot.\nThe heart of the course lies in the integration of ChatGPT, OpenAI's advanced AI language model. You'll explore how to seamlessly incorporate ChatGPT into your React application, creating a responsive, intelligent chatbot. The course covers essential topics like API integration, handling user inputs, and generating AI responses, ensuring your chatbot is both functional and engaging.\nAPI integration is a key focus, as you'll learn to connect your React app with ChatGPT through a backend, using Node.js and Express.js. This section includes practical exercises on setting up servers, managing API requests and responses, and ensuring smooth communication between your frontend and the AI model.\nAnother significant aspect of the course is UI/UX design. You'll learn to create an intuitive, user-friendly interface for your chatbot, ensuring a seamless user experience. The course covers advanced UI topics such as styling, layout design, and incorporating interactive elements, making your chatbot not only smart but also visually appealing.\nBy the end of this course, you'll have a fully functional AI chatbot, and more importantly, a deep understanding of integrating AI technologies with web development. Whether you're a beginner looking to enter the world of AI and React, or a developer seeking to expand your skillset, this course offers valuable knowledge and hands-on experience in the cutting-edge field of AI chatbots.",
      "target_audience": [
        "Web Developers: Web developers who want to expand their skill set and knowledge by incorporating AI-driven chatbot functionality into their web applications. This course provides a practical pathway to enhancing web development skills.",
        "React JS Enthusiasts: Individuals with an interest in React JS who want to explore advanced applications of the framework, particularly in the context of creating chatbots. This course covers both React fundamentals and advanced integration with AI.",
        "Aspiring AI Developers: Those looking to enter the field of AI and natural language processing (NLP). This course offers a practical introduction to AI integration, making it accessible for beginners in this domain.",
        "Entrepreneurs and Product Managers: Business professionals and product managers who aim to build chatbot applications for their companies or projects. Understanding the development process is essential for effective project management.",
        "Students and Self-Learners: Students pursuing computer science or related fields and self-learners interested in gaining hands-on experience in web development and AI integration. This course serves as a valuable educational resource.",
        "AI Enthusiasts: Individuals fascinated by AI technologies and chatbots who want to explore practical applications. This course provides insights into AI model integration in real-world scenarios.",
        "Career Switchers: Professionals looking to transition into the field of web development or AI. This course offers a structured approach to acquiring relevant skills.",
        "Tech Enthusiasts: Anyone eager to learn app development from scratch and interested in exploring the capabilities of AI-powered chatbots."
      ]
    },
    {
      "title": "Vuejs and Laravel Integration - Small Project Included",
      "url": "https://www.udemy.com/course/vue-and-laravel-to-do-app-restful-api-project/",
      "bio": "Learn to use Vuejs with Laravel",
      "objectives": [
        "Students will learn the CRUD with VUE and Laravel"
      ],
      "course_content": {},
      "requirements": [
        "Laravel"
      ],
      "description": "Vue.js is a JavaScript framework that allows us developers to quickly create really cool user interfaces. Vue comes out of the box in Laravel and they really make a great combo. I think once you try these two technologies you will fall in love with them On this course you will learn to use Vue.js with Laravel by building a cool restful api todo app.",
      "target_audience": [
        "Any student wanting to learn how to use Vue with laravel"
      ]
    },
    {
      "title": "Introduction to State Machines with XState and React",
      "url": "https://www.udemy.com/course/introduction-to-state-machines-with-xstate-and-react/",
      "bio": "Learn how to build complex web applications and manage state with finite State Machines using Javascript and React",
      "objectives": [
        "Building State Machines with Javascript and Typescript",
        "Better state management in React applications",
        "Describing complex business logic in a simple way",
        "Building less error-prone web applications"
      ],
      "course_content": {
        "Curriculum and prerequisites": [
          "Curriculum and prerequisites",
          "Source code and presentation slides"
        ],
        "Introduction to State Machines": [
          "Introduction to State Machines",
          "State machines basics"
        ],
        "States, events and transitions": [
          "States, events and transitions",
          "Creating water machine and visualizing it with XState Viz",
          "Connecting water machine to React application",
          "States and events"
        ],
        "Actions": [
          "Actions",
          "Creating video player machine",
          "Actions basics"
        ],
        "Context": [
          "Context",
          "Connecting real video to our player machine",
          "Context basics"
        ],
        "Guards": [
          "Guards",
          "Guards basics"
        ],
        "More on transitions": [
          "More on transitions",
          "Adding autoplay option to our video player machine",
          "Multiple types of transitions"
        ],
        "Invoking services and parallel machines": [
          "Invoking services",
          "Create fetching machine",
          "Services basics"
        ],
        "Invoking machines": [
          "Invoking machines",
          "Invoking machines basics"
        ],
        "Delays": [
          "Delays",
          "Delays basics"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge",
        "Basic React knowledge",
        "No local setup required"
      ],
      "description": "This course is an introduction to finite state machines built with Javascript. State machines can describe complex applications straightforwardly, which makes them intuitive to work with and less error-prone. State machines can be easily integrated with React, which allows us to take a whole new approach for state management in React applications.\n\nThis course shows some basic concepts about state machines and their usage with XState. Also, it contains multiple coding examples, which allow students to have a better understanding of this topic.\n\nAgenda:\nIntroduction to state machines\nStates, events, and transitions\nActions\nContext\nGuards\nMore on transition\nInvoking services\nInvoking machines\nDelays\nAlongside the presentations, we will also code some real-world examples, like:\nVideo player with autoplay option\nFetch machine for handling async requests\nSearch component with debounce",
      "target_audience": [
        "Beginner or Intermediate Javascript and React developers curious about the form of designing complex applications",
        "Web developers interested in cutting edge technology",
        "Anyone who would like to start their journey with state machines",
        "Anyone who would like to improve their React skills"
      ]
    },
    {
      "title": "Build REST API using Python, Flask and Postman",
      "url": "https://www.udemy.com/course/build-rest-api-using-python-flask-and-postman/",
      "bio": "Learn the concepts of API and build REST API web app with Python Flask and SQL Alchemy. Test API using Postman.",
      "objectives": [
        "Learn the fundamental concepts of microservices and API",
        "Learn how to use request module",
        "Learn how to build rest API using flask, sqlalchemy. marshmallow and postman",
        "Learn to test API using Postman",
        "Learn to perform CRUD operations: Create, Read, Update and Delete",
        "Learn to build different HTTP methods- Get, Post, Put, Patch and Delete",
        "Learn to build web app using Python flask",
        "Learn multiple concepts like routes, endpoints, http verbs, status code and much more"
      ],
      "course_content": {
        "Introduction to API": [
          "Introduction",
          "What is API? How it works?",
          "Different HTTP Methods",
          "Quiz 1"
        ],
        "Request Module": [
          "Request Module: Installing Request and exploring different functions",
          "Request Module: Exploring different HTTP methods"
        ],
        "Developing simple RESTful APIs using Flask, Jsonify and request (Method 1)": [
          "Setting up a virtual environment",
          "Resources",
          "Understanding routes and endpoints",
          "Rendering html",
          "Query String",
          "Creating Get request 1",
          "Creating GET request 2",
          "Creating GET request 3",
          "Testing different GET methods using Postman",
          "Creating POST request",
          "Creating PUT request",
          "Creating PATCH request",
          "Creating DELETE request"
        ],
        "Developing REST APIs using Flask SQLALCHEMY and Postman": [
          "Setting up database using flask Sqlalchemy and marshmallow",
          "Flask SQLALCHEMY: Creating GET request",
          "Flask SQLALCHEMY: Creating POST request",
          "Flask SQLALCHEMY: Creating DELETE request",
          "Flask SQLALCHEMY: Creating PUT request"
        ],
        "Flask Restful": [
          "Creating Hello world api",
          "Adding some more options in url",
          "Creating GET request",
          "Testing API using Postman"
        ]
      },
      "requirements": [
        "Basic understanding of python",
        "Any Python IDE"
      ],
      "description": "Software is everywhere. We interact with it in our daily life activities knowingly or unknowingly. Each time when you use an app like Instagram, send an instant message, or check the stock prices on your phone, you're using an API. The world still needs more software to make our life easier. But creating great software is hard for everyone and yet developers need to master more than one skill.\nThis problem can be solved by API (Application Program Interface). It is a software-to-software interface that enables two applications to exchange data among each other. Just like any buttons on the remote does have a unique function. It is true almost all applications using API to interact with each other.\nUnderstanding how the API works to deploying API is the objective of this course. In this course you will learn fundamentals of the API like http requests, endpoints, routes, CRUD operations and much more in pragmatic style.\nIn this course you will learn how to create a simple API for different HTTP methods like get, post, put, patch and delete. Also learn how to efficiently store data to the database using flask SQL alchemy.\nTo test API's, you will also learn to use Postman. Postman is an API client that makes it easy for developers like you to create, share, test and document APIs.\n\n\nYou'll be able to...\nBuild rest API using flask and sqlalchemy\nTest API using Postman\nPerform CRUD operations: Create, Read, Update and Delete\nBuild different HTTP methods- Get, Post, Put, Patch and Delete\nThis course has short and concise lessons in pragmatic style to make you confident over REST api. Hope this course help you to learn something new and take your skill to the next level.\nAll the best. Keep Learning and keep moving ahead.",
      "target_audience": [
        "Developers curious about microservices and API",
        "Full stack developer, backend developer, frontend developer, data scientist, machine learning engineer"
      ]
    },
    {
      "title": "The Full Stack Web Development 2025: Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-web-development-2020-bootcamp/",
      "bio": "Become a full-stack Web developer confidently on HTML, CSS, Bootstrap, JS, jQuery, WordPress, PHP, MySQL, Python more",
      "objectives": [
        "Learn to know complete full-stack web development",
        "Apply ChatGPT Open AI skills for your advanced learning",
        "Create complete website, portfolio and blogs",
        "Master back-end development with PHP and MySQL",
        "Learn to create light-weight mobile friendly web-pages",
        "Apply Validations how real time its important for web forms",
        "Create stunning web pages",
        "Know how to create a complete Website with out coding knowledge",
        "Learn how to apply client-side validation scripting",
        "Be a Comfortable Front-end developer with Generative AI tools",
        "You will be a Full-Stack Web Application developer",
        "API development skills you will learn"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction to Getting Started",
          "Course Curriculum",
          "How to Get Pre-Requisites",
          "Getting Started On Windows or Linux",
          "How to ask Great Questions",
          "FAQ’s",
          "What is Source code",
          "What is ChatGPT Open AI - How to start",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "HTML 5": [
          "ChatGPT - How to Learn HTML using Open AI",
          "Introduction to HTML 5",
          "Your First Hello World! Webpage",
          "Overview of a Webpage",
          "Creating a Full HTML Webpage",
          "Header Tags",
          "Paragraph Tags",
          "Formatting Text",
          "Unordered Lists",
          "Ordered Lists",
          "Images",
          "Forms",
          "Form Actions",
          "Tables",
          "Links",
          "HTML Entities",
          "iFrames",
          "Integrate All Together",
          "Setting Up Hosting Environment",
          "Installing The free FTP Solution (FileZilla)",
          "Setting Up FTP(File Transfer Protocol)",
          "Upload Project to Hosting Server",
          "Reference links to HTML 5",
          "HTML5 Assessment Test",
          "Solution for HTML 5 Assessment Test",
          "06 HTML 5 Questions and Answers"
        ],
        "CSS 3": [
          "Introduction to CSS 3",
          "What is CSS",
          "Inline CSS",
          "Internal CSS",
          "Classes and IDs",
          "Divs",
          "Colors",
          "Floating",
          "Positioning",
          "Margins",
          "Padding",
          "Borders",
          "Fonts",
          "Styling Text",
          "Aligning Text",
          "Styling Links",
          "CSS Project - - Website",
          "External CSS",
          "References to CSS",
          "CSS Assessment Test",
          "Solution for CSS Assessment Test",
          "05 CSS Questions and Answers"
        ],
        "JavaScript": [
          "Introduction to JavaScript",
          "What is JavaScript",
          "Internal JavaScript",
          "Accessing Elements",
          "Responding to a Click",
          "Changing a Website Content",
          "Manipulating Styles with JavaScript",
          "Mini Challenge – Disappearing div tag",
          "If Statements",
          "JavaScript Mini Project Counter – Inc-dec",
          "While Loop Statements",
          "For Loop Statements",
          "Functions",
          "JavaScript Project – Stopwatch",
          "External JavaScript",
          "References for JavaScript",
          "JavaScript Assessment Test",
          "Solution for JavaScript Assessment Test",
          "06 JavaScript Questions and Answers"
        ],
        "jQuery": [
          "Introduction to jQuery",
          "What is jQuery",
          "How to Use jQuery in Webpage",
          "Detecting a Link",
          "Changing Website content",
          "Changing Website Styles",
          "Fading Content",
          "Animating Content",
          "Ajax",
          "Regular Expressions",
          "Mini Project - Form Validation",
          "What is jQuery UI",
          "Draggables & Resizables",
          "Droppables",
          "Accordion tools",
          "Sortables",
          "Menu",
          "jQuery Project – Code Player",
          "jQuery References",
          "jQuery Assessment Test",
          "Solution for jQuery Assessment Test",
          "04 jQuery Questions and Answers"
        ],
        "Bootstrap 4": [
          "Introduction to Bootstrap 4",
          "What is Bootstrap 4",
          "First Bootstrap Website",
          "The Grid System",
          "Introducing Navbars",
          "Forms",
          "Tables",
          "Bootstrap Components",
          "Cards",
          "Modals",
          "Popovers",
          "Tooltips",
          "ScrollSpy",
          "Project – App Landing Page",
          "The Free Bootstrap Themes",
          "References – Bootstrap 4",
          "Bootstrap 4 Assessment Test",
          "Solution for Bootstrap 4 Assessment Test",
          "05 Bootstrap 4 Questions and Answers"
        ],
        "WordPress": [
          "Introduction to WordPress",
          "What is WordPress",
          "The WordPress Installation",
          "The WordPress Configuration",
          "The WordPress Dashboard",
          "WordPress Themes",
          "Creating a Blog",
          "Creating an e-Commerce Site",
          "References – WordPress",
          "WordPress Challenge Assessment Test – Create a Site",
          "Solution for WordPress Assessment Test",
          "05 WordPress Questions and Answers"
        ],
        "PHP": [
          "Introduction to PHP",
          "What is PHP",
          "Installation for Apache, PHP & MySQL",
          "PHP Hello World Program",
          "Variables",
          "Arrays",
          "If Statements",
          "While Loop",
          "Do-While Loop",
          "For Loop",
          "For Each Loop",
          "PHP Methods",
          "GET Variables",
          "POST Variables",
          "Sending an Email With PHP",
          "Project – Contact Form",
          "References – PHP",
          "PHP Assessment Test",
          "Solution for PHP Assessment Test",
          "05 PHP Questions and Answers",
          "PHP variables creating",
          "PHP Methods creating"
        ],
        "MySQL": [
          "Introduction to MySQL",
          "What is MySQL",
          "Connecting to a Database",
          "Inserting Data rows",
          "Retrieving Data From A Database",
          "Update / Modifying Data rows",
          "Reading Multiple Data Rows through Loop",
          "Session Variables",
          "Cookies",
          "Storing Passwords Securely",
          "References – MySQL",
          "MySQL Assessment Test",
          "Solution for MySQL Assessment Test",
          "04 MySQL Questions and Answers"
        ],
        "APIs": [
          "Introduction to APIs",
          "What is an API",
          "The Google Maps API",
          "Geocoding with Google Maps",
          "Mini Challenge Place Auto Complete",
          "Facebook Login API"
        ]
      },
      "requirements": [
        "No pre-knowledge is required - enthusiasm is all you need!, you will be trained from scratch",
        "No paid software required - all websites will be created with Atom (which is free)",
        "A PC or Mac computer with access to the internet",
        "You will be know how to get free software packages in this sessions step by step"
      ],
      "description": "Step into the world of web development with \"The Full Stack Web Development 2025: Bootcamp.\" This immersive and comprehensive course is designed to transform you into a skilled full-stack developer, capable of building dynamic, scalable, and responsive web applications from start to finish.\n\n\nStarting from the basics, you’ll learn the building blocks of web development, including HTML5, CSS3, and JavaScript, to create visually appealing and interactive web pages. As you advance, you’ll dive into frontend frameworks like Scripting for crafting seamless user interfaces. On the backend, you’ll master server-side programming with PHP, and learn to work with databases such as MySQL for efficient data storage and retrieval.\n\n\nThis bootcamp emphasizes hands-on learning with real-world projects, including building APIs, deploying web applications to cloud platforms, and implementing best practices for security, performance, and scalability. You'll also gain experience with tools like xampp, code editors, and Agile workflows to prepare you for professional development environments.\n\n\nWhether you’re starting from scratch or enhancing your coding skills, this course offers everything you need to become a proficient full-stack developer. By the end, you’ll have the expertise and confidence to create modern web applications and unlock exciting career opportunities.\n\n\nJoin now and make 2025 the year you master full-stack web development!",
      "target_audience": [
        "Anyone who wants to learn to code",
        "Anyone who wants to build websites using Artificial Intelligence - AI",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to make a full-stack web developer applying ChatGPT",
        "Beginner Web developers curious about web development"
      ]
    },
    {
      "title": "Node.js Absolute Beginners Guide - Learn Node From Scratch",
      "url": "https://www.udemy.com/course/nodejs-absolute-beginners-guide/",
      "bio": "Learn Node.js To Build Web Sites and Host Them Live On Heroku Webhosting",
      "objectives": [
        "Node .js for absolute Beginners",
        "Introductory Node",
        "Download and Install Node js",
        "How To Create a Simple Node Web Server",
        "How To Show Different Web Pages",
        "How to Use Git Version Control",
        "How to use Github .com",
        "How to Host Your Site On Heroku For Free"
      ],
      "course_content": {
        "Install Tools": [
          "Course Introduction",
          "First Things First: How To Get Support Fast!",
          "Install Node",
          "Install Git bash and Sublime Text Editor"
        ],
        "Intro To Node.js": [
          "Run a Console Log Node Test",
          "Create Our First Basic Node.js Server",
          "Explaining the Node Server Code",
          "Exploring The URL Module Query String",
          "File System and Index Page",
          "Create Server Console Status Messages",
          "Show Different Web Pages",
          "Show an Index Page",
          "Remove HTML from the URL"
        ],
        "Create a Basic Website With Node and Bootstrap": [
          "Create a Bootstrap Navbar",
          "Create an About and Resume Page",
          "Add a Bootstrap Jumbotron"
        ],
        "Push Our Node Website To Heroku Webhosting": [
          "Generate SSH Keys",
          "Initialize Git and Github",
          "Install the Heroku Toolbelt CLI",
          "Create a Package JSON File",
          "Push Our Code To Heroku"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A Basic Understanding of Javascript is Useful But Not Required",
        "You need a computer with Internet access and a Web Browser"
      ],
      "description": "In this course I'll teach you how to create a Node server, run a basic HTML website off of that server, and push it up to a webhost to make your website live online.\nAimed at the absolute beginner, you don't need any experience with Node.js at all in order to take this course.  In fact, if you already know a little Node, this is NOT the course for you!\nIf you already know some Javascript, that's great; but you don't have to know Javascript to take this course, I'll walk you through everything you need to get started.\nYou'll learn:\n\n\nInstall Node\n\n\nInstall Git bash and Sublime Text Editor\n\n\nRun a Console Log Node Test\n\n\nCreate Our First Basic Node.js Server\n\n\nExplaining the Node Server Code\n\n\nExploring The URL Module Query String\n\n\nFile System and Index Page\n\n\nCreate Server Console Status Messages\n\n\nShow Different Web Pages\n\n\nShow an Index Page\n\n\nRemove HTML from the URL\n\n\nCreate a Bootstrap Navbar\n\n\nCreate an About and Resume Page\n\n\nAdd a Bootstrap Jumbotron\n\n\nGenerate SSH Keys\n\n\nInitialize Git and Github\n\n\nInstall the Heroku Toolbelt CLI\n\n\nCreate a Package JSON File\n\n\nPush Our Code To Heroku\n\n\nAnd More...\n\n\nJoin me today and let's learn Node!\n\n\n-John Elder\nCEO Codemy. com",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the to build Websites with Node js",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "Building web APIs with Rust (advanced)",
      "url": "https://www.udemy.com/course/advanced-rust-web-apis/",
      "bio": "Back-end web development for Rustaceans",
      "objectives": [
        "Implementing an authentication service in a Rocket REST API",
        "Managing database entities with complex fields and relationships using async Diesel and PostgreSQL",
        "Implementing a cache database with Redis",
        "Session handling and granular access management for different endpoints",
        "Testing API endpoints in an automated way",
        "Sending HTML emails with lettre and tera",
        "Writing CLI commands with clap"
      ],
      "course_content": {},
      "requirements": [
        "Good knowledge of Rust",
        "Familiarity with docker and docker-compose",
        "Understanding of HTTP, REST and JSON",
        "Experience with SQL and ORMs in general"
      ],
      "description": "Rust is a systems programming language which you can use to write applications with high performance. It is amazingly refreshing with a very helpful compiler who is your mentor since the very beginning.\nCargo is not only a package manager but also a build tool, a documentation generator and a lot more, making your every day managing Rust apps really easy.\nIt is no wonder that for these reasons, plus many more, Rust was voted as StackOverflow’s most loved and desired programming language, eight years in a row.\n\n\nYou have already spent a good amount of time developing web applications and you have a very good understanding of Rust.\nYou are beyond the point of simple, toy applications and you are ready to start doing some serious back-end web development and you are wondering whether Rust can be used for this purpose.\nYou are looking for a resource that has all you need in a single place.\n\n\nWell, look no further! In this course i will show you how to create a complex, fully async web app in Rust that serves JSON APIs but also has a CLI interface at the same moment.\n\n\nWe will use the Rocket web framework along with the Diesel ORM to build Rest APIs with\n- Authentication built-in (users and passwords)\n- Redis as a cache storage\n- Access management with roles\n- Handling for datetime fields\n- CLI commands\n- Logging\n- Automated API testing",
      "target_audience": [
        "Web developers looking to build a Rust server for advanced cases",
        "Web developers looking into building very fast and reliable servers"
      ]
    },
    {
      "title": "Elm - The Complete Guide (a web development video tutorial)",
      "url": "https://www.udemy.com/course/elm-the-complete-guide/",
      "bio": "Learn the language of the future for web development and increase your productivity and fun using Elm, Elm UI and others",
      "objectives": [
        "Build modern web apps using Elm",
        "Create your own web site with a high quality long term foundation",
        "Fix an old chaotic legacy web app moving to the solid Elm architecture",
        "Learn all about Elm, including visual design, business rules modeling and browser integration using ports"
      ],
      "course_content": {
        "Introduction": [
          "Hello Elm",
          "Making changes",
          "Reset",
          "Growing",
          "Events",
          "Text Fields"
        ],
        "Installation": [
          "Choose your operating system",
          "Install Elm with Ubuntu Linux",
          "Install Elm in Windows",
          "Install Elm in Mac"
        ],
        "First steps": [
          "Simple page",
          "Embedded page",
          "Package page"
        ],
        "Our first Elm project": [
          "Happy Birthday setup",
          "Happy Birthday buttons",
          "Happy Birthday live",
          "Happy Birthday input",
          "Happy Birthday improvements",
          "Happy Birthday new changes",
          "Happy Birthday refactor",
          "Happy Birthday better views"
        ],
        "Make it beautiful": [
          "My dog setup",
          "My dog colors",
          "My dog image",
          "My dog fonts",
          "My doc content",
          "My dog better colors",
          "My dog themes",
          "My dog types",
          "My Dog imports",
          "My Dog semantics"
        ],
        "Using JSON": [
          "Hello JSON setup",
          "Hello JSON data",
          "Hello JSON request",
          "Hello JSON run",
          "Hello JSON error detail",
          "Hello JSON result",
          "Hello JSON remote data"
        ],
        "JSON Interactive": [
          "Books intro",
          "Books setup",
          "Books visuals",
          "Books searchbar",
          "Books JSON call",
          "Books JSON decoding",
          "Books reporting errors",
          "Books thumbnails",
          "Books links",
          "Books loading",
          "Books let",
          "Books enter key",
          "Books cards",
          "Books wrapped rows",
          "Books focused"
        ],
        "More control": [
          "Counter setup",
          "Counter button",
          "Counter flags",
          "Counter ports"
        ],
        "Painting Charts": [
          "Fruits setup",
          "Fruits colors"
        ],
        "Better quality": [
          "Fuzz setup",
          "Fuzz run",
          "Fuzz tests",
          "Fuzz review",
          "Fuzz more"
        ]
      },
      "requirements": [
        "Basics of HTML",
        "No Javascript experience is required"
      ],
      "description": "Create great web sites using this new cool language called Elm, join us and learn how to develop professional nice looking web apps for your blog, your company or your next own startup.\n\n\nThe class is a hands on with practice videos you can follow at your own pace, the reference code is at GitHub for every step of the class. Optionally you can just jump to the last lecture of each section to get the complete code and advance quicker if you feel like to.\n\n\nWe are going to learn how to:\n\n\nSetup a productive and fast development cycle using Elm Live\nCreate great visual user interfaces using Elm UI\nDisplay powerful statistics graphs using Elm Charts\nDevelop solid business logic with The Elm Architecture\nUse HTTP API remote calls with Elm JSON\nDebug an Elm web application using the Elm Debugger\nDesign responsive web pages using Elm UI metrics\nMake our web sites better using Accessibility with Elm\nDraw animations using SVG and Elm SVG\nDeploy to production using JAMStack\nThe teacher has vast experience from real battles developing big systems including HTTP JSON APIs, Thrift APIs, databases, the cloud, mobile and web apps.\nCome and join us for learning Elm together, one of the most valuable pieces for developing successful professional web sites today.",
      "target_audience": [
        "Developers that want to learn to create how to create modern web apps",
        "Frontend developers looking for a better good alternative to Javascript and old traditional frameworks",
        "Backend developers that want to become full-stack developers without drowning on the whole Javascript nightmare",
        "If you are overwhelmed by the spaghetti configuration style with Javascript projects you may found a refreshing better way using Elm"
      ]
    },
    {
      "title": "Full-Stack Mobile Development: Flutter, Figma, and Firebase",
      "url": "https://www.udemy.com/course/full-stack-mobile-development-flutter-figma-and-firebase/",
      "bio": "Mobile App Mastery: Flutter, Figma, Firebase, Riverpod, Stripe Integration, Building a Multi-shop App - [2025 Edition]",
      "objectives": [
        "Learn How to Convert Codes from Figma to Flutter",
        "Learn the process of exporting design assets from Figma for development.",
        "Emphasize user-centric design principles to create interfaces that meet user needs.",
        "Learn to gather feedback and iterate on designs for continuous improvement.",
        "Develop and organize design systems for maintaining visual consistency throughout the app.",
        "Master the use of fonts, font sizes, and color palettes for effective UI design.",
        "Understand the principles of color theory in creating visually appealing interfaces.",
        "Utilize Figma's component system for efficient design consistency.",
        "Explore the benefits of reusable design elements in the creation of UI components.",
        "Understand and implement responsive design principles to ensure the app looks and functions well on various screen sizes and orientations.",
        "Explore how to set up role-based access control (RBAC) using Firebase Authentication to manage different levels of access for users and store owners.",
        "Explore advanced querying techniques in Firestore, including compound queries, pagination, and filtering data based on various criteria.",
        "Implement functionality for users to upload images or files to Firebase Storage and retrieve them within the app.",
        "Understand and implement responsive design principles to ensure the app looks and functions well on various screen sizes and orientations.",
        "Develop a strong understanding of asynchronous programming in Dart, particularly in the context of Flutter and Firebase operations.",
        "Explore how to implement real-time updates using Firestore to keep the app's data synchronized across devices.",
        "Learn how to architect a multi-store application, allowing users to interact with multiple stores within a single app.",
        "Explore Riverpod as a state management solution in Flutter, including how to use providers to manage the app's state efficiently.",
        "Understand how to integrate Firebase into a Flutter app, covering authentication, Firestore (Firebase's NoSQL database), and Firebase Cloud Functions.",
        "Learn the fundamentals of Flutter, including widget composition, layout, and navigation."
      ],
      "course_content": {
        "Introduction": [
          "Introduction To Figma Section"
        ],
        "User SignUp Screen On Figma": [
          "User SignUp Screen Design"
        ],
        "Register Page For Vendors": [
          "Register page for vendors"
        ],
        "Home Screen Design": [
          "Header Part",
          "Carousel Part",
          "Categories Design",
          "Popular Product Design",
          "Recommended Product Design",
          "Bottom Navigation Bar Design"
        ],
        "Cart Screen Design": [
          "Cart Screen Design"
        ],
        "Vendor Profile Screen Design": [
          "Vendor profile part 1",
          "Vendor profile part 2"
        ],
        "User Profile Screen Design": [
          "User profile screen part 1",
          "User Profile Part 2",
          "User Profile Part 3"
        ],
        "Product Details Screen Design": [
          "Product details screen part 1",
          "Product details screen part 2"
        ],
        "Vendor Stores Page Design": [
          "Design The Awesome Header"
        ],
        "Flutter - Firebase Build Multi Vendor App": [
          "Create Project",
          "Mvc Structure",
          "Configure Assets",
          "Google Fonts Package"
        ]
      },
      "requirements": [
        "Anyone who wants to learn Figma , Flutter and Firebase",
        "Have Flutter set up correctly"
      ],
      "description": "Welcome to our groundbreaking course, \"Mastering Flutter, Firebase, and Figma: Build a Multi-Shop E-Commerce App with Riverpod, Stripe, and Advanced Integrations!\"\nExplore the intricacies of Flutter and Firebase with our comprehensive course on building a Multi-Shop E-Commerce App using Riverpod and advanced integrations. Here's a glimpse of what you'll learn:\n\n\n1.Responsive Design Mastery:\n- Dive into responsive design principles for an E-Commerce app that adapts beautifully across various devices, ensuring an unparalleled shopping experience.\n\n\n2. Role-Based Access Control with Firebase Authentication:\n- Elevate your app's security by implementing RBAC through Firebase Authentication. Effectively manage access levels for customers, store owners, and administrators, creating a secure and personalized shopping environment.\n\n\n3. Harnessing the Power of Firebase Cloud Functions:\n- Boost your app's functionality with Firebase Cloud Functions. Deploy server-side logic for tasks like data validation and notifications, ensuring a seamless and efficient E-Commerce experience.\n\n\n4. Advanced Firestore Queries:\n- Master advanced querying techniques within Firestore to efficiently manage and display product catalogs. Learn compound queries, pagination, and data management tailored to your E-Commerce needs.\n\n\n5. Image and File Uploads to Firebase Storage:\n- Enable seamless product uploads using Firebase Storage. Learn how to store and retrieve product images, ensuring your E-Commerce app showcases products in a visually appealing way.\n\n\n6. Asynchronous Programming in Dart:\n- Develop a solid understanding of asynchronous programming in Dart to streamline your code. Enhance the responsiveness of your E-Commerce app, providing users with a smooth shopping experience.\n\n\n7. Real-Time Updates with Firestore:\n- Make your E-Commerce app dynamic with real-time updates. Keep users synchronized across devices, ensuring access to the latest product information and promotions.\n\n\n8. Architecting Multi-Shop E-Commerce Applications:\n- Explore the architecture of a multi-shop setup within your app. Enable users to seamlessly switch between different shops, offering a diverse and engaging shopping experience.\n\n\n9. Riverpod State Management:\n- Leverage Riverpod as your state management solution. Efficiently manage and organize your E-Commerce app's state, ensuring optimal performance and scalability.\n\n\n10. Seamless Firebase Integration:\n- Integrate Firebase seamlessly into your E-Commerce app, covering user authentication, Firestore, and Firebase Cloud Functions. Ensure your app is built on a robust foundation, ready for scale and user growth.\n\n\n11. Stripe Integration for Payments:\n- Dive into the world of online payments. Learn to integrate Stripe, providing secure and seamless payment experiences and making your E-Commerce app ready for business.\n\n\n12. Background Removal via APIs:\n- Elevate your app's visual appeal by integrating Background Removal via APIs. Enhance product images, ensuring a professional and polished look for your E-Commerce listings.\n\n\nEmbark on this learning adventure, mastering essential technologies and building a sophisticated Multi-Shop E-Commerce App with advanced features. Enroll now to turn your E-Commerce app aspirations into reality!",
      "target_audience": [
        "anyone with a laptop will benefit alot from this course"
      ]
    },
    {
      "title": "Build Restful Api's with Asp.Net Core",
      "url": "https://www.udemy.com/course/learn-restful-apis-with-net-core/",
      "bio": "Learn to build Secure Real World Vehicle Selling RESTful Api's with Asp.Net Core , Entity Framework Core and C#",
      "objectives": [
        "Understand the Web Api's",
        "Build the backend for your web and mobile apps",
        "Build Web Api's with Entity Framework Code First Approach",
        "Use Entity Framework to query data",
        "Use Model Validations to Validate the data",
        "Implement Authentication & Authorization in Web Api's",
        "Deploy Web Api to Microsoft Azure",
        "Create Real World Vehicle Selling Application",
        "Upload Images via Web Api"
      ],
      "course_content": {},
      "requirements": [
        "The student's must have a Windows or MAC machine. If you're using MAC then you'll need a Visual Studio For MAC",
        "Knowledge of Asp .Net , C# and Entity Framework.",
        "C# (at a minimum lambda expressions, LINQ)",
        "Visual Studio 2019 with .Net Core version 3.1 is recommend but you can also use Visual Studio 2017",
        "Make sure you have properly installed the Visual Studio and comfortable with the Visual Studio"
      ],
      "description": "Welcome to this course Learn Restful Api's with .Net Core.\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of real world Restful Api development with .Net Core. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world web api from start to finish. And the purpose of this course is to train you to build your own Real world Rest Api with your favorite C# programming language .\n\nThe main focus of this course is on the Restful Web Api via Asp.NET Core and C#. So if you're familiar with C# , Asp.Net and Entity Framework Or if you want to create the Restful web api's in Asp.Net then this is the right course for you.\nIf you don't have any idea about Rest Api then don't worry because in this course we'll cover all the Rest Api concepts.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nHow to create a Rest Api via Entity Framework Code First Approach with all the advanced functions.\nImplement Status Codes\nAdding Migrations in Web Api's\nAdding Content Negotiation\nImplement Validation in Web Api's\nHow to add the Routing and Custom Methods\nImplement Authentication and Authorization and secure your Api with JWT\nCreate SQL Database on Microsoft Azure\nDeploy Web Api on Microsoft Azure\nCreate A Real World Vehicle Selling Api From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Apis in Asp.Net Core happily)\n\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos courses. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. In this course you'll get a best instructors with carefully crafted content, beautiful outline and proper structured material and learning by doing.\nI'll explain you each and every single line of code. I've been in your shoes and every time copy and paste is not a solution and that's why I've tried to create everything in front of you so that you can learn how to solve the errors. We'll learn every thing from scratch.\nAnd before this course you don't need my other courses. If you're a C# developer  then you should go ahead with this course.\nAfter this course you'll be very much familiar with Asp.Net Core Web Api's and you'll be able to create any kind of real world web api's in asp.net quite easily as well as efficiently.\nSign up today, and look forward to:\nBuilding a Real World fully-fledged Web Api's including ones that use Rest Api Architecture , Access Token , Authentication , Authorization and much more.\nAll the knowledge you need to start building any api you want\n\n\nRemember...\nAfter this course you'll get all the  Source Code and along with this I'll also share  the links and helping material for the Rest Api's with you but you need your personal Azure Portal where you can launch your web api.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First Complete Rest Api's Course with Asp.Net Core and C#.",
      "target_audience": [
        "Developers who are familiar with C# Programming Language.",
        "Some prior programming experience in Object Oriented Programming languages will also help to pick the concepts easily.",
        "Developers who want to build the Complete Restful Web Api from A to Z.",
        "Developers with no knowledge of Asp .Net Core Web Api's who want to build Restful Web Api's with this framework."
      ]
    },
    {
      "title": "Master EmberJS : Learn Ember JS From Scratch",
      "url": "https://www.udemy.com/course/master-emberjs/",
      "bio": "Learn to demystify the EmberJS JavaScript framework by learning all the core concepts of it and building a real web app",
      "objectives": [
        "Develop dynamic User Interfaces using Ember.js",
        "Understand all the basic concepts of Ember.js",
        "Make use of Ember.js with other frameworks/libraries like jQuery",
        "Learn precompiling the Ember Code",
        "Understand Advance topics of Ember.js"
      ],
      "course_content": {
        "Introduction to Ember.js": [
          "What is Ember.js",
          "Understanding Ember.JS Architecture",
          "How this course is organized",
          "Before You Buy This Course",
          "Downloading & Installing Embjer.js",
          "Creating an Ember.js application - Ember CLI Application",
          "Creating Cutom Ember Application"
        ],
        "Templates": [
          "HandleBar Basics",
          "Application Template",
          "Conditionals",
          "Dispalying a list of items",
          "Binding Element Attributes",
          "Binding Element Class Names",
          "Links",
          "Actions",
          "Input Helpers",
          "Development Helpers"
        ],
        "Routing": [
          "Introduction",
          "Defining Routes",
          "Generated Objects"
        ],
        "Models": [
          "Model Introduction",
          "Defining Models",
          "Creating Records",
          "Pushing The Records into the Store",
          "Finding Records"
        ],
        "Views": [
          "Introduction to Views",
          "Defining a View",
          "Event Handling",
          "Inserting Views in Templates",
          "Customizing a Views Element"
        ],
        "Router,Controllers & Route": [
          "Introduction to Router",
          "Configuring Navigation Links",
          "Creating a controller",
          "Using Ember Route",
          "Working with Dynamic Segment Route",
          "Nested Routes & Nested Templates"
        ],
        "Models & Adapters": [
          "Creating an Ember Model",
          "Working with Ember Data",
          "Mapping Models with Another Model",
          "Making use of RESTAdapter - Fetch Data From Server"
        ],
        "Working with Array Controllers and Property Binding": [
          "Sorting using RESTAdaptor",
          "Sorting on Client End using ArrayControllers",
          "Property Binding & Computed Aliases",
          "Computed Properties",
          "Nested Routes with Controllers"
        ],
        "Ember Components": [
          "Introduction to Components",
          "Adding Functionality to our Component Template",
          "Using Partials",
          "Create a Controller From Template",
          "Ember Views"
        ],
        "Controller Actions, Custom Views And Events": [
          "Understanding Controller Actions",
          "Model DataBinding",
          "Custom Views and Events",
          "Writing Helpers"
        ]
      },
      "requirements": [
        "HTML",
        "JavaScript",
        "Basic understanding of CSS",
        "Basic understanding of jQuery is required but not mandatory"
      ],
      "description": "The course now covers Ember 2.0 and Ember CLI\n\n\nThis course is all about exploring Ember js in a way which will put you at ease to work with any version of it.\nThe course covers all the topics from basic to advance and provides you a custom approach of creating web applications using Ember js framework.\nUsing this approach you will be able to learn all the nuances of this framework and understand how exactly each component is tied together.\nWe will be developing a real-world course based website which will allow users to browse and see details of each course that is in our inventory, using this project we will be exploring all the concepts of Ember js and we will see its practical use\nWe will also be covering precompiling our templates using Grunt which will help in deploying our Ember js application with lesser files\nHere's what we will be covering in this course\n1. Introduction to Ember js\n2. Templates in Ember js\n3. Routing\n4. Models\n5. Views\n6. Routers,Controllers & Route\n7. Models & Adapters\n8. Working with ArrayControllers & Property Binding\n9. Ember Components\n10. Controller Action,Custom Views and Events\n11. Externalizing Templates\n12. Precompiling Templates using Grunt\n13. Enumerables\n14. The Object Model\nBy the end of this course you will be comfortable enough to develop your own Ember js application.\nSo let's get started",
      "target_audience": [
        "Aspiring Web Designers",
        "Aspiring Web Developers",
        "Web Developers",
        "Web Designers",
        "Web Architects"
      ]
    },
    {
      "title": "Master Laravel With Vue JS",
      "url": "https://www.udemy.com/course/master-laravel-with-vue/",
      "bio": "From Basic To Advance in Laravel and Vue JS",
      "objectives": [
        "Laravel Version 9",
        "Vue JS Version 3",
        "Laravel Basics",
        "Vue JS Basics",
        "CRUD Operations with Laravel",
        "CRUD Operations with Vue JS",
        "API (REST API)",
        "Vue JS State Management (Vuex)",
        "Vue JS Multi Select Component",
        "Laravel Authentication",
        "API Authentication",
        "Laravel Authorization",
        "API Authorization",
        "Real-Time with Pusher",
        "Real-Time with Laravel WebSockets",
        "Chart JS",
        "Excel & PDF Export",
        "Laravel Notifications",
        "Laravel Mail",
        "Localization"
      ],
      "course_content": {},
      "requirements": [
        "HTML & CSS",
        "PHP Basics",
        "JavaScript Basics"
      ],
      "description": "Master Laravel with Vue JS course is based on a real-world project (Task Tracking MIS). By building this application we will cover topics, starting from basics to advance step by step in both frameworks (Laravel & Vue).\n\n\nThe Task Tracking MIS application that we will build through out this course, has been battle tested in many large scale organizations with real-world data and has been proved very efficient in easing daily tasks between personal.\nYou can build any kind of management information system using the topics that are discussed in this course very easily and step by step.\nThe term MIS in software is used to track sales, inventory, equipment and related business information. In here we will track business related information and processes. It will be a completely authenticated, roles and persmissions based application.\nA user can simply assign a task to another user based on roles and permissions and can interact between in real time using comments and notifications. Users will be notified through email also to not miss any of the task assigned to them and process tasks on time.\nYou can use the Task Tracking MIS in any organization e.g. (governmental or nongovernmental).\nFor more and detailed explanation of the functionalities and to know about what you'll learn in this course, please read the information in the What you'll learn section listed above on the course landing page.",
      "target_audience": [
        "This course is for anyone, who wants to learn a new skill or take an existing skill to the next level."
      ]
    },
    {
      "title": "Java Web Services & Java EE Microservices: JSP Servlets JBDC",
      "url": "https://www.udemy.com/course/java-web-services-java-ee-microservices-jsp-servlets-jbdc/",
      "bio": "Java RESTFUL Web Services & Java EE Microservices: JSP and Servlets, JBDC, JBoss, AJAX, JAX-RS, JAX-WS, JavaServer Faces",
      "objectives": [
        "Java Web Services",
        "Learn Web Applications",
        "Use and Develop JavaServer Faces Technology in Web Pages",
        "Java Servlet Technology",
        "Types of Web Services",
        "Build Web Services with JAX-WS",
        "Build RESTful Web Services with JAX-RS",
        "Enterprise Beans",
        "Use the Embedded Enterprise Bean Container",
        "Use Asynchronous Method Invocation in Session Beans",
        "The Java Persistence Query Language",
        "Use the Criteria API to Create Queries",
        "Creating and Using String-Based Criteria Queries",
        "Security in the Java EE Platform",
        "Securing Web Applications",
        "Java EE Supporting Technologies",
        "Use Java EE Interceptors"
      ],
      "course_content": {
        "Java Web Services": [
          "Introduction",
          "Overview",
          "Getting Started with Web Applications",
          "Using JavaServer Faces Technology in Web Pages",
          "Developing with JavaServer Faces Technology",
          "JavaServer Faces Technology",
          "Java Servlet Technology"
        ],
        "What Are Web Services?": [
          "Overview",
          "Types of Web Services",
          "Deciding Which Type of Web Service to Use",
          "Building Web Services with JAX-WS",
          "Building RESTful Web Services with JAX-RS"
        ],
        "Enterprise Beans": [
          "Getting Started with Enterprise Beans",
          "Running the Enterprise Bean Examples",
          "A Message-Driven Bean Example",
          "Using the Embedded Enterprise Bean Container",
          "Using Asynchronous Method Invocation in Session Beans"
        ],
        "Persistence": [
          "Introduction to the Java Persistence API",
          "Running the Persistence Examples",
          "The Java Persistence Query Language",
          "Using the Criteria API to Create Queries",
          "Creating and Using String-Based Criteria Queries"
        ],
        "Security": [
          "Introduction to Security in the Java EE Platform",
          "Getting Started Securing Web Applications",
          "Getting Started Securing Enterprise Applications",
          "Java EE Security: Advanced Topics"
        ],
        "Java EE Supporting Technologies": [
          "Introduction to Java EE Supporting Technologies",
          "Java Message Service Examples",
          "Java Message Service Concepts",
          "Transactions",
          "Using Java EE Interceptors"
        ],
        "Bonus: Audio Section": [
          "Section 1 Audio",
          "Section 2 Audio",
          "Section 3 Audio",
          "Section 4 Audio",
          "Section 5 Audio",
          "Section 6 Audio",
          "Quiz Section 1"
        ]
      },
      "requirements": [
        "No Prior Knowledge Or Work Is Necessary To Take This Course.",
        "Pen And Paper For Precious Notes"
      ],
      "description": "Web services are a method of communication between two electronic devices over a network. Many organizations use multiple software systems for management. Different software systems often need to exchange data with each other, and a web service is a method of communication that allows two software systems to exchange this data over the internet, but if you can’t create web services, you’re missing great opportunities and other writers will grab them.\nWhat if you could change that?\nMy complete Java Web Services course will show you the exact techniques and strategies you need to create web services, use enterprise beans, create queries and master Java EE.\nFor less than a movie ticket, you will get over 4 hours of video lectures and the freedom to ask me any questions regarding the course as you go through it. :)\nWhat Is In This Course?\nYour Web Services Will Never Be The Same.\nExcept if you’re already an excellent creator of web services, use the embedded enterprise bean container, use the criteria API to create queries, know security in the Java EE platform, creating and using string-based criteria queries, you are going to lose more opportunities to write clear intructions and miss career advancements that other people will gladly take.\nAs what John Fowler, a certified technical communicator says “Today, Web services is really about developing for the server. What it means to developers is any set of systems services that you make a Web service you to access by any kind of device with a highly interactive client, not just a browser.”\nThis is offered with a 30 days money back guarantee. You can try it with no financial risk.\nIn This Web Services Training, You'll Learn:\nJava Web Services\nLearn Web Applications\nUse and Develop JavaServer Faces Technology in Web Pages\nJava Servlet Technology\nTypes of Web Services\nBuild Web Services with JAX-WS\nBuild RESTful Web Services with JAX-RS\nEnterprise Beans\nUse the Embedded Enterprise Bean Container\nUse Asynchronous Method Invocation in Session Beans\nThe Java Persistence Query Language\nUse the Criteria API to Create Queries\nCreating and Using String-Based Criteria Queries\nSecurity in the Java EE Platform\nSecuring Web Applications\nJava EE Supporting Technologies\nUse Java EE Interceptors\n-----------------------------------------------------------------------------------------------------\nIs This For You?\nDo you want to build useful and secure web services?\nAre you afraid of not being able to create good web services?\nDo you think you will feel proud creating the services that will be used every day and help others to work more effectively?\nThen this course will definitely help you.\nThis course is essential to all programmers, developers, Java Developers, JEE Developers and anyone looking to learn web services.\nI will show you precisely what to do to solve these situations with simple and easy techniques that anyone can apply.\n------------------------------------------------------------------------------------------------------\nWhy To Have Strong Web Services Skills?\nLet Me Show You Why To Have Strong Web Services Skills:\n1. You will create web services.\n2. You will use enterprise beans.\n3. You will create queries.\n4. You will master Java EE.\nThank you so much for taking the time to check out my course. You can be sure you're going to absolutely love it, and I can't wait to share my knowledge and experience with you inside it!\nWhy wait any longer?\nClick the green \"Buy Now\" button, and take my course 00% risk free now!",
      "target_audience": [
        "All Programmers, Developers, Java Developers, JEE Developers",
        "Anyone Looking To Learn Web Services.",
        "This Is Not For People Looking For A Quick Or Lazy Way Of Programming"
      ]
    },
    {
      "title": "Learn Online Store Responsive Website Design HTML/CSS",
      "url": "https://www.udemy.com/course/online-store-responsive-website-htmlcss/",
      "bio": "Online Store Responsive Bootstrap Layout Design Website With Slider, Icons, Typography and More...",
      "objectives": [
        "You will be able to make Responsive Online Store Website",
        "You can create responsive grid layout using bootstrap",
        "After completing this course you will be able to use font awesome icons",
        "You will learn how to make different Slider",
        "You will be able to make any website responsive",
        "You will learn how to use typography in the website.",
        "And lot more..."
      ],
      "course_content": {
        "Introduction & Setup": [
          "Introduction",
          "What we are going to build?",
          "Setup Environment",
          "Link External Sources (Bootstrap, Font Awesome)",
          "HTML Tag Snippets with Class & IDs",
          "Understanding Bootstrap Grid System"
        ],
        "Navigation Menu": [
          "Bootstrap Responsive Navigation",
          "Working with Google Font",
          "CSS Variables & Global Classes",
          "Navigation with Custom Style",
          "Bootstrap Navigation with Font Awesome Icon"
        ],
        "Homepage with Slider": [
          "Getting Started with Slick Slider",
          "Creating Slick Slider",
          "Navigating Slide Through Next & Prev",
          "Working with Slider Dots",
          "Product Slider",
          "Styling Product Slider"
        ],
        "Features Products": [
          "Getting Started with Feature Product",
          "Style Features Product",
          "Features Product Slider Design",
          "Style Feature Product Slider",
          "Slides To Show"
        ],
        "Sofa With Product Slider": [
          "Sofa Layout",
          "Design Title, Description and Icons",
          "Design Product Sofa Slider",
          "Design Banner Ads"
        ],
        "Advanced Bootstrap Grid Layout": [
          "New Arrivals",
          "Best Seller & Feature",
          "Brand Slider",
          "What Our Client Says?",
          "Styling What our Client Says?",
          "Bootstrap Stripe"
        ],
        "Footer": [
          "Footer Grid Layout",
          "Services, Extras & Instagram",
          "Styling Footer",
          "Newsletter Layout",
          "Finishing Footer With Copyright Symbol",
          "Making Website Completely Responsive",
          "Final Review"
        ]
      },
      "requirements": [
        "You should have computer or laptop to run code with browser.",
        "Student need to have a basic understanding of HTML & CSS",
        "Beneficial if have Basic JavaScript Knowledge"
      ],
      "description": "Hey everyone, Welcome to the Online Store Responsive Website Design Course.\n\n\nIn this course, you will able to learn how to create a responsive website with bootstrap framework. You will be able to create responsive bootstrap grid system to make complete website design. After completing this course, you can create your own website with bootstrap using a grid system.\nIn this course you will learn how to use slick slider library to make sliders, Font Awesome icon to add various icons, Google fonts which use to add typography and much more. After this course, you are not limited to create a responsive design but also understand how to design advanced layout. This Website looks realistic to the real websites so it helps you to make modern trending design.\nSo what we are going to Learn in this website.\nResponsive Mobile & Tablet Friendly Design\nBootstrap Framework\nBootstrap Grid System & Flex box\nFont Awesome Icons\nGoogle Fonts\nWell Design Structure\nSlick Slider\nReal World Trending Design\nAnd much more...\nEvery Code in this course is well explained. We keep eye on each class of the bootstrap framework and see what is the use and how to use that class on the website. I separated this course with very short video lectures to understand each view and code. After finishing this course you can download the completion certificate with my support on Instagram @akki.2013.\nNot just that but you will learn a lot more than this. But before you take this course you have the following things.\nYou need to have a basic understanding of HTML and CSS.\nYou need a computer/laptop to code.\nBasic JavaScript Knowledge Beneficial\n\n\nUpon completing this course you will be ready to tackle new design using HTML & CSS. You will understand how to overcome from the HTML fear and make your own simple website.\nFor whom this course for...\nAnyone who wants to expert in web design and make complex design\nAnyone who wants to create a responsive website with basic Html and CSS knowledge.\nThe beginner who looking for a new design and learn it.\nBootstrap Developer who wants to know how to use bootstrap to make responsive website design.\nNot only do you get great technical content, but you will also get access to our Question and Answer Forums, where you and other students can get help on the course material and content.\nAll of this comes with a 30-day money-back guarantee so you can enroll today completely risk-free!\nWe'll see you inside the course!",
      "target_audience": [
        "Beginners who want to learn how to make responsive website with basic HTML & CSS",
        "Students want to create sliders but don't know how to use it in the website.",
        "Beginners who want to learn online store website with just HTML & CSS",
        "Anyone who wants to start web development"
      ]
    },
    {
      "title": "Complete Portfolio Website Step-by-Step [ Web Development ]",
      "url": "https://www.udemy.com/course/complete-portfolio-website-step-by-step-web-development/",
      "bio": "Responsive Portfolio Website Using [ Html , Css , JavaScript ] Works on Desktop, Laptop , Tablets , Mobiles , Smart TV's",
      "objectives": [
        "Building a website about your brand and experience",
        "Great Impression For Employers.",
        "Increases Your Visibility And Online Presence.",
        "Shows You're More Than Just A Resume.",
        "The benefits of having your own customized website",
        "Access to Complete Source CODE of the Project",
        "website to showcase your work.",
        "Your Portfolio Website with Testimonial Layout",
        "Your Portfolio Your Marketing Hub",
        "What’s the public image you want people to see you as,"
      ],
      "course_content": {
        "Banner Layout For Portfolio Website": [
          "Adding Banner Layout Using HTML",
          "Creating Banner Layout Design Using CSS",
          "About Myself"
        ],
        "Developing About Me for Portfolio Website": [
          "Adding About Layout Using HTML",
          "Creating About Me Design Using CSS"
        ],
        "Navigation Menus on Portfolio Website": [
          "Adding Menus on top of Portfolio Using HTML [ Header Section ]",
          "Creating Menu Design on PortFolio",
          "Sticky Navigation Menus Using JavaScript addEventListener"
        ],
        "Creating Services Layout On Portfolio Website": [
          "Adding Services Layout in HTML",
          "Creating Services Layout in CSS"
        ],
        "Creating Work Layout On Portfolio Website": [
          "Adding Work Layout in HTML",
          "Creating Work Layout in CSS"
        ],
        "Creating Testimonial Layout On Portfolio Website": [
          "Adding Testimonial Layout in HTML",
          "Creating Testimonial Layout Using CSS"
        ],
        "Creating Contact And Address Information on Portfolio Website": [
          "Adding Contact Layout in HTML",
          "Creating Contact Layout Using CSS",
          "Creating ConCreating Contact Layout in CSS"
        ],
        "Adding Footer to Portfolio Website": [
          "Placing Footer to Portfolio Website",
          "Making the Website Scrolling as Smooth & SPA Page"
        ],
        "Making Responsive Protfolio Website": [
          "Adding Responsive Header",
          "Creating Toggle Menu to Header Responsive",
          "Making Banner Content Responsive",
          "Making Total Portfolio Responsive"
        ],
        "Download the Source Code Here !": [
          "Download Source Code"
        ]
      },
      "requirements": [
        "You should have some familiarity with HTML , CSS , JAVASCRIPT",
        "All you need is a computer (Windows, macOS, or Linux) with an internet connection (Windows, macOS, or Linux)"
      ],
      "description": "As a creative, an online portfolio is an absolute must to establish your career.\nWhether you’re a photographer, fashion director, graphic designer, or architect creating an online portfolio is an absolute must to establish your career. It's what allows you to differentiate yourself from others, showcase your projects and skills, and demonstrate that you can bring something unique to the table. Here are some benefits that every creative professional can enjoy by creating an online design portfolio.\nIncrease online visibility\nAccording to Glassdoor, more and more hiring managers are Googling their applicants before interviews, and not surprisingly, one of the top things they look for is an online portfolio. it’s reassuring to know that you get to decide what comes up on that first page. Will it be pictures of your Friday nights or a professional profile that shows your story and skills? Deck your Google search with social media posts, articles you authored, and most importantly, an online portfolio that showcases the best of your work.\nOpen up for potential clients\nIf you’re a freelancer, having an online portfolio is the best way to detail your services and open the door wide open for potential clients. This is how Lukas Lienhard, a freelance photographer, attracts clients who wouldn’t have gotten in touch with him if it weren’t for his website. His online portfolio works as a “landing page” for his personal brand, where clients can easily see what his personality, interests, and skillsets are...\n\n\nAdvantages of a Portfolio\nOnline presence The days of the paper resume are fading fast. Today when employers consider a potential job candidate, a google search is one of the first screening tools they employ. When you have a digital portfolio, you have a powerful tool to shape your online presence.\nKnow what you know A digital portfolio requires you to write narratives that give details about the skills and experiences that appear on your CV or resume. Writing these narratives gives you a chance to articulate your professional story--the core of your qualifications, the nuances of your professional identity. There's no better preparation for interview questions than creating a portfolio.\nA deeper look Today all professionals should have a social media presence. LinkedIn, and Twitter/Facebook. But a digital portfolio goes beyond social media. A digital portfolio lets your LinkedIn profile (and any other social media presence you have) lead colleagues and potential employers to a place where they can explore your career more deeply than any social media profile allows. A job history on LinkedIn--with a link to your digital portfolio added--becomes an in-depth story about your ability to work in a team, lead a project, or innovate in your field.\nThis is a video course full of real downloadable code examples. You'll be able to take the knowledge, as well as the real working code, to your projects and make sure they stand out.\nResponsive Web Design\nCreate Responsive Website Using HTML5 CSS3\nfrontend developers\nwebsite designer\nHtml Developers\nLearn Web Development Courses and Tutorials\nhow to make a responsive website using Html CSS Javascript\nBuild a real-world responsive website\njavascript front end tutorial\nfront end developer course\nfront end development tutorials\nLearn Web Development Courses and Tutorials\nresponsive website design from scratch 2020\nDesign A Complete Responsive Business Website From Scratch\nhtml5 + css3 responsive web design\nLearn Modern Responsive Web Design With Example Step by Step\nResponsive Html5 CSS3 Website\nWeb Design For Beginners\nBuild A Modern Looking Responsive Websites\nLearn Responsive Web Design From Scratch\nReal World Coding in HTML & CSS\nHtml5 CSS3 and Javascript: A Guide To Web Design From Scratch\nWeb Design HTML CSS Create Single Page Website from Scratch\nFront End Web Development\nHelp and inspiration?\nNot only do you get a load of practical, useful starting projects in this course, you can also head over to CSS Animation.rocks for more, and even sign up to a weekly newsletter packed full of tutorials, inspiration, and tips for animating on the web.\nThere’s no better time to learn Animations: You’ve made a smart choice because CSS 3 Animations is the most popular language out there. This is no exaggeration. This popularity and growth mean more jobs and opportunities than ever before.\nGet access to fast support if you get stuck: There’s nothing worse than getting stuck ten hours into a course and not getting the help you need to continue. Getting stuck is part of the learning process. That’s why I’m here to answer every single question that comes my way.\nI guarantee that this is the most up-to-date and engaging course available, and it comes with a Udemy 30-day money-back guarantee.\nI can’t wait to see you inside, Let's Hope in to the COURSE!\n- B. Praveen Kumar ( PHP Developer & Web Designer - FULL Stack Developer ).",
      "target_audience": [
        "All Levels From beginner to Advance"
      ]
    },
    {
      "title": "JavaScript - Tricks and Workarounds",
      "url": "https://www.udemy.com/course/javascript-tricks-and-workarounds/",
      "bio": "Explanation of JavaScript coupled with awesome code examples that are readable and easy to understand",
      "objectives": [
        "Implement dynamic websites using JavaScript",
        "Understand JavaScript code",
        "Avoid typical mistakes developers have and fix issues quickly"
      ],
      "course_content": {
        "Introduction to Javascript": [
          "Introduction to course - what we'll learn together",
          "Introduction to JavaScript - putting it in Head",
          "JavaScript in Body and External",
          "WindowAlert andd DocumentWrite",
          "InnerHTML and ConsoleLog",
          "JavaScript Identifiers and Assingment Operator",
          "Declaring Variables and Re-Declaring",
          "Concept of DataTypes and Strings",
          "Number Types and Boolean Types",
          "Undefined Type and Empty Values",
          "Function Declarations and Expressions",
          "Function Contructor and Self-Invoking Function",
          "Functions are Objects",
          "Objects and Accessing Properties",
          "Accessing Object Methods and Null",
          "Difference between Undefined and Null",
          "Local and Global Variables",
          "Automatically Global",
          "If and Else Statement",
          "Else If Statement and Switch Statement",
          "Default Keyword",
          "For Loop and ForIn Loop",
          "While and DoWhile Loops",
          "Logical Operators and Ternary Operator",
          "Comparing Different Types and Bitwise Operator",
          "Creating Array and Accessing Elements of Array",
          "Properties and Methods for Arrays",
          "Adding Array Elements and Looping Through Arrays",
          "Creating Date Objects",
          "Date Methods",
          "Displaying Dates"
        ],
        "JavaScript Operators, Strings, Objects": [
          "Addition and Subtration Operators",
          "Multiplication and Division Operators",
          "String Concatenation and Adding Strings to Numbers",
          "Type Operators",
          "String Length and Special Characters",
          "Breaking Long Code Lines",
          "IndexOf and Substring Methods",
          "Replacing String Content and Converting to UpperLower Case",
          "Concat Method",
          "MathMaxMin and Random Methods",
          "Math Ceil and Floor Method",
          "Window Screen and Width",
          "Screen height and Available Width",
          "Available Height and Color Depth",
          "Window Screen Pixel Depth",
          "RegExp and Changing Data Format",
          "Splitting Lines with RegExp and Extracting Url of Domain"
        ],
        "JavaScript Events and DOM": [
          "AddEventListener and EventHandler",
          "Add Many Event Handlers to Same Element",
          "Adding Events to Window Object and Removing Event Handlers",
          "OnClick and OnLoad",
          "OnChange and OnKeyUp Events",
          "OnBlur and OnFocus Events",
          "Get Element by ID and Tag Name",
          "Get Element by Class Names",
          "InsertBeforeMethod",
          "SetAttribute",
          "Style Property",
          "TextContent Property",
          "Create new Element and Remove Child Method",
          "AppendChild and ReplaceChild Methods",
          "Creating a Cookie and Reading a Cookie",
          "Change a Cookie and Delete a Cookie",
          "XMLHttpRequest and GET Request",
          "POST Requests, ASYNC, ResponseTxtProperty",
          "Using a Callback Function"
        ]
      },
      "requirements": [
        "Notepad++ or any other IDE"
      ],
      "description": "JavaScript is one of the most popular programming languages in the world. It can be run by all modern web browsers. It is downloaded alongside the HTML code of a webpage. JavaScript allows you to add functionality and interactivity to your websites.\n\nWe have designed this special JavaScript tutorial to ease your worries as it’s the best front end development tutorial you can get when it comes to real and quick results!\nThis course will teach you the all the parts of JavaScript programming and you don’t need any previous experience to start learning.\nWe will start with learning where to place JavaScript. We will take a look at placing JavaScript code in different places - inside HTML tag, inside of <script> tag and also in a separate files.\nIn the first part of our tutorial we'll cover very simple but important things like JavaScript variables, JavaScript objects, Functions and Arrays and then we'll get down to more complex topics like loops, logical operators, math objects, etc.\nEach lesson contains interesting code examples which we'll launch in a browsers together and see the results of our coding!\nWe will end each section with analyzing of typical mistakes you guys will face with in your daily work with JavaScript.\nWe will analyze JavaScript code which contains errors and mistakes together and will fix all the issues making the code working. After that will launch those code examples and make sure we've fixed all the issues.\nYes! You’ll save a lot of time and will be able to avoid a number of headaches related to finding of appropriate solution for a huge number of daily tasks you’ll face with as a JavaScript developer.\nIf you guys are searching for a really valuable JavaScript course that will impact you with the full knowledge you need to create dynamic websites that will show you are an expert in front end development, look no further - just join the course and let's get started!",
      "target_audience": [
        "Beginners who want to learn how to build dynamic websites and do it professionally",
        "Anyone who wants to expand their skills in JavaScript",
        "Students who have prior experience with JS but who struggle to build a professionally working websites"
      ]
    },
    {
      "title": "Projects in Electron: Learn Electron Framework Building Apps",
      "url": "https://www.udemy.com/course/projects-in-electron-learn-electron-framework-building-apps/",
      "bio": "Learn to develop cross OS desktop apps with hottest JS framework for desktop app creation",
      "objectives": [
        "Build Real World Apps with Electron",
        "Master core concepts of Electron Framework",
        "Learn to design API based apps"
      ],
      "course_content": {
        "Introduction": [
          "Intro"
        ],
        "Introduction To Electron": [
          "Introduction",
          "Overview of Electron",
          "Code Editor",
          "Hello World - Bootstrapping",
          "Hello World - View and Model",
          "Summary"
        ],
        "Pomodoro Clock": [
          "Introduction",
          "Boostrapping The App",
          "Building the View",
          "Dynamic View Implementation",
          "Getting Started on index.js",
          "Building Long Break Clock Functionality",
          "Start Timer Function",
          "Maintaining Internal State Of Breaks",
          "Completing index.js",
          "Running The App",
          "Summary"
        ],
        "Tic Tac Toe": [
          "Introduction",
          "Initializing New Project",
          "Styling and Starting Controller",
          "Handling Gameplay Movement",
          "Deciding Winner or Drawn Game",
          "New Game Creation",
          "Playing The Game",
          "Summary"
        ],
        "Weather App": [
          "Introduction",
          "Introduction To Weather App",
          "Building Out The Controller",
          "Accessing Weather API",
          "Summary"
        ],
        "BMI Calculator": [
          "Introduction",
          "Initializing Project And Starting View",
          "Completing View",
          "Creating Conversion Functions",
          "Finalizing Controller and Running App",
          "Summary"
        ],
        "Currency Converter": [
          "Introduction",
          "Creating The View",
          "Currency Converter Function",
          "Creating Specific Conversion Function",
          "Finalizing Controller and Running App",
          "Summary"
        ],
        "Course Summary": [
          "Course Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript is essential for completing the course"
      ],
      "description": "A complete hands-on, project-based course to help you master the brilliant Electron Framework in an easy and efficient way!\n\nTraditional programming and coding are not only time consuming but also frustrating, especially with the different platforms that are currently one the market. This is why frameworks are a boon for developers who want to develop apps and websites for multiple platforms.\nElectron is one of the most popular framework for designing and developing cross-platform and cross-browser apps that are dynamic and interactive in nature. The best part is that people don’t have to learn multiple different languages, as apps and websites can be built in Electron using JavaScript, HTML and CSS.\nElectron was originally developed as a shell for the Atom Editor and from there has evolved to become one of the most popular cross-platform frameworks on the market. Electron allows the development of desktop GUI applications using front and back end components originally developed for web applications. It also serves main GUI framework behind several notable open-source projects such as GitHub's Atom, Microsoft's Visual Studio Code source code editors and the Light Table IDE. It allows building cross-platform and cross-browser apps that run exactly the same even in the future.\nIf you want a hands-on resource to help you learn how to start building your apps in Electron, well then we’ve got just the course for you! This is a project-based course will help you bridge the gap between theory and practical to help you understand both and actually get you started building apps with Electron.\nIn this course, you will learn what is Electron, how to install the system and set it up. From there, you will learn exactly how to use Electron by actually building five different projects with it.\nFive Projects covered in this course:\nPomodoro Clock: Learn how to build a complete clock from scratch, as well as how to set the timer logic, and integrate sounds as well as add multiple clocks.\nTic Tac Toe Game: In this project, you will design the game board, add the Xs and Os and add notifications to your game.\nWeather App: In this app, you will learn how to integrate an API and get it to fetch data from another source. You will also learn how to gather data from the internet and how to display that data on the app.\nCurrency Converter: This will also include using an API, and you will learn how to actually create conversions from one currency to the other.\nBody Mass Index: In this app, you will learn how to calculate the BMI by using a person’s weight and height. You will learn how to add calculations to your logic in this app\nEnroll now and become a master developer with the Electron Framework!",
      "target_audience": [
        "Anyone who wants to master App development using Electron will find this course very useful"
      ]
    },
    {
      "title": "Design to Code: Turning Email Designs into HTML and CSS",
      "url": "https://www.udemy.com/course/design-to-code-turning-email-designs-into-html-and-css/",
      "bio": "11 free bite-sized lectures for beginners to learn about basic semantic markups.",
      "objectives": [
        "How to turn your email design into HTML and CSS with free bite-sized lectures",
        "Approximately 5 min for each lecture. You’ll learn semantic markups, responsive design and accessibility with 5-minute videos",
        "2 free and ready-to-use HTML email templates provided in the course",
        "Codes for responsive breakpoint, animation, and accessibility can be used again and again for emails and web designs."
      ],
      "course_content": {
        "Introduction and basics about HTML/ CSS": [
          "Introduction to HTML and CSS. Set up your file.",
          "Introduction to CSS and how to link CSS into HTML file",
          "Basic HTML template and CSS resets",
          "Write Codes for CSS reset in <head>"
        ],
        "Build Your Stunning Static HTML Email Template": [
          "Build email layout with <table>",
          "Add images, paragraphs, and buttons to email HTML",
          "Add videos and footer to email HTML",
          "Create permanent links for to host your images and other media for free"
        ],
        "Responsive Email Design on different devices": [
          "Email responsiveness with @media queries"
        ],
        "Add Interactivity and Animation to your Email": [
          "Animation and hover state & Adding animation with @key frame"
        ],
        "Accessibility and testing": [
          "Email accessibility and how to find inspiration for your emails"
        ],
        "How to deploy custom HTML emails for free": [
          "Free options to deploy custom HTML emails"
        ]
      },
      "requirements": [
        "This course is built for beginners, no previous coding experience required",
        "Install Visual Studio Code"
      ],
      "description": "Knowing how to code HTML email can be so helpful, such as sending pretty custom newsletters to your subscribers or start your job as a digital designer. The best part is coding an email requires just a minimum knowledge of HTML and CSS.\nThis free Udemy course provides 11 free lectures. Each lecture contains approximately 5 min of video. 2 ready-to-use HTML email templates, together with all the codes are posted on Github and you can download and use them for free.\nYou will learn how to code HTML emails with CSS reset, basic layouts, images, videos, responsive design, and accessibility in just 5 minutes a day. I will share with you my tips and tricks from my years of coding: from basics of HTML, CSS to Github repo and testing sites.\n⭐⭐⭐⭐⭐ \"Amazing and clear and concise thanks Rosy... awesome\" - JJ Jam\n⭐⭐⭐⭐⭐ \"Amazing and way above expectations!\" - Jeremy Tait\n⭐⭐⭐⭐ \"It was fairly easy to follow what she was doing. It helped that she provided the code after each section for students to use if they got lost or wanted her code as a reference. She had some very helpful and informative tips on different ways to style or create an email template.\" - Sarah Rhoad",
      "target_audience": [
        "Anyone without prior coding experience who want to learn HTML email development",
        "Designers who want to code their email design in HTML and CSS"
      ]
    },
    {
      "title": "Mastering Laravel 10 Query Builder, Eloquent & Relationships",
      "url": "https://www.udemy.com/course/mastering-laravel-10-query-builder-eloquent-relationships/",
      "bio": "From ZERO to Hero Using Migrations, Factories, Seeders, Query Builder, Eloquent ORM, Relationships & Polymorphism!",
      "objectives": [
        "Laravel's database configuration",
        "Learn to work with Migrations",
        "Learn how and when to use Seeders",
        "Learn how and when to use Factories",
        "Understand the Laravel Query Builder",
        "Learn how to construct SQL queries using the Query Builder",
        "Learn how to use the Query Builder to perform CRUD operations on the database",
        "Understand how to use the Query Builder to build complex queries with conditional logic and dynamic filters",
        "Laravel databases and Eloquent ORM",
        "Learn how to use Eloquent to create, read, update, and delete records",
        "Learn how to use Eloquent correctly to query data from the database",
        "Learn how and when to use relationships",
        "Learn how to use Eloquent to query polymorphic relationships",
        "Learn Eager Loading vs Lazy Loading"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Course structure",
          "Source code"
        ],
        "Mastering Migrations": [
          "Project & database setup",
          "Database configuration file",
          "What are migrations and how do they work?",
          "Creating our first migration",
          "Running migrations & different options",
          "Column modifiers",
          "Squashing migrations",
          "Modifying Columns",
          "Renaming Columns",
          "Dropping Columns",
          "Migrations Cleanup",
          "Chapter Quiz!"
        ],
        "Mastering Factories & Seeders": [
          "Factories vs Seeders - What is the difference?",
          "Defining our first Factory",
          "Using a Factory through a Seeder",
          "Using a Factory through Artisan Tinker",
          "Defining our first Seeder",
          "Using a JSON file to read Data for our Seeders",
          "Calling Multiple Seeders",
          "Chapter Quiz!"
        ],
        "Mastering the Query Builder [PART 1]": [
          "Primary & Foreign Keys",
          "Introduction to the Query Builder",
          "First, Value and Find Methods",
          "Retrieving a List of Column Values",
          "Inserts Through the Query Builder",
          "Insert & Get Id Through the Query Builder",
          "Updating Through the Query Builder",
          "Deleting Through the Query Builder",
          "Aggregates Methods",
          "whereNot & orWhereNot",
          "Determining if Records Exist",
          "whereBetween & whereNotBetween Methods",
          "Debugging Through the Query Builder",
          "Chapter Quiz!"
        ],
        "Mastering the Query Builder [PART 2]": [
          "Database Transactions",
          "Pessimistic Locking",
          "Chunking Data",
          "Streaming Results Lazily",
          "Raw Methods",
          "Ordering Through the Query Builder",
          "Full Text indexes",
          "Limit & Offset Through the Query Builder",
          "Conditional Clauses",
          "Removing Existing Ordering",
          "Chapter Quiz!",
          "Using the paginate() method",
          "Using the simplePaginate() method",
          "Using the cursorPaginate() method",
          "Chapter Quiz!"
        ],
        "Mastering Eloquent ORM": [
          "Introduction to Eloquent",
          "Eloquent Model Conventions",
          "The $fillable And $guarded Properties",
          "Building Queries",
          "Retrieving Single Models",
          "Inserting / Creating Models",
          "Retrieving All Models",
          "firstOrCreate & firstOrNew",
          "Updating Models",
          "Attribute Changes [isDirty, isClean, & wasChanged]",
          "UpdateOrCreate & Upserting Models",
          "Deleting Models",
          "Soft Deleting Models",
          "Pruning Models",
          "Replicating Models",
          "Global Scopes",
          "Local Scopes",
          "Dynamic Scopes",
          "Using a Trait to store Scopes",
          "Chapter Quiz!"
        ],
        "Mastering Relationships [PART 1]": [
          "What are Relationships?",
          "One to One Relationship",
          "One to Many / Belongs To Relationship",
          "Many to Many Relationship",
          "Eager Loading",
          "Has one Through Relationship",
          "Has One of Many Relationship",
          "Has Many Through Relationship",
          "Chapter Quiz!"
        ],
        "Mastering Advanced Relationships [PART 2]": [
          "What are Polymorphic Relationships?",
          "One to One Polymorphic Relationship",
          "One to Many Polymorphic Relationship",
          "One of Many Polymorphic Relationship",
          "Many to Many Polymorphic Relationship",
          "Chapter Quiz!"
        ],
        "Create a Advanced Laravel Blog": [
          "Project Setup",
          "Installing Laravel Breeze",
          "Defining Migrations",
          "Defining Models / Relationships",
          "Creating Models, Controllers, Factories & Migrations",
          "Inserting Data Using Factories & Seeders",
          "Setting up Article Routes",
          "Setting up The Frontend Pages",
          "The index() Method",
          "The show() Method",
          "The create() & store() Methods",
          "The edit() & update() Methods",
          "The destroy() method",
          "Using Policies For Unauthorized Users"
        ]
      },
      "requirements": [
        "Understanding beginner topics in MySQL",
        "How to set up a MySQL Database",
        "Procedural Programming in PHP knowledge",
        "Object-oriented PHP knowledge",
        "Understand how the Laravel framework operates",
        "Understand how the Model-View-Controller (MVC) framework works"
      ],
      "description": "Are you struggling with Laravel databases and Eloquent? Do you want to learn how to easily manage your database with migrations and seeders? Look no further than Code With Dary's \"Mastering Laravel Databases & Eloquent\" course on Udemy! This comprehensive course covers the ins and outs of Factories, Seeders, Migrations, Query Builder, Eloquent, and relationships in Laravel 10. With Code With Dary's expert guidance, you'll learn how to efficiently manage your database and build powerful, scalable applications. Don't miss out on this opportunity to take your Laravel skills to the next level - enroll in \"Mastering Laravel 10 Query Builder, Eloquent & Relationships\" today!\n\n\nWhat is Laravel?\nLaravel is the go-to PHP web application framework for developers. With its extensive set of features and tools, Laravel enables developers to create web applications in a fast and efficient manner. One of the standout features of Laravel is its powerful database management system, which runs on top of the Eloquent ORM. Using Laravel and Eloquent, developers can seamlessly perform CRUD operations on the database, as well as execute complex queries with ease. Learning Laravel and Eloquent is a must for any PHP developer who needs to build modern, scalable web applications with confidence.\n\n\nWhy is Laravel so popular?\nLaravel is popular because it provides developers with a powerful set of tools and features that make it easy to build modern, scalable web applications. It has a robust database management system that runs on top of the Eloquent ORM, which allows developers to easily perform CRUD operations on the database and execute complex queries. Laravel also has a large and active community of developers, which means that there are many resources available for learning and troubleshooting. Additionally, Laravel is easy to learn and use, which makes it a great choice for developers of all skill levels.\n\n\nWho is this course for?\nSome people may find Eloquent ORM difficult because it has a lot of features and can take time to fully understand. Additionally, working with complex relationships between database tables can sometimes be challenging. However, with practice and experience, developers can become proficient in using Eloquent to manage databases in Laravel applications. This course will teach you everything in depth about Laravel databases, Query Builder, and Eloquent! I do expect you to have knowledge in Laravel before starting this course, since we’re going to focus purely on databases and eloquent.\n\n\nTools we will be using\nWe need to use a code editor for this task. It doesn't matter which one you use. I prefer using tools such as Ray from Spatie and Tinkerwell from BeyondCode. Both products are paid, but not required for this task. I use them in this course to make data outputting easier and to show you query speed, which can be compared to other queries.",
      "target_audience": [
        "Laravel developers who want to sharpen their Query Builder and Eloquent skills.",
        "Laravel developers who want to specialize the Query Builder.",
        "Laravel developers who struggle with databases and Eloquent",
        "Laravel developers who lack a strong understanding of relationships"
      ]
    },
    {
      "title": "Mastering Django 5.0 & DRF - The Complete Reference Guide",
      "url": "https://www.udemy.com/course/masteringdjango/",
      "bio": "Learn Django,Django ORM,Django Signals and Django Rest Framework (DRF) - Step By Step",
      "objectives": [
        "Learn How To Setup Development Environment for Django Development",
        "Understanding MVT Architectural Pattern",
        "Learn How to work with various Built-in Template Tags of Django",
        "Learn How to work with various Built-in Filters of Django",
        "Learn How to Develop Base or Master Pages",
        "Learn How to Create and Render Partial Views",
        "Learn How to Create Models, Views, Forms and Templates",
        "Understanding Security Vectors",
        "Learn How to Implement Transaction Support",
        "Learn How to develop data driven Pages using Django ORM",
        "Learn How to implement Pagination, Sorting and Filter functionality",
        "Learn How to create intuitive Reports",
        "Learn How to perform Bulk Insert,Bulk Update and Bulk Delete Operations",
        "Learn How to export data to Excel,CSV,PDF formats",
        "Learn How to Perform Form Validations",
        "Learn How to Develop and Consume Web API Core",
        "Learn How to implement Authentication and Authorization",
        "Learn How to Deploy Django Web Application"
      ],
      "course_content": {
        "Django - The Big Picture": [
          "Preview of Entire Course in 23 Mins",
          "Course Support For Learners",
          "Introduction To Django Web Framework",
          "Python and Django Version History",
          "Installing Python",
          "Creating Virtual Environment",
          "What is PIP?",
          "Installing Django",
          "Listing out installed packages",
          "Installing an Editor",
          "Installing Useful Extensions for Visual Studio Code",
          "Complete Course Exercise Files"
        ],
        "Getting Ready With Django Sample Project": [
          "Creating Django Project"
        ],
        "Getting Ready with Django Sample Application": [
          "Creating Django Application",
          "Configuring App Level & Project Level Routing",
          "Creating a new Function Based View - 1",
          "Creating a new Function Based View - 2",
          "Accessing QueryString Values inside a View",
          "Understanding Django Project Folder Structure",
          "Understanding Django Application Folder Structure"
        ],
        "Django Request and Response Life Cycle": [
          "Understanding Request Life Cycle"
        ],
        "Working with Templates": [
          "Creating and Configuring Templates folder",
          "Creating a View to Render Template",
          "Creating a Template File"
        ],
        "Understanding Debugging": [
          "Debugging our Application inside Visual Studio Code"
        ],
        "Implementing Logging": [
          "Overview of Logging Levels, Logging Attributes",
          "Configuring Logging Handlers and Formatters",
          "Creating Custom Loggers"
        ],
        "Working with Multiple Apps": [
          "Creating Multiple Applications inside a Django project"
        ],
        "Working with built-in Template Tags": [
          "Working with IF Template Tag - Part 1",
          "Working with IF Template Tag - Part 2",
          "Working with FOR Template Tag",
          "Rendering Data using various HTML Form Controls",
          "Working with Nested For Loops"
        ],
        "Consuming RESTAPI": [
          "Rendering All Rows using Bootstrap",
          "Rendering All Rows using Bootstrap Card Component"
        ]
      },
      "requirements": [
        "Visual Studio Code Editor, Python,Django",
        "Basic Knowledge of Python,JavaScript,jQuery,CSS,Bootstrap",
        "Basic Knowledge of any SQL Database"
      ],
      "description": "Django is free, open source and written in Python.\nDjango is a Python framework that makes it easier to create dynamic web sites using Python.\nDjango follows the MVT design pattern (Model View Template). Django was designed to help developers take applications from concept to completion as quickly as possible.\nWith Django, you can take web applications from concept to launch in a matter of hours. Django takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel.\nDjango includes dozens of extras you can use to handle common web development tasks. Django takes care of user authentication, content administration, site maps, RSS feeds, and many more tasks — right out of the box.\nDjango takes security seriously and helps developers avoid many common security mistakes, such as SQL injection, cross-site scripting, cross-site request forgery and clickjacking.\nDjango user authentication system provides a secure way to manage user accounts and passwords. Some of the busiest sites on the planet use Django’s ability to quickly and flexibly scale to meet the heaviest traffic demands. Companies, organizations and governments have used Django to build all sorts of things — from content management systems to social networks to scientific computing platforms.\nThis course provides developers with a thorough knowledge in developing Web Applications using Django MVT architectural Pattern.\nIn this course by development expert Kameswara Sarma Uppuluri, you'll learn essential concepts that you need to know to build Modern Web Applications using Django 5.0.\nThis course provides step-by-step walk-throughs and coding demos that you're encouraged to code along with to enhance the learning process.\nThis course is broken down into 39 Modules with each module providing source code so that you can follow along with Kameswara Sarma Uppuluri.",
      "target_audience": [
        "This course is for all web developers who want to learn Django or enhance their existing Django skills to the next level."
      ]
    },
    {
      "title": "Ember.js Bootcamp 2023: Learn Ember JS in only 3 days",
      "url": "https://www.udemy.com/course/ember-js/",
      "bio": "Build comprehensive web applications using the Ember.js frontend framework. Learn Ember JS from scratch in only 3 days.",
      "objectives": [
        "Learn Ember JS 5.3.0 (2023) from scratch",
        "Build comprehensive web applications",
        "Understand the ember-cli, routing and components",
        "Take your applications to the next level using services, dependency injection and ember-data",
        "Understand what's going on under the hood using the ember inspector plugin"
      ],
      "course_content": {
        "Day 1: Master the key fundamentals of Ember.js": [
          "0a - First project overview",
          "Setting up the development environment",
          "Source Code: Todo Application",
          "Generating and starting your first ember project",
          "Understanding the project structure",
          "Creating the todo route and understanding the outlet",
          "Configuring a route in the router",
          "Creating the todos controller",
          "Using a loop in handlebars",
          "Tracking properties with the tracked decorator",
          "Using the ember inspector extension",
          "Creating an action to get the new todo title",
          "Creating a new todo with another action",
          "Styling the application",
          "Recap of your first application",
          "Quiz 1: Ember Fundamentals"
        ],
        "Day 2: Recipe-Book Part 1": [
          "Recipe Book Application Overview",
          "Source Code: Recipe Book Application",
          "Creating and initializing the recipe-book project",
          "Creating the recipe model",
          "Loading recipes from a json file using the routes model hook",
          "Transforming the raw recipe data using the ember data store and the ORM",
          "Creating the recipe short overview component",
          "Passing data in our component",
          "Creating and setting up the recipe details route",
          "Using LinkTo to navigate the user",
          "Avoid reloading the data store",
          "Loading up a specific record (recipe) in the store by id",
          "Understanding a full page refresh related to data and services",
          "Creating the recipe data service",
          "Showing all the detailed recipe data in the template",
          "Ember Advanced I"
        ],
        "Day 3: Recipe-Book Part 2": [
          "Create a route and controller for creating new recipes",
          "Building the form to create a recipe",
          "Creating the actions to create a new recipe",
          "Connecting the form and the controller",
          "Saving new recipes in the local storage",
          "Loading recipes from the local storage and assigning GUIDs",
          "Refactoring the code",
          "Building a navigation bar",
          "Creating the ui for the favorite functionality",
          "Service extensions for the favorite functionality",
          "Implementing the favorite service methods",
          "Using a components constructor to initially load data",
          "Creating the favorites route and showing all favorite recipes inside of it",
          "Test your knowledge by building a new functionality on your own"
        ]
      },
      "requirements": [
        "Only basic programming experiences needed (simple javascript or typescript experience is fine)"
      ],
      "description": "Dive Deep into Ember JS (v5.3.0 - 2023) Through Hands-On Learning!\n\n\nMaster Ember JS in a Flash with this Comprehensive Course!\n\n\nBuilt for the hustling developers, I get that time is gold. This course is tailored to give you the essence of Ember JS, ensuring you can build production-grade applications without slogging through fluff.\n\n\nHere’s a Snapshot of What You’ll Master:\nMastery of the ember-cli\nRoute creation and configuration\nCrafting beautiful templates with hbs (handlebars)\nEfficient data binding\nCrafting reusable components\nAPI data retrieval\nDelving into ember-data (store)\nCrafting and injecting services\nStrategies for maintaining scalable and maintainable Ember projects\n\n\nHands-On Learning: Through the journey, we'll collaboratively build diverse web applications, each one more intricate than the last. I believe in learning by doing – start strong, build right.\n\n\nAre You New to Web Development? No Sweat! While a tad bit of programming knowledge is a bonus, we've got the backs of complete beginners too!\n\n\nWith your enrollment, unlock:\nSupport Forum Access\nProject Source Code\nInsightful PDF Handouts\nEngaging Quizzes\nThought-provoking Programming Exercises\nA Guide to Best Practices in Ember JS\n\n\nSeeking a Swift, Clear-cut Ember JS Learning Experience? Look no further! Our course is streamlined, engaging, and, best of all, effective.\n\n\nEnroll Today and Master Ember JS in Just 3 Days! Can’t wait to see you in class!",
      "target_audience": [
        "Every developer that wants to learn frontend development using Ember JS",
        "Every developer that wants to become a web developer",
        "Developers that need to learn ember for their job/business",
        "Every developer that wants to learn a brilliant alternative to react or angular"
      ]
    },
    {
      "title": "JavaScript, jQuery & TypeScript: Full-Stack Web Development",
      "url": "https://www.udemy.com/course/javascript-jquery-typescript-full-stack-web-development/",
      "bio": "Master Full-Stack Web Development with JavaScript, jQuery & TypeScript through Hands-On Projects and Real-World Example.",
      "objectives": [
        "Overview and History of JavaScript, jQuery, TypeScript",
        "Setting Up jQuery in Your Projects",
        "Add and Remove Elements",
        "DOM Manipulation",
        "Animations and Effects",
        "jQuery Plugins and UI Components",
        "JavaScript Syntax and Structure",
        "Variables, Data Types, and Operators",
        "Control Flow: Conditionals and Loops",
        "Arrays and Objects",
        "Booleans",
        "Asynchronous Programming (Callbacks, Promises, Async/Await)",
        "Error Handling and Debugging",
        "Setting Up TypeScript Environment",
        "Type Annotations and Inference",
        "Interfaces and Classes",
        "TypeScript with React/Angular"
      ],
      "course_content": {
        "Java Scripts": [
          "JavaScript Syntax and Structure",
          "Variables, Data Types, and Operators",
          "Functions and Scope",
          "Control Flow: Conditionals and Loops",
          "Object Definition",
          "Arrays and Objects",
          "Strings",
          "Booleans",
          "IF, Else, and Else IF",
          "While Loop",
          "JSON",
          "Regular Expressions",
          "Asynchronous Programming (Callbacks, Promises, Async/Await)",
          "Error Handling and Debugging",
          "JavaScript Design Patterns",
          "JS Project - Interactive To-Do List"
        ],
        "jQuery": [
          "Setting Up jQuery in Your Projects",
          "Basic jQuery Syntax and Selectors",
          "Get & Set Content Attributes",
          "Get and Set CSS Classes",
          "Add and Remove Elements",
          "Siblings & Filters",
          "noConflict() Method",
          "DOM Manipulation",
          "Event Handling with jQuery",
          "Replacing Elements and Content",
          "Animations and Effects",
          "AJAX load() Method",
          "AJAX with jQuery",
          "jQuery Plugins and UI Components",
          "JQ Project - Image Slider",
          "JQ Project - Form Validation and Submission"
        ],
        "TypeScript": [
          "Setting Up TypeScript Environment",
          "Basic TypeScript Syntax and Types",
          "Type Annotations and Inference",
          "Interfaces and Classes",
          "Modules and Namespaces",
          "Generics",
          "Decorators",
          "TypeScript with React/Angular",
          "TS Project - Building a Simple Calculator"
        ]
      },
      "requirements": [
        "No prior knowledge is required!"
      ],
      "description": "Become a front-end development expert with this comprehensive course that covers JavaScript, jQuery, and TypeScript. Whether you're a beginner or an experienced developer looking to refine your skills, this course provides the knowledge and practical experience you need to build dynamic, interactive, and responsive web applications.\n\n\nStarting with JavaScript, you’ll learn the core language that powers the web, mastering everything from basic syntax to advanced concepts like closures and asynchronous programming. You’ll then explore jQuery, the popular JavaScript library, to simplify DOM manipulation, event handling, and animation. Finally, you’ll dive into TypeScript, a powerful typed superset of JavaScript that enhances code quality and development efficiency.\n\n\nThrough hands-on projects, real-world examples, and expert guidance, this course will equip you with the skills to create robust front-end applications that deliver a seamless user experience. By the end of the course, you’ll have a deep understanding of JavaScript, jQuery, and TypeScript, making you a versatile and highly sought-after front-end developer.\n\n\nWhat You'll Learn:\nJavaScript Fundamentals: Understand the core concepts of JavaScript, including variables, functions, loops, and DOM manipulation.\nAdvanced JavaScript: Master complex topics like closures, prototypes, event delegation, and asynchronous programming with promises and async/await.\njQuery Essentials: Learn to simplify your JavaScript code with jQuery, focusing on DOM traversal, event handling, and creating dynamic web content.\nTypeScript Development: Explore the advantages of TypeScript, from static typing to advanced features like interfaces, generics, and modules, to write safer, more maintainable code.\nReal-World Projects: Apply your skills to build interactive web applications, dynamic forms, and responsive user interfaces.\nBest Practices: Adopt industry-standard practices for writing clean, efficient, and maintainable front-end code.\n\n\nWho This Course is For:\nAspiring front-end developers eager to learn the essential tools and technologies for web development.\nJavaScript developers looking to expand their skills with jQuery and TypeScript.\nWeb developers who want to enhance their ability to create interactive and dynamic web applications.\nAnyone interested in mastering the key technologies that drive modern front-end development.\n\n\nEnrolling in this course will equip you with the essential skills to excel in front-end development. By mastering JavaScript, jQuery, and TypeScript, you’ll be able to build dynamic and responsive web applications that stand out in today’s competitive digital landscape. Start your journey to front-end mastery today!",
      "target_audience": [
        "Anyone interested in mastering the key technologies that drive modern front-end development."
      ]
    },
    {
      "title": "Migrate from WordPress to Hugo, Step by Step",
      "url": "https://www.udemy.com/course/wp-to-hugo/",
      "bio": "Get a handle on Hugo, the world's fastest static site generator, as we migrate from WordPress to a shiny new Hugo site",
      "objectives": [
        "Migrate a blog from the WordPress platform to an ultra-fast website using the Hugo static site generator.",
        "Leverage your HTML/CSS skills to create custom Hugo themes.",
        "Learn Hugo as you go!",
        "Determine whether or not Hugo will work for your website or blog.",
        "Understand how to use Hugo to easily post content to your blog.",
        "Understand some solid hosting options for your site and how to configure each one."
      ],
      "course_content": {},
      "requirements": [
        "An internet-connected computer running Windows, Mac, or Linux.",
        "Basic coding skills are recommended if you plan on building a Hugo theme.",
        "Basic familiarity with the command line is recommended, though not strictly necessary."
      ],
      "description": "Hugo is a super fast static site generator that's here to save you time and make your site fast, secure, and inexpensive to host. There's just one catch, your current website is already on WordPress™. This course will guide you through safely migrating your site and your workflow from WordPress to Hugo.\nNOTE: Some of the earlier course content is out of date, because Hugo has continued to advance since I started creating this course a few years ago. There is still a TON of great content here, but a little \"elbow grease\" may be required to get things working on your machine.\nNOTE2: I don't have time to finish and update this course.  :'(  If you are an experienced course content creator and would like to take over the superhero cape, reach out to me on LinkedIn.\nBackground:\nWordPress is the most popular website management system in the world. And with good reason: it's easy to get up and running, and there is a rich ecosystem of beautiful themes and feature-enhancing plugins.\nHowever, (queue the eerie mood music), WordPress has is faults...\nEvery year, security vulnerabilities are discovered in WordPress and its underlying programming language, PHP.\nContent is served dynamically, so site performance suffers. Getting a solid PageSpeed ranking requires lots of of time, plugins, and hacks.\nGood hosting options can be quite expensive.\nIts database back-end limits hosting options and complicates backup and recovery.\nBut here's a secret you probably already know: Today, the vast majority of sites don't need to be on WordPress. Most sites serve static, or unchanging, content. For example, I'm doing good if I can publish to my blog once a month or so. So why was I using a Content Management System (CMS) like WordPress? In my case, I didn't want to have to write my posts as HTML, upload them over FTP, update index pages to include my new post, manually add pagination, headers, footers, format images, etc. WordPress automated all of this. For the most part, all I had to do was focus on the content; WordPress took care of the rest. It was glorious!\nThat was the early 2000s. Nowadays we have static site generators like Hugo! With Hugo, I just write my blog post. Then Hugo generates my entire site, including all of those updated links, headers, footers, even a sitemap. And get this: it does it in about 1 second. Then, with a single command I can push my updated site to a service like Netlify, and my new post is live within a few minutes.\n\nWith Hugo, you get:\nUltra-fast site generation\nFree hosting options\nMore security because there is no database or run-time to hack\nStatic pages are faster to serve and easy to cache. A faster site means better SEO.\nBackups are essentially unnecessary if you store your repo on GitHub or GitLab.\nChange tracking comes for free if you store your site in a Git repo.\nOf course, for long-time WordPress users like myself, a number of questions come up:\nWhat about my SEO plugin (yoast)? (Coming)\nWhat about my syntax highlighting plugin (for tech blogs)? (Coming)\nWhat about my comments!? (Coming)\nWhat about my cool theme? Can I port it Hugo? (In progress)\nWhat about help with spelling, grammar, writing style? (Coming)\nWhat about advanced plugins for asset bundling, minification, etc? (In progress)\nLearn all this and more with this comprehensive course. Enjoy!",
      "target_audience": [
        "Web developers interested in learning Hugo",
        "Anyone with a slow WordPress site looking for greatly increased performance and enhanced SEO.",
        "Anyone tired of constantly patching WordPress' security vulnerabilities.",
        "Anyone looking for free (or extremely low-cost) hosting options for their website."
      ]
    },
    {
      "title": "Learn To Program JavaScript (in ten easy steps)",
      "url": "https://www.udemy.com/course/learn-to-program-javascript-in-ten-easy-steps/",
      "bio": "The simplest way to learn to program JavaScript - the language of the web.",
      "objectives": [
        "You will learn to program JavaScript from the ground up",
        "Source code archive contains all sample programs",
        "Course eBook has ten chapters - one for each of the ten steps"
      ],
      "course_content": {},
      "requirements": [
        "You will need a web browser and a code editor (suitable free software is suggested in the course)"
      ],
      "description": "Learn To Program JavaScript (in ten easy steps) is suitable for beginner programmers. Step-by-step it explains how to write JavaScript code to run in a web browser on Windows, Linux or Mac OS X.\nJavaScript is the language of the web. If you need to program web sites to run on desktop computers or mobile devices, you have to know JavaScript.\nThis course explains all you need to know in order to write JavaScript and make sense of other people’s JavaScript code. Every step of the way you can follow along with ready-to-run code in in short, easy-to-understand JavaScript programs.\nYou will begin by learning the core features of programming – variables, functions and data types. You will move on to learn about specific capabilities of JavaScript – how to use it to automate web pages, hide email addresses, swap stylesheets interactively; how to load XML data to create so-called AJAX applications, how to animate images and use some of the drawing capabilities of HTML5.\nThe sample projects are all provided ready for you to download, run and modify. The course also includes a course eBook, The Little Book Of JavaScript, that provides even more information on the topics being discussed.\nThe course instructor,Huw Collingbourne, is Director of Technology with SapphireSteel Software, a company that specialises in Visual Studio development tools for professional programmers. Founder of Bitwise Courses  – producers of multimedia instruction courses – Huw is one of the top-selling programming instructors on Udemy,.\nLearn To Program JavaScript (in ten easy steps) is the fastest and simplest way to learn to program web pages like a pro.",
      "target_audience": [
        "Newcomers to JavaScript programming",
        "Beginner web developers",
        "Anyone who needs to learn JavaScript quickly"
      ]
    },
    {
      "title": "Design 11 applications in Java from Scratch",
      "url": "https://www.udemy.com/course/javatutorial/",
      "bio": "Java is the most hottest & in demand skill in every technology sector. Buy this course and master in Java",
      "objectives": [
        "Learn about What is Java? How to develop applications in java & how to make applications beautiful in java with colour & image combination",
        "This course is designed to teach you Java with Java 8 whether you are an experienced programmer or just getting started.",
        "If you always wanted to learn Java but always afraid to get some poor old training then this course is for you since the used Java version in this course is the latest.",
        "Anyone who wants to boost his/her career to be one of those many successful Java developers that are making over $103,786/year right now!"
      ],
      "course_content": {
        "Getting Started": [
          "What is Java?",
          "Installing & Setting up an Environment"
        ],
        "Hello World": [
          "HELLO WORLD",
          "Hello World Exercise Source File.",
          "Hello world application with exit button.",
          "Hello World Application Exercise File"
        ],
        "Basic Data types": [
          "Basic Data Types with Celsius fehrenhite calculator.",
          "Celsius fahrenhite calculator exercise file",
          "Code review of Data types",
          "Data Type Review Exercise File"
        ],
        "Basics of Object & Classes": [
          "OBJECT & CLASSES",
          "JohnyDepp (Object & Classes) Exercise File"
        ],
        "Record Keeper Realtime Application": [
          "Record keeperGUI",
          "Record Keeper Exercise File"
        ],
        "Operators in Java": [
          "Arithmatic operators and string addition",
          "Arithmetic Operators Exercise File",
          "Unary Operators",
          "Unary Operators Exercise File",
          "Relational Operators",
          "Relational Operator's Exercise File",
          "Conditional operators",
          "Conditional Operator Exercise File"
        ],
        "Realtime Calculator Application in Java with Interface": [
          "Calculator Interface Building (Part-1)",
          "Calculator, Codes to make it running like realtime. (Part-2)",
          "Exercise file of Calculator GUI"
        ],
        "Loops in Java": [
          "For Loops with Advance Example",
          "While Loops in Java",
          "Do while Loops in Java"
        ],
        "API in Java": [
          "API (Application Programming Interface)"
        ],
        "Digital Clock Application": [
          "Realtime Digital Clock application with loops",
          "Clock : Source code file"
        ]
      },
      "requirements": [
        "Basic fluency with computers"
      ],
      "description": "Update 2 : Billing application on a student's demand, Complete section added on 1st January 2016.\n\nUpdate 1 : How to make a tabbed panel in your software added on 30th Dec. 2015\n\nJava is the world most popular language and it powers billions of devices and systems worldwide. We bring together best of Java Core Conceptual Training with our project building theme after almost every section. It is one of the most sought after programming skill and provide countless jobs and freelance opportunities.\n\nBasic Hello World application with interface.\nCelsius Fahrenheit\nConverters\nRecord Keeper application\nUser Input output application\nRealtime Calculator application with interface\nDigital Clock with auto time update\nImage application\nMessage Popping application\nEstate business system\nBilling application for offline store.",
      "target_audience": [
        "Anyone who want to learn Java & anyone having a wish of developing softwares.",
        "Learn proper development practices Build Projects using java"
      ]
    },
    {
      "title": "Complete CodeIgniter 3 Series with Bootstrap 4 + Projects",
      "url": "https://www.udemy.com/course/complete-codeigniter-3-series-with-bootstrap-4-projects/",
      "bio": "Learn step-by-step Codeigniter 3 with Bootstrap 4 from scratch with advanced concepts like cache and projects",
      "objectives": [
        "Build website from scratch using CodeIgnitedr",
        "Signup System",
        "Login system",
        "Crud Operation in CodeIgniter",
        "Why you break your HTML content into multiple parts",
        "ORM(Object Relational Mapping)",
        "How to embed Bootstrap 4",
        "How to create front-end using Bootstrap 4",
        "How to validate your user while working on Session",
        "How to use CodeIgniter libraries, Helpers, Models",
        "How to use/implement the MVC approach",
        "How to send data using AJAX",
        "How to use jQuery and javascript",
        "Custom Routes",
        "Create page system like WordPress"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Server (XAMPP, WAMP)",
        "Basic knowledge of Programming",
        "Basic knowledge of CorePHP(PHP4) and PHP5",
        "Basic knowledge of HTML",
        "Basic knowledge SQL",
        "PHP 5.x is required (Not PHP7)"
      ],
      "description": "In this series, you will learn where to start using CodeIgniter with the world's robust front-end framework, Bootstrap 4.\nIn this series, we will cover every fundamental concept; once we complete the basics, I will teach you how to create web applications and Websites.\nI will give you some template-related concepts and explain why you need to break your HTML content into multiple views.\nI will teach you how to use Helpers, libraries, and query builders; you will learn how to create your application using MVC (Model View Controller) approach. You will learn how to validate your forms from the server side, and I will give you some security tips. You will also learn CodeIgniter's practical work with Bootstrap 4; I will teach you how to send/receive data with AJAX(without page refresh). We use jQuery to send data from the client to Server with AJAX.\nI will give some concepts related to ORM(Object Relational Mapping)\nYou will learn how you can create a Login and Sign up for the system in this series; I will perform CRUD operation to understand the essential process of CodeIgniter quickly. I will polish your skills, and you will realize it.\n\n\nIn the Advance Codeigniter, I will teach you how to create an SEO-friendly URL using Routes.\nWe will create a paging system like WordPress to understand the concepts of dynamic routes quickly. We will discuss the multiple files uploading in CodeIgniter and how to upload the files using AJAX. I will cover the cache mechanism of how and why we use it.\nWe will also discuss the third-party templates that integrate with your system; I will teach you how to create the admin panel to quickly understand how to manage your site from a single admin panel.\nBefore starting the second project, you must be familiar with AJAX In Codeigniter. I will teach you AJAX to quickly understand how to perform CRUD operations in Codeigniter using AJAX.\n\n\nIn the second project, you will learn how to create an E-commerce system with jquery and AJAX using CodeIgniter.\nAnd Finally, what about the latest update of Codeigniter 4..? Yes, we are going to cover Codeigniter 4. In this series, while learning Codeigniter 4, we start from zero. How can you download the Codeigniter, and how many ways is it available to download?\n\n\nWe also cover new things like data modeling in Codeigniter 4, Data seeding Database Seeding, and even the modern concepts of creating models, controllers, and views.\nSome impressive functionality like pagination, services library, and env files also discuss the new folder structure in Codeigniter 4.\nAnd the remarkable thing in this series is the project work; yes, you will learn how to create/design your eCommerce system from scratch.\n\n\nThat means the admin panel where you can add your products, specs, etc., and your user panel can view the orders, favorite items, and much more.\nAnd how you can embed the third-party templates in Codeigniter and make that template dynamic.\nLearn many more things in this series because I always provide quality education. :)",
      "target_audience": [
        "Anyone who wants to learn a PHP framework",
        "Anyone who want to learn how to use bootstrap in CodeIgniter",
        "Anyone who want to learn Web development /Web Application",
        "Anyone who wants to create a Web Application / Website from scratch"
      ]
    },
    {
      "title": "PHPUnit - Unit & Selenium Testing For PHP Developers",
      "url": "https://www.udemy.com/course/phpunit-unit-selenium-testing-for-php-developers/",
      "bio": "Includes Test-Driven Development (TDD) by Creating Real Life App with PHP and PHPUnit and Selenium Acceptance Testing",
      "objectives": [
        "You will get familiar with different types of testing code",
        "You will learn PHPUnit",
        "You will learn Selenium for PHPUnit",
        "You will write testable code",
        "You will write maintainable code",
        "You will find bugs quicker in your code",
        "You will save your time by performing fast automated tests",
        "You will be able to write fast automated tests for PHP applications",
        "You will practice PHPUnit knowledge by doing quizes, coding excersises, etc.",
        "You will build from scratch a real world application in PHP using Test Driven Development (TDD) approach",
        "You will learn how to test api clients using PHPUnit & Guzzle"
      ],
      "course_content": {
        "Introduction": [
          "What is PHPUnit and why it is very useful thing to learn. How you will learn it",
          "Let's see PHPUnit in action!",
          "Course structure",
          "Overview of an application that we will build using PHPUnit and TDD approach",
          "How to benefit from these course as much as is possible",
          "How the course videos & resources look like"
        ],
        "PHPUnit basics": [
          "PHPUnit requirements and installation using Composer tool",
          "PHPUnit command line",
          "Write our first PHPUnit test",
          "Error output",
          "TestDox - Agile style test results",
          "Most common assertions in PHPUnit",
          "Most common annotations in PHPUnit",
          "Data providers",
          "Test dependencies",
          "Test errors and exceptions",
          "Assertions quiz",
          "Coding exercice"
        ],
        "PHPUnit configuration": [
          "Apply coloring console test output and testdox automatically",
          "Organize test suite using XML configuration file",
          "Create PHP constants in XML configuration file"
        ],
        "PHPUnit - dive deeper": [
          "Fixtures - setup initial state before testing",
          "Test private & protected attributes",
          "Use anonymous classes to mock objects without setter method",
          "Test private & protected methods",
          "PHPUnit with interfaces",
          "PHPUnit with abstract classes",
          "Test static methods",
          "Risky, incomplete and skipped tests",
          "Custom assertions",
          "Code Coverage Analysis",
          "Write a valid PHPUnit test file",
          "Write simple PHPUnit test"
        ],
        "Test Doubles & mocking real objects - replacing real objects for testing": [
          "Stubs",
          "Mock Objects",
          "Mocking traits and abstract classes",
          "Mocking web services",
          "Let's practice making code testable"
        ],
        "Acceptance (not only unit) testing with PHPUnit. Use Selenium": [
          "Different types of tests",
          "Install Selenium WebDriver and create first acceptance test in PHPUnit",
          "Getting elements on websites using Selenium WebDriver",
          "Clicking links using Selenium WebDriver",
          "Setting values for inputs and sending forms using Selenium WebDriver",
          "Mark your test as incomplete. Deal with cookies",
          "Assert delayed content, e.g. loaded by Ajax"
        ],
        "TDD - test driven development with PHPUnit & Selenium": [
          "TDD cycle - test, code, refactor",
          "Slim PHP micro framework crash course (OPTIONAL)",
          "HTML layout for our example app using Zurb Foundation framework",
          "Install and configure PHPUnit & Selenium Web Driver",
          "Test proper strings on the main page",
          "Test confirmation box when trying to delete a category",
          "Assert existing links to edit and delete a category",
          "Click edit link and see proper stuff for this on the website",
          "Test validation of the html form",
          "Test visibility of categories in the menu",
          "Convert database result into nested PHP array - part 1",
          "Convert database result into nested PHP array - part 2",
          "Refactor the code used for testing conversion of database result",
          "Convert PHP array into HTML nested list - part 1",
          "Convert PHP array into HTML nested list - part 2",
          "Install Laravel Eloquent ORM to manage database operations",
          "Use Laravel models to interact with the database",
          "Display categories dynamically from the database",
          "Enable adding child categories to the Laravel Category Model",
          "Convert categories array from database to html nested ul li list",
          "Improve our tests",
          "Delete parent category and its children",
          "Show chosen category dynamically",
          "Understand 4 types of tests",
          "Make input values dynamic when a category is edited",
          "Show categories for html select list dynamically",
          "Test correct parent category for edited one",
          "Test editing category",
          "Test adding a new category",
          "Add redirection to some actions",
          "Practice activity - refactor the code",
          "Practice activity - build this app again with your framework or in plain PHP",
          "Test driven development (TDD) challenge"
        ],
        "Testing REST API's with PHPUnit, Guzzle & Json Server": [
          "Install PHPUnit and Guzzle PHP HTTP client",
          "Testing live api - not recommended",
          "Prepare for right testing - refactor the code",
          "Mock api responses to test read requests",
          "Install Json Server and test GET api request",
          "Test POST and DELETE requests",
          "Test PATCH and PUT requests",
          "Check your knowledge"
        ]
      },
      "requirements": [
        "Object oriented PHP (intermediate)",
        "Composer installed",
        "Server environment installed (like Xampp)",
        "Internet connection",
        "Some experience in PHP web development"
      ],
      "description": "Do you want to be able to test your code and thus become a better programmer?\n\n\nWelcome to the very comprehensive PHPUnit (testing framework for PHP) and Selenium for PHPUnit course. PHPUnit is a tool for testing code written in PHP language. And Selenium is a tool for automating web browsers that we will use in this course to test application interfaces. You will learn not only about unit tests but also what integration, functional and acceptance tests are. Particular emphasis will be placed on php unit testing.\n\n\nCode testing is very important. Here there are most important benefits:\nyou don't waste time as a web developer for manual testing in a web browser\nyou find mistakes in the code faster\nwhat's more, by mastering PHPUnit you will start to write code that is testable (you will learn in the course what is non-testable code!)\nand your code will be easier to maintain, i.e. it will be easier to adapt it to the changes you might need\n\n\nIn short: if you haven't known PHPUnit yet, you'll simply be a better PHP programmer after completing this course. PHPUnit is a very important skill and if you're looking for a job as a PHP developer, it will allow you to increase your chances to get hired.\n\n\nDuring the course, we will be discussing the most important aspects of PHPUnit and Selenium for PHPUnit on practical examples with hands-on coding, such as assertions, data providers, mocks and others (see the curriculum for more information). You will also learn how to test api clients.\n\n\nThe most interesting part of this course is building from scratch a real MVC-based application in PHP and PHPUnit using TDD - Test Driven Development approach. This is an application for managing product multi-level categories - which is not easy to implement. PHPUnit will be particularly useful here. It will be a very comprehensive TDD - not only unit tests but we will also test the user interface of this application using Selenium WebDriver. The HTML template of this application built using the Zurb Foundation Framework will be available to download (not because I think it is the best, just the template for this particular application was easiest to build using Zurb). We will be coding the backend from scratch using Slim Microframework for PHP. We will also use a great package from Laravel called illuminate/database for Laravel Eloquent ORM, thanks to which database operations are very easy.\n\n\nTo better consolidate the acquired knowledge the course includes, in addition to lectures, coding exercises, quizzes, assignments and other practical activities.\n\n\nFor each lecture that requires coding, there are file resources that you can download and copy & paste, but I encourage you to write code from the screen.\n\n\nI promise that you'll be a better PHP developer after completing this PHPUnit course. And even if for some reason you will not like this course, Udemy always offers you a 30-day money back guarantee. But I doubt that you will not like it. I am 100% sure that you will be happy with this course and your PHP code will be better from now!",
      "target_audience": [
        "Everyone who wants to learn PHPUnit and Selenium for PHPUnit",
        "Everyone who wants to write better (testable & maintainable) code in PHP",
        "Everyone who wants to learn TDD - Test Driven Development",
        "Everyone who wants to automate the process of testing user interfaces of PHP apps (UI)",
        "Everyone who wants to increase chances to get hired as a PHP developer",
        "Developers who are bored with manual testing in a web browser while coding",
        "Everyone who wants to practice PHPUnit knowledge"
      ]
    },
    {
      "title": "Build LUIS Powered Chatbot in NodeJS and Azure Bot Service",
      "url": "https://www.udemy.com/course/build-luis-powered-chatbot-in-nodejs-and-azure-bot-service/",
      "bio": "Build natural language powered chatbots with NodeJS, Azure Bot Framework and LUIS; Integrate it with Facebook and Skype",
      "objectives": [
        "Understand various concepts of building chatbots with Bot Builder SDK and LUIS",
        "Build NLP Powered Chatbots with NodeJS, Microsoft Bot Framework and LUIS",
        "Integrate Chatbots with Facebook and Skype",
        "Deploying your chatbot in heroku application platform",
        "Bot Builder SDK Prompt Types and Dialog Models",
        "LUIS - Intents, Entities and Model Training"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Microsoft Bot Builder SDK": [
          "Bot Builder SDK",
          "Bot Builder SDK Demo: Appointment Booking Bot"
        ],
        "LUIS - Language Understanding Intelligent Service": [
          "LUIS - Intents, Entities and API Response",
          "LUIS App Creation"
        ],
        "Build Movie Ticket Booking Bot Powered By LUIS NLP": [
          "Movie Ticket Booking Bot"
        ],
        "Azure Bot Service: Facebook and Skype Integration": [
          "Deploying Bot to Heroku and Facebook & Skype Integration"
        ]
      },
      "requirements": [
        "Its necessary to have basic programming knowledge on Node JS"
      ],
      "description": "How Is This Course Structured?\nThis course is designed to be more practical with lot of coding sessions. At the end of the course, you will be fully equipped with all the necessary tools to write a fully functional chat bots and integrate it with various channels such as Facebook and Skype. And when you finish the course, you will also get the repository links to all the code that we write in this course. All the course content is up-to-date as on 2018.\nThis course will cover Microsoft Bot Framework - Azure Bot Service & Bot Builder SDK, LUIS NLP, Facebook & Skype Integration and Bot Deployment in Heroku\n\nWhy Should You Learn Chat Bots?\nThere used to be a time when Artificial Intelligence (AI) is only seen in Sci-Fi movies. However with advent of innovative new technologies, AI is fast becoming reality in the form of chat bots.\nThanks to Microsoft, IBM, Google, Facebook and other innovative startups who have made this awesome technology available to every developer in the world. You don't need to be a Ph.D anymore to dive into Artificial Intelligence. Anyone with good or no programming knowledge can build chat bots.\nAccording to the latest report from Business Insider, nearly 80% of companies have already used or planned to use chatbots by 2020. The chatbot market size is estimated USD 703.3 million in 2016 and is projected to reach USD 3.1 billion by 2021, at a CAGR of 35.2% from 2016 to 2021.\nThis unprecedented growth in chatbots is now demanding more skilled developers and engineers. You don't want to be left behind. Do you?\nWhat Will You Learn Here?\nYou'll learn how to build a chat bot powered by natural language with Node.JS, Azure Bot Framework (Azure Bot Service & Bot Builder SDK) and LUIS (Language Understanding Intelligent Service).\nTogether we will spend extensive amount of time building following two functional chat bots demonstrating Bot Builder SDK and LUIS Capabilities\n1. Appointment Booking Assistant Bot - Demonstrating Bot Builder SDK Capabilities\n2. Movie Ticket Booking Bot - Demonstrating Bot Builder SDK and LUIS (NLP) Capabilities with Facebook and Skype Integration\nAt the end of this course, you will be able to write your own chat bot and integrate it with Facebook Messenger and Skype.\nWho Am I?\nMy name is Jagadish. I'm entrepreneur, full-stack developer and a software consultant. I have co-founded two startups. One in artificial intelligence and chatbots. The other one is in eCommerce domain.\nI have over 13+ years of experience in Software Development. I have strong expertise in designing and developing scalable enterprise software solutions.",
      "target_audience": [
        "Developers who want build next gen chat bots powered by natural language",
        "Students who are passionate about building chatbots"
      ]
    },
    {
      "title": "Node.Js: REST APIs Development with Loopback",
      "url": "https://www.udemy.com/course/rest-apis-development-with-loopback/",
      "bio": "Step By Step Guide To Building Rest APIs With Loopback, Node.Js, MongoDb, Mysql, And PostgresQL",
      "objectives": [
        "Build Complete Rest Apis In Loopback",
        "Learn Authentication In Loopback",
        "Learn how to use multiple Datasource in Loopback",
        "Learn and Understand Loopback in Depth"
      ],
      "course_content": {
        "Big Picture Of Loopback": [
          "Introduction to Loopback",
          "Installing Nodejs",
          "Source Code",
          "Getting Setup",
          "Understanding API Explorer",
          "Challenge: Customer Model",
          "Solution: Customer Model"
        ],
        "Debugging Loopback Application": [
          "Debugging Loopback In Webstorm",
          "Debugging Loopback In VS Code",
          "Debugging Loopback in Chrome"
        ],
        "Datasources In Loopback": [
          "What is Datasource",
          "Installing MongoDB",
          "Connecting Loopback to MongoDB",
          "Installing Mysql",
          "Connecting Loopback to Mysql",
          "Create Schema from Models",
          "Autoupdate in Loopback",
          "Understanding Automigrate in Loopback",
          "Understanding Autoupdate in Loopback",
          "Understanding Datasources In Loopback",
          "Connecting Loopback to PostgreSQL"
        ],
        "Models In Loopback": [
          "What Is a Loopback Model",
          "Challenge: One To One Relationship",
          "Solution: One To One Relationship",
          "EmbedsMany Relation in Loopback",
          "One To Many Relation in Loopback",
          "Many to Many Relationship In Loopback",
          "Understanding Model in Loopback",
          "One to One Relationship as a Separate model"
        ],
        "Authentication": [
          "Authentication Setup",
          "Restrict all Endpoints",
          "Make a Public Route",
          "Apply ACL to Customer",
          "Understanding Login in Loopback",
          "Understanding ACL In Loopback"
        ],
        "Custom Remote Methods In Loopback": [
          "Create Message Model",
          "Implement CustomCreate in Loopback",
          "Access the current LoggedIn UserId",
          "Add BelongsTo relation with Message and User",
          "Implement CustomFind In Loopback",
          "Filtering Messages",
          "Implement CustomFindById method"
        ],
        "Bonus": [
          "Learn React and Redux by building real world application"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript is Important",
        "Basic knowledge of NodeJs is Important"
      ],
      "description": "LoopBack is a highly-extensible, open-source Node.Js framework that enables you to:\nCreate dynamic end-to-end REST APIs with little or no coding.\nAccess data from Oracle, MySQL, PostgreSQL, MS SQL Server, MongoDB, SOAP and other REST APIs.\nIncorporate model relationships and access controls for complex APIs.\nUse built-in push, geolocation, and file services for mobile apps.\nEasily create client apps using Android, iOS, and JavaScript SDKs.\nRun your application on-premises or in the cloud.\n\n\nLoopBack consists of:\nA library of Node.Js modules.\nYeoman generators for scaffolding applications.\nClient SDKs for iOS, Android, and web clients.\n\n\nLoopBack tools include:\nCommand-line tool loopback-cli to create applications, models, data sources, and so on.\nWhat you will learn:\nGetting started with Loopback from scratch\nFundamentals of Loopback\nWhat are Models and how to build models in Loopback\nWhat are Data sources\nHow to connect Loopback Application to Mysql, MongoDB, PostgreSQL\nHow to Implement Authentication in Loopback\nHow to debug the Loopback Application in Webstorm, VS Code, And Google Chrome\nLearn how Loopback bootstraps the Application\nHow Loopback Application works in under the hood\nHow to create custom remote methods in Loopback",
      "target_audience": [
        "Programmers looking to learn Loopback",
        "Developers who wants to learn REST API Development in NodeJs",
        "Developers who have researched Loopback but have had trouble understanding some concepts"
      ]
    },
    {
      "title": "Learn PHP 7 and Laravel Master Course",
      "url": "https://www.udemy.com/course/learn-php-7-and-laravel-master-course/",
      "bio": "PHP",
      "objectives": [
        "Learn to code with PHP",
        "Build real projects with php and laravel"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "requirements",
          "install php and mysql",
          "Install mamp and mysql for windows",
          "Resources for learning PHP"
        ],
        "Learn PHP 7 Syntax": [
          "Our First Page with Variables",
          "Comments",
          "Data types",
          "Variables and Constants",
          "Variables Quiz",
          "Variables Answers",
          "Strings",
          "String functions",
          "Strings Quiz",
          "Strings Answers",
          "Integer and floating Points",
          "Integer math functions",
          "Operators",
          "Working with Operators",
          "Numbers and Operators Quiz",
          "Answers to Operators and Quiz",
          "Conditionals",
          "Conditionals Quiz",
          "Conditional Answer",
          "Arrays",
          "Arrays Function",
          "Arrays Quiz",
          "Arrays Answers",
          "For Loops",
          "While Loop",
          "Do While Loop",
          "For Each Loop",
          "Creating and Using Functions",
          "Function Quiz",
          "Function Answers",
          "Using Require"
        ],
        "Using Global Variables": [
          "Global Variables and Server Variables",
          "Get and Post Variables",
          "Using Cookies",
          "Using Sessions"
        ],
        "Object Oriented PHP": [
          "Classes in PHP",
          "Extending Classes",
          "Public vs Protected vs Private",
          "Static Properties and Methods",
          "Dependency Injection",
          "Interfaces",
          "Abstract Classes",
          "Method Chaining",
          "Autoload Classes",
          "Namespaces"
        ],
        "Project 1 - Simple Site": [
          "Simple Site"
        ],
        "Project 2 - CRUD with PDO and MYSQL": [
          "Project 2 - CRUD with PDO and MYSQL",
          "Create Database",
          "Connect Through PDO",
          "Initialize and create table",
          "Create User",
          "Read Data",
          "Updating Data",
          "Delete and Conclusion"
        ],
        "View into Laravel": [
          "Getting Started with Laravel",
          "Creating Tables with Migrations",
          "Routing with laravel",
          "Writting logic in the cotrollers",
          "Blade Templates",
          "Compile Assets with laravel mix",
          "setting up the views and forms",
          "Request method",
          "Working with mysql raw statements",
          "Eloquent makes database easy",
          "Eloquent part 2"
        ],
        "Build A Fullstack Web Application": [
          "Setting up our project",
          "transfer the html to laravel",
          "Authentication",
          "Fixes to view plus controllers",
          "connecting to api",
          "displaying the data and search",
          "More Results",
          "Cleaning up the results view",
          "Changing Results from post to get request",
          "Database for projects and inspirations",
          "Projects controllers and routes",
          "Projects Index view",
          "Create and Edit View for Projects",
          "Show View For Projects",
          "Save projects and Populate index view",
          "Show, Update, Delete Project",
          "Create Inspirations",
          "Delete Inspirations",
          "Setting up our relationships",
          "Delete all related inspirations",
          "Project and Users Relationships",
          "check if we have those inspirations",
          "finishing the project plus last challenge"
        ]
      },
      "requirements": [
        "Knows how to use a computer",
        "HTML & CSS"
      ],
      "description": "Learn php 7 the latest version of one of the most popular web programming languages and not only that but also the best full stack framework. Go from beginner to pro in just a few hours. This course is made for those that wish to get a job as soon as possible (ASAP). Learn the skills to help you on your journey as web developer with all of todays best practices. Build real projects that you can add in your portfolio.",
      "target_audience": [
        "Junior Developers",
        "Mid Developers",
        "Senior Developers"
      ]
    },
    {
      "title": "Laravel 11 Build Multi Restaurant Food Order Application A-Z",
      "url": "https://www.udemy.com/course/laravel-build-multi-restaurant-food-order-application/",
      "bio": "In This Course, You Will Build Complete Multi Restaurant Food Order System with Laravel 11 And Build It From Scratch",
      "objectives": [
        "Complete Advance Project With Laravel 11",
        "Build Complete Multi Restaurant Food Order Application A-Z",
        "User Role Management With Laravel 11",
        "Multi-Authentication as User-Restaurant -Admin",
        "User Roles and Permission",
        "Multi Admin For Store",
        "Advance Restaurant Apply Coupon From Admin And Restaurant Owner",
        "Restaurant Review and Rating System",
        "Restaurant Discount Price",
        "Multiple Online Payment Getaway System",
        "Restaurant Mailing System With Laravel 11",
        "Restaurant Favorite Option",
        "Advance Restaurant Product Add to Cart Option",
        "Advance Shopping Cart Without any Package",
        "Advance JavaScript Uses",
        "Image Upload System",
        "Multiple Image Upload System",
        "Adding Professional Theme for Backend",
        "Adding Professional Theme for Frontend",
        "Multi Auth with Breeze Package",
        "Generate Order Invoice  in PDF",
        "Change Password Option",
        "Lecture By Lecture Project Source Code",
        "Checkout Page Setup",
        "Dynamic Email Configuration",
        "Import and Export Data From Csv or Excel File"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Project - What You Will Build",
          "Welcome to the Course",
          "Need Your Support",
          "My Mission"
        ],
        "Different Between Laravel 10 and Laravel 11 - What is new in Laravel 11": [
          "What is New in Laravel 11"
        ],
        "Multi Auth with Breeze Create Auth for User / Instructor / Admin": [
          "Initial Setup for Start",
          "Course Excise File - Downloadable Resources",
          "Install Laravel 11",
          "Create Database and Configuration",
          "Install Laravel Breeze",
          "Laravel Breeze Verify Email System",
          "Laravel Breeze Reset Password System",
          "Laravel Multi Auth with Breeze Part 1",
          "Laravel Multi Auth with Breeze Part 2",
          "Laravel Multi Auth with Breeze Part 3",
          "Laravel Multi Auth with Breeze Part 4",
          "Laravel Multi Auth with Breeze Part 5",
          "Laravel Multi Auth with Breeze Part 6"
        ],
        "Multi Auth Forget Password for Admin": [
          "Multi Auth Forget Password for Admin Part 1",
          "Multi Auth Forget Password for Admin Part 2",
          "Multi Auth Forget Password for Admin Part 3",
          "Multi Auth Forget Password for Admin Part 4"
        ],
        "Project Admin Panel Setup": [
          "Project Theme Overview",
          "Admin Template Setup",
          "Admin Logout Option",
          "Customize Login Form",
          "Customize Forget and Reset Password Form",
          "Refresh Admin Template",
          "Admin Profile & Image Update Part 1",
          "Admin Profile & Image Update Part 2",
          "Admin Profile & Image Update Part 3",
          "Admin Profile & Image Update Part 4",
          "Adding Toster In For View Message",
          "Admin Profile Change Password Part 1",
          "Admin Profile Change Password Part 2"
        ],
        "Restaurant Authentication Setup": [
          "Restaurant Authentication Setup Part 1",
          "Restaurant Authentication Setup Part 2",
          "Restaurant Authentication Setup Part 3",
          "Restaurant Authentication Setup Part 4"
        ],
        "Project Restaurant Panel Setup": [
          "Restaurant Template Setup",
          "Restaurant Logout Option",
          "Restaurant Profile & Image Update",
          "Restaurant Profile Change Password"
        ],
        "Project Frontend Template Setup": [
          "Frontend Template Setup Part 1",
          "Frontend Template Setup Part 2",
          "Frontend Template Login Page Setup",
          "Frontend Template Register Page Setup"
        ],
        "Project Frontend User Profile Setup": [
          "User Dashboard Setup Part 1",
          "User Dashboard Setup Part 2",
          "User Profile Design",
          "User Logout Option",
          "User Profile Password Change",
          "Update User Login Setup with and without Login"
        ],
        "Admin Backend Category Option Setup": [
          "Category Crud Part 1",
          "Category Crud Part 2",
          "Category Crud Part 3",
          "Add Validation Message",
          "Install Image Intervention Package",
          "Category Crud Part 5",
          "Category Crud Part 6",
          "Category Crud Part 7 Delete With Sweelalert Alert 2"
        ]
      },
      "requirements": [
        "You have to know basic PHP",
        "Basic HTML, CSS, Bootstrap",
        "Local Server : Xampp/Wampp/Vertrigo/Mamp",
        "Text Editor/IDE: Sublime Text, Visual Studio Code, PHPStrom etc"
      ],
      "description": "Laravel 11 Build Multi Restaurant Food Order Application A-Z\nWelcome to Multi Restaurant Food Order System Complete Course in Laravel 11. In this course, I will teach you how to build a full-featured Multi Restaurant Food Order System Application using the Laravel framework.\nIn this course, i will cover everything you need to know to build a fully functional Food Order System application.  including Multiple Advance functionality, and you will build it from scratch. This is no theory base course. That will be a straight forward course You will build one complete real-world application.\nWhy We Should Learn Laravel?\nLaravel is a first development life cycle and less code functionality\nit's easy to learn\nmaking web applications faster\nconfiguration error and exception handling\nautomation testing work.\nURL Routing Configuration is very high in Laravel.\nScheduling tasks configuration and management\nIt has a huge community\nUnlimited resource.\nMost importantly it's very easy to get a job if you have Laravel skills.\nWhat is your benefit?\nI guarantee you'll come away with new skills and a deeper understanding of Laravel 11 So, what are you waiting for?  Enroll in our Laravel 11 Project Build Multi Restaurant Food Order Application A-Z course. You will be able to understand how to complete one project, and how to handle project bugs. You will be able to start work for your client. Add this project to your portfolio and university assignment And most importantly you will get my support within 24 hours. If you have any issues just let me know about this I will be in your touch.\nWhat is the Best Part of this Course?\n\n\nComplete Advance Project With Laravel 11\nBuild Complete Multi Restaurant Food Order Application A-Z\nUser Role Management With Laravel 11\nMulti-Authentication as User-Instructor-Admin\nUser Roles and Permission\nMulti Admin For Store\nAdvance Restaurant Apply Coupon From Admin And Restaurant Owner\nRestaurant Review and Rating System\nRestaurant Discount Price\nMultiple Online Payment Getaway System\nRestaurant Mailing System With Laravel 11\nRestaurant Favorite Option\nAdvance Restaurant Product Add to Cart Option\nAdvance Shopping Cart Without any Package\nAdvance JavaScript Uses\nImage Upload System\nMultiple Image Upload System\nAdding Professional Theme for Backend\nAdding Professional Theme for Frontend\nMulti Auth with Breeze Package\nGenerate Order Invoice  in PDF\nChange Password Option\nLecture By Lecture Project Source Code\nCheckout Page Setup\nDynamic Email Configuration\nCreate Custom Pagination\nImport and Export Data From Csv or Excel File\nAnd much more functions ..\nIn this course, you will not just learn you actually doing it. Learn and apply this to a live project with me.\nSound Great right?\nClick the \"Enroll Now\" button at the top right now!\n\nI am excited to see you on the course!\nSincerely,\nKazi Ariyan",
      "target_audience": [
        "Who want to become Laravel Developer",
        "Students who want to take their PHP skills to another level should take this course",
        "University Project Assignment",
        "Add This Experience in Work Portfolio"
      ]
    },
    {
      "title": "React Node Stripe MongoDB MERN Stack Subscription App",
      "url": "https://www.udemy.com/course/react-node-mern-stripe-subscription-app/",
      "bio": "Explore unlimited possibilities by learning how to build subscription app for recurring billing using Stripe with MERN",
      "objectives": [
        "Learn to build complete subscription system",
        "Learn how to architect a full stack app",
        "Learn to build Node MongoDB Stripe API with React Client",
        "Get ready to start building real world projects",
        "Learn to implement Authentication and Authorization in your app"
      ],
      "course_content": {
        "Getting Started": [
          "Are you new to JavaScript React and NodeJs?",
          "Subscription app demo",
          "Course Introduction",
          "Sign up to stripe",
          "Source code for each lectures",
          "Sign up to mongo atlas",
          "Client and server setup"
        ],
        "React client": [
          "Bootstrap CSS",
          "React Router Version",
          "Pages and routing",
          "Navigation",
          "Reusable input",
          "Reusable button",
          "Axios and toast notifications"
        ],
        "Node MongoDB API": [
          "Mongoose version",
          "Database connection",
          "Middlewares and routes",
          "Routes and controllers"
        ],
        "Authentication": [
          "Validation and error messages",
          "User model",
          "Bcrypt hash and compare",
          "Create user",
          "Handle signup response",
          "Login page",
          "JWT and user response on login"
        ],
        "User context": [
          "Local storage",
          "Conditional nav links",
          "Create context",
          "Using context"
        ],
        "Subscription pricing/plans": [
          "Pricing card on home page",
          "Products pricing in stripe",
          "Map prices",
          "Dynamic pricing cards"
        ],
        "Stripe customer, checkout and protect pages": [
          "Create stripe customer on signup",
          "Conditional button text",
          "Require signin middleware",
          "Create subscription request",
          "Checkout with stripe",
          "Stripe success and cancel page",
          "Protecting pages"
        ],
        "Subscription status, management and access control": [
          "Subscription status server",
          "Subscription status client",
          "User account page",
          "User subscriptions",
          "Show subscriptions in account page",
          "Updating user info in context and local storage",
          "Dropdown nav",
          "Allow user to access plan",
          "Access control to plans pages",
          "Subscription plans page",
          "Manage subscriptions server",
          "Manage subscriptions client"
        ],
        "Bonus": [
          "Other courses you may like"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript, React and Node"
      ],
      "description": "Learn how to easily monetize your app by adding subscription system using stripe.\nSubscription system is a recurring billing system which you will charge your customers each month for providing certain service.\nUsing stripe, you will be able to build fully compliant secure payment system to take user's credit card details, allow them to update, pause or cancel their plans and even update their card details, all from the account page in your app.\nThis course has more than subscription system. It shows you how to construct an app that can help you monetize any ideas or business necessity you may have.\nTo give you a complete idea on how to actually use subscription in real world app, I have build the whole app from scratch with complete authentication (login/register) system.\nYou will also learn how to protect your client and server routes from not authenticated users and the users who have not paid for the subscription plans yet.\nYou will also learn how to create a business model that will give you an idea on how to build many different types of app that will benefit from subscription based payment system. Imagination is the limit.\nSo if you are excited to learn how to build real world subscription system with MERN (MongoDB, Express, React, Node) stack and stripe, all starting from scratch, look no further, This course has everything you need. I hope to see you inside the course.",
      "target_audience": [
        "Any JavaScript developer looking to build subscription system",
        "Any JavaScript developer looking to understand full stack MERN stack"
      ]
    },
    {
      "title": "2022 Learning Pimcore From Zero To Hero.",
      "url": "https://www.udemy.com/course/2022-learning-pimcore-from-zero-to-hero/",
      "bio": "Enrich your Pimcore knowledge with a step by step guide from creating to launching a project!",
      "objectives": [
        "How to install and setup Pimcore using Docker.",
        "Understand Pimcore components on a beginner and intermediate level.",
        "Deploy and manage a Pimcore project correctly with no steps skipped.",
        "Create a real world Pimcore project (blog) and successfully launch it on a server.",
        "How to purchase and setup a Linux (Ubuntu) Server."
      ],
      "course_content": {
        "Pimcore Introduction": [
          "Who am I and what is Pimcore?",
          "How To Install Pimcore Via Docker",
          "Pimcore Administration Overview",
          "Pimcore Documents (Basics)",
          "Pimcore Assets and Thumbnails (Basics)",
          "Pimcore Data Objects and Modeling",
          "Pimcore System Settings",
          "Pimcore Website Settings",
          "Pimcore Redirects (Basics)",
          "Pimcore Admin and Shared Translations",
          "Pimcore Users, Roles, Perspectives, Custom Views and Custom Layouts",
          "Pimcore Static Routes (Basics)",
          "Pimcore Predifined Documents (Document Types)",
          "Pimcore Data Objects Grid View (Basics)",
          "Pimcore Quantity Values",
          "Pimcore Classification Stores (Basics)",
          "Pimcore System Info and Tools (Basics)",
          "Pimcore Recycle Bin",
          "Pimcore Compare Objects",
          "Pimcore Notifications",
          "Pimcore Areablocks and Bricks (Basics)",
          "Pimcore Introduction Quiz"
        ],
        "Project setup": [
          "Course showcase (What to expect)",
          "Pimcore skeleton installation (blank project)",
          "Modeling BlogPostCategory and BlogPostTag classes",
          "Modeling BlogPost class",
          "Installing webpack encore, setting up css and js files",
          "Segmenting html to templates and configuring main template",
          "Setting up the Pimcore navigation",
          "Creating the Blog listing page",
          "Creating the Blog single page",
          "Creating the Contact page"
        ],
        "Gallery Carousel AreaBrick, DataMapper and Link Generator": [
          "Creating the Gallery carousel AreaBrick (Backend)",
          "Creating the Gallery carousel AreaBrick (Frontend)",
          "Preparing DataMapper (Mapping data for frontend)",
          "Creating a Blog Link Generator"
        ],
        "Testing": [
          "How to test made functionalities"
        ],
        "Blog Post AreaBrick, Dynamic Footer and Listing Query Builder classes": [
          "Creating the Latest Blog posts AreaBrick",
          "Setting up a dynamic footer",
          "Creating a Abstract Listing Query builder class",
          "Creating a Listing Query builder class (Blog Listing)"
        ],
        "Blog Post and Category Repositories, Controllers and Tempaltes": [
          "Creating the Blog post Repository class",
          "Creating the Blog post category Repository class",
          "Creating the Blog post Controller class (single and listing methods)",
          "Setting up the Blog post listing and paginator (frontend)",
          "Creating the Blog post single DataMapper and finishing Controller",
          "Setting up the Blog post single template"
        ],
        "Pimcore Events": [
          "Setting up automatic SEO data settings using Pimcore Events"
        ],
        "Contact page, Email configuration and 404 page": [
          "Creating a Contact Form Type (custom Symfony form)",
          "Creating the contact email template, controller and Pimcore document setup",
          "Setting up Email sending configuration and finishing template and validation",
          "Creating and setting up a 404 page"
        ],
        "Preparing Project for Production": [
          "Generating a sitemap, building js and css files for production",
          "Adding Project to Gitlab"
        ],
        "Server Setup": [
          "Creating a server (Hetzner)",
          "Configuring server with Laravel Forge and setting up project",
          "Uploading project database and files, final project/server configurations"
        ]
      },
      "requirements": [
        "Intermediate PHP and Symfony/Laravel knowledge."
      ],
      "description": "The course contains a few hours of free videos introducing you to the Pimcore platform, where I will show you some of the features it provides as well as how to use them.\n\n\nIn the course you will learn how to setup Pimcore, create a project (Blog), optimize and prepare it for production, how to purchase and setup a server, how to deploy your project on the server as well as how to manage it via Git.\n\n\nThe project creation part of the course shows real world examples and tips when developing your web application using Pimcore.\n\n\nI'd highly recommend you go through the free content before starting with the Blog creation part of the course if you have no prior experience using Pimcore.\n\n\nIf you have prior Pimcore knowledge this course will only improve it and teach you some good practices when working on a project.\n\n\nIt is recommended that you have intermediate PHP knowledge and experience using PHP frameworks such as Symfony and/or Laravel.\n\n\nFeel free to leave a comment under the course or message me through Udemy if you have any questions regarding the course. I'm here to help you on your journey of becoming a Pimcore developer!",
      "target_audience": [
        "Intermediate PHP and Symfony/Laravel developers, as well as those who want to rapidly develop web application and/or are looking for a deeper understanding of Pimcore as a platform."
      ]
    },
    {
      "title": "JavaScript 45-Day Bootcamp: Learn Web Development in 2025",
      "url": "https://www.udemy.com/course/the-best-javascript-course/",
      "bio": "You will learn JavaScript: Web Development, HTML, CSS, Node, React, Web Applications + more with Java script",
      "objectives": [
        "Go from beginner to pro Javascript developer in just 45 days",
        "Learn by doing. Each day has a practical project so you can see how what you're learning applies to the real world",
        "Gain a highly desired skill that you can use to land a dream job in the tech field",
        "Comprehensive Understanding of JavaScript Fundamentals",
        "Proficiency in HTML and CSS",
        "Effective Use of Developer Tools and IDEs",
        "Dynamic Web Interaction with DOM Manipulation",
        "API Integration and Fetch API",
        "Building Real-time Applications",
        "Learn to Node js and Express",
        "Database Integration and Management with Sequelize and Firestore",
        "Building and Deploying Applications",
        "Creating Google Chrome Extensions",
        "Front-End Development with React"
      ],
      "course_content": {
        "Welcome to the JavaScript Course": [
          "Welcome to the 45-Day JavaScript Course",
          "Course Completion Club: Celebrate Your Progress",
          "The why behind the course"
        ],
        "Day 1 (HTML Crash Course)": [
          "Introduction",
          "CodeSandbox changes and Stackblitz as an alternative",
          "Introduction to CodeSandbox.io",
          "HTML Tags with h1",
          "Image Tags",
          "Paragraph Tags",
          "List Tags (ul, ol, li)",
          "Div Tags",
          "Anchor Tags aka Link Tags",
          "Table Tag",
          "Form Tags",
          "Input & Label Tags",
          "Checkbox & Radio Buttons Tags",
          "Select Tags (Dropdown boxes)",
          "File Input Tags",
          "Span, Strong, and Pre Tags",
          "Video Tags",
          "Audio Tags",
          "Iframe Tag",
          "Linking to Pages in your site",
          "Website Challenge",
          "Outro"
        ],
        "Day 2 (CSS Crash Course)": [
          "Introduction",
          "Style HTML Elements",
          "CSS Classes",
          "Style by Id",
          "Padding, Borders & Margins",
          "CSS Box Model",
          "Positioning",
          "Media Queries",
          "Chrome Developer Tools",
          "External Stylesheets",
          "Inline Styles",
          "CSS Frameworks",
          "Outro"
        ],
        "Day 3 (Javascript Crash Course)": [
          "Introduction",
          "How to create a Javascript Snippet in Chrome Browser",
          "How to create comments",
          "Javascript Data Types, the types of information you use with javascript",
          "Variables",
          "Array",
          "Objects",
          "Comparison Operators",
          "Not Operator",
          "Logical Operator",
          "If statements",
          "else",
          "else if",
          "switch",
          "For Loops",
          "For In Loops",
          "For Of Loops",
          "While Loops",
          "Continue",
          "Break",
          "Constants",
          "Functions",
          "Function Parameters",
          "Function Return",
          "Alerts",
          "Confirm",
          "Prompt",
          "Outro"
        ],
        "Day 4 (HTML and Javascript)": [
          "Introduction",
          "Selecting Elements",
          "Adding Event Listeners",
          "Styling an Element",
          "Color Challenge",
          "Outro"
        ],
        "Day 5 (setInterval and setTimeout)": [
          "Introduction",
          "setTimeout",
          "setInterval",
          "Rotating Circle Challenge",
          "Outro"
        ],
        "Day 6 (Web Requests with Javascript)": [
          "Introduction",
          "Http and Postman",
          "Fetch with Promise / .then",
          "Fetch with Async / Await",
          "Dog Picture Challenge",
          "Outro"
        ],
        "Day 7 (Fetch with Post)": [
          "Introduction",
          "Sending a Post Request",
          "Contact Form Challenge",
          "Pagination Challenge",
          "Outro"
        ],
        "Day 8 (Node and Express Introduction)": [
          "Introduction",
          "Setup and Your First Nodejs Request",
          "Post Requests",
          "Put and Delete with Route Parameters",
          "Http Status",
          "Outro"
        ],
        "Day 9 (Array Functions)": [
          "Introduction",
          "Push and Unshift",
          "Filter",
          "Find",
          "Challenge",
          "Outro"
        ]
      },
      "requirements": [
        "No programming experience needed.",
        "You should be excited about committing to your skill development over the next 45+ days"
      ],
      "description": "Do you want to learn JavaScript?\nWhether you're brand new to computer programming, or coming from another language, this is the perfect crash course to learn the basics of JavaScript.\n\n\nWhy take this  Java script Course?\nWhether you are looking for a new career or developing skills that will help you land your dream job, knowing Javascript is one of the most important programming languages to know today, and beyond.\nFrom front-end web development to full-stack roles, you should learn JavaScript.\n\n\nPractical, Real-World Project to Make Learning Fun\nThroughout this JavaScript course on Udemy, you'll learn by doing. We've included a number of projects that you'll be working on each day. Watch the intro video to learn more about some of these projects.\n\n\nWe believe this is the best Udemy course on JavaScript!\n\n\nWhat will you learn in the next 45 days?\n\n\nProficiency in HTML and CSS: Gain a solid foundation in web development by mastering HTML tags, creating forms, and styling websites with CSS, including concepts like flexbox, grid positioning, and media queries.\nComprehensive Understanding of JavaScript Fundamentals: Develop a deep understanding of JavaScript basics including variables, if statements, arrays, objects, loops, and functions.\nEffective Use of Developer Tools and IDEs: Learn to efficiently use development tools like Visual Studio Code with GitHub integration and browser developer tools for debugging and hacking website styles.\nDynamic Web Interaction with DOM Manipulation: Acquire the skills to interact with the Document Object Model (DOM), enabling dynamic content changes on web pages, including adding event listeners and manipulating HTML elements with JavaScript.\nAPI Integration and Fetch API: Learn to fetch and display data from external sources (like dad jokes), submit form data using different methods (POST, JSON), and understand the principles of API communication.\nBuilding Real-time Applications: Explore advanced JavaScript features like timers, Camera API, Speech Synthesis, and Recognition API to build interactive, real-time applications like a photo booth app, speech synthesis tool, and voice-controlled web elements.\nIntroduction to Node.js and Express: Gain hands-on experience with server-side JavaScript using Node.js and Express, including creating RESTful APIs, handling HTTP verbs, and understanding the basics of JWT and authentication.\nDatabase Integration and Management with Sequelize and Firestore: Learn to connect your applications to databases using Sequelize for SQL databases and Firestore for NoSQL. Understand database operations like CRUD, real-time updates, and implementing authentication and authorization.\nBuilding and Deploying Applications: Develop skills in deploying applications using platforms like Vercel and Firebase, and understand the deployment process, including testing with Jest and SuperTest, and setting up continuous integration with GitHub Actions.\nFront-End Development with React.js: Master front-end development with React.js, including components, JSX, state management, and integrating Firebase authentication. Build comprehensive projects like a pizza order management system using React.\n\n\nCareer Opportunities Post-Bootcamp\nWith JavaScript's versatility, the career opportunities are vast. Post-completion of our bootcamp, you could explore roles such as:\nFront-End Developer: Specializing in building the visual and interactive aspects of websites.\nBack-End Developer: Focusing on server-side logic and integration.\nFull-Stack Developer: A blend of both front-end and back-end development.\nWeb Application Developer: Concentrating on developing functional and dynamic web applications.\nUI/UX Developer: Creating user-friendly interfaces that enhance user experience.\n\n\nWho Should Enroll?\n\n\nAspiring developers with an interest in web technologies.\nProfessionals seeking a career change into the dynamic field of web development.\nAnyone with a basic understanding of programming concepts, looking to specialize in JavaScript.\nAny programmers coming from other languages looking to quickly learn JavaScript.\n\n\nWho is your Javascript instructor?\nNoah Glaser is a professional professional web developer with years of real world experience. He runs top rated in person trainings and is now bringing his knowledge to you, with this course.\nOne of the reasons students love his courses is because of the quick quality support you’ll get. If you ever get stuck or have a question, Noah will be there to help you.\nIf you want to quickly learn Javascript, we believe this is a great course for you.\nSee you in lesson 1!",
      "target_audience": [
        "Aspiring developers with an interest in web technologies",
        "Web programmers, developers",
        "Professionals seeking a career change into the dynamic field of web development",
        "Any programmers coming from other languages looking to quickly learn JavaScript"
      ]
    },
    {
      "title": "Symfony 5 PHP Framework",
      "url": "https://www.udemy.com/course/symfony-php-framework/",
      "bio": "Learn Symfony including Twig, Doctrine, Encore, SASS, forms and email delivery as we build a ecommerce store together",
      "objectives": [
        "Learn Symfony PHP Framework",
        "Build an ecommerce store in Symfony",
        "Twig templates, Doctrine ORM, Encore, SASS, sessions, forms and email delivery"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "How to use this course"
        ],
        "Getting set up": [
          "Setting up your environment",
          "Symfony CLI",
          "Windows setup",
          "Checking your environment",
          "Example code"
        ],
        "Creating our first page": [
          "Installing Symfony",
          "Symfony dev server",
          "Symfony architecture",
          "Creating a controller",
          "YAML files",
          "Adding the route",
          "Using annotations"
        ],
        "Twig templating": [
          "Templating",
          "Installing Twig",
          "Creating a template",
          "Using the abstract controller",
          "Variables in Twig",
          "Twig security",
          "Using layouts",
          "Twig documentation"
        ],
        "Static assets": [
          "What are static assets?",
          "Serving static files",
          "Installing Node.js",
          "SASS pre-processing",
          "Installing Encore",
          "Compiling assets",
          "Enabling SASS",
          "Including our assets",
          "Adding some CSS"
        ],
        "Databases": [
          "Doctrine ORM",
          "Local database setup",
          "Alternative AWS setup",
          "Database management",
          "Configuring the database",
          "Creating a product entity",
          "Generating the schema",
          "Importing sample data",
          "Listing the products",
          "Product listing template",
          "Viewing our product list",
          "Doctrine documentation"
        ],
        "Routing": [
          "Routing options",
          "Product details page",
          "Product details template",
          "Handling not found errors",
          "Customising the error page"
        ],
        "Sessions": [
          "Add to basket",
          "Add to basket button",
          "Configuring the session service",
          "Handling request input",
          "Basket controller",
          "Basket template",
          "View basket link"
        ],
        "Forms & validation": [
          "Installing the form package",
          "Creating an order entity",
          "Building the checkout",
          "Checkout template",
          "Testing the checkout",
          "Processing the order",
          "Migrating the orders table",
          "Tidying up checkout"
        ],
        "Email": [
          "Email and transport layers",
          "Installing the email practice",
          "Configuring the email service",
          "Sending an email confirmation",
          "Email template",
          "Testing the email confirmation"
        ]
      },
      "requirements": [
        "A basic knowledge of PHP would be helpful"
      ],
      "description": "Symfony is the number one PHP framework used by real businesses to build stable, scalable, modern web applications. In this course, we will dive in and learn hands-on as we build an eCommerce website together.\nWe’ll cover:\nSymfony basics and setup\nMVC architecture\nRouting and controllers\nTwig templating\nStatic assets, Encore, SASS and CSS\nDoctrine ORM and databases\nSession handling\nForms and validation\nSending emails\nI have taught tens of thousands of students on Udemy and I would love for you to be the next one. I look forward to seeing you inside the course!",
      "target_audience": [
        "Developers looking to learn Symfony",
        "Developers looking to learn about MVC PHP frameworks"
      ]
    },
    {
      "title": "The Complete React & Golang Course",
      "url": "https://www.udemy.com/course/the-complete-react-golang-course/",
      "bio": "Build an admin app from scratch! Master Go APIs, React Hooks, Typescript, Redux, MySQL, Upload Images, Export CSV + more",
      "objectives": [
        "Use Go with Fiber Framework",
        "How to Build an Admin app from Scratch",
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Connect Go with MySQL",
        "React with Typescript",
        "Use Redux",
        "Upload Images",
        "Export CSV files",
        "Send Emails",
        "Reset Your Password"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Golang Basics": [
          "Installation",
          "Hello World",
          "Creating a Project",
          "Variables",
          "Pointers",
          "Constants",
          "Arrays",
          "Slices",
          "Maps",
          "Structs",
          "Functions"
        ],
        "GORM Basics": [
          "Installing MySQL",
          "GORM",
          "Creating Tables",
          "Creating Records",
          "Updating and Deleting Records",
          "Querying Records",
          "Gorm Model",
          "Constraints",
          "Nullable Columns",
          "Nullstring Types",
          "Foreign Keys",
          "Many to Many Relations"
        ],
        "Go Admin": [
          "Project Introduction",
          "Setup",
          "Fiber Framework",
          "Pointers",
          "Database",
          "Packages",
          "Structs",
          "Realize",
          "Migrations",
          "Request Data",
          "Register",
          "Login",
          "Jwt",
          "Cookies",
          "Authenticated User",
          "Logout",
          "Json Output",
          "Middlewares",
          "Users",
          "Methods",
          "Users CRUD",
          "Roles",
          "Foreign Keys",
          "Permissions",
          "Many to Many Relations",
          "Pagination",
          "Profile",
          "Products",
          "Interfaces",
          "Uploading Images",
          "Orders",
          "Ignore Columns",
          "Export CSV",
          "Raw SQL",
          "Permission Middleware"
        ],
        "React Admin": [
          "Setup",
          "Template",
          "Components",
          "Router",
          "Wrapper",
          "Http Requests",
          "State",
          "useState",
          "Login",
          "useEffect",
          "Axios Defaults",
          "Logout",
          "Models",
          "NavLink",
          "Users",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "useRef",
          "Orders",
          "Animations",
          "Export CSV",
          "Chart",
          "Profile",
          "Redux",
          "Using Redux"
        ],
        "Deployment": [
          "Google Cloud",
          "Cloud SQL",
          "Go Modules",
          "Docker",
          "Environment Variables",
          "Google Cloud SDK",
          "Container Registry",
          "Cloud Run",
          "Deploying the Backend",
          "Deploying the Frontend",
          "Bonus"
        ]
      },
      "requirements": [
        "Nothing!"
      ],
      "description": "Welcome to The Complete React and Golang Course!\nWant to build your own admin app? Master a new coding language? Or maybe just brush up on your coding skills? This 10-hour course will give you the skills you need to start your React and Go career!\nIn this course, you’ll quickly master the basics of Golang and GORM, and then move on to more advanced fare with a big practical project! By the end of the course you’ll have built:\nStand-alone admin app, with:\nAdmin dashboard\nDaily sales chart\nAbility to create, update and delete users\nAbility to assign levels of user access\nList products (with image, price and description)\nAnimate user orders\nDeploy the app to Google Cloud\nCreated especially for Codestars students, The Complete React and Golang Course combines Antonio Papa’s original course (React and Golang: A Practical Guide) with nearly 2 hours of BRAND NEW material!\nIn Go you will learn:\nUse the Fiber framework inspired by express.js\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV files\nUse Docker environment variables\nIn React you will learn:\nCreate a React project with Typescript\nUse Redux\nCreate public and private routes\nReact Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nPerfect for beginners, or anyone new to Antonio’s courses (if you already know some Go and JavaScript that’s great, but it’s not required!) Antonio explains everything he does on screen… and if you ever get stuck, just post in the course Q&A forum and Antonio will reply asap!",
      "target_audience": [
        "Beginner Javascript and Go Developers"
      ]
    },
    {
      "title": "100 Angular Challenge",
      "url": "https://www.udemy.com/course/100-angular-challenge/",
      "bio": "Build 100 Components, Services, Directives, Pipes in Angular and Much More!",
      "objectives": [
        "Angular",
        "TypeScript",
        "JavaScript",
        "HTML / CSS",
        "Jasmine and Testing"
      ],
      "course_content": {
        "Introduction: What Are We Learning and Building?": [
          "Introduction: What are we building and who is this dude?",
          "Tools We Use"
        ],
        "Getting Started": [
          "Github Repo / Source Code",
          "Updating Introduction",
          "Creating a New Project with Angular CLI",
          "Updating Versions",
          "Understanding Our Configuration",
          "Understanding our src setup",
          "Generating Components with CLI",
          "Configuring ng generate component to use scss",
          "Converting Application to SCSS",
          "How to Succeed with this Course"
        ],
        "Challenges": [
          "1. Basic Toolbar",
          "2. Card",
          "3. Accordion",
          "4. Progress Bar",
          "5. Star Ratings",
          "6. Top of Page",
          "7A. Basic Routing Setup",
          "7B. Basic Routing Setup",
          "8. Lazy Loading Routes",
          "9. Truncate Pipe",
          "12. Loader Circular Component",
          "10. Credit Card Formater Pipe",
          "11. Credit Card Input Component",
          "13. Loader Loading Component",
          "14. Twitter Post Component",
          "15. LinkedIn Post Component",
          "16. Flatten Pipe",
          "17. Modal Component",
          "18. Debounce Click Directive",
          "19. Quote Component",
          "20. Toggle Component",
          "21. Filter Term Pipe",
          "22. Rich Text Viewer Component",
          "23. Debounce Search Component",
          "24. Search List Component",
          "25. Counter Component",
          "26. Simple Table",
          "27. Paging Component",
          "28. Tabs Component",
          "30. Ripple Directive",
          "31. Fade In Out Animation",
          "33. Sort Table Component",
          "34. Reactive Forms Email Component",
          "35. Form Dirty Guard",
          "36. User Service",
          "39. Ribbon Component",
          "40. Button Toggle Component",
          "41. Banner Cut Out Component",
          "42. Scale Directive",
          "43. Snackbar Component",
          "44. Simple Popup Component",
          "45. Countdown Timer Component",
          "46. Snackbar Service",
          "47. Copy Directive",
          "48. Lazy Load Image Directive",
          "50. Footer Component",
          "51. Slide Right Animation",
          "52. Skeleton Loader Component",
          "53. Social Media Bar Component",
          "54. Bottom Sheet Component",
          "55. Fieldset Toggle Component",
          "56. Pill Component",
          "57. Pill Filter List Component",
          "58. Not Found Component",
          "59. Password Component",
          "63. Title Service",
          "70. Rich Text Pipe",
          "72. Sort By Pipe",
          "73. Sort By Key Pipe",
          "75. Overlay Component",
          "76. Local Storage Service",
          "77. Route Params",
          "78. Common Scripts",
          "79. Active Route UI",
          "80. Auto Focus Input Directive",
          "Testing Introduction",
          "92. Component Testing",
          "93. Guard Testing",
          "94. Pipe Testing",
          "95. Directive Testing",
          "96. Mock 3rd Party (Http)",
          "97. Service Testing",
          "98. Mock First Party Services",
          "99. Abstracting Services for Testing",
          "100. Testing Practice x 75"
        ],
        "Congrats!!!": [
          "Good job!"
        ],
        "Final Thoughts": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Eager to learn front end development and Angular"
      ],
      "description": "We will master all Angular has to offer by building 100 re-usable and practical Components, Directives, Services, Pipes and much more to be used in your personal or professional projects.\nNot only will we build 100 items, but we will also go over Jasmine and Unit Testing so we can write the most solid code possible and certify it does what it is supposed to.\nAs we dive deeper into our Angular application we will hit on its various other technologies in detail including:\nTypeScript\nJavaScript\nHTML / CSS\nJasmine and Unit Testing\nSASS\nand more\nBy the end of this course you my goal for you is to 'Get Good. Get Great. Then Get Better' with Angular. Lets go!",
      "target_audience": [
        "Aspiring Developers looking to learn Angular",
        "Software Engineers looking to pick up Angular"
      ]
    },
    {
      "title": "Laravel - Single Page App & Vue CRUD",
      "url": "https://www.udemy.com/course/laravel-single-page-app-vue-crud/",
      "bio": "Learn to create Single Page Applications with Laravel & Vue.js",
      "objectives": [
        "Students will able to Use Laravel and Vue to create Single Page Applications"
      ],
      "course_content": {
        "Our First Setup Steps": [
          "App Demostration",
          "Introduction",
          "Reference Files",
          "Model, Migration and Auth",
          "Setting Up Routes and Creating a Controller",
          "Setting Up Our Controller Methods - Part 1 - Index",
          "Setting Up Our Controller Methods - Part 2 - Store",
          "Setting Up Our Controller Methods - Part 3 - Update & Delete"
        ],
        "VUE": [
          "Installing VUE and Making Sure its working with our App",
          "Adding Our HTML Table",
          "Reading Data - Part 1",
          "Reading Data - Part 2",
          "Creating Data Part 1",
          "Creating Data Part 2",
          "Creating Data Part 3",
          "Displaying Errors",
          "Updating Data Part 1",
          "Updating Data Part 2",
          "Deleting Data",
          "Reseting Data Method",
          "Creating a Loader Feature",
          "Creating a Notification Feature",
          "Conclusion"
        ]
      },
      "requirements": [
        "Laravel Fundamentals - YOU Need know Laravel to understand this course"
      ],
      "description": "We go straight to the point on this course, there is no wasting time explaining fundamental concepts of Laravel or Vue. You are expected to know how to use Laravel. This course will make a nice addition to your Laravel & Vue Skill Set.\nI decided to create small courses with right to the point projects because employers are looking for developers who can BUILD, create applications that will satisfy the needs of their companies. Nowadays you either know what you are doing or you don't have a job.\nLaravel / PHP is on demand since millions of websites use it. Laravel is one of the best PHP frameworks and every developer that wants to succeed in this market should learn it well.\nCome and join me on this small adventure, you won't regret it!",
      "target_audience": [
        "Any student wishing to create Single Page Application using Laravel and Vue should take this course"
      ]
    },
    {
      "title": "Cloud Computing with IBM Bluemix",
      "url": "https://www.udemy.com/course/ibm-cloud-bluemix-startup-with-examples/",
      "bio": "Learn various IBM cloud services for Cloud computing and ibm certification",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over IBM Cloud- Bluemix.",
        "Having command over all the options, services and tools available.",
        "You could develop Mobile, Web, IoT, AI, and other applications.",
        "Learn to create an Object Storage, Watson ChatBOT, DevOps Toolchain.",
        "CHECK OUT NEW UPDATED CONTENT- Jan/2020",
        "1) Analytics Engine 2) Apache Spark 3) Container Registry 4) DB2 NoSQL Database 5) Dynamic Dashboard",
        "6) Push Notification- Web and Mobile 7) IoT Starter 8) Nodejs Cloudant DB Web Starter 9) Python Flask 10) Ruby Sinatra"
      ],
      "course_content": {
        "Introduction to IBM Cloud": [
          "Course introduction",
          "Getting started",
          "IBM Cloud",
          "Intro to IBM Bluemix- PaaS"
        ],
        "Understanding BLUEMIX Category- Infrastructure": [
          "Compute",
          "Storage, Containers",
          "Network, Security"
        ],
        "Understanding BLUEMIX Category- PLATFORM": [
          "Mobile",
          "DevOps",
          "Watson Services",
          "IoT (Internet of Things)",
          "Functions (FaaS)",
          "Blockchain",
          "Cloud Foundry Apps"
        ],
        "Creating a ChatBot with Watson Conversation": [
          "Creating a ChatBot"
        ],
        "Deploying a Website/Webapp on Bluemix": [
          "Webapp toolchain with DevOps"
        ],
        "DevOps": [
          "Continuous Delivery"
        ],
        "Creating a Object Storage": [
          "Create a Bucket for data storage on IBM Cloud"
        ],
        "Containers": [
          "Container Registry"
        ],
        "Boilerplates": [
          "IoT Starter",
          "Ruby Sinatra",
          "Python Flask",
          "Node.js Cloudant Database"
        ],
        "Data & Analytics": [
          "Analytics Engine",
          "Apache Spark",
          "Dynamic Dashboard",
          "DB2 SQL Database",
          "Streaming Analysis",
          "Quiz"
        ]
      },
      "requirements": [
        "No prerequisites at all. But if you are aware of some cloud based or web development tools and technologies, it is helpful."
      ],
      "description": "Welcome to the Cloud Computing with IBM Bluemix course. This is a beginner level course that can be taken by the professionals and students alike, but with different aspirations. If you are working in the Technology sector, and would like to learn some of the advanced tools and services that you can harness in your project, you can take this course on IBM Cloud. It ranges from various customizable IBM Watson Machine learning services, to web containers and mobile push notifications. From Blockchain to DevOps, you can build and scale your products easily and effectively on the Cloud. You will learn a range of IBM Cloud tools and services with practical examples. Various IBM certifications also cover IBM cloud services,\nA lot of people tend to align with Amazon Web Services (AWS) and Microsoft Azure, simply because they the already used by a lot many people out there, but IBM has been the technology giant and has some of the fine grade tools like IBM Watson, that's almost unmatched. IBM Cloud is one of the growing cloud platform, that is cheaper, and sometimes more secure. You will learn a lot of such tools and services on IBM Bluemix cloud platform. Even if you are new to Cloud Computing, you don't need to worry, as you will be learning everything right from scratch, and feel free to skip a few lecture if you already got some expertise on such topics.\nYou will be learning the following topics that cover almost entire IBM Cloud catalogue:\nCompute\nStorage and Containers\nNetwork and Security\nMobile\nDevOps\nIBM Watson\nInternet of Things (IoT)\nFunction as a Service (FaaS) and Blockchain\nand more\nIn the later sections you will be learning with some real-life projects and examples:\nCreating a Chatbot\nDevOps toolchain\nContinuous Delivery\nCreating an Object Storage\nAfter learning with these examples, you will be learning some more tools under Boilerplate and Data Analytics categories:\nRuby Sinatra\nIoT Starter\nPython Flask\nNode.js Cloudant Database\nAnalytics Engine\nApache Spark\nDynamic Dashboard\nDB2 SQL Database\nStreaming Analytics",
      "target_audience": [
        "Anyone who just wants to learn and test IBM Cloud Platform or any developer willing to develop his/her application over IBM Cloud- Bluemix."
      ]
    },
    {
      "title": "Mastering Web Design: HTML, CSS & Generative AI",
      "url": "https://www.udemy.com/course/generative-ai-for-web-design-html-css/",
      "bio": "Learn HTML Structures, CSS Styling, AI Tools & Responsive Design",
      "objectives": [
        "Understand the structure and function of HTML and CSS.",
        "Use Generative AI tools to streamline web design.",
        "Create responsive web layouts with CSS Grid and Flexbox.",
        "Implement text formatting, lists, and tables in HTML.",
        "Design interactive web forms for user input.",
        "Apply CSS for styling and visual enhancements.",
        "Utilize CSS animations and transitions for dynamic effects.",
        "Integrate custom and Google Fonts into web projects.",
        "Build a personal portfolio and e-commerce webpage.",
        "Develop skills for continuous learning in web tech."
      ],
      "course_content": {},
      "requirements": [
        "No prior experience needed",
        "Basic computer skills",
        "Access to a computer with internet",
        "Interest in web development"
      ],
      "description": "Dive into the world of web development with our comprehensive course, \"Mastering Web Design: HTML, CSS & Generative AI\". This course is meticulously designed to equip beginners and intermediate learners with the essential skills to create visually appealing and responsive websites. Starting from the basics, you will get a thorough grounding in HTML and CSS, understanding everything from tags and attributes to complex CSS styling techniques.\nThe course uniquely integrates Generative AI tools to enhance learning, offering practical insights into how AI can accelerate coding tasks and design processes. You will explore the foundational structures of HTML, delve into the nuanced world of CSS selectors and properties, and learn to manage web page layouts with advanced techniques like Flexbox and CSS Grid.\nKey modules include hands-on practice with HTML lists, tables, forms, as well as detailed lessons on CSS animations, transitions, and the use of preprocessors like SASS for efficient styling. The course culminates in two major projects: building a personal portfolio website and an e-commerce product page, which will serve as a capstone to apply everything you've learned.\nWhether you're looking to start a career in web development or want to enhance your existing skills, this course will provide valuable resources, continuous learning opportunities, and the confidence to tackle any web design project. Embrace the synergy of HTML, CSS, and Generative AI and transform your ideas into reality.",
      "target_audience": [
        "Beginners eager to learn web development basics.",
        "Design enthusiasts looking to understand HTML and CSS.",
        "Entrepreneurs needing to build or manage their websites.",
        "Career changers entering the tech industry.",
        "Students in computer science seeking practical skills.",
        "Professionals aiming to enhance their web design capabilities."
      ]
    },
    {
      "title": "Vue.js: Learning the basics by building a movie web app",
      "url": "https://www.udemy.com/course/learn-the-basics-of-vue-by-creating-a-movie-web-application/",
      "bio": "Learn the basics of Vue by building a simple movie application utilizing Vuex, Vue Router, Axios, firebase, and more.",
      "objectives": [
        "Create Vue. application",
        "CRUD with Firebase and Firestore",
        "API service",
        "Vuex",
        "Vue Router"
      ],
      "course_content": {
        "Installing Vue CLI and creating new Vue project": [
          "Chapter Introduction",
          "Who this course is for?",
          "Vue CLI, new project, and default project explanation",
          "Examining main.js and App.vue root component",
          "Explaining Vue Router",
          "Examining rest of the files and folders"
        ],
        "Diving deeper into Vue and creating our movie application": [
          "Chapter Introduction",
          "Cleaning our project",
          "Creating Navbar and Sidebar components",
          "Introducing v-for directive and :key attribute",
          "Examining Vuex",
          "Creating movies module",
          "Exploring component lifecycle hooks",
          "Creating Movie component and rendering movies"
        ],
        "Searching, filtering, adding, editing, and removing movies": [
          "Chapter Introduction",
          "Adding search functionality",
          "Adding filters",
          "Creating movie preview page",
          "Creating a mixin and navigating to home page",
          "Creating modal component",
          "Creating new movie form",
          "Updating state in Vuex",
          "Deleting movie",
          "Updating movie"
        ],
        "Adding Firebase": [
          "Chapter Introduction",
          "Creating new firebase project",
          "Creating firebase importing script with node",
          "Creating firebase services and movies API",
          "Creating movie and save to firestore",
          "Editing movie in firestore",
          "Deleting movie from firestore"
        ],
        "Last words and complete project": [
          "Last words"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript (functions, objects, promises, ES6+)"
      ],
      "description": "By enrolling and finishing this course you will gain a clear insight into Vue and learn how to build your first Vue application. This course is primarily geared towards beginners and developers who would like a quick crash course into Vue development.\nThis does not mean that we will take it easy and only work with the simplest approaches!\nHere are, summarized, some of the things you will learn throughout this course.\n\n\nInstall Vue CLI and create a new project\nYou will learn how to create a new project with Vue CLI (command line interface). We will explore and explain all files and folders that come created with the default project.\n\n\nCreate routes and learn how to manage state with Vuex\nYou will learn how to create and programmatically navigate through the Vue application. You will also learn how to manage the global application-level state separate it using modules.\n\n\nDive into life-cycle hooks, Vue directives, mixins\nYou will learn all the steps through which a component goes from its creation till the moment it is destroyed. Learn some of the Vue directives and look at how we can share similar code across multiple components.\n\n\nCreate CRUD with firebase\nLearn how to create basic CRUD operations with Axios and Firebase and make API calls to update the global state.\n\n\nYou will have fun\nYou will have fun learning more about Vue and working on this lovely movie application.",
      "target_audience": [
        "Begginer developers looking to enhance their skills by learning Vue"
      ]
    },
    {
      "title": "Learning Bootstrap - From HTML to Wordpress Theme",
      "url": "https://www.udemy.com/course/learn-bootstrap-from-html-to-wordpress-theme/",
      "bio": "Design and develop static websites, and convert them to dynamic Websites using HTML, CSS, Bootstrap and jQuery!",
      "objectives": [
        "By the end of this course you will have the skills and ability to hand-craft a stunning and powerful website with HTML5 & CSS3",
        "You will also be able to convert your static websites to dynamic websites using Wordpress, allowing your clients to easily update the sites you've developed for them",
        "Most importantly, by the end of the course, you will have dramatically enhanced your web development skills and be able to take on more projects, upgrade your rates and put your career on the fast track to success"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course"
        ],
        "Let's Set Up Our Working Environment": [
          "Let's Set Up Our Project Folder",
          "Let's Download all the Necessary Files",
          "Let's Download and Install Brackets Plugins",
          "Let's Plugin All of our CSS and JavaScript Files"
        ],
        "Master Bootstrap 4": [
          "Learn About the Container Class",
          "Learn About the Row Class",
          "Learn About Bootstrap Columns Part 1",
          "Learn About Bootstrap Columns Part 2",
          "Learn About Bootstrap Columns Part 3",
          "Learn About Bootstrap Columns Part 4",
          "Learn About Bootstrap Columns Part 5",
          "Learn About The Bootstrap Grid Part 1",
          "Learn About The Bootstrap Grid Part 2",
          "Learn About The Bootstrap Grid Part 3",
          "Learn About Bootstrap Column Offsetting",
          "Learn About Bootstrap Typography Part 1",
          "Learn About Bootstrap Typography Part 2",
          "Learn About Bootstrap Typography Part 3",
          "Learn About Bootstrap Typography Part 4",
          "Learn About Bootstrap Typography Part 5",
          "Learn About Bootstrap Typography Part 6",
          "Learn About Bootstrap Typography Part 7",
          "Let's Style Images Using Bootstrap 4",
          "Learn About Jumbotron",
          "Explore What Alert Classes Are Part 1",
          "Explore What Alert Classes Are Part 2",
          "Explore What Button Classes Are",
          "Learn What Group Button Classes Are Part 1",
          "Learn What Group Button Classes Are Part 2",
          "Learn What Group Button Classes Are Part 3",
          "Learn What Group Button Classes Are Part 4",
          "Learn What Badge Classes Are",
          "Learn What Progressbar Classes Are",
          "Learn What Pagination Classes Are",
          "Bootstrap4 Classes for List Items",
          "Learn What Card Classes Are",
          "Learn What Dropdown Classes Are",
          "Learn What Accordion Classes Are",
          "Explore What Navbar Classes Are Part 1",
          "Explore What Navbar Classes Are Part 2",
          "Explore What Navbar Classes Are Part 3",
          "Explore What Navbar Classes Are Part 4",
          "Explore What Form Classes Are Part 1",
          "Explore What Form Classes Are Part 2",
          "Explore What Form Classes Are Part 3",
          "Learn What Carousel Classes Are",
          "Learn What Modal Classes Are",
          "Learn What Tooltip Classes Are",
          "Learn What Popover Classes Are",
          "Learn What Border Classes Are",
          "Learn What ClearFix Classes Are",
          "Learn What Responsive Floats Classes Are",
          "Learn What Height and Width Classes Are",
          "Learn What Margin and Padding Classes Are",
          "Learn What Vertical Alignment Classes Are",
          "Learn What Responsive Embade Classes Are",
          "Learn What Visibility Classes Are",
          "Learn What Navbar Twicking Classes Are",
          "Learn What Flex Box Classes Are Part 1",
          "Learn What Flex Box Classes Are Part 2",
          "Learn What Media Object Classes Are",
          "Learn What Filter Classes Are"
        ],
        "Let's Create a Static Website Using Bootstrap": [
          "Let's Install an XAMPP WebServer",
          "Let's Install WordPress On Our XAMPP Server",
          "Let's Design a Logo For Our Website",
          "Let's Build Our Site Navigation System",
          "Let's Build Our Carousel Part 1",
          "Let's Build Our Carousel Part 2",
          "Let's Build Our Welcome Section",
          "Let's Build Our Practice Section",
          "Let’s Tweak Our Design Part 1",
          "Let’s Tweak Our Design Part 2",
          "Let’s Create Our Practice Section",
          "Let’s Create Our Testimonials Section",
          "Let’s Create Our Counter Section",
          "Let’s Create Our Contact Section",
          "Let’s Create Our Footer Section",
          "Congratulations!",
          "Let’s Add the Smooth Scrolling jQuery Plugin",
          "Let’s Add Some Cool Features to Our Site",
          "Let’s Implement and Customize Modal",
          "Let’s Install a Cool jQuery Plugin",
          "Let’s Fine Tune Our Website Part 1",
          "Let’s Fine Tune Our Website Part 2",
          "Let’s Fine Tune Our Website Part 3",
          "Let’s Fine Tune Our Website Part 4",
          "Let's Initiate Our Animation",
          "Let’s Add an Animation to Our Site Part 1",
          "Let’s Add an Animation to Our Site Part 2",
          "Let’s Do a Quick Fix To Our Modal Issue"
        ],
        "PHP for WordPress": [
          "Introducing PHP",
          "Learn About The Reasons Why We Need PHP",
          "Learn About What Variable Is in PHP",
          "Learn About PHP Data Types",
          "Learn About Creating a Function in PHP",
          "Learn About the Differences Between Echo, Print, Print_r and Var_dump Function",
          "Learn About Operators in PHP Part 1",
          "Learn About Operators in PHP Part 2",
          "Learn About Operators in PHP Part 3",
          "Learn About Conditional Statement in PHP",
          "Learn About the Way PHP While Loop Works",
          "Learn About the Way PHP Foreach Loop Works"
        ],
        "Converting our Static Website into WordPress": [
          "Let's Transplant Our Project Folder Inside WordPress",
          "Let’s Create All the Necessary PHP Files",
          "Let's Enable WordPress to Load Our Style and Script Files Part 1",
          "Let's Enable WordPress to Load Our Style and Script Files Part 2",
          "Let's Split Our Index Content",
          "Learn About Calling Images Dynamically",
          "Learn About Editing the Footer Section",
          "Learn About Enabling a Logo to Return Back to the Home Page",
          "Learn About Enabling Our Search Engine",
          "Learn About Making Our Navigation Dynamic Part 1",
          "Learn About Making Our Navigation Dynamic Part 2",
          "Learn About Making Our Navigation Dynamic Part 3",
          "Learn About Enabling Modal on Our Navigation",
          "Learn About Making Our Slider Text Dynamic",
          "Learn About Converting Our Welcome Section From Being Static to Dynamic",
          "Learn About Converting Our Area of Practice Section From Being Static to Dynamic",
          "Learn About Converting Our Team Section From Being Static to Dynamic",
          "Learn About Installing Essential Plugins",
          "Learn About Converting Our Testimonial Section From Static to Dynamic",
          "Learn About Converting Our Counter Section From Static to Dynamic",
          "Learn About Converting Our Contact Section From Static to Dynamic Part 1",
          "Learn About Converting Our Contact Section From Static to Dynamic Part 2",
          "Learn About Converting Our Footer Section From Static to Dynamic",
          "Learn About Making Our Footer Global",
          "Learn About Building Our Blog Page Part 1",
          "Learn About Building Our Blog Page Part 2",
          "Learn About Building Our Blog Page Part 3",
          "Learn About Building Our Blog Page Part 4",
          "Learn About Building Our Blog Page Part 5",
          "Learn About Building Our Blog Page Part 6",
          "Learn About Building Our Blog Page Part 7",
          "Learn About Building Our Generic Page Template",
          "Learn About Building Our Case Status App",
          "Learn About Building Our Case Status App Part 1",
          "Learn About Building Our Case Status App Part 2",
          "Learn About Building Our Search Page",
          "Learn About Adding a Favicon to Our Application",
          "Learn About Adding a Custom Logo to Our Backend Login Page",
          "Congratulations!",
          "Download Resources"
        ],
        "Extra Information - Source code, and other stuff": [
          "Bonus Lecture and Information"
        ]
      },
      "requirements": [
        "Knowledge of HTML and CSS",
        "A computer (Desktop or Laptop) and access to the Internet",
        "Adobe Brackets Code Editor (or alternatives — we cover this in the course)",
        "XAMPP Web Server (or alternatives — we cover this in the course)"
      ],
      "description": "If you're a web or graphic designer who has the desire to revamp your skills and take them it to a whole new level, learning to code your own static and dynamic websites can totally change the game!\nMaybe you an entrepreneur or a startup owner who aims to have a world-class website to build your web presence? You can save yourself from the expense of hiring a web developer by learning how to put together a high-quality startup website by yourself!\nOr perhaps you might be working now as an employee of a company and you're aiming for a better position and a higher salary.\n\nLearning how to code and develop CMS driven websites will improve your career opportunities, giving you the negotiating power for the position you're aiming for.\n\nWhether you are a professional or simply code as a hobby, it's always fun and challenging to learn a new skill. This course will allow you to add dynamic websites to your skillset, create Wordpress themes that can be sold on popular websites, and so much more!\nBuilding both static and dynamic websites is a skill upgrade which can open doors of career opportunities for you!  And you will learn how to do just that in this course.\n\nWeb developers are in high demand and get paid well, giving them the ability to start their own companies, work anywhere and whenever they want. If this is the career you're aiming for, then this course is definitely for you!\nNo matter what your reason is, you're in the right place and on the right track to becoming a professional web developer.  It doesn't matter what your age and your educational background is, after finishing this course you will have sufficient knowledge to start your own web design and development business, or even start a new career as a freelance web designer and developer.\nThis course gives you immensely valuable skills that will enable you to work full time as a web developer if you want.\n\nWhat will you learn from this course?\n\n\nYou will develop a rock-solid foundation on Bootstrap 4 framework, which will enable you to develop any kind of front-end web application you can think of.\n\n\nYou will learn to design web applications in the browser, which is a great approach when it comes to designing web applications as it will reduce your workload significantly.\n\n\nYou will learn to develop mobile-responsive, powerful websites using Bootstrap 4.\n\n\nYou will learn to install jQuery and other relevant third party plugins on your project which will bring added functional to  your web applications.\n\n\nYou will learn how to use CSS3 to add a custom look and feel to your Bootstrap 4 driven Web applications making them standout from generic looking bland websites.\n\n\nYou will learn to design a premium website using HTML5, CSS3, jQuery and Bootstrap 4 including adding animation.\n\n\nYou will learn the process of turning static websites into dynamic WordPress websites.\n\n\nYou’ll have a thorough understanding of implementing WordPress specific PHP to create WordPress-driven websites & themes.\n\n\nYou will learn how to use Custom Post Types and Advanced Custom Fields in WordPress to create anything you desire.\n\n\nYou will learn the core principles of WordPress theme development.\n\n\nWhy taking this course is the best decision you’ll make today.\nThis is the only course on Udemy that covers all the areas of the latest Bootstrap 4 framework. The ability to develop web interfaces with Bootstrap has become a de-facto norm of the web industry due to the power and versatility of the Bootstrap 4 framework.\nAbul Hossain, your instructor in this course, will be sharing his web design and development techniques, skills, and experience with you.\nAbul is a Web Designer and Developer who is very passionate in what he does. He started learning about HTML, CSS, jQuery, jQuery UI, Photoshop, Fireworks, Illustrator, Premier pro, and Dreamweaver back in 2005, and has worked in various freelancing marketplaces.\nHe covers and answers there major questions you will have, so that you can dramatically shortcut the amount of time it takes to become proficient.\nBy the end of this course you will have the skills and ability to hand-craft a stunning and powerful website with HTML5 & CSS3.\nAnd from there, you will also be able to convert your static websites to dynamic websites using Wordpress.\nThe skills you learn in this course will dramatically improve your web development skills and career options, allowing you to take on more projects, upgrade your rates (or salary) and put your career onto the fast track to success.\nIf you’re ready to jumpstart your career on web design and development, just click the Enroll button and we’ll see you on the inside!",
      "target_audience": [
        "Anyone who wants to start their career journey in web design and development",
        "Anyone who has a basic knowledge of HTML and CSS and wants to take their skills to a whole new level"
      ]
    },
    {
      "title": "TLS & HTTPS Visualized, and HTTPS localhost setup in 2025",
      "url": "https://www.udemy.com/course/tls-https/",
      "bio": "Advanced TLS and HTTPS course for everyone! Set up a HTTPS localhost server with Node and Live Server. Tons MORE!",
      "objectives": [
        "Create your own localhost server (Node and Live Server) that runs over HTTPS / TLS",
        "Join the ranks of elite developers who truly understand how TLS protects data in transit",
        "Understand HTTPS by creating your own Certificate Authority and signing certificates",
        "Gain a deep understanding of pure HTTPS and TLS",
        "Understand hybrid key exchange concepts that are used TODAY with TLS 1.3",
        "Learn encryption, hashing, HMACs and PIKs with respect to HTTPS",
        "Master the concepts of HTTPS and TLS",
        "Learn more than 99% of developers who think HTTPS is just \"secure\"!",
        "Understand how TLS works, visually",
        "Generate your own self-signed PIK certificates and sign for your server FOR FREE",
        "Understand concepts of asymmetric and symmetric encryption",
        "Understand the role of \"public\" and \"private\" keys in HTTPS",
        "Become a developer grandmaster",
        "Dive deep into the mechanics of TLS handshakes and understand how secure connections are forged!",
        "Hands-on experience in setting up HTTPS on locahost using Live Server (VSC) using Node",
        "Equip yourself with the skills to implement robust security measures in your web applications!",
        "Become a trusted developer by mastering the principles of encryption, authentication, and data integrity!",
        "Visualize TLS, PKI, HTTPS and more!",
        "Understand how to use OpenSSL and .cnf files to supply configurations to your certificates and keys",
        "How to extract the public key from a private key",
        "Understand why the private key often looks like the public key",
        "Understand PEM files, ASN.1 files and PCKS#1 files",
        "Learn the latest hybrid key exchange techniques used by latest browsers in TLS 1.3",
        "Understand the TLS 1.3 handshake process"
      ],
      "course_content": {
        "Introduction to http, https, and encryption keys": [
          "Introduction to HTTP",
          "Wireshark",
          "Analyze HTTP/1.1 traffic using Wireshark",
          "How to capture encrypted HTTPS traffic over HTTP/3",
          "What is encryption",
          "Symmetric key encryption",
          "Asymmetric key encryption",
          "Analyzing QUIC and HTTP/3 traffic in Wireshark, and extracting session keys",
          "What encryption algorithms does OpenSSL provide?",
          "HTTP, HTTPS and Encryption"
        ],
        "TLS deep dive and the role of PKI": [
          "Goals of TLS and HTTPS",
          "Asymmetric key encryption guarantees confidentiality",
          "Ultimate goal for HTTPS is for client and server to use symmetric key encryption",
          "Premaster and master secrets, RSA and symmetric key generation",
          "Using asymmetric keys to produce signatures",
          "Intro to hashing using Bash terminal and utilities",
          "Hashing ensures integrity of data",
          "Combining hashing with key encryption",
          "Clarifying the Certificate, Sheriff and Wally Warthog Analogy in TLS",
          "Understanding Digital Signatures in TLS: The Sheriff and Wally Warthog",
          "Into to HMAC (Hash-based Message Authentication Code)",
          "Why a Public Key Infrastructure (PKI) system is needed",
          "Public Key Infrastructure (PKI) and Certificate Authorities (CA) explained",
          "How does a server request a certificate - Certificate Signing Request (CSR)",
          "Certificate Signing Request (CSR)",
          "How to view trusted CA's on your browser and operating system",
          "How does a client verify a server's signed certificate?",
          "What does the client actually check on the certificate?",
          "TLS process recap: part 1 of 2 (client hello and server hello)",
          "Using Wireshark to examine the client hello and server hello with TLS 1.3",
          "TCP Streams vs. HTTP/3 Streams",
          "Timeout - quantum computers have necessitated more complex algos",
          "Timeout - TLS 1.3 Hybrid Key Exchange using ML-KEM and ECDH X25519 (Advanced)",
          "Summary of the hybrid key exchange mechanism in TLS 1.3",
          "TLS process recap: part 2 of 2 (premaster and master secret, and symmetric keys)",
          "TLS Deep Dive and PKI"
        ],
        "Create your own HTTPS server (PRACTICAL)": [
          "Intro to .pem | ACN.1 | PKCS | .crt | .csr and steps required to establish TLS",
          "CA, and certificate generation process, VISUALIZED",
          "Part 1: Using XCA and Live Server to spin up a localhost server over HTTPS/TLS",
          "XCA - creating a local CA, and a self-signed certificate",
          "XCA - creating keys, a CSR and a signed X.509 certificate for localhost",
          "XCA - run a localhost server using Live Server, over HTTPS/TLS",
          "XCA - Using Wireshark to examine our TLS connection",
          "Part 2: Using OpenSSL and Live Server to run a localhost server over HTTPS/TLS",
          "OpenSSL - installing OpenSSL",
          "OpenSSL - producing CA keys and certificate",
          "Inspecting the private key file, and extracting the public key from it",
          "OpenSSL - generating server key pairs, and a server CSR file",
          "OpenSSL - generating a signed certificate certificate by our CA",
          "What is a .srl file?",
          "OpenSSL - run a localhost server using Live Server, over HTTPS/TLS",
          "Part 3: Create a Node server to run a localhost server over HTTPS and TLS",
          "Node - setting up our Node server code",
          "Node - using the mkcert API to run a Node localhost server over HTTPS/TLS",
          "Node - using the mkcert CLI to run a Node localhost server over HTTPS/TLS",
          "Outro"
        ]
      },
      "requirements": [
        "No programming experience necessary, although a basic understanding of HTTP will be helpful",
        "Mac or PC, so you can code alongside with me"
      ],
      "description": "*** BEST TOP RATED COURSE ON TLS AND HTTPS ***\nDeep dive into TLS (previously called SSL) and HTTPS: Gain insights that set you apart from 99% of developers. Understand the true meaning of HTTPS beyond the surface-level claims of \"security\"\nThe end of HTTP/1.1: Any serious developer today must concentrate on TLS security and hosting websites over the more robust protocols like HTTP/2 and HTTP/3. Stay relevant in a rapidly evolving digital landscape\nKey Concepts Unlocked: Explore advanced topics such as hybrid key exchange, encryption, public key infrastructure (PIK), asymmetric and symmetric cryptography, TLS handshake, HMAC, signatures, hashing, and cipher suites. Each concept builds a solid foundation for your web security knowledge.\nThis course is meticulously crafted for developers who are eager to elevate their TLS skills and gain a profound understanding of HTTPS, Certificate Authorities, and secure server configurations.\nSSL is old-school, outdated and deprecated. Therefore this course focuses on TLS as the protocol used with HTTP/2 and HTTP/3.\nWhat You’ll Learn:\nThroughout this course, you will embark on an adventure that seamlessly blends theory with hands-on practice. Here’s what you can expect:\nPractical HTTPS setup: You are going to learn how to use Node.js, and Live Server to set up a localhost server over a secure TLS / HTTPS connection. You will master the process of creating certificates and generating keys.\nEncryption: Understand the principles of encryption, including both symmetric and asymmetric methods, the concept of \"keys\" and how they are applied in secure HTTPS communications.\nTLS Handshake Mechanics: Dive deep into the TLS handshake process, learning how secure connections are established between clients and servers.\nPublic Key Infrastructure: Learn about the framework that enables secure data exchange through digital certificates and key management.\nAdvanced TLS Concepts and Cryptography: Gain insights into Hybrid Key Exchange (KEM algos), HMAC, signatures, hashing techniques, and cipher suites that form the backbone of secure TLS web interactions.\n\n\nThis HTTPS Course Is Practical:\nYou’ll put theory into action by setting up your own secure local server using HTTPS through the following steps:\nCreate Your Own Certificate Authority (CA): Learn how to set up a CA from scratch, giving you the authority to issue certificates for your projects.\nSelf-Sign Your CA Certificate: Discover how to self-sign your CA certificate, making it uniquely yours and ready for deployment.\nGenerate Keys for Security: Master the process of generating private and public keys for your server.\nRequest a Signed Certificate: Complete the setup by learning how to request a signed certificate, finalizing your secure server configuration.\nSign Your Server’s Certificate: Use your newly created CA to sign your server’s certificate, ensuring secure communication for your local applications.\n\n\nHands-On Experience:\nIn this course you will spin up a localhost server (running on 127.0.0.1) over HTTPS using:\nLive Server in Visual Studio Code (we do this using a GUI and also OpenSSL)\nA Node server instance, using the mkcert library (I'll show you how to do this using the API and also the CLI)\nAdditionally, you'll analyze traffic for both HTTP/2 and HTTP/3, gaining insights into modern web communication protocols. This course is not just about learning; it’s about doing!\n\n\nDon’t Miss Out on Essential Skills!\nIn today's fast-paced tech landscape, mastering TLS and web security is no longer optional—it's essential. Every serious developer must be equipped with these skills to thrive in a competitive environment.\nThe time to act is now!\nEquip yourself with the knowledge that will set you apart and position you as a leader in web development.\nThis is your chance to step confidently into the future of web security with our comprehensive course on Transport Layer Security (TLS).\nSo ... what are you waiting for?\nLet's get crackin'",
      "target_audience": [
        "Aspiring web developers looking to host their own HTTPS server with self-signed certificates",
        "Developers who want to demystify TLS and HTTPS and understand its real-world applications",
        "Professionals who want to learn more than 99% of developers who think HTTPS is just \"secure\" without understanding why!",
        "Curious minds ready to explore HTTP/2 and HTTP/3",
        "Anyone interested in becoming a confident advocate for web security in their organization!",
        "Developers eager to master Public Key Infrastructure (PKI) and secure their applications with encryption!"
      ]
    },
    {
      "title": "Full Stack Mern Project with React, NodeJS, MongoDB, Express",
      "url": "https://www.udemy.com/course/full-stack-mern-project-with-react-nodejs-mongodb-express/",
      "bio": "Build your mern stack projects with react js, redux, hooks and context, nodejs, express and mongodb, real react projects",
      "objectives": [
        "Full Stack Web Development using MERN",
        "Learn how to build backend API using node and express",
        "React Hooks, Async/Await & modern practices",
        "Learn how to build powerful and fully functional social media website using MERN",
        "Learn how to handling forms in React, Nodejs, Express JS",
        "Learn about Redux (Best state management tool)",
        "Learn styling with Material-ui",
        "Learn JWT Authentication",
        "Deployment",
        "Full stack mern stack mern projects with react js, nodejs, express js, mongodb",
        "Mern Full stack",
        "Full stack web development with mern stack project",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstra",
        "The good news is that web development generally uses light-weight code that is easier to learn than many other languages.",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, Mongodb",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "What is React? React is a front-end library in Javascript that was developed by Facebook",
        "The simplest definition of React is that it is a user interface library used for building UI components for the web.",
        "What is React used for? React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard",
        "The most common use of React is to build dynamic user interfaces for single-page web applications.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice.",
        "Nodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "Node is designed around an event loop, which allows for easy management of asynchronous functions.",
        "NodeJs is a server environment built for fast and easily scalable network applications.",
        "NodeJs is open-source, meaning it’s a free code for all developers.",
        "A runtime system is a platform where a software program runs",
        "Mern full stack with react js, express js, mongodb, nodejs"
      ],
      "course_content": {
        "Intro to Full Stack Mern with React js, nodejs, express Course": [
          "What is MERN and How to Get Help?",
          "Project Files - mern stack projects",
          "FAQ about Mern Full Stack Projects with react, express, nodejs, mongodb",
          "Quiz Mern Stack Project"
        ],
        "Let’s Start to Mern Full Stack Project with React, Express js, Nodejs, Mongodb": [
          "App Preview - Mern Stack Projects",
          "Installation React, nodejs, express, mongodb"
        ],
        "Initial Setups for React, nodejs, express js, mongodb": [
          "Backend Setup",
          "Frontend Setup",
          "General Setup (body parser & cors)",
          "Database Setup (MongoDB)",
          "How to Connect to Database",
          "quiz"
        ],
        "Creating Routes and Controllers on Server": [
          "Creating Routes for Backend",
          "Setup Server Folder Structure",
          "Adding More Controllers",
          "quiz"
        ],
        "Setup Client Side and Redux in React, Express js, Mongodb": [
          "Creating Front-end Structure in Mern Full Stack",
          "Implementing Material UI Components",
          "Styling Component with Material UI",
          "Implementing Calls to the API in Mern Full Stack",
          "Initializing Redux in React JS, Express JS, Mongodb",
          "Building Reducers in React JS, Express JS, Mongodb",
          "Wiring Up the Provider in Mern Stack Project",
          "Dispatch with Hooks in React, Express JS, Mongodb",
          "Creating Action Creators",
          "Async Actions with redux-thunk in React JS, Express JS, Mongodb",
          "Fetching the data from global store (useSelector)",
          "quiz"
        ],
        "Handling Forms in React js, Express, Mongodb, Nodejs": [
          "Building Form Component",
          "Handling Change on Forms with React js, Nodejs, Express js",
          "Adding Multiple TextFields in Mern Stack Project",
          "File Input",
          "Handling Form Submit",
          "Quiz React Application, Mern Stack"
        ],
        "Building Posts and Post Components in Mern Full Stack Projects": [
          "Creating a Post",
          "Creating Posts Component",
          "Creating Post Component",
          "Index CSS",
          "quiz"
        ],
        "Handling Functionalities (Edit, Delete, Like)": [
          "Update Functionality (Backend)",
          "Update Functionality (Front end)",
          "Creating Update Action",
          "Populate Form Fields with Values",
          "Delete Functionality (Backend)",
          "Delete Functionality (Frontend)",
          "Like Functionality (Backend)",
          "Like Functionality (Front-end)",
          "quiz"
        ],
        "Some Enhancements in Mern Stack Project with React js, express js": [
          "Refinement on Hashtags",
          "Mobile Design",
          "Action Constants",
          "Environmental Variables"
        ],
        "Authentication with JSON Web Token": [
          "App Preview",
          "Preliminaries"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "Ability to install software on your computer",
        "Must understand and write JavaScript code",
        "Must be familiar with main technologies like Node, React, MongoDB",
        "Desire to learn Mern full stack projects with react, nodejs, express, mongodb",
        "Desire to learn with react, nodejs, express, mongodb",
        "Desire to learn mern stack full stack react js, nodejs, express, mongodb",
        "Desire to create real world mern stack projects with react, redux, hooks and context, nodejs, mongodb, express",
        "Desire to learn react project with node js, express js, mongodb",
        "Desire to learn web development with mern full stack (mongodb, express js, react js, nodejs)",
        "Desire to create real world react projects",
        "Nothing else is required about Mern stack projects"
      ],
      "description": "Hello there,\nWelcome to the \"Full Stack Mern Project with React, NodeJS, MongoDB, Express\" course.\nBuild your mern stack projects with react js, redux, hooks and context, nodejs, express and mongodb, react projects\n\"Instaverse MERN Stack Project\". In this course, we will be building a full-stack Social Media project application using Node.js, Express, React, and MongoDB.\nThis is a practical hands-on course for building an app using the incredible MERN Stack.\nThis course project is probably the biggest and most exciting project you have built so far. It is packed with hundreds of tips and tricks that can help you build almost any type of full-stack app (not limited to this project).\nYou can build the biggest and most complex apps of your dream or as required at your job. Master the stack of all stacks and become the most productive and innovative developer on your team. I welcome you to be a part of this incredible journey.\nIn this course, you will learn to develop a web application with Full stack Projects with React JS, NodeJS, MongoDB, Express from scratch.\nIf you are thinking to start to learn ReactJS, this course is the best match for you.\nWe have explained React from beginner to all levels. We have explained all the topics as simple as possible with examples, slides, and diagrams.\nWe have created a lot of projects while explaining the subjects. Because we believe that applied educations are much more useful than other teaching methods.\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels.\nWe paid attention to explain all the topics in order. Because we think that the order of presentation of the subject is as important as the content of education. We have seen this shortcoming in many pieces of training we have examined and tried to explain these issues to you in the best way.\nReact is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser.\nNodeJS and Express is a growing web server technology. By learning Node with Express, you can improve your skills, get a new job and you can build a powerful, robust backend.\nLearning Node.js is a great way to get into backend web development, or expand your fullstack development practice. With Udemy’s hands-on Node.js courses, you can learn the concepts and applications of this wildly useful JavaScript runtime.\nNode.js is essential to developing real-time applications in JavaScript and has been instrumental in the development of websites like eBay and PayPal. Node is designed around an event loop, which allows for easy management of asynchronous functions. This makes it a popular environment for modern developers working on chat and gaming apps.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nMongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows. Its schemaless nature allows greater flexibility or changing application requirements. It’s one of the best databases in terms of developer productivity.\nMongoDB is a document-oriented database designed to allow developers to scale their applications to meet scalability demands. MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster.\nNo Previous Knowledge is needed!\nYou don’t need to have previous knowledge about React. This course will take you from a beginner to a more advanced level with hands-on examples.\nYou will be confident in using React JS, and if you ever get stuck, we will be there to help.\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS. In this course, we will be teaching React by creating various projects.\n\nIn this Full stack Mern Projects with React Js course, you will learn\nBuilding an extensive backend API with Node.js & Express\nBuilding our frontend to work with the API\nIntegrating React with our backend and creating a great workflow\nGet, Post, Patch and Delete Request using MongoDB\nState management with Redux\nReact Hooks, Async/Await & modern practices\nCreate a CRUD Application with MERN Stack\nHandling Forms\nJWT Authentication\nCreating a build script, securing our keys, and deploy to Heroku using Git\nReact js, and react projects, mern stack projects\nExpress\nExpress js\nReact\nReactjs nodejs\nNodejs\nNode js\nReact js\nExpressjs\nFull stack\nFull stack javascript\nFull stack react\nJavascript\nReact js node js\nNodejs reactjs\nReact js and node js\nNode\nMern stack\nNode js react\nMern full stack\nMongodb\nFull stack react js with redux node.js, express.js, mongodb\nExpress\nReact node\nReact nodejs\nNodejs express js mongodb\nReactjs and nodejs\nMern\nNode react\nWeb development with react js, mern stack\nReact js full stack\nMern full stack projects with express js, mongodb, nodejs\nFull stack react projects with redux, hooks and context\nFront end web development\nBackend web development\n\nAt the end of the course\nBy the end of the course, you will be able to build amazing React single-page web applications.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer. You will always have up-to-date content for this course at no extra charge.\nThe instructor helped me whenever I needed it, and I've learned a lot in very little time. Now I can create simple single-page applications, and I fell in love with CodePen and VS Code!\nIf you are wanting to learn how to; build for production, push to production, have a dev and production version, and learn how to navigate the two, this is the class for you! Seriously there is so much real-world knowledge here it should be worth way more than what it is!\nAfter taking this course, I decided to adopt Node.js as my specialized language/technology. Thank you.\n\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nMern Full Stack Project with React, NodeJS, MongoDB, Express course\nWe offer full support, answering any questions.\nSee you in the class!",
      "target_audience": [
        "React / Node / JavaScript developers of all skill levels",
        "Anyone who want to learn about Full Stack Web Development",
        "Anyone who want to learn MERN stack",
        "Node developers looking to learn more about front-end technologies (React)",
        "This course is for anyone who is in the software industry.",
        "People who want to become mern stack developer",
        "People who want to create real world mern stack project with react js, mongodb, express js, nodejs",
        "People who want to create real world react projects with express js, node js, mongodb",
        "People who want to create react project with redux, hooks and context",
        "People who want to learn creating mern stack projects with react, express js, mongodb"
      ]
    },
    {
      "title": "Build A Custom Dynamic Blog Website with PHP, MySQL & Jquery",
      "url": "https://www.udemy.com/course/build-a-blog-website/",
      "bio": "Learn the skills used in web development like creating major web projects, platforms and applications",
      "objectives": [
        "Building a Dynamic Blog Website",
        "Develop a database based on industry standards",
        "Adding admin panel functionality",
        "Linking the admin panel with the front-end blog pages",
        "Debugging code when errors are encountered",
        "Adding extra functionality and features as finishing touches",
        "Creating the front end and back end user interface"
      ],
      "course_content": {
        "Introduction": [
          "A Warm Welcome"
        ],
        "Coding Environment Setup": [
          "Windows - Environment Setup",
          "Mac - Environment Setup"
        ],
        "The Website User Interface": [
          "Installing the Templates",
          "Customizing the Templates",
          "Creating the Admin Interface"
        ],
        "Database": [
          "Building the Database",
          "Establishing a connection between the database and website"
        ],
        "Blog Website Back End - Admin Panel": [
          "Add Category Functionality P1",
          "Add Category Functionality P2",
          "Write A Blog Page",
          "Adding Images to the Blog",
          "Blog Admin Sessions",
          "Blogs Management",
          "Edit Blog Post Page P1",
          "Edit Blog Post Page P2",
          "Tags and More Sessions",
          "Summernote - API Integration"
        ],
        "Blog Website Front End": [
          "Blog Website Home Page P1",
          "Blog Website Home Page P2",
          "The Blog Header",
          "The Blog Categories",
          "The Single Blog Page",
          "Displaying all Comments",
          "Add Comments Functionality",
          "Reply To Comments Functionality",
          "Search Blogs Functionality"
        ],
        "Deployment": [
          "Deploying the Website"
        ],
        "Conclusion": [
          "Good Bye!"
        ]
      },
      "requirements": [
        "None. Some prior programming experience is recommended"
      ],
      "description": "Build your very own beautiful dynamic blog website with an admin panel customized to your needs.\n\n\nBlogging is one of the most common ways to generate passive income while doing something you enjoy - writing. You will be guided step by step in the creation of your own custom blog website, which you can either use for your blog or outsource to friends, family, and anyone else. Furthermore, the skills you learn in the course will enable you to build platforms such as e-commerce stores, complex web applications and much more.\n\n\nIn my opinion, learning happens best by building something, so I have designed and structured this course where you'll build something fun while learning new skills.\n\n\nWe'll take a look at:\nInstalling templates\nCustomizing the templates according to our requirements\nDeveloping our database based on industry standards\nConnecting the web project with the database\nAdding admin functionality and creating the interface\nLinking the admin panel with the front-end blog pages\nDebugging code when errors are encountered\nAdding extra functionality and features as finishing touches\n\n\nIt is not necessary to have a background in web development to take this course, but programming experience is recommended. In this class, I have attempted to explain the steps and processes as clearly and thoroughly as possible.\n\n\nPlease feel free to contact me if you have any questions or concerns, I'd be delighted to help. Looking forward to having you along for the ride. ?\n\n\nIf you’re interested, I have another course on building an online presence without having to learn to code.",
      "target_audience": [
        "Beginner PHP and MySql Developers",
        "Students seeking to build major dynamic web projects",
        "Entrepreneurs looking to build their software business",
        "Bloggers looking to build their website",
        "Beginner bloggers"
      ]
    },
    {
      "title": "Git and GitHub Beginners crash course",
      "url": "https://www.udemy.com/course/git-and-github-beginners-crash-course-2017/",
      "bio": "Hands-on Practical guide to Git and GitHub",
      "objectives": [
        "Install Git",
        "Initialize a repository",
        "Add files to staging index",
        "Commit files to repository",
        "Write commit messages",
        "Understand the Git three-tree architecture",
        "Understand git workflow",
        "Track when files are added and modified",
        "Create gitignore file to exclude files and directories",
        "Create remote repository",
        "Create and merging branches",
        "Understand HEAD",
        "Pull updates",
        "Push updates"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is Git",
          "What is GitHub",
          "Basic Git Architecture Illustration",
          "Git workflow basic illustration",
          "Creating a GitHub Account",
          "Installing SublimeText",
          "Installing Git",
          "Basic Git Configuration",
          "Retrieving specific configuration settings",
          "Creating a file and directory with Git Bash",
          "Initialize empty git repository",
          "Adding files to staging index",
          "More ways to add files to staging",
          "Committing files to repository",
          "Using Git Help",
          "Creating gitignore file",
          "Editing and re-committing changes",
          "Creating a git branch",
          "Merging Branches"
        ],
        "Creating Remote Repository on Github": [
          "Create remote repository",
          "Create README.md file",
          "Edit README.md file",
          "Clone a remote repository",
          "Introduction to Forking a Repo",
          "How To Fork A Repo",
          "Getting updates by pulling",
          "How to view the commit log",
          "What is HEAD?",
          "Thank You"
        ]
      },
      "requirements": [
        "You should be able to use a PC and internet at beginner level",
        "Basic working knowledge of using a command line tool."
      ],
      "description": "This course shows  you how to use Git, the popular open-source version control software, to manage changes to source code and text files. The course is a beginners crash course that will teach you the basics of this popular open source version control system.\nVersion control allows collaborative development which makes it easy for teams to work together on projects.\nThe effective use of version control is important and a useful skill for developers to have in their tool kit.\nGit is a version control system which is like a series of snapshots of your code which can be referenced at any time.\nGitHub  is a web based graphical interface where you can publish and host your Git repositories and collaborate with other people or teams.   Git and GitHub has become the industry-standard version control and publishing platform .  Git allows you to track changes and your development process and when used with GitHub it becomes an effective backup mechanism.\nThis course is for absolute beginners and will introduce you to the basics of using a version control system called Git and a collaboration platform called GitHub . Although this course does not involve any programming  students  who have a basic knowledge of programming or simple HTML might  find it easier to follow along . Also experience of using the command line might  come in handy though not mandatory as the course is so basic anyone can follow along easily.\nWhat you will learn  include how to :\nInstall git\nCommit  files to repository\nWrite commit messages\nUnderstand the Git three-tree architecture\nUnderstand git workflow\nTrack when  files are added and modified\nCreate ignore file to exclude files and directories\nCreate remote repository\nCreate and merging branches\nUnderstand HEAD\nPull updates\nPush updates",
      "target_audience": [
        "Beginner programmers",
        "Beginner developers",
        "Beginner web designers",
        "Anyone who wants to share their work",
        "People working remotely on same projects"
      ]
    },
    {
      "title": "Build 5 Spring Boot Projects with Java: Line-by-Line Coding",
      "url": "https://www.udemy.com/course/build-spring-boot-projects-with-java/",
      "bio": "Build 5+ Mini Spring Boot Projects using Java 17+, REST API, Spring Boot 3, Spring Security 6, Thymeleaf, React, MySQL",
      "objectives": [
        "Learn Spring Boot Fundamentals",
        "Learn to Build REST APIs using Spring Boot",
        "In Todo Management Project, you will learn how to build real-time REST APIs and secure those REST APIs using Spring Security and JWT.",
        "In Expense Tracker Project, you will learn how to build REST APIs, handle the exceptions, generate REST API documentation and more.",
        "In Banking Application, you will learn how to build REST APIs for banking domain.",
        "In Student Management System project, you will learn how to create a web application (Student Management System) using Java, Spring Boot, Thymeleaf, and MySQL.",
        "In Employee Management System project, you will learn how to create a web application (Employee Management System) using Java, Spring Boot, React JS, and MySQL"
      ],
      "course_content": {},
      "requirements": [
        "Java",
        "Familiar with IntelliJ IDEA",
        "No Spring Boot experience is needed, I added crash course on Spring Boot and REST APIs",
        "Know the basics of HTML, CSS, and JavaScript"
      ],
      "description": "This course teaches you how to build 5+ mini Spring Boot projects using Java 17+, REST API, Spring Boot 3, Spring Security 6, Thymeleaf, React, and MySQL database.\n\n\nIn this course, we will build these 5 Spring Boot mini-projects:\nBanking Application\nPersonal Expense Tracker Project\nTodo Management Project\nStudent Management System\nEmployee Management System\n\n\nTodo Management Project\nIn the Todo Management Project, you will learn how to build real-time REST APIs and secure those REST APIs using Spring Security and JWT (JSON Web Token).\n\n\nPersonal Expense Tracker Project\nIn the Expense Tracker Project, you will learn how to build REST APIs, handle exceptions, generate REST API documentation, and more. The Expense Tracker Application is a comprehensive solution designed to help users manage their finances efficiently by tracking expenses across different categories.\n\n\nBanking Application\nIn the Banking Application Project, you will learn how to build REST APIs for the banking domain. The application supports creating bank accounts, fetching account details, making deposits and withdrawals, transferring funds between accounts, and viewing transaction histories.\n\n\nStudent Management System Project\nIn the Student Management System project, you will learn how to create a web application (Student Management System) using Java, Spring Boot, Thymeleaf, and MySQL database.\n\n\nEmployee Management System Project\nIn the Employee Management System project, you will learn how to build a full-stack web application (Employee Management System) using Java, Spring Boot, React JS, and MySQL database.\n\n\nTools and technologies used in this course:\nServer-side:\nJava 17+\nSpring Boot 3+\nSpring Data JPA (Hibernate)\nMaven\nIntelliJ IDEA\nMySQL database\nPostman\nClient-side:\nJavaScript\nThymeleaf\nReact JS 18+\nReact Router\nAxios\nBootstrap CSS framework\nVisual Studio Code IDE\nVS Code extensions\nNode JS\nNPM",
      "target_audience": [
        "This course is designed for Java developers eager to master Spring Boot through hands-on project building"
      ]
    },
    {
      "title": "Master Electron Framework And Build 5 Advanced Desktop Apps",
      "url": "https://www.udemy.com/course/master-electron-js-framework-build-5-advanced-desktop-apps/",
      "bio": "Become an Advanced Desktop Apps Developer by Building Native Cross Platform Desktop Apps With Electron JS, HTML and CSS",
      "objectives": [
        "How to easily build native desktop applications with HTML, CSS and Javascript (JS)",
        "Build cross platform desktop applications from scratch",
        "How to package and distribute electron desktop applications for macOS, windows and linux",
        "How to give your desktop applications a native feel across all operating systems",
        "How to build stunning desktop app Interface with Photon Kit",
        "How to use the electron documentation when building desktops apps",
        "How to go about adding any extra feature you want to a desktop application using Electron",
        "How the electron framework works"
      ],
      "course_content": {},
      "requirements": [
        "Should Know Basics of HTML, CSS and JavaScript (I have recommended some helpful resources in the course to get you started if you don't know these basics)",
        "Knowing How Node JS Applications work is a Plus But Not Necessary"
      ],
      "description": "Build stunning and advanced desktop applications that matters - with web technologies you already know or heard of (HTML, CSS and Javascript).\nDesktop applications is a billion dollar business and it's only going to keep on growing as companies like WhatsApp, Skype, Adobe, Microsoft, GitHub among other top companies are still pushing a lot into desktop application development.\nThe only down side is that, there are fewer desktop developers than web developers and that is where you come in. Now is the best time for you to learn desktop application development and put yourself at the forefront of this billion dollar industry.\nWhether you want to get a job as a desktop application developer or build the next billion dollar desktop application that matters. Whether you’re an advanced web developer or you’re now starting out.\nNow is your best time to enroll in this electron course and learn everything you need, from setup to building traditional desktop applications, all the way to building system tray applications and even packaging and distributing your desktop apps on all operating systems including windows, macOS and linux.\n\n\nWhat Do You Get For Enrolling In This Course?\nThis course is supported on macOS, windows and linux.\nThis is the most up-to-date Electron Course created with you in mind and for you. This course has over 80 lessons and 8+ hours of invaluable content and resources, which is everything you'll need to design, build and package your electron desktop applications for all operating systems including windows, macOS and Linux, whether you’re an advanced developer or you’re now starting out.\nI keep this course updated so you will get notifications from me whenever I add new sections.\nElectron is used by top multi-billion dollar companies for desktop applications like Skype, Whatsapp desktop, Wordpress for desktop, Slack, Atom editor, Visual Studio Code and other very popular desktop applications -- and yours can be next.\n\n\nWhat you’ll build in this course\nA Fully Fledged Text Editor: We're going to cover the moving parts of an electron application by building this very first app. We’ll cover concepts like main and renderer process, Inter process communication (IPC), Dialogs among others, which should get you familiar with how electron apps are built.\n\nA Complex Music Player: We will take things a step further by building a complex music player which has playlist, can pause, play next, play previous etc.\n\n\nA System Tray Music Player: We will then convert our music player from a traditional desktop application to a system tray app. At the end, we should be able to start and stop our music player from the system tray.\n\nA Top Headlines News Reader: We will then have some fun with a news reader application which also has the complexity of multiple categories and article search. We will learn how to launch multiple “pages” in our app.\n\nA Radio Streaming App: I can now stream my favourite radio stations with this app almost every time I code. We’ll build this radio streaming app from scratch, which you can also use.\n\n\n------There's more------\n\n\nPackaging: We will package and distribute the music player app we built in this course for windows, macOS and Linux. After this section, you should know how to package and distribute your application for all operating systems.\n\n\nHear From Students Who Took This Course - (More in reviews section below):\nThe course is exactly what it promises to be; a practical demonstration of the core concept of Electron applications and its most relevant capabilities. The sample applications chosen are really on-point and pragmatic. - Joan Carballo\nInitially, I thought this was gonna be just one of those courses, but going through this course I realized its one in a million. You are a great teacher. - Quaqu Henry\nI was sceptic at first because the instructor's voice in preview videos was not confident and with a strong accent. But he proved me wrong. After the first \"boom\" line I was sucked in and I learnt a lot and I'm very thankful. Yes, he made some typos along the course, but I was proud of myself when I realised them before he pointed them out and fixed. The applications you build are great base for further electron experimentation. This course is a career starter - it is a must. - Jonas Krotil\nThis is by far one of the best electron courses I've seen. It was easy to understand underlying concepts. Following the tutorial, I have been able to rebuild the apps without any assistance. Also, Mubarak was almost always available to answer all my questions. - Mohammed Zakari\nVery good. It is fast paced without unnecessary filler. - Peter Weston\nBest Introductory Course!! I recommend it to people just getting into Electron. Well Explained, and anyone can get the hang of this. Great Instructor! I feel confident in writing my own Apps :) - Ro Nin\n\n\nWe’re Going To Cover Topics Like:\nSetting up your PC for building electron apps\nPackaging and distributing your electron applications for all operating systems\nDesigning stunning and native interface for your desktop apps\nCreating traditional desktop applications\nCreating desktop applications that run in the system tray\nBuilding applications with multiple “pages”\nThe history behind electron and what it's all about\nUsing the electron documentation\n\n\nAfter Taking This Course You Should Be Able to:\nDesign and Build electron applications that matters.\nPackage and distribute your electron application for windows, linux and macOS\nSecure an electron desktop application developer position\nUse the electron documentation for any desktop app feature that isn’t covered in this course\n\n\nThis is a hands-on practical electron course that get's you up to speed with building cross platform native desktop applications with web technologies you're already familiar with. Learn everything you need to become a master electron desktop application developer. Enroll now and i'll see you in the course!!",
      "target_audience": [
        "Beginner web developers who want to learn how to build desktop apps for all operating systems with HTML, CSS and Javascript",
        "Advanced web developers who want to apply their existing knowledge to build native cross platform desktop apps",
        "Programmers who want to learn how to build native desktops with web technologies",
        "Anyone looking to build native desktop applications the easiest way possible"
      ]
    },
    {
      "title": "Create Virtual Reality Apps using React VR & React 360",
      "url": "https://www.udemy.com/course/create-virtual-reality-apps-using-react-vr-react-360/",
      "bio": "In and Out of React VR and React 360 - a virtual reality technology that holds enormous potential to change the future.",
      "objectives": [
        "Learn Full In and out of React VR and React 360",
        "Create Real-Time Virtual Reality Apps using React 360",
        "Start with the implementation of Core React concepts - Installation, State, Props & other Components (Asset, Pano, Text, View)",
        "Render various 3D objects (Cube, Cuboid, Sphere, Clylinder) using Box component",
        "ADVANCE features like Using Models in VR apps, animating objects, lightning the scene, etc",
        "3 live Projects - Solar System, Hide & Seek game, Art gallery tour",
        "Work with various Surfaces, embed Audio & Video in the scene",
        "All the React codes are available in resources tab."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to React VR and React 360",
          "Installation",
          "Create 1st Project & Understanding project files",
          "Different components in React VR code",
          "Understanding the State concept",
          "Understanding the Props concept"
        ],
        "3D Shapes": [
          "Rendering 3D Cube & Cuboid with Box component",
          "Rendering Sphere & Cylinder"
        ],
        "Cursor System and Styles": [
          "Cursor System",
          "Flexbox",
          "Stylesheet"
        ],
        "Animations": [
          "Introduction to Animation",
          "Timing Animation",
          "Easing animation",
          "Decay Animation",
          "Spring Animation",
          "QUIZ 1",
          "Car Race Assignment"
        ],
        "Understanding Models": [
          "Introduction to Models",
          "Rotating Models"
        ],
        "Lights": [
          "Point Light",
          "Ambient Light",
          "Directional Light",
          "Spot Light",
          "Disco Lights Assignment",
          "Quiz"
        ],
        "Project 1 - Solar System": [
          "Project Requirements",
          "Configuring the Project",
          "Adding Sun in Solar System",
          "Adding Planets in Solar System",
          "Rotation around own axis",
          "Rotation around Sun",
          "Adding planet's description box - Part 1",
          "Adding planet's description box - Part 2"
        ],
        "Project 2 - Hide & Seek": [
          "Project Requirements",
          "Adding 3D House & Robot models",
          "Adding functionality to robots - Part 1",
          "Adding functionality to robots - Part 2",
          "Adding Start Screen (Static)",
          "Adding Start Screen (Dynamic)",
          "Adding Score Card",
          "Quiz 2"
        ],
        "React 360": [
          "Introduction to React 360",
          "Installation",
          "Understanding React 360 Project directories",
          "Migrating React VR code to React 360"
        ],
        "Surfaces in React 360": [
          "Cylinder Surface",
          "Cylinder Surface continued",
          "Flat Surface",
          "Rendering multiple surfaces in a screen"
        ]
      },
      "requirements": [
        "A very basic knowledge of web development will be an add-on.",
        "Rest everything is covered in this course with line to line explanations."
      ],
      "description": "In-depth & Hands-On practical course on React VR and React 360.\nVirtual Reality is a form of interactive computer-generated environment that immerses users in a three-dimensional environment.\n“Are you guys fascinated in learning a technology that grow wider than our imaginations?” If yes, welcome to this course “Create Virtual Reality Apps using React VR and React 360”. This course is very rare of its kind and includes even a very thin detail of React VR and React 360.\nIn this course you will get to understand a step by step learning of building virtual reality (VR) apps in the technology from where it all started i.e., Facebook’s React VR and its latest version React 360.\nEvery lecture in this course is explained in 2 Steps.\n· Step 1 : Explanation of the concepts theoretically.\n· Step 2 : Practicals – Implementing its full code practically on web.\nThe overall inclusions and benefits of this course:\n· Complete React VR and React 360 explained from SCRATCH to its Real-time implementation.\n· Each and every concept is explained by a HANDS-ON working example.\n· To give a virtual look of concepts we used, this course is crafted with Presentations to make the understanding effective and easy.\n· Codes and assets used in lectures are attached in the course for your convenience.\nAfter learning the basics of ReactVR and React 360, this course is attached with following three big projects that showcase each and every concept of ReactVR and React 360 at paper-thin level.\n· Solar System\n· Hide and Seek Game\n· Art Gallery",
      "target_audience": [
        "Students who are willing to dive into a new world of virtual reality.",
        "Experienced React techies who want to add a cutting edge technology in their resume.",
        "Game developers willing to immerse their players into a 3D virtual gaming environment.",
        "Inquisitive guys who wants to simulate their fantasies in virtual world."
      ]
    },
    {
      "title": "End to End React with Prisma 2",
      "url": "https://www.udemy.com/course/end-to-end-react-with-prisma-2/",
      "bio": "Learn everything needed to build a fully-featured social RSS news reader",
      "objectives": [
        "Students will build an entire social RSS reader full stack application from scratch over 10 hours and learn all of the fundamentals of building a professional grade app.",
        "Learn all the techniques needed to build a fully fledged app- user login, permissions, database management, backend creation. The works!"
      ],
      "course_content": {
        "Build the GraphQL Backend": [
          "Lecture 0: Reference Github Repo- save this for later!",
          "Introduction and Overview",
          "Create the Next.js base",
          "Configure Prisma 2 schema",
          "Configure Auth0",
          "Add graphQL server",
          "Add Context and Middleware",
          "Add Feed queries and mutations",
          "Add Bundle queries and mutations",
          "Add Nested Author information",
          "Add FeedTag and BundleTag relations",
          "Add LikeBundle and LikeFeed Mutations",
          "Add Find queries",
          "Add Update mutations",
          "Add Create Saved Article operations",
          "Add Delete mutations",
          "Add queries, mutations, and fragments"
        ],
        "Build the React Frontend": [
          "Add Tailwindcss",
          "Add Layout and Navbar",
          "Add ItemList component",
          "Add OneListItem component",
          "Add Badges",
          "Create Items and Item Detail pages",
          "Start the NewEditItem component",
          "Add SearchItems component",
          "Finish create item functionality",
          "Add update existing item functionality",
          "Add delete button",
          "Add like button",
          "Create the generate article list component",
          "Add saved article list component",
          "Add one article component",
          "Add saved articles page",
          "Bonus- tidying it all up"
        ]
      },
      "requirements": [
        "Should be able to create basic React js components and have experience with HTML, css and javascript."
      ],
      "description": "This course teaches you all of the skills and techniques needed for building a feature-packed application from the ground up.\nOver the course of 10 hours, we will build an RSS reader application that will allow people to create RSS feeds, share and bundle them together, and like their favorite ones. Articles within the feeds can also be saved to a saved articles list for easy access later.\nThis is the full-stack tutorial that I wish I had after learning the basics of React.js- we will teach you how to take those basic skills and build on them to create all sorts of useful functionality that you need for real-life apps.\nFirst, we will build out our backend which will store and manage all of our data and provide an expressive API to fetch exactly the data that we need in a secure manner.\nUse GraphQL and authorizer functions to prevent users from performing actions that they shouldn't be able to such as deleting or editing records that they are not the author of.\nUtilize Prisma 2 for managing a connection to the database and creating tables and schemas due to the relationships that we set up in our model.\nBuild a GraphQL API that allows us to fetch the fields and relations we need with no over-fetching.\nUse Auth0 for authentication to trust requests coming from users and block malicious attacks.\nAfter building our backend we will create a responsive frontend that can consume data from our backend.\nCreate a super snappy frontend with Next.js that is SEO friendly\nUtilize optimistic response with Apollo to allow the UI to respond immediately to the user's requests, even when backend requests are involved\nBuild our own beautiful and responsive UI with TailwindCSS",
      "target_audience": [
        "Intermediate React developers looking to bring together all components of a modern web app."
      ]
    },
    {
      "title": "Getting Started with Vue JS 2 : A Comprehensive Guide",
      "url": "https://www.udemy.com/course/getting-started-with-vue-js/",
      "bio": "Master Vue JS 2 by building real world web applications easily",
      "objectives": [
        "Easily build awesome web applications",
        "Master Vue JS with over 20 hands-on projects",
        "Use Google's Firebase Realtime Database in a Vue app",
        "Build complete data driven single page web apps",
        "Master concepts such as directives, templates, methods, watchers and more.",
        "Build and Integrate Vue apps into existing sites",
        "Fetch data from third party APIs",
        "Understand build systems and webpack for use with Vue",
        "Use Vue's Single File Component architecture for building large apps",
        "Incorporate routing for multi-page apps using Vue Router",
        "Secure your Vue apps with Firebase Authentication",
        "Deploy Vue apps on the web",
        "Lots and lots more..."
      ],
      "course_content": {
        "Prologue": [
          "A Warm Welcome",
          "What is VueJS ?",
          "Anatomy of an app",
          "Setting up for development",
          "Hello Vue | First Steps",
          "Hello Vue | Form Input",
          "olleH euV | v-model and filters",
          "The Virtual DOM",
          "Reactive Data and The State"
        ],
        "Discovering Templates": [
          "Introduction to Templates",
          "Using Strings",
          "Using String Literals",
          "Using Inline Templates",
          "Using X-Templates",
          "Using Render Functions",
          "Using JSX",
          "Summary"
        ],
        "Rendering Lists and More": [
          "Colored Boxes",
          "A Simple Shopping Cart",
          "A List Widget",
          "Summary"
        ],
        "Data flow and components": [
          "One way data flow",
          "Two way data binding",
          "A Sales Request Form | Chapter One",
          "A Sales Request Form | Chapter Two",
          "A Sales Request Form | Chapter Three",
          "A Sales Request Form | Chapter Four",
          "Super Button",
          "Rating Meter Reloaded"
        ],
        "Lifecycle Methods and lots more...": [
          "A Notification utility",
          "An Image Carousel",
          "An Image Carousel | Conclusion",
          "A Weather App | Introduction & First Steps",
          "A Weather App | Continued",
          "A Weather App | Conclusion",
          "Currency Converter",
          "Currency Converter | Conclusion",
          "Understanding Lifecycle Methods",
          "Summary"
        ],
        "Single File Components": [
          "Introduction to Single File Components",
          "Introduction to Module Bundlers & Task Runners",
          "Using Webpack - The Basics",
          "Using Webpack - Setup | Part 1",
          "Using Webpack - Setup | Part 2",
          "Using Webpack - Palindrome App | Code",
          "Getting back to Vue.js and Single File Components",
          "The VUE-CLI and Getting Started with Eatsapp",
          "Understanding the template structure",
          "Downloading assets for this project",
          "The core app component",
          "Getting data from an API",
          "The Data Object",
          "The ListItem Shell",
          "The ListItemPhoto component",
          "The ListItemText component",
          "The RatingMeter component",
          "Listening to events",
          "The InfoCard component",
          "Building for production",
          "Deploying the app",
          "Summary"
        ],
        "Building an Address Book using Firebase": [
          "Introduction to the project",
          "Setting up a Vue App",
          "Downloading Assets",
          "Understanding routing in a single page app",
          "Implementing routing using the vue-router",
          "The app shell",
          "The Home component",
          "The ContactListItem component",
          "The AddContact component",
          "The UserInput component : Input fields",
          "The UserInput component : Social IDs",
          "The UserInput component : Conditional styling",
          "The UserInput component : Props & events",
          "The AddContact component : v-model",
          "Basic validation",
          "The AddContact component : Clearing out the form",
          "Setting up Firebase Realtime Database",
          "Update | The VueFire Function vs. Object error",
          "Saving data to Firebase",
          "Offline notification",
          "Preloader and more",
          "The ContactDetail component : Route parameters",
          "The ContactDetail component : Template design",
          "The ContactDetail component : Displaying data",
          "The ContactDetail component : Watchers",
          "The UserResponse component : Using slots",
          "Deleting a contact",
          "Deploying on Firebase",
          "Summary"
        ],
        "Address Book | Adding Authentication": [
          "Introduction",
          "The AuthUI component",
          "Firebase authentication",
          "Securing routes",
          "Login and Logout",
          "Getting the user's UID",
          "Revisiting the database structure",
          "Signup",
          "Reset password",
          "Displaying errors and messages",
          "Deployment and Summary"
        ],
        "Epilogue": [
          "Yay!",
          "BONUS : Join my inner circle of friends!"
        ]
      },
      "requirements": [
        "You should be familiar with HTML and CSS",
        "You should be comfortable with using JavaScript (ES6+ preferrably)",
        "You should have basic working knowledge of NodeJS including NPM and Modules",
        "You should be able to use a code editor such as VS Code, Atom or similar"
      ],
      "description": "Once upon a time, JavaScript could only be used for simple form validators. Well, time has changed and if you’re a web designer or developer, chances are that your next big project requires a cutting edge web application framework that offers state of the art features such as a Virtual DOM, Reactivity, Superhero performance, all with a feather light footprint.\n\nThat is where Vue JS comes in. Vue JS is an amazing JavaScript framework for building high performance user interfaces but has enough ammo to power your next killer web application.\nIn this beginner’s course on Vue JS, we will go from the absolute basics of a framework, including concepts such as DOM and setting up a development environment, to understanding core Vue features, essential workflows and best practices.\nYou will work through 20+ hands-on exercises to solidify your command on essential Vue concepts.\nVue offers the best of Angular and React and features a component based architecture that let’s you break down your app or even an interface into manageable and scalable functional units.\nVue apps offer incredible performance that is neck to neck and even better than some of the leading web app frameworks in use today. Vue features a Virtual DOM that is lighter than the rest and delivers impeccable performance.\nBy the end of the course, you would’ve mastered essential fundamentals that will enable you to:\nBuild and Integrate Vue micro apps into existing websites.\nBuild complete data driven single page web applications.\nFetch data from third party APIs.\nUse Vue’s Single File Component architecture for building large scale apps.\nIncorporate routing in your single page Vue apps.\nPower your Vue apps using Google’s Firebase Realtime Database.\nSecure your Vue apps using Firebase Authentication.\nDeploy Vue apps on the web.\nand lots more…\nIf you’re a web designer, developer or even a project manager with a goal to master or pick a web application framework for your project, but are too afraid to begin, then this is your chance to finally realise your dream. Vue is surprisingly simple to learn, which makes it a winner and enables existing production grade projects and teams to incrementally bring it into their ecosystem.\n\nOne of the best things about this course is the personalised hand-holding that I offer to all my learners. As a student of this course, you are invited to interact with me and seek help. It is my endeavour to ensure your success.\nAll lessons come with start and end files and I’m committed to updating this course in line with Vue’s evolution and future.\nVue has gained tremendous ground and its community is growing exponentially. So, hop on in and together, learn Vue JS.",
      "target_audience": [
        "Web Designers who are interested in developing web apps",
        "Web Developers using jQuery, Angular, React or any other framework",
        "Web Developers who wish to learn a web application framework",
        "Project managers who are on the lookout for an amazing framework",
        "Students who wish to build single page JavaScript apps for their college projects"
      ]
    },
    {
      "title": "2023 Fullstack: Full Laravel with QRCodes, APIs, Android/iOS",
      "url": "https://www.udemy.com/course/2018-masterclass-laravel-56qrcodesapisandroid-and-ios/",
      "bio": "The ultimate course full stack development course bundle - MVC, Laravel, QRcodes, Payment integration,APIs,microservices",
      "objectives": [
        "Learn Laravel",
        "Learn database relationships",
        "Learn to integrate QRCodes into websites",
        "Learn to build apps with QRCodes",
        "Learn to integrate payment into websites",
        "Learn to build an e-commerce platform",
        "Learn to build robust APIs and Microservices platform",
        "Learn to document APIs and microservices",
        "Learn how to build websites with multi-user levels and permissions",
        "Learn how to build admin backends"
      ],
      "course_content": {},
      "requirements": [
        "You should have basic knowledge of PHP",
        "You should have good knowledge of HTML",
        "You should have basic knowledge of CSS"
      ],
      "description": "This course is the ultimate web and mobile development course for 2018. It covers all the topics in each technology stack very well. This one course contains tutorials in :\nMVC - Complete MVC course\nLaravel - Complete beginner to professional course on the latest version of laravel (Laravel 5.6),\nQRcodes - How to integrate QRCodes scanning and retrieval of information into your platform,\nPayment integration - How to integrate payment platforms like paypal, stripe to enable users make and receive payments on your platform\nAPIs and microservices - how to build robust microservice platforms that will make it possible for other developers to connect to your platform using packages like laravel passport\nMobile app development (Android and iOS) - Complete guide on building mobile apps and making them communicate with APIs and microservices\nEveryone that intends to be a well-rounded super star in development must have to take this course.\n\nThis course is the ultimate web and mobile development course for 2018. It covers all the topics in each technology stack very well. This one course contains tutorials in :\nMVC - Complete MVC course\nLaravel - Complete beginner to professional course on the latest version of laravel (Laravel 5.6),\nQRcodes - How to integrate QRCodes scanning and retrieval of information into your platform,\nPayment integration - How to integrate payment platforms like paypal, stripe to enable users make and receive payments on your platform\nAPIs and microservices - how to build robust microservice platforms that will make it possible for other developers to connect to your platform using packages like laravel passport\nMobile app development (Android and iOS) - Complete guide on building mobile apps and making them communicate with APIs and microservices\nEveryone that intends to be a well-rounded super star in development must have to take this course.",
      "target_audience": [
        "People who wish to become full stack developers",
        "People who wish to learn Laravel from basics to advanced",
        "People who wish to learn how to integrate QRCodes into websites",
        "People who wish to learn how to integrate payments into websites",
        "People who wish to learn how to build api/microservices"
      ]
    },
    {
      "title": "Tailwind CSS 3 | Learn By Building Multiple Projects A-Z",
      "url": "https://www.udemy.com/course/tailwind-css-build-multiple-projects/",
      "bio": "In this course you learn A-Z Tailwind CSS 3 Basic Fundamental Then Build one Blog Project and Ecommerce Project.",
      "objectives": [
        "Tailwind CSS 3.0",
        "Install and configure the ideal environment for working with Tailwind CSS",
        "How to customize Tailwind",
        "Using Tailwind in VS Code",
        "Deploying it to WebServer",
        "Create Blog Project Template",
        "Create Complete Ecommerce Template",
        "Responsive Web Design",
        "Ecommerce Home Page Setup",
        "Ecommerce Shop Page Setup",
        "Ecommerce Product Details Page Setup",
        "Ecommerce Login and Register Page Setup",
        "Ecommerce User Account and Register Page Setup",
        "Ecommerce Profile Address Page Setup",
        "Wishlist and Checkout Page Setup",
        "Ecommerce Cart and Order Page Setup",
        "Implement an automatic dark mode"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Ecommerce Project",
          "Welcome to the Course",
          "Introduction - Blog Project",
          "Excise File - Downloadable Resource",
          "Need Your Support"
        ],
        "Introduction To Course & Installing Required Tools": [
          "Introduction To Tailwind",
          "Installing Node",
          "Installing VS Code"
        ],
        "Tailwind All Features": [
          "Tailwind Installation",
          "Utility-First Approach Part 1",
          "Utility-First Approach Part 2",
          "Responsive variants - Tailwind Breakpoints",
          "Hover Focus & Other State Variants",
          "Dark Mode Variants Part 1",
          "Dark Mode Variants Part 2",
          "Composing Utilities with Apply Directive",
          "Tailwind @layer Directive - Understand Tailwind Layers",
          "Theme and Screen - Tailwind Functions",
          "Tailwind Configurations - Advanced Concepts"
        ],
        "Tailwind Css Basic All Element": [
          "Setting Up The Project",
          "Using Container",
          "Setting Width & Height",
          "Using Flexbox",
          "Flex Wrap",
          "Flex Grow & Shrink",
          "Using Grid Layout",
          "Using Row Layout",
          "Grid Flow",
          "Gap & Justifying Items",
          "Justify Individual Items",
          "Padding & Margin",
          "Styling Text",
          "Border Radius",
          "Styling Borders",
          "Input Filed"
        ],
        "Modern Tailwind 3 CSS Features": [
          "First Letter and Selection",
          "Label After",
          "Color Box Shadows",
          "Print Modifier",
          "Modern Aspect Ratio Api Part 1",
          "Modern Aspect Ratio Api Part 2",
          "Scroll Snap Api",
          "Perfect Scroll Behavior",
          "Multi Coulumn Layout",
          "Arbitrary Properties",
          "Fancy Underline Style",
          "Play CND"
        ],
        "Project Building A Basic Blog Template Design With Tailwind": [
          "Blog Project Introduction - What you will build",
          "Blog Project Setup",
          "Design a Blog Header Navbar Part 1",
          "Design a Blog Header Navbar Part 2",
          "Design a Blog Sidebar for Category Part 1",
          "Design a Blog Sidebar for Category Part 2",
          "Design a Blog Random Post Part 1",
          "Design a Blog Random Post Part 2",
          "Design a Blog Main Post Part 1",
          "Design a Blog Main Post Part 2",
          "Design a Blog Main Post Part 3",
          "Design a Blog Social Media Area",
          "Design a Blog Popular Post Area",
          "Design a Blog Tags Area",
          "Design a Blog Footer Page",
          "Design a Blog Details Page",
          "Design a Blog Details Comment Part 1",
          "Design a Blog Details Comment Part 2",
          "Setup Mobile Responsive Part 1",
          "Setup Mobile Responsive Part 2",
          "Setup Mobile Responsive Part 3",
          "Setup Mobile Responsive Part 4"
        ],
        "Project Building A Complete Ecommerce Template Design With Tailwind": [
          "Introduction - What we will build.",
          "Ecommerce Project Setup",
          "Ecommerce Project Fonts Setup",
          "Customizing Container",
          "Color Customization"
        ],
        "Ecommerce Home Page Setup": [
          "Project Header Setup Part 1",
          "Project Header Setup Part 2",
          "Navbar Setup Part 1",
          "Navbar Setup Part 2",
          "Dropdown Setup",
          "Banner Setup",
          "Features Setup",
          "Categories Setup",
          "Product Card Setup Part 1",
          "Product Card Setup Part 2",
          "Ad Section Setup",
          "Recomended Section Setup",
          "Footer Setup Part 1",
          "Footer Setup Part 2",
          "Footer Setup Part 3",
          "Page Responsive Setup Part 1",
          "Page Responsive Setup Part 2",
          "Page Responsive Setup Part 3",
          "Fixed Home Page Product Design"
        ],
        "Ecommerce Shop Page Setup": [
          "Shop Page Part 1",
          "Shop Page Part 2",
          "Shop Page Part 3",
          "Shop Page Part 4",
          "Shop Page Part 5",
          "Shop Page Part 6",
          "Shop Page Part 7",
          "Shop Page Part 8"
        ],
        "Ecommerce Product Details Page Setup": [
          "Product View Setup Part 1",
          "Product View Setup Part 2",
          "Product View Setup Part 3",
          "Product View Setup Part 4",
          "Product View Setup Part 5",
          "Product View Setup Part 6"
        ]
      },
      "requirements": [
        "Having some experience with CSS are necessary. Experience with other CSS frameworks like Bootstrap will help but are not mandatory.",
        "Using a code editor"
      ],
      "description": "Hello, Friend Welcome to my Tailwind CSS 3  A-Z | Learn By Building Multiple Projects Course.  If you want to learn Tailwind CSS 3 seriously then that will be the best course for you. First, what is tailwind CSS?  Tailwind is a utility-first CSS framework to rapidly build modern websites without ever leaving your HTML. it's a massive collection of tiny CSS utility classes for quickly and consistently building good-looking websites and it's a most demanding CSS framework nowadays.\n\n\n✔️ How i design this course\nFirst, you will learn all the basic fundamentals of Tailwind CSS 3 . You will learn all tailwind CSS utility classes with one-by-one live examples so it will help you to build one strong foundation of tailwind CSS. Then together with all fundamental experiences, you will develop multiple real-life projects. In Our first project will be you will build one complete basic blog site design then you will go deeper and you will complete this total journey by developing one complete professional eCommerce template design from scratch.\n✔️ Blog Project\nI don't want to jump right into the projects, though you certainly could if you want. So the first three sections, we will be working on the basic fundamentals of Tailwind CSS 3. Then you will start to build One complete blog project. In to this blog project you will build one home page and post a details page where I will use multiple tailwind CSS utility classes. And also you will learn how to make this so much responsive website with using tailwind.\n\n\n✔️ Ecommerce-Projects\nNext, we will take what we learn in the basic fundamentals and blog project.  Then you will start to build one complete professional eCommerce template design from scratch. You will create all most every pages for the eCommerce site. Like\n\n\nEcommerce Home Page Setup\nEcommerce Shop Page Setup\nEcommerce Product Details Page Setup\nEcommerce Login and Register Page Setup\nEcommerce User Account and Register Page Setup\nEcommerce Profile Address Page Setup\nEcommerce Wishlist and Checkout Page Setup\nEcommerce Cart and Order Page Setup\nEcommerce Deploy to Live Server\nAlso, you will get lectures by lecture source code. So if you stack hen you will get all references from there.\nIn this course, you will not just learn you actually doing it. Learn and apply this to a live project with me.\nSound Great right?\n---------------------------------------------------------------------------------------------------------------------\nClick the \"Enroll Now\" button at the top right now!\n\nI am excited to see you in the course!\nSincerely,\nKazi Ariyan",
      "target_audience": [
        "Web designers and developers who want to improve their frontend skills",
        "Anyone that wants to get better at creating website and UI layouts",
        "Students with knowledge of HTML and CSS who want to learn a new way of working",
        "Whoever wants to learn new technologies in web development"
      ]
    },
    {
      "title": "PHP Essential How to create build Amazing websites with PHP",
      "url": "https://www.udemy.com/course/php-essential-how-to-create-build-amazing-websites-with-php/",
      "bio": "Learn the foundations and features of why PHP code is so popular through this series of clear easy to follow lessons",
      "objectives": [
        "learn to apply PHP code to projects",
        "create their own PHP code",
        "better understand what PHP can do",
        "learn how to apply PHP setup and install"
      ],
      "course_content": {
        "PHP Essential learn the foundations of coding using PHP": [
          "PHP Course Introduction",
          "PHP Resources File",
          "Web development Resource Guide",
          "PHP setup local host for server side scripting",
          "PHP setup config install"
        ],
        "PHP coding syntax and lessons": [
          "PHP information",
          "PHP Outputing content",
          "PHP server variables comments",
          "PHP errors and syntax",
          "PHP variables output variables quotes and more",
          "PHP Types Variables and Quotes",
          "PHP operators",
          "PHP operators",
          "PHP variable type conversion operators",
          "PHP conditional statements else if",
          "PHP if else switch statements",
          "PHP switch statement",
          "SourceCode Statements",
          "PHP loops do while",
          "SourceCode Do while",
          "PHP loops",
          "PHP Loop examples",
          "PHP learning about arrays",
          "PHP adding to array",
          "PHP array functions",
          "SourceCode Arrays",
          "PHP arrays",
          "PHP Challenge recreate alternating row colors",
          "Challenge 1 HTML",
          "PHP solution alternating colors code snippet",
          "Challenge 1 Solution code",
          "PHP Functions Random color generator",
          "Functions Random Background Source Code",
          "PHP Functions Arguments Global Values",
          "Functions Source Code",
          "PHP include require once",
          "PHP require include source code",
          "PHP setting cookies",
          "PHP using sessions",
          "PHP Challenge 2 Count users visits",
          "PHP Challenge 2 Solution",
          "PHP challenge 2 solution code",
          "PHP and HTML web templates",
          "PHP website template"
        ]
      },
      "requirements": [
        "computer",
        "desire to learn PHP",
        "web browser",
        "Access to localhost or server to run PHP code"
      ],
      "description": "PHP is the most popular server side language used to build many of the websites on the internet today. PHP is not as difficult as many people expect and having an understanding of how to use PHP code opens a new world for web developers.\n\nThis course is designed to be easy to follow along, its encouraged to practice the code being presented through out the course. Resources, source code, and everything you need to learn PHP is provided. Start with simple PHP functionality as we explain how it integrates with HTML.\nPHP is exciting and we want to introduce PHP to you.\nThis step by step course shows you the code you need to know to accomplish dynamic server side web development with PHP\n\nWe cover all the core fundamental concepts of PHP that you need to know in order to effectively create your own PHP code.\nLearn about these PHP code concepts and much more.....\n\nSetup PHP\nCoding PHP\nPHP errors\nPHP variables\nPHP operators\nPHP conditional statements\nPHP loops\nPHP arrays\nPHP functions and more\nKnowing how to apply PHP is an excellent skill to have. PHP is everywhere and by the end of this course you will have what you need to use it on your own webpages.\n\nWe walk you through step by step with detailed explanations of code and more.\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons and code samples\ncode snippets\nLinks to top resources to save time\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions\nWe teach you the latest techniques and tools to use in order to create amazing web content. Everything you need to know is included in this course. Learn at your own pace, lifetime access to this course.\nWe show you how to write PHP code, easy to learn. Our tutorials are easy to follow and effective in teaching PHP.",
      "target_audience": [
        "PHP beginners",
        "web developers",
        "PHP students",
        "refresh your knowledge of PHP",
        "learn how to use PHP"
      ]
    },
    {
      "title": "Vue 3 and Laravel: A Practical Guide with Docker",
      "url": "https://www.udemy.com/course/vue-laravel-admin/",
      "bio": "Vue 3, Laravel 8, Docker, Vuex, Typescript, User Authorisation, Exporting CSV, Laravel Sanctum",
      "objectives": [
        "Use Docker",
        "Laravel Passport",
        "Use Vue 3 with Typescript",
        "Dispatch events with Vuex",
        "Use Composition API",
        "Authentication and Authorization",
        "Upload Images",
        "Export CSV files",
        "Open Api (Swagger) Documentation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel": [
          "Installation",
          "Docker",
          "Migrations",
          "Routes",
          "Register",
          "Custom Requests",
          "Laravel Sanctum",
          "Login",
          "Authenticated User",
          "HttpOnly Cookies",
          "Logout",
          "Ide Helper",
          "Api Resources",
          "Users",
          "Pagination & Seeders",
          "Profile",
          "Roles & Permissions",
          "Foreign Keys",
          "One to Many Relations",
          "Json Resources",
          "whenLoaded",
          "Many to Many Relations",
          "Attach, Detach and Sync Collections",
          "Products",
          "Uploading Images",
          "Orders",
          "Nested Factories",
          "Attributes",
          "Export CSV",
          "Chart",
          "Gates"
        ],
        "Vue": [
          "Installation",
          "Template",
          "Components",
          "Router",
          "Ref",
          "Child Components",
          "Form Submit",
          "Register",
          "Redirecting",
          "Reactive",
          "Login",
          "Authenticated User",
          "Logout",
          "Users",
          "Pagination",
          "Watchers",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Updating Products",
          "Orders",
          "Animations",
          "Export CSV",
          "Chart",
          "Profile",
          "Vuex",
          "Vuex Modules"
        ],
        "Open API (Swagger)": [
          "Setup",
          "Authentication",
          "Parameters",
          "Request Body",
          "Tags"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge",
        "Basic PHP knowledge"
      ],
      "description": "Learn how to create an Admin App using Vue and Laravel.\nIn Laravel you will learn:\nHow to create Rest APIs with Laravel\nAuthenticate using Laravel Sanctum\nAuthorization using Laravel Gates\nLogin with HttpOnly Cookies\nLaravel JSON Resources\nInstall and use Docker\nUpload Images\nExport CSV's\nUse Open API(Swagger) Documentation\nIn Vue you will learn:\nUse Vue with Typescript\nUse Vuex\nHow to use Composition API\nCreate classes, interfaces\nCreate public and private routes\nRestrict routes for unauthorized users\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner PHP Developers",
        "Beginner Javascript Developers"
      ]
    },
    {
      "title": "A Beginner’s Guide To Linux Commands",
      "url": "https://www.udemy.com/course/a-beginners-guide-to-linux-commands/",
      "bio": "Learning foundational Linux commands to navigate in Linux operating system",
      "objectives": [
        "At the end of this course, the student will be able to understand the structure and the file system of the open source operating system: Linux."
      ],
      "course_content": {},
      "requirements": [
        "This course – A Beginner’s Guide To Linux Commands- is for the absolute beginner!"
      ],
      "description": "At the end of this course, the student will be able to understand the structure and the file system of the open source operating system: Linux.\nThey will use the command line interface -and not the GUI- to gain confidence in simply executing the commands!  They will learn commands such as ls to list files, cp to copy, grep to find patterns, use VIM and Nano to edit files, use wildcards to filter data, install SQL Server 2017 on Ubuntu server and much more.\nAt the end of this course, the student will have a solid foundation on how to use commands and gain a sense of confidence they never had before.",
      "target_audience": [
        "This course – A Beginner’s guide To Linux Commands- is for the absolute beginner!"
      ]
    },
    {
      "title": "CSS Layout Techniques",
      "url": "https://www.udemy.com/course/css-layout-techniques/",
      "bio": "Learn CSS Layout Techniques from Scratch! Hands-On CSS Positioning Course Learn to Design and Customise CSS Page Layouts",
      "objectives": [
        "Learn different CSS Positioning Techniques",
        "Position elements on a webpage as you want",
        "Understand how elements are displayed on a webpage",
        "Understand CSS box model clearly",
        "Define dimensions of elements",
        "Use CSS position and float properties correctly",
        "Customise layout of webpages",
        "Create CSS layouts from scratch",
        "Design real-world projects using CSS positioning techniques",
        "Define placement of elements on a webpage",
        "Position elements in the correct place with respect to webpage, parent element, normal position and other elements",
        "Design Flexbox layout"
      ],
      "course_content": {
        "Introduction to CSS Layout Techniques": [
          "Structure of the Course"
        ],
        "How are Elements Displayed?": [
          "Block-Level Elements Vs Inline Elements",
          "CSS display Property: Decide How an Element is Displayed",
          "Quiz 1: Display of Elements"
        ],
        "CSS Box Model": [
          "What is CSS Box Model?",
          "width and height Properties:Set Width and Height of the Content Area",
          "border Property: Decide Style, Width and Colour of the Border",
          "margin and padding Properties: Set Space Around Content and Between Elements",
          "box-sizing Property: Change How the Box Model Works",
          "Quiz 2: CSS Box Model"
        ],
        "Position Elements on a Web Page with position Property": [
          "Static and Fixed Positioning: static is Default & fixed is Fixed on the Webpage",
          "Relative Positioning: Relative to Normal Position of Element",
          "Absolute Positioning: Position the Element Exactly Where You Want",
          "Magic of left, top, right and bottom Properties",
          "Quiz 3: position Property"
        ],
        "Position Elements on a Web Page with float Property": [
          "float Property: Let the Elements Sit Next to Each Other",
          "clear Property: Prevent Elements from Wrapping Around Floated Elements",
          "Quiz 4: float Property"
        ],
        "Flexbox Layout": [
          "Introduction to Flexbox Layout",
          "Understand the Terms",
          "Horizontally Align the Elements",
          "Vertically Align the Elements",
          "Change the Direction of Elements and Wrap",
          "Align Multiple Lines of Items",
          "Change the Order of Items",
          "Quiz 5: Flexbox Layout"
        ],
        "Knowledge Into Action (Apply Your Knowledge)": [
          "Horizontally Center a Block-Level Element",
          "Horizontally & Vertically Center an Element with respect to Parent",
          "Basic Two Column Layout from Scratch",
          "Keep Elements in Place Even Elements in Between are Removed"
        ],
        "CSS Positioning with Real-World Projects (Hands-On Practices)": [
          "Quote of the Day: Position Elements",
          "Image Gallery: Position Elements (Part 1)",
          "Image Gallery: Position Elements (Part 2)",
          "Speech Bubble"
        ],
        "Bonus Section": [
          "Bonus Lecture: Special Offers on Other Courses!!!"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS"
      ],
      "description": "Nowadays, web designers and front-end developers have to build complex page layouts. Structuring webpages by designing layouts and positioning content is very important when it comes to web design and web development. When the elements are positioned correctly in a webpage, the webpage becomes more structured and the content becomes easily visible and digestible. Web designers and developers take advantage of different CSS layout techniques to structure webpages as they need. CSS layout techniques allow us to define the placement of elements on a web page, that is to  control where they are positioned with respect to their default position as per normal flow, the other elements around them, their parent container, or the main viewport/window.\nSuppose you want to create your own multi-column web site. But if you do not know where to start from or how to proceed, this course is for you. This course \"CSS Layout Techniques\" teaches you how to work with the common layout and positioning methods used in web design. In this course, you will learn different techniques to position elements on a webpage in nearly any imaginable way. Throughout the course, you will learn how to build layouts using display methods, floats, positioning techniques and even Flexbox which is the latest CSS layout model. At the end of the course, you will apply your positioning skills by working on real-world projects. You can decide which technique to use based on the content and goals of your webpage because some techniques are better than others in some context.\nIn this course, you start from the basics of CSS positioning techniques and gradually move to advanced concepts in CSS positioning. You will understand,\n\nHow elements are displayed by default?\nHow block-level elements are different from inline elements in CSS?\nHow to change the way an element is displayed using CSS display property?\nHow CSS box model works?\nHow to use CSS box model properties such as width, height, margin, padding and border?\nHow to change the way CSS box model works using box-sizing property?\nHow to use the CSS position property for static, fixed, absolute and relative positioning?\nHow to use left, top, right and bottom properties along with CSS position property?\nHow to position elements using float and clear properties?\nHow to design CSS flexbox layout?\nIn the \"Knowledge into Action (Apply Your Knowledge)\" section, you will apply what you have learnt in this course to build layout and position elements from scratch. In the \"CSS Positioning with Real-World Projects (Hands-On Practices)\" section, you will do hands-on practices where you will practically implement CSS positioning techniques in some real-world projects.\nBy the end of this course, you will be able to\nDesign layouts\nCustomise webpage layouts\nChange the normal flow of the document\nUse different CSS layout properties to change the size, position and layout of a page.\nSo, what are you waiting for? Join this course and learn CSS positioning techniques in an easy and efficient way!!",
      "target_audience": [
        "Web designers",
        "Web developers",
        "Students who wish to learn CSS Positioning Techniques"
      ]
    },
    {
      "title": "Angular from Beginner to Advanced, Typescript and HTTP",
      "url": "https://www.udemy.com/course/angular-from-beginner-to-advanced-r/",
      "bio": "Full Stack Web Development with Angular 10 (aka Angular 2) and build reactive web apps with AngularJS full course",
      "objectives": [
        "What is Angular?",
        "Angular CLI Setup & Build",
        "File Structure & Dependency Examination for Angular",
        "TypeScript Intro",
        "Angular Basic Features",
        "Lear Angular Components",
        "Modules & NgModule",
        "Data Binding for Angular",
        "Attribute Directives in Angular",
        "Transforming Data Using Pipes",
        "Events & Forms",
        "Observables & Http in Angular",
        "Angular Router",
        "What is Angular and what are its benefits? Angular is an open-source, client-side framework for building single-page websites and desktop and mobile application",
        "Angular is a complex application that contains multiple libraries and cross-platform functionalities, so it can take some time to learn its many features.",
        "What is Angular used for? Developers mainly use Angular to build dynamic single-page applications (SPAs) for web, mobile, and desktop",
        "What is the difference between Angular and React? Angular and React are both rapid application development (RAD) platforms based on JavaScript.",
        "What careers use Angular? Angular is one of the most popular web development platforms in use today.",
        "Angular beginner to advanced, angular js full course"
      ],
      "course_content": {
        "Introduction to Angular, Angularjs with Web Development": [
          "What is Angular ?",
          "Angular Projects Codes - GitHub",
          "Angular Versions",
          "Development Environment in Angular",
          "Notes for Lecture 5: First Application",
          "First Angular Application",
          "Angular App Structure",
          "First Angular Project Edit",
          "Using Bootstrap for Styling in Angular",
          "FAQ about Angular, AngularJS, Full stack Web Development",
          "Angular Quiz"
        ],
        "TypeScript": [
          "What is TypeScript",
          "First Use of TypeScript",
          "Variable Types in Typescript",
          "Variable Types-2 in Typescript",
          "Functions in Typescript",
          "Classes in Typescript",
          "Inheritance in Typescript",
          "Interfaces in Typescript",
          "Generics in Typescript",
          "Modules in Typescript",
          "Quiz Angular, Typescript, Angular full course"
        ],
        "Angular Basic Features": [
          "Angular apps Loadded and Started",
          "Components in Angular",
          "Creating New Component in Angular",
          "Creating New Component With CLI in Angular",
          "Working with Template in Components",
          "Working with Styles in Component",
          "Using Selector in Angular",
          "Data Binding in Angular",
          "String Interpolition in Angular",
          "Property Binding in Angular",
          "Event Binding in Angular",
          "Two Way Binding in Angular",
          "Quiz Angular, AngularJS, Angular beginner"
        ],
        "Angular Data Binding": [
          "Creating the New Project in Angular",
          "Creating Class for Data Binding in Angular",
          "Creating New Component in Angular",
          "Property Binding in Angular",
          "Class Binding in Angular",
          "Style Binding in Angular",
          "Event Binding in Angular",
          "KeyUp Event in Angular",
          "Two Way Binding in Angular",
          "Pipes in Angular",
          "Custom Pipes in Angular",
          "Quiz Angular, AngularJS, Angular Advanced",
          "Angular Quiz"
        ],
        "Directives in Angular": [
          "What is Directive in Angular",
          "Working With ngIf in Angular",
          "Working With ngSwitch in Angular",
          "Working With ngFor in Angular",
          "Change Detection in Angular",
          "ngTemplate Outlet",
          "Custom Directive in Angular",
          "Angular Quiz"
        ],
        "Handling Template-driven Forms in Angular": [
          "Preparing the Form in Angular",
          "Validation with NgModel in Angular",
          "Validation Rule to Controls Adding",
          "Validation Messages Demonstration in Angular",
          "Customized Error Messages in Angular",
          "Method of Validation Messages Demonstration with",
          "Validation with NgForm in Angular",
          "Adding a Validation Rule to the Form",
          "Showing Summary Messages in Angular",
          "Disabling the Submit Button in Angular",
          "Angular Quiz"
        ],
        "Handling - Reactive Forms in Angular": [
          "Preparation of Reactive Form in Angular",
          "FormControl in Angular",
          "FormGroup in Angular",
          "Validation with Reactive Form in Angular",
          "Specific Validation Errors in Angular",
          "Customized Validation Rule Creating in Angular",
          "Angular Quiz"
        ],
        "HTTP Service": [
          "What is Service?",
          "Http Get Request",
          "Http Post Request",
          "Http Put and Patch Request",
          "Http Delete Request",
          "Use of Methods with the Service",
          "Error Checking",
          "Angular Quiz"
        ],
        "Routing": [
          "Introduction Module",
          "Routing Schema",
          "Router Links",
          "Navigating Programmatically",
          "Route Parameters",
          "Observable Route Parameters",
          "Query Parametre",
          "Child (Nested) Routes",
          "Different Page Of The Route Chart Receiving",
          "Angular Quiz"
        ],
        "Extra": [
          "Angular from Beginner to Advanced, Typescript and HTTP"
        ]
      },
      "requirements": [
        "Basic HTML and CSS knowledge helps.",
        "Basic JavaScript knowledge is required",
        "No Angular, angular js knowledge is required",
        "Desire to learn full stack web development with angular, angular js",
        "Desire to learn front end web development with angular anf typescript",
        "Desire to learn angular beginner",
        "Desire to learn angular advanced",
        "Desire to learn angular full course"
      ],
      "description": "Hello there,\nWelcome to the \"Angular from Beginner to Advanced, Typescript, and HTTP\" course.\nFull Stack Web Development with Angular 10 (aka Angular 2) and build  reactive web apps with AngularJS full course\nAngular is one of the most modern, performance-efficient, and powerful frontend frameworks you can learn as of today. It allows you to build great web apps which offer awesome user experiences. Angular, angular 10, angular full course, angular from beginner to advanced, angular 10 courses, angular advanced, angular beginner, full-stack web development, web development angular, angular course\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build Angular applications - and we'll build a single-page application along the way.\nAs Angular grows in popularity, new versions of the front-end framework are constantly being released. That’s why Udemy offers a wide range of courses covering every version of Angular available today.\nThis course is for beginners. Before taking this course, you only need to have a basic knowledge of HTML and CSS, and JavaScript. In our course, the basics of Angular are dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject.\nDuring our course, you will be informed about the basics of Angular in detail and how to solve problems.\nThis course was crafted to benefit absolutely any level of developer. We will start from scratch and learn how to create a development environment for Angular 10 which latest version\nDuring the course, I made sure to explain all the topics that may seem complicated to you as simple and detailed as possible. I have used some diagrams to help you understand better.\nThe powerful features and capabilities of Angular allow you to create complex, customizable, modern, responsive, and user-friendly web applications.\nAfter taking this course you’ll be able to fully take advantage of all features for Angular and start developing awesome applications immediately.\nIn this course, Develop modern, complex, responsive and scalable web applications with Angular 10 (formerly \"Angular 2\").\nOur course is based on learning by making practice.\nIn this course you will learn;\nCreate single-page applications with one of the most modern frameworks\nUse the gained, deep understanding of the Angular fundamentals to quickly establish yourself as a frontend developer\nDevelop a Full Stack application with Angular front-end\nIntroduction to Angular testing utilities\nTesting of complex Angular services\nWhich architecture Angular uses\nHow databinding works\nWhat Pipes are and how to use them\nWhat dependency injection is and how to use it\nProvide appropriate endpoints on your Backend, for your Frontend to consume\nAngular beginner to advanced\nTypescript\nHTTP\nFull stack web development with angular\nAngular full course\nAngular 10\nAngular 2\nAngular beginner\nAngular Advanced\nAngularJS\nWhat is Angular and what are its benefits?\nAngular is an open-source, client-side framework for building single-page websites and desktop and mobile applications. It is a full-featured JavaScript application built on TypeScript, which operates across platforms and keeps code clean and consistent throughout the codebase. Angular is an all-in-one rapid application development platform that allows web pages to render efficiently by minimizing communication with servers. The Angular framework offers end-to-end tooling or routing, state management, and form validation, as well as dependency injection and declarative templates. Angular offers out-of-the-box functionality and easy updating, along with an extensive collection of pre-made components. The TypeScript base includes high-quality code that reduces the burden of debugging and allows multiple developers to collaborate across platforms with minimal disruption and less coding.\nIs learning Angular hard?\nAngular is a complex application that contains multiple libraries and cross-platform functionalities, so it can take some time to learn its many features. Angular’s learning curve depends partly on your previous knowledge of web development and your familiarity with the languages used in the Angular platform. If you’re new to Angular, it’s helpful to have some familiarity with the basics of web design and the essentials of HTML and CSS. It’s also useful to know about the other languages that make up the Angular framework. These include basic HTML and CSS, as well as ECMAScript6, or ES6, a general programming language designed to ensure interoperability of web pages across the Internet. It’s also helpful to understand TypeScript, a superset of JavaScript used to write Angular. Learning Angular is even easier if you’re familiar with JavaScript, which is an implementation of ES6 and Angular’s base language.\nWhat is Angular used for?\nDevelopers mainly use Angular to build dynamic single-page applications (SPAs) for web, mobile, and desktop. SPAs are web pages based on a single HTML file that is completely controlled by JavaScript. When an action such as clicking a button happens on the page, the code renders it on the page instantly without sending a new request to the server. TypeScript and Angular’s other tools, including routing, state management, and ROM validation, make SPA creation easy and fast. Its open-source JavaScript framework allows developers to reuse code across multiple platforms. Angular’s component-based architecture simplifies the development workflow, making it possible to design apps for deployment in a wide range of environments and update them without extensive recoding.\nWhat is the difference between Angular and React?\nAngular and React are both rapid application development (RAD) platforms based on JavaScript. Angular is a multilayered framework that runs on Typescript and is compatible with many different code editors. It is a full-featured web development platform that requires no additional libraries. This means Angular can independently carry out a full range of development functions such as data binding, form validation, and dependency injection. First introduced in 2013, React is a JavaScript library managed by Facebook, and it works for both single- and multi-page web applications. React is a framework for UI development that’s smaller and faster than Angular. However, it requires other libraries or modules to provide the full range of Angular’s functions. React is easy to install and use for anyone who already knows JavaScript, and because it operates with a virtual DOM, the browser load reduces. Angular operates with a real DOM, which leads to longer runtimes and slower performance.\nIs Angular free to use and where can I get it?\nAngular has both free and paid options, but the developer doesn’t provide pricing information about its paid version for enterprises and large organizations; this information is only available with a custom quote. Individual users can also obtain Angular for free from the developer site. This open-source software is available under an MIT license granted by Google, which gives permission to use the Angular application for any purpose without limitation. New users can also download a free trial version of Angular from the developer. This version is a ready-made standalone app that contains most key features of the platform, and you can install it on any computer without taking all the steps to create the full Angular environment. The free Angular app allows users to get started by learning Angular’s key features and creating a basic app of their own.\nWhat careers use Angular?\nAngular is one of the most popular web development platforms in use today. Skills in using Angular can be helpful for several careers in fields related to web design and development. Angular skills are most important for careers in practical web development, including specialties like frontend development, which involves designing client-facing web elements such as visual content, UI and UX development, and general software development. Software engineers and site designers can also benefit from learning Angular. It is a JavaScript application, so it’s also useful for JavaScript developers. It’s also possible to create a career around a specialization in Angular development alone. Angular development specialists can work as consultants or independent contractors with multiple organizations needing web development services.\nWhat IDE is best for Angular?\nAn integrated development environment, or IDE, is a software application that consolidates essential web developer tools in a single graphical interface, which streamlines the development process and promotes consistency across all relevant platforms. Many IDEs now support Angular development projects, and there’s an option for every budget. The best paid IDE for Angular is Angular IDE. It was developed especially for the platform, so it supports all its features. Angular IDE is available as a standalone plugin or with an Eclipse plugin. New users can get a 45-day free trial before purchasing. Visual Studio Code is a general-purpose IDE that supports multiple development platforms, including Angular. This free, open-source IDE from Microsoft includes support for TypeScript code and several downloadable Angular plugins.\nStep-by-Step Way, Simple and Easy With Exercises\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now\nAngular from Beginner to Advanced , Typescript and HTTP\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn Angular 2(…. latest Angular 11), completely and easily, you are at the right place.",
        "It's perfect for complete beginners with zero experience.",
        "If you want to building your application with Angular.",
        "People who want to angular js apps",
        "People who want to learn angular beginner to advanced",
        "people who want to learn full stack web development with angular",
        "People who want to learn typescript, angular 10, (angular 2)"
      ]
    },
    {
      "title": "Build ChatGPT App in Flutter using OpenAI API",
      "url": "https://www.udemy.com/course/build-chatgpt-app-in-flutter-using-openai-api/",
      "bio": "Build ChatGPT/ChatBot App in Flutter using OpenAI Rest API",
      "objectives": [
        "This Flutter course is a complete guide that helps learn and build a fully functioning Flutter application with Rest Api.",
        "Rest API integration",
        "CRUD operations",
        "Teaching how to write Clean-code and avoid Boilerplate code",
        "Provider state management"
      ],
      "course_content": {},
      "requirements": [
        "A good Knowledge in Flutter and Dart is strongly recommended"
      ],
      "description": "Important NOTE: This course is not a data science course, this course is relying on the OpenAI API which is the App that created ChatGPT.\nThis course covers how to integrate the Rest API in a Flutter application.\nThe course mostly focuses on the REST API integration in Flutter\nCourse prerequisites:\nBasic knowledge in programming to get started\nA basic understanding of Flutter and good knowledge are recommended\n\n\nHow this course can be of help:\nGaining more knowledge in Flutter and Rest API integration\nBuilding a ChatBOT App\nHTTP requests\nJSON serialization\nAutomatic list scrolling\nError Handling\nClean and Clear design\nThe minimum amount of code, with Provider state management\nWhat's in the course:\nProvider State management\nClean code and avoid Boilerplate code\nManaging and updating packages\nListViews\nTheming\nFlutter general AppBar\nFlutter Material Design\nFlutter ListView Builder\nCourse structure:\napproximately 3 hours of content and updated regally\nRequirements:\nWindows application development OR Mac application development\nAccess to a computer with an internet connection.\nand you are ready for the journey\nlove learning about applying cutting-edge algorithms to practical cases!\nWhat Should I Expect After this Course?:\nThe ability to build functional apps\nNew information regarding Flutter And API integration\nNote that the course builds on windows, so I didn't have a chance to cover the IOS configurations! But feel free to ask anything about it. I will be there to help.",
      "target_audience": [
        "Flutter and Dart learning cravers",
        "Anyone who want to understand how to integrate Rest API in a Flutter app",
        "Anyone who is interested in ChatGPT integration in Flutter"
      ]
    },
    {
      "title": "LEARNING PATH: Drupal: Responsive Apps with Drupal 8",
      "url": "https://www.udemy.com/course/learning-path-drupal-responsive-apps-with-drupal-8/",
      "bio": "Level up your web app development skills to build a fully featured, multilingual, responsive Drupal 8 application",
      "objectives": [
        "Discover how to create complex websites quickly",
        "Find out how to use the building blocks of Drupal 8",
        "Work with the powerful Views module",
        "Use different plugins and create your own plugins",
        "Understand how to test, deploy and monitor your application",
        "Use Drupal 8 core components to build richly featured websites",
        "Enhance the functioning of existing modules and add new functionality by writing your own custom modules",
        "Make your website accessible to non-human visitors with Drupal 8's built-in REST capabilities"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of CMS systems function will be useful",
        "Basic programming knowledge of PHP, JavaScript (jQuery), HTML, and CSS is needed"
      ],
      "description": "Drupal is one of the most popular web content management systems on the planet and offers an incredible array of features and functionality. Small nonprofits and businesses to multi-billion dollar multinational companies are all using Drupal as the core of their presence on the web. Drupal 8 brings a lot of groundbreaking changes to its ecosystem, from basic architectural to functional. Understanding these changes is vital to you if you are trying to explore Drupal 8 and become a qualified Drupal 8 professional. Drupal will help you build your skill level from ground level up and enable you to create an efficient Drupal 8 application from scratch. If you're interested to build a fully featured, multilingual, responsive web application with Drupal 8, then go for this Learning Path.\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are:\nExplore the world of various views and components in Drupal 8\nUnderstand how to test, deploy and monitor your application\nLeverage Drupal 8's mobile-first philosophy to make your website accessible on any device\nThis practical step-by-step Learning Path will ensure that you build a stunning, fully-featured, multilingual, and responsive web-application with Drupal 8.\nLet’s take a quick look at your learning journey…\nYou’ll start off with the primary focal points of Drupal 8’s key features and its importance. Then, you’ll start building your Drupal 8 app, create the application architecture, and use Drupal 8’s views and components extensively. You’ll learn how to create reusable templates using PHP scripting, use plugins, and develop simple plugins on your own. You’ll explore the use of views module (now part of core!) and other contributed modules to add a bit of customization to the site. You’ll also create a new functionality of your own, including providing REST web services. Finally, you’ll take a brief look at how to create a mobile-friendly theme that ensures anybody on any device can take advantage of the amazing site you’ve built.\nBy the end of this Learning Path, you'll have acquired core components of Drupal 8 to test, deploy, and monitor your fully-featured, multilingual application effectively with no custom coding.\nMeet Your Expert:\nWe have the best work of the following esteemed author to ensure that your learning journey is smooth:\nJason Blandahas been professionally developing and deploying websites using the Drupal content management system for over 7 years. He runs the One Stop How to Guys YouTube channel, offering a wide variety of free educational courses including but not limited to Drupal 8. He is the Co-Founder and CEO of Arch board Media, a website development company in Canton, Ohio, building websites and web apps on the Drupal content management system.\nIn a prior lifetime, Marc Isaacson was an AS/400 RPG application developer. He left the programming field entirely in 2001 to pursue other interests, including teaching High School math. Marc first fell in love with Drupal in 2008 when he was playing around with creating websites for his own projects. At the time, he didn't have any intention of returning to the programming field; Drupal was just a tool that helped him to get the job done. After a series of life events conspired to bring him back to programming, he decided to teach himself to be a web developer. Naturally, he chose Drupal as the tool to learn. Marc started building websites for clients in 2010 and now specializes in using Drupal as a framework to build custom web applications. Marc has attended and presented at many Drupal camps, including DrupalCamp Colorado and BADCamp. He has also attended every North American DrupalCon since DrupalCon Denver in 2012. His first time acting as a Core Sprint Mentor was at DrupalCon New Orleans in 2016.",
      "target_audience": [
        "If you are a web developer with basic knowledge of how CMS systems function, then this is the perfect Learning Path for you."
      ]
    },
    {
      "title": "Mastering React and Node.js Firebase Authentication [2025]",
      "url": "https://www.udemy.com/course/mastering-react-and-nodejs-firebase-authentication/",
      "bio": "Complete Firebase Authentication Masterclass: Implement Google, Facebook, GitHub, Microsoft & Microsoft with MERN stack",
      "objectives": [
        "Set up and configure a full-stack authentication system with Node js, React, and Firebase.",
        "Implement secure email/password and social media login features (Google, Facebook, etc.).",
        "Manage user sessions, tokens, and role-based authentication.",
        "Secure backend APIs and deploy a fully functional authentication system to the web.",
        "Integrate social logins such as Google, Facebook, Microsoft, and Yahoo.",
        "Build \"Forget Password\" and password reset functionality.",
        "Implement email verification to secure user accounts and handle account recovery.",
        "Design and implement role-based access control to manage different user roles (admin, user, etc.).",
        "Edit and update user roles dynamically through Firebase and React."
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with JavaScript syntax and concepts like variables, loops, and functions is recommended.",
        "No advanced JavaScript knowledge is required, but it will help when working with Node js and React.",
        "Experience with HTML, CSS, and how web applications work is useful but not mandatory.",
        "While we will cover React basics, prior exposure to creating React components and understanding React’s state management will be helpful.",
        "Understanding how to navigate directories, run commands, and install packages through a terminal or command prompt will make development easier.",
        "A code editor like Visual Studio Code (VS Code) or any preferred IDE.",
        "Node js and npm installed on your system (guidance on setting this up will be provided).",
        "You will need a free Firebase account to follow along with the course. Instructions for setting this up will be included."
      ],
      "description": "Complete Guide to Full-Stack Authentication: Build Secure User Login Systems with Firebase, OAuth, Social Login, and JWT in 2025\nStruggling with implementing reliable authentication? This comprehensive course teaches you how to create production-ready authentication systems using the most in-demand technologies: React, Node.js, and Firebase Authentication.\nWhat you'll learn:\nImplement multiple authentication methods including Email/Password, Google, Facebook, GitHub, Microsoft, and Yahoo login\nMaster Firebase Authentication from setup to production deployment\nCreate secure JWT authentication for your Node.js REST APIs\nBuild protected routes and authentication guards in React applications\nDevelop complete user flows: registration, login, password reset, email verification\nImplement OAuth 2.0 authentication with multiple providers\nCreate custom React hooks for authentication state management\nSecure backend APIs with Firebase Admin SDK and middleware\nDeploy authentication systems to production with security best practices\nPrevent common authentication vulnerabilities: CSRF, XSS, and injection attacks\nCourse highlights:\nFollow along as we build a complete authentication system from the ground up. You'll develop real-world projects with clean code and modern architecture that you can adapt for your own applications.\nMaster essential skills including:\nConfiguring OAuth providers in the Firebase console\nIntegrating social login buttons with consistent UX/UI\nImplementing secure token-based authentication\nManaging authentication state with Context API\nCreating reusable authentication components\nHandling multi-provider user accounts and profile data\nTesting and debugging authentication flows\nWho this course is for:\nFront-end React developers looking to implement secure login systems\nBack-end Node.js developers building authenticated APIs\nFull-stack JavaScript developers working on user management systems\nWeb developers upgrading legacy authentication to modern standards\nDevelopers building SaaS applications requiring multi-provider authentication\nPrerequisites:\nBasic knowledge of JavaScript, React, and Node.js\nFamiliarity with REST APIs and HTTP concepts\nUnderstanding of React hooks and functional components\nNo prior authentication or Firebase knowledge required",
      "target_audience": [
        "Frontend Developers Looking to Expand into Full-Stack Development",
        "Aspiring Full-Stack Developers",
        "Backend Developers Wanting to Learn Firebase and React Integration",
        "Intermediate Developers Looking to Enhance Authentication Skill",
        "Entrepreneurs and Startup Founders",
        "Students and New Developers"
      ]
    },
    {
      "title": "JavaScript Web Animations with Greensock (GSAP) 2025",
      "url": "https://www.udemy.com/course/animating-with-greensock/",
      "bio": "Web JavaScript Animations with GreenSock + Practical Projects",
      "objectives": [
        "An Introduction to the GreenSock Animation Platform (GSAP)",
        "Enhancing Your Animations with Easing Techniques",
        "Mastering Complex Animation Timelines",
        "Adding Personality to Your Website through Scroll-Based Animations",
        "Applying Your Knowledge to Real-World Websites"
      ],
      "course_content": {},
      "requirements": [
        "Prerequisites for this course include familiarity with HTML and CSS.",
        "A basic understanding of JavaScript and jQuery is beneficial but not mandatory.",
        "Additionally, you will need a computer with a code editor."
      ],
      "description": "Take your front-end web development skills to the next level with this comprehensive course on sophisticated, interactive animations using GreenSock (GSAP).\nGreenSock is the most popular and widely acclaimed animation library in the industry, known for its unparalleled performance, versatility, and ease of use.\nStarting with the basics of GreenSock, you will learn essential concepts such as GSAP Object, gsap .from (), gsap .to (), gsap .fromTo (), Delay & Repeat, Ease, and Stagger. Discover how to create stunning animations with precision and control.\nNext, delve into the power of timelines as you learn how to orchestrate complex animations seamlessly. Explore timeline labels and control functions such as play, pause, restart, and reverse, giving you full mastery over your animations.\nAnimate elements based on scroll events with the dedicated section on \"Animate on Scroll.\" You'll dive into ScrollTrigger, GreenSock's powerful scrolling animation tool, and learn its basic implementation. Explore advanced techniques like ScrollTrigger Scrub & Pin, adding dynamic and captivating effects to your websites.\n\n\nPractice on Real-World Projects\nPut your newfound knowledge into practice with exciting hands-on projects. Create a scrolling progress bar, design an animated website header, implement image scrubbing effects triggered by scrolling, dynamically change colors based on scroll events, build an eye-catching website loader, add captivating cursor animations, and create impressive staggered scroll animations.\n\n\nWhy take this course?\nBy the end of this course, you will have a solid understanding of GreenSock and its capabilities, equipped with the skills to add sophisticated and interactive animations to your web projects. Join now and unlock the full potential of GreenSock to create visually stunning and engaging web experiences that captivate your audience.\n\n\nEnroll today and let the animation magic begin!",
      "target_audience": [
        "Developers aiming to enhance their resumes and make a strong impression on potential employers.",
        "Students seeking to expand their knowledge of animations.",
        "Individuals who are proficient in website development but desire to create more interactive and engaging experiences.",
        "Anyone interested in mastering the creation of sophisticated UI elements.",
        "Enthusiasts keen on learning web animation techniques."
      ]
    },
    {
      "title": "Build Real World Website with PHP, PDO & MySQL",
      "url": "https://www.udemy.com/course/build-real-world-website-with-php-pdo-and-mysql/",
      "bio": "Let's Learn Prepared Statements, PDO & Building Dynamic Websites with PHP and MySQL",
      "objectives": [
        "How to work with prepared statements",
        "How to work with PDO(PHP Data Object)",
        "Building a simple blogging website",
        "URL's rewriting and more..."
      ],
      "course_content": {},
      "requirements": [
        "Basics PHP Knowledge's",
        "A computer with internet connection"
      ],
      "description": "Welcome to this course!\n\n\nThis is practical course. That mean you will not just learn prepared statements, PDO (PHP Data Object) but we will build project from complete scratch. Let's build awesome website with PHP and MySQL and let's learn how to build dynamic websites.\nWe will build a simple blogging website with (backend) CMS (Content Management System) using PDO, PHP and MySQL. You will learn how to build a dynamic website in practice.\n\n\nWhat do I mean by task list?\nI mean, we will be building a task list that would be a task(crud operation) with a list of users!\n\n\nCOURSE CONTENT:\nPrepared Statements\nBuilding Task List with Prepared statements\nPDO  PHP Data Object\nBuilding Task List with PDO\nSimple blogging website with little CMS\n\n\nSee you inside!",
      "target_audience": [
        "Want to learn how to implement prepared statements",
        "Want to learn and implement PDO",
        "Curious about building dynamic website"
      ]
    },
    {
      "title": "WordPress Gutenberg Blocks for Beginners.",
      "url": "https://www.udemy.com/course/gutenberg-blocks-for-beginners/",
      "bio": "Learn how to code blocks from scratch for Gutenberg, the new WordPress editor.",
      "objectives": [
        "You'll be able to build blocks from scratch for Gutenberg, the new WordPress editor.",
        "You'll be able to set up your development environment for building Gutenberg blocks.",
        "You'll feel very comfortable using the command line to copy, create, delete, and move files and directories.",
        "You'll be able to build a WordPress plugin from scratch.",
        "You'll know how to create an easy to maintain, scalable architecture for your Gutenberg blocks.",
        "You'll know how to use your blocks in both plugin and production environments."
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "Setting up Mamp",
          "Setting up and using the Command Line",
          "Installing Node.js",
          "Getting a Text Editor",
          "Installing WordPress",
          "Installing Gutenberg",
          "Creating a WordPress plugin"
        ],
        "Creating Your First Block": [
          "Enqueuing Scripts",
          "Registering your Block",
          "Setting up package.json",
          "Setting up Webpack",
          "Using your First Block"
        ],
        "Applying Styles with Stylesheets": [
          "Enqueuing Scripts",
          "Registering your Block",
          "Setting up package.json",
          "Setting up Webpack",
          "Using your Stylesheets Block"
        ],
        "Creating a Block with the RichText Component": [
          "Enqueuing Scripts",
          "Registering your Block",
          "Setting up package.json",
          "Setting up Webpack",
          "Using your Editable Block"
        ],
        "Creating a Block with a Toolbar": [
          "Enqueuing Scripts",
          "Registering your Block",
          "Setting up package.json",
          "Setting up Webpack",
          "Using your Block with a Toolbar"
        ],
        "Creating a Block with a Media Uploader": [
          "Enqueuing Scripts",
          "Registering your Block",
          "Setting up package.json",
          "Setting up Webpack",
          "Using your Block with a Media Uploader"
        ],
        "BONUS: Creating a Scalable Architecture for your Blocks": [
          "Creating the File Structure",
          "Adding your Blocks",
          "Enqueuing Scripts",
          "Setting up package.json",
          "Setting up Webpack",
          "Internationalizing your Blocks",
          "Using All Your Blocks",
          "Using Source Maps"
        ],
        "Where do I go from here?": [
          "Using Blocks in Production and Next Steps"
        ]
      },
      "requirements": [
        "Be familiar with WordPress.",
        "A desktop Mac or Windows computer is required.",
        "Be familiar with HTML, CSS, JavaScript, React and PHP. None of these are required, but knowing a little about each will definitely help."
      ],
      "description": "This course is for anyone who wants to learn how to build Gutenberg blocks from scratch.  Are you a WordPress theme developer?  Are you a WordPress plugin developer?  Do you build WordPress websites?  Then you really need to check this course out.\nIn the not so distant future WordPress is going to be releasing a new editor codenamed Gutenberg.  This new editor will replace the existing TinyMCE wysiwyg editor with the goal of making it easy to create rich page and post layouts.\nWhat the heck is a Gutenberg block?  Great question!  These new rich page and post layouts will be built using a collection of blocks.  A Gutenberg block is then just a piece of a website.  A block could be as simple as a button.  Or a button with different customization options.  Or a button with a form to subscribe to a newsletter.  Or a header with a customizable background image.  Get it?!\nIn this course we walk you through every step of creating a block, from setting up your local development environment to installing WordPress, building your first block in development, and finally preparing your your block plugin for production with lots of opportunities to get really comfortable with the command line and other modern javascript dependencies such as webpack and the Node.js package manager NPM.\nWe teach you everything you need, and nothing you don't.",
      "target_audience": [
        "Anyone who wants to learn how to build blocks from scratch, for the new Gutenberg editor for WordPress.",
        "Anyone beginning block development for the new Gutenberg editor for WordPress.",
        "Anyone who wants to learn how to build a WordPress plugin.",
        "Anyone who wants to get more familiar with using React and WordPress.",
        "Anyone who wants to get more comfortable with using the command line, the NPM package ecosystem, and webpack."
      ]
    },
    {
      "title": "PHP Laravel: Build Amazing Streaming Service",
      "url": "https://www.udemy.com/course/php-laravel-2023-build-amazing-streaming-service/",
      "bio": "Build Amazing Streaming Service with PHP Laravel MySQL and Bootstrap and Build up your Web Development Skills",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Laravel UI package",
        "Learn how the MVC structure works in Laravel",
        "Integrate your own theme easily",
        "Work with Models and Eloquent the professional way",
        "Work with views and EloqWork with Controllers and Eloquent the professional wayuent the professional way",
        "Work with Controllers and Eloquent the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn some advanced routing ways",
        "work with Middlewares and Guards",
        "Learn to validate with Requests",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Create following system",
        "Create views counter system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Before you Start with the Course",
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Creating Authentication System and Getting Started": [
          "Design and Code for the Project",
          "Creating New Laravel Project",
          "Creating Authentication System",
          "Integrating our Theme pt.1",
          "Integrating our Theme pt.2",
          "Improving our Design"
        ],
        "Getting Main Features Done": [
          "Displaying Shows",
          "Displaying More Shows pt.1",
          "Displaying More Shows pt.2",
          "Displaying Details for every Show",
          "Displaying More Shows"
        ],
        "Working with Shows and Comments and Episodes": [
          "Displaying Comments for every Show",
          "Inserting New Comments",
          "Following Shows",
          "Making Views Dynamic",
          "Fetching Episodes for every Show",
          "Displaying Comments for Episodes",
          "Fixing Errors"
        ],
        "Working with Categories and Searching for Shows and More": [
          "Displaying all Categories",
          "Showing Shows for every Category",
          "Displaying Followed Shows",
          "Searching for Shows",
          "Validating and Cleaning up pt.1",
          "Validating and Cleaning up pt.2"
        ],
        "Getting Started with Admin Panel": [
          "Design and Code for Admin Panel",
          "Creating Custom Authentication with Laravel pt.1",
          "Creating Custom Authentication with Laravel pt.2",
          "Validating Authentication System pt.1",
          "Validating Authentication System pt.2"
        ],
        "Working with Admins Section": [
          "Working with Index Page",
          "Displaying all Admins",
          "Creating New Admins"
        ],
        "Working with Shows Section": [
          "Displaying all Shows",
          "Creating New Shows",
          "Deleting Shows with Images"
        ],
        "Working with Genres Section": [
          "Displaying and Deleting Genres",
          "Creating New Genres"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of Laravel would help a lot"
      ],
      "description": "PHP Laravel 2024: Build Amazing Streaming Service\nCourse Description:\nIn this online course, you will learn how to build an amazing streaming service using PHP Laravel. The course focuses on the PHP Laravel framework, which is widely used for web development due to its robust features and ease of use\n\n\nThroughout the course, you will gain hands-on experience in building a streaming service with an admin panel using PHP Laravel, MySQL, Bootstrap, and PDO You will learn how to create a user-friendly interface, implement streaming functionality, and manage content using the Laravel framework.\n\n\nCourse Highlights:\nLearn to code in PHP Laravel and its expressive, elegant syntax\nGain practical experience in building a streaming service with an admin panel.\nUnderstand how to integrate PHP with MySQL for database management\nExplore the powerful features of the Laravel framework for web development\nDevelop skills in front-end development using Bootstrap for responsive design.\nLearn how to implement streaming functionality and manage content.\n\n\nCourse Structure:\nThe course is designed to provide a comprehensive learning experience, taking you from beginner to proficient in PHP Laravel. It consists of video tutorials to reinforce your understanding of the concepts. You will also have access to additional resources and support to enhance your learning journey.\n\n\n\nTarget Audience:\nThis course is suitable for individuals who have basic knowledge of PHP and web development and want to expand their skills in building streaming services. It is ideal for web developers, programmers, and anyone interested in building robust web applications.\n\n\n\nCourse Benefits:\nBy the end of this course, you will have the skills and knowledge to build an amazing streaming service using PHP Laravel. You will be able to create user-friendly interfaces, implement streaming functionality, and manage content effectively. This course will empower you to develop high-quality web applications and enhance your career opportunities in web development.\n\n\n\n\nInstructor:\nThe course is taught by an experienced instructor who has expertise in PHP Laravel and web development. They will guide you through the course material and offer support throughout your learning journey.\n\n\n\nCourse Duration:\nThe course duration may vary depending on your learning pace and commitment. It is designed to be self-paced, allowing you to learn at your convenience.\n\n\n\n\nCertification:\nUpon successful completion of the course, you will receive a certificate of completion, which can be added to your professional portfolio. Enroll now in the PHP Laravel 2023: Build Amazing Streaming Service course and take your web development skills to the next level!",
      "target_audience": [
        "People who learned PHP Laravel and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "MERN STACK WordPress Clone - Build Ultimate CMS",
      "url": "https://www.udemy.com/course/react-node-mern-cms-wordpress-clone/",
      "bio": "Learn to build real world CMS like WordPress using React NextJs Node MERN Stack with SEO",
      "objectives": [
        "Learn FullStack JavaScript Web Development",
        "Learn MERN Stack (MongoDB ExpressJs ReactJs NodeJs)",
        "Learn Ant Design to build UI",
        "Learn the concept of building a Real World CMS (Content Management System)"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript or any other Programming Language"
      ],
      "description": "Learn to build FullStack JavaScript Web Apps using MERN (MongoDB ExpressJs ReactJs NodeJS) Stack\nIf you love learning new skills and building real world apps without spending years learning the basics then this course is for you.\nThis course focuses on practical aspect of building FullStack apps. No matter how good your understanding is of any language or framework, until you have hands on practical experience, you will get completely lost when you have to actually build an app from the ground up.\nBeing able to code your thoughts and ideas and producing something real that can be used by millions of people around the world is a fascinating thing. With this course, you will be able to do just that.\nWe all know WordPress is the most popular and most used CMS (Content Management System) in the world. However most of the time you need to customize WordPress sites using different themes plugins and modifying the codebase. That means even though, it's really easy to get started with WordPress, you will spend a lot more time money and resources to scale and customize your WordPress site.\nThat's why I have decided to build a WordPress clone of my own. When you learn to build such massive CMS on your own from scratch, not only you understand how things work under the hood, you will also gain massive experience on building FullStack apps.\nUsing same programming language (JavaScript) in both backend and frontend is another attraction of using MERN stack for your next project.\nWith this course, you will learn to build fast, responsive sites using JavaScript (ReactJs NodeJs) from scratch and push all the boundaries of FullStack web development.\nBy the end of this course, you will not only become a master of MERN stack, you will also have a real world CMS running in the cloud, ready for millions of users around the world to use. Are you excited? Join me in this course and experience the joy of coding an awesome CMS of your own from ground zero.",
      "target_audience": [
        "Anyone who is interested to learn how to code FullStack JavaScript Web Apps"
      ]
    },
    {
      "title": "Learn XML From Scratch: Absolute beginner course",
      "url": "https://www.udemy.com/course/learn-xml-from-scratch-absolute-beginner-course/",
      "bio": "Learn how XML is used to store and transport data",
      "objectives": [
        "Know what XML is used for",
        "Create custom tags",
        "Create XML document Structure",
        "Define root element",
        "Define child elements",
        "Use XML Comments"
      ],
      "course_content": {},
      "requirements": [
        "Plain Text editor",
        "Determination to learn"
      ],
      "description": "XML stands for extensible markup language used to store and transport data. It was created to make it easier to share information across multiple platforms.\nIn this beginner's course you will learn the basics from creating XML syntax to a full XML document structure.\nXML is a popular data exchange format used in a variety of places like web development, Databases and legacy systems. XML in a way acts as a bridge\nin data exchange or interpretation.  If you have data in say a very old legacy system that you want to transfer or make available in a more\nmodern system you can use XML to translate the data so both systems can talk to each other. XML unlike HTML allows you to define your own tags thus giving you the freedom and flexibility to design your document\nstructure to suit your purpose. If you have a basic understanding of HTML and CSS XML will be easier to learn but the course is also easy and basic enough to learn.\nThe lectures in this course include:\n\nWhat is XML\nsyntax\nRoot Element\nCustom Tags\nNested Elements\nXML Document Structure\nXML Comments\nThis is a video based course and designed with the absolute beginner in mind. By the end of this course you will be able to create your very own basic XML document with custom tags and elements.\nI look forward to welcoming you to the course.\nThank You",
      "target_audience": [
        "Anyone with basic knowledge of HTML and CSS",
        "Anyone determined to learn something new"
      ]
    },
    {
      "title": "Wordpress Theme Development With ACF : For Themeforest",
      "url": "https://www.udemy.com/course/wordpress-advanced-theme-development-with-acf-acf-pro/",
      "bio": "Learn WordPress Themes For Themeforest using HTML, CSS, PHP, Bootstrap , CPT and ACF & ACF Pro : Wordpress Development",
      "objectives": [
        "You will be Able to Create Custom WordPress Themes from Scratch",
        "Customize WordPress themes",
        "Work with WordPress theme Custom Post Types and Advanced Custom Fields",
        "Create custom WordPress theme tags",
        "Master how WordPress works behind the scenes",
        "Build a full custom WordPress website Using ACF pro",
        "Write Custom WordPress Functions",
        "Modify and implement the WordPress loop",
        "Develop custom WordPress theme sidebars",
        "Bundle all plugins using TGM plugin",
        "Make a custom Plugin for Custom post types of your themes",
        "Build a multipage business Website using ACF and all the wordpress standards functionnality",
        "Make a Demo import \"One Click demo importer \" Like a pro",
        "Enqueue styles and Scripts the right way"
      ],
      "course_content": {},
      "requirements": [
        "PHP",
        "HTML",
        "CSS",
        "Javascript",
        "OOP",
        "Basic wordpress usage"
      ],
      "description": "Note: this is a backend PHP course for WordPress\n**********************************************************\nWelcome to WordPress advanced Theme development with ACF and ACF PRO. Many courses are pretending that they teach you everything you need to know about WordPress Theme creation. This is not always true .because if you are planning to be good at WordPress theme development you must have the ability to read a lot of documentation .especially if you plan to sell on markets like ThemeForest or WordPress official website.\n\n\nSo in this course, I will help you make a good step into WordPress theme development. I will convert by the end of this course a fully HTML CSS bootstrap template into a functional WordPress theme.\n\n\nSo most of you ask this question: what I can get from this course.\nWell the answer is :\nYou will be able to convert any bootstrap template to a fully functional WordPress theme using various technologies such as Custom post types and advanced custom fields.\n\n\nwhat we will cover in this course?\nWe will have a good knowledge of how to enqueue styles and JS scripts the right way. And we will get a piece of basic knowledge on how WordPress works behind the scenes with the practical example we will also know how to make the famous loop of blog posts the right way.\n\n\nAfter that, we will convert all sections and pages of our theme using advanced custom fields free version and pro version both of them.\nAnd we will see the method of creating A nice portfolio and gallery pages using the right WordPress PHP functions. We will see also how to create widgets for the blog single page and in the footer of the theme, comments for both blogs pages. Finally, we will make our code clean with the standards of web security \"Data Sanitization \", we will create the famous child theme and we will create a simple plugin for our custom post types. And last but not least we will know how to use TGM to bundle all our plugins into the Demo importer which we will implement with the aid of the One-click demo importer plugin.\nWhat exactly are you going to learn?\nWe will start with the basics. You'll learn how to install WordPress the right way. And that's something not everyone knows how to do (trust me!). And, step by step, we will dive into more interesting topics.\nYou'll learn things like:\nHow the basic structure of the theme works - from scratch\nHow to integrate the theme with Bootstrap - any version\nInner template files and essential WordPress pages\nNative functions and tools that bring the entire mechanism of the theme to life\nAnd much more... You'll also learn how to handle some specialized tools and APIs, like:\nACF and custom post types in general, you will create your CPT and make them editable with advanced custom fields ACF and ACF pro.\nThe powerful TGM Plugin Activation library. If you intend to redistribute your work, TGM will help you package all your plugins with the theme\nAnd finally, you'll also learn how to make A one demo importer and a simple plugin for all your CPT \"custom post types\"\nWe will provide the initial HTML and CSS template that we will convert step by step and of course the final project or theme in the resources.\n\nHow is the course different?\nThe course’s uniqueness is its versatility in its benefits. It offers comprehensive 49 lectures, carefully classified into sections, leaving no topic untouched.\nThe best part is my eagerness to assist you 24/7. To solve your query sooner than possible is my priority. The excellent response time will allow you to follow your own pace in your project.\nSo, are you ready for this fantastic journey? You can always watch the free available lectures before you make your decision. Remember, this is a Udemy course, so you’ve nothing to lose. You can count on our 100% 30-day money-back guarantee in case you don’t like it. No questions asked.\nSo join me right now. I can promise you this will be a journey that will change your professional career for good.",
      "target_audience": [
        "Developers who want to learn how to create wordpress themes using ACF advanced custom fields",
        "Anyone who want to initiate himself to wordpress theme development",
        "Beginner and advanced user of PHP and HTML & CSS"
      ]
    },
    {
      "title": "Learn Oracle Visual Builder (VBCS) from scratch: Gen 2",
      "url": "https://www.udemy.com/course/learn-vbcs-from-scratch/",
      "bio": "(2022 Version) For beginners, learning to create web pages, web applications with Oracle Visual Builder (VBCS)",
      "objectives": [
        "Develop skills to work with Oracle Visual Builder",
        "Build web applications with Oracle Visual Builder",
        "Build web pages with Oracle Visual Builder",
        "Build extensions for Fusion Cloud applications, Integration,..etc with VBCS"
      ],
      "course_content": {
        "Introduction to Visual Builder": [
          "Course Introduction",
          "Visual Builder community, resources and documentation",
          "Overview of Web Based designer / development environment",
          "Overview of terminologies and navigation for a Web Application"
        ],
        "(Optional) Provisioning Visual Builder instance": [
          "(Optional) With Visual Builder Studio",
          "(Optional) With Oracle Integration"
        ],
        "Learn VBCS by building Employee web application": [
          "Create a new Visual Builder application",
          "Create Business Objects and relationships",
          "Create Business Objects with Business Diagram",
          "Create collapsible layout with oj-collapsible element",
          "Adding fields to accept search parameters within form layout",
          "Make input field as required and also mark with * symbol",
          "Add table component to display employee data with basic filter criteria in SDP",
          "Accepting search criteria from user and filtering employee records in table",
          "Create JavaScript function to build query parameter for filter criteria",
          "Modify JavaScript and reset SDP variable",
          "Add loading pop-up screen with progress bar to a web page",
          "Modify table column and make field as hyperlink and disable column sortable",
          "Add dialog to display more details for an employee on click on hyperlink",
          "(Assignment) Add 2 more fields in dialog and add margin at top of table",
          "Export data to a CSV file on click of button",
          "Overview on Shell Page (Root Page) and fragments",
          "Add Company logo and modify company name in web page header",
          "Modify button in header and route to YouTube / Google / Web in shell page",
          "Modify web page footer section",
          "Stage and Publish Web Application, get live URL"
        ],
        "Overview on managing application": [
          "How to edit an application post publishing or create new version",
          "Lock and unlock live web application",
          "Rename an application",
          "Duplicate an application",
          "Delete an application",
          "Allow anonymous access to application for an user",
          "Add anonymous user to Business Object's role based security"
        ],
        "Overview of Business Object in Visual Builder": [
          "Add a row (record) manually",
          "Create a formula field",
          "Create Aggregation field"
        ],
        "Enhance Employee application to onboard a new employee": [
          "Create a page to input details for a new employee",
          "Create a object variable and assign the values entered by user",
          "Create a Submit button and style with app.css file",
          "Create a event on click of button and insert employee details in Business Object",
          "Customize Department Select (Single) component with table collection template",
          "Reset employee details variable on success and add margin top to form layout",
          "Restrict min and max hire date for selection in UI",
          "Add navigation list to the shell page",
          "Add on selection event for navigation list to navigate between the pages"
        ],
        "Enhance Employee application to manage employees": [
          "Create a new employee management page and add navigation",
          "Add editable table collection to edit details",
          "Create beforeRowEdit and beforeRowEditEnd events on editable table",
          "Save employee details edited back to business object",
          "(Assignment) Styling manage employee page"
        ],
        "Working with REST API's": [
          "Display the flags and name of all the countries across the globe with REST API"
        ],
        "Working with Integration": [
          "Invoke Integration exposed as REST API over GET / POST http methods"
        ],
        "Working with SOAP web service": [
          "Get BIP report data or Invoke any SOAP web service in VBCS with Integration"
        ]
      },
      "requirements": [
        "Basic knowledge on HTML, JavaScript (node js) and CSS is needed"
      ],
      "description": "Get Started with Visual Builder\nTo use Oracle Visual Builder you should be familiar with the tools available for building your applications.\nAbout Oracle Visual Builder\nOracle Visual Builder is a visual and declarative cloud environment for developing and hosting engaging mobile and web applications.\nVisual Development Experience\nIt provides simple but powerful visual development tools to create responsive web and mobile apps—all without the need to install any additional software. This rich set of visual tools help you quickly design your app by dragging and dropping UI components and customizing their attributes to define behavior. While these tools lend themselves to low-code developers, experienced developers can just as easily access the underlying source code, even extend it using standard HTML5, JavaScript, and CSS techniques for complex needs.\nEasy Access to Data\nVisual Builder makes it easy to access your app’s data through REST-based services. So you can create reusable business objects to implement your app’s business logic and store its data, which can then be managed through REST endpoints that Visual Builder generates for you. Or you can pick data objects exposed by Oracle SaaS or Oracle Integration applications in an integrated catalog of REST services. You can also access data from any external REST service with just a few clicks.\nDevelopment and Hosting Platform\nVisual Builder is a complete development tool as well as a hosting platform, which means you can manage your application’s lifecycle right from development to test and final publishing. Version management and data migration are built into an app’s lifecycle, making it easy for you to stage and publish your app and manage its data in every phase.\nWhat’s more, Visual Builder is a managed service. This means that once you provision a Visual Builder instance, there’s very little you need to do beyond developing and publishing your app. Everything the app needs to run successfully (including a web server to host your application and to secure data access) is taken care of. Thus, as a development team, you can take your app from development to stage and publish it in a very short time.\n\nYour Visual Builder instance  provides capabilities for your visual application both as a visual development tool (at the top) as well as an app hosting platform with a built-in web server (indicated by server-side components at the bottom):\nAs a visual development tool, Visual Builder provides access to UI components and WYSIWYG interfaces that leverage the open-source Oracle JavaScript Extension Toolkit (JET). This visual environment, known as the Designer, features several visual editors that a development team can use to collaboratively build rich UIs that span multiple devices. It also supports Redwood, the Oracle standard for user experience, that lets you develop apps that provide the same look and feel as apps delivered from Oracle.\nWithin this environment, you can develop browser-based responsive web and mobile apps. You can create progressive web apps, which combine the on-device mobile experience with a web app’s ease of distribution—eliminating the need to download updates from app stores.\nAs an app hosting platform, Visual Builder provides various capabilities to publish and run your app in the cloud, including an embedded database that stores your app’s business objects—essentially Oracle tables with business logic exposed through REST APIs—and their data.\nIt also includes a REST proxy service to manage access to external REST endpoints. When your app’s data comes from REST APIs in Oracle catalogs such as Oracle SaaS or Oracle Integration, the proxy service uses server-side integration with the Oracle Identity Cloud Service (IDCS) to manage authentication and authorization (by default) through identity propagation. When your app’s data comes from other REST endpoints, authenticated REST mechanisms are used to manage credentials.\nTogether, these components provide the resources required to host your visual app and manage its data.\nWhen your apps are published, they become available to your users in the cloud, from any desktop or mobile device, with communication to the app’s underlying JET components secured over HTTPS and REST.\nHow to Begin with Oracle Visual Builder Subscriptions\nHere's a summary of the key steps to help Oracle Cloud account administrators get started with Oracle Visual Builder:\nSign up for a free credit promotion or purchase a subscription. See Request and Manage Free Oracle Cloud Promotions or Buy an Oracle Cloud Subscription in Oracle Cloud Infrastructure Documentation.\nSign in to your Cloud Account. See Access Oracle Visual Builder.\nCreate accounts for your users and assign them appropriate privileges and roles. See Managing Users, User Accounts, and Roles in Managing and Monitoring Oracle Cloud.\nAccess Oracle Visual Builder\nTo develop applications using Oracle Visual Builder, you access the service through a web console.\nTo access Oracle Visual Builder:\nSign in to your Oracle Cloud Account using your user name and password. See Signing In for the First Time in Oracle Cloud Infrastructure Documentation.\nFor more information about sign-in options, see Understanding the Sign-In Options.\nEnter your identity domain and user credentials. Click Sign In.\n\n\n\n\nAnatomy of Visual Applications\nTo develop applications with Oracle Visual Builder, you need to understand a few basic concepts.\nThe basic components of a visual application are mobile applications, web applications, service connections, business objects, and processes. The basic building blocks of a mobile or web application are user interface (UI) components, variables, action chains, page flows and page navigation, and data access through REST endpoints.\nThe building blocks and their interactions can be summarized as follows.\nVariables are the mechanism used to store and manage client state. Every variable has a type and a scope.\nAn action chain is composed of a set of one or more individual actions. The action chain is triggered by an event. (For example, a button click can trigger navigation to a page.) Each action represents a single asynchronous unit of work. An action chain can define input parameters and local variables that are available only in the context of that action chain, and can also access application-scoped input parameters and variables.\nPage flows and page navigation govern the transmission of information from one page to another. Each individual page has a lifecycle, as does an application. Each lifecycle event (entry or exit from a page, for example) can provide a trigger for an action chain.\nA UI component encapsulates a unit of user interface through a defined contract – specifically, the Oracle JavaScript Extension Toolkit (JET) components contract. Component attributes are bound to variables, and component events and variable changes trigger action chains.\nAll data entering a mobile or web application is based on REST. This data can come from business objects and service connections. Actions and variables control how data is sent to and from a REST endpoint in a mobile or web application. A developer can create a type that matches the REST payload and pass the data using a variable of that type.\n\n\nVariables and Lifecycles\nApplication and page variables are constructed automatically in a specific application or page lifecycle stage.\nInput parameters that are passed by means of navigation rules, or bookmarkable variables that are provided on the URL, are automatically assigned to their corresponding variables. When you modify the value of a bookmarkable variable, the URL is automatically adjusted to match that new value (that is, a new history state is pushed). In this way the page is always bookmarkable and does not require any specific user action in order to be bookmarked.\nVariables and Events\nA variable triggers an onValueChanged event when it is modified. This event is triggered only when the value is actually changed; setting a variable value to the same value does not trigger an event. The variable must be explicitly changed to send the event. For example, if a variable is a complex type, modifying an inner property does not fire this event; the entire variable must be set by means of an API call. In this case, the framework can add to the payload those parts of the structure that have changed. For example, if you changed the name property of an Employee and then reset the Employee, the framework would send an event that the Employee changed, and as part of the payload indicate that the name has changed.\nAn onValueChanged event can trigger a user-defined action chain. The trigger has the payload of the former and new values of the variable.\nFor more information, see Understanding Actions and Action Chains.\nUnderstand Actions and Action Chains\nAn action chain is made up of one or more individual actions, each of which represents a single asynchronous unit of work. Action chains are triggered by events.\nAn action chain, like a variable, has a scope: it can be defined at the application level or the page level. You can call an application-scoped action chain from any page. You can call a page-scoped action chain only from the page on which it is defined.\nTo create an action chain, you can define your own actions and can also use predefined actions. Actions within a particular chain run serially, and multiple action chains can run concurrently. Action chains simplify the coordination of asynchronous activities.\nA single event may simultaneously trigger multiple action chains. For example, the page enter event may trigger multiple data fetch action chains simultaneously.\nAn action is a specific function that performs a task. In JavaScript terms, an action is a Promise factory. An action can exist only within an action chain, not independently.\nAction Chain Context and Contract\nAction chains have a well-defined context and contract: an action chain orchestrates its underlying actions, coordinating state flow and the execution path. The action chain can define input parameters and local variables that are only available in that context. An example of an action chain is one that makes a REST call (first action), then takes the result of that and stores that in a variable (second action).\nAn action chain maintains its own context, which is accessible through an implicit object called $chain. Actions may export new state to that context, but it is only available to future actions along that same action chain. An action chain can be created in the context of a page or the application and exists within the scope of the page or the application. It has a defined interface and contract and can be called by event triggers using its ID.\nThe action chain contract has three parts.\nAction Chain PartDescriptionIDString identifier for the action chainInput parametersZero or more variables that can be passed into the action chain and added to the action chain contextVariablesZero or more variables that are internal to the action chain and usable internally by actions\nFor more information, see Action Chains in the Oracle Visual Builder Page Model Reference.\nBuilt-in Actions\nVisual Builder comes with a set of built-in (or predefined) actions for an action chain, used for example navigation or assigning variable values. An action has the following parts that the developer can define:\nAction PartDescriptionIDString identifier for this action instance. This action part is optional, since the ID is necessary only if you wish to refer to the action’s results later in the action chain.ConfigurationAny properties of the action that the user can configure. For example, for the Navigate action, the page to navigate to and any parameters required for that navigation.Outcomes and ResultsAn action may have multiple potential outcomes (such as success or failure, or a branch). It can also return results.Exported StateAn action may export state that is available to future actions within the context of the same action chain.\nThe predefined actions include conditionals and other processing instructions. For example, you can use if and switch actions that take an expression and offer multiple different chain continuations depending on the result.\nFor details about predefined actions, see Actions in the Oracle Visual Builder Page Model Reference.\nEvent Handling for Action Chains\nAction chains are defined at the application or page level and triggered by a specific event, such as onValueChange (for a variable), or vbEnter. An event may include a payload, which can then be used within the action chain. A payload may be passed into an action chain through the input parameters. The Visual Builder user interface can help you create action chains automatically (with appropriate input parameters) based on a particular event.",
      "target_audience": [
        "Beginner in Oracle Visual Builder (VBCS) as developer",
        "Low code application developers with Oracle Visual Builder (VB)",
        "Visual Builder Studio (VBS) concepts are not covered in this course"
      ]
    },
    {
      "title": "Full-Stack Web Developer Bootcamp with Real Projects",
      "url": "https://www.udemy.com/course/full-stack-web-developer-bootcamp-with-real-projects/",
      "bio": "Complete Web Development using Node, Express and JavaScript",
      "objectives": [
        "At the end, students will become full-stack web developer and they can build complete web applications",
        "After taking this course, students will be able to run online business",
        "Students will learn Nodejs, Expressjs, Passport, Stripe, HTML, CSS, Bootstrap, JavaScript and jQuery"
      ],
      "course_content": {},
      "requirements": [
        "Computer or laptop",
        "Internet connection"
      ],
      "description": "Join the Full-Stack Web Developer Bootcamp with Real Projects and transform your coding skills into a professional portfolio! This hands-on tutorial is designed to take you from beginner to job-ready developer by teaching you both frontend and backend development using the most in-demand technologies like HTML, CSS, JavaScript, React, Node.js, Express, and MongoDB.\nThroughout the bootcamp, you won’t just learn theory — you’ll build real-world projects that simulate tasks you’ll face in a professional environment. From responsive websites and interactive web apps to full-stack applications with databases and user authentication, you’ll gain practical experience that employers and clients value.\nYou’ll also learn crucial tools like Git, GitHub, RESTful APIs, and deployment techniques to launch your apps live on the web. Each module is designed with step-by-step guidance, code-along lessons, and project-based challenges to reinforce your skills.\nBy the end of the bootcamp, you’ll have a strong portfolio of completed projects, the confidence to tackle freelance jobs or developer roles, and the ability to build and launch your own full-stack applications. Whether you want to switch careers, freelance, or build a startup, this bootcamp is your complete roadmap to becoming a professional web developer.\nWhat are you waiting for? Enroll Today!",
      "target_audience": [
        "Anyone who wants to build their own online business",
        "Everyone who wants to learn full-stack web development process"
      ]
    },
    {
      "title": "30 CSS Exercises",
      "url": "https://www.udemy.com/course/30-css-exercises/",
      "bio": "Boost your CSS skills",
      "objectives": [
        "Learn CSS",
        "Train your CSS Animations",
        "Train your responsiveness",
        "Train your integration skills",
        "Train a lot of css properties and values",
        "CSS Grid",
        "Flexbox",
        "Etc ..."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Source Code",
          "Ressources"
        ],
        "Alignment": [
          "Instructions",
          "Resolution"
        ],
        "Navbars": [
          "Instructions",
          "Resolution"
        ],
        "Hero Page": [
          "Instructions",
          "Resolutions part 1",
          "Resolutions part 2"
        ],
        "Positions": [
          "Instructions",
          "Resolution"
        ],
        "Display values": [
          "Instructions",
          "Resolution"
        ],
        "Selectors": [
          "Instructions",
          "Resolution"
        ],
        "Video Integration": [
          "Instructions",
          "Resolution"
        ],
        "Blinking animation": [
          "Instructions",
          "Resolution"
        ],
        "Hide and Seek": [
          "Instructions",
          "Resolution"
        ]
      },
      "requirements": [
        "A computer"
      ],
      "description": "Welcome to the 30 CSS Exercises course.\n\nCSS is a style language that separates people that have to use it in two groups, those whos love it, and those who hate it.\nBut the question is not to love or hate CSS, it's there, and we need it.\n\nAnd except if your website contains only HTML, which is rarely the case, you will have to master it.\nAnd here is the problem, how to master CSS ?\nBy training !\n\nIn this course we will cover a lot of topics through exercises, and the goal for you is to upgrade your research and testing skills.\nYou need to learn to face a problem and start thinking about a variety of solutions, and test them !\n\nHere are the topics covered :\nDisplay\nPositions\nAnimations\nTransitions\nResponsiveness\nA lot of usefull properties (opacity, fonts properties, z-index, etc ...)\nShadows\nSASS Preprocessor\nIntegration (Footer, Form, Hero Page)\nA lot of tricks (checkbox hack, margin collapsing, etc...)\nFlexbox\nCSS GRid\nSelectors\nEtc (look at the curriculum!)\n\nI prepared 2 big folders for you, with the starter files and the final source code of every exercise.\nWith that you can easily follow the whole course, you just have to watch the instruction video of each exercise, then try to resolve it on your own, and finally watch the resolution video.\n\nSounds exciting right ? See you on the othe side.",
      "target_audience": [
        "Students",
        "Web Developers",
        "Front-End Developers",
        "Web Developpement Developers"
      ]
    },
    {
      "title": "Linode: Deploy Scalable React Web Apps on the Cloud",
      "url": "https://www.udemy.com/course/linode-deploy-scalable-react-web-apps-on-the-cloud/",
      "bio": "Cloud Computing | IaaS | Server Configuration | Linux Foundations | Database Servers | LAMP Stack | Server Security",
      "objectives": [
        "Introduction to Cloud Computing",
        "Cloud Computing Service Models (IaaS, PaaS, SaaS)",
        "Cloud Server Deployment and Configuration (TFA, SSH)",
        "Linux Foundations (File System, Commands, User Accounts)",
        "Web Server Foundations (NGINX vs Apache, SQL vs NoSQL, Key Terms)",
        "LAMP Stack Installation and Configuration (Linux, Apache, MariaDB, PHP)",
        "Server Security (Software & Hardware Firewall Configuration)",
        "Server Scaling (Vertical vs Horizontal Scaling, IP Swaps, Load Balancers)",
        "React Foundations (Setup)",
        "Building a Calculator in React (Code Pen, JSX, Components, Props, Events, State Hook)",
        "Building a Connect-4 Clone in React (Passing Arguments, Styling, Callbacks, Key Property)",
        "Building an E-Commerce Site in React (JSON Server, Fetch API, Refactoring)"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills",
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "Welcome to our latest course, where you will have the opportunity to build customizable and highly scalable React Web Apps on Linode. In this course, you will learn the skills necessary to set up and deploy a remote instance on Linode, as well as the foundational knowledge of Linux and Ubuntu, web servers, and databases. By the end of the course, you will have built and deployed a fully functional E-Commerce site on a remote cloud server.\n\nIn the first section of the course, we will introduce you to the basics of cloud computing and the different service models available, including IaaS, PaaS, and SaaS. You will learn about the advantages of using cloud computing and how it can benefit your projects.\n\nNext, we will guide you through the process of setting up a Linode account and deploying a remote instance on the platform. This will include configuring your instance, setting up networking, and securing your instance with firewalls.\n\nIn the third section, we will delve into the foundations of Linux and Ubuntu. You will learn the basics of the command line interface, file system navigation, and basic Linux commands. This will be essential for managing your remote instance on Linode.\n\nWe will then cover the basics of web servers and databases, including LAMP stack (Linux, Apache, MariaDB, and PHP). You will learn how to install and configure LAMP stack, as well as how to use it to serve your web applications.\n\nIn the fifth section, we will focus on server security, including network and software firewalls. You will learn how to secure your server and protect it from potential threats using popular utilities like UFW, and custom Port configurations.\n\nFrom there, we demonstrate how to scale servers vertically and horizontally using application load balancers. This will include using web servers like Apache and Nginx to distribute traffic and ensure high availability for your web applications.\n\nFinally, we will delve into the world of React.JS. You will learn how to build a calculator, a connect-4 game, and an e-commerce site using React. You will learn about the basics of React components, state, and props, and how to use them to build dynamic, interactive web applications.\n\nBy the end of this course, you will have a solid understanding of how to use Linode to set up and deploy remote instances, as well as the foundational knowledge of Linux, web servers, and databases. You will also have the skills to build dynamic and interactive web applications using React.JS.\n\nThis course is designed for developers who are new to cloud computing and want to learn how to use Linode to build web applications. Some basic knowledge of web development and programming concepts is recommended but not required.\n\nIf you're ready to take your cloud computing and web development skills to the next level, this course is the perfect place to start! Sign up now to get started.",
      "target_audience": [
        "Students interested in Cloud Computing",
        "Students interested in Remote Server Deployment, Configuration and Administration",
        "Students interested in Web Server and Database Server Foundations",
        "Students interested in Building Interactive Web Apps using ReactJS"
      ]
    },
    {
      "title": "From Zero to Flask: The Professional Way",
      "url": "https://www.udemy.com/course/from-zero-to-flask/",
      "bio": "Learn from zero how to build MySQL-powered professional web applications using the Python Flask framework",
      "objectives": [
        "You will be learn the basics of the Python Web programming",
        "You will learn what databases are and how to use them effectively",
        "You will learn how to interact with the database using the MySQL CLI",
        "You will learn how to effectively develop a Flask application",
        "You will learn how to use WTForms library for effective form management",
        "You will learn how to upload images to a web application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Roadmap and Requirements"
        ],
        "Your Development Environment": [
          "Your Python Flask Development Environment",
          "Installing Python3 on Mac with Homebrew",
          "Installing Python3 on Windows 10 with Chocolatey",
          "The Cloud-based Python Development Environment",
          "Virtual Environments",
          "Windows and Mac Virtualenv Setup",
          "PythonAnywhere Virtualenv Setup",
          "Activation and Deactivation",
          "Installing Flask"
        ],
        "Say Hello World": [
          "The Code Editor",
          "Hello World",
          "Running the Application (Windows and Mac)",
          "Running the Application (PythonAnywhere)",
          "Debugging our Application",
          "Debugging on Windows and Mac",
          "Debugging on PythonAnywhere",
          "The Debug Stack",
          "Routing",
          "Templates",
          "The url_for() Function",
          "The Static Folder",
          "Template inheritance",
          "Introduction to Forms",
          "Cookies and Sessions",
          "Configuration Management",
          "Python Dot Env for Windows and Mac",
          "Python Dot Env for PythonAnywhere"
        ],
        "Setting Up Our Database": [
          "An Introduction to Databases",
          "Installing MySQL",
          "Installing MySQL on Mac with Homebrew",
          "Installing MySQL on Windows with Chocolatey",
          "Setting up MySQL on PythonAnywhere",
          "MVC and the Object Relational Mapper"
        ],
        "A Visitor Counter": [
          "Our First Data Driven Application",
          "Initial Application Setup on Mac and Windows",
          "Initial Application Setup on PythonAnywhere",
          "Our Application Libraries",
          "The Environment Settings",
          "The Application Factory",
          "Building Modules with Blueprints",
          "Our First Blueprint",
          "The Counter Model",
          "An Introduction to Migrations",
          "Database Operations from the Shell",
          "The Page Views Counter Application",
          "Setting Up Our Test Infrastructure",
          "Our First Test"
        ],
        "Flogger: A Personal Blog Application": [
          "Flogger, a Simple Flask Blog",
          "Initial Application Setup on Mac and Windows",
          "Initial Application Setup on PythonAnywhere",
          "Our Application Libraries",
          "The Core Application",
          "Setting up the Database",
          "Creating the Author App",
          "The Author Model",
          "The Author Model Migration",
          "Testing the Author Model in the Shell",
          "The Author Registration Form",
          "The Author Registration Template",
          "Author Form Validation",
          "A Better Looking Application",
          "Processing the Author Registration Form",
          "Checking the Record Creation on the Database",
          "Using PDB",
          "Custom Form Validators",
          "The Author Login",
          "Checking the Login Credentials in the Database",
          "Author Session",
          "Logging Out the Author",
          "Flash Messages",
          "Unit Testing the Author App",
          "Login Tests",
          "The Nav Bar",
          "The Blog Post and Category Models",
          "The Blog Post Form",
          "Blog Create Post Template and View",
          "Blog Post View Database Processing",
          "The Login Decorator",
          "Blog Article and Markdown",
          "Blog Post Tests",
          "Blog Home Page and Pagination",
          "Uploading Images",
          "Editing Posts",
          "Deleting Posts and Writing the Edit and Delete Tests",
          "Blog Tags and Tests",
          "Filter by Category or Tags"
        ],
        "The Final Project": [
          "The Final Project"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "A computer with internet access (optional: administrative access to install packages)",
        "A basic understanding of the Python language",
        "A basic understanding of how to use the internet and text editors"
      ],
      "description": "*** Learn Flask Development using the latest Flask version 1.0.2 ***\nThis course will teach you, assuming no prior coding knowledge, how to develop back end web applications the way professional coders do in the top internet startups. How do I know this? Because I’ve been leading tech teams in both large enterprise as well as startup companies in New York City for the past 15 years.\nI have seen a lot of courses and  free tutorials and I can tell you 90% of them just teach bad habits while promising to turn you into a real “web developer”.\nThis course doesn’t promise to turn you into a professional back end developer after you complete it -- it takes much more than the 4 hours of of this course (and probably hundreds of hours of self-practicing) to do that, but it will give you a solid foundation from where to start and continue your training, knowing the right path to become a real professional backend web applications developer using Python.\nThe course goes through a step by step process of setting up your environment, introducing Flask. It then moves to explore SQL databases, using MySQL and finally showing you how to develop a blogging application using all these learnings.\nBest of all, you don’t need to own a computer to take this course, if you don’t own one. You can complete this course from an internet or cyber cafe, as we teach how to to use both locally installed files or an online coding platform.\nAt the end of the course students will be challenged with a final project where all the course material will need to be used to complete it. Students that finish the final project will be eligible for special future promotions.\nIf you are interested in learning how to code from zero and without prior knowledge, but do it using best industry practices towards becoming a professional backend web developer, this is the course for you.\nThe course is divided in 7 sections:\nIntroduction\nYour Development Environment\nSay Hello World\nSetting up our Database\nA Visitor Counter\nFlogger: A Personal Blog Application\nFinal Project\nThe course has more than 4 hours of video tutorials as well as the source code of all the lessons, so that you can see exactly what the whole project looks like in each stage.\nThe course can take anywhere from 7 days to a month to complete based on how much material the student completes daily.\nAdditionally we’re constantly updating the course, adding contents thanks to the feedback of our students.\nSo stop looking around and start the right path to becoming a professional Python backend web developer with this course!",
      "target_audience": [
        "Programmers",
        "Software Developers",
        "Project Managers",
        "Computer students",
        "Entrepreneurs",
        "Software development aficionados"
      ]
    },
    {
      "title": "Laravel 11 - Making a Complete Travel Agency Website (2025)",
      "url": "https://www.udemy.com/course/laravel-making-complete-travel-agency-website/",
      "bio": "Learning the development of a complete dynamic travel agency management website with Laravel 11",
      "objectives": [
        "Complete project using Laravel 11",
        "Multi authentication system using multi guard and multi table",
        "Email Verification System Logic and Implementation",
        "Laravel CRUD system",
        "Contact form email sending",
        "Website settings from admin panel",
        "User registration and verification",
        "User login and forget password system",
        "User profile and dashboard",
        "Admin login and forget password system",
        "Admin profile and dashboard",
        "Photo uploading system",
        "Toastr message notification system",
        "PayPal and Stripe Payment Methods integration",
        "Tour package creation, modification and deletion",
        "Destination package creation, modification and deletion",
        "Advanced package filtering system by price, place, review etc.",
        "Package review system",
        "Package photo and video gallery"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge in PHP Language",
        "Basic Knowledge in OOP Concept",
        "Knowledge about using local server. Ex: xampp, wampp or mamp",
        "Basic knowledge about HTML, CSS and Bootstrap",
        "Basic knowledge about using code editor like Notepad++, Sublime Text or any"
      ],
      "description": "In this course, I have developed a comprehensive Travel Agency Management Website using Laravel, a powerful PHP framework known for its elegant syntax and robust feature set. This project aims to streamline the operations of travel agencies, offering a seamless experience for both administrators and clients.\n\nWhy I have chosen Laravel to develop this application?\n\n\nClean and expressive syntax.\nWell-structured and thorough documentation.\nSecure and straightforward authentication.\nSimplified database interactions with Eloquent ORM.\nPowerful and easy-to-use Blade templating.\nStreamlined development tasks with Artisan CLI.\nEasy scaling and feature integration.\nRich ecosystem and community support.\nElegant and efficient routing system.\nAdvanced query builder for complex queries.\nEffective error and exception handling.\nMiddleware for request filtering and handling.\nCSRF protection for secure forms.\nFlexible and intuitive validation rules.\nBuilt-in support for RESTful API development.\nDatabase migrations for version control.\nHigh-performance with optimized queries.\nEasy file storage and management.\nAutomatic pagination of data.\nEasy localization and internationalization.\nBuilt-in email sending capabilities.\nEasy Integration with payment gateways.\nContinuous improvement and updates.\nAnd Many more.\n\n\nKey Features implemented in this application:\n\n\nChange home page information\nChange logo, favicon etc. via website settings\nSending email through contact form\nSlider items create, edit and delete options\nBlog items create, edit and delete options\nFAQ items create, edit and delete options\nTestimonial items create, edit and delete options\nTeam members create, edit and delete options\nAmenities create, edit and delete options\nDestination create, edit and delete options\nPackage create, edit and delete options\nPackage photo gallery and video gallery management\nPackage tour plan management\nPackage enquery system\nPackage review management system\nPackage purchase by users using paypal and stripe\nPackage search or filtering system by price, location, reviews etc.\nOrders and invoices show by users\nPrivacy policy page management\nTerms and conditions page management\nUser profile management by users\nUser registration and verifying system\nUser forget and reset password system\nAdmin profile management by admin\nAdmin forget and reset password system\nAdmin can send email to subscribers\nAdmin can manage users\nAdmin can see orders and invoices of users",
      "target_audience": [
        "Persons who want to learn a php framework from scratch",
        "Persons who want to learn making a complete web application from beginning",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to learn making a travel agency application with Laravel"
      ]
    },
    {
      "title": "Django with GeoLocation",
      "url": "https://www.udemy.com/course/django-with-geolocation/",
      "bio": "Django Geolocation with folium explained in a project based tutorial",
      "objectives": [
        "how to use django with geolocation",
        "use of external libraries such as: geopy, geoip2, folium",
        "how to work with maxmind geoip database",
        "how to visualize points on the map, add markers, draw lines between points and calculate the distance"
      ],
      "course_content": {
        "Introduction": [
          "Part 1",
          "Part 2",
          "Part 3",
          "Source code",
          "Bonus for beginners: project setup"
        ]
      },
      "requirements": [
        "basic knowledge of python and django"
      ],
      "description": "Learn how to use GeoLocation with Django in a project based tutorial, where we are going to build a web application which will enable us to calculate & visualize the distance between two points - our location point and the desired destination. We will work with multiple external libraries such as geopy, geoip2, folium and more. Basic knowledge of python and django is required but not a must :)\nThis course is 100% for FREE to help you get familiar with Django and discover how helpful this python web framework could be in real life. According to the docs: \"Django makes it easier to build better web apps more quickly and with less code\"\nThis powerful framework is perfect for developing app is a fast pace. This can be extremely useful while working with MVP's, application prototypes or regular apps created for various use cases. Apart from geolocation you can integrate to django machine learning, data science, computer vision and much much more.\nThis course if fully project based - so we are going to learn by doing, slowly, step by step building and improving our python web application. In case of any questions make sure to checkout the Q and A section to search for questions / answers and add new ones if they occur.",
      "target_audience": [
        "Beginner / intermediate python and django developers"
      ]
    },
    {
      "title": "Fullstack Developer Bootcamp | 2025 Front & Back-End Mastery",
      "url": "https://www.udemy.com/course/practical-web-developer-bootcamp-zero-to-mastery/",
      "bio": "Master HTML, CSS, Bootstrap, WordPress, Elementor, JavaScript, React, PHP, MySQL, PostgreSQL, MongoDB & More in 1 Course",
      "objectives": [
        "Master modern Web Development fundamentals as well as advanced topics",
        "Master how to build modern websites with complete responsive features and mobile adaptability",
        "Build websites and web applications on a professional scale.",
        "Learn best practices to write clean, performant, and bug free code",
        "Build your own full stack websites and applications",
        "Build Snake Game from Scratch to Finish",
        "Build Game of Pong from Scratch to Finish",
        "Build Tic Tac Toe Game from Scratch to Finish",
        "Build Rock Paper Scissor Game from Scratch to Finish",
        "Build Temperature Converter from Scratch to Finish",
        "Build Weather Application with API from Scratch to Finish",
        "Build Image Slider from Scratch to Finish",
        "Build Advance Calculator from Scratch to Finish",
        "Build Digital Clock from Scratch to Finish",
        "Build Stopwatch from Scratch to Finish",
        "Build Simple Interest Calculator from Scratch to Finish",
        "Build Password Generator System from Scratch to Finish",
        "Build Dice Roller App from Scratch to Finish",
        "Build Number Guessing System from Scratch to Finish",
        "Build Color Picker App from Scratch to Finish",
        "Build Digit Counter from Scratch to Finish",
        "Build Random Number Generator from Scratch to Finish",
        "Work on hands-on projects like a To-Do List, Movie Search App, E-Commerce Website, and more!",
        "Create Check Boxes and Radio Button Apps",
        "JavaScript Fundamentals – Understand variables, data types, operators, control flow, and loops.",
        "Functions & Objects – Learn function declarations, arrow functions, object-oriented programming, and ES6 classes.",
        "Working with the DOM – Select, manipulate, and update HTML elements dynamically with JavaScript.",
        "Event Handling – Handle user interactions like clicks, keyboard inputs, and form submissions.",
        "Asynchronous JavaScript – Master callbacks, promises, async/await, and API data fetching.",
        "Setting up Visual Studio Code and Node.js for React development",
        "Creating a React App using Vite for optimized performance",
        "Writing and understanding JSX and React-SX Fragments",
        "Mastering Functional Components and their best practices",
        "Adding CSS Styling to React Components",
        "Building a Reusable Card Component in React",
        "Understanding Props, PropTypes, and defaultProps",
        "Implementing Conditional Rendering (If-Else, Ternary, Logical Operators)",
        "Rendering and managing Lists in React, including sorting and filtering",
        "Handling Events and Event Parameters in React",
        "Using the useState Hook to manage component state",
        "Creating a Digit Counter App using useState Hook",
        "Implementing Form Handling with onChange() Event Handler",
        "Building an E-commerce Form and a Color Picker App in React JS",
        "Mastering Updater Functions to modify states efficiently",
        "Updating Objects, Arrays, and Array Objects in State",
        "Creating a Digital Clock and Window Resizing App with useEffect",
        "Implementing useEffect Hook to manage side effects",
        "Exploring useContext Hook for state management",
        "Using useRef Hook for direct DOM manipulation and optimizations",
        "Learn the basics of PHP and set up your environment.",
        "Write your first PHP code and embed HTML seamlessly.",
        "Mastering PHP Fundamentals: Understand variables, data types, strings, math operators, arrays, and associative arrays",
        "User Interaction in PHP: Accept and process user inputs, calculate results, and use GET/POST methods effectively.",
        "Control Structures in PHP: Leverage if-else statements, switch cases, loops, and comments for dynamic programming.",
        "Advanced PHP Concepts: Work with classes, objects, constructors, inheritance, functions, and return statements to create modular and reusable code.",
        "SQL Database Design | Database Setup and Fundamentals",
        "Download, install, and configure MySQL, PostgreSQL, and MongoDB with Compass and Mongosh.",
        "Create databases, tables, and define data constraints (Unique, NOT NULL, Primary Key, Foreign Key, etc.) in MySQL and PostgreSQL.",
        "Use SQL statements to insert, select, update, and delete data.",
        "Implement advanced features like JOINS (INNER, LEFT), ORDER BY, LIMIT, UNION, SELF JOIN, and VIEWS.",
        "Apply indexing and subqueries to optimize data management.",
        "NoSQL Database Design with MongoDB",
        "Set up MongoDB, work with Compass and Shell, and integrate with Visual Studio Code.",
        "Design MongoDB collections and documents, manage arrays and embedded documents, and understand relationships between documents.",
        "Execute operations like sorting, updating, deleting, and creating one-to-one reference relations.",
        "Advanced Database Management: Learn auto-commit, rollback, current date/time functions, logical operators, wildcards, and ordered insertions.",
        "Become a Wordpress and Elementor Expert. Create beautiful pages, post and portfolio items using WordPress and Elementor",
        "Master the art of using the Elementor page builder plugin",
        "How to ensure your site looks great on desktop, tablet and mobile phone",
        "How to create a use (and re-use) templates.",
        "How to use motion effects in your design",
        "WordPress Theme fundamentals",
        "Create WordPress website without Theme",
        "Design WordPress website header, footer and sidebar with widgets",
        "Enhance communication on website",
        "Increase conversion on website",
        "Create Your Own Website From Scratch",
        "Build a complete blog site in this course",
        "Learn how to monetize your blog",
        "Master modern Bootstrap fundamentals as well as advanced topics",
        "Build a full Bootstrap website from scratch",
        "Understand how Bootstrap grid works",
        "Learn about Bootstrap tables",
        "Learn about Bootstrap buttons",
        "Learn about Bootstrap carousel",
        "Learn about Bootstrap Navigation",
        "Learn about Bootstrap jumbotron",
        "Learn about Bootstrap well",
        "Learn about Bootstrap contextual properties",
        "Master Complete Front-End and Back-End Web Development from Building Amazing Websites to Database Design Mastery"
      ],
      "course_content": {
        "Download and Installation of IDEs": [
          "Download and Installation of Visual Code Studio",
          "Project Setup and Live Server Installation"
        ],
        "HTML for web development": [
          "Introduction to HTML",
          "HTML Anatomy",
          "Basic HTML Tags",
          "Basic HTML Tags (cont)",
          "Emphasis Tags",
          "HTML Attributes",
          "Basic HTML Formats",
          "div and span tags",
          "Address tag",
          "Meta tag (Part 1)",
          "Meta tag (Part 2)",
          "Cookies",
          "Comments in HTML",
          "Images in HTML",
          "Table in HTML",
          "HTML Tables (Part 2)",
          "HTML Lists",
          "Page Links",
          "Image Links",
          "Email Link",
          "HTML Forms",
          "HTML Forms (Part 2)",
          "Embed Videos",
          "Iframe videos",
          "Embed Audio",
          "HTML test practices for absolute beginner"
        ],
        "CSS for web development": [
          "Introduction to CSS",
          "Basics of CSS",
          "CSS Selectors",
          "Embedding CSS",
          "CSS Comments",
          "CSS Measurement Units",
          "Image Background",
          "CSS Fonts",
          "Text Decoration",
          "Image Properties",
          "Border Radius",
          "Line Properties",
          "Link Properties",
          "CSS Margins",
          "List Properties",
          "CSS Padding",
          "Visibility",
          "CSS Positioning",
          "Z-Index",
          "CSS Colors",
          "Gradients",
          "CSS Box Model",
          "What Next",
          "CSS test practices for absolute beginner"
        ],
        "Complete front-end web development": [
          "Introduction to Front-End Website Design",
          "Setup of Front End Developer website",
          "How to create Navigation Bar",
          "Styling Navigation Bar (Part 1)",
          "Styling the Search Bar",
          "How to add a dropdown menu",
          "Styling the dropdown Menu",
          "Solution to dropdown menu challenge",
          "How to create Active List"
        ],
        "Creating a professional Homepage": [
          "Creating a Homepage",
          "How to build the middle site of the site container",
          "Styling the site container",
          "How to use CSS generator to create awesome buttons",
          "How to add a footer",
          "How to create a Popup Contact Form",
          "Styling Popup Contact Form (Part 1)",
          "Styling Popup Contact Form (Part 2)",
          "How to write a JavaScript for popup contact form"
        ],
        "Creating a blog page from scratch": [
          "Introduction to Blog creation",
          "Creating the website Blog part",
          "How to create image with caption",
          "How to add images to website blog",
          "How to create and style tables with CSS",
          "How to add a Newsletter on the sidebar"
        ],
        "Creating a media page": [
          "How to add slides to website",
          "How to style the media page",
          "How to add a pager to slide",
          "How to create first photo gallery",
          "Styling first photo gallery",
          "How to add video to website",
          "How to add audio to website",
          "How to add JavaScript to audio player",
          "How to create photo gallery 2",
          "How to create CSS Stripes",
          "How to style CSS Stripes"
        ],
        "Creating a Signup page": [
          "How to create a sign up page",
          "Signup page (cont)",
          "Styling Signup page",
          "How to add country to signup page"
        ],
        "Creating a login page": [
          "How to create a Login page",
          "Styling the login page"
        ],
        "Creating a Contact page": [
          "How to create a contact page",
          "How to style the contact page"
        ]
      },
      "requirements": [
        "A computer (Windows/Mac/Linux) with internet only",
        "No previous coding experience is needed",
        "Be ready to learn an insane amount of awesome stuff",
        "Prepare to build real web apps!"
      ],
      "description": "This course is designed to provide you with hands-on experience and real-world projects while covering HTML, CSS, Bootstrap, WordPress, Elementor, JavaScript, React, PHP, MySQL, PostgreSQL, MongoDB, and much more!\nAre you ready to transform your web development skills and become a full-stack web developer? Whether you're a complete beginner or looking to advance your career, this all-in-one Fullstack Developer Course will take you from the fundamentals of front-end and back-end development to mastering complex web applications.\nBecome a Full-Stack Web Developer: Learn Everything from HTML to MongoDB in One Course!\n\n\nFront-End Development\n1. HTML (HyperText Markup Language)\nLearn how to structure a web page using HTML5 elements\nUnderstand semantic HTML for SEO-friendly websites\nWork with forms, tables, multimedia, and more\n2. CSS (Cascading Style Sheets)\nStyle websites with CSS3 techniques, including Flexbox and Grid\nImplement animations, transitions, and responsive design\nCreate stunning layouts and themes with CSS\n3. Bootstrap (CSS Framework)\nMaster Bootstrap 5 to build modern, responsive websites\nUse pre-built components like navigation bars, modals, and carousels\nCreate mobile-friendly and fast-loading pages effortlessly\n4. WordPress & Elementor\nBuild professional websites with WordPress, the world’s most popular CMS\nUse Elementor to design beautiful pages without coding\nLearn about themes, plugins, and customization techniques\nDevelop and manage blogs, portfolios, and eCommerce sites\n5. JavaScript (Programming Language for the Web)\nUnderstand JavaScript fundamentals: variables, functions, loops, and objects\nWork with DOM manipulation and event handling\nCreate dynamic web pages with interactive elements\nLearn modern ES6+ features like arrow functions and template literals\nBuild real-world projects like Snake Game, Pong Game, Weather App, Tic Tac Toe Game, Image Slider,  Color Picker, Digital Clock, and Stopwatch\n6. React.js (Front-End JavaScript Library)\nMaster React components, props, and state management\nWork with hooks, the Context API, and advanced React patterns\nBuild real-world projects like to-do lists, Color Picker, Digital Clock, and Stopwatch\nBack-End Development\n7. PHP (Server-Side Programming)\nUnderstand PHP syntax and programming fundamentals\nProcess forms and manage user authentication\nWork with file uploads and session handling\n8. MySQL (Relational Database Management System)\nLearn SQL queries for creating, retrieving, updating, and deleting records\nUnderstand database relationships, indexes, and stored procedures\n9. PostgreSQL (Advanced SQL Database System)\nLearn how to work with an advanced relational database system\nUnderstand database optimization techniques and indexing\nManage data efficiently using SQL queries\n10. MongoDB (NoSQL Database for Modern Applications)\nWork with collections and documents in MongoDB\nLearn how to perform CRUD (Create, Read, Update, Delete) operations\nWhy Enroll in This Course?\nComprehensive Curriculum: Covers everything you need to become a full-stack developer\nHands-On Projects: Work on real-world applications to build a strong portfolio\nBeginner-Friendly: No prior coding experience required – we start from scratch!\nLifetime Access: Learn at your own pace with lifetime access to the course materials\nJob-Ready Skills: Master the most in-demand technologies for web development\nExpert Guidance: Learn from industry professionals with step-by-step tutorials\n\n\nBy the end of this course, you'll have the skills to build and deploy fully functional websites and web applications, making you a job-ready full-stack developer\nStart your web development journey today and unlock limitless opportunities in tech!",
      "target_audience": [
        "Developers who want to learn REAL industry skills that are necessary to get hired as a web developer and earn a higher salary",
        "This course is for anyone who wants to learn about web development, regardless of previous experience",
        "This course if for anyone who wants to start his own business or become a freelancer",
        "It's also great for anyone who does have some experience in a few of the technologies(like HTML and CSS) but not all"
      ]
    },
    {
      "title": "Make 10 Advanced Professional Applications in JavaScript",
      "url": "https://www.udemy.com/course/make-10-advanced-professional-applications-in-javascript/",
      "bio": "Learn to make real time Applications in JavaScript.",
      "objectives": [
        "Learn to make Professional Applications in JavaScript",
        "Learn a lot of new stuff in JavaScript while making Applications",
        "Get a kind of blueprint to make any type of Professional Level Applications in JavaScript",
        "Writing down the best and optimized code to make Applications"
      ],
      "course_content": {
        "Installing Node and Setting up an IDE": [
          "Installing Node and Setting up an IDE"
        ],
        "Language Translator Application in JavaScript": [
          "Language Translator Application Part - 1",
          "Language Translator Application Part - 2",
          "Language Translator Application Part - 3",
          "Language Translator Application Part - 4",
          "Language Translator Application Part - 5",
          "Language Translator Application Part - 6",
          "Language Translator Application Part - 7",
          "Language Translator Application Part - 8"
        ],
        "Video Player Application in JavaScript": [
          "Video Player Application Part - 1",
          "Video Player Application Part - 2",
          "Video Player Application Part - 3",
          "Video Player Application Part - 4",
          "Video Player Application Part - 5",
          "Video Player Application Part - 6",
          "Video Player Application Part - 7",
          "Video Player Application Part - 8",
          "Video Player Application Part - 9",
          "Video Player Application Part - 10",
          "Video Player Application Part - 11",
          "Video Player Application Part - 12",
          "Video Player Application Part - 13"
        ],
        "Currency Exchange Application in JavaScript": [
          "Currency Exchange Application Part - 1",
          "Currency Exchange Application Part - 2",
          "Currency Exchange Application Part - 3",
          "Currency Exchange Application Part - 4",
          "Currency Exchange Application Part - 5",
          "Currency Exchange Application Part - 6"
        ],
        "Expense Tracker Application in JavaScript": [
          "Expense Tracker Application Part - 1",
          "Expense Tracker Application Part - 2",
          "Expense Tracker Application Part - 3",
          "Expense Tracker Application Part - 4",
          "Expense Tracker Application Part - 5",
          "Expense Tracker Application Part - 6",
          "Expense Tracker Application Part - 7",
          "Expense Tracker Application Part - 8",
          "Expense Tracker Application Part - 9",
          "Expense Tracker Application Part - 10"
        ],
        "Drawing Application in JavaScript": [
          "Drawing Application Part - 1",
          "Drawing Application Part - 2",
          "Drawing Application Part - 3",
          "Drawing Application Part - 4",
          "Drawing Application Part - 5",
          "Drawing Application Part - 6",
          "Drawing Application Part - 7",
          "Drawing Application Part - 8",
          "Drawing Application Part - 9"
        ],
        "Image to PDF Application in JavaScript": [
          "Image to PDF Application Part - 1",
          "Image to PDF Application Part - 2",
          "Image to PDF Application Part - 3",
          "Image to PDF Application Part - 4",
          "Image to PDF Application Part - 5"
        ],
        "Scientific Calculator Application in JavaScript": [
          "Scientific Calculator Application Part - 1",
          "Scientific Calculator Application Part - 2",
          "Scientific Calculator Application Part - 3",
          "Scientific Calculator Application Part - 4"
        ],
        "Music Player Application in JavaScript": [
          "Music Player Application Part - 1",
          "Music Player Application Part - 2",
          "Music Player Application Part - 3",
          "Music Player Application Part - 4",
          "Music Player Application Part - 5",
          "Music Player Application Part - 6",
          "Music Player Application Part - 7",
          "Music Player Application Part - 8",
          "Music Player Application Part - 9"
        ],
        "Text to Speech Application in JavaScript": [
          "Text to Speech Application Part - 1",
          "Text to Speech Application Part - 2",
          "Text to Speech Application Part - 3",
          "Text to Speech Application Part - 4",
          "Text to Speech Application Part - 5",
          "Text to Speech Application Part - 6",
          "Text to Speech Application Part - 7"
        ]
      },
      "requirements": [
        "Basics of any Programming Language is Required"
      ],
      "description": "In this course, we will assume that you know basics of JavaScript and is now ready to make real time professional level applications in JavaScript. You are now ready to use JavaScript to make something real out it. We will also use not only basic concepts but also teach you advance level concepts and use them to make all the 10 Applications in JavaScript.\n\n\nIn this course, we have assumed that you know the basics of JavaScript or any other Programming Language and that our Job is to teach you how to use JavaScript to make Professional Level Applications. It's time to take your skills up to the Level where you can make Cool Looking Real Time Applications.\n\n\nWe are pretty sure that after taking this course in JavaScript, you will then feel that you can now make any type of application using JavaScript Concepts and that you are now a professional programmer who now knows how to use a language to make something real out of it.\n\n\nIn this Course, if you have any problem you can directly message us or you can ask your question in the Q/A Sections where you will get your Questions Answered as soon as possible. Hope you will have an Awesome Time with this Course.\n\n\n\nWe hope that you will enjoy this course!",
      "target_audience": [
        "Anyone who wants to make Professional Applications in JavaScript",
        "Anyone who wants learn new and useful stuff in JavaScript while making Applications"
      ]
    },
    {
      "title": "Drupal For Beginners - Master Drupal Quickly",
      "url": "https://www.udemy.com/course/drupal-for-beginners-course/",
      "bio": "Learn Drupal step-by-step to build complex websites. No experience required!",
      "objectives": [
        "Install Drupal on your computer without paying for domain and hosting.",
        "Navigate around the Drupal Website, learn what each option does and how to use them.",
        "Create Article and Basic Page and learn the difference between them.",
        "Learn to create User and User Roles and how to assign permission to User Roles.",
        "Learn what Blocks are and how to control layout using them.",
        "Learn to add link to a menu and create new menus."
      ],
      "course_content": {
        "Introduction to course": [
          "Course Overview"
        ],
        "Introduction To Drupal": [
          "What is Drupal?",
          "Why should you use Drupal?",
          "PLEASE NOTE!"
        ],
        "Setting up Drupal": [
          "Understanding Localhost",
          "Install XAMPP",
          "Solution: PHP Extension Error",
          "Install Drupal",
          "Login and Tour of Drupal",
          "Overview of Admin Toolbar"
        ],
        "Content Creation In Drupal": [
          "Adding a Basic Page",
          "Add Article",
          "Editing Content",
          "Revisions In Drupal",
          "Using Images Legally",
          "Text Formatting"
        ],
        "User Management": [
          "Create a new User",
          "User Roles and Permissions"
        ],
        "Blocks - Control your Layout": [
          "Blocks Basics",
          "Restricting Blocks"
        ],
        "URL Alias and Menus": [
          "Using URLAlias to fix urls",
          "Editing Existing Menus",
          "Creating and Displaying Menu"
        ],
        "Modules and Themes": [
          "Installing Modules",
          "Using PathAuto Module",
          "Using Contact Form Module",
          "Installing Themes"
        ],
        "Content Types": [
          "Intro To Content Types",
          "Creating Custom Content Type",
          "Managing Content Display Of Offline Events",
          "Assignment - Create Another Content Type",
          "Solution: Creating Online Event Content Type",
          "Thank you!"
        ]
      },
      "requirements": [
        "No prior knowledge of Drupal is required as everything will be covered in this course.",
        "You will need a working computer with internet connection.",
        "You need basic computer skills such as opening a folder, installing software, etc.",
        "No programming required. That is the beauty of Drupal."
      ],
      "description": "Are you eager to master Drupal, one of the most powerful and flexible content management systems (CMS) available today? Look no further! Our comprehensive video course, \"Drupal For Beginners - Master Drupal Quickly,\" is designed with beginners in mind and requires no prior experience. We'll take you on a journey from the very basics to becoming a confident Drupal user.\nWhy Choose Drupal? First, we'll delve into what Drupal is and why you should choose it over other CMS options. You'll discover the countless advantages that make Drupal an ideal choice for your web development projects.\nGetting Started with Drupal Next, we'll guide you through the process of installing Drupal on your local machine, ensuring you're ready to explore its endless possibilities. No technical expertise required!\nCreating Content with Confidence Content is at the heart of any website, and we'll show you how to create it effortlessly. Learn to craft articles and basic pages while understanding the key differences between them. You'll also explore content revision to roll back to previous versions when needed. Plus, we'll reveal where to source high-quality, royalty-free images and how to format your text for a polished look.\nEffortless User Management User management is a breeze with Drupal. Discover how to create users, establish user roles, and assign specific permissions. Empower yourself with the skills to control who can do what on your site.\nMastering Layouts with Blocks We'll unravel the magic of Drupal's block system. Learn how to control your site's layout by placing content, menus, and more with ease, giving your site a professional and customized feel.\nCrafting Navigation Menus Navigation is key to user experience. We'll show you how to add links to your menus and create new ones, ensuring that your site is user-friendly and intuitive.\nExtending Functionality with Modules Drupal's extensibility is one of its standout features. In this course, you'll gain a fundamental understanding of modules and how to expand your site's capabilities effortlessly.\nPersonalized Q&A Support We've got you covered with a personalized Q&A session, where our instructor will answer your questions. No query is too basic or advanced, and we're here to ensure your success.\nMoney-Back Guarantee We're so confident in the value of this course that we offer a 30-day money-back guarantee. If you're not satisfied, you'll get a full refund—no questions asked.\nRequest-Based Content Your learning journey is essential to us. If you have specific topics you'd like us to cover, let us know, and we'll consider adding new content to meet your needs.\nEmbark on your Drupal journey today and unlock the potential of this remarkable CMS. Join us, and you'll be creating stunning websites with confidence in no time. Enroll now and become a Drupal master!",
      "target_audience": [
        "If you want to learn Drupal without paying for domain and hosting then this course is perfect for you.",
        "This course is perfect for you if you want to learn Drupal from scratch and master it.",
        "If you want to learn Drupal step by step from an instructor who has been teaching Drupal since 2018.",
        "This is the perfect course for you if you want to build your own website using Drupal.",
        "This is the perfect course for you if you are taking over an existing site but don't know how to use Drupal."
      ]
    },
    {
      "title": "Frontend Web Development For Beginners -HTML/CSS/JavaScript",
      "url": "https://www.udemy.com/course/programming-for-web-development-from-scratch/",
      "bio": "Learn to program for the web using HTML ,CSS, JAVASCRIPT",
      "objectives": [
        "Create a folder structure",
        "Create a HTML document structure",
        "Indent HTML code",
        "Use HTML comments in your code",
        "Create paragrapghs",
        "Create Lists",
        "Create Forms",
        "Create Links",
        "Create CSS syntax rule",
        "Set a background color",
        "Style using different selectors",
        "Apply padding and margins",
        "Change text size",
        "Write JavaScript syntax",
        "Create variables",
        "Create Arrays",
        "Create Functions",
        "Write conditional statements"
      ],
      "course_content": {},
      "requirements": [
        "You should know how to use a computer"
      ],
      "description": "Programming is the process of writing a set of instructions known as code for the computer to perform a task or series of task.\nLearning to program is a useful and enjoyable skill to have. Programming allows you to solve various types of problems.\nThere are several programming languages that can be used to write computer programs.\nIn this beginners course we will start with the basic front end languages which are HTML CSS and JAVASCRIPT. These three languages are collectively referred to as front end programming languages used to for web development and programming.\nIf you are thinking of becoming a web developer or just curious about how to build websites HTML is the\nlanguage you will need to start with. Every website on the planet has been built structurally using HTML.\nA website is built using a variety of technologies such as HTML which is used to create the structure ;then you have\nCSS or cascading style sheets which is used to style or make the website presentable;The third language you need is known as JavaScript which is responsible for the interactivity( This means the actions a visitor performs on a website e.g clicking on a button or completing a form) on the website .\nWhat You will Learn:\nHow to create HTML document structure\nHow to create Lists\nHow to create paragraphs\nHow to create Headings\nHow to add images to webpage\nHow to add video and sound to webpage\nHow to write css syntax\nHow to use various selectors for styling\nHow to use css padding and margins\nHow to use fonts\nHow to write javascript functions\nHow to create variables\nHow to create Arrays\nHow to create functions\nHow to use conditional statement\nI look forward to seeing you on the course.\nThank you",
      "target_audience": [
        "Anyone who wants to learn how to program",
        "Anyone who wants to learn web development"
      ]
    },
    {
      "title": "Get Google Sheets as JSON data for web applications",
      "url": "https://www.udemy.com/course/google-sheets/",
      "bio": "Learn how to do more with Google Sheets integrate it the data into your own Applications get web app urls for the data",
      "objectives": [
        "Output Google Sheets data in a JSON format",
        "Create web URL for Google Sheet data",
        "Import Google sheets data into web applications"
      ],
      "course_content": {
        "Introduction to Google Sheets Data as JSON": [
          "Introduction to Google Sheets Course",
          "Course Resources and Setup",
          "Google sheet Data publish to the web",
          "Easy output of JSON feed containing Sheet Data",
          "Example",
          "Web application connecting via AJAX to Google Sheet",
          "Sheet name output to HTML element",
          "Loop data output to HTML",
          "CSS styling Sheet output data in HTML",
          "Add data to any web application",
          "Course Review Overview",
          "Source Code Examples and Links",
          "Updated version to Get JSON data from Google Sheets",
          "Source Code for Google Sheet fetch request for JSON data"
        ],
        "Bonus Section": [
          "Updated new Endpoint and selection of Sheet data",
          "Extra Educational Materials"
        ]
      },
      "requirements": [
        "Google account",
        "Some basic knowledge of HTML and AJAX",
        "Desire to Learn"
      ],
      "description": "Google provides a powerful set of tools with Google Apps.   Google sheets is a great place to store data within a spreadsheet.  Did you know you can use that data on the web?\nGreat introduction to Google Sheets and Google Script\n\nPublish your Google Sheet data to the web.\nUse Google Sheets data on your own webpages\nOutput Google Sheet data as JSON and add it anywhere\nYou will be amazed at how easy it is to work with Google Sheets\nThis course provides ways to use the data for web development and more.  Course covers outputting the data as a web app.  This will give you access to the data using a URL which you can then share online.   Select either one sheet or all its up to you no programming is needed.\nWeb application use case, this part of the course covers more advanced ways of using the data.  We show you how the data can be output as JSON data, select any sheet get it as JSON data.   JSON, or JavaScript Object Notation, is a minimal, readable format for structuring data.  Its perfect for use within web applications.  Adding jQuery for easy AJAX calls. With Ajax, Web applications can send data to and retrieve from a server asynchronously (in the background) without interfering with the display and behavior of the existing page.   Source code is included as well as how to update it to get the content from your own Google Sheet.\n\nMinimal programming is required for this course, but a basic understanding is needed for the more advanced web application functionality.\nGoogle sheets provides a great way to collaborate and use data online within a nicely packaged spreadsheet.  Now you too can use that data.\nI'm here to help you learn more about web applications and ready to answer any questions you may have.\nJoin now and start doing some amazing things online!",
      "target_audience": [
        "Anyone who wants to use Google Sheets data outside of Google Sheets",
        "Perfect for web developers",
        "Anyone who wants to see the power of Google Sheets"
      ]
    },
    {
      "title": "The Complete Microservices With Java",
      "url": "https://www.udemy.com/course/getting-started-with-microservices-from-zero-to-production/",
      "bio": "Build java microservice from scratch using dropwizard framework, and deploy your microservice to different environments.",
      "objectives": [
        "Familiarize yourself with the microservices architecture and its benefits",
        "Use dropwizard to develop microservices",
        "Create a database backed RESTlike API using Dropwizard",
        "Learn how to use database migrations with dropwizard application",
        "Learn how to create gradle tasks to automate out developing process",
        "Learn docker, docker-compose.",
        "Deploy our microservice to docker environment.",
        "Learn kubernetes",
        "Deploy our microservice to kubernetes locally.",
        "Create and configure google kubernetes engine clusters",
        "Create cloudSql instance, credentials and link them with out microservice",
        "Deploy microservice to google kubernetes engine",
        "Create docker images and push them to google container registry"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Microservices VS Monolithic Styles": [
          "Before microservices (Monolithic architectural style)",
          "What is microservice?",
          "Microservices design principles"
        ],
        "Installation": [
          "Install Java 8",
          "Install Intellij Idea 2017",
          "Install Xampp",
          "Install Gradle build tool"
        ],
        "Getting started with dropwizard": [
          "Creating the application by intellij Idea",
          "Technical design for locations microservice",
          "Implement the basic model and static data",
          "Creating Rest locations resource",
          "Create Database schema",
          "Connecting the DB with our application",
          "Data Access Layer with Mapper",
          "Creating the locations service and implement the business logic",
          "Implement getLocation method",
          "Implement inserting new locations",
          "Implement editing locations",
          "Implement delete locations"
        ],
        "Getting started with docker": [
          "Life before docker?!",
          "What is docker?",
          "Install Docker and Docker-Compose",
          "Creating Dockerfile",
          "Prepare files for docker environment",
          "Some refactoring before creating the docker image",
          "Create docker image",
          "Create and run docker container",
          "Docker compose create mysql descriptor",
          "Docker compose phpmyadmin",
          "Docker compose locations",
          "Docker compose run containers"
        ],
        "Getting started with kubernetes": [
          "Install kubernetes (k8s) components locally (VBox, kubectl, Minikube)",
          "What is kubernetes?",
          "Mysql deployment descriptor",
          "Mysql service descriptor",
          "Local volume descriptor",
          "Phpmyadmin deployment descriptor",
          "Phpmyadmin service descriptor",
          "Locations-service deployment descriptor",
          "Locations-service service descriptor",
          "Deploy to kubernetes locally 1",
          "Deploy to kubernetes locally 2",
          "Deploy to kubernetes locally 3"
        ],
        "Deploy to google kubernetes engine": [
          "Overview and signup!",
          "Install gcloud SDK",
          "Point kubectl to cloud cluster",
          "Create gradle tasks to push (our app) image to google container registry.",
          "Build and push docker images",
          "Create gradle tasks to deploy against GKE",
          "Create cloud sql instance and configure the credentials",
          "Create descriptors for production environment 1",
          "Create descriptors for production environment 2",
          "Deploy to production!"
        ],
        "Testing": [
          "Introduction"
        ]
      },
      "requirements": [
        "A PC or MAC",
        "Basic knowledge in java and mysql",
        "Ability to install java, gradle, IDE, docker, kubernetes",
        "Basic knowledge in docker and kubernetes is helpful, but not required.",
        "Basic knowledge in gradle build tool is helpful, but not required."
      ],
      "description": "In this course you'll learn how to create a simple microservice using Java programming language and Dropwizard.\nDropwizard is a popular framework to build RESTful APIs and microservices. The course begins with a brief introduction to microservices VS monolith architectural styles and microservices design principles.\nIn this course, you will build a locations microservice which will host a predefined list of locations like Amazon FBA locations, this will be done by creating a REST API's for CRUD operations (create, read, update, delete), and you will learn how to connect our microservice with mysql database locally, and also how to configure phpmyadmin in order to interact with locations database.\n(FULL REPOSITORY CODE EXIST THROUGH SECTIONS!)\nAfter that you will learn how to decorize you microservice with docker and create a docker image of locations microservices, and you will learn how deploy the microservice to docker environment and how to create applications containers and connect them with each other.\nAlso, you will learn about kubernetes (k8s), and how to configure k8s on your local machine, and create deployment descriptors (YAML) files, in order to deploy the microservice to local k8s cluster.\nAnd finally, you'll learn how to create a google cloud account and configure google kubernete engine, google cloud sql, cloud sql credentials, push docker images to google container registry, Then deploy your microservice there.\nIn this course we will depend on gradle build tool, in order to automate our development process and save our time!\nThe goal of this course is to serve as a practical guide through the dropwizard framework, so you can see how it's used to implement microservice based architecture.\nBy the time you finish this course, you will have gained the ability to articulate what the Microservices architectural style is all about, including its advantages and disadvantages, docker and kubernetes.\nYou will gain familiarity with dropwizard, and you'll see how to use it to build microservices, REST API's.\nIs This For You?\n\nDo you want to build useful microservices?\nAre you afraid of not being able to create good microservices?\nDo you think you will feel proud creating the microservices that will be used every day and help others to work more effectively?\nThen this course will definitely help you.\nThe course currently consists of 54 lectures and 7 hours of video. After taking this course you'll be able to start developing microservices. So let's get started!",
      "target_audience": [
        "Intended for Java software developers",
        "Software Developers",
        "Web Developers",
        "Programmers",
        "NOT intended for beginners. However, depending on your technical experience in other technologies, and your learning style, you may find this course a fascinating deep-dive into Microservices, dropwizard, docker, kubernetes applications."
      ]
    },
    {
      "title": "Web Development With HTML CSS BOOTSTRAP JQUERY for Beginners",
      "url": "https://www.udemy.com/course/web-development-with-html-css-bootstrap-jquery-for-beginners/",
      "bio": "Learn to code fully Responsive Websites using HTML CSS BOOTSTRAP JQUERY from SCRATCH. This Course is made for EVERYONE!",
      "objectives": [
        "You will learn, understand and get comfortable with HTML5, CSS, BOOTSTRAP and BASICS OF JQUERY.",
        "At the end of this course, You will be able to build fully Responsive Websites that are Feature Rich, Modern and easily Extendable."
      ],
      "course_content": {
        "HTML5 and CSS": [
          "Write your first html code and run in the browser",
          "Using inline css styling",
          "Create and link your own css file",
          "Using google fonts",
          "Adding images to html pages",
          "Adding alt tags to images and its importance",
          "Add links to text",
          "Add links to image",
          "Applying border styling and hover effect",
          "Applying background color and paddings",
          "Creating ordered and unordered lists",
          "Creating forms",
          "Margin and styling",
          "Radio buttons and checkboxes"
        ],
        "BOOTSTRAP": [
          "Downloading bootstrap",
          "Understanding and using bootstrap rows and grids",
          "Using bootstrap jumbotron",
          "Responsive image with bootstrap",
          "Buttons and lists with bootstrap",
          "Building forms with bootstrap",
          "Using font awesome icons with bootstrap",
          "Using live css editor",
          "Customizing font awesome icons",
          "Bootstrap menu or navigation bar",
          "Mobile hamburger menu with bootstrap",
          "Leaving comments in style sheet",
          "Making the menu links work",
          "Using google fonts and styling text",
          "Using inspect tool, heading style and navigation links",
          "Creating tables with bootstrap",
          "Blockquote and strong tags",
          "Working panels in bootstrap",
          "Using scrollspy for highlighting current links",
          "Implementing image slider or carousel",
          "Adding images to slider or carousel",
          "Creating footer section",
          "Full width background image for a div with fixed state",
          "Gradient background",
          "Pop up modal in bootstrap"
        ],
        "JQUERY": [
          "Getting ready to start with jquery",
          "Downloading plugin for sublime text",
          "Write your first script with hello world alert",
          "Using animations with jquery",
          "Targetting classes and ids with jquery",
          "Target same element with many selectors",
          "Remove classes and adding css style using jquery",
          "Changing html text with jquery",
          "Append and remove in jquery",
          "Cloning and targeting the parent element in jquery",
          "Targetting child element and the nth child",
          "Target odd or even numbers in jquery and more"
        ],
        "WEB HOSTING, EMAIL FEATURE, HTML SEMANTICS and more": [
          "Html head section",
          "Html body section with main articles aside and more",
          "Push your project to the live server",
          "Fxing image links on live site",
          "Adding email feature to our static page",
          "Adding message field to our emails",
          "Coclusion",
          "DOWNLOAD SOURCE CODE ZIP FILES FROM GITHUB"
        ],
        "Bonus": [
          "Other courses you may like",
          "Join my Discord server"
        ]
      },
      "requirements": [
        "You should be able to use a computer",
        "Interested in Web Development or Learning to Code"
      ],
      "description": "Hello and welcome.\nI would like to welcome you to this wonderful course which will make you a web developer from scratch.\nThis course has 3 major sections.\nFirst section will get you up and running with html and css. Then in the second section we will dive into bootstrap which will enable you to develop production ready professional web pages that are beautiful, feature rich and fully responsive.\nThey will work perfectly for both web and mobile devices.\nWe will not stop there. We will also dive into jquery. And you will be surprised how cool and easy jquery is even if you know absolutely nothing about javascript. You will learn about using cool animations, learn how to select the html elements using jquery and add awesome features to them.\nNow you might be thinking ok thats great. But wait, there is more. There are some more great topics covered as well. One of them is adding email feature to your contact forms.\nYes, its almost impossible to use email features on static sites that are built only with html and css without any server side technology such as php but we will tackle this problem too .. nice and easy.\nSo yes, there will be email feature to our site and it will go live. Yes, I will show you how to push your local project to live server and reach out to the whole world.\nYes this one course will change everything.\nYou know web development is vast and complex but mainly is because of confusion and not being able to decice where to begin and what to learn ...\nThis course will solve that problem. Enrol in this course and change your life. Lets start right now!\nHere in the main course demo (There will be two more projects based on pure html and css and also on jquery), we have a beautiful image slider. With heading and a bit of description and a call to action button.\nIt is fully responsive and works perfectluy in small screen and mobile devices too because it uses bootstrap.\nwe will learn how to customize it many ways, making images responsive. using font awewsome icons and google fonts and also a bit about SEO practices.\nAdding a fullwidth fixed background image for beautiful effects, fully functioning contact form, tables, background gradient color...formating articles...and more!\nNot to forget, cool panels and yes modal too which you can customize in many ways you prefer...\nYou can add more animations and interactivity to it using jquery which you will learn in the last seciton . so yes, its packed with awesome practical tools that you will require in every day life as a web developer. Excited? lets get right into it!!\nRemember, In this course, you will learn to CODE FROM SCRATCH. If you haven't yet, get ready to write you very first code and discover the the brand new world!",
      "target_audience": [
        "Anyone who wants to learn to code or get into Web Development",
        "Anyone who wants to learn how to create, maintain and host fully responsive modern websites"
      ]
    },
    {
      "title": "React and Laravel: A Practical Guide with Docker",
      "url": "https://www.udemy.com/course/react-laravel-admin/",
      "bio": "Laravel 8, React with Typescript, Docker, Redux, Exporting CSV, Laravel Sanctum",
      "objectives": [
        "Use Docker",
        "Use React with Typescript",
        "Use Redux",
        "Upload Images",
        "Authentication and Authorization",
        "Laravel Sanctum",
        "Export CSV files",
        "Login with HttpOnly Cookies"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel": [
          "Installation",
          "Docker",
          "Migrations",
          "Routes",
          "Register",
          "Custom Requests",
          "Laravel Sanctum",
          "Login",
          "Authenticated User",
          "HttpOnly Cookies",
          "Logout",
          "Ide Helper",
          "Api Resources",
          "Users",
          "Pagination & Seeders",
          "Profile",
          "Roles & Permissions",
          "Foreign Keys",
          "One to Many Relations",
          "Json Resources",
          "whenLoaded",
          "Many to Many Relations",
          "Attach, Detach and Sync Collections",
          "Products",
          "Uploading Images",
          "Orders",
          "Nested Factories",
          "Attributes",
          "Export CSV",
          "Chart",
          "Gates"
        ],
        "React": [
          "Installation",
          "Template",
          "Components",
          "Router",
          "Wrapper",
          "Register",
          "Http Requests",
          "State",
          "useState",
          "Login",
          "useEffect",
          "Axios Defaults",
          "Logout",
          "Models",
          "NavLink",
          "Users",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uplading Images",
          "useRef",
          "Orders",
          "Animations",
          "Export CSV",
          "Chart",
          "Profile",
          "Redux",
          "Using Redux"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge",
        "Basic PHP knowledge"
      ],
      "description": "Learn how to create an Admin App using React and Laravel.\nIn Laravel you will learn:\nHow to create Rest APIs with Laravel\nAuthenticate using Laravel Sanctum\nAuthorization using Laravel Gates\nLogin with HttpOnly Cookies\nLaravel JSON Resources\nInstall and use Docker\nUpload Images\nExport CSV's\nIn React you will learn:\nCreate a React project with Typescript\nUse Docker\nUse React Hooks\nUse Redux\nCreate public and private routes\nReact Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner PHP Developers",
        "Beginner Javascript Developers"
      ]
    },
    {
      "title": "Mastering Visual Studio 2019",
      "url": "https://www.udemy.com/course/mastering-visual-studio-2019/",
      "bio": "Reap the full benefits of Visual Studio 2019 by mastering its advanced topics",
      "objectives": [
        "Understand the new search capabilities in Visual Studio: menus, commands, and options, and boost your productivity to the max",
        "Enhance solution load-time performance",
        "Faster ways to pinpoint issues in your code and resolve them",
        "Learn more about the new Git Tools features and how to easily switch between tasks without losing your code changes",
        "Debug, test, and improve your code before deploying your application",
        "Use the new CPU Profiling solution for ASP .NET to develop web applications",
        "Master enhanced productivity tools in Xamarin Android Designer"
      ],
      "course_content": {
        "New Features in Visual Studio 2019": [
          "The Course Overview",
          "The New Start Window",
          "Creating New Projects",
          "Visual Changes in the Shell",
          "New Search Capabilities",
          "Document Health and Code Cleanup",
          "Test Your Knowledge"
        ],
        "Quick Debugging of Code": [
          "Searching in Watch, Autos, and Local Windows",
          "Format Specifiers Dropdown",
          "Custom Visualizations",
          "Debugging Large Applications",
          "Test Your Knowledge"
        ],
        "Using Filter Files for Boosting Performance": [
          "Taking Control of Solution Loading",
          "Solution Filter Files",
          "Typing Performance Improvements",
          "Restoring Project Hierarchy State and Tool Window State",
          "Test Your Knowledge"
        ],
        "Source Control and Team Explorer": [
          "Using Git Tools",
          "Pull Requests for Visual Studio",
          "Azure DevOps Work Item Experience",
          "More about Azure DevOps",
          "Test Your Knowledge"
        ],
        "Web Technologies and Programming Languages": [
          "Support for .NET Core 3.0 Projects",
          "CPU Profiling in ASP.NET",
          "Snapshot Debuggers",
          "C++ and XAML with IntelliCode",
          "F# Language and Tools",
          "The Python Environment Dialog",
          "Deploying Web Applications",
          "Test Your Knowledge"
        ],
        "Mobile Development with Visual Studio 2019": [
          "Xamarin Incremental Build Performance",
          "Xamarin Android Designer",
          "Xamarin Forms Property Panel",
          "Workload Size and Improved Performance",
          "Improved Android Emulator",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Who have a basic working knowledge of Visual Studio."
      ],
      "description": "This comprehensive course covers the advanced features of Visual Studio 2019 and uses a practical approach to bolster your programming skills and simplify application development requirements.\nYou will master advanced topics to take your skills to the next level with Visual Studio 2019. We begin with a quick overview, then introduce the new features, including updates such as tighter integration between Visual Studio Team Explorer and Azure DevOps, a suite of tools that enables you to easily create cloud-enabled apps powered by Microsoft Azure. You will learn to create apps for the web as well as cross-platform applications. You will learn how to connect to databases using Server Explorer. You will learn how to debug, test, and improve your code and deploy your app. You will also learn how to manage your code, collaborate, and extend Visual Studio’s functionalities.\nBy the end of the course, you will have mastered the new features and functionalities of Visual Studio 2019 to utilize the full benefits of Visual Studio when it comes to building advanced applications.\nAbout the Author\nJoshua Garverick is a Microsoft MVP and a seasoned IT professional with more than 15 years' enterprise experience working in several large industries (finance, healthcare, transportation, and logistics). He specializes in application lifecycle management and is currently involved with DevOps and architecture projects, focusing specifically on software architecture and enterprise needs. Josh is a Visual Studio ALM Ranger, providing guidance, practical experience, and solutions to the developer community.",
      "target_audience": [
        "This course is for those who are keen to master advanced features unlikely to be known to average developers/users, and then apply them to take real-world projects to the next level."
      ]
    },
    {
      "title": "Svelte and Firebase - The Complete Guide (2023)",
      "url": "https://www.udemy.com/course/svelte-and-firebase-the-full-course/",
      "bio": "Create 2 apps with Svelte - Twitter and Trello clones. Unleash Svelte reactivity and speed. Use Firebase as data store.",
      "objectives": [
        "Learn to program with Svelte and create two amazing Web Apps.",
        "Get an understanding of how to create a web app - explained practically.",
        "Use Firebase services - Firestore storage, Authentication and more.",
        "Establish yourself in the field of the Web Development."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to get a help",
          "Github repo tricks"
        ],
        "P1: Init Project": [
          "Init Project",
          "Coding Editor Setup",
          "Folder Structure",
          "Src Folder",
          "Layout",
          "Quiz",
          "Tailwind",
          "Tailwind Correction",
          "Additional CSS Improvements",
          "Quiz"
        ],
        "P1: Pages & Reactivity": [
          "New Route",
          "More about layouts",
          "Sub Page",
          "Cleanup",
          "Svelte Reactivity",
          "Reactive statement",
          "Reactive declarations",
          "Tips",
          "Quiz"
        ],
        "P1: Task Item & List": [
          "Copy/Paste Layout",
          "Task Item",
          "Task List",
          "Props",
          "Formatting Options",
          "Task List Data",
          "Quiz"
        ],
        "P1: Template Syntax": [
          "Each Loop",
          "Iterate Tasks",
          "Editable Component",
          "If Block",
          "Button Formatting",
          "Editing Mode",
          "Quiz"
        ],
        "P1: Value binding and Events": [
          "Value binding",
          "Default Value",
          "Bind to Component",
          "Dispatch Event",
          "Rename event",
          "Pass Data in Events",
          "Quiz"
        ],
        "P1: Stores": [
          "Stores",
          "Sub to Store",
          "Update Store",
          "Unsub",
          "Auto Subscription",
          "Start Function",
          "Stop Function",
          "Readable Store",
          "Task List Store Data",
          "Event Forwarding",
          "Quiz"
        ],
        "P1: Task Update": [
          "Revert Update Task",
          "Pass List Index",
          "Find Task Idx",
          "Update Task",
          "Return subscribe only",
          "Move update to store",
          "Code Exercise",
          "Quiz"
        ],
        "P1: Add List and Task": [
          "Add List Prep",
          "Add new list",
          "Allow X Scrolling",
          "Add Task",
          "Make list full height"
        ],
        "P1: Drag & Drop": [
          "Drag Start",
          "Drop Item",
          "Event data transfer",
          "Move code to store",
          "Move Item",
          "Refactor Props",
          "List Hover Id",
          "Hovering Effect",
          "Script Module",
          "Quiz",
          "Code Exercise"
        ]
      },
      "requirements": [
        "Base Javascript knowledge"
      ],
      "description": "Is this course right for you?\nThis course covers creating two applications with Svelte. Most of the features are made from scratch without any dependency package. This covers - Form Validation, Pagination, Modal, Popups,  Snackbar and many others. You will learn how to create everything from the ground up.\nThe course covers the explanation of Svelte by working on actual projects. This course will give you the confidence and skills required to start any project.\n\n\nStudents should have basic javascript knowledge to start working on this course.\n\n\nWhat is Svelte?\nSvelte is a radical new approach to building user interfaces. Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app.\nInstead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes.\n\n\nWhat are you going to work on?\nThe first application explains base Svelte features by working on the real project - Trello clone, a simple task management application\nIn the second application, students will build a Twitter-like app from scratch - the HTML layout part is not part of the course (This will be provided in the course materials to save time and focus purely on  Svelte). The focus of this course is coding and not writing HTML content.\nThe course starts with the preparation of the base layout of the application. All designs - images, and content are provided by the instructor.\nContent can be briefly summarized in these points:\nLayout preparation - A few lectures to prepare the HTML for your application. Separation of layout into the Svelte components.\nTemplate syntax - Use special syntax inside of HTML\nDirectives & Events - Value binding of variables.\nSvelte Kit Routing - This part explains creating a \"multi-page\" application. Students will learn how to create a routing with different routing strategies and navigation to the routes.\nReactivity - Explains how to create and manage reactive data\nLifecycle function - How to use onMount and onDestroy\nStores - More complex reactive data\nTransitions - Fancy effects with Svelte\nAuth Forms - Students will learn how to create a reactive form and bind the data to form inputs.\nCustom Form Validation - Covers creating a custom input/form validation and error handling from scratch.\nFirebase/Firestore - Initialization of Firebase application (data storage)\nStore Functions - Important part of the projects. Allows the feature-related code to be separated into its context.\nAuthentication - This part covers creating a login, register, and logout functionality. Students will learn how to authenticate a user upon the application visit.\nProvider and Context - This creates a provider component, which can hold the data on the root level and provide them to underlying components.\nSnackbars - App-wise functionality created with Provider to display any message as a toast popup.\nGlide Creation - Covers how to create a new glide and display it on the main page. From this point on, students will often work with Firebase/Firestore.\nFollow Functionality - Follow functionality allows users to subscribe to other users.\nDisplay Glides from Following - Subscription (Following) to other users will allow seeing the Glides (messages) they post.\nPaginate Glides - It would be inefficient to fetch/display all of the glides on the initial load. Students will learn how to implement their lazy loaded pagination when data are loaded as the users browse the application.\nCreate Sub-Glides - It's essential to have a way to respond to glides. This feature enables a user to create subglides, which is an answer to the glide.\nModal Messenger - Students will learn how to create a modal component from scratch. This will be used to display a messenger component on any page.\nImage Upload - Deployment to Firebase Storage\nDeployment to Vercel - Finally, the application will be live hosted on Vercel. Anybody on the internet will be able to visit your application.\nWhile working on the features above, the students will learn and understand Svelte features. They will know how to architecture applications and will be able to create their applications with Svelte.",
      "target_audience": [
        "Anybody interested in how to create Web Apps with modern JS libraries/frameworks",
        "People looking for a practical web development guide.",
        "This course is for everyone eager to understand how to build an app from scratch."
      ]
    },
    {
      "title": "Multi-language PHP: internationalisation for PHP developers",
      "url": "https://www.udemy.com/course/create-multi-language-sites-in-php-i18n-for-php-developers/",
      "bio": "Learn how to easily adapt your PHP website or web application to offer multiple languages to its visitors",
      "objectives": [
        "Display your site's content in more than one language",
        "Use gettext with PHP",
        "Translate simple strings",
        "Translate plurals, numbers and dates",
        "Detect the visitor's preferred language",
        "Translate content in databases",
        "Use industry standards and best practices for localised content",
        "Get support directly from the instructor"
      ],
      "course_content": {},
      "requirements": [
        "You must know PHP, including the basics of object-oriented code",
        "You need to know the basics of using Composer to install packages",
        "Ideally have a web server with PHP and Composer installed, but a brief overview of installing these will be covered"
      ],
      "description": "If you are a PHP developer and you want to display your site in more than one language, then you need to learn how to internationalise your code. Offering your content in several languages will enable you to reach a larger audience.\n*** TOTALLY REWRITTEN IN 2020 ***\nLearn how to Internationalise your PHP code in this Comprehensive Course.\nLearn how to get the language from the URL\nUse international standards for identifying languages\nBuild reusable code for handling multi-language sites\nLearn how to use the industry standard gettext\nTranslate dynamic content including plurals and dates\nTranslate content in databases\nCreate a user-friendly interface for visitors\nThe essential skills required if you want to develop a multi-language website or web application in PHP.\nNot everyone understands the same language. To reach a larger audience with your content, you need to display your content in more than one language. gettext has been the industry standard for translating content for many years. In addition to learning how to use gettext with PHP, we'll learn how to offer the best experience for the international visitor.\nContent and Overview\nThis course is designed for the PHP developer who currently has some content developed in one language. Learning the techniques on this course will enable you to internationalise your site, so you can display its content in multiple languages.\nSuitable for all PHP developers, you'll start by learning the basics of internationalization (i18n) in PHP.\nYou'll learn best practices for getting the language code from the URL, and how to use it in your code.\nThroughout the course, we'll build code that you can reuse in all your projects.\nYou'll learn how to use gettext, and also an alternative that overcomes its limitations.\nIn addition to simple strings, you'll learn how to translate plurals, numbers, dates and long strings of text.\nYou'll learn how to handle content in a database, along with how to handle images that contain text.\nAll the time we'll adhere to industry standards and best practices.\nWhen you complete the course you'll be able to internationalise your PHP code, allowing you to display your content in more than one language.\nComplete with all the code shown in the lectures, you'll be able to work alongside the instructor and will receive a verifiable certificate of completion upon finishing the course.\nAlso, at all times throughout the course you have access to the instructor in the Q&A section to ask for help with any topic related to the course.\nEnrol now and add internationalization to your PHP skillset!",
      "target_audience": [
        "PHP developers that want to make their site's content available in more than one language"
      ]
    },
    {
      "title": "CSS Flexbox | Basic to Advanced with Responsive Project",
      "url": "https://www.udemy.com/course/css-flexbox-basic-to-advanced-with-responsive-project/",
      "bio": "Learn how to build Web and Mobile Application Interfaces for the modern world!",
      "objectives": [
        "Understand everything about FlexBox Basic to Advanced",
        "Write high-quality and reusable CSS code",
        "Create web site designs more effectively",
        "Build a complete website with advanced responsive layouts like ( the holy grail layout - the equal columns layout - the horizontal masonry layout ) and more..."
      ],
      "course_content": {
        "FlexBox | Step by Step": [
          "Introduction",
          "Display : flex",
          "Flex Direction",
          "Flex Wrap",
          "Flex Flow",
          "Justify Content",
          "Align Content",
          "Align Items",
          "Order",
          "Flex Grow",
          "Flex Basis",
          "Align Self"
        ],
        "Responsive Project with FlexBox": [
          "Class 1",
          "Class 2",
          "Class 2",
          "Class 4",
          "Class 5"
        ]
      },
      "requirements": [
        "Basic HTML & CSS",
        "Any Code Editor of your Choice"
      ],
      "description": "Flexbox Is the way to layout websites and web applications in the modern world.\nIn this class, you will learn about all the features and properties of Flexbox and how to use them! We will take a hands-on approach to discovering all the awesome ways to use Flexbox and by the end of the course, you will have a professional understanding of Flexbox and how to use it to layout Websites and Web Applications like modern CSS guru!\nEach video includes a link to the lesson's code so you can easily follow and code along without needing anything but a web browser.\nTo be successful in this class all you need is a basic understanding of CSS and HTML!\nThe old way of laying out content on the web is in its last days. Learn how to utilize Flexbox to streamline, simplify, and future-proof your Websites and Mobile Applications!\n\n\nAfter this course, you'll be able to use Flexbox to...\nvertically align any element\ncreate modern grids\ntake up remaining space\nadd spacing between elements\nimplement complete site layouts\nand much more!\nAs a bonus, this course includes a complete Flexbox Cheat Sheet that you can use to recap all you've learned and to refer back to while using Flexbox.\nAdditionally, I included the code for a Flexbox demo showcase -- which is like an interactive cheat sheet for you to see in the browser that contains every property and every layout example from this tutorial.",
      "target_audience": [
        "Web designers and developers who want to improve their frontend skills",
        "Experienced web developers who want to create websites layouts in a much more easy way"
      ]
    },
    {
      "title": "Building Youtube Clone Using Laravel and Livewire",
      "url": "https://www.udemy.com/course/building-youtube-clone-using-laravel-and-livewire/",
      "bio": "Complete Course to build Youtube Clone using Livewire and Video Encoding Using FFMPEG.",
      "objectives": [
        "Learn How to make Youtube Clone Website Using Laravel",
        "How to install and use Livewire 2.0",
        "Learn Video Processing/Encoding using FFMPEG",
        "Learn File Upload in Livewire",
        "Learn Image Manipulation using Image Intervention Package",
        "Create Voting System (Like/Dislike)",
        "Create Comment System",
        "How to create Jobs and how to dispatch them using Queues in Laravel",
        "How make big applications with complex login like youtube .",
        "Learn about FrontEnd using Bootstrap Framework and custom CSS When needed"
      ],
      "course_content": {
        "Introduction": [
          "Project Demo"
        ],
        "Project Setup and Channel Creation": [
          "Create New Laravel Project",
          "Create Channel Model and Migration",
          "Create Channel via Default Registration Form"
        ],
        "Livewire": [
          "Install Livewire",
          "Property Binding Example"
        ],
        "Edit Channel via Livewire Component": [
          "Setup Channel Edit Routing",
          "Build The Edit Form",
          "Configure Validation via Livewire",
          "Lock down Channel Update to owner via Authorization Policy",
          "Channel Logo Update - File Upload via Livewire",
          "Resize Image using Image Intervention Package"
        ],
        "Video Uploading": [
          "Create Video Model and Videos Table Migration",
          "Create Livewire Components to manage Videos and prepare the views",
          "Create Video Upload Form and Upload to Livewire Temporary Folder",
          "Add Progress Bar",
          "Video Validation and Create Video Record",
          "Edit Video Record Form",
          "Move Uploaded File to Video Temp Folder"
        ],
        "Video Encoding using FFMPEG": [
          "Introduction to Video Encoding and Install Laravel-FFMPEG Package",
          "Test: Video Encoding using Command in Laravel Application",
          "Creating Jobs for Video Encoding and Creating Thumbnail",
          "Dispatch Create Thumbnail Job",
          "Add Thumbnail to the Videos Table",
          "Dispatch Video Encoding Job",
          "Add Video Thumbnail to Edit Form",
          "Build All Videos Page",
          "Delete Video",
          "Secure Deleting video Using Video Policy",
          "Real Time Update for Processing Percentage",
          "Fix Update Visibility Column and Delete Temp Video File"
        ],
        "Video Player using Videojs": [
          "Setup Videojs Library and add player using this library",
          "Customize Width and Hight for player by adding custom.css file",
          "Add Views Column to Videos Table + Increase Views When Video Played for more 3s"
        ],
        "Voting System (Like / Dislike system)": [
          "Create Video Information Row",
          "Create Voting Components",
          "Like and Dislike Table/Model Creation with relationships",
          "Allow user to like / dislikes videos",
          "Check If User Likes Videos",
          "Check if User Dislike Videos",
          "Load Likes and Dislikes in mount Method",
          "Refresh Values Automatically when User Clicks Like/Dislike",
          "Toggle Like/Dislike - one is active at a time"
        ],
        "Fixes": [
          "Fix Video Player timeline and Add Poster image",
          "Fix Default Channel Image"
        ],
        "Channel Subscription": [
          "Build Markup For Channel Information and Subscription Button",
          "Subscription Migration and Add Needed Relationships",
          "Add Channel Subscribers and Get User Subscription Status",
          "Toggle Subscribe Button"
        ]
      },
      "requirements": [
        "Basic PHP Knowledge",
        "Basic Laravel Knowledge",
        "Basic Web Development Knowledge",
        "Good Knowledge about HTML/CSS/Javascript"
      ],
      "description": "Join me in Building YouTube Clone Using Livewire Application Journey.\nYou will need basic Knowledge in Laravel. I will go through building it kind of live coding style in which you can see me making mistakes and learn how we can correct it .\nOn Challenge in Website that contains videos is how to encode videos ? How I can generate thumbnail ? how to play videos in all browsers . All of these points will be address using FFMPEG .\nWe are going to use Alpinejs as basic javascript library to help us to build some dynamic in front-end !\n\n\nJoin me and have fun while coding :)\n\n\nHere is what is included in this course :\nCreate new Laravel Project and do complete setup.\nAllow user to create youtube channel while he register in the application.\nInstall and Configure Livewire and show basic model binding between class and view\nEdit Channel properties using Livewire Component\nConfigure Validation for Forms Using Livewire\nCreate policies in Laravel to manage channel updates . Only Channel owner should be update his channel.\nUpload Files like channel image using Livewire file uploads methods.\nModify Image after upload using image intervention package to control image size etc.\nFile upload section which contains details about creating video upload form using Livewire\nAdding Progress Bar for Video Upload\nEdit Video Record\nDelete Video Record\nSecure video deletion using Laravel polices and integrate it inside livewire component .\nVideo Encoding using FFMPEG .\nDemo video to explain FFMPEG and how to integrate with Laravel\nVideo Encoding demo using command in Laravel\nCreate Jobs to handle video encoding , creating thumbnail and learn how to run them in the background to improve application performance\nAdding Thumbnail to Video\nReal time update about video encoding progress in front end inside Livewire Component.\nAdd video player using videojs and customize its height and width\nLearn about video events like pause ,play, ended etc and update views column after user view video for 3 seconds\nComplete Section about\nVoting System (Like/Dislike)\nUser can like or dislike videos,\nShow number of likes/dislikes for each video\nSubscription Section : allow users to subscribe/unsubscribe to channel\nShow channel information with subscription counts\nComment System : Users will be able to add comments and replies for each video.\nUsing Livewire with comment system to show/hide replies or show add new comment form\nBuild Homepage in which user will he videos from subscribed channels or general videos if not logged in\nAdd Search Functionality to HomePage\nStyle Channel HomePage similar to youtube\nAdd Video Duration to Video Card\nand more...\n\n\nCourse Prerequisites :\nBasic PHP Knowledge\nBasic Laravel Knowledge and able to setup Laravel Environment\nBasic Knowledge Bootstrap CSS Framework\nGood Knowledge of HTML, CSS and Javascript\nMake sure you have at least PHP 7.4",
      "target_audience": [
        "PHP and Laravel Developers",
        "Web Developers",
        "Front End Developers",
        "Backend Developers"
      ]
    },
    {
      "title": "NestJS Microservices: Build a Distributed Job Engine",
      "url": "https://www.udemy.com/course/nestjs-microservices-build-a-distributed-job-engine/",
      "bio": "Master NestJS Microservices by Building a Scalable, Distributed Job Engine with gRPC, Pulsar, Kubernetes & AWS",
      "objectives": [
        "Build a fully functional distributed job engine using NestJS microservices",
        "Structure a scalable monorepo using Nx for efficient development and dependency management",
        "Implement gRPC as the transport layer for high-performance, low-latency communication",
        "Use Apache Pulsar for distributed messaging and reliable job processing",
        "Expose a GraphQL API for flexible data access and interaction",
        "Secure microservices with JWT authentication and HTTP-only cookies",
        "Apply object-oriented design principles to keep code modular, reusable, and maintainable",
        "Implement horizontal scaling to efficiently handle high workloads",
        "Optimize Dockerization with Nx libraries and independent package.json files",
        "Use Prisma ORM and Drizzle ORM with PostgreSQL for robust database management",
        "Deploy microservices to Kubernetes with best practices for production readiness",
        "Set up a production-grade AWS deployment with a custom domain and SSL encryption",
        "Gain hands-on experience designing, developing, and deploying real-world NestJS microservices"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "System Architecture",
          "Prerequisites",
          "Resources",
          "GitHub Repository",
          "Nx Bug",
          "Nx Monorepo Setup - Part 1",
          "Nx Monorepo Setup - Part 2",
          "GitHub Actions CI"
        ],
        "Users": [
          "Prisma Schema",
          "Nx Prisma Targets",
          "GraphQL & Nx Libs - Part 1",
          "GraphQL & Nx Libs - Part 2",
          "Users Mutation & Query"
        ],
        "Cleanup": [
          "Commit Hooks",
          "Unit Tests",
          "Config Module",
          "Nx Options"
        ],
        "Authentication": [
          "JWT Module",
          "Config Cleanup",
          "User Verification",
          "Sign JWT Cookie",
          "JWT Strategy",
          "User Parameter Decorator",
          "Auth Playground Settings"
        ],
        "Jobs": [
          "Generate Application",
          "Job Decorator",
          "Discovery Module",
          "Jobs Resolver",
          "Jobs Playground Settings"
        ],
        "gRPC Transport": [
          "Auth Proto",
          "TS Proto",
          "gRPC Server",
          "Auth Controller & Client",
          "gRPC GQL Auth Guard",
          "gRPC Auth Strategy"
        ],
        "Pulsar Job Executor": [
          "Pulsar Client",
          "Abstract Job Producer",
          "Abstract Consumer",
          "Job Executor",
          "JSON GraphQL Scalar",
          "Message Serialization & Error Handling",
          "Job Validation"
        ],
        "Message Batching": [
          "Pulsar Batch Producer",
          "Backlog Test Script"
        ],
        "Dockerization": [
          "NPM Workspaces",
          "New Libraries",
          "Library Dependencies",
          "Library Webpack",
          "Update Applications",
          "Module Alias",
          "Jobs Dockerfile",
          "Finish Dockerfiles",
          "Common Webpack"
        ],
        "Logging": [
          "Pino Logger",
          "GraphQL Logger",
          "gRPC Logger"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript or TypeScript",
        "Familiarity with Node.js and backend development concepts",
        "Understanding of REST APIs (GraphQL knowledge is helpful but not required)",
        "Some experience with databases like PostgreSQL is beneficial",
        "Basic understanding of Docker and containerization concepts",
        "Familiarity with basic NestJS concepts",
        "Familiarity with Kubernetes for deployment"
      ],
      "description": "Master the art of building scalable, distributed microservices with NestJS by developing a fully functional job engine from the ground up. This course is designed to teach you NestJS microservices the right way, covering everything from architecture and design to deployment and scaling in production.\nYou’ll start by setting up a monorepo with Nx, allowing you to manage multiple services within a single codebase efficiently. Using gRPC as the transport layer, you'll enable high-performance, low-latency communication between services. The course dives into Apache Pulsar, a powerful distributed messaging system, that allows us to add multiple consumers to a shared queue & achieve scale. You'll also expose a GraphQL API, providing a flexible and efficient way to interact with your microservices.\nSecurity is a core focus, and you'll implement JWT-based authentication with secure, HTTP-only cookies. Throughout the course, everything is built using object-oriented design principles, ensuring a clean, modular, and reusable codebase that follows DRY (Don’t Repeat Yourself) principles. This makes your codebase more maintainable as it scales.\nYou'll also optimize your Docker setup, using Nx libraries with separate package.json files for better dependency management. Horizontal scaling techniques will ensure your services can handle increasing workloads efficiently. As your job engine matures, you'll implement job state tracking, allowing you to monitor job progress.\nFor database management, you’ll use Prisma ORM and Drizzle ORM with PostgreSQL, ensuring type safety, migrations, and optimized queries. Finally, you’ll deploy everything to Kubernetes, taking your microservices to production with AWS, a custom domain, and SSL encryption.\nBy the end of this course, you'll have a fully operational distributed job engine with robust state tracking and the expertise to design, develop, and deploy scalable NestJS microservices in real-world production environments.",
      "target_audience": [
        "Backend developers looking to achieve scale through Node.js",
        "Backend developers looking to master NestJS microservices",
        "Software engineers interested in learning gRPC and Apache Pulsar for high-performance communication and job processing",
        "Developers interested in building real-world production-grade applications with NestJS",
        "Anyone looking to gain hands-on experience with modern backend technologies like Prisma, Drizzle, Docker, and GraphQL",
        "Those who want to improve their ability to design scalable, maintainable, and efficient microservices architectures"
      ]
    },
    {
      "title": "Fashion Blogs - How to Start a WordPress Fashion Blog 2019",
      "url": "https://www.udemy.com/course/fashion-blogs/",
      "bio": "Fashion blogs are the latest craze on the internet today. Discover how to start a fashion blog of your own today.",
      "objectives": [
        "Pick the right niche and topic focus to create a fashion blog you are passionate about",
        "Setup your fashion blog in just 5 minutes using WordPress (no need to install any software)",
        "Choose the best WordPress theme for your fashion blog to make it stand out from the crowd",
        "Free WordPress plug-in’s for WordPress blogging success, such as contact plugins, stats tracking and email newsletter forms",
        "Tips for Search Engine Optimization (SEO) of your fashion blogging website and getting it to rank in the search results for relevant and long tail keywords",
        "Discover ways to build the traffic by partnering with other fashion and news sites, while also earning from your blog website"
      ],
      "course_content": {
        "START HERE FIRST! - Important Intro Videos": [
          "My Story and Why You Need a Blog",
          "Preparing for the Launch of Your Blog"
        ],
        "How to Start a Fashion Blog": [
          "Finding a Niche Focus and Topic for Your Blog",
          "Top Fashion Blogs and Bloggers on the Internet",
          "Content Creation and Analyzing Top Fashion Site Rankings",
          "How to Monetize Your Fashion Blog",
          "Best Methods to Increase Traffic to Your Fashion Blog"
        ],
        "7 Day Blog Challenge (Follow My Case Study)": [
          "Day 1 - Hosting and WordPress Setup",
          "Day 2 - WordPress Configuration and Theme Setup",
          "Day 3 - First Blog Post, About Me and Contact Page",
          "Day 4 - Start a Mailing List for Your Blog",
          "Day 5 - Creating the Main Page and Pillar Content",
          "Day 6 - How to Create User Call-to-Actions on Your Blog",
          "Day 7 - Adding a Resources Page, Banner Ads, and Monetization"
        ],
        "Bonus Materials and Video": [
          "My Recommended Blogging Tools and Resources",
          "What Happens in an Internet Minute",
          "Exclusive Interview with Zac Johnson"
        ]
      },
      "requirements": [
        "Anyone can start a blog of their own. While there are no pre-requisites to getting started, you will need a domain name, web hosting and WordPress to create content for your site. This course will show you how to set all of this up.",
        "Blogging about fashion, clothing and style is great for anyone who already loves and lives a life of fab. The more you already know, the better"
      ],
      "description": "Fashion blogs are all over the place. Now the question is, would you like to start a fashion blog of your own? If so, this is the ONLY blog training course you will ever need. Not only will I be showing you what it takes to create a successful fashion or fan blog, I will also be walking you through the process step-by-step in my \"7 Day Blog Challenge\", (my best selling blog training course valued at $195) which I've included for free in this course.\nThis course is the only guide you need to start your fashion WordPress Blog or website\nKnow how you can pick the right niche for your fashion blog\nCreate a fashion blog you are passionate about\nSetup your fashion blog in just 5 minutes (yes you read it right, just 5 minutes!)\nChoose the best possible WordPress theme for your blog website\nInstall free WordPress plugin’s for blogging success\nOptimize your fashion blogging website for better SEO\nHow to analyze the competition and see where other fashion blogs rank\nDiscover the best ways to build traffic and earn from your fashion blog website\nThe first thing we are going to do in this course is we are going to pick the right niche for your fashion blog. This is an extremely important part of the process, as it will lay the groundwork for the success of your blog in days and weeks to come. Create a fashion blog you are passionate about, which we will help you discover. Find a passion that will also make you earn in the process. Since we already are going to be focusing on a \"fashion\" concept, it's just a matter of finding which direction and content topic you want to go after.\nOnce you decide on your fashion blogging niche the second thing it that choose a unique but effective domain name for your blog website. I will walk you through the process of choosing a great domain name for your blog website. Make sure you come up with an original domain that represents the content on your site, but also making sure it's something that is easy to remember and spell in the process.\nAfter choosing a domain name, it's time is to go live with your fashion blog. I will walk you through the process of how to setup your blog in just 5 minutes with WordPress and without any coding. Choosing the right WordPress theme for your blog website is also an important, so I will lay out these guidelines for you as well -- along with showing you some of my favorite sites where I get my own premium themes.\nIn this course, you will also get to understand why and how to use the top WordPress plugins that are required for blogging success. You will also discover how SEO works and which WordPress SEO tips you should be following to help you improve your WordPress blog website SEO and get more organic traffic. The more you focus on your site content and SEO now, the more chance you will have for ranking for fashion related keywords and search phrases.\nAt the end, I am going to show you the best methods to get free traffic to your blog. There are many ways to reach traffic on the internet today, but I'm going to only focus on four methods that I continue to use today -- these are SEO, guest blogging, infographics and social media. I will also show you the best ways to make money from your blog. If you truly want to profit from your site, you will need to focus on your content creation and marketing efforts. This is something I have continually mastered and will show you how to as well.\nIn summary, this course is easy enough for a newbie blogger to follow, yet also loaded up with more than enough actionable tips and resources to teach veteran bloggers and marketers something as well. This is the only guide you need to get your blog fully functional and live. Be sure to visit bonus video material for more videos on the specifics of how to complete any of the actions discussed in the course.\nA webinar on “How to Make $500 with a Blog” as a Bonus material inside the course.\nAs with all of my courses, I know they are top notch and the best around. If you don’t like the course for any reason then you can request for the refund in first 30 days from your purchase.  Also, remember that this course comes with lifetime access to the course, that means you will get access to all the future lectures at FREE of cost.\nThanks for your interest in this course, hope you’re as excited to get started.\nGo ahead and click on “Enroll Now” button. See you inside the course…!!!",
      "target_audience": [
        "This \"Fashion Blogs - How to Start a Fashion Blog \" course is for the beginners who are passionate about blogging and want to learn where to start and how to create a blog website based on celebrity gossip and/or celebrity fan sites",
        "Anyone can take this course and start their own fashion blog from today"
      ]
    },
    {
      "title": "Upgrade Your Css UI Library - Cards, Buttons, Animations etc",
      "url": "https://www.udemy.com/course/upgrade-your-css-ui-library/",
      "bio": "In this course you will learn how to create over 35 different CSS components! Cards, Buttons, loaders... Cool stuff",
      "objectives": [
        "You'll create a UI library of Buttons, Cards, Forms, Animations, Hover Effects and more",
        "You'll learn how to take your CSS and HTML skills and create outstanding web components",
        "You'll have access to more than 50 videos and their source code that you will be free to use in your own projects",
        "You'll learn new ways to use CSS properties",
        "You'll find downloadable lectures, code and design assets for all projects",
        "You'll get friendly and fast support in the course's Q&A section",
        "You'll learn how to use before and after pseudo elements to create amazing designs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction Video - Important!",
          "How to use Font-Awesome"
        ],
        "Loading Animation and Typing Animation": [
          "Auto Typing Text Animation",
          "Typing Text Animation - Version 2",
          "Floating Text Animation - Amazing for Your Header!",
          "Shining Text Animation",
          "Floating Rings Loader Animation",
          "Loading Boxes Animation",
          "Loader Ripple Animation",
          "Loading Fill Animation",
          "Loader Ring Animation",
          "Loader Animation With 15 Circles",
          "Loading Snake Animation"
        ],
        "Cards - Navigation - Others": [
          "Portfolio For Your Landing page Collection",
          "Fliping Gallery Box Animation",
          "Image and Text Reveal Animation",
          "Special Tilting Menu",
          "Rain Animation",
          "Cards Linear Gradient Hover Effect",
          "Quote Card With Linear Gradient Animation",
          "London Cards With Hover Effect",
          "Card with Clip Path Hover Effect"
        ],
        "Buttons": [
          "Social Buttons Pink Background Hover Effect",
          "Button With Snake Border Animation",
          "Button With Border Snake Animation - Version 2",
          "Social Buttons Flipping Box",
          "Social Glowing Gradient Buttons",
          "Activate Button",
          "Switch Button With Cool Transform Animation",
          "Power On Button",
          "Switch Button With Background Change Animation",
          "Button With Underline Over Effect",
          "Button With Linear Gradient Effect",
          "Button Hover Cubic Bezier",
          "Button With Before and After Transition Animation"
        ],
        "Please Read": [
          "Please Read =)"
        ]
      },
      "requirements": [
        "At least some basic knowledge of CSS",
        "At least some basic knowledge of HTML",
        "Any computer and OS will work — Windows, macOS or Linux",
        "There is no need for any paid software",
        "Optional - Basic knowledge of JavaScript (Most videos doesn't requires JavaScript)"
      ],
      "description": "Hi and welcome to an awesome Udemy CSS Course!\nCreativity is key.\n\n\nAre you looking to take your CSS skills to the next level?\nDoes adding 35 more components to your CSS portfolio sound good?\nIf so, you're in the right place!\nCSS is an art and we are all artists!\nThroughout the course you will learn how to create more than 50 different CSS components:\nCards - Buttons - Loading pages - Galleries - Forms - Navigation Bars- Sticky headers and footers.\n\n\nThis course is all about CSS!\n----- No  JavaScript knowledge is required -------\nWe may use Javascript for a few hamburger buttons but don't worry! It's only 3-4 lines of code and will be used sparingly.\n\n\nIf you didn't check out the course video please go ahead and do that :)\n\n\nEach lecture is for a different component and you'll get the source code as well!\nThe course has just been launched. We have 35 lessons at the moment and are trying to make more.\n\n\nThe best thing about the course is the support team!\n\nWe take great pride in our support.\nWe will do our best to answer every question within 24 hours. There are no stupid questions. Well, maybe some but we'll answer them anyway :).\nSupport is our priority!\n\n\nBasic knowledge of CSS is required!\n\nDuring the course, we will use different CSS techniques to show different methods.\nGrid (with auto fit and minmax), Flex-box, perspective, and others.\nWe will be here to answer any questions that you have!\nIf you're ready to become a better CSS developer hurry up and enroll!\nIf you're not satisfied there is a 30 - day money-back guarantee. In other words - nothing to lose.\n\n\nRemember the true power is the QA section where you will find answers and explanations for everything!!",
      "target_audience": [
        "Front-end developers who want to upgrade their UI library with new CSS components.",
        "CSS developers who want to modernize their CSS knowledge",
        "CSS developers who want to add animations to their toolbox",
        "Front-end developers who want to take their Designing skills to the next level",
        "Front-end developers who want to take their CSS and HTML skills to the next level",
        "Front-end developers who want to better understand CSS by practicing",
        "Front-end developers who just want source code . -_-"
      ]
    },
    {
      "title": "Automate The Boring Stuff With Django",
      "url": "https://www.udemy.com/course/automate-the-boring-stuff-with-python-django/",
      "bio": "Use Django to Craft 6 essential automation tools, from Data Import to Email Tracking System to Stock Market Analysis!",
      "objectives": [
        "Django's custom management commands",
        "Import 1 million dataset programmatically",
        "Build Stock Market Analysis Tool",
        "Solution to 6 real-world use case scenarios",
        "Build 6 software tools that boosts your portfolio",
        "Export data and send it via an email as an attachment",
        "Send emails to thousands of recipients at once",
        "Complete Email Tracking System with Open rate & Click rate",
        "Image Compression Tool",
        "Web Scraping"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Django Refresher"
        ],
        "Django Setup & Custom Management Command": [
          "Data Entry Automation Introduction",
          "How To Get Help?",
          "Custom Management Command Overview",
          "HelloWorld Command",
          "Greeting Command",
          "Full Source Code of the Project"
        ],
        "Create Super User & Setup GitHub": [
          "Migrate and Superuser",
          "Set Up GitHub"
        ],
        "Import Data Custom Command": [
          "InsertData Command",
          "InsertData Validation",
          "Import Data from CSV",
          "Import Data to Any Model",
          "Git Push"
        ],
        "Export Data Custom Command": [
          "Export Data Single Table",
          "Export Data from Any Table",
          "Git Push"
        ],
        "Import Data Tool": [
          "Import Data Overview",
          "Design Import Data Form",
          "Fetch Custom Models",
          "Storing the Uploaded Files",
          "Triggering the Command from View",
          "Displaying Messages",
          "Handling Import Data Error",
          "Importing 1 Million Dataset",
          "Git Push"
        ],
        "Celery & Redis": [
          "What Is Celery?",
          "How Celery Works?",
          "Setup Celery and Redis on Django",
          "Installing Redis on Windows",
          "Run Celery",
          "Run Celery on Windows"
        ],
        "Celery & Redis In Action": [
          "Celery in Action",
          "Import Data Task",
          "Check CSV Error Before Celery Task",
          "Email Configuration",
          "Store Secret Info Securely",
          "Send Test Email",
          "Email Sending Helper Function",
          "Hide Messages in 5 Seconds",
          "Git Push"
        ],
        "Export Data Tool": [
          "Export Data Setup",
          "Export Data View",
          "Export Data Task and Send Email with Attachment",
          "Git Push"
        ],
        "Automation Tools Front-end": [
          "Template Inheritance",
          "Designing Navbar",
          "Designing Homepage",
          "Git Push"
        ]
      },
      "requirements": [
        "Basics of Django Framework",
        "Eager to code for complex use case scenarios"
      ],
      "description": "Embark on a transformative journey with 'Automate the Boring Stuff with Django' – an immersive Python and Django course tailored for efficiency enthusiasts! Say goodbye to boring, time-consuming tasks, and delve into the world of Django to construct not just one or two, but six essential automation tools that will redefine your workflow.\n\n\nImmerse yourself in mastering the Django framework through a series of hands-on projects. Craft custom commands to seamlessly import data and develop a robust export tool. Dive into the intricate process of creating a dynamic bulk email system, tracking open and click rates for optimal engagement. Explore the dynamic world of web scraping to effortlessly extract valuable information and harness its power to enhance your projects.\n\n\nThe course doesn't stop there – it takes you on an exhilarating journey into the realm of Stock Market Analysis. Download real-world datasets for NASDAQ Index (United States) and NSE Index (India) to gain practical insights and hands-on experience.\n\n\nAs you progress through the course, transform into a Python and Django automation wizard. Armed with a versatile toolkit, you'll be ready to conquer any task that once seemed boring. Don't miss this golden opportunity to revolutionize your workflow – enroll now and set sail on your path to Django mastery!\n\n\nPrerequisite: A basic familiarity with Python and Django is recommended for an enriched learning experience. Are you ready to automate the boring stuff and elevate your skills? Enroll today, and let the transformation begin!",
      "target_audience": [
        "Beginner programmers who want to learn how to build web applications using Python and Django",
        "Developers with experience in other programming languages who want to transition to Python and Django",
        "Students who are interested in pursuing a career in web development or software engineering",
        "Anyone who wants to improve their knowledge of Django and build upon their existing Python skills",
        "Individuals who have some experience with Django but want to level up their skills by building advanced custom project"
      ]
    },
    {
      "title": "GraphQL with NodeJs: From Beginner to Advanced Concepts",
      "url": "https://www.udemy.com/course/graphql-with-nodejs-from-beginner-to-advanced-concepts/",
      "bio": "GraphQL API development with Node.Js and MongoDB; Learn Authentication, Caching, DataLoaders, Pagination, Subscription",
      "objectives": [
        "Build highly scaleable APIS with GraphQL, NodeJs and MongoDB",
        "Secure GraphQL API using JWT Authentication",
        "Learn Advanced Concepts- Interfaces, Unions, DataLoaders, Caching, Pagination, Sorting, Filtering",
        "Learn Cursor based Pagination in GraphQL",
        "Testing with GraphQL, NodeJs and Jest",
        "Unit Testing and Integration testing in GraphQL"
      ],
      "course_content": {
        "Getting Started": [
          "Create Express Server in NodeJs",
          "Create GraphQL Server using express-graphql",
          "Understand GraphQL Resolver Arguments",
          "Connect GraphQL App with MongoDB using Mongoose"
        ],
        "CURD(Create, Read,Update,Delete) Operations with Nodejs, GraphQL, and MongoDB": [
          "Create Record in MongoDB Using GraphQL Mutation",
          "Get Records From MongoDB Using GraphQL Query",
          "Update Records From MongoDB Using GraphQL Mutation",
          "Delete Record From MongoDB Using GraphQL Mutation"
        ],
        "Authentication and Authorization in GraphQL, Nodejs and MongoDB": [
          "Create GraphQL Server with GraphQL Yoga",
          "Split up your schema definition, resolvers, and Query type into multiple files",
          "Create a Mongoose User model for Authentication in GraphQL",
          "What is JSON Web Token Authentication",
          "Register and Encrypt User Data and Return JWT Payload with GraphQL Resolvers in",
          "Operations and Variables in GraphQL",
          "Validate Input in GraphQL with Joi",
          "Authenticate a User using a JSON Web Token in GraphQL",
          "Merge GraphQL Resolvers into a Single Object using lodash.merge",
          "Create a Middleware for Authentication in GraphQL",
          "Apply Authentication Middleware on GraphQL Resolvers",
          "Create Nested Resolvers to remove duplicate code from individual Resolver"
        ],
        "Pagination, Filtering, And Sorting in GraphQL": [
          "Paginate List of Data in GraphQL",
          "Filter Nodes with Matching Rule GraphQL Queries",
          "Sort GraphQL Query Results by Field",
          "What is cursor based Pagination",
          "Cursor Based Pagination"
        ],
        "Fragments, Interfaces, and Unions in GraphQL": [
          "Send Multiple Queries in a Single Request using Aliases in GraphQL",
          "Enhancing Fields Reusability with Fragments in GraphQL",
          "Create Enum to represents a collection of related values",
          "Create an Interface to represent the reusable fields in GraphQL",
          "Interface Demo with __ResolveType",
          "Create Union to return more than object type from GraphQL field"
        ],
        "Subscriptions and DataLoaders in GraphQL": [
          "Introduction to Subscriptions",
          "Adding real-time functionality with GraphQL Subscriptions",
          "Why Data Loaders in GraphQL",
          "Create DataLoader in GraphQL",
          "Batching in GraphQL",
          "Caching in GraphQL"
        ],
        "Testing with Jest in GraphQL and NodeJs": [
          "Integrate Jest Testing Framework with GraphQL, and NodeJs",
          "Write Unit test for Resolvers in GraphQL",
          "Write Integration Test for Queries And Mutations in GraphQL"
        ],
        "Learning Path to become a full-stack developer": [
          "Learning Path to become a full-stack developer"
        ]
      },
      "requirements": [
        "Knowledge of Javascript is required",
        "Knowledge of NodeJs is required"
      ],
      "description": "GraphQL is a new API standard that provides a more efficient, robust and flexible alternative to REST. It was developed and open-sourced by Facebook and is now maintained by a large community of companies and individuals from all over the world.\nAPIs have become ubiquitous components of software infrastructures. In short, an API defines how aclient can load data from a server.\nAt its core, GraphQL enables declarative data fetching where a client can specify exactly what data it needs from an API. Instead of multiple endpoints that return fixed data structures, a GraphQL server only exposes a single endpoint and responds with precisely the data a client asked for.\nHow GraphQL is better than REST\n1. Increased mobile usage creates need for efficient data loading Increased mobile usage, low-powered devices and sloppy networks were the initial reasons why Facebook developed GraphQL. GraphQL minimizes the amount of data that needs to be transferred over the network and thus majorly improves applications operating under these conditions.\n2. Variety of different frontend frameworks and platforms The heterogeneous landscape of frontend frameworks and platforms that run client applications makes it difficult to build and maintain one API that would fit the requirements of all. With GraphQL, each client can access precisely the data it needs.\n3. Fast development & expectation for rapid feature development Continuous deployment has become a standard for many companies, rapid iterations and frequent product updates are indispensable. With REST APIs, the way data is exposed by the server often needs to be modified to account for specific requirements and design changes on the client-side. This hinders fast development practices and product iterations.\nWhat you will learn?\nThis course will cover these following topics\nGetting Started with GraphQL and NodeJs\nCURD Operations with GraphQL, NodeJs, and MongoDB\nAuthentication and Authorization in GraphQL, NodeJs and MongoDB\nPagination, Filtering, And Sorting in GraphQL\nFragments, Interfaces, and Unions in GraphQL\nSubscriptions and Data Loaders in GraphQL\nCaching and Batching in GraphQL\nTesting with Jest in GraphQL and NodeJs",
      "target_audience": [
        "NodeJs developers who want learn about GraphQL",
        "Developers who have basic knowledge of GraphQL but want to learn more advanced concepts in GraphQL",
        "Developers who want to learn how to build GraphQL APIs",
        "Developers who want to learn how to implement Authentication, Subscriptions, Testing, and Caching in GraphQL"
      ]
    },
    {
      "title": "The Complete 2023 JavaScript MasterClass™: Beginner Friendly",
      "url": "https://www.udemy.com/course/the-complete-2022-javascript-masterclass/",
      "bio": "Learn JavaScript from Zero to Hero and become an experienced JavaScript Developer",
      "objectives": [
        "JavaScript Fundamentals",
        "Variables & Data Types",
        "Conditional Statements (If Else, Switch)",
        "General Loops (For, Foreach, While)",
        "Functions & Function Expressions",
        "DOM Manipulation & Events",
        "Object Oriented Programming",
        "JavaScript Classes & Objects",
        "Asynchronous JavaScript using AJAX",
        "Error Handling",
        "Regular Expressions",
        "JavaScript Patterns"
      ],
      "course_content": {
        "Introduction & Environment Setup": [
          "Welcome to the Course",
          "Course Structure and Q&A",
          "Dev Environment Setup"
        ],
        "JavaScript Fundamentals": [
          "Section Intro & Sandbox Setup",
          "Dev Tools & The Console",
          "Variables & Declaration",
          "Data Types In JavaScript",
          "Type Conversion",
          "String Combination & Mutating Methods",
          "Numbers & The Math Object",
          "Template Strings",
          "Arrays & Mutating Methods",
          "Plain Objects",
          "Dates & Times",
          "Conditional Statements & Comparison Operators",
          "Switch Statements",
          "Functions & Declarations",
          "General Loops",
          "The Window Object",
          "Block Scope with let & const vs var"
        ],
        "DOM Manipulation": [
          "Section Intro & The DOM",
          "Exploring the Document Object",
          "DOM Selectors for Single Elements",
          "DOM Selectors for Multiple Elements",
          "Traversing the DOM",
          "Creating New Elements",
          "Replacing & Removing Elements",
          "Events & Event Listeners",
          "Mouse Events",
          "Keyboard & Input Events",
          "Event Bubbling & Delegation",
          "Local & Session Storage"
        ],
        "Grocery List Project (DOM Manipulation & Events)": [
          "Grocery List Project - Creating New Items (Part 1)",
          "Grocery List Project - Editing, Removing, Filtering Items (Part 2)",
          "Grocery List Project - Saving Items to Local Storage (Part 3)"
        ],
        "Object Oriented Programming - JavaScript ES5 & ES6": [
          "Section Intro",
          "What is OOP in JavaScript",
          "Constructors & \"this\" Keyword",
          "Built-in Constructors (String, Number etc.)",
          "Prototypes",
          "Inheritance using Prototypes",
          "Creating Objects from Prototypes",
          "Classes using ES6 JavaScript",
          "Inheritance using ES6 JavaScript"
        ],
        "Book Library Manager Project (Object Oriented Programming)": [
          "Book Library Project - Adding Books & Input Validation (Part 1)",
          "Book Library Project - Removing Books & Local Storage (Part 2)",
          "Book Library Project - Converting Project to ES6 JavaScript (Part 3)"
        ],
        "Asynchronous JavaScript - XHR, Promises & Async/Await": [
          "Section Intro",
          "What is Asynchronous Programming",
          "AJAX and XHR Introduction",
          "XHR Methods & Retrieving Data From Text File",
          "AJAX with JSON",
          "Employee Library (Minor Project) through Public API",
          "REST APIs & HTTP Request Methods",
          "Callback Functions",
          "Promises (ES6)",
          "The Fetch API (ES6)",
          "Lambda Functions",
          "Async and Await (ES6+)"
        ],
        "Weather App Project (Asynchronous JavaScript)": [
          "Weather App Project - Getting Weather Info From API (Part 1)",
          "Weather App Project - Displaying Info in UI & Local Storage (Part 2)"
        ],
        "Error Handling & Regular Expressions": [
          "Section Intro",
          "Error Handling with Try & Catch",
          "Regular Expressions - Evaluation Functions",
          "Regular Expressions - Metacharacter Symbols",
          "Regular Expressions - Character Sets & Quantifiers",
          "Regular Expressions - Shorthand Character Classes",
          "Regular Expressions - Form Validation Project"
        ],
        "Newer ES6 Features": [
          "Section Intro",
          "Iterators & Generators",
          "Destructuring Arrays & Objects",
          "Maps (ES6)",
          "Sets (ES6)"
        ]
      },
      "requirements": [
        "Basic understanding of programming.",
        "No prior web development or JavaScript experience required. You will learn everything you need to know in the course."
      ],
      "description": "If you’re looking to learn pure JavaScript and become a Frontend Developer / JavaScript Developer, this course is for you.\nYou’ll learn complete JavaScript from scratch, including data types, variables, functions, classes and basic principles that will help you navigate other programming languages in the future. You’ll learn how to interact with the DOM, modify the HTML elements using JavaScript and even set up events, so that when you click, for example, a button, a custom function that you’ll write gets executed. Also, you’ll learn how to create and structure your projects using modern design patterns that are an industry standard. But most importantly, you’ll have a better understanding of how vanilla JavaScript works, so that when you decide in the future to pursue frameworks like React and Angular, you’ll know exactly how and where to fix your bugs and mistakes.\n\n\nCourse Walkthrough:\nWe’ll start off with the basics of JavaScript, like what data types there are, how to declare and use variables, and write functions without repeating code for efficiency.\n\n\nThen, we’ll move on to DOM Manipulation, how to directly change HTML attributes of elements through JavaScript, and we’ll use events to pass data into our code from the UI.\n\n\nAfter that, we’ll continue to Object Oriented Programming, we’ll cover what are classes and how to create objects from them which we’ll use to store the data we receive from the UI.\n\n\nNext, we’ll move on to Asynchronous JavaScript, how to make HTTP calls to a server and retrieve data without interrupting the UI.\n\n\nWe’ll then move on to Error Handling, using that for handling any errors we might encounter while performing actions like retrieving data from HTTP calls, also Regular Expressions for form validation such as a valid email address or password, full name, etc. and we’ll conclude this section with Local Storage, how to store data that we need to persist in the browser’s storage.\n\n\nIn the next section, we’ll cover Anonymous and Lambda Functions, how to use them as callback functions and how they work.\n\n\nLastly, we’ll finish off with popular JavaScript patterns, how to identify and learn them to code more efficiently in JavaScript in the future.\n\n\nThe course is for anyone with the desire for learning new useful skills, for beginners interested in learning web development, or for people who are already familiar with Html and Css and are looking to expand their skills to JavaScript. There are also people who are already skilled at JavaScript, and perhaps they’d like to refresh their knowledge and maybe learn stuff they might’ve not known before. The awesome thing is, you don’t have to have any prior knowledge of HTML or CSS or even programming for that matter, because we’ll discuss all of that in the course.",
      "target_audience": [
        "Anyone with the desire to learn JavaScript as a front end language.",
        "Total beginners who are curious in web development and client side scripting.",
        "Web development beginners who want to learn JavaScript and master it.",
        "Experienced JavaScript Developers who want to refresh their knowledge by revising everything through this course."
      ]
    },
    {
      "title": "How to build Instagram using Ruby on Rails",
      "url": "https://www.udemy.com/course/how-to-build-instagram-using-ruby-on-rails/",
      "bio": "Learn Ruby On Rails and build real world application. Fast!!",
      "objectives": [
        "Build real world Rails application",
        "Understand the Bootstrap CSS Framework",
        "Build your own Instagram",
        "Implement JavaScript, JQuery features such as AJAX",
        "Understand C.R.U.D and how Rails works",
        "Will be able to pursue your dream on building something"
      ],
      "course_content": {
        "Introduction": [
          "Here's what we're going to build",
          "NOTE, update news, source code and how to install dev environment"
        ],
        "Basic Project": [
          "What we're gonna build",
          "Create basic authentication",
          "Quick note",
          "Building navbar with partial view",
          "Quick note",
          "Add Username to database",
          "Quick note",
          "Update authentication view, Sign in, Sign up page",
          "Quick note"
        ],
        "Gravatar, Twitter Authentication, User Profile": [
          "What we're gonna build",
          "Notifications",
          "Quick note",
          "Create Twitter app",
          "Create social authentication",
          "Create user profile page, Gravatar",
          "Create edit profile page"
        ],
        "Post Feature": [
          "What we're gonna build",
          "Create Post model, upload image",
          "Post controller",
          "Post view, post, create form view",
          "Post detail",
          "Post delete"
        ],
        "Like, Comment and Bookmark Feature": [
          "What we're gonna build",
          "Like model",
          "Like controller",
          "Like View",
          "Comment Model",
          "Comment controller",
          "Comment view",
          "Bookmark model",
          "Bookmark controller",
          "Bookmark view",
          "Update user profile"
        ],
        "Search": [
          "What we're gonna build",
          "Search model, search controller",
          "Search view"
        ],
        "Miscellaneous": [
          "Add Links, Add Paginations",
          "Fix like text, authentication on user page, error post join bookmark query",
          "Fix foreign key for post"
        ]
      },
      "requirements": [
        "No coding experience is required! We will start from very basics and take you to the advanced level!",
        "You just need a computer, web browser and code editor",
        "A basic knowledge of HTML, CSS and Bootstrap will be a plus, but it is not mandatory!"
      ],
      "description": "I decided to make this course free as a giveaway to the community during the COVID pandemic, also Rails 5 is a little bit outdated.\nHowever Udemy doesn't allow me to make it free because it's too long, so I released it on Youtube: https://www[.]youtube[.]com/playlist?list=PLFy_vLDZT9pCAQkvfpJtTbIf_ICvKISTQ\nHappy hacking :D\n-------------\n\nDon't simple follow a tutorial, build a REAL THING, a REAL WORLD APPLICATION.\n\nIn this course, you will learn how to build from scratch a real and beautiful Instagram Ruby on Rails application. You will be amazed by how quickly and easy it is to create a very professional website, even if you have no programming or web design experience at all. By following this comprehensive application, you can apply to many use cases and help you much more later.\nDon't stop at the basics!\nDo you know some course which show you a \"Hello World\" example and call it an end? That's not what going to happen in this course. I will guide you from a very basic application as a start, then you can quickly feel natural when coding.\nBy the way, the best thing is: You'll learn all by putting into practice immediately!\nNo powerpoint slides, no chit chat - let's make it fast.\nFollow me and let's create an awesome Instagram application step by step together. By the time you've done, you will have a solid understand about Rails, how it's work behind the hood and how to build your dream application.\nThis course contains 33 videos. So with only few hours of content, this course will CHANGE your Ruby on Rails skill. You don't need any special knowledge or software to take this course, though a basic knowledge of HTML and CSS will be a plus, but it is not mandatory!\nTake this course at your own pace, pause when you can't type along and feel free to ask me a question in the discussion section when you feeling confuse. I'm ready to spend 2 - 3 hours daily to solve your problems together.\n\nI wish you all the best of lucks on your development journey and I'll see you on the inside!",
      "target_audience": [
        "This course is meant for absolute beginners who want to learn Ruby on Rails for Web Development",
        "Anyone wants to learn how to build professional Ruby on Rails applications from scratch"
      ]
    },
    {
      "title": ".NET API development | .NET 8 and .NET 9 Ready",
      "url": "https://www.udemy.com/course/net-core-30-api-development/",
      "bio": "Everything you need to know to develop APIs using .NET including security",
      "objectives": [
        ".NET API development",
        ".NET API dependencies",
        "JWT tokens in .NET API",
        "Identities in .NET APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Controllers and actions": [
          "Basics and routes",
          "Other route types",
          "Section quiz"
        ],
        "Request contents": [
          "Form, body, query",
          "Headers and cookies",
          "Example - country name encoder/decoder",
          "Section quiz"
        ],
        "Response contents": [
          "Body",
          "Response status"
        ],
        "Files": [
          "Upload",
          "Download"
        ],
        "Dependency injection": [
          "Basics"
        ],
        "Authorization": [
          "Identities with JWT (part 1)",
          "Identities with JWT (part 2)",
          "Authorization attribute (Action filter)",
          "Public API authorization"
        ],
        "Other features": [
          "Minimal APIs"
        ],
        "Example: Registration, authentication, authorization (Custom)": [
          "Introduction to project",
          "Databases",
          "The code"
        ],
        "Knowledge check": [
          "Final test"
        ]
      },
      "requirements": [
        "C# knowledge",
        "visual studio"
      ],
      "description": ".NET APIs are developed using Visual Studio and they offer a template where everything is ready for you to build your procedures. Ease of use, good performance, what could be better? This course will introduce the basic and more advanced concepts of .NET API development.\n\n\nIn the course, we will first start with the basics of the project layout - controllers and actions, that is where all the incoming and outgoing data is handled. With that, we will look into how you can access various parts of the request and response - form data, JSON body, parameters and more. You will also get a little country name encoder/decoder example, to see how all of that can be used in the real world. Once you know how to deal with basic data, we will look at handling files - downloading and uploading them to and from the API. Another important thing, covered in the course, will be security - that is basically how to verify access to certain routes in the API. Finally, you will get a giant example - custom registration/authentication system. The code for the example will be provided and you will not only learn a few thing from it, but you will also be able to use the code in your future projects.\n--source code included",
      "target_audience": [
        "C# developers"
      ]
    },
    {
      "title": "ASP NET Core,MVC,C#,Angular, ChatGPT & EF Crash Course",
      "url": "https://www.udemy.com/course/restful-services-with-aspnet-web-api/",
      "bio": "Learn How To Build Cross Platform Web Apps in ASP.NET Core Utilizing MVC, C#, Web Api, Angular & Entity Framework Core",
      "objectives": [
        "Create ASP NET Core Web Apps on Windows, Linux, and Mac OS",
        "Learn about the new modular HTTP request pipeline in ASPNET Core",
        "Examine and Implement all of the new features of MVC",
        "Comprehend Object Oriented Programming Concepts with C#",
        "Develop and consume an API Service in ASPNET Core WEB API",
        "Build Entity Framework Code First Data Access Techniques",
        "Implement Angular within our ASP NET Core Application",
        "Consume web api services with Angular data binding techniques",
        "Learn How to Target Multiple Platforms with the .NET Core CLI"
      ],
      "course_content": {
        "New Course Update: Full ChatGPT Chatbot Code User Doc, Video and Source Code": [
          "User Documentation Video and PDF",
          "User Manual How to Video",
          "Source Code",
          "User Documentation"
        ],
        "Course Introduction": [
          "What is ASP.NET Core?",
          "Download Introduction Slide Deck Here"
        ],
        "Software Installation - Visual Studio 2019, VS Code, Node.JS, & ASP.NET Core": [
          "Section Overview",
          "Visual Studio 2019, VS Code, VS for Mac & ASP.NET Core Installation",
          "Linux - Asp.Net Core Installation on Ubuntu",
          "LInux - Install VS Code, Node.Js, Yeoman & Asp.Net Core Generator",
          "Mac OSX - Asp.Net Core Installation",
          "Mac OSX - Install Node.Js, Yeoman, VS Code & the Asp.Net Core Generator",
          "Section Summary",
          "Download Introduction Slide Deck Here",
          "Linux - Create Your First Console & Web Application"
        ],
        "Create & Examine Our First ASP.NET Core 1.0 Web & Console App": [
          "Section Overview",
          "Windows - Create Your First Console Application Project - .Net CLI",
          "Windows - Create Your First Web Application Project - VS 2015",
          "Mac OSX - Create Your First Console & Web Application",
          "ASP.NET Full Framework App vs an ASP.NET Core App Comparision",
          "DEMO - ASP.NET Full Framework App vs an ASP.NET Core App Comparision",
          "File Stucture - Project.Json, Appsettings.Json & Global.Json",
          "File Structure - Startup.CS",
          "Client Side Package Managers - Bower & Gulp",
          "Client Side Package Management - Bundleconfig.json",
          "File Structure - wwwroot & MVC 6",
          "Cheat Sheet - New .NET CLI Commands & Software Installation Guide",
          "Section Summary",
          "Download Introduction Slide Deck & First Project Download"
        ],
        "Create Course Project & C# Refresher + C# 6.0 New Features": [
          "Section Overview",
          "Create Course Web Project & Configure Project.Json",
          "Configure Startup.cs File Dependenies",
          "Create Appsettings.json Configuration File",
          "MVC Folder Structure Setup",
          "Configure LaunchSettings.json Profile",
          "Install & Configure Bower & Gulp",
          "Add Application Insights Telemetry Microsoft Azure",
          "C# & C# 6.0 Object-oriented programming Introduction",
          "C# Class Creation, Object Intialization & Constructors",
          "C# Variables & Data Types",
          "C# - Properties & Fields",
          "C# Access Modifiers",
          "C# Methods",
          "C# Access Modifiers - Demo",
          "C# Arrays",
          "C# Interfaces",
          "C# Conditional Branching & Looping",
          "C# .Net History & C# 6.0 Learning Objectives",
          "C# 6.0 Static Classes & Methods",
          "C# 6.0 String Interpolation",
          "C# 6.0 Initialization of Auto-Properties",
          "C# 6.0 Null Conditional Operator",
          "C# 6.0 Try-Catch-Finally Block Await Async",
          "C# 6.0 Expression bodied Methods & Properties",
          "Section Summary",
          "Download Introduction Slide Deck & Project Source Code"
        ],
        "MVC & MVC 6 Features & RC2 to 1.0 Migration": [
          "Section Overview",
          "MVC - Conceptual Overview",
          "MVC - Setup Project Structure",
          "MVC Controllers - Conventional Routing",
          "MVC Controllers - Attribute Routing",
          "MVC Controllers - Action Results & Return Types",
          "MVC Controllers - View Rendering Model Data",
          "MVC Controllers - View Rendering List Model Data",
          "MVC Models - Conceptual Overview",
          "MVC Models - VIewModels",
          "MVC Models - Data Annotation",
          "MVC - Dependency Injection",
          "MVC Views - Conceptual Overview",
          "MVC Views - Layout File",
          "MVC Views - _ViewStart File",
          "MVC Views - _ViewImports File",
          "MVC Views - TagHelpers",
          "RC2 to .Net Core 1.0 Update Installation",
          "RC2 vs .Net Core 1.0 Differences",
          "MVC Views - PartialViews",
          "MVC Views - ViewComponents",
          "Build Our App - Login Page Layout",
          "Build Our App - Logged In Page Layout",
          "Build Our App - Login Form Creation",
          "Build Our App - Form Post",
          "Section Summary",
          "Source Code Download"
        ],
        "Learn Entity Framework Core & Build Restful Api Services on Windows & Mac OSX": [
          "Section Overview",
          "EF Core - Conceptual Overview",
          "EF Core - Sql Server & Command Tooling package installation (Project.Json)",
          "EF Core - Dependency Injection Inject DBContext into Configure Services",
          "EF Core - Create Entities for our Data Model",
          "EF Core - Create DbContext",
          "EF Core - First Migration in VS 2015",
          "EF Core - .NET CLI EF Core Commands",
          "EF Core - Exclude & Include Types, Data Annotations, Fluent Api",
          "EF Core - Primary & Composite Keys",
          "EF Core - Required & Maxlength Attributes",
          "EF Core - Generated Property Values",
          "EF Core - Concurrency Tokens",
          "EF Core - Indexes",
          "EF Core - Table Mappings",
          "EF Core - Column Mappings & Data Types",
          "EF Core - Computed Columns",
          "Build Our App - Login & Register Model Entity Powerpoint",
          "Build Our App - Create our Login & Register Entity Model & ViewModel",
          "Build Our App - Register our DbContext",
          "Build Our App - ResetPassword & ForgotPassword ViewModel",
          "Build Our App - Create the Register, Forgot & Reset Password Views",
          "Build Our App - Asp.Net Core Identity Core Introduction",
          "Build Our App - Asp.Net Core Identity Core Installation",
          "Build Our App - Create Our Identity Login & Register Controller",
          "Build Our App - Create Our User & LogOff Method in Identity",
          "Build Our App - Create Our ResetPassword & Forgot Password Method Logic",
          "Create Microsoft Azure Account & SendGrid Email Cloud Service Account",
          "Build Our App - Configure User Secrets for Send Grid Api Key & Email Send Class",
          "Build Our App - Send Test Email using Send Grid Cloud Email Service",
          "Build Our App - Register User,Reset Password,Forgot Password & Confirm Password",
          "SMS Account Creation - Twilio",
          "Build Our App - Create Sms Interface & Properties related to our Sid & Token",
          "Build Our App - Send SMS Test Message using Twilio",
          "Create Account - External Login Provider with OAuth2 Facebook",
          "Build Our App - Configure Facebook User Secrets & Facebook Autho2 Credentials",
          "Build Our App - Build Our External Login Provider To Facebook",
          "Powerpoint - Entity Model Diagram for the Profile Context",
          "Build Our App - EF Core Context Add Individual, Organization & Hobby Entities",
          "Build Our App - Data Annotations & OnModelCreating Enhancements in our Context",
          "Build Our App - Initialize Data into our Profile Context",
          "Build Our App - Add a Foreign Key Constraint on our Entities",
          "Build Our App - DashboardViewModel with our Entities",
          "Build Our App - Build our IProfileRepository Class",
          "Build Our App - Dashboard Index View",
          "Build Our App - Build a JSON API Service",
          "Build Our App Api - CRUD Operations - Create",
          "Build Our App Api - CRUD Operations - Edit",
          "Build Our App Api - CRUD Operations - Delete",
          "Build Our App Api - CRUD Operations - Detail",
          "Section Summary"
        ],
        "Typescript Introduction & Installation": [
          "Learning Objectives",
          "Typescript - Introduction",
          "Typescript - Installation",
          "Typescript - Create your First Typescript File",
          "Typescript - Tsconfig.json",
          "Typescript - var vs let variable declarations",
          "Typescript - Interfaces",
          "Typescript - Classes",
          "Typescript - Functions",
          "Typescript - Enums",
          "Typescript - Generics",
          "Typescript - Modules",
          "Typescript - Namespaces",
          "Typescript - Iterators",
          "Typescript - Modifiers",
          "Typescript - Compile",
          "Section Summary"
        ],
        "Angular 2 Installation & Introduction": [
          "Angular 2 - Section Overview",
          "Angular 2 - Definition & Architecture",
          "Angular 2 - Angular-Cli Installation",
          "Angular 2 - Angular-.NetCore-Spa Generator",
          "Angular 2 - Angular Module Definition",
          "Angular 2 - File Structure & App.Modules.ts",
          "Angular 2 - Angular Components Definition",
          "Angular 2 - Angular Components & Class Implementation",
          "Angular 2 - Angular Templates Definition",
          "Angular 2 - Angular Templates Implementation",
          "Angular 2 - Angular Data-Binding Definition",
          "Angular 2 - Angular Data-Binding Demo",
          "Angular 2 - Angular Input Definition",
          "Angular 2 - User Input Onkey Demo",
          "Angular 2 - Forms Definition",
          "Angular 2 - Forms Part 1 Demo Class creation",
          "Angular 2 - Forms Part 2 Demo Forms Module",
          "Angular 2 - Forms Part 3 Demo Forms Template & Data Binding",
          "Angular 2 - Forms Part 4 Validation",
          "Angular 2 - Dependency Injection Definition",
          "Angular 2 - Dependency Injection Demo",
          "Angular 2 - Http Definition",
          "Angular 2 - Http Demo Create Json File",
          "Angular 2 - Http Demo Create Service",
          "Angular 2 - Promise VS Observable",
          "Angular 2 - Http Observable map to Json Filse",
          "Angular 2 - Conclusion"
        ],
        ".Net Core Upgrade - Migrate from the Project.json to the .Csprog File": [
          ".Net Core Upgrade - Section Overview",
          ".Net Core Upgrade - Upgrade our Project in VS 2017",
          ".Net Core Upgrade - Why Microsoft left the project.json file?",
          ".Net Core Upgrade - Upgrade our Project via the .Net CLI",
          ".Net Core Upgrade - Project.json vs .Csproj",
          ".Net Core Upgrade - Conclusion"
        ]
      },
      "requirements": [
        "A computer with Windows, Linux, or Mac OS Operating System Installed",
        "Visual Studio Code (Free. Used for Mac OS or Linux OS. I will demonstrate the installation process)",
        "Visual Studio 2022 (Free. Used for Windows OS. I will demonstrate the installation process)",
        "Desire to learn",
        "Commitment to the course"
      ],
      "description": "Update: 8/17/2023 - Work-in-progress alert! Our upcoming course will empower you to craft a cutting-edge ChatGPT Bot solution using .NET and Angular. Working on all the videos but the source code, documentation, and video how-to are uploaded.  We'll leverage the power of Entity Framework to seamlessly store data in a SQL Server Database. Stay tuned!\n\n\nUnleash the Potential of ASP.NET Core\nASP.NET Core is a game-changer for crafting web applications using ASP.NET and C#. Join our comprehensive course and unlock the art of building ASP.NET Core Web Applications from scratch. In this hands-on experience, you'll delve into MVC, Entity Framework Core, Web API, Angular, and various C# features.\nOnce your ASP.NET Core Web App is ready, we'll guide you through the seamless deployment process on Microsoft Azure.\nWhy choose ASP.NET Core?\nASP.NET Core is a versatile, open-source, cross-platform framework, perfectly suited for creating modern, cloud-based web applications with .NET.\nRevolutionizing Web App Development\nWhile traditional ASP.NET is reliable, it's based on an older platform that has accumulated redundant code over time. This legacy code, dating back over 15 years to ASP.NET 1.0, may still load unnecessarily in your web projects, potentially impacting performance.\nEnter ASP.NET Core—a leaner, more efficient framework that eliminates unnecessary loading, boosting your web app's performance.\nDesigned for the Modern Era\nASP.NET Core is tailor-made for modern web applications. It's cloud-ready, with built-in environment-based configuration and seamless support for dependency injection.\nMoreover, it enables cross-platform development on Windows, Mac, and Linux. By embracing open source, ASP.NET Core actively encourages community contributions and developer engagement.\nEmbark on your journey to mastery of ASP.NET Core today. Unleash the power of streamlined, modern web application development. This is more than just a course—it's your ticket to success!",
      "target_audience": [
        "Anyone who is interested in learning ASP NET Core, C#, Angular, Entity Framework, Web API, and MVC",
        "Basic knowledge of ASPNET and C# is preferred but not required",
        "Some familiarity with Angular but not required"
      ]
    },
    {
      "title": "SharePoint 2019 Development from Zero to Hero",
      "url": "https://www.udemy.com/course/sharepoint-2019-development-from-zero-to-hero/",
      "bio": "Sever, Client and Java Side Object Model, Event Receiver, Security, WebParts,",
      "objectives": [
        "SharePoint Installation",
        "Server Side Object Model",
        "Client Side Object Model",
        "JavaScript Side Object Model",
        "CAML Query & LINQ Query",
        "Event Receiver",
        "SharePoint List Template & List Instance",
        "SharePoint Module",
        "Client Side Rendering",
        "Visual Web-part, Site page, Application page,",
        "Delegate Control",
        "SharePoint Custom Action",
        "SharePoint Profile",
        "Site Definition",
        "SharePoint Business Connectivity Services",
        "SharePoint External Type"
      ],
      "course_content": {},
      "requirements": [
        "Participants should have a fundamental understanding of SharePoint development concepts",
        "C# Programming Language",
        "Object-Oriented Programming concepts",
        "Web development concepts,"
      ],
      "description": "Join Now Because it's time to get started The SharePoint Complete Development Course with loads of Examples and projects.\nit's covers everything and will be contentiously updated. with more lectures every period.\nLet's Build an SharePoint Portal from A-Z Step by Step, not just Theoretical and ABC examples.\nThis course is recommended as it covers not only SharePoint topics But additional material and concepts of Object orientated Programming and Data structure and Design Pattern\n\n\n1. Introduction to SharePoint 2019\nOverview of SharePoint and its role in modern organizations.\nKey features and differences between SharePoint Online and SharePoint On-Premises.\nUnderstanding SharePoint architecture.\n2. Setting Up the Development Environment\nInstalling and configuring SharePoint 2019.\nSetting up prerequisites for SharePoint development (Visual Studio, SharePoint Framework).\nConnecting to SharePoint using developer tools.\n3. SharePoint Basics\nUnderstanding sites, subsites, lists, libraries, and workflows.\nManaging permissions and user roles.\nNavigating the SharePoint Central Administration.\n4. SharePoint Client-Side Development\nUsing SharePoint Framework (SPFx) for client-side web parts.\nWorking with React, TypeScript, and modern JavaScript frameworks in SPFx.\nCreating and deploying custom web parts.\n5. Server-Side Development\nBuilding solutions using SharePoint Server Object Model.\nCreating custom event receivers and workflows.\nDeveloping and deploying SharePoint Add-ins and Apps.\n6. SharePoint REST API and CSOM\nWorking with SharePoint REST API for CRUD operations.\nUsing Client-Side Object Model (CSOM) in SharePoint development.\nIntegrating external data with SharePoint using APIs.\n7. Customizing SharePoint\nDeveloping custom master pages and page layouts.\nCustomizing themes, templates, and branding.\nUsing PowerShell for automation and custom scripts.\n8. Workflow Development\nDesigning workflows with SharePoint Designer.\nCreating custom workflows using Microsoft Flow (Power Automate).\nUsing Visual Studio for advanced workflow solutions.\n9. Advanced Topics\nBuilding custom solutions with Event Receivers and Timer Jobs.\nUnderstanding Business Connectivity Services (BCS).\nDeveloping InfoPath forms and integrating them into workflows.\n\n\nSharePoint is widely used by businesses and organizations to fulfill a variety of needs. Developing powerful solutions within SharePoint requires specific skills. The purpose of this course is to train individuals to become proficient SharePoint developers by teaching them comprehensive and practical techniques to create custom solutions that meet user requirements. The course provides hands-on training and simulations to prepare developers to implement their learnings in real-world scenarios. Upon completion of the course, developers will feel confident in their abilities to not only create solutions but also to manage them effectively\n\n\nAre There Lots of Examples?  There are loads of examples\nPay once, benefit a lifetime! with 30 Days money-back guarantee. Certification after course completion",
      "target_audience": [
        ".NET Developers",
        "SharePoint Administrator",
        "SharePoint Developers",
        "any Software Developer"
      ]
    },
    {
      "title": "Laravel - Build Realtime Messaging App From Scratch (2024)",
      "url": "https://www.udemy.com/course/laravel-realtime-messaging-app/",
      "bio": "Unlock the Potential of Laravel 10 & Pusher Create an Interactive Realtime Messaging Platform with Expert Guidance.",
      "objectives": [
        "User to User Live Chat",
        "Pusher Implementation",
        "Server Side Event Broadcasting",
        "Laravel Echo Implementation",
        "Working with Private Channels",
        "Working with Presence Channels",
        "Listening Events From Client Side",
        "Live Unseen Message Count",
        "Live Notification Sound",
        "Request Debouncing",
        "Live Search",
        "Live Image Sending",
        "Ajax Scroll to Paginate",
        "Message Delete Feature",
        "Add Contact to Favorites",
        "Dynamic Image Gallery",
        "Profile Update Feature",
        "Personal Inbox",
        "Laravel Brezze For Auth",
        "And More"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Environment Setup for Project": [
          "1_Environment Setup - Installing Necessary Apps and Extensions",
          "2_Environment Setup - Setting up Environment Path in Vs Code (Part -1)",
          "3_Environment Setup - Setting up Environment Path in Vs Code (Part -2)"
        ],
        "Mind Map": [
          "1_Mind Map - A Basic Discussion What We Will Be Doing"
        ],
        "Setting up Project": [
          "1_Setting up Project - Installing a Fresh Laravel Project with Breeze"
        ],
        "Mastering Messenger Template": [
          "1_Template Mastering - Over View of Frontend Template",
          "2_Template Mastering - Mastering Frontend Template (Part - 1)",
          "3_Template Mastering - Mastering Frontend Template (Part - 3)",
          "4_Template Mastering - Mastering Frontend Template (Part - 4)"
        ],
        "Table and Migrations": [
          "1_User Table - Updating User Table Columns",
          "2_User Table - Adding User Seeders",
          "3_Message Table - Creating Message Migration Table"
        ],
        "User Profile Update": [
          "1_Profile Update - Setting Dynamic Data in User Profile Modal",
          "2_Profile Update - Adding Image Preview Feature",
          "3_Profile Update - Working with Profile update (Part - 1)",
          "4_Profile Update - Working with Profile update (Part - 2)",
          "5_Profile Update - Working with Profile update (Part - 3)",
          "6_Profile Update - Working with Profile update (Part - 4)",
          "7_Profile Update - Working with Profile update (Part - 5)",
          "8_Profile Update - Working with Profile update (Part - 6)",
          "9_Profile Update - Generating Unique User ID"
        ],
        "Search List Feature": [
          "1_Search Feature - Creating Search Function",
          "2_Search Feature - Working with Search Logic (Part - 1)",
          "3_Search Feature - Working with Search Logic (Part - 2)",
          "4_Search Feature - Adding Request Debouncing for Optimize Request Call",
          "5_Search Feature - Creating Scroll to Action Function",
          "6_Search Feature - Dynamic Pagination on Scroll (Part - 1)",
          "7_Search Feature - Dynamic Pagination on Scroll (Part - 2)",
          "8_Search Feature - Adding Dynamic Loader on Search"
        ],
        "Fetch and Set User": [
          "1_Fetch and Set User - Adding Click Event on Search Profiles",
          "2_Fetch and Set User - Creating Data Fetching Function",
          "3_Fetch and Set User - Adding Dynamic Loaders at Request"
        ],
        "Message Sending Feature": [
          "1_Message Sending - Setting End User Id Globally",
          "2_Message Sending - Working with Message Sending (Part - 1)",
          "3_Message Sending - Working with Message Sending (Part - 2)",
          "4_Message Sending - Working with Message Sending (Part - 3)",
          "5_Message Sending - Working with Message Sending (Part - 4)",
          "6_Message Sending - Creating a Time Calculating Function",
          "7_Message Sending - Working with Attachment Sending (Part -1)",
          "8_Message Sending - Working with Attachment Sending (Part -2)",
          "9_Message Sending - Working with Attachment Sending (Part -3)",
          "10_Message Sending - Working with Attachment Sending (Part -4)"
        ]
      },
      "requirements": [
        "You have to know basic PHP",
        "Basic HTML, CSS, Bootstrap, jQuery",
        "Local Server : XAMPP/WAMP/MAMP/Laragon",
        "Text Editor/IDE: Notepad++ / Sublime Text / Visual Studio Code / PhpStrom"
      ],
      "description": "Laravel 10: Build Realtime Messaging App From Scratch (2024)\nAre you ready to take your Laravel skills to the next level? In this course, you will build a complete Realtime Messaging System project from scratch using Laravel 10 and Pusher. This project-based course is designed to help you become a professional Laravel developer and give you a competitive edge in the job market.\nWhy Learn Laravel 10?\nLaravel 10 is the latest version of the popular PHP framework and comes packed with new features and improvements, making it faster and more efficient than ever before. It's easy to learn and has a huge community, making it the perfect choice for building robust and scalable web applications.\nWhat Will You Learn?\nIn this course, you will learn how to build a feature-rich Realtime Messaging platform with advanced functionalities such as:\nUser to User Live Chat\nPusher Implementation\nServer Side Event Broadcasting\nLaravel Echo Implementation\nWorking with Private Cannels\nWorking with Presence Channels\nListening Events From Client Side\nRequest Debouncing\nLive Search\nLive Image Sending\nAjax Scroll to Paginate\nMessage Delete Feature\nAdd Contact to Favorites\nDynamic Image Gallery\nProfile Update Feature\nPersonal Inbox\nLaravel Breeze For Auth\nAnd More\nWhy Choose This Course?\nUnlike other courses that only cover the basics, this course is designed to help you build a complete, real-world project from scratch. You will not only learn how to write code, but also gain valuable insights into project management and best practices. Plus, you will have access to the complete source code of the project and lifetime access to the course materials.\nWhat's more, once you have completed this course, you will have a highly marketable skill set and the potential to earn a high income as a professional Laravel developer.\nEnroll now and take the first step towards building your dream Job Portal platform with Laravel 10!",
      "target_audience": [
        "Aspiring developers who want to become proficient in Laravel.",
        "Web developers who want to take their Laravel/PHP skills to the next level.",
        "Students who want to gain practical experience in building modern app with Laravel.",
        "University students who need to complete a project assignment using Laravel.",
        "Developers who want to learn about Realtime features implementations"
      ]
    },
    {
      "title": "From Zero to Python: Essential Course for Absolute Beginners",
      "url": "https://www.udemy.com/course/from-zero-to-python/",
      "bio": "Learn the Parts of Python You Really Need to Begin Your Coding Career",
      "objectives": [
        "You will learn how to properly install Python 3.6",
        "You will be introduced to variables and types",
        "You will learn the concepts of conditional, loops and control flows",
        "You will understand the basic concepts of Object Oriented Programming",
        "You will be introduced to the concepts of debugging and unit testing"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet access",
        "For Windows and Mac users administrative access to install packages"
      ],
      "description": "Are you looking to change your life and become a software developer but don’t know where to start? Are you discouraged by long, multi-hour Python courses that don’t really seem to teach you what you really need to know or watched dozens of Youtube tutorials only to be more confused than before?\nMy name is Jorge Escobar and I have worked in some of the top tech companies in the world, from Yahoo! to  MongoDB to PayPal, and now I’ve started my own educational project, FromZero, where I have helped thousands of students to kickstart their coding career.\nPython is a beautiful and complex language. But the truth is you don’t need to learn all of it to start building applications. And this is what this course is about.\nIn about two hours I will teach you the essential parts of Python that you need to know to start using web frameworks, data science or artificial intelligence.\nBut don’t be fooled, we’re not cutting corners in this course. It is packed full of really complex stuff, but taught in a way that you will understand, even without having coded anything before.\nBest of all, you don’t even need to have a computer. You will have the option to use a cloud-based Python development environment, so that you can practice at work or in a cyber cafe where you can pick up where you left off.\nThis course is so good, I even recommend it to people that have been already coding in Python for a while, as it will clear a lot of those quirky things that you always wondered about.\nSo, you have officially run out of excuses. You don’t need to know anything to take this course, no math, no computer knowledge.\nWe will start by learning about variables, strings, lists, loops and conditionals, then move on to functions, object oriented programming with classes and objects, modules and packages and round it all up with an introduction to unit testing.\nThe course has easy to follow and digestible video lessons as well as links to the code as we develop it. You can also purchase an eBook with all the material.\nThe course can take anywhere from 3 to 7 days to complete based on how much material the student completes daily.\nAdditionally we’re constantly updating the course, adding contents thanks to the feedback of our students.\nJoin this course and start your path to becoming a professional Python developer!",
      "target_audience": [
        "Anyone who wants to learn their first programming language",
        "Python programmers who want to brush up the basic concepts",
        "Startup founders who want to kickstart their coding knowledge"
      ]
    },
    {
      "title": "Building Minimal APIs with ASP.NET Core 9 and Dapper",
      "url": "https://www.udemy.com/course/building-minimal-apis-with-aspnet-core-and-dapper/",
      "bio": "ASP.NET Core, Web APIs, SQL Server, Stored Procedures, User System, Redis, REST, and more!",
      "objectives": [
        "Build Web APIs with .NET Core and Dapper",
        "Publish Web APIs in Azure",
        "Use Azure DevOps to configure continuous integration and continuous delivery (CI/CD)",
        "Develop a Web API using Minimal APIs"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of C# (know what a class is, invoking functions, if statements, loops)"
      ],
      "description": "Learn how to develop Minimal APIs with ASP.NET Core from scratch with this amazing course.\nWe are going to see the entire life cycle of developing a Web API, from creating the solution, developing the endpoints, working on resource manipulation, to putting it into production in Azure and IIS.\nIn this course we will do a project which you will be able to publish and show as part of your portfolio.\nWe will also learn how to use Azure DevOps to configure a Continuous Integration and Continuous Delivery pipeline, to be able to publish your projects from their source code in Github, Bitbucket, or any other GIT repository provider.\nSome of the topics we will see are:\nCreation of REST Web APIs\nCreate a database\nUse Dapper to read, insert, update, and delete records from a database\nCreate a user system so that our clients can register and log in to the Web API\nWe will use Json Web Tokens (JWT) for authentication\nClaims-based authorization, so that only some users can use certain endpoints\nUsing cache to have a faster application\nUsing Redis for distributed cache\nWeb APIs are fundamental in modern web development. Since they allow us to centralize and protect the logic of our solutions. In addition, it is in a Web API that we typically have access to a central database with which all your users can communicate. Whether you build a social network, a delivery application, or even an office app, a Web API allows you to work on the back-end of mobile applications (Android, iOS, MAUI, etc.), web (React, Angular, Blazor, Vue, etc.), desktop, among others.",
      "target_audience": [
        ".NET developers who wish to learn how to build Web APIs"
      ]
    },
    {
      "title": "The Complete Google Chrome Extensions Developer Course",
      "url": "https://www.udemy.com/course/extensions/",
      "bio": "Publish your own Chrome Extensions by finding a programmer and learning to use the Chrome Developer Dashboard",
      "objectives": [
        "Identify problems that can be solved with Chrome Extensions.",
        "How to find and hire a programmer or developer to create the Chrome Extension for them."
      ],
      "course_content": {
        "Introduction to Chrome Extensions": [
          "Introduction to the Chrome Extension Course",
          "What are Chrome Extensions?",
          "Searching for & Installing Chrome Extensions",
          "Course Resource Links",
          "Finding Problems and Solutions"
        ],
        "Finding a Programmer/Developer - Upwork": [
          "What is Upwork?",
          "Posting a Job",
          "Inviting Programmer to Your Job Posting",
          "Tips for Working with Programmers/Developers"
        ],
        "Uploading your Chrome Extensions": [
          "The Chrome Developer Dashboard",
          "JSON Editors and Icon Files",
          "The Chrome Extension Upload Process",
          "Updating a Chrome Extension"
        ],
        "Marketing your Chrome Extensions": [
          "Monetizing & Leveraging Your Extensions",
          "Payments: Free, One-Time, and Monthly",
          "Controlling Access - Google Groups",
          "Setting Up Affiliates"
        ],
        "BONUS CONTENT!": [
          "BONUS LECTURE: Learn Even More"
        ]
      },
      "requirements": [
        "Students will need to have a GMail or Google account in order to successfully upload Chrome Extensions."
      ],
      "description": "Google Chrome Extensions are amazingly useful and valuable tools. They are also remarkably easy to develop, monetize, and leverage. Using sites like Upwork to find qualified programmers and developers, you can have a Chrome Extension made for a reasonable price. Then, once you upload it to the Chrome Web Store, you can choose to give it away, use it to build an email list, charge a one-time fee, or even a monthly service fee.\nThe best way to come up with an idea for a Google Chrome extension that can make you money is to find a problem that you already have and develop a solution for it using your own Google Chrome extension. Then, offer it to other people who have the same (or similar) problems. Not only will you be helping yourself, but you will also be creating something that will help other people as well. As a bonus, you can be financially rewarded for this by charging a one-time fee or monthly fee in order to use your Google Chrome extension.\nThe process may seem daunting at first, especially if you have little to no programming experience. Thankfully, this course requires no programming experience! We will walk through, step by step, the process of taking an idea, turning it into a Chrome Extension, and then uploading the completed extension to the Chrome Webstore.",
      "target_audience": [
        "This course is designed for those looking to create their own Google Chrome Extensions by hiring a programmer/developer.",
        "This course is for people who wish to better understand the process of using Chrome Extensions.",
        "This course is for people looking to learn the process of finding and hiring a programmer or developer.",
        "This course does not teach programming, development, or computer coding."
      ]
    },
    {
      "title": "Creating websites with Accelerated Mobile Pages (AMP)",
      "url": "https://www.udemy.com/course/creating-websites-with-accelerated-mobile-pages-amp/",
      "bio": "Learn how to create a real life website with Google AMP, from beginning to end with no prior knowledge of AMP",
      "objectives": [
        "Create websites with Google AMP"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Accelerated Mobile Pages (AMP) ?",
          "Benefits of using AMP for sites",
          "Benefits of learning AMP for you",
          "How to overcome AMP's constraints"
        ],
        "Getting started with AMP": [
          "Setting up a dev server with MODx cloud for AMP",
          "Output \"Hello World\" with AMP",
          "How to validate AMP pages",
          "What are AMP components?",
          "Adding images with AMP part 1 - <amp-img> basics",
          "Adding images with AMP part 2 - responsive images"
        ],
        "Creating a website with AMP": [
          "Recreating Furbaby website in AMP",
          "Adding the favicon and logo",
          "Creating mobile off-canvas menu",
          "Embedding Google maps and iframes",
          "Build a testimonials carousel",
          "AMP compliant contact form",
          "Embedding a YouTube video with AMP",
          "Finishing and testing the AMP site"
        ],
        "AMP forms": [
          "AMP forms basics - components, attributes, template engine",
          "PHP code for form submission",
          "Displaying error and success messages",
          "Coding an AMP newsletter subscription form",
          "Processing subscription form submissions"
        ],
        "AMP development tricks, tips and miscellaneous info": [
          "Do not use Bootstrap with AMP",
          "CSS restrictions",
          "AMP bugs in Mozilla Firefox",
          "How to add a sticky header",
          "Open and close sections with AMP without amp-accordion"
        ],
        "Bonus section": [
          "Thank you and let's keep in touch"
        ]
      },
      "requirements": [
        "Students must know HTML, CSS and basic JavaScript"
      ],
      "description": "Warning: I am no longer providing help or support for this course.\n\n\nThe most visited websites in the world use AMP in one way or another. Clients and employers are adamant to get their sites first place in Google. Learning how to code with AMP will make you more employable, get your more clients and raise your customer's satisfaction levels.\n\n\nImagine being the only person in a web design studio who knows AMP! Imagine getting your client's website on the first page in Google by redesigning it using this course!",
      "target_audience": [
        "Web developers who want to expand their knowledge and be more employable"
      ]
    },
    {
      "title": "MERN Stack E-commerce Project: Part 2: Frontend Only",
      "url": "https://www.udemy.com/course/mern-stack-ecommerce-project-part-2-frontend-only/",
      "bio": "Step-by-Step Guide to Building Full-Featured E-commerce Project with MERN Stack - REDUX TOOLKIT, NODEJS, MONGODB",
      "objectives": [
        "Admin Dashboard",
        "Payment integration using Stripe",
        "Payment webHook handling",
        "Order statistics and analysis",
        "Admin process for managing orders",
        "Implementing categories and product management",
        "Order management system",
        "Implementing user authentication and authorization",
        "Update Shipping Status",
        "Deployment"
      ],
      "course_content": {
        "FINAL PROJECT DEMO": [
          "Customers Functionalities Demo",
          "Admin Functionalities Demo",
          "Final Project Live DEMO"
        ],
        "MUST READ [IMPORTANT !!!]": [
          "How To Take This Course",
          "Download Final Project Source Codes"
        ],
        "GETTING STARTED": [
          "Installing Starter Template",
          "Install TailwindCSS",
          "Project Structure Walkthrough",
          "Redux Toolkit Installations",
          "Final Project Source Code"
        ],
        "AUTHENTICATION & AUTHORIZATION": [
          "Users Initial State",
          "Login Action",
          "Users Slices",
          "Connect To Redux Store",
          "Dispatch Action To Login",
          "Cors Error Fixed",
          "Customise VSCODE OPTIONAL",
          "Redirect After Login",
          "Display Error And Loading After Login",
          "Displaying Error and Success Using SweetAlert",
          "Display Error Message When Login",
          "Save Token Into LocalStorage",
          "Walking Through The Navbar Component",
          "Public And Private Links",
          "Protecting Routes",
          "Admin Routes",
          "User Registration",
          "Loading Component",
          "User Registration Loading And Error Displaying",
          "Reset Error And Success Actions"
        ],
        "ADMIN DASHBOARD (PRODUCTS)": [
          "Overview Of Admin Dashboard",
          "Create Product Action",
          "Create Product Slice",
          "Persist Login User Into Redux Store",
          "Pass Token To Product Action",
          "Dispatch Action To Create Product",
          "Product Sizes Select Component",
          "Categories Action",
          "Display Categories Inside Select Input",
          "Fetch All Products Brands",
          "Getting Products Colors Into Form Input"
        ],
        "ADMIN DASHBOARD (PRODUCTS IMAGE UPLOAD)": [
          "Product Images Upload",
          "Sending Product Data To Product Action",
          "Product Creation Error Fixed",
          "Display Loading, Error For Product Creation",
          "Image Validation",
          "Fetch All Products Action",
          "Display All Products",
          "Adding New Products",
          "Display Product Details"
        ],
        "PRODUCTS CATEGORIES": [
          "Modified Create Category Action",
          "Modified Add Category Form",
          "Dispatch Action To Create Category",
          "Displaying Category Loading & Error",
          "Fixed Category Creation Error",
          "Fetching All Categories",
          "Using Categories As Navbar Links",
          "Displaying Home Categories",
          "Display All Categories"
        ],
        "PRODUCTS FILTERING": [
          "Product Filtering Component Walkthrough",
          "Products Filtering Part 1",
          "Products Filtering Part 2",
          "Display All Products Without Filtering",
          "Filer Products By Category",
          "Filter Products By Brand",
          "Filter Products By Price and Size",
          "Filter Products By Color",
          "Display Products Loading & Error",
          "Create Product Brands",
          "Create Product Colors"
        ],
        "CART MANAGEMENT": [
          "Order Placement Process And API Modification",
          "Add To Cart Action",
          "Add Product To Cart",
          "Adding Product To Cart With Colour and Size",
          "Cart Order Size and Colour Validation",
          "Get Cart Items From LocalStorage",
          "Avoid Duplication Of Products In Cart",
          "Displaying All Cart Items",
          "Shopping Cart Walkthrough",
          "Changing Order Qty Part 1",
          "Changing Order Qty Part 2",
          "Cart Product Price Fixed",
          "Updating Product When Quantities Changes",
          "Removing Product From Cart",
          "Fixed Product White Screen and total Price Added to LocalStorage",
          "Calculate Total Order Summary",
          "Dynamically Display Products Qunatities"
        ],
        "PRODUCTS COUPONS MANAGEMENT": [
          "Create And Fetch All Coupons Actions",
          "Coupon API Modified",
          "Fetch Single Coupon Action",
          "Apply Coupon",
          "Display Coupon Error, Success & Loading",
          "Apply Coupon To Order Summary",
          "Reset Coupon Form"
        ]
      },
      "requirements": [
        "Basics of react is (Required)",
        "Basics of react redux (Required)"
      ],
      "description": "The MERN Stack Ecommerce course is a comprehensive program that aims to equip students with the skills and knowledge required to build and deploy a full-featured API. The course covers a range of topics, including integrating Stripe for payment processing, pagination and filtering techniques, order statistics and analysis, admin processes for managing orders, implementing categories and product management, order management systems, building and connecting to the database, and implementing user authentication and authorization.\nThe course starts with an introduction to NodeJS and the basics of building an API. Students will learn how to set up a development environment, create and test API endpoints, and connect to a database. As the course progresses, students will learn about integrating Stripe for payment processing, handling webhooks, pagination and filtering techniques, and order statistics and analysis.\nIn addition, students will learn about the admin process for managing orders, implementing categories and product management, and order management system. Throughout the course, students will work on real-world projects to gain hands-on experience and develop a strong foundation for building and maintaining APIs.\nThe course also covers best practices for building APIs, including security, performance, and scalability. By the end of the course, students will have a solid understanding of building, testing, and deploying APIs, as well as the skills to take on their next project.\nThis course is ideal for developers who want to learn about building and deploying APIs, students who are new to web development and want to learn about building and deploying APIs, developers who want to learn about integrating Stripe for payment processing, engineers who are interested in learning about building e-commerce systems, and individuals who want to learn about building and deploying a full-featured API.\nThroughout the course, our experienced instructors will provide guidance and support to students. Active participation in class discussions, asking questions, and sharing knowledge with fellow students is encouraged. The MERN Stack Ecommerce course is designed to provide a strong foundation for building APIs and is suitable for anyone who wants to learn more about back-end web development.",
      "target_audience": [
        "Developers who want to learn and master MERN Stack Development",
        "Developers willing to build complete E-Commerce Project"
      ]
    },
    {
      "title": "Mastering Redux with React",
      "url": "https://www.udemy.com/course/mastering-redux-with-react/",
      "bio": "Step by step guide to master Redux",
      "objectives": [
        "Learn & be able to build a app comfortably using React & Redux together"
      ],
      "course_content": {
        "Mastering Redux": [
          "Introduction",
          "Actions",
          "Reducers",
          "Store",
          "React & Redux",
          "Building a simple todo app",
          "Async actions"
        ]
      },
      "requirements": [
        "You should have a solid knowledge of React",
        "You should be familiar with create-react-app"
      ],
      "description": "This course will help you master Redux and allow you to use Redux and React seamlessly together in all your projects moving forward.\nIf you are new to Redux, or if you've been working to learn it but sometimes feel like you still don't quite 'get it', this is the right course for you.\nLearn what actions are.\nLearn what a reducer is and why we use them.\nLearn how to put Redux and React together when building your apps.\nI've built the course that I would have wanted to take when I was trying to finally understand Redux. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "This course is for students who are just starting to learn or having difficulties learning Redux"
      ]
    },
    {
      "title": "Application Development with IBM WATSON",
      "url": "https://www.udemy.com/course/ibm-watson-exploring-services-application-development/",
      "bio": "Watson Chatbot | Visual Analyzer | Tone Analyzer | Face Detection | Voice Detection",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over IBM Cloud- Bluemix.",
        "You would be able to implement what you learnt about various Watson Services in any form- teaching, development, testing, etc.",
        "You will be able to use various IBM Watson cloud services and tools available.",
        "You will learn about Visual Analyzer, Tone Analyzer and much more"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "IBM Cloud",
          "IBM Watson Services"
        ],
        "Watson Services on Bluemix": [
          "What is IBM Watson on Cloud?",
          "Watson Discovery",
          "Watson Language Translator",
          "Watson Natural Language Understanding",
          "Watson Personality Insights",
          "Watson Speech-to-Text",
          "Watson Text-to-Speech",
          "Watson Tone Analyser",
          "Watson Visual Recognizer"
        ],
        "New Watson Services": [
          "Watson Studio",
          "Watson Machine Learning",
          "Watson Knowledge Catalog"
        ],
        "Understanding Chatbot": [
          "Intents",
          "Entities",
          "Dialogs",
          "Watson Conversation- CHATBOT (Watson Assistant)"
        ],
        "PROJECT: Knowledge Studio & Natural Language Understanding": [
          "PROJECT: Knowledge Studio & Natural Language Understanding"
        ]
      },
      "requirements": [
        "Nothing required at all! but if you have a background in computer science or development, it would be beneficial, but not required at all."
      ],
      "description": "This course is primarily focused on learning and exploring various IBM Watson services with practical approach and demonstration of each services available on the IBM Cloud. IBM Watson is an advanced AI and Machine Learning technology developed and managed by IBM. Being the market leader, IBM has curated Watson with a lot of Research and Development, and most of its services and features are considered best among its competitors. IBM Watson comes with a lot of various services and features that can be integrated with any kind of Project, being it a Web development, Mobile development, Big data and Analytics, Data Science, Internet of Things or something else.\nYou could be working in any domain of technology, or business, or you could be a student. You would find most of the features of IBM Watson very powerful, but with not very steep learning curve. If you are just beginning, you don't actually require any background in programming, and you can create some of the best products with writing a single line of code. You will learn how to create a Chatbot with IBM Watson without writing any code, and much more things. However, if you are a developer of some sort, you can leverage your skills by embedding Watson with your code.\nYou could integrate these services in your Web, Android, IoT, Desktop Applications like Face Detection, Chatbot, Voice Detection, Text to custom Speech (with pitch, emotions, etc.), Speech to text, Sentimental Analysis on Social media or any textual data.\nIn this course, you will learn the following IBM Watson services:\n1. Conversation\n2. Discovery\n3. Personality Insight\n4. Text-to-Speech\n5. Speech-to-Text\n6. Tone Analyzer\n7. Visual Analyzer\n8. Natural Language Understanding\n9. Language Translator\n10. Knowledge Studio\n11. Natural Language Classifier",
      "target_audience": [
        "Anyone who is curious to experiment with Artificial Intelligence and develop applications or simply interested in exploring IBM Watson and its powerful services available on IBM Cloud.",
        "App or Web developers who want to integrate AI services in their application including Visual Analyser, Sentimental Analyser, Chatbot, etc"
      ]
    },
    {
      "title": "React, Redux & Material UI Workshop for Beginners",
      "url": "https://www.udemy.com/course/react-redux-material-ui-workshop/",
      "bio": "Build an app from scratch using React, Redux & Material UI",
      "objectives": [
        "Create a Todo app from scratch with React",
        "Setup Redux-Saga in the application",
        "Use Material UI components to build the app",
        "State persistence for the redux store",
        "Implement adding, completing & deleting Todos",
        "JEST unit testing setup from scratch",
        "Write JEST unit tests for the reducer",
        "Check test coverage in JEST"
      ],
      "course_content": {
        "Welcome to the workshop": [
          "A React Journey."
        ],
        "Introduction to React": [
          "What is React ?",
          "What is the \"Virtual DOM\" ?",
          "The JSX syntax",
          "Styling JSX elements with JSS",
          "Render components inside JSX",
          "Incremental bundle size of React apps",
          "A walkthrough of React website",
          "The strong era of React"
        ],
        "Introduction to Redux": [
          "What is Redux ?",
          "Three principles of Redux",
          "Redux-Saga workflow",
          "A walkthrough of Redux official website",
          "Redux dev tools chrome extension",
          "Redux state management"
        ],
        "Project MSK Todos - App design": [
          "High level UI design",
          "Todo Item component design"
        ],
        "Let's write code and build the application": [
          "Ready ... Steady .... Wait !",
          "Create the react app from scratch",
          "Installing dependencies",
          "Redux-Sage setup from scratch",
          "Material UI website walkthrough",
          "Let's add an AppBar on top",
          "Adding classes with MakeStyles",
          "Adding a New todo",
          "Marking Todo as completed",
          "Deleting todos",
          "Marking Todo as important",
          "TodoAdder component issues",
          "State persistence in browser"
        ],
        "Unit testing with JEST": [
          "A walkthrough of JEST documentation",
          "Setting up JEST in the app",
          "Write few unit tests",
          "Generate coverage report",
          "JEST testing Quiz"
        ],
        "The Project Source code": [
          "Download the source code"
        ],
        "Final Assessment": [
          "React, Redux & M-UI Test",
          "Congratulations on completing the workshop"
        ]
      },
      "requirements": [
        "Very basic knowledge of Javascript",
        "Windows, macOS or Linux for web development"
      ],
      "description": "Are you a beginner to React, Redux or Material UI ?\nDo you feel setting up redux-saga, understanding and remembering it is difficult ?\nDo you find it difficult to understand all the different pieces involved like Webpack, JSX and Transpilation ?\nAre you confused about how to properly unit test React components using Jest ?\n\n\nDon't worry, I have been there too.\n\n\nSo I decided to create a workshop for it in order to bring clarity to the absolute beginners who want to get started in just 1 day. You just need basic javascript knowledge to join the workshop\n\n\nSkills can pay the bills.\nThe number of jobs for the trio combination of ( React, Redux, Material-UI ) has increased and they are demanding skills to have in your CV in 2021.\nThe fact is, not everyone can easily understand and start building projects with React and use Redux with Material UI right away. But as a beginner, you will need a bit of push. Online documentation is great. I don't deny it. But with my hands-on experience, I believe I can help you give that initial push. Code with me and learn how to bootstrap without generators.\n\n\nWe will be using concepts like react hooks, redux setup, refs, material components & state persistence while building this React app and then give you the source code for future reference. You can use this as a bootstrap while working on your office projects and quickly configure stuff. Say No to StackOverflow for things that you can remember. This saves you time to focus on the core logic in your projects.\n\n\nUnit testing with Jest\nUnit testing the redux state of a react component is so critical because the reducer function dictates the behaviour of your app simply because it controls the entire state.\nMocking external libraries and exports are crucial during testing because we are interested to verify only our code changes.\nIn order to achieve this, we will make use of jest mock fn( ) to bypass the undesired portions of the code and make sure our redux reducer is stable and protected from future code changes which may introduce potential damage.\n\n\nI hope you like the workshop.\n\n\nWarm regards,\nManoj Satish Kumar",
      "target_audience": [
        "Developers who want to get started with ReactJS",
        "Any developer who wants to learn React",
        "Developers who want to use Redux state management",
        "Material UI enthusiasts",
        "Anyone who wants to move to frontend"
      ]
    },
    {
      "title": "Ajax, jQuery and JSON for Beginning Web Developers",
      "url": "https://www.udemy.com/course/ajax-jquery-and-json-for-beginning-web-developers/",
      "bio": "Learn Ajax, jQuery and JSON by creating real projects.",
      "objectives": [
        "Learn what Ajax, jQuery and JSON",
        "Learn how they work together",
        "Learn how to use them in the real world"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to the Course"
        ],
        "Getting Started with jQuery and Ajax": [
          "Getting jQuery",
          "Basic Functionality",
          "User Interaction",
          "GET and POST",
          "Exercise: Create a Navigation Menu"
        ],
        "Introduction to JSON": [
          "Introduction to JSON",
          "Working with JSON"
        ],
        "Exercise: Create Search Functionality for a Site": [
          "Exercise: Create Search Functionality for a Site"
        ],
        "Bonus: Create an Ajax Chat Application": [
          "Ajax Chat Application Part 1",
          "Ajax Chat Application Part 2",
          "Ajax Chat Application Part 3",
          "Ajax Chat Application Part 4",
          "Ajax Chat Application Part 5",
          "Ajax Chat Application Part 6",
          "Ajax Chat Application Part 7",
          "Ajax Chat Application Part 8",
          "Ajax Chat Application Part 9"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer"
      ],
      "description": "If you want to be a web developer, you need to know Ajax, jQuery and JSON. Learn what these these technologies are, how they work together, and how to build real life applications using them.\nThis easy to follow course teaches beginning web developers what you need to know to begin using Ajax, jQuery and JSON in the real world. Our approach is to teach them all in one course so you can understand the entire process of developing with these technologies instead of learning one, then struggling to understand how it works with other technologies to produce something useful.",
      "target_audience": [
        "Beginning web developers"
      ]
    },
    {
      "title": "Vue & Typescript | Vue Js, Type script, JavaScript Projects",
      "url": "https://www.udemy.com/course/vue-typescript-vue-js-type-script-javascript-projects/",
      "bio": "Vue Js, JavaScript & Typescript for front end web development with vue.js, type script, java script, Javascript Projects",
      "objectives": [
        "Whether you’re building a full single-page application or merely add interactivity to your existing app, Vue js has a spectrum of tools to help you.",
        "If you’re looking for a JavaScript web framework that isn’t going to drown you in complexity, take a look at Vue js.",
        "How to easily build the largest and most advanced applications using vue and vuex.",
        "How to create Web Application with Vue, Vue JS.",
        "Vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "TypeScript is better suited than JavaScript for large applications, but it requires a foundational knowledge of JavaScript to use.",
        "What is Vue JS?",
        "Most important Vuejs topics.",
        "How to create multi-page web app with vue-router in vue js.",
        "How to manage the data of our application with the vuex.",
        "Vuejs takes what other frameworks have done before, but does it in a way that’s fresh and easy-to-use",
        "What are Javascript variables, why are they used",
        "What is Javascript Boolean Logic",
        "How to include JS File in HTML CSS Javascript",
        "TypeScript is a programming language that helps developers turn medium-sized JavaScript projects and prototypes into large-scale ones.",
        "What is conditional statements (if else, switch case, ternary operator), how to use in Javascript",
        "How to write Javascript Functions, what are the differences between Function Decleration and Function Expression",
        "What is Javascript loops (for loops, while loops, continue and break statements), how to use them",
        "TypeScript is mainly associated with development careers. Typical job titles for TypeScript developers include senior developer, front end developer.",
        "Learn what TypeScript (typescript react react typescript Type script typescript node nodejs typescript angular typescript )for is and why we should use it",
        "TypeScript is a syntactical superset of JavaScript, any JavaScript program is also a valid TypeScript program.",
        "How to create Javascript Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "How to create Javascript objects, how to update them, object methods",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for webdevelop",
        "Microsoft introduced TypeScript to solve this scalability problem. TypeScript is often referred to as JavaScript with type .",
        "What is DOM, how to manipulate DOM in Javascript",
        "Developers with an understanding of TypeScript (which implies skill in JavaScript) might work in a wide range of fields building applications for both server-si",
        "Understand what TypeScript (typescript angular typescript react three js jest threejs) really it is about and how works",
        "JavaScript is a text-based computer programming language used to make dynamic web pages.",
        "What is JavaScript? JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "What are the main uses of JavaScript? JavaScript is a text-based programming language used for client- and server-side development.",
        "React vs. Angular vs. Vue: what is the best JavaScript framework? Choosing the best JavaScript framework for your web project depends on what you are lookingfor",
        "What is JSON and what is it used for? Because of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects.",
        "With all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences.",
        "Typescript is a superset of JavaScript. As its name suggests, TypeScript adds optional static typing to the JavaScript language.",
        "Developers use TypeScript when they need to scale up their JavaScript development.",
        "Learn how to define variables using data types in type script",
        "Use the different types of variable prefixes like let and const in typescript."
      ],
      "course_content": {
        "Introduction to Javascript, Javascript Projects for Web Development": [
          "Introduction to JavaScript",
          "Setup Visual Studio Code in Javascript and Javascript Projects",
          "Javascript Project Files and Course Documents",
          "Adding js file in JavaScript",
          "FAQ about Javascript, and Javascript Projects",
          "quiz"
        ],
        "Javascript Language Basics": [
          "Javascript Variables and Data Types",
          "Javascript Type Coercion",
          "Javascript Variable Mutation",
          "Javascript Basic Operators",
          "Javascript Boolean Logic",
          "Javascript Logical Operators",
          "quiz"
        ],
        "Javascript Conditional Statements": [
          "Javascript Conditional Statements",
          "Javascript Code Quiz 1 Solution",
          "Javascript Ternary Operator",
          "Javascript Switch, case statements",
          "Javascript Code Quiz 2",
          "Javascript Code Quiz 2 Solution",
          "quiz"
        ],
        "Javascript Loops": [
          "Introduction to Loops in Javascript",
          "Javascript While Loops",
          "Javascript While Loops Quiz",
          "Javascript While Loops Quiz Solution",
          "for Loops in Javascript",
          "for Loops Quiz Solution",
          "Javascript Continue and Break Statements",
          "quiz"
        ],
        "Functions in Javascript": [
          "Introduction to Functions in Javascript",
          "Javascript Function Decleration",
          "Javascript Function with Arguments",
          "Javascript Function return",
          "Javascript Function Expression",
          "Javascript Function Quiz",
          "Javascript Function Quiz Solution",
          "Javascript Function Scope",
          "quiz"
        ],
        "Javascript Arrays": [
          "Introduction to arrays in Javascript",
          "Javascript Array Features",
          "Javascript Array Methods",
          "Array Quiz",
          "Javascript Array Quiz Solution",
          "Javascript Array Iteration",
          "Javascript Array Iteration Quiz",
          "Array Iteration Quiz Solution",
          "quiz"
        ],
        "Javascript Objects": [
          "Introduction to objects in Javascript",
          "Javascript Object update",
          "Javascript Complex Data Structures",
          "Javascript Object Quiz",
          "Javascript Object Quiz Solution",
          "Javascript Object Methods",
          "this Keyword in Javascript",
          "quiz"
        ],
        "Javascript DOM": [
          "Introduction to DOM in Javascript",
          "What is DOM in Javascript",
          "Javascript Select and Change",
          "Javascript Select Methods",
          "Javascript Manipulation Methods",
          "Javascript innerHTML and textContext",
          "Javascript Attribute Manipulation",
          "quiz"
        ],
        "Javascript Event Handlers": [
          "Introduction to Event Handlers in Javascript",
          "Javascript Event Handler Codequiz",
          "Javascript Codequiz Solution",
          "callback Function in Javascript",
          "Javascript Different Event Types",
          "Todolist Quiz Solution in Javascript",
          "quiz"
        ],
        "Javascript Todo App Project": [
          "Javascript Project Introduction",
          "Javascript Create Add Task Controller",
          "Javascript Add Task To Data Structure",
          "Javascript Add Task To User Interface",
          "Javascript Create Delete Task Controller",
          "Javascript Delete Task From Data Structure",
          "Javascript Delete Task From User Interface",
          "Javascript Create Done Task Controller",
          "Javascript Done Task In User Interface"
        ]
      },
      "requirements": [
        "How to easily build the largest and most advanced applications using vue, vue js and vuex.",
        "Desire to learn about vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "Watching the lecture videos completely, to the end and in order.",
        "Computer with access to the internet.",
        "Determination and patience to learn.",
        "Basic knowledge of HTML and CSS for JavaScript",
        "Willingness and Motivation to successfully complete the training",
        "Desire to learn Javascript",
        "Desire learn Javascript Projects",
        "Desire to learn Modern Javascipt",
        "Desire to learn javascript libraries; React, Angular, NodeJS",
        "Desire to learn angular project",
        "Desire to learn Javascript Apps",
        "Basic ES6 knowledge would be beneficial but not required",
        "No prior Typescript knowledge is required",
        "Nothing else! It’s just you, your computer and your ambition to get started today."
      ],
      "description": "Hello,\nWelcome to the \" Vue & Typescript  | Vue Js, Type script, JavaScript Projects \" course.\nVue Js, JavaScript & Typescript for front end web development with vue.js, type script, java script, Javascript Projects\nVue (pronounced like view) is a frontend development framework for JavaScript (JS) that you can use to build web-based user interfaces especially in vuex library. You can also use vue js to create one-page applications and handle animations, interactive elements, and graphics. Generating projects is also possible with the user-built presets, which is commonly applicable for coders working in enterprise environments. Vue, vue js, vuejs, nuxt, vue.js, vue 3, vue js 3, Typescript, three js, type script, typescript react, angular, react typescript, three.js, javascript, java script, javascript projects, js, html css javascript, app project\nBecause vuejs is based on JavaScript, you can easily integrate Vue into an existing JS project. Vue uses the traditional Model-View-Controller (MVC) architecture, which means that the core library of Vue.js focuses on the view layer by default. It enforces a one-way data flow between components. This also makes it easy for you to integrate with other libraries or existing projects.\nWhether you’re trying to build a full single-page application or merely add a bit of interactivity to your existing app, Vue.js has a spectrum of tools to help you get your job done, and that course can help you get up and running quickly.\nIf you’re looking for a JavaScript web framework that isn’t going to drown you in complexity, take a look at Vue.js. Vue.js takes what other frameworks have done before, but does it in a way that’s fresh and easy-to-use. Using Vue.js lets you focus your application rather than on your framework.\nTypeScript is a programming language that helps developers turn medium-sized JavaScript projects and prototypes into large-scale ones. JavaScript, a widely-used programming language, was designed to be easy to use for developers and non-developers alike. As a result, JavaScript development is difficult to scale up. Microsoft introduced TypeScript to solve this scalability problem. TypeScript is often referred to as JavaScript with type because it allows developers to find errors while writing their code rather than wait until the application is running. And because TypeScript is a syntactical superset of JavaScript, any JavaScript program is also a valid TypeScript program.\nBefore taking this course, you only need to have a basic knowledge of HTML and CSS. In our course, the basics of JavaScript are dealt with in detail, and students are provided to test what they have learned with code quizzes prepared for each subject.\nJavaScript is a very important programming language for internet applications.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nJavaScript is a text-based computer programming language used to make dynamic web pages. A must-learn for aspiring web developers or programmers, JavaScript can be used for features like image carousels, displaying countdowns and timers, and playing media on a webpage. With JavaScript online classes, you can learn to build interactive web applications, choose the best framework, and work with other programming languages like HTML and CSS.\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates.\n\n\nDuring our course, you will be informed about the basics of JavaScript in detail and how to solve problems.\nThe most important feature that distinguishes this course from the others is that it deals with the most basic issues about JavaScript in detail and helps students to put what they have learned in theory into practice.\nIn our course, you can test what you have learned on both MAC and Windows computers. You do not need to purchase any tools or applications as free tools and platforms are used.\nDuring the course, I made sure to explain all the topics that may seem complicated to you as simple and detailed as possible. I have used some diagrams to help you understand better.\nJoin more than 12 million learners and train up on JavaScript on Udemy. Choose from a wide range of top-rated JavaScript courses. From back-end development to app or website building, we’ve got you covered. Our real-world experts can lead you through hands-on projects to apply your skills.\n\n\nIn this course you will learn to develop web applications with Vue JS, Vuex from scratch.\nIf you are thinking to realize your dream web application, this course is for you.\nWe have explained Vue and Vuex from beginner to all levels. We have explained all the topics as simple as possible with examples, slides, and diagrams.\nWe have created a lot of projects while explaining the subjects. Because we believe that applied educations are much more useful than other teaching methods.\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels.\nIn this tutorial you will learn;\n\n\nHow to create Web Application with Vue JS.\nMost important Vue JS topics.\nHow to create multi-page web app with vue-router.\nHow to manage the data of our application with the vuex.\nHow to easily build the largest and most advanced applications using vue and vuex.\nTypes and how to use them in typescript\nTypeScript features, syntax, and keywords in nodejs typescript\nTooling and Framework Options in typescript\nHow to create a class\nTypeScript variables and functions in angular typescript\nTypeScript declarations\nTypeScript classes and interfaces\nHow the TypeScript Compiler works\nES6 Features in TypeScript\nClasses in TypeScript\nInterfaces type script\nunderstanding typescript\nHow you can operate on variables in javascript,\nBoolean logic in javascript,\nHow to create a conditional statement in javascript,\nHow you can perform transactions with Loops in javascript,\nHow a function is created and why it needs arguments in javascript,\nHow Arrays and Objects, which are basic data structures, are created in javascript,\nHow DOM Manipulation is done in javascript,\nYou will have learned and have the opportunity to test what you have learned with the code quizzes in our course.\nWhat is Vue JS?\nVue (pronounced like view) is a frontend development framework for JavaScript (JS) that you can use to build web-based user interfaces. You can also use it to create one-page applications and handle animations, interactive elements, and graphics. Generating projects is also possible with the user-built presets, which is commonly applicable for coders working in enterprise environments. Because it is based on JavaScript, you can easily integrate Vue into an existing JS project. Vue uses the traditional Model-View-Controller (MVC) architecture, which means that the core library of Vue.js focuses on the view layer by default. It enforces a one-way data flow between components. This also makes it easy for you to integrate with other libraries or existing projects. Vue also uses virtual DOM (Document Object Model), which makes it faster than regular DOM. Instead of re-rendering the whole page, Vue only updates the objects that you change.\nWhat is the difference between Vue and React?\nAlthough Vue has an MVC architecture, you cannot use it with a different architectural approach, which differs from the Component Based Architecture (CBA) used in React. They also differ in how they optimize data. When a component’s state changes in React, it triggers the re-render of the entire component sub-tree, starting at that component as the root. Vue automatically tracks a component’s dependencies during its render, so the system knows which components actually need to re-render when the state changes. In React, everything is in JavaScript. Vue, on the other hand, embraces web technologies like HTML, CSS, and JavaScript and allows you to build off of them. Another difference between these frameworks is how you can scale up your projects. React only offers a single template that assumes you’re building a single-page application, while Vue offers several default options for multiple purposes and build systems.\nIs Vue JS easy to learn?\nVue JS can be easy to learn. Unlike other frontend technologies, Vue doesn’t require in-depth knowledge of libraries. If you want to start learning Vue, all you need to have is basic knowledge of HTML, CSS, and JavaScript. Compared to other coding technologies, developers typically classify Vue.js as having an easy learning curve. This is due largely in part to Vue’s reputation for having an elegant programming style and patterns. Because Vue is a progressive framework, it makes it easy for you to use it to integrate into an existing project. Because of its familiar templating syntax and use of components, you may find that integrating or migrating existing projects to Vue is fairly straightforward. Vue is known for offering a vast ecosystem of tools and companion libraries, making it a simple framework that you can use to respond to the complex needs of enterprise-grade applications.\nWhat is Vuex used for?\nVuex is a state management pattern + library for Vue. js applications. It serves as a centralized store for all the components in an application, with rules ensuring that the state can only be mutated in a predictable fashion.\nWhat is difference between Vue and Vuex?\nVue is a progressive Javascript framework and Vuex is the state management tool. We can use redux or flux inside Vue, But Vuex is native to the Vue.\nWhy do I need Vuex?\nVuex is a popular way to handle a complex app's authentication in Vue. With Vuex, you're able to handle the token's availability and access controls and route blocks throughout your app. Mutations, getters, and setters assist with this task.\nHow does Vuex store work?\nIt works by having a central store for shared state, and providing methods to allow any component in your application to access that state. In essence, Vuex ensures your views remain consistent with your application data, regardless of which function triggers a change to your application data.\nWhen Should I Use It?\nVuex helps us deal with shared state management with the cost of more concepts and boilerplate. It's a trade-off between short term and long term productivity.\nIf you've never built a large-scale SPA and jump right into Vuex, it may feel verbose and daunting. That's perfectly normal- if your app is simple, you will most likely be fine without Vuex. A simple store pattern (opens new window)may be all you need. But if you are building a medium-to-large-scale SPA, chances are you have run into situations that make you think about how to better handle state outside of your Vue components, and Vuex will be the natural next step for you.\nWhat is Typescript?\nTypeScript is a programming language that helps developers turn medium-sized JavaScript projects and prototypes into large-scale ones. JavaScript, a widely-used programming language, was designed to be easy to use for developers and non-developers alike. As a result, JavaScript development is difficult to scale up. Microsoft introduced TypeScript to solve this scalability problem. TypeScript is often referred to as JavaScript with type because it allows developers to find errors while writing their code rather than wait until the application is running. And because TypeScript is a syntactical superset of JavaScript, any JavaScript program is also a valid TypeScript program.\nWhat is the difference between Typescript and Javascript?\nTypescript is a superset of JavaScript. As its name suggests, TypeScript adds optional static typing to the JavaScript language. JavaScript is a scripting language that allows developers to create dynamic web content. It is known for being fairly easy to use and learn. This makes it a popular programming language for small and medium-scale web projects. Developers use TypeScript when they need to scale up their JavaScript development. Its language is more powerful and intuitive, allowing developers to find and correct errors during compile time, rather than only during run-time, as with JavaScript. TypeScript is better suited than JavaScript for large applications, but it requires a foundational knowledge of JavaScript to use.\nWhat careers use Typescript?\nTypeScript is mainly associated with development careers. Typical job titles for TypeScript developers include senior developer, front end developer, stack developer, and software engineer. Because TypeScript is a superset of JavaScript, learning TypeScript is a great next step for engineers who are already skilled in JavaScript. Programming knowledge is applicable in just about every industry, so developers with an understanding of TypeScript (which implies skill in JavaScript) might work in a wide range of fields building applications for both server-side and client-side execution.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhat is AJAX and what is it used for?\nAJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications. AJAX uses XHTML for content, CSS to style the page, and JavaScript for controlling content dynamically. AJAX allows you to update a web page without reloading the page (this technique is called a “SPA” or Single Page Application), request data for the page after it has loaded, receive data after the page has loaded, and send data to the server in the background. Despite XML being part of the acronym that makes up AJAX, AJAX can send and receive data in any format, including JSON or plain text. While traditional web applications use synchronous methods to send and receive information from a web server, AJAX can use asynchronous API calls in the background without blocking activity in the browser. AJAX is a data-driven rather than a page-driven technology.\nHow can I teach myself Javascript?\nOne of the best ways to learn to write code is through an online course that teaches you how to write JavaScript with an instructor that will explain the code, what versions you should use, and why. Learning to develop a real-world application, with an instructor explaining in a step-by-step fashion, will teach you modern code techniques.\nWhat is the best IDE for Javascript?\nWith all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences. Webstorm is a popular JavaScript IDE from JetBrains. It provides fast static code analysis, integrated testing, local history, code refactoring, and debugging. While the IDE requires a paid subscription, many developers swear by it because of its compatibility with JavaScript, HTML, and CSS. Those searching for a free option might prefer VS Code. This general-purpose, open-source IDE comes with IntelliSense, Git integration, and debugging features built-in. Many third-party extensions are available to add new language and programming features, making it one of the more flexible choices. Atom is another general-purpose IDE that is popular with JavaScript developers. It is also free, open-source, and has third-party extensions to add functionality.\n\n\nStep-by-Step Way, Simple and Easy With Exercises\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Vue updates its system, and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\n· Seeing clearly\n· Hearing clearly\n· Moving through the course without distractions\n\nYou'll also get:\nLifetime Access to The Cours\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\nDive in now into;\n\" Vue & Typescript  | Vue Js, Type script, JavaScript Projects \" course.\nVue Js, JavaScript & Typescript for front end web development with vue.js, type script, java script, Javascript Projects\nWe offer full support, answering any questions.\n\nSee you on the other side!",
      "target_audience": [
        "Who wants to learn Vue with Vue js applications from scratch.",
        "Who wants to learn Vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "Who wants to learn today's most popular front-end architectures and take their Web development skills to the next level and learn a future-oriented technology.",
        "Who wants to learn how to create websites with Vue",
        "Anyone who trying to learn JavaScript but still don't really understand JavaScript, or still don't feel confident to code real apps",
        "Take this course if you want to gain a true and deep understanding of JavaScript",
        "If you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "Those who want to learn the basics of JavaScript, the world's most popular programming language",
        "If you want to get started with programming: JavaScript is a great first language!",
        "People who want to learn Javascript projects",
        "People who want to learn javascript libraries; react, angular, nodejs",
        "People who want to learn javascript project, react node project, node js projects",
        "Anyone learning Angular should definetely understand how to Typescript works.",
        "This Course is for every student who wants to extend his or her horizon beyond vanilla JavaScript",
        "Anyone who Javascript developer looking to understand how to structure large codebases."
      ]
    },
    {
      "title": "Ultimate JavaScript Objects",
      "url": "https://www.udemy.com/course/js-objects/",
      "bio": "The Ultimate Guide to JavaScript Objects, where students will learn to create, copy, and master JavaScript Objects",
      "objectives": [
        "Understand and explain the purpose of objects in JavaScript and in general",
        "Create objects using several different kinds of notation",
        "Iterate over object properties effectively",
        "Copy and deep copy objects and understand the underlying consequences",
        "Effective usage and formatting of JSON (JavaScript Object Notation)",
        "Install Lodash.js and implement it in practical situations",
        "Create and implement ES6 Classes and methods",
        "Understand and execute ES6 Class Inheritance",
        "Use ES6 Symbols as a key in objects",
        "Composite object methods into new classes",
        "Understand the consequences and purpose of prototype",
        "Freeze and seal objects to restrict future changes to them",
        "Correctly differentiate between methods and properties",
        "Intelligently choose object manipulation software to suit real business applications"
      ],
      "course_content": {},
      "requirements": [
        "Students will need to set aside time to do the quizzes and examples, as well as code along with the live demonstrations, as these are highly recommended",
        "Any workstation running Google Chrome (even certain library or public computers) are sufficient for 90% of the coding exercises",
        "Having your own workstation capable of running Node.JS is recommended for completing 100% of examples",
        "Basic knowledge of JavaScript is recommended, but not required, as detailed step-by-step examples will be provided in every example"
      ],
      "description": "Ultimate JavaScript Objects, the most epic installment of the Ultimate JavaScript series, is a course designed to train any student to be a complete JavaScript Object Pro.\nWhy is understanding JavaScript objects useful? Any web developer or back-end coder using Node uses JavaScript every day, and features of JavaScript Objects you don't know about yet could be costing you hundreds of hours in lost productivity.\nThat's why the Code Whisperer, Daniel Stern, put together this course - to arm you with only the most practical tools to increase the productivity in your JavaScript Workflow.\nWe'll cover tons of topics that YOU need to know including\nHow to create JavaScript Objects the right way\nHow to copy an object without unintended consequences\nHow to use ES6 Classes to make your projects more maintainable and clear\nAll the key terminology and concepts to ace any job interview!\nWe've really pulled out all the stops to deliver a course that we truly believe is an incredible value.\nFor the LOWEST PRICE a course can be sold for on this site, you get\nTwo full hours of densely packed educational video\nOver 10 downloadable handouts\nOver 50 challenging quiz questions throughout the course so that you retain the knowledge you need\nTEN cutting edge coding tests right inside the browser! (That's more than any known competing courses offer)\nTen chapters packed with JavaScript knowledge\nThere's not enough room in this summary to list every reason why this course is an amazing value!\nA price as low or lower than any non-free Udemy course, but packed with the content of a premium course\n100% Money Back Guarantee\nDozens of useful techniques distilled to improve your productivity and increase your esteem in your coding circle\nThis course is the crown jewel of any JavaScript student's collection of go-to references and educational compendia.\nWith the 100% Money Back guarantee, plus an incredible value, there's no reason not to grab to this course today!",
      "target_audience": [
        "This course is ideal for any student of JavaScript who wishes to improve their knowledge",
        "Even extremely seasoned developers will have their skills refreshed by the large number of quizzes and coding tests",
        "Any back-end developer working in a Node.JS environment",
        "Any front-end developer writing JavaScript code on a daily basis",
        "Any hobbyist using JavaScript as part of a hardware API - Raspberry PI, Edison, etc"
      ]
    },
    {
      "title": "Deploy a Django web app with Nginx and Amazon ECS - 2025",
      "url": "https://www.udemy.com/course/deploy-a-django-web-app-with-nginx-and-amazon-ecs-2022/",
      "bio": "Create a Django web app with Docker and Nginx | Setup a reverse proxy | Deployment with Amazon ECS - EC2 launch type",
      "objectives": [
        "How to deploy your website using the Amazon ECS - EC2 launch type",
        "Learn how to make use of IaaS - (Infrastructure as a Service)",
        "Configure Nginx as a reverse proxy",
        "Dockerise Nginx",
        "Dockerise your Django application",
        "Register a domain name and provision an SSL/TLS certificate",
        "Host a PostgreSQL database with Amazon RDS",
        "Deploy your static files (CSS + JS) on Amazon S3",
        "Secure your sensitive data with environment variables",
        "Create a basic application"
      ],
      "course_content": {},
      "requirements": [
        "Must use a Windows PC and not MacOS/Linux (due to possible deployment issues with Docker)",
        "Fundamental knowledge of Django and AWS is required",
        "You should also know the basics of HTML/CSS and JavaScript",
        "Knowledge on Docker would be helpful, but it isn't mandatory for this course"
      ],
      "description": "Welcome! I'm here to help you to master the basics of deploying a Django web application to Amazon Elastic Container Service (ECS) whilst utilizing Nginx and Docker.\n\n-- Please read carefully --\n\nThis course is primarily intended for individuals who have a basic knowledge of Django and AWS.  Knowledge on Docker would be helpful, but it isn't mandatory for this course.\nTo put it simply, if you have some background in Django and AWS and want to learn about how to deploy your web application then this is definitely the course for you!\n\n\nI want to help YOU deploy your Django web app to AWS.\n\nThe Deploy a Django web app with Nginx and Amazon ECS course has been structured in a simple and logical order. Everything that has been designed from the styling to the graphics and topics covered is crafted with the absolute duty of care towards the student.\n\n\nThe main focus of the course is to teach you how to deploy your Django web application to Amazon ECS with Docker and Nginx.\nIn this course we will NEED to purchase a domain name from AWS Route 53.\nWe will only focus on deployment and NOT delve into making use of any automation tools or focus on intricate use cases. This includes the AWS CI/CD tools for continuous integration and delivery.\nYou will learn how to utilize several AWS services such as Amazon S3, Amazon RDS, Route 53, Certificate Manager, Elastic Container Service (EC2 - launch type) etc.\nYou will also learn how to attach a domain name and SSL certificate to your web application.\nIt is mixed with theory and practical hands-on demonstrations.\nThe course is structured in a logical and cohesive way - not just random slides plastered everywhere.\nIt starts off very simple and then builds on gradually throughout the course.\nYou will also learn about the basics of Docker and containerization\nThis course is jam-packed with lecture slides, PDF walkthroughs, code snippets/references and comes along with the full project source code - as a zip file.\nAll 150 + slides are available as a downloadable PDF.\n\nThe Deploy a Django web app with Nginx and Amazon ECS course is a highly practical course and allows you to apply your knowledge:\n\n\nThere is a wealth of hands-on lectures throughout this course.\nYou will be able to deploy your Django web application by containerizing it.\nWe will configure Nginx as a reverse proxy and bind it to our Django application with Gunicorn\n\n\n\n\nYour instructor:\nMy name is Arno Pretorius. I'm a qualified IT teacher who has taught programming both in-person and online. My main passions are teaching and technology, so I thought why not just combine the best of both worlds to create something truly amazing and valuable. Over the years, I have created and deployed many real-world Django-based applications, including a job portal for university graduates and an exclusive social network.\nI'm a Software developer, an AWS Solutions Architect and Developer associate. I have a keen interest in cloud computing, web development and everything that relates to programming and technology.\nSo, let's go and become fluent in Django deployment, along with an extra service or two.\nTrust me you are in good hands!\n\n\n\n\nThis course also comes with:\n- 6.5 hours of on-demand video\n- Full lifetime access\n- A Udemy certificate of completion\n- Several downloadable resources\n- Access on mobile and TV",
      "target_audience": [
        "Django developers who want to learn how to deploy their website",
        "Mid - advanced Python developers with a basic knowledge of Django",
        "Deployment enthusiasts!"
      ]
    },
    {
      "title": "The Complete PHP 8 Masterclass - Go from Beginner to Artisan",
      "url": "https://www.udemy.com/course/the-complete-php-masterclass-go-from-beginner-to-artisan/",
      "bio": "This PHP course gives you the skills you need to succeed as a freelance software engineer.",
      "objectives": [
        "Learn PHP 7 and PHP 8",
        "Build a WordPress plugin from scratch"
      ],
      "course_content": {
        "Course Introduction": [
          "Platform Migration",
          "Course Introduction",
          "A Few Things to Remember",
          "How to Get Help",
          "Finding the Resources"
        ],
        "Install and Setup": [
          "How to Use This Section",
          "PHP Versioning",
          "[Win/Mac] Installing Dev Environment on Windows and Mac",
          "[Win/Mac] MySQL Root Password (Option 1)",
          "[Win/Mac] MySQL Root Password and Workbench (Option 2)",
          "[Win/Mac/Linux] MySQL Root Password Grant",
          "[Linux] Installing Dev Environment on Linux",
          "Configuring Apache with a Local Test Website",
          "Installing Eclipse PDT",
          "Coding Standards",
          "Printing Text in the Console"
        ],
        "BOOT CAMP - The Basics": [
          "Hello World",
          "Variables and Data Types",
          "Code Completion in Eclipse",
          "Four Types of Strings in PHP",
          "String Interpolation",
          "Tabs, New Lines, and the Escape Character",
          "Indexing Into Strings",
          "Operators",
          "PHP is Loosely Typed",
          "Not Defining a Value Versus Null",
          "String Concatenation",
          "Mid-Section Challenge",
          "Mid-Section Challenge Solution",
          "Two Types of Arrays",
          "The Difference Between echo, print_r, and var_dump",
          "in_array, array_key_exists empty, isset, array_slice",
          "Section Challenge: Copy Words in a Sentence into an Array",
          "Gotcha with isset and empty",
          "Solution: Word Array"
        ],
        "BOOT CAMP - It's Browser Time!": [
          "Running Hello World in Your Browser",
          "True, False, Truthy, Falsey",
          "Control Structures with if / elseif / else",
          "Switch",
          "Ternary Statements",
          "Handling Form Submissions - Introduction to Superglobals",
          "$_REQUEST, $_GET, and $_POST Superglobals",
          "Mid-Section Challenge",
          "Solution to Mid-Section Challenge",
          "$_SERVER",
          "Handling a File Upload",
          "Number Guessing Game and rand",
          "Security Concerns with $_GET",
          "Using $_COOKIE to Store the Number",
          "Security Concerns with Cookies",
          "Using Sessions to Make It More Challenging",
          "Section Challenge: Submit a Form - Set Cookie When Valid",
          "Solution: Server Side Validation"
        ],
        "BOOT CAMP - Loops": [
          "For loop",
          "Printing All Values in an Array",
          "I++, J++... C++?",
          "Nested For Loop",
          "Printing Times Tables",
          "Mid-Section Challenge",
          "Continue and Break",
          "The Foreach Loop",
          "The While Loop",
          "The Do / While Loop",
          "Augmented Assignment"
        ],
        "BOOT CAMP - Functions and File I/O": [
          "Section Challenge: Implement Binary Search",
          "Solution: Implement Binary Search",
          "Writing data to a file using file_put_contents",
          "Reading the Contents of a File with file_get_contents",
          "The eval() Function is EVIL!",
          "Serialize / Unserialize (Hint: Also Evil!)",
          "Writing Functions in PHP",
          "Mid-Section Challenge",
          "Solution to Mid-Section Challenge",
          "Anonymous / Lambda Functions",
          "Recursion",
          "Mutual Recursion",
          "Generators",
          "Gathering Input From the Console",
          "Creating a Phar (PHP Archive) File",
          "Section Challenge: Implement a Recursive Factorial Function",
          "Solution: Recursive Factorial"
        ],
        "BOOT CAMP - OOP and 3rd-Party Software": [
          "Classes in PHP",
          "Static Methods",
          "Static Properties",
          "The __construct Method",
          "Dynamic Methods",
          "Dynamic Properties and the $this keyword",
          "Including a file Versus Require",
          "Namespaces",
          "spl_autoload_register",
          "Interfaces",
          "Abstract Classes and Extending a Class (Inheritance)",
          "Traits",
          "Error Handling With Try / Catch / Finally",
          "Challenge: Build a Toaster Class",
          "Solution: Toaster",
          "Hardening the Toaster with Type Hints",
          "Class Scopes: Public vs Protected vs Private Scopes",
          "$this Versus Self",
          "Get Composer",
          "Installing Guzzle, and The \"vendor\" Directory and Autoloading",
          "Guzzle Google",
          "UPDATE: Important Information About the Section Challenge",
          "Section Challenge: Driver Backbone",
          "Solution: Driver Backbone"
        ],
        "BOOT CAMP - Time Traveling with DateTime and Carbon": [
          "The time Function and Unix Timestamps",
          "Date and time formats with the date Function",
          "The DateTime Class",
          "Adding and Subtracting Dates",
          "How Carbon Makes Time Travel Possible... with Ease!",
          "Section Challenge: Print Your Birthday Using All Three",
          "Solution: Birthday Printing"
        ],
        "BOOT CAMP - Databases - PHP PDO and MySQL": [
          "SQL Primer: MySQL Workbench",
          "Creating a Database Schema in MySQL Workbench",
          "PHP PDO and Connecting to Our New Database",
          "SQL Primer: INSERT",
          "Raw SQL INSERT using PHP PDO",
          "SQL Primer: SELECT",
          "Raw SQL SELECT",
          "SQL Primer: UPDATE",
          "Raw SQL UPDATE",
          "SQL Primer: DELETE",
          "SQL Injections with Robert') DROP TABLES Students;--",
          "Raw SQL DELETE",
          "Prepared Statements in PHP PDO",
          "Section Challenge: Rewrite All Queries to Use Prepared Statements",
          "Solution: Well Prepared"
        ],
        "SOFTWARE PRINCIPLES - SOLID, DRY, YAGNI": [
          "SOLID, DRY, YAGNI - What Are They? Why Should I Care?",
          "S - Single Responsibility Principle",
          "O - Open-Closed Principle",
          "L - Liskov Substitution Principle",
          "I - Interface Segregation Principle",
          "D - Dependency Inversion Principle",
          "YAGNI - You Aren't Gonna Need It!",
          "DRY - Don't Repeat Yourself!"
        ]
      },
      "requirements": [
        "A computer - Windows, Mac, and Linux are all supported. Setup and installation instructions are included for each platform.",
        "Basic computer skills (If you can search the internet or use a word processor, you'll do just fine.)",
        "Eagerness to learn"
      ],
      "description": "====================\nUPDATED FOR PHP 8!\n====================\nThis course is/will/has...\nA living, breathing, course continuously updated whenever new significant versions of PHP get release, whether that's PHP 7.0 to 7.1, PHP 7.x to PHP 8.x, or later, I'll be sure you have the latest information as quickly as possible in new videos.\nTeach you the difference in coding standards that makes the difference between a PHP artisan, and someone who's self-taught and spends years in the dark. (HINT: SOLID, DRY, YAGNI! You'll learn what they mean and why they're important, and also why your code should comment itself.)\nHas several micro-courses to help you grow in ways that matter, potentially putting you six-figures or more in profit!\nBread and Butter (Basics and Advanced PHP Concepts)\nWhat about the main course? (Hint: it's not a dinner roll! :) ) Here's what you can expect.\nGetting started with Eclipse PDT (free)\nVariables (including global variables)\nData types (arrays, strings, int, float, etc.)\nSuperglobals ($_GET, $_POST, $_COOKIE, $_SERVER, $_FILES, $_REQUEST) - The general I/O for your PHP application\nFlow control (if/elseif/else, for, foreach, while, do/while, switch) - Control what happens in your application\nTernary statements\nError handling with try/catch/finally\nFunctions (including anonymous/lambda functions)\nType Hinting (classes, array, scalar types [New in PHP 7!])\nOOP (Classes, methods, properties [static and dynamic], scope, and more!)\nGenerators\nGuzzleHTTP for API interaction\nCourse Project\nDuring the course, we will learn how to build a basic online freelance marketplace in Laravel 7. Rick spent 2 years of his life building a very elaborate online freelance marketplace, and he'll distill his knowledge down into the basics so we can fit it into a course project. You'll also hear about numerous other options you could use to expand the marketplace into your own awesome creation, while reinforcing your knowledge in PHP.\nWhat's an online freelance marketplace? Simple. It's a place where vendors and shoppers meet each other and transact service-based business. An example of some of them are Upwork, Freelancer, and Fiverr.\nThe project includes the following:\nLaravel 7 training\nGit using GitHub\nAuthentication system, and a deep dive into how that works behind the scenes.\nCreate and manage a project screens\nProject search and Laravel Scout with Algolia's free tier\nCI/CD with Travis CI\nMicro-courses:\nPHP is one of the most prevalent languages on the internet, but HTML and JavaScript are staples of any quality frontend. Furthermore, without a solid income from your investment, you'd only be spending money in hopes of getting your next job. Don't worry! I'll clue you in on how I started on government welfare, but went on to make six figures on Upwork, and how you can follow in my footsteps. (Please note that I cannot guarantee that you will make six figures, or even a single penny by using what you learn, but if you give it your all, I'd be shocked if you weren't successful at making some nice money.)\nMy secrets as a six-figure Upwork freelancer - PHP has the uncanny double standard of being EXTREMELY popular on online freelance marketplaces, such as Upwork, but almost non-existent in traditional jobs. If you're looking to work for yourself, learn PHP and go freelance. If you'd prefer to work for the man, try Node.js, Python, Java, or another language popular for that career path. I'll show you how to succeed as a six-figure freelancer on Upwork.\n\n\nYou'll also learn the various caveats of each of the major online freelance marketplaces, such as Fiverr, Freelancer.com, and Upwork, so that you can make your own decisions on where to start your journey as a freelancer.\nSOLID, DRY, YAGNI, and other tips that'll make you a PHP artisan instead of just someone writing code.\nS — Single responsibility principle\nO — Open/closed principle\nL — Liskov substitution principle\nI — Interface segregation principle\nD — Dependency inversion principle\nDRY — Don't Repeat Yourself!\nYAGNI - You Aren't Gonna Need It!\nWordPress and WooCommerce - WordPress powers 35% of the entire internet at the time of writing this in February 2020. Just a couple months ago, it powered 34%! That's a massive market share, and it's no surprise that Upwork is filled to the brim with WordPress and WooCommerce projects. During this course we'll build the following WordPress plugins from scratch, while keeping our codebase FAR cleaner than most WordPress plugins, or even WordPress core itself.\nCustom WooCommerce Thank-You Page - Create a custom thank-you page for your WooCommerce installation on WordPress.\nFeatured Products Widget - Build a widget to display an admin-defined list of posts on your sidebar, footer, or anywhere else your theme supports widgets!\nLaravel 7 - Laravel is the most popular PHP framework at the time of writing, and we'll learn how to build software in laravel. You'll learn the components that make up the framework, such as model, views, controller, the Artisan CLI and more. You'll also get hands-on training in Laravel Spark and Laravel Nova not taught in other courses in PHP and Laravel!\nVue.js - Learn the very basics of using Vue.js to build your frontend. As we'll be using Laravel, Vue.js will come up somewhat often when working with their products, and you should be able to hit the ground running with Vue.js.",
      "target_audience": [
        "No Experience needed! - New to web development or programming in general (I assume you don't know anything at all about building websites or programming in general.)",
        "Programmers knowledgeable in a different programming language"
      ]
    },
    {
      "title": "Progressive Web Apps (PWA) - From Beginner to Expert",
      "url": "https://www.udemy.com/course/progressive-web-apps-pwa-from-beginner-to-expert/",
      "bio": "Learn How To Deliver the Best User Experiences using the Best Web Technology",
      "objectives": [
        "How to build the best in class web applications",
        "What Progresssive Web Apps Are and Why They Should Develop Them",
        "How to craft the perfect Add To Homescreen Experience",
        "Why all websites should be secure and how to secure them",
        "What a Service Worker Is",
        "How to develop Service Workers Using good JavaScript practices",
        "The Service Worker Life Cycle",
        "What Service Worker Caching is",
        "Different Caching Strategies and How to Apply them in a real application",
        "Progressive Web Application and Service Worker Tools",
        "How to polyfil legacy browsers and platforms to provide many PWA features",
        "How to add native push notifications to any website"
      ],
      "course_content": {},
      "requirements": [
        "Students should have at least a fundamental understanding of HTML, CSS and JavaScript. It is recommended they also have a computure they can develop web sites and a preferred code editor. The example code is available via GitHub, so basic git source control knowledge is helpful. All code demonstrations are done using Visual Studio code, a free download."
      ],
      "description": "Progressive Web Applications are just web sites that progressively become apps. But how does this happen? It takes skilled developers that understand a new way to create web sites that are fast, reliable and engaging.\nIn this course you will learn what progressive web applications are, why you need to master them and why your stakeholders want progressive web applications over traditional web sites and native applications.\nBusinesses of all sizes are discovering the power progressive web applications bring to help them reach and engage their audiences. This means they can increase revenues while decreasing costs. Brands like Twitter, Lyft, The Washington Post, Forbes and Weather channel have all discovered the benefits upgrading to a progressive web application bring.\n\nThe success these companies are having is driving more demand for developers skilled in service workers, web manifest, push notifications and more.\nYou will learn how to craft an app shell so your experience can progressively load with an instant presence. I expose you to everything you need to know about progressive web applications and service workers.\nThis course starts each section addressing the beginner, assuming you have no prior knowledge of the topic. Each section progresses and covers more and more detail until there is just about no nook or cranny not exposed.\nThe course includes video modules that review a combination of slides and code demos. Slides and source code references are included so you can follow along outside the course. Quizzes are also included so you can identify topics you may need to review and sharpen. Finally, the course also includes some articles about selected topic as an additional reference.\nYou will master the web manifest file so you can tell the browser how to render your brand's desired experience.\nHTTPS\nHome Screen/Installation Experience\nHow each browser is and plans to implement PWA support\nService Workers\nService Worker Life Cycle\nService Worker Caching\nPush Notifications\nBackground Synchronization\nBasic Performance Best Practices and how to implement the PRPL and RAIL Patterns.\nThis course does not use any JavaScript frameworks. All examples, primarily a demo site called Fast Furniture, rely on vanilla JavaScript.\nThe site does use Bootstrap 4 as a CSS library, but know prior Bootstrap knowledge is required.\nThis does not mean I wont add lectures demonstrating how to use some of the framework PWA CLI tools over time.",
      "target_audience": [
        "This course is designed for developers that want to create web applications using the latest web platform technology and reach the largest amount of consumers."
      ]
    },
    {
      "title": "WebAssembly Beginner to Advanced",
      "url": "https://www.udemy.com/course/webassembly/",
      "bio": "Boost your web applications and run native code on the web with WebAssembly, Emscripten, Qt and more",
      "objectives": [
        "Learn what is WebAssembly and why it is useful",
        "How you can use it to speed up your web applications",
        "Compile C/C++ code to create Web Assembly (wasm) modules",
        "Use the powerful Emscripten compiler for local compilations and more",
        "Learn the low-level parts: memory and tables",
        "Create advanced applications using the Emscripten glue code",
        "Understand and use the WebAssembly Text Format (Wat)",
        "Call C/C++ functions from JavaScript",
        "Run JavaScript functions and expressions in C/C++",
        "Debug the created WebAssembly modules"
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with JavaScript is required",
        "Knowing basic C/C++ is useful",
        "Know how to use the terminal and navigate the file system"
      ],
      "description": "In this course you will learn what WebAssembly is, how can you use it and benefit from its capabilities.\nThis is a brand new technology which lets you to run your C/C++, Rust, AssemblyScript code (and many more to come) on the web by using assembly-like binary files.\nYou will learn:\nTo compile your C/C++ code to the WebAssembly binary format (wasm) using online compilers, and after this, the Emscripten toolkit locally.\nThe low-level building blocks of a WebAssembly module\nThe WebAssembly Text Format (wat) and use it to solve complex problems\nHow to use the Emscripten Module object and the generated glue code\nCall C/C++ functions from JavaScript and vice-versa\nDebug and launch the Emscripten web server\nCompile a Qt project to WebAssembly\nIf you want to be a part of the future of the web development, this is the best place for you to start. You will get to an advanced level of using the web assembly technology in no time.\n\n\nIt is recommended to have a basic understanding of Javascript and C/C++, but this course is beginner friendly, so it shouldn't be hard to understand for anybody. We will focus on both theory and practice to make sure you both understand the concepts and can apply them.",
      "target_audience": [
        "This course starts from the basics, but advances to complicated topics, so both beginners and those who have experience with WebAssembly have a lot to learn from it",
        "Web developers",
        "C/C++ developers who want to get into web development"
      ]
    },
    {
      "title": "Basic JavaScript: Build 4 Basic JavaScript Projects",
      "url": "https://www.udemy.com/course/practical-javascript-javascript-basics/",
      "bio": "JavaScript Basics from Scratch! A 100% Practical JavaScript Course with Quizzes, Exercises, Hands-On Practices &Projects",
      "objectives": [
        "Learn, Practice, Test and Apply JavaScript",
        "Learn JavaScript from Scratch",
        "Test your JavaScript Knowledge with Quizzes",
        "Solve JavaScript Exercises",
        "Complete JavaScript Hands-On Practices",
        "Develop JavaScript Projects",
        "Boost your confidence as a JavaScript Developer",
        "Make your webpages interactive"
      ],
      "course_content": {
        "Getting Started": [
          "Course Structure"
        ],
        "Learn JavaScript (JavaScript Basics)": [
          "How to Setup the Environment?",
          "Where to Write my JavaScript code and How to See the Output?",
          "How to Write the JavaScript Code?",
          "How to Deal with Data?",
          "How to Collect Data from and Display Data to the User?",
          "How to Deal with Collection of Data?",
          "How to Write Reusable Block of Code to Perform a Specific Task?",
          "How to Perform Operations on Data?",
          "How to Change the Order of Operations?",
          "How to Perform Different Actions in Different Conditions?",
          "How to Execute a Block of Code Repeatedly?",
          "How to Loop through an Array?",
          "How to Deal with Strings?",
          "How to Simulate Real-World Objects?"
        ],
        "Test Your Understanding (Quizzes)": [
          "Quiz 1: Setup",
          "Quiz 2: Basics",
          "Quiz 3: Variables",
          "Quiz 4: Data",
          "Quiz 5: Operators",
          "Quiz 6: Functions",
          "Quiz 7: Conditionals",
          "Quiz 8: Loops"
        ],
        "Code it Yourself (Exercises)": [
          "Exercise #1: Variables",
          "Exercise #2: Using prompt and alert",
          "Exercise #3: Arrays",
          "Exercise #4: Functions",
          "Exercise #5: Operators",
          "Exercise #6: Assignment Operators",
          "Exercise #7: Mathematical Operation",
          "Exercise #8: Operator Precedence",
          "Exercise #9: Conditional Statements",
          "Exercise #10: Loop through Array"
        ],
        "Practice JavaScript (Hands-On Practices)": [
          "Hands-On Practice: Reverse a String",
          "Hands-On Practice: Count the Number of Vowels",
          "Hands-On Practice: Find the Largest Number in an Array",
          "Hands-On Practice: Find the Factorial",
          "Hands-On Practice: Implement a Queue",
          "Hands-On Practice: Find the Longest Word",
          "Hands-On Practice: Display Multiplication Table"
        ],
        "Let's Develop (JavaScript Projects)": [
          "BMI Calculator",
          "Country Trivia",
          "Quote of the Day",
          "Digital Clock"
        ],
        "Bonus Section": [
          "Bonus Lecture: Special Offers on Other Courses!!!"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS would be helpful (not necessary)",
        "Google Chrome or any other modern web browser",
        "Komodo Edit or any other text editor"
      ],
      "description": "*** Learn, Test, Practice and Implement JavaScript ***\n\n*** Lots of JavaScript Examples, Quizzes, Exercises, Hands-On Practices and JavaScript Projects ***\n\nJust learning the concepts of a new programming language is not at all going to help you. After understanding the basics of a programming language, you should have the chance to test your understanding, code it yourself, practice it and finally apply your skills to develop real-world projects.\nThis course Practical JavaScript: JavaScript Basics helps you not only learn the basics of JavaScript, but also learn how to apply your JavaScript knowledge to come up with really unique web applications.\nUnlike most of the other JavaScript courses available online, this course focuses more on practice. This course is structured in such a way that as a student, you get the maximum coding experience which will boost your confidence to write JavaScript code on your own.\nThe whole course is structured in such a way that you get the chance not only to learn JavaScript concepts, but also to test your knowledge, practice what you have learned and implement applications.\nIn the first section Learn JavaScript (JavaScript Basics), you will learn the basics of JavaScript you need to know. This section follows a Problem-Solution approach. You will find the solution to a specific problem in each lecture. In this section, you will learn how to setup the JavaScript development environment, where and how to write your JavaScript code, how to use JavaScript variables and arrays to store data, how to use functions to make your code reusable, how to make decisions with conditional statements, how to repeat a task with loops and how to perform different operations.\nOnce you understand the basics, next is the Quiz time. You can test your understanding with a number of quizzes available in the Test Your Understanding (Quizzes) section. If you get many wrong answers and also if there is anything you don't understand, please revisit the corresponding lecture in the JavaScript Basics section before proceeding to the Exercises section.\nOnce you are thorough with the basics, proceed to the Code it Yourself (Exercises) section to try the exercises. A number of simple exercises are given that cover all the points explained in the JavaScript Basics section. Try each exercise on your own and once your are done, download the resource file and check whether your solution is correct.\nBy completing these sections, you will be confident enough to write your own JavaScript code. So, it will be easy for you to practice JavaScript. The Practice JavaScript (Hands-On Practices) section offers a number of practices that you will find useful while programming.\nThe last section is Let's Develop (JavaScript Projects). You will develop a couple of real-world JavaScript projects from scratch. The projects available as of now are\nBMI Calculator\nCountry Trivia\nQuote of the Day\nDigital Clock\nAs the section title says, this sections is going to boost your confidence to develop more JavaScript projects.\nThis course will be updated frequently with more lectures, exercises, hands-on practices and JavaScript projects.\nSo what are you waiting for? Join this 100% Practical JavaScript course and be a smart JavaScript developer.",
      "target_audience": [
        "Anyone who wants to learn JavaScript from scratch",
        "Anyone who wants to learn JavaScript by Coding",
        "Anyone who wants to learn JavaScript with Examples, Quizzes, Exercises, Hands-On Practices and Projects",
        "Anyone who wants to improve JavaScript skills",
        "Anyone who wants to improve their confidence as a JavaScript developer"
      ]
    },
    {
      "title": "Laravel classified ads web application from scratch",
      "url": "https://www.udemy.com/course/php-laravel-classified-marketplace-to-buy-sell-products/",
      "bio": "Laravel fullstack web development. Learn Laravel from basic. Make a complete classified ads with laravel and vuejs.",
      "objectives": [
        "Laravel from basic level",
        "Relationship in Laravel",
        "Eloquent in Laravel",
        "Vue js from basic",
        "Make a robust and complete classified ads application",
        "learn to make API",
        "Learn to make chat system",
        "Learn to integrate bootstrap admin template",
        "Learn to design database",
        "Learn to use Laravel fortify package",
        "Learn to make dynamic menu,submenu and child menu",
        "Learn to make different types of filters",
        "and many more"
      ],
      "course_content": {
        "Project overview": [
          "Overview of the project"
        ],
        "Project setup": [
          "install laravel"
        ],
        "Download project code": [
          "Download source code"
        ],
        "Laravel 8 for beginners": [
          "overview of folder structure of Laravel",
          "php artisan command",
          "Route basic",
          "Route group",
          "passing data to view",
          "if else and forelse statement in blade",
          "submit form and csrf token",
          "validation of form",
          "what is migration in laravel",
          "add new column to existing table",
          "Eloquent Save record",
          "Elqoquent fetch records",
          "Elloquent find() method",
          "Eloquent update record",
          "Eloquent delete record",
          "Eloquent first()",
          "pagination in laravel"
        ],
        "Laravel Eloquent Relationship": [
          "Laravel one to one relationship",
          "Laravel one to one inverse relationship",
          "Laravel hasMany() and belongsTo() relationship",
          "Laravel many to many relationship",
          "Laravel many to many relationship continue",
          "Laravel difference between attach,sync,syncWithOutDetaching"
        ],
        "Vuejs for beginners": [
          "section intro",
          "Hello vue",
          "v-if and v-else in vue",
          "vue lifecycle hooks",
          "list rendering",
          "fetch data from api",
          "click events",
          "submit form",
          "input binding",
          "component in vue",
          "props in vue js"
        ],
        "Project 1 : Simple Book app": [
          "Section introduction",
          "make a migration file",
          "make a form",
          "use bootstrap and design",
          "store record",
          "list all books",
          "validation of form",
          "add flash message",
          "edit book",
          "update book",
          "delete book",
          "extend template",
          "use pagination",
          "add image column",
          "display image",
          "update with image",
          "include fontawesome icons"
        ],
        "Project 2: Classified ads web application": [
          "Install laravel",
          "install bootstrap part 1",
          "solve npm error",
          "install bootstrap part 2",
          "make navbar"
        ],
        "Laravel authentication with Laravel Fortify": [
          "install laravel fortify",
          "register a user",
          "make a home page",
          "login user",
          "add more fields",
          "password reset",
          "Add flash message",
          "verify email"
        ],
        "Navbar and front page design": [
          "second navbar design",
          "Apply css",
          "make Carousel",
          "frontpage carousel"
        ]
      },
      "requirements": [
        "Good knowledge of PHP",
        "Basic knowledge of JS",
        "Basic knowledge of Bootstrap"
      ],
      "description": "This course was recorded in Laravel version 8\nThe best way to become a pro software engineer is to build real-world projects just like a classified ads web application- A place to buy & sell products.\nThis course is designed for anyone who wants to learn Laravel by making a project. Laravel is an open-source PHP framework designed to make developing web apps easier and faster through built-in features. These features are part of what makes Laravel so widely used by web developers.\nThere are a variety of tools and frameworks available to you when building a web application. However, Laravel is the best choice for building modern, full-stack web applications\nThis is Fullstack web development course that teaches you the basics of Laravel, eloquent in Laravel, relationships in Laravel, basics of Vue js. First, we will learn all the basic concepts of Laravel and then we will make a simple web app with Laravel. Once we finish the basic app we will make an advanced project:  classified ads web application.\nHow does this work?\nSeller will create a profile in this system, verify the account and post his/her ad of products that he/she want to sell. Buyers will filter the products based on various criteria such as prices, category, etc. When the buyer likes the product he/she will immediately contact the seller for the product via the phone number given there or via the messaging system. Admin will manage all the stuff going through this system.\nWhy you should take this course?\nOne of the best Laravel course on Udemy that takes you from zero level to advanced level\nYou Learn Laravel from basic level\nYou will make a basic app after completing the basic level.\nYou will learn Eloquent in Laravel\nYou will learn relationship in Laravel\nYou will learn the basic of Vue js\nYou will learn to make an advanced project Classified ads web application.\nSome important features of classified systems are as follows\nDynamic menu, submenu, and child menu\nDifferent types of filters: filter based on category, child category, subcategory, prices, and more.\nAdmin system\nMessaging system for communication between buyer and seller\nDynamic breadcrumbs\nAuthentication with Laravel fortify\nLogin with Facebook\nReporting spam ads\nSaving ads for future\nDynamic carousel\nMulti-user system\nDisqus comment system\nDependent dropdown for Menu, Submenu and Child menu, and Country, State, and City\nAll the modern features of the classified ads system",
      "target_audience": [
        "Anybody who want to learn fullstack web development with laravel",
        "Anybody who want to master laravel from basic level"
      ]
    },
    {
      "title": "WordPress Theme Customization 101 (for beginners)",
      "url": "https://www.udemy.com/course/wordpress-theme-customization-101-for-beginners/",
      "bio": "Beginner's guide to customizing a WordPress theme for a basic site. Real-world \"over my shoulder\" Training #1",
      "objectives": [
        "Customize any WordPress Theme",
        "Have a basic understanding of themes and how they interact with WordPress",
        "Understand how to find a \"starter\" theme to use in your site and customization",
        "Easily perform basic WordPress Theme customizations",
        "Easily identify what elements of a theme need to be tweaked or customized",
        "Have a basic understanding of how to perform simple Theme edits on any WordPress Theme, beyond the customization section",
        "Perform basic changes and tweaks to any WordPress Theme's files or CSS file",
        "Perform basic updates or changes to any visual element of a WordPress Theme"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "WordPress Theme Customization": [
          "Basic Understanding of WordPress Themes",
          "The Project & Initial Prep"
        ],
        "Basic WordPress Theme Customization": [
          "Finding a Base Theme to Build On & Initial Cusomizing",
          "Continued Customization & Basic Theme Editing",
          "Further Customization of Theme Elements"
        ],
        "WordPress Themes: Working With Custom Content Layout": [
          "Continue Customizations & Making Content Appear as Desired",
          "Making Content Look Good and Fit Needs - Continued"
        ],
        "WordPress Theme and Content Customization for Mobile Application & Course Wrapup": [
          "Making Theme Mobile Optimized & Wrap Up"
        ]
      },
      "requirements": [
        "How to setup a basic WordPress install or site",
        "Have a basic and/or beginner understanding of WordPress",
        "How to get around the WordPress Dashboard"
      ],
      "description": "WordPress Theme Customization 101 is a beginner's course to more advanced WordPress customization and changes.\nThis is the first of a series of \"watch over my shoulder\" style advanced WordPress theme customization training courses, where you get to follow along as I walk you through the exact process to perform specific and varied customizations on real-world websites that either I own/have created or have customized for clients.\nIn this first \"101\" course, I walk you through a very basic WordPress Theme Customization which involves a website I did for a client.\nThe first part of this course covers WordPress Theme basics and understandings so you have a good grip on how themes and WordPress work together with content, plugins, etc.\nAfter this basic understanding foundation is laid, I walk through the entire process, from a fresh install of WordPress with no customizations, to a finished site...covering everything along the way from identifying what we wanted the site to look like, functionality desired, etc...all the way through to a finished site that accomplishes the goals and made my client very happy.\nBesides the built-in theme customization changes we walk through, I also cover very simple and basic Theme editing, plugin usage, management, and content layout fixes/functionality...as well as making the site \"beyond responsive\" where it is able to detect the type of device accessing it and deliver customized content.\nAgain, this is the 101 course, the very first in a series of more advanced WordPress training courses aimed at the Beginner to Intermediate WordPress user.\nI ease you into the advanced customization so you're not overwhelmed and can easily get a grasp of each new lesson, theory, principle and step we are performing along the way.\nMy goal is to help you achieve a comfortable understanding of customizing WordPress themes to your liking and needs, so you can easily setup and customize your WordPress site to look, function, and perform exactly according to your desires, goals and needs.",
      "target_audience": [
        "Anyone who wants an easy to follow course on WordPress Theme Customization Basics",
        "WordPress Beginners",
        "WordPress Users",
        "Anyone Wanting to Customize WordPress Themes",
        "Anyone Wanting to Begin Working With WordPress Theme Customization"
      ]
    },
    {
      "title": "Master GraphQL With Java Spring Boot And GraphQL Testing",
      "url": "https://www.udemy.com/course/master-graphql-with-spring-boot-java-and-testing/",
      "bio": "Learn how to build GraphQL application with spring boot java and Integration testing of graphql",
      "objectives": [
        "You will learn What is GraphQL",
        "You will understand difference between GraphQL and REST API",
        "You will learn How to setup GraphQL with spring boot application",
        "You will learn what is QueryResolver?",
        "You will learn what is MutationResolver?",
        "You will learn what is FieldResolver?",
        "You will learn How to integrate with Database",
        "You will learn Best practices of GraphQl schema",
        "You will learn How to write Integration testcase for Graphql Query and mutation",
        "You will learn what is Subscription in graphql",
        "You will learn How to create custom scalar types in graphQL",
        "You will learn How to perform Input validation in GraphQL",
        "You will learn How to create Custom @Directive in GraphQL",
        "You will learn How to solve N+1 query problem - DataLoader"
      ],
      "course_content": {
        "Introduction": [
          "Why GraphQL",
          "GraphQL with spring boot project setup - schema first approach",
          "Source Code"
        ],
        "GraphQL Query Introduction - SDL": [
          "HelloWorld GraphQL Query",
          "Parameterized GraphQL query",
          "Return Object type from graphQL query",
          "Return Array from graphQL query"
        ],
        "GraphQl Query deep dive - Spring data JPA": [
          "Introduction of FieldResolver and schema linking",
          "Added Author and Post JPA model",
          "Integration of Author and Post Service with GraphQl resolvers",
          "Post ID null issue"
        ],
        "Pagination in GraphQL - Spring data JPA": [
          "Post type Pagination Query",
          "Connect with database"
        ],
        "GraphQL Mutation - SDL": [
          "Create Author GraphQL Mutation",
          "Save Author and integrate author service with resolver",
          "Create Post GraphQL mutation and resolver",
          "Save Post data in database"
        ],
        "Refactoring...": [
          "Refactor graphql schema and resolver package"
        ],
        "GraphQL Integration Testing with inMemory database": [
          "Author Query Integration test - GraphQL SDL",
          "Post Query Integration graphQL test",
          "Create Author GraphQL Mutation Integration test",
          "Create Post GraphQL mutation Integration test"
        ],
        "More on GraphQl query and field resolver - Spring data JPA": [
          "Field resolver explained",
          "Getting post count by author from database",
          "Integration test of PostCount resolver",
          "Parameterized FieldResolver - comment type",
          "Getting comments from database",
          "Post and Comment Relationship",
          "Getting comments of post from database",
          "Comment graphQl query - pagination",
          "Comment to Author Schema Linking",
          "Comment to Author Schema Linking"
        ],
        "GraphQL Subscription - Real Time Communication": [
          "Recent post Subscription - Live Query",
          "Live Query for getting recent Post Created by particular Author",
          "Create Comment Mutation",
          "Live Query for getting recent comment of particular post",
          "Issue"
        ],
        "Exception Handling in GraphQL": [
          "Error handling with GraphQlError interface",
          "Custom GraphQL Error handler",
          "Refactoring time - Part 1",
          "Refactoring time - Part 2"
        ]
      },
      "requirements": [
        "Knowledge of Spring Boot - beginner level"
      ],
      "description": "Are you someone who want to learn GraphQL with spring boot java and how to test GraphQl application then you are in right place :).\n\n\nThis course enables you as a GraphQL engineer who can explain graphQL in simple words to anyone.\n\n\nThroughout the course, we will practice a lot writing graphql schema and we will understand how the graphQL ecosystem works with spring boot.\nYou will learn what is GraphQl and how to set up the graphQL project with spring boot.\n\n\nWhat is GraphQL?\nA query language for your API\nGraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.\n\n\nAsk for what you need,\nget exactly that\nSend a GraphQL query to your API and get exactly what you need, nothing more and nothing less. GraphQL queries always return predictable results. Apps using GraphQL are fast and stable because they control the data they get, not the server.\n\n\nIn this course, you will learn:-\nWhat is GraphQL?\nDifference between GraphQL and REST API\nWhat is Query in GraphQL?\nWhat is Mutation in GraphQL?\nWhat is Schema in GraphQL?\nWhat is QueryResolver in GraphQL?\nWhat is MutationResolver in GraphQL?\nWhat is FieldResolver in GraphQL?\nHow to Integrate GraphQL application with database using Spring Data JPA.\nHow to write an integration test for graphQL.\nHow to maintain graphQL schema.\nWhat is Voyager in graphQL?\nWhat is Subscription in graphQL? - Real time communication\nHow to handle Exception in graphQL\nHow to create custom scalar type in graphQL\nHow to perform input validation in graphQl\nHow to transform field value with @Directive\nHow to solve N+1 query problem in graphql",
      "target_audience": [
        "Beginner Java developers curious about GraphQL"
      ]
    },
    {
      "title": "Spring Boot: A quick tutorial guide",
      "url": "https://www.udemy.com/course/spring-boot-tutorial/",
      "bio": "Spring Boot application development with restful micro service, FREE 6-month IDE.",
      "objectives": [
        "Build web apps using Spring boot",
        "Integrate Rest API with Spring boot",
        "Perform CRUD operations on Database"
      ],
      "course_content": {
        "Background": [
          "Setting up requirements",
          "Maven overview",
          "Set up Maven project for Spring Boot"
        ],
        "Getting Started": [
          "First spring boot application",
          "Webapp with Spring boot",
          "Webapp with Spring boot continues (JSP support)",
          "Application properties",
          "ServletInitializer",
          "Create war file from maven project",
          "Meet your Author",
          "Linkedin and Instagram links",
          "Project files"
        ],
        "Spring MVC + Restful web service": [
          "Setting up restful webapp",
          "Defining the rules",
          "Bootstraping Spring boot project",
          "Checkout \"Our Full Stack Java Developer Course\"",
          "Project files"
        ],
        "Building restful micro-service with Spring boot": [
          "Add view all posts functionality",
          "Add view specific post functionality",
          "Rest client - Postman",
          "Add post functionality",
          "Fixing the issue",
          "Perform update operation",
          "Perform delete operation",
          "Connect on LinkedIn, \"It's good!\"",
          "Project files"
        ],
        "Restful micro-service with database connectivity": [
          "Setting up",
          "Installing MySQL",
          "Setting up connection",
          "Create database table",
          "Configuring entity class",
          "Updating Service layer",
          "Curd operations",
          "Discussion forum",
          "Project files"
        ],
        "Micro-services with Spring boot": [
          "Let's understand micro service again",
          "Setting up Spring MVC project",
          "Spring boot micro service",
          "Communicate with micro service",
          "Improve app with best practices",
          "Improve the app - Customize White-label Error Page",
          "Improve the view - add JSTL support",
          "Micro service discovery service overview",
          "Create Eureka server",
          "Eureka client",
          "Load balance",
          "About Project files"
        ],
        "Bonus": [
          "About spring.jpa.hibernate.ddl-auto",
          "IntelliJ IDEA FREE access for 6 months",
          "Spring DevTools",
          "Deploy war file on Tomcat web server",
          "Consider 5 star rating",
          "Offers",
          "Interview Tips",
          "Thanks for taking this course"
        ]
      },
      "requirements": [
        "Background knowledge of Spring framework",
        "Knowledge of Java"
      ],
      "description": "Welcome to the ultimate Spring Boot quick tutorial guide!\nIf you're looking to create web applications quickly and efficiently, then this course is tailor-made for you. In this comprehensive program, we will take you from the basics all the way to advanced topics like database connectivity, ensuring that you not only gain valuable knowledge but also find the learning experience engaging and enjoyable.\nThroughout this course, you will:\nUnderstand the inner workings of the Spring Boot framework, providing you with a solid foundation for building robust web applications.\nLearn how to develop web APIs using the RESTful API approach, enabling you to create powerful and scalable applications.\nFamiliarize yourself with the Spring MVC pattern, a popular architectural design that facilitates the development of flexible and maintainable code.\nGain access to bonus videos on integrating Spring Boot with JSP, offering you additional insights into enhancing your web application development skills.\nMaster the art of connecting your applications with databases and performing CRUD (Create, Read, Update, Delete) operations, ensuring seamless data management.\nGet a FREE 6-month subscription for IntelliJ IDEA Ultimate or another\nWhy should you invest your time in learning Spring Boot?\nBy acquiring proficiency in Spring Boot, you can bolster your professional profile, as this in-demand skill will position you to build web applications rapidly and efficiently. Whether you are an experienced developer or an aspiring IT professional, mastering Spring Boot is an excellent way to advance your career prospects and become a sought-after component developer in the web application industry.\nWhy learn from me?\nNavigating the complexities of Spring Boot can be daunting, which is why I offer an easy-to-follow and straight-to-the-point approach in this course. Drawing on my extensive teaching experience spanning over eight years and instructing more than 1,420,000 students, I bring a wealth of knowledge and industry expertise to the table.\nAdditionally, I am an accomplished web application developer, ensuring that the instruction you receive is practical, relevant, and immediately applicable. I prioritize your mastery of these concepts and provide numerous opportunities for hands-on practice, using simple examples and a step-by-step methodology.\nYour satisfaction is guaranteed!\nWe understand that embarking on a learning journey can be a significant commitment, which is why this course comes with a 30-day money-back guarantee. If, for any reason, you are not completely satisfied with the course after purchasing it, please let us know, and we will issue a 100% refund, no questions asked. With this risk-free opportunity, you have nothing to lose.\nSo why wait? Enroll in this course, \"Spring Boot: A Quick Tutorial Guide,\" and start confidently building web applications using Spring Boot today!\nJoin me on this exciting adventure! I look forward to welcoming you to the course.",
      "target_audience": [
        "Java developers",
        "Spring framework developers",
        "Future web application developers"
      ]
    },
    {
      "title": "Build 30 Web Projects with HTML, CSS, and JavaScript",
      "url": "https://www.udemy.com/course/build-30-web-projects-with-html-css-and-javascript-2023/",
      "bio": "HTML, CSS, and JavaScript. Build 30 Web Projects with HTML, CSS, and JavaScript",
      "objectives": [
        "30+ Web Projects with pure HTML, CSS, and JavaScript",
        "Modern HTML5, CSS3, and JavaScript Features",
        "CSS3 Animations, Transforms, and Transitions",
        "Modern Techniques and Tricks",
        "How to Create Modern Web Design Templates"
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "Setup"
        ],
        "Project - Spotify Music Player": [
          "Creating HTML Markup for the Player",
          "Styling Player",
          "Adding JavaScript to Make the Player Work"
        ],
        "Project - Product Card": [
          "Create and Style Headphones Product Card"
        ],
        "Project - Navigation Menu": [
          "Build CSS Navigation Menu with Hover Effect"
        ],
        "Project - Success / Fail Modal Box": [
          "Create Success / Fail Popup Message"
        ],
        "Project - Sign In / Sign Up Form": [
          "Create Sign In / Sign Up Form with Animated Illustrations"
        ],
        "Project - Website Header": [
          "Build a Header of the Website"
        ],
        "Project - Blog Card": [
          "Create and Style Modern Blog Card"
        ],
        "Project - Navigation Menu with Circles": [
          "Build Navigation Menu with Circles"
        ],
        "Project - Website Header with CSS Gradients": [
          "Create and Style Website Header with Cool and Modern CSS Gradients"
        ]
      },
      "requirements": [
        "Text Editor",
        "Modern Web Browser",
        "Strong Understanding of HTML and CSS",
        "Basic Knowledge of JavaScript"
      ],
      "description": "30 Web Projects with HTML, CSS, and JavaScript\nWelcome to the brand new course, where you can learn about how to create modern and beautiful web projects and templates, If you want to develop and customize your portfolio, become an experienced developer, and get hired, then this is the right course for you.\nWe will build together 30 different creative web projects with three core technologies HTML, CSS, and JavaScript.\nIf you have some basic knowledge of these technologies and still have some trouble creating your own web projects, or if you want to level up your developer and designer skills, you come to the right place.\nWe will build 30 different web projects and they will be full of modern, nice, and beautiful effects and designs.\nWe will start with relatively simple projects and we will go through some advanced ones as well.\nWe can guarantee that you will master front-end web development after completing this course.\nUsing this course, you can get the inspiration that will help you to enhance your projects and customize your portfolio.\nMastering just these core technologies of Front-end web development, you can create awesome and modern themes and simply get hired.\nAlso, you will have enough knowledge to move on and learn other technologies like some front-end frameworks and libraries, which are popular and in high demand today.",
      "target_audience": [
        "Students who want to practice in three core technologies - HTML, CSS, and JavaScript",
        "Students who have the basic knowledge of Front End Web Development and want to develop their skills",
        "Students who want develop Web Development and Design skills"
      ]
    },
    {
      "title": "WebSockets Mastery - Beginner to Advanced",
      "url": "https://www.udemy.com/course/websockets/",
      "bio": "Learn about WebSockets in JavaScript. Creating WebSocket client models, and running websocket servers!",
      "objectives": [
        "What are WebSockets",
        "When to use WebSockets",
        "How to work with WebSockets",
        "Creating production applications with WebSockets",
        "Internal working of WebSockets"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting up development environment - Part 1",
          "Setting up development environment - Part 2"
        ],
        "Basics": [
          "What are WebSockets?",
          "Setting up WebSocket Server",
          "Setting up WebSocket Server callback",
          "Setting up client for WebSocket server",
          "Implementing message event handler",
          "Demonstration of client-server working WebSocket",
          "Implementing echo back server"
        ],
        "Kickstart to projects": [
          "Creating an app - part 1",
          "Creating an app - part 2",
          "Broadcasting to all connected connections",
          "readyState in WebSocket",
          "Switching to single server",
          "verifyClient",
          "verifyClient alternative"
        ],
        "Group Chat": [
          "New Project",
          "Group Chat - Part 1",
          "Group Chat - Part 2",
          "Group Chat - Part 3",
          "Group Chat - Part 4",
          "Group Chat - Part 5",
          "Group Chat - Part 6",
          "Group Chat - Part 7",
          "Group Chat - Part 8",
          "Group Chat - Part 9",
          "Group Chat - Part 10"
        ]
      },
      "requirements": [
        "Basic understanding of HTML/CSS",
        "Basic understanding of JavaScript"
      ],
      "description": "WebSockets is a low latency duplex communication running on TCP between a client-server model which allows easy communication and programming of real-time applications like online games and chat. In this course, we'll learn all about WebSockets, what they are and how they work! You'll know:\nWhat WebSockets are\nHow they work internally\nHow to create production code with them\nVarious modes of WebSocket working\nCreating WebSocket servers\nCreating WebSocket clients\nManaging a WebSocket codebase\nCreating real apps using WebSockets\nThis course won't require any deep knowledge whatsoever. Everything would be taught from the basics, from development environment setup to coding websockets professionally, we got you!\nSupport is available round the clock, you get a free 30-day moneyback guarantee too!",
      "target_audience": [
        "Anyone who wants to work with realtime applications",
        "Anyone who wants to work with WebSockets",
        "Anyone who wants to upgrade their web development skills"
      ]
    },
    {
      "title": "Angular - Complete Essential Guide",
      "url": "https://www.udemy.com/course/angular-7-complete-essential-guide/",
      "bio": "Let's learn and understand Angular core concepts in details by watching presentation and writing code in labs.",
      "objectives": [
        "Develop modern, complex, responsive and scalable web applications with Angular 8",
        "Fully understand the architecture behind an Angular 8 application and how to use it",
        "Use their gained, deep understanding of the Angular 8 fundamentals to quickly establish themselves as frontend developers",
        "Crack angular job interviews easier",
        "Create Angular Apps From Scratch and scale it up to any level",
        "Learn Angular with Firebase to build Realtime Web and Mobile Apps"
      ],
      "course_content": {},
      "requirements": [
        "HTML",
        "CSS",
        "JavaScript",
        "TypeScript"
      ],
      "description": "Angular was designed by Google to address challenges programmers face building complex, single-page applications. This JavaScript framework takes care of the back end so you can take care of the client side. Angular 8 Essential Training introduces you to the essentials of this \"superheroic\" framework, including powerful features such as rich templates, change detection, user interactions, two-way data binding, comprehensive routing, and dependency injection.\nAwais Jamil steps through the framework one feature at a time, focusing on the component-based architecture of Angular. Learn what Angular is and what it can do, as Awais builds a full-featured web app from start to finish. After mastering the essentials\nTopics Included:\nWhat is an Angular ?\nAngular Project Structure\nAngular CLI\nAngular Console\nModules\nComponents\nDependency Injection\nServices\nBuilding Events and Properties\nGetting Data to Components\nTemplate Forms\nReactive Forms\nRouting\nHTTP Module\nAngular Deployment\nWe will build two project :\nRedit Clone\nMobile App Using Angular And IONIC\nThis course is packed with content and takes a very easy approach to explain all the core concepts of Angular. Learning by visual animated slides will make you understand the concepts like Modules, Components, Pipes, Services and Directives. We cover lazy loading with angular which makes your application perform at it's  full speed.\n\n\nI am really excited to have you onboard. Let's get started with Angular Complete Essential Guide.",
      "target_audience": [
        "JavaScript Developer wants to Dive Deep into Angular Framework and Build Single Page Web Apps and Mobile App."
      ]
    },
    {
      "title": "Laravel 8.X and 7.X from beginners to master.",
      "url": "https://www.udemy.com/course/laravel-7x-from-beginners-to-master/",
      "bio": "Build An E-commerce Website By using Stripe and PayPal Api for payment. Learn PHP Framework from A to Z.",
      "objectives": [
        "How To Install Laravel",
        "Learn Basic Routing",
        "Learn How To Use PHP Artisan Commands",
        "Learn How To Create Models & Controllers",
        "Learn How To Create Views Using Blade",
        "Connect Website To Database & Create Tables",
        "How To Create A Complete CRUP APP In Laravel"
      ],
      "course_content": {},
      "requirements": [
        "Intermediate PHP knowledge",
        "Basic Object Oriented Programming Skills",
        "Basic Understanding Of Html & Css"
      ],
      "description": "In this course, we're gonna learn from scratch and step by step, how to create a complete Laravel E-commerce WebApplication with seven different credit cards for payment: Visacard, MasterCard, AmericanExpress, UnionPay, Diners Club, JCB, and Discover, and PayPal.\nWe're gonna learn :\nHow to create and view products, products categories, sliders;\nHow  to select a product by category;\nHow to add products to cart;\nHow to update products item quantity and how to remove item products;\nHow to customize checkout form for online payment with stripe API;\nHow to customize checkout form for online payment with PayPal API;\nHow to save and display Client orders;\nHow to export Client orders from Laravel to PDF.\nIn this course, we will learn from scratch, step by step, the basics of Laravel. We are going to code with Laravel 7.X.\nWe will learn:\nOn setting up a Laravel project. We will see in great detail how to set up a Laravel project;\nThe Model View Controller concept;\nThe Basic Routing;\nWith much more details on the Controllers (extending between models and views);\nHow to use the Blade templating template in a Laravel project. Which has the role of being able to avoid the reuse of similar HTML codes;\nWith much more detail on models and migrations;\nLaravel Collective is a form system clean for Laravel.",
      "target_audience": [
        "Intermediate PHP Developer",
        "Web Developers Who Want to Take Their Skills To A Higher Level",
        "Web/Software Developers Who Want To Learn Laravel",
        "Junior/Senior PHP Developers Who Want Learn Laravel"
      ]
    },
    {
      "title": "Storybook Bootcamp | Visual Testing Course",
      "url": "https://www.udemy.com/course/storybook/",
      "bio": "Build bulletproof UI components faster with Storybook and ensure consistent user experiences",
      "objectives": [
        "What is Storybook, what are the benefits of using it and how to add it to your React project",
        "Develop UI components in isolation for React using Storybook",
        "How to use Essential addons to extend Storybook’s UI and behavior",
        "Focus on Component development to stop reinventing the wheel. Get a birds-eye view of your UI library to find components to reuse in your project."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Node + ReactJS (know how to create a project and how to write a basic component). This is required because we will be doing all the Storybook examples with a ReactJS Integration)"
      ],
      "description": "Storybook is a tool for UI development. It makes development faster and easier by isolating components. This allows you to work on one component at a time. You can develop entire UIs without needing to start up a complex dev stack, force certain data into your database, or navigate around your application. In this course, you will be able to learn how to use this amazing tool and we will be looking at the features available on Storybook using React JS.\nStorybook helps you document components for reuse and automatically visually test your components to prevent bugs. Extend Storybook with an ecosystem of addons that help you do things like fine-tune responsive layouts or verify accessibility.\nStorybook integrates with most popular JavaScript UI frameworks (React, Angular, Vue, and more) and (experimentally) supports server-rendered component frameworks such as Ruby on Rails.",
      "target_audience": [
        "Front-end developers interested in learn about a tool that can help you for visual testing porpouses.",
        "React developers that wants to improve their code and wants to ensure they are delivering a high quality product"
      ]
    },
    {
      "title": "React & Django Full Stack: Advanced",
      "url": "https://www.udemy.com/course/react-django-full-stack-advance/",
      "bio": "React front-end web app and Django back-end API - advance modern concepts",
      "objectives": [
        "React framework",
        "Django framework",
        "Full stack app"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Django",
        "Basic knowledge of React"
      ],
      "description": "Welcome to this Full stack advance course. This course is mainly based on Django and React advanced features. We will build full applications including backend restful API and front-end web app.\nIn this tutorial, we will build a real-life application. This course it’s a process of building the app. It's not gonna be one of those 'todo lists' or simple 'full crud' apps. We will start building that from scratch and we end up with a fully working full-stack app. Building that application will give an opportunity to explain a ton of different concepts and technics for back-end Django and front-end React.\nWe will cover so many things in this course that it's hard to list all of them. But let me give it a try. we will do:\nsetting up Django and React, working with DB models and migrations, Django admin, fetching data from front-end, displaying formatted data, styling with material UI library, creating layouts, CSS variables, theming, react-router, links, and navigation with history, URL params, creating custom services, working with build-in React hooks as well writing few of our own, multiple serializers for one model, nested serializers, working with dates and time, formating and converting dates to and from UTC, displaying icons, styling components, authentication token, user profile, login, logout, and register users, react context, local storage, uploading a photo from react to Django, handling static and media files in Django, React Prop types, change a user password, user notifications, permissions, one to one, one to many and many to many relationships in DB, serializer method field, join and leave groups, the comments section in UI, custom API endpoints, UI forms with multiple different elements, DB aggregation in Django\n...and many many more.\nIf you have already basic knowledge of Django and React, this course will give you solid knowledge about them in detail. Also, it will provide you many solutions that you can adapt to your own app.",
      "target_audience": [
        "People who would like to extend their knowledge about Django and React frameworks"
      ]
    },
    {
      "title": "Chrome Extension Development - The Basics",
      "url": "https://www.udemy.com/course/chrome-extension-development-the-basics/",
      "bio": "The complete guide to developing and publishing Google Chrome Extensions using the latest Manifest V3",
      "objectives": [
        "Understand the basic structure and functionality of Chrome extensions using Manifest V3",
        "Setting up, building, and debugging Chrome Extensions with best practices",
        "All Chrome Extension fundamental concepts such as background scripts, content scripts, browser actions, and more",
        "Step-by-step building of a fully functional example Chrome Extension",
        "Learn how to prep your extension for publishing, how to publish, and tips on growing it",
        "All the skills needed to build your own extensions and real-world examples"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Project files & editor setup"
        ],
        "What is a Chrome Extension?": [
          "Introduction to Chrome Extensions",
          "What is the manifest file?"
        ],
        "Understanding the fundamentals": [
          "Creating a manifest file",
          "Testing a Chrome Extension in Developer mode",
          "Understanding extension permissions",
          "Browser actions and commands",
          "Background scripts and service workers",
          "Working with tabs",
          "Adding to the context menu",
          "Using content scripts to inject code and styles",
          "Message passing",
          "Using the Sidepanel",
          "Using third party resources"
        ],
        "Building a welcome tab extension": [
          "Extension overview",
          "Writing the manifest and initial code",
          "Adding the JS & background scripts",
          "Adding storage options"
        ],
        "Building a search extension": [
          "Extension overview",
          "Writing the manifest and initial code",
          "Adding the background and context menu scripts",
          "Adding a popup with storage options"
        ],
        "Publishing and Growing Chrome Extensions": [
          "Preparing the extension for publishing",
          "Creating a Developer Account and publishing",
          "Chrome Web Store tips & tricks",
          "Pushing new updates"
        ],
        "Next steps": [
          "Converting to other browsers",
          "Thank you!"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic foundational knowledge of HTML, JS, and CSS"
      ],
      "description": "This course will teach you how to build Chrome extensions, which are small software programs that customize the browsing experience on Google Chrome. You'll learn how to create and publish your own extensions from start to finish, as well as how to use the Chrome API to access and alter browser functionality.\nWhether you are a new developer or an experienced one, this course will introduce you to extension development. Throughout the lectures, we will cover all the fundamental concepts of Chrome Extensions with easy-to-follow examples, followed by creating 2 fully functional example extensions from start to finish that applies the fundamental knowledge (as well as some introductory more advanced concepts). We will close out the course by walking through the Chrome Web Store publishing process and ensuring you have everything you need to know to get it approved in the Web Store as well as some tips & tricks to increase your odds of success and grow your extension.\nBelow is a partial list of topics covered:\nManifest V3 overview\nBrowser actions and commands (including popup menus)\nBackground scripts & service workers\nTab management\nContent scripts\nContext menus\nPermission management\nUsing user storage\nAnd much more!\nI built this course based on years of working with extensions so you can hit the ground running on your next extension project. Sign up today and join me as we cover all things Chrome Extension-related!",
      "target_audience": [
        "Any level developer looking to jump into Chrome Extension development for the first time"
      ]
    },
    {
      "title": "Develop your Google Chrome Extension and Firefox Plugin",
      "url": "https://www.udemy.com/course/develop-your-own-chrome-extension-and-firefox-plugin/",
      "bio": "learn to build simple to Advanced functionalities, and publish it on Chrome webstore or Firefox browser",
      "objectives": [
        "At the end of this course, students will be able to develop their own advanced CHROME extension or FIREFOX plugin and apply all the knowledge gained.",
        "You would learn about front end web development languages used for developing browser extensions",
        "You will learn about about HTML, CSS, JavaScript",
        "You will learn to deploy Chrome extension and Firefox plugin"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Exploring Popular Extension Features",
          "Quick Development and Deployment",
          "What is a browser Extension or Plugin? (Optional Reading)"
        ],
        "HTML and CSS (Optional)": [
          "Part-1 HTML {intro, tags, char formatting, etc}",
          "Part-2 HTML {List, Table, Hyperlink, etc}",
          "Part-3 HTML {Frame, frameset, etc}",
          "Part-4 HTML {Forms, etc}"
        ],
        "CSS": [
          "CSS (Cascading Style Sheet)"
        ],
        "JavaScript (Optional)": [
          "Part-1 JavaScript {Intro, msgs, etc}",
          "Part-2 JavaScript {Operators, Conditionals}",
          "Part-3 JavaScript {Event Handling}",
          "Part-4 JavaScript {Form Validation}"
        ],
        "EXTENSION Examples": [
          "Ex-1 Page Background Redder on click",
          "Ex-2 Display Recent History"
        ],
        "Publishing on Marketplace": [
          "Publishing on Chrome webstore",
          "Publishing on Firefox store",
          "Fundamentals of Browser Extension"
        ]
      },
      "requirements": [
        "No prerequisites at all. If you have little knowledge of HTML, its a perk but not compulsory."
      ],
      "description": "Welcome to this course, where you will learn how to develop your very own Chrome Extension and Firefox plugin from scratch. A lot of people are using at least a few of the browser extensions, that could be used to enhance their web experience, block ads, run some custom scripts, change UI or colors of the web pages, put cookies or notifications, etc. There is a huge market for browser extensions, but there are not as many developers active in this domain, compared to Mobile app development, or web development. Although it involves the similar skillset as a web developer, where you would be using HTML, JavaScript and CSS. But still a very few developers actually try to explore this domain in particular.\nIf you are a student, or a web developer, you can leverage your skills to create a browser extension. In this course you will be learning everything right from the beginning, so you are need not to be an expert before taking this course. If you feel, you are comfortable with a few topics you will be learning in this course, feel free to skip a few lectures or sections. But don't skip the development and publishing sections, as you will learn with real life example of how you can develop and extension and publish it online for Google chrome and Firefox. You can skip sections marked as optional, if you already know how to do it.\nIn this course, you will learn the basics of the browser extension, a few popular extensions. Next you will learn front end development with HTML (Hypertext Markup Language), CSS (Cascading Style Sheet) and JavaScript. After you have developed these skills by developing a few functionalities, implemented in a web page or website, you can proceed to the later sections where you will learn with real life examples of developing a chrome extension and deploying it online.\nWhat is an extension?\nAn Extension or browser extension or browser plugin is packaged set of code that alters the way webpages are rendered in a browser. For example- Changing colors of a web page or using dark mode.\nHow to create an extension?\nYou can create an extension by using front end web development technologies such as HTML, CSS, and Javascript. You may write a manifest file in json for the specific browser such as google chrome or Mozilla Firefox.",
      "target_audience": [
        "Anyone who wants to develop his/her own CHROME Extension or a FIREFOX Plugin, and learn about them in a comprehensive manner."
      ]
    },
    {
      "title": "Asp.Net Core 3 Blazor The Complete Guide.",
      "url": "https://www.udemy.com/course/getting-started-with-blazor/",
      "bio": "Getting Started with the new Microsoft SPA Framework .",
      "objectives": [
        "After following this course you will be able to build an entire application using only .NET. So your application will be fully written in C#."
      ],
      "course_content": {},
      "requirements": [
        "To Follow this course You have to be familiar with C# ,Razor and some Javascript , also having some ideas about Angular concepts may be helpful."
      ],
      "description": "Blazor is the new Microsoft Framework for Building Single Page Applications using only .NET  and C# . With Blazor there is no need to use Java script code anymore  But Only C# code From the back to the front End. Blazor is the new Microsoft Framework that brings .NET to the browser. If you have previous  experience with any other javascript framework such as Angular or React you will find  Blazor concepts easy to grasp.\n\n\nBlazor is a new Technology and it is in preview for the time being , and many updates will occur on it , and so is this course , it will be updated everytime new updates occurs on Blazor to keep you update to date with this new Microsoft technology.",
      "target_audience": [
        "This course is for Web developers who wants To do build Web applications from the Back to the FrontEnd using C#."
      ]
    },
    {
      "title": "Create RESTful APIs using PHP, POSTMAN and MySQL: Secure API",
      "url": "https://www.udemy.com/course/create-restful-apis-using-php-postman-and-mysql-secure-api/",
      "bio": "Build dynamic database-backed Restful web APIs.. Use CSS, PHP, MySQL to build web services JWT and CRUD applications.",
      "objectives": [
        "Build coding for Secure Restful APIs",
        "Get a job as a junior web API developer using Generative AI prompts",
        "Create dynamic database web applications for your business needs",
        "Start their own online business by creating Mobile Web API services",
        "Master client-end design using CSS3, back-end development Restful API, PHP coding with MySQL",
        "Apply JSON Object, RestFul API, MySQL and CSS3 on real-world web service tasks",
        "Create fully function web APIs apps using PHP Coding, MySQL and CSS",
        "Identify the requirements on Project to write APIs for your apps and projects",
        "You will learn to apply 2 real world projects example source code",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to ask a great questions",
          "Introduction CSS",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "CSS Syntax",
          "Creating a first page with CSS Style",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "CSS Basic": [
          "Inline CSS",
          "Internal CSS",
          "External CSS",
          "CSS Classes",
          "CSS IDs",
          "Colors",
          "Backgrounds",
          "Floating",
          "Positioning",
          "Margins",
          "Padding",
          "Borders",
          "CSS color style tag exercise"
        ],
        "CSS Intermediate": [
          "Styling Text",
          "Aligning Text",
          "Styling Links",
          "Font Family",
          "Font Styles",
          "Applying Google Fonts",
          "Box Model",
          "Icons",
          "Tables",
          "Navigation-Menu",
          "Dropdowns"
        ],
        "CSS Advanced": [
          "Advanced Selectors",
          "Forms",
          "Website Layout",
          "Rounded Corners",
          "Color Keywords",
          "Animations",
          "Pseudo Classes",
          "Gradients",
          "Shadows",
          "Calculations",
          "Creating Responsive Page"
        ],
        "CSS Expert": [
          "Button Styles",
          "Pagination",
          "Multiple Columns",
          "Image Reflection",
          "UI - UX Design",
          "Social Media Icons",
          "External CSS Style adding"
        ],
        "Restful API Introduction": [
          "Section Introduction",
          "Installing XAMPP for PHP, MySQL and Apache",
          "Installing Code Editor(Visual Studio Code)",
          "Postman API platform installation",
          "Composer installation",
          "Creating PHP Project on XAMPP",
          "Hello World Program",
          "DOWNLOAD these demo project files for Real - World practice"
        ],
        "Restful API Basic": [
          "What is PHP",
          "What is Restful API",
          "HTTP request GET, POST, PUT or DELETE",
          "REST API project structure"
        ],
        "Project1: Restful API Authentication": [
          "Create Database and table",
          "Creating Project forms and folders",
          "Database Connection",
          "JSON Web Token Handler(JWT)",
          "Auth Middleware Token Validation",
          "Register form",
          "Login form",
          "User Token Authorization check form"
        ],
        "Project2: Restful API - MySQL": [
          "Create Database and table",
          "Adding Data to table - insert query",
          "MySQL Select query",
          "MySQL Update query",
          "MySQL Delete query",
          "Get Project2 Source Code",
          "Create Database Connection"
        ],
        "Restful API – Web API Services": [
          "Create Items Class PHP File",
          "Create Method form",
          "Creating Record Using Restful API",
          "Reading Method form",
          "Reading Record Using Restful API",
          "Update Method form",
          "Update Record Using Restful API",
          "Delete Method form",
          "Delete Method Using Restful API",
          "Coding Exercise",
          "Solution for Coding Exercise",
          "SEO friendly Request URLs of REST API"
        ]
      },
      "requirements": [
        "Basic coding needed(optional). You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic on APIs"
      ],
      "description": "The \"Create RESTful APIs using PHP, POSTMAN, and MySQL: Secure API\" course is a hands-on guide for developers looking to build secure and scalable RESTful APIs. Whether you're new to API development or looking to enhance your skills, this course will teach you how to create powerful APIs using PHP, POSTMAN, and MySQL while ensuring data protection and secure access.\n\n\nYou’ll start by understanding the fundamentals of RESTful API architecture, and how to design and build APIs that adhere to industry standards. Learn how to create endpoints for handling GET, POST, PUT, and DELETE requests, manage query parameters, and send proper responses in JSON format.\n\n\nThe course covers PHP for developing server-side logic, including handling user input, processing requests, and managing authentication. You’ll learn to secure your API with JWT (JSON Web Tokens) for user authentication, and implement role-based authorization for access control.\n\n\nNext, you’ll explore MySQL for database management. Learn how to store and retrieve data efficiently, use SQL queries, and protect sensitive data through secure database practices.\n\n\nThe course also integrates POSTMAN for testing and debugging your APIs. You’ll learn how to write automated tests to validate your API responses and ensure that your API is functioning as expected under different scenarios.\n\n\nBy the end of the course, you’ll have the knowledge to build secure, scalable RESTful APIs with PHP, POSTMAN, and MySQL, making you proficient in API development for modern web applications.\n\n\nEnroll now to start building secure, fully functional APIs!",
      "target_audience": [
        "Beginner Restful APIs, PHP coding, MySQL and CSS developers curious about APIs development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build Secure Restful web APIs",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a API stack web developer"
      ]
    },
    {
      "title": "SvelteKit Framework by Example: Full-Stack Ecommerce Website",
      "url": "https://www.udemy.com/course/sveltekit-framework-by-example-full-stack-ecommerce-website/",
      "bio": "Learn the foundamentals of SvelteKit (Svelte Framework) by creating a real E-Commerce website from scratch",
      "objectives": [
        "Master the foundamentals of Svelte and SvelteKit (Svelte Framework)",
        "Create a Full-Stack E-Commerce web application",
        "Accepting payments on your web shop using Stripe as a payment gateway",
        "Connecting SvelteKit projects to a database",
        "Manipulating the database using Prisma ORM"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course requirements",
          "Branching strategy",
          "What is Svelte and SvelteKit?",
          "What is Server Side Rendering (SSR)?",
          "What is a payment gateway?"
        ],
        "Setting up Stripe": [
          "Stripe account setup",
          "Adding products on Stripe",
          "Creating all the shop products on Stripe"
        ],
        "Getting started with SvelteKit": [
          "SvelteKit project setup",
          "SvelteKit project structure",
          "What is Vite?"
        ],
        "Setting up TailwindCSS": [
          "What is TailwindCSS?",
          "Installing TailwindCSS in a SvelteKit project"
        ],
        "PostgreSQL database and Prisma ORM setup": [
          "PostgreSQL database setup",
          "What is Prisma ORM?",
          "Installing Prisma in a SvelteKit project",
          "Connecting Prisma to a PostgreSQL database",
          "Creating the product model",
          "Relationships between Prisma models",
          "Creating the Category model",
          "Populating the Category table",
          "Populating the Products table"
        ],
        "Introduction to components in SvelteKit": [
          "Components in SvelteKit",
          "Creating the Header component",
          "Creating the CartButton component",
          "Creating the Footer component"
        ],
        "Routing in SvelteKit": [
          "Introduction to routing in SvelteKit",
          "Page files in SvelteKit's router",
          "Creating the E-Commerce pages",
          "Error files in SvelteKit's router",
          "SvelteKit API routes",
          "Reading data with Prisma",
          "Creating the GET products API endpoint",
          "Layouts in SvelteKit",
          "Creating a layout and styling the pages",
          "Loading the products in the index page"
        ],
        "Implementing the home page": [
          "Conditional Rendering in SvelteKit",
          "No products found - Fallback message",
          "Rendering Loops in SvelteKit (#each logic block)",
          "Looping the products",
          "Creating the ShopCard component"
        ],
        "Implementing the shop categories": [
          "Creating the GET categories API endpoint",
          "Creating the CategoryItem component",
          "Categories index page",
          "Creating the categories layout",
          "Create the GET products by category API endpoint",
          "Reactivity in Svelte",
          "Dynamic category pages"
        ],
        "Implementing the product pages": [
          "Creating the GET product by ID API endpoint",
          "Product page markup and styling",
          "Loading the product details data"
        ]
      },
      "requirements": [
        "Basic HTML knowledge",
        "Basic JavaScript knowledge",
        "No previous Svelte experience required"
      ],
      "description": "SvelteKit is a modern web application framework that simplifies frontend development by enabling developers to build highly efficient and reactive web apps using a component architecture.\nSvelteKit is known for its exceptional speed primarily due to its compilation-based approach. Unlike traditional JavaScript frameworks, SvelteKit compiles the components at build time, generating highly optimized and minimal JavaScript code. This results in faster load times and improved runtime performance, as there is no need for a virtual DOM or runtime framework to manage component updates. Additionally, SvelteKit leverages fine-grained reactivity, only updating the parts of the DOM that actually change, reducing unnecessary work and improving performance.\nSvelteKit uses its own built-in compiler to transform Svelte components into highly optimized JavaScript code during the build process. This custom compiler is a fundamental part of the Svelte framework's approach to generating efficient and minimal JavaScript for web applications.\nIn this comprehensive course, you will gain a clear understanding of SvelteKit's core principles, providing you with the essential knowledge to effectively work with this cutting-edge framework. Learning by example is an effective approach, and throughout this course, we will explore SvelteKit's extensive feature set by building a fully-fledged e-commerce web store from the ground up. You will learn how to use key technologies such as Svelte, SvelteKit, Prisma ORM, PostgreSQL, TailwindCSS, and the integration of the Stripe payment gateway.\nWith over six years of experience working extensively with React and completing numerous projects, my initial exposure to SvelteKit was both fun and exciting. What sets SvelteKit apart and what I personally appreciate is its simplicity, avoiding complex, framework-specific intricacies that can often be time-consuming. Instead, SvelteKit encourages the application of fundamental web development principles you already possess. Learning Svelte not only equips you with framework-specific skills but also enhances your overall web development capabilities.\nThis course welcomes participants with a basic understanding of JavaScript, making prior experience with Svelte unnecessary. While familiarity with other frontend frameworks and libraries like React, NextJS, or Vue can help with comprehension of certain concepts, it is by no means a prerequisite for successful completion of this course.",
      "target_audience": [
        "Web developers who are new to Svelte and SvelteKit",
        "People who are looking to add a new skill and framework to their portfolio",
        "Developers who want to create a full-stack e-commerce store with a payment gateway"
      ]
    },
    {
      "title": "Ultimate Theme Developer guide for Prestashop 1.7",
      "url": "https://www.udemy.com/course/theme-developer-guide-prestashop/",
      "bio": "WIth latest 2020 updates",
      "objectives": [
        "Understand how to create theme for the latest version of Prestashop"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Dockerizing Prestashop": [
          "Docker Setup",
          "Docker installation & parameters",
          "Starting Docker services",
          "Post installation"
        ],
        "Getting to know the Theme": [
          "Templates",
          "Layouts",
          "The Head section",
          "The head.tpl",
          "The Stylesheet.tpl",
          "The javascript.tpl",
          "Relations between templates",
          "Smarty quick introduction"
        ],
        "How to create new theme": [
          "New theme using StarterTheme[DEPRICATED]",
          "New theme based on classic theme",
          "Enable new theme for development",
          "RTL theme"
        ],
        "Child Theme": [
          "Child theme",
          "Child theme and templates overriding"
        ],
        "The Theme.yml": [
          "Theme.yml exploring",
          "Theme.yml and assets setting"
        ],
        "The Widget API": [
          "Exploring the Widget API and override module template using it"
        ],
        "WebPack": [
          "Introduction to Webpack & Webpack in Prestashop",
          "Webpack first example",
          "Webpack and Prestashop theme"
        ],
        "Let's create a custom theme!": [
          "Introduction",
          "Setup the new theme for development",
          "Check the Watcher",
          "Working on the Header",
          "Create custom module assets files for dev.",
          "Module: Language & Currencies",
          "Module: My account",
          "Module: Image slider - Part 1",
          "Module: Image slider - Part 2",
          "The Nav menu",
          "The Search module part 1",
          "The Search module part 2",
          "Products list part 1",
          "Products list part 2",
          "Categories pages part 1",
          "Categories pages part 2",
          "Final episode"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "Student must have a basic knowledge of PHP, Javascript, HTML & CSS"
      ],
      "description": "Since it's release in December 2018, Prestashop kept growing and improving deeply on core level.\nOne of the major improvement are manifested in the new THEME eco-system.\nThemes in Prestashop 1.7 are a hole new level comparing to it's predecessor (1.6).\nA lot of new features are introduced such as:\nThe templates organisation\nNew smarty methods\nthe Widget API\netc...\nThis  course is build with simplicity in mind using the latest code updates from the official GitHub repository of Prestashop.\nBy the end of this course i 100% guaranty that:\nYou'll understand the mechanism behind the new Theme system\nYou'll be able to manipulate and debug themes\nYou'll have the knowledge to BUILD A VERY CUSTOMIZED THEME\nThe source code used during the course can be downloaded from the attachments.",
      "target_audience": [
        "Prestashop developers"
      ]
    },
    {
      "title": "How To Push Django Python Apps To Heroku for Web Hosting",
      "url": "https://www.udemy.com/course/push-django-python-apps-to-heroku/",
      "bio": "Hosting Django Apps In The Cloud",
      "objectives": [
        "Install Python",
        "Install Django",
        "Install Virtualenv",
        "Install Git Bash",
        "Install the Heroku Toolbelt",
        "Install Heroku Dependencies",
        "Push Django Code to Heroku",
        "Create Basic Database Apps in Django"
      ],
      "course_content": {
        "Installation": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Install Python",
          "Git Bash",
          "SSH Keys",
          "Heroku Toolbelt",
          "Virtualenv",
          "Install Django",
          "Django Version 3.0 Update"
        ],
        "Create Project": [
          "Start Address Book App",
          "Create Our First Web Page",
          "Base.html and Bootstrap CSS",
          "Bootstrap Navbar",
          "Adding The Address Page",
          "Git Version Control"
        ],
        "Pushing To Heroku": [
          "Heroku Introduction",
          "Heroku Create App",
          "Install Dependencies",
          "Tweak Our Settings.py File",
          "Whitenoise",
          "Heroku Procfile and Requirements.txt",
          "Heroku Procfile and Requirements.txt Migrate Admin Area",
          "Push To Heroku",
          "Heroku Migrate",
          "Get Postgres URL"
        ],
        "Create Address Book App": [
          "Create Address Model",
          "Output Model Data To The Screen",
          "Bootstrap Cards",
          "Forms",
          "Adding Address Web Form",
          "Adding Address To Views.py",
          "Edit Address Part 1",
          "Edit Address Part 2",
          "Delete Address",
          "Push Code To Github",
          "Domain Names on Heroku",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course but intro knowledge of Django and Python would be helpful",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "Do you know how to build Django apps with Python, but aren't sure how to get your app up onto the Internet?  This course if for you!\n\n\nIn this course I'll teach you how to host your Django Python app on Heroku.\n\n\nWe'll build a cool address book app in Django 2 and Python 3. The main reason for this course, though, is to teach you how to get your Django apps off your computer and hosted live online.\n\n\nSo many instructors teach Django courses that don't show you how to make your app 'live' online.  Why? Because it can be tricky!  That's why I built a course that focuses just on that!\n\n\nWe'll learn how to:\n\n\nInstall Python\n\n\nInstall Django\n\n\nInstall and use Virtualenv\n\n\nInstall git Bash for Windows\n\n\nInstall the Heroku Toolbelt\n\n\nTweak a Django app's Setting to work with Heroku\n\n\nPush our Code to Github and Heroku\n\n\nSet up Postgres databases in the cloud\n\n\nBuild a cool little address book app\n\n\nAnd much more...\n\n\nI'll be walking you through this course on a Windows computer, but if you're on a Mac or Linux, you should be fine too.  I try to point out any differences along the way.\n\n\nIf you've ever been confused by pushing code to a professional web hosting provider in Django, then this is the course for you.\n\n\nSee you on the inside!\n\n-John Elder\nCEO Codemy. com",
      "target_audience": [
        "This course is aimed towards students who want to learn to push their Django projects to Heroku for Hosting",
        "Anyone who wants to learn to push Django web apps to production hosting in the cloud"
      ]
    },
    {
      "title": "Create a Simple ChatBot using Python",
      "url": "https://www.udemy.com/course/mychatbot/",
      "bio": "Build one in an hour",
      "objectives": [
        "Students can build and train their own ChatBot.",
        "Students can train their ChatBot in their preferred language to interact with."
      ],
      "course_content": {
        "Step by Step Building your own Self Intelligence ChatBot": [
          "Introduction to ChatBots",
          "Sample Chatting with my ChatBot",
          "Basic Requirements",
          "Importing Packages",
          "Loading and Training Dataset",
          "Input and Output Tasks",
          "Training our ChatBot",
          "A Final Touch",
          "Fun with MS - Cortana"
        ]
      },
      "requirements": [
        "Basic Python Programming",
        "Python framework or Anaconda Platform to work on Jupyter Notebook",
        "Packages like ChatterBot and ChatterBot Corpus"
      ],
      "description": "This course focuses on Building a ChatBot using Python Programming and Natural Language Processing (NLP) techniques.\nA well trained ChatBot when created will be able to reply with it's own intelligence and can be created in any Regional language to interact with.\nExplained step by step to build one.\nHappy Learning !",
      "target_audience": [
        "Beginner Python developers or Jr. Data scientists who wants to create a simple ChatBot.",
        "Those who want to enter into ChatBot Development domain."
      ]
    },
    {
      "title": "Basic Java Programming with Eclipse",
      "url": "https://www.udemy.com/course/eclipse-the-basic-java-programming-course/",
      "bio": "Take your first step into the world of programming with this beginner course on Java. Become a programmer today!",
      "objectives": [
        "You will have the basic knowledge of Java programming as well as an understanding of the popular IDE, Eclipse.",
        "Create basic Java programs",
        "Learn the Java skills you will need for any Java programming career",
        "Acquire the tools for easier Java programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Eclipse",
          "Your First Line of Code",
          "String and Integer Variables",
          "Math with Integer Variables",
          "If Statements",
          "And, Or and Nested If Statements",
          "The While Loop",
          "The For Loop",
          "User Input through Input Dialogs",
          "String and Integer Parsing",
          "Char Variable and Parsing",
          "Double Variable and Parsing",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "This is a beginner level course. No experience needed. Tools will be attained through course."
      ],
      "description": "Welcome to my Basic course on Java Programming with Eclipse!\nMy name is Matthew Dewey. I am an experienced programmer, having received several accommodations on programming in my formal education as well as taught several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in an easy and fun manner. In this course I do just that and with one of the most useful IDEs coupled with the Java programming language.\nJava, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving Java over any other language. Of course, it goes without saying that Java is an excellent language, but do you know what is required of you to start programming Java?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course.\nI help you:\nInstall your IDE\nEstablish fundamental code\nCreate and use variables\nRetrieve user input\nProcess simple data\nas well as BONUS methods and code!\nWhat about Eclipse? A popular, widely used IDE that many large applications have been created in over the years. Do you know how to use it to its full potential? Well, in this course we will go through several lessons that will help you get comfortable with the IDE as well as more adept at program creation.\nGo no further if you're looking for the course that will guide you into the world of programming! With my course I can guarantee that the knowledge you learn will help you get a head-start in Java programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Students wanting to learn Java programming from the beginning"
      ]
    },
    {
      "title": "Creating a Social Media App with C#, JS, ASP.NET and Azure",
      "url": "https://www.udemy.com/course/build-social-media-app-with-aspnet-core/",
      "bio": "Learn how to create posts, stories, likes, comments, favorites, reports, friend requests, notifications and hashtags.",
      "objectives": [
        "MVC architecture and ASPNET MVC implementation: Learn to build scalable applications with the ASPNET MVC framework and understand the MVC architecture.",
        "Building and managing a social media app: Develop key social media features like stories, posts, likes, shares, and manage friend requests efficiently.",
        "Database design and entity relationships: Database management with ASPNET Data Project and Entity Framework, including schema migrations and CRUD operations",
        "Front-End Design with Tailwind CSS: Create modern, responsive layouts using Tailwind CSS for a visually appealing and user-friendly interface",
        "Deployment with Azure: Deploy applications to Azure, set up CI/CD pipelines, and ensure smooth production operations"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of C# and .NET Framework: Familiarity with C# syntax and .NET concepts is essential.",
        "Understanding of Web Development Fundamentals: Basic knowledge of web technologies like HTML, CSS, and JavaScript.",
        "Development Environment Setup: Access to a computer with .NET SDK and a suitable IDE (like Visual Studio) installed.",
        "Optional: Familiarity with Database Concepts: While not mandatory, understanding basic database operations will be helpful"
      ],
      "description": "Want to learn how to build a social media application with ASP.NET? This course is for you! We'll guide you through the process of creating your own feature-rich social platform from scratch. You'll develop the entire application, covering both the front-end and back-end, while implementing essential features that every modern social media app needs. You will start with an empty project in Visual Studio and build your app from the ground up.\n\nWhat will you learn?\nCore Features Implementation: Create essential social media features such as stories, posts, likes, shares, and favorite posts. You'll build functionality to manage friend requests, including adding, canceling, ignoring, and approving requests. Additionally, you'll implement a trending section that highlights the most used hashtags, ensuring your platform stays current and engaging.\nFront-End Design with Tailwind CSS: Design a visually appealing and user-friendly interface using Tailwind CSS. Tailwind's utility-first approach will help you create responsive and modern layouts effortlessly.\nASP.NET MVC Framework: Develop the application using the ASP.NET MVC framework, which will structure your project effectively, ensuring a clear separation of concerns and a maintainable codebase.\nData Management with ASP.NET Data Project and Entity Framework: Manage your data efficiently with ASP.NET Data Project and Entity Framework. You'll learn how to manage your database schema with Entity Framework migrations, add data to the database, retrieve data, update existing data, and delete data when necessary. Learn to set up and interact with an SQL database, ensuring your application's data is stored securely and can be accessed and manipulated with ease.\nDeployment with Azure: Deploy your social media application to the cloud using Azure. You'll learn how to set up a CI/CD pipeline to automate the deployment process, ensuring your code is always up-to-date and your application runs smoothly in a production environment.\nBy the end of this course, you'll have a fully functional social media platform, along with the skills and knowledge to create, manage, and deploy complex web applications using ASP.NET. Ready to build something amazing? Let's get started!",
      "target_audience": [
        "Developers looking to expand their skills in web development, particularly with ASPNET MVC",
        "Learners interested in building social media-like applications with real-time features",
        "Programmers who want to understand the MVC architecture in depth and apply it in practical projects",
        "Individuals aiming to learn about integrating cloud services like Azure and real-time communication with SignalR in their applications"
      ]
    },
    {
      "title": "Learn Basic HTML, CSS & Javascript (Typescript) with Angular",
      "url": "https://www.udemy.com/course/learn-basic-html-css-javascript-typescript-with-angular/",
      "bio": "Learn the basics of Web Development Fast and save time with HTML, CSS, Typescript and Angular.",
      "objectives": [
        "Web Developer",
        "Angular",
        "HTML",
        "CSS",
        "Javascript",
        "Typescript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Node.js",
          "Command Line Tools",
          "Install Visual Studio",
          "Creating a Angular Project"
        ],
        "HTML Structure": [
          "Tags",
          "Paragraph Tag",
          "Header Tags",
          "Div tag",
          "Lists",
          "Links",
          "Components"
        ],
        "HTML Media and Tables": [
          "Images",
          "Table Tag"
        ],
        "CSS - Basics": [
          "CSS Selectors",
          "Class and ID Selectors",
          "Display",
          "Size Height and Width",
          "Padding and Margin",
          "Alignment"
        ],
        "Typescript and JavaScript Basics with Angular Components": [
          "Variables",
          "Undefined and Null",
          "Math",
          "Arrays",
          "Loops",
          "Conditionals",
          "Objects and Classes",
          "Events",
          "HTTP Requests",
          "Installing Angular Material",
          "Bonus!"
        ]
      },
      "requirements": [
        "No requirements"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you.\n\n\nWe focus on teaching you only what you need to know and keeping the videos short. The main focus of this course is to teach the basics of HTML, CSS, Javascript, Typescript, and Angular. By the end of this course, you should be able to create a basic website, understand how styling a website works and how to get data from a server.\n\n\nIn this course, we start by learning what tools you need to create a website and then we move on to the basics of HTML. We do an overview of how HTML works and how to display information on the page. Once the student learned HTML, they will then move onto learning the basics of CSS. With the CSS section of the course, they will learn how to style their HTML and adjust the colors, shape, and position of the elements on their web page. This allows the student to learn how to make their website more appealing to their users.\n\n\nOnce students become familiar with HTML and CSS, they will dive into Javascript and Typescript. They will learn the basics of creating dynamic HTML components, using math in Javascript, and creating interactive events. Once the student gains a basic grasp of Typescript, then they learn how to apply this to Angular by making interactive components and getting data into those components.\n\n\nFor the final project, the student will learn to create a list of users and their profile information. This list will come from a remote server and the use will learn all of the skills including HTML, CSS, Javascript, Typescript, and Material UI to build a full webpage in Angular.",
      "target_audience": [
        "Beginning Web Developers interested in fast web development",
        "Beginning Web Developers interested in Angular",
        "Beginning Web Developer interested in learning basic Typescript"
      ]
    },
    {
      "title": "Learn React JS from scratch: Create hands on projects",
      "url": "https://www.udemy.com/course/learn-react-js-from-scratch/",
      "bio": "Learn React js JavaScript framework from scratch",
      "objectives": [
        "Know how to access the React Library",
        "Know how to access the React DOM Library",
        "Know how to write JSX syntax",
        "know how to transpile JSX code with Babel",
        "know about a react component",
        "know how to create a React Component",
        "Know how to Mount a component",
        "Know how to Un-Mount a component",
        "Know about Props",
        "Know about State",
        "Know how to handle events in React",
        "Know about Refs"
      ],
      "course_content": {},
      "requirements": [
        "Working knowledge of HTML",
        "Working knowledge of CSS",
        "Working knowledge of JavaScript",
        "Working knowledge of Node.js",
        "Working knowledge of Browser developer Tools"
      ],
      "description": "React.js is a an open-source JavaScript library for creating user interfaces\nReact adopts  a component based approach in developing applications.\nEvery react app can considered a component or a collection of components which can be re-usable.\nThis course is for absolute beginners to react and will teach you from scratch what you need to know to begin\ncreating react based applications. React is fun and easy to learn.\nReact.js is designed to make the process of building modular, reusable user interface components simple and intuitive. With React you can design  simple views for each state of an application. You can also use  React to efficiently update and render  components when your data changes.  I will walk you through how to create react components from scratch, review components properties, and component state, as well as the foundational parent/child relationships within React.js. I will also take you through  the lifecycle of components . You will be transpiling JSX code using babel which is an in browser transpiler that converts  JSX code into readable format.\nWhat you will learn includes:\nWhat is React.js?\nWho uses  React\nAdding and accessing React Library\nAdding and accessing React DOM Library\nAdding and accessing Babel compiler\nUsing JSX\nCreating a React component\nUsing props\nProp Types\nUsing props with children\nWorking with state\nHandling events\nUsing Refs\nMounting components\nUn-Mounting Components\nUpdating Components\nCreating a React App\n\nThis is a practical hands-on course and i encourage you to follow along as much as possible.\n\nThank you and welcome to the course.",
      "target_audience": [
        "Anyone who has working knowledge of HTML",
        "Anyone who has working knowledge of CSS",
        "Anyone who has working knowledge of JavaScript",
        "Aspiring web developers"
      ]
    },
    {
      "title": "Serverless Django with Docker & Google Cloud Run",
      "url": "https://www.udemy.com/course/serverless-django/",
      "bio": "Bring any Version of Django or Python into production on Serverless with Google Cloud Run.",
      "objectives": [
        "Django Deployment",
        "Django Settings Modules for Local & Production Deployment",
        "Google Cloud Run & Build",
        "Google Cloud SQL for Django",
        "Cloud SQL Proxy for Local Access to Production Database",
        "Serverless Applications"
      ],
      "course_content": {},
      "requirements": [
        "Django Experience (At least our Try Django series)",
        "Python Experience (At least the first 15 days of 30 Days of Python)",
        "Google Account (ie, Gmail)"
      ],
      "description": "Deploy a production-ready Serverless Django Application by using a Docker Container, Google Cloud Build, Google Cloud SQL, & Google Cloud Run.\n\n\nServerless allows us to focus on our code and deploy more. What's better, our serverless applications only cost us money when they're used.\n\n\nTraditionally, serverless was reserved for non-containerized applications. Google Cloud Run and the open-source equivalent Knative unlocks serverless for containers. Google Cloud Run is a managed version of Knative. Knative is a package for Kubernetes. In other words, you get the benefits of Kubernetes and Knative when you use Google Cloud Run.\n\n\nDocker Containers make it easy to create our own isolated environment on the operating system level. This is exactly what we need in so many applications. Docker containers have pioneered a new way of deployment options because we now have complete control over the system-level runtime.\n\n\nLearn to build and deploy a serverless Django application on Google Cloud Platform's Cloud Run service.\nServerless apps using containers is seriously amazing. Let's see why.\n\n\nWe'll cover:\nMinimal Dockerfile for Containerizing Django\nCloud Build\nCloud SQL with Postgres\nCloud SQL Proxy for Local Dev Access\nCloud Run\n\n\n*This course requires you to download open source software (such as Python, Django, Docker). If you are a Udemy Business user, please check with your employer before downloading software.",
      "target_audience": [
        "Django Developers Looking to use Serverless in Production",
        "Django Developers Looking to have more control over their OS running their app (via Docker)",
        "Django Developers interested in using Docker",
        "Python Web App developers Looking to learn how to use Cloud SQL with Cloud Run & Cloud Build"
      ]
    },
    {
      "title": "Understanding TypeScript For Beginner To Advanced",
      "url": "https://www.udemy.com/course/understanding-typescript-for-beginner-to-advanced/",
      "bio": "Understanding TypeScript Course For Beginner To Advanced Step-By-Step",
      "objectives": [
        "Understanding TypeScripts",
        "Typescript Function",
        "Typescript Object Tuple",
        "Typescript Union",
        "How To Include Exclude Compilation Files",
        "Debug Typescript Node Apps In Visual Studio Code",
        "Stop Emitting Files On Compilation Errors",
        "Typescript Aliases And Interfaces",
        "Typescript Arrays"
      ],
      "course_content": {
        "Introduction": [
          "Typescript Simple Types",
          "Typescript Special Types",
          "Typescript Arrays",
          "Typescript Tuple",
          "Typescript Object Tuple",
          "Typescript Enums",
          "Typescript Aliases And Interfaces",
          "Typescript Union",
          "Typescript Function",
          "Typescript Casting",
          "Typescript Classes",
          "Typescript Basic Generics",
          "Typescript Utility Types",
          "Typescript Keyof",
          "Typescript Null Undefined",
          "Typescript Definitely Typed",
          "Typescript 5.X Updates",
          "Using Watch Mode",
          "Typescript Compiling",
          "How To Include Exclude Compilation Files",
          "Setting A Compilation Target",
          "Rootdir And Outdir",
          "Stop Emitting Files On Compilation Errors",
          "Strict Compilation Option",
          "Code Quality Options",
          "Debug Typescript Node Apps In Visual Studio Code"
        ]
      },
      "requirements": [
        "No Prior Knowledge is Required.",
        "Anyone Interested To Become a TypeScripts Course"
      ],
      "description": "Unlock the power of TypeScript and transform your web development skills with my comprehensive course, \"Understanding TypeScript for Beginner to Advanced.\" Whether you're a novice coder or an experienced JavaScript developer, this course is meticulously designed to guide you through the essentials to the most advanced features of TypeScript.\n\n\nTypeScript, a statically typed superset of JavaScript, enhances the development experience by providing robust type checking, powerful tools, and a syntax that allows for easier debugging and better code maintainability. This course will empower you to harness these benefits, ensuring you can develop scalable and reliable applications.\n\n\nWhat You’ll Learn:\nFundamentals of TypeScript: Begin with the basics, understanding TypeScript syntax, setting up the development environment, and compiling TypeScript to JavaScript.\nCore Concepts: Dive deep into types, interfaces, classes, and modules. Learn how to use type annotations, type inference, and work with complex types.\nAdvanced Features: Explore generics, decorators, advanced types, type guards, and more, enabling you to write flexible and reusable code.\n\n\nWho Should Enroll?\nJavaScript developers looking to upgrade their skillset with TypeScript.\nSoftware engineers interested in enhancing code quality and maintainability.\nAnyone eager to learn a versatile language that is increasingly demanded in the web development industry.\n\n\nStart your journey towards mastering TypeScript today. Enroll in \"Understanding TypeScript for Beginner to Advanced\" and elevate your web development capabilities to new heights!",
      "target_audience": [
        "Anyone want to learn TypeScripts"
      ]
    },
    {
      "title": "Umbraco v11: Advanced Course",
      "url": "https://www.udemy.com/course/umbraco-11-advanced-course/",
      "bio": "Building Advanced Applications using Umbraco CMS",
      "objectives": [
        "Extend Umbraco backoffice to improve the editors' experience",
        "Umbraco routing, Content Finders and Url providers (Inbound and Outbound pipeline)",
        "Build a RESTful API service with the UmbracoApiController",
        "Custom Database tables, Migrations and Notifications Handler in practice",
        "uSync - Overview, Configuration and Practical use cases",
        "Automatic deploy of Umbraco applications through Github Actions to a linux VPS"
      ],
      "course_content": {
        "Getting started": [
          "About me",
          "Course Introduction"
        ],
        "Basic Setup": [
          "Umbraco CLI Installation",
          "Umbraco with SQL Server Database",
          "Visual studio and SQLlite",
          "Install the “Starter template”"
        ],
        "Explore Umbraco Controllers": [
          "Module Introduction",
          "Surface Controller",
          "Umbraco API Controller",
          "Render MVC Controller",
          "Umbraco Authorized Controllers",
          "Umbraco Page Controller",
          "Umbraco Page Controller in Practice"
        ],
        "Models Builder in Depth": [
          "What is Models Builder",
          "Understanding all Types of Builder Mode",
          "Advanced Configuration of Models Builder",
          "How to Extend Generated Models"
        ],
        "The Block List Editor": [
          "Module Introduction",
          "Beautify the BlockList Elements Preview",
          "Update BlockList element's View on Data Change",
          "Update BlockList element's View on Settings Change",
          "Build a Complex BlockList Element",
          "Render BlockList Elements in the Frontend - Part 1",
          "Render BlockList Elements in the Frontend - Part 2",
          "A Quick Look to the New BlockGrid Property Editor"
        ],
        "Route Hijacking": [
          "What is Route Hijacking",
          "Hijacking an Umbraco Page's route",
          "Create ViewModels with Additional Data",
          "Manage QueryString Parameters"
        ],
        "RESTful API Service": [
          "Module introduction",
          "Add a Controller to Handle CRUD Operations",
          "Implement Repository pattern",
          "Valorize ViewModels with UmbracoMapper",
          "Search & Filtering out the Products",
          "Delete Content Programmatically with Umbraco Api",
          "Create Content Programmatically with Umbraco Api",
          "Update Content Programmatically with Umbraco Api"
        ],
        "EXTRA - Authenticate an UmbracoApiController - OAuth2 and JWT tokens": [
          "Module Introduction",
          "Configure OAuth2 Authorization Server",
          "Add Authorization to the Product controller",
          "Conclusions"
        ],
        "Custom Routing and Content Finder": [
          "Inbound and Outbound Pipelines",
          "How Umbraco Builds Urls",
          "Customize the Url of Product Pages with the IUrlSegmentProvider",
          "Modify the Inbound Pipeline with a Custom ContentFinder"
        ],
        "Using Custom Database Tables": [
          "How to Handle Custom Tables with Umbraco",
          "Prepare the Migration for our Custom Tables",
          "Save data Inside the New Custom Table"
        ]
      },
      "requirements": [
        "You already have a basic knowledge of Umbraco",
        "You have experience with C# and .NET core",
        "You have some experience with JS and angularJS (very basic knowledge required)"
      ],
      "description": "Update your skills with the latest version of Umbraco CMS and start building better applications.\nDuring this course we'll be using Umbraco v11 and I'll be taking you through several topics, mixing theory with practice.\nMy aim is to share with you all the experience I have gained in several years using Umbraco CMS every day, in the simplest way possible.\n\n\nWe will deepen and explore:\nThe Umbraco routing - Inbound and Outbound pipelines\nAll the Umbraco Controllers (Did you ever hear about UmbracoPageController?)\nThe Models Builder\nThe Notifications Handler with some practical examples\nHow to work with custom database table using NPoco ORM\n\n\nWe will customize the backoffice:\nDeveloping a Custom Property Editor\nDeveloping a Content App\nCustomizing a ListView layout\nModifying the \"Allowed Actions\" for a specific user, node or as a default behaviour\n\n\nGet a very deep understanding of Umbraco and its components!\nBut that's not all!\nWe will build a RESTful API service that integrates and modifies umbraco backoffice nodes via the umbraco ContentService and MediaService services.\nSecurity will not be neglected, we will see how to configure an OAuth2 authorization server and how to protect our RESTful API service using JWT tokens to authenticate and authorize the requests.\n\n\nOf course, we don't want to keep our applications on our computer, we want to share them with the world!\nThat's why we'll see how to configure uSync to keep our content synchronised across different environments and how to automatically deploy our Umbraco applications on a Linux server using Github Actions.\n\n\nI hope to see you in my course and if so, what really matters to me is that this course could make you a better Umbraco developer!\n\n\nIf you have any doubt or question, don't hesitate to contact me, I'll do my best to answer and help you!\n\n\n#H5YR!",
      "target_audience": [
        "Developers who want to deepen their knowledge of Umbraco in order to build increasingly complex Umbraco solutions.",
        "Developers who want to learn advanced Umbraco topics without having to spend hours and hours searching the Internet and making tries."
      ]
    },
    {
      "title": "The Complete WSL 2 Course for Web Development & Hacking",
      "url": "https://www.udemy.com/course/the-complete-wsl2-course/",
      "bio": "Become a better Web Developer & Hacker by utilizing the best tools available today and make your terminal look awesome!",
      "objectives": [
        "Build a lightning fast & reliable Programming / Web Development environment on Windows(10 & 11) using WSL 2!",
        "Become a more productive Ethical Hacker & Bug Bounty Hunter by leveraging the power of Linux on Windows",
        "You'll learn all the Linux Basics you'll ever need for Web Development & Ethical Hacking",
        "No more need for installing Virtual Machines or messing around with Virtual Box or VMware",
        "Install Ubuntu or Kali Linux on WSL 2 for Web Development or Ethical Hacking",
        "Set up a Custom Terminal using Windows Terminal",
        "Customize Windows Terminal to fit your needs",
        "Turbo-Charge your WSL 2 with ZSH and Custom Themes",
        "Speed up your Web Development and Hacking workflow with ZSH Autosuggestions and Syntax Highlighting",
        "Create your very own Web Development workflow with WSL 2 and create new projects in seconds!",
        "Fully integrate VSCode into WSL 2 for super-fast development",
        "Install Python3 & Pipenv on WSL 2",
        "Install Node, NPM and Node Version Management on WSL 2",
        "Configure GIT on WSL 2",
        "Increase your Productivity by using Windows PowerToys Fancy Zones",
        "Utilize WSL 2 for Ethical Hacking & Bug Bounties",
        "Install tools like MetaSploit or other popular Bug Bounty Tools.",
        "Access WSL 2 Folders from Windows and vice Versa"
      ],
      "course_content": {},
      "requirements": [
        "There is no prior experience required in any of the mentioned fields. This is a Beginner Friendly course."
      ],
      "description": "Welcome to the Complete WSL 2 Course for Web Development & Hacking\n\n\nWeb Developers and Hackers share very similar requirements when it comes to working with Linux. There are usually two camps: those who use macOS, and those who don't.\n\nThose who don't use macOS usually end up being utterly confused by the vast landscape of Linux distributions out there and get tripped up by complicated setups of installing Linux as a Virtual Machine, or even worse, Dual-Booting Linux and Windows (Trust me, I have the most popular \"How to install Kali Linux\" videos on YouTube ;-) ).\n\n\nI have been using those two setups over the past couple of years and I understand that people really struggle with the complicated nature of it. Since I have discovered WSL, and more recently, WSL 2, my workflow has completely changed and I haven't used a Virtual Machine in more than 1 1/2 years.\n\n\nWSL 2 did not only make my workflow as a Web Developer and Ethical Hacker much more efficient, but it also saved me a lot of time in which I did not have to deal with exotic issues that arise when using complicated setups with Virtual Machines.\n\n\nI also enjoy working with Linux much more again since using WSL 2, since it's so well integrated into Windows. Everyone who has tried my method did not look back so far. I have convinced Top-Level Bug Bounty Hunters and Web Developers to make the change and none of them has regretted it so far.\n\n\nIn this course, you will learn everything you need to know to get started with WSL 2. It doesn't matter if you are a Web Developer or an Ethical Hacker since the course has separated those two areas clearly. Most steps of working with WSL 2 are the same for both camps anyway.\n\n\nI also included a complete 1+ hours long section called \"Linux Primer\", where I teach you all the fundamentals you need to work with Linux.\n\n\nI am so confident that you will enjoy this course that I have provided a full 30-day-money-back guarantee so that you can purchase and try the course without any risk.\n\n\nThank you for your consideration, I hope to see you in Lecture 1!\n\nStefan",
      "target_audience": [
        "Web Developers",
        "Programmers",
        "Ethical Hackers",
        "Bug Bounty Hunters",
        "People who don't like using Virtual Machines or Bare Metal Linux",
        "Everyone who wants to increase their productivity working with Linux",
        "Everyone who wants to try out Linux with the least possible friction"
      ]
    },
    {
      "title": "MERN Stack Doctor Appointment Booking App",
      "url": "https://www.udemy.com/course/mern-stack-doctor-appointment-booking-app/",
      "bio": "Build MERN Stack Doctor Appointment Booking Application From Scratch using React , Redux Toolkit , AntD , Node , MongoDB",
      "objectives": [
        "In this course, we will cover a range of topics, including building full-stack applications from scratch, working with complex MongoDB queries, schemas, and mod",
        "We will also cover how to implement JWT authentication and password hashing for securing the application. You will learn how to use the Ant Design library for U",
        "We will also cover how to implement notifications functionality for users, admins, and doctors. You will learn how to manage users, doctors, and appointments fr",
        "We will even cover how to push your code to GitHub and host your application on Heroku. Throughout the course, we will provide 24/7 QA support to help you along",
        "This course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a doctor appointment booking applicat"
      ],
      "course_content": {
        "Introduction / Setup": [
          "PROMO",
          "Project Preview / Github Repo",
          "React Setup",
          "Node Setup",
          "Mongo Setup",
          "Mongo Connection",
          "ANTD Setup"
        ],
        "Login Registration Screens": [
          "Login Register UI - 1",
          "Login Register UI - 2"
        ],
        "Login Registration Backend": [
          "User Model",
          "User Registration",
          "User Login"
        ],
        "Authorization and Protected Routes": [
          "Authorization",
          "Redux toolkit setup",
          "Alert messages and loaders",
          "Protected Routes"
        ],
        "Layout": [
          "Layout Structure",
          "Layout menu",
          "Layout Collapsed",
          "Seperate Menu for User and Admin"
        ],
        "Applying for Doctor": [
          "Apply Doctor - UI",
          "Apply Doctor API"
        ],
        "Notifications": [
          "Notifications - 1",
          "Notifications -2"
        ],
        "Users / Doctors List": [
          "Users list API",
          "Doctors List",
          "Users List",
          "Admin Actions"
        ],
        "Update Doctor Profile": [
          "Update Doctor Profile - 1",
          "Update Doctor Profile - 2"
        ],
        "Booking Flow": [
          "Display All Doctors",
          "Booking Screen UI",
          "Booking API",
          "Availability Check"
        ]
      },
      "requirements": [
        "Javascript",
        "React",
        "Node",
        "Mongo"
      ],
      "description": "Hello and welcome to the course on building a doctor appointment booking application using the MERN stack!\n\n\nIn this course, we will cover a range of topics, including building full-stack applications from scratch, working with complex MongoDB queries, schemas, and models, and creating separate user interfaces for users, admins, and doctors.\n\n\nWe will also cover how to implement JWT authentication and password hashing for securing the application. You will learn how to use the Ant Design library for UI components and Redux Toolkit for state management.\n\n\nWe will also cover how to implement notifications functionality for users, admins, and doctors. You will learn how to manage users, doctors, and appointments from the admin panel.\n\n\nWe will even cover how to push your code to GitHub and host your application on Heroku. Throughout the course, we will provide 24/7 QA support to help you along the way.\n\n\nThis course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a doctor appointment booking application with separate user interfaces for users, admins, and doctors. By the end of this course, you will have the skills and knowledge needed to create a fully functional doctor appointment booking application with notifications functionality and a secure authentication system.\n\n\nMERN stands for MongoDB, Express, React, Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework and Node.js is the famous and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser designed to build scalable network applications.",
      "target_audience": [
        "Fullstack Developers",
        "MERN Stack Developers",
        "This course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a doctor appointment booking application with separate user interfaces for users, admins, and doctors. By the end of this course, you will have the skills and knowledge needed to create a fully functional doctor appointment booking application with notifications functionality and a secure authentication system."
      ]
    },
    {
      "title": "Learn HTML5 At Your Own Pace. Ideal for Beginners",
      "url": "https://www.udemy.com/course/learning-html5/",
      "bio": "Learn HTML5 and the Basic Web Development Techniques and Standards from scratch. Complete with Certificate of Completion",
      "objectives": [],
      "course_content": {
        "HTML Basics": [
          "Working Files - Download These First",
          "About This Course",
          "HTML Basics - Workspace Setup",
          "HTML Basics - HTML Tag Basics",
          "HTML Basics - Formatting With HTML",
          "HTML Basics - Typical Page Code",
          "Lab - First Web Page"
        ],
        "Web Page Code": [
          "Block Level Tags",
          "Inline Formatting",
          "Line Breaks And Special Characters",
          "HTML Lists",
          "Content Specific Tags",
          "Lab - Making Attractions Pages"
        ],
        "HTML Links": [
          "Hyperlink Basics",
          "Relative Links",
          "Links To Files And Email",
          "Anchors",
          "Lab - Navigation Menu"
        ],
        "Images": [
          "Image Basics",
          "Image Attributes",
          "Using The Figure Tag",
          "Links On Images",
          "Prepping Files",
          "Lab - Adding Images"
        ],
        "CSS Styles": [
          "CSS Basics",
          "Using The Styles Tag",
          "Handling Color",
          "Working With Font Sizes",
          "Font Families",
          "Class And ID Selectors",
          "Pseudo Selectors",
          "Grouping And Compound Selectors",
          "Creating A Stylesheet File",
          "Setting Up Site Styles",
          "Lab - Site Class Styles"
        ],
        "Tables And Tabular Data": [
          "Basic Table Tags",
          "Table Headers",
          "Using CSS With Tables",
          "Contextual Table Tags",
          "Lab - Website Project"
        ],
        "Layout Basics": [
          "Block And Box Properties",
          "Margin And Padding",
          "CSS Shorthand",
          "Positioning",
          "Using Nested Blocks",
          "Float Basics",
          "Using Floats And Clears",
          "Basic Page Layout",
          "Background Images",
          "Lab - Web Site Main Layout",
          "Lab2 - Text Block Margins And Padding"
        ],
        "Forms": [
          "Form Basics",
          "Multiple Choice Inputs",
          "Other Form Elements - Part 1",
          "Other Form Elements - Part 2",
          "New HTML5 Form Tags",
          "Lab - Contact Us Form",
          "Lab - Styling the Form"
        ],
        "Inserting Video": [
          "Preparing The Video",
          "Using The Video Tag",
          "Playing In Multiple Browsers",
          "Lab - Cable Car Video Page"
        ],
        "Completing The Site": [
          "Writing Good Code",
          "SEO Considerations",
          "Browser Testing",
          "Hosts, FTP, And Domains",
          "More Resources"
        ]
      },
      "requirements": [],
      "description": "A Verifiable Certificate of Completion is presented to all students who undertake this course.\nHTML5 is the breakthrough update to web development standards that allows more control over website content and creativity, including the use of complex animation, video and audio. This HTML 5 Tutorial Course will help you understand basic web development techniques and standards, starting from scratch and showcasing the many powerful multimedia features the latest revision brings to the table. Veteran design professional and technology trainer John Ulliman starts with the basics of learning HTML5 that any beginner will need to know and gradually progresses through working with images, layout, interactive forms and high quality video. In addition to graphic design and code considerations, John also looks at SEO, hosting and best practices that will ensure your websites' cross-platform compatibility and long-term success. With 66 lessons and accessible sample code, you'll learn a wide range of skills you can immediately use with your existing site or a completely new one.\nWhat You Will Learn\n●  Core principles of HTML and CSS required to build a functional website with no prior experience.\n●  New enhancements and capabilities unique to HTML5 that allow impressive visual effects and multimedia playback options.\n●  Layout and design principles that ensure a positive user experience and encourage site interactivity\n●  How to create flexible, compatible site code that adheres to professional standards.\nWho Should Take This Course\n●  Anyone who wants to create their first website the right way, using the latest coding standards and layout techniques.\n●  Anyone interested in learning HTML5 to update or upgrade their current website to meet HTML 5 standards and capabilities.\n●  Anyone looking to design sites that offer rich media and interactivity experiences to users on mobile devices as well as computers.\nWhat People Are Saying\n\"While I made a site with WordPress in the past I wasn't happy with the lack of control...knowing the code has actually made things easier. Thanks!\" ~C Watkins\n\"Was definitely glad this course had info on CSS as well as HTML...now I understand how a good layout makes all the difference.\" ~Pete Farrell\n\"I absolutely love that I can have streaming video on my page without Flash...simple and effective...thanks very much.\" ~P.J. Tancibok",
      "target_audience": []
    },
    {
      "title": "GraphQL from Scratch with MERN Stack",
      "url": "https://www.udemy.com/course/graphql-mern-react-node-firebase/",
      "bio": "Learn GraphQL from Scratch with MERN Stack (Mongo Express React Node) and Firebase to build Truly Realtime Web Apps",
      "objectives": [
        "GraphQL from Scratch",
        "Mastering GraphQL Queries Mutations and Subscriptions",
        "Build FullStack GraphQL Project with MERN Stack",
        "Apollo GraphQL Server with Node Express MongoDB",
        "Apollo GraphQL Client with React and Firebase",
        "Firebase Authentication (Client Side / Server Side)",
        "Realtime GraphQL Subscriptions",
        "CRUD (Create Read Update Delete) with MongoDB",
        "Multiple Image Uploads",
        "Authentication and Authorization",
        "User Dashboard with Custom Layout",
        "Private and Public Routing",
        "Reusable React Components",
        "100% Usage of React Hooks",
        "State Management with Context API and Apollo Client Cache",
        "Using Latest React Router Hooks",
        "Using Latest Apollo GraphQL Hooks for Queries Mutations and Subscriptions",
        "Deployment to Heroku",
        "Plus Tons of Real World Examples that you can use in your future projects"
      ],
      "course_content": {
        "Introduction": [
          "Are you new to JavaScript React and NodeJs?",
          "Course Introduction",
          "What is GraphQL?",
          "Trying GraphQL Playground",
          "GraphQL vs REST",
          "About the course"
        ],
        "GraphQL Node Server, Type Definitions and Resolvers": [
          "Express server",
          "GraphQL server",
          "GraphQL express server",
          "Deprecated warning - merge-graphql-schemas",
          "Multiple typeDefs",
          "Multiple resolvers",
          "Mongo atlas setup",
          "Local mongodb connection",
          "Post query",
          "Post mutation",
          "Input type and query variables"
        ],
        "GraphQL React Client and Query Hooks": [
          "React setup",
          "GraphQL query",
          "useQuery hook",
          "useLazyQuery hook"
        ],
        "Authentication with Firebase and React (Client Side)": [
          "Firebase auth flow",
          "Firebase setup",
          "State management with context and reducer hooks",
          "Using dispatch context and router hooks",
          "Navbar",
          "React router version",
          "React router",
          "User register form",
          "Confirmation email using firebase",
          "Toast notification and loading",
          "Complete registration form",
          "Register with email and password",
          "Dispatch user info to context state",
          "User onAuthStateChanged",
          "Logout from firebase",
          "Login with firebase",
          "Login with google"
        ],
        "Authentication with Firebase Node MongoDB (Server Side)": [
          "Server auth logic",
          "GraphQL auth logic",
          "GraphQL req headers auth logic",
          "Firebase admin verify authtoken",
          "Apollo client authtoken in headers",
          "User model",
          "User create typeDefs",
          "User create mutation",
          "Create or update user in mongodb",
          "Mutation from apollo client",
          "User update or create in login",
          "Reusable auth form",
          "Code refactor in login and register complete"
        ],
        "User Dashboard": [
          "What is next?",
          "Private route",
          "Dashboard with static nav",
          "Dashboard pages and nav links update",
          "Password forgot",
          "Password update form",
          "Password update with firebase",
          "Code refactoring typeDefs"
        ],
        "Public Profile": [
          "User input and image types",
          "User update mutation",
          "User profile query",
          "Scalar type datetime",
          "Profile query apollo client",
          "useMemo hook",
          "Profile update form",
          "useMutation hook to update profile",
          "Remove typename from mutation",
          "GraphQL fragments",
          "Queries and mutations refactor"
        ],
        "Multiple Image Upload and Resize": [
          "Cloudinary setup",
          "Upload flow and more middlewares",
          "Upload image to cloudinary",
          "Delete image and auth middleware",
          "Cloudinary config",
          "Image resize in react",
          "Cloudinary upload react",
          "Display images",
          "Delete image"
        ],
        "Code Refactor": [
          "Code refactor profile form",
          "Code refactor image upload and delete",
          "Code refactor display images and delete",
          "Code refactor image component"
        ],
        "Public Routes": [
          "Countdown to redirect",
          "Public route",
          "Public profile query and resolver",
          "All users query and resolvers",
          "useQuery hook all users",
          "User card component",
          "Public profile component",
          "Profile query using route param"
        ]
      },
      "requirements": [
        "Basic Understanding of React and Node"
      ],
      "description": "Learn Realtime Web Development with GraphQL from absolute scratch along with React Node MongoDB (Full Stack / MERN Stack) and Firebase (for authentication).\nIn this course you learn GraphQL from Scratch in fun and easy learning environment\nYou will learn GraphQL from the very beginning\nLearn to build Apollo GraphQL Server with Node Express and MongoDB\nLearn to build Apollo GraphQL Client with React hooks and Firebase\nClient side state management with React Context API and Apollo Client Cache\nBuild a true Realtime Web Application\nBuild Production ready Authentication System with email activation, forgot/reset password etc using Firebase\nLearn  Multiple Image Uploads\nBuild entire frontend using latest Hooks from React, React Router and Apollo Client\nTons of real world skills (Performing GraphQL Queries, Mutations, Subscriptions, Authentication, Authorization, CRUD, Uploads etc)\nLearn to Deploy GraphQL Server and Client to Heroku Cloud\nGain theoretical and practical knowledge necessary to build your next big GraphQL Project with MERN Stack\nMost up to date course that uses 100% React Hooks including Context API (to achieve Redux like architecture), Latest React Router Hooks and Latest Apollo GraphQL Hooks for performing Queries, Mutations and Subscriptions\nSo if you are looking to Build Lightning Fast Realtime Web Apps using GraphQL with MERN Stack, don't waste your valuable time wandering around and trying to learn it from 10 different resources.\nI have packed everything into this course for you to fully understand all the practical GraphQL concepts... from basic to advance.\nReady to go FullStack GraphQL with Node React MongoDB Firebase Authentication CRUD Realtime Subscriptions Deployment and more\nJoin me :)",
      "target_audience": [
        "React Node Developers looking to learn GraphQL from Scratch",
        "React Node Developers looking to build Modern Realtime Web Apps with MERN Stack"
      ]
    },
    {
      "title": "NestJS Microservices: Breaking a Monolith to Microservices",
      "url": "https://www.udemy.com/course/nestjs-microservices/",
      "bio": "Break a NestJS Monolith into Microservices with Apache Kafka and Event-Driven Architecture",
      "objectives": [
        "Event Driven Architecture with Apache Kafka",
        "Multiple Database Connections",
        "Internal Http Requests",
        "Run Docker with multiple networks",
        "Import Data from multiple databases",
        "Use Kubernetes",
        "Deploy to Google Cloud Platform"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Monolith": [
          "Setup",
          "Stripe Keys",
          "Exploring the Code",
          "Monolith vs Microservices"
        ],
        "Email Microservice": [
          "Email Diagram",
          "Setup",
          "Kafka Setup",
          "Confluent Cloud CLI",
          "Consuming Kafka Messages",
          "Producing Kafka Messages",
          "Sending Emails"
        ],
        "Users Microservice": [
          "Email Diagram",
          "Setup",
          "Importing Data",
          "Http Requests",
          "Login",
          "Request with Headers",
          "Storing Tokens",
          "Logout",
          "Completing authController",
          "Refactoring userService",
          "Ambassadors",
          "Removing AuthModule",
          "User Decorator",
          "External Networks",
          "Scopes"
        ],
        "Admin Microservice": [
          "Admin Diagram",
          "Setup",
          "Moving userModule",
          "Moving productModule",
          "Moving orderModule",
          "Moving linkModule",
          "Configuring Kafka",
          "Admin Consumer",
          "Consumer Service",
          "Dynamic Methods"
        ],
        "Ambassador Microservice": [
          "Ambassador and Checkout Diagram",
          "Setup",
          "Moving userModule",
          "Moving productModule",
          "Moving Links and Orders",
          "Seeding Orders",
          "Configuring Kafka",
          "Consuming Events",
          "Handling Errors"
        ],
        "Checkout Microservice": [
          "Setup",
          "Importing Modules",
          "Configuring Kafka"
        ],
        "Kubernetes & Deployment": [
          "Kubernetes",
          "Production Build",
          "Pods",
          "Environment Variables",
          "Kompose",
          "Secrets",
          "Google Kubernetes Engine",
          "Cloud Shell",
          "Cloud SDK",
          "Container Registry",
          "Cloud SQL",
          "Authorized Networks",
          "Users Kubernetes Files",
          "Users Deployment",
          "Private IP",
          "Ingress",
          "Admin Setup",
          "Admin Kubernetes Files",
          "Admin Deployment",
          "Ambassador Setup",
          "Ambassador Kubernetes Files",
          "Ambassador Deplyoment",
          "Checkout Setup",
          "Checkout Kubernetes Files",
          "Checkout Deployment",
          "Testing the Frontend"
        ]
      },
      "requirements": [
        "Good understanding of Javascript"
      ],
      "description": "Welcome to NestJS and Kafka: Breaking a Monolith to Microservices Course - the course that will take your Javascript development skills to the next level.\nHow this course works\nThis course will start with a pre-built monolith, the building of the starting app won't be covered in this course. So in this course, you will start immediately with Microservices Architecture, this course is intended for people that have a solid understanding of Javascript and want to learn in a short amount of time more advanced concepts. I am very clear and precise in my way of teaching so this course won't have unnecessary explanations on my part, I will explain what is needed when it is needed.\nIf you are interested in learning how the Monolith is created you can check my other courses:\nAngular Material, Universal & NestJS: A Rapid Guide\nReact, Next.js and NestJS: A Rapid Guide - Advanced\nVue 3, Nuxt.js and NestJS: A Rapid Guide - Advanced\nIn those courses, you will learn how to build a SPA with your favorite frontend framework.\n\n\nWhat you will learn in this course\nIn this course, you will start with a pre-built monolith and you will learn:\nWhat is the Microservices Architecture\nHow to Configure Kafka with NestJS\nInternal Http Requests\nHow to make a Microservice only for Authentication Purposes\nRun Docker with multiple networks\nProduce Kafka Events to multiple topics\nCreate Custom Middlewares & Services\nImport Data from multiple databases\n\n\nAbout Me\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript developers curious about the Microservices Architecture"
      ]
    },
    {
      "title": "Create a Blog with Mezzanine CMS - The Best Django CMS",
      "url": "https://www.udemy.com/course/create-a-blog-with-mezzanine-cms-the-best-django-cms/",
      "bio": "Like WordPress, but on Python! Learn to build websites with Mezzanine, utilize its tons of features, & deploy to prod!",
      "objectives": [
        "Be able to work confidently with the Mezzanine CMS framework",
        "Be able to create modern, responsive websites and apps with Mezzanine CMS"
      ],
      "course_content": {},
      "requirements": [
        "A good understanding of HTML and CSS as this will be assumed throughout the course.",
        "Also, since Mezzanine is built with Python and on the Django framework, the student should have a basic understanding of those as well, however because of the dozens of templates shipped with Mezzanine, these can be picked up rather quickly as we use those as \"guides.\""
      ],
      "description": "Looking for a WordPress alternative? Enjoy programming in Python? Do you love Django but wish you could have the core features there already by default and with a friendlier interface?\nWell Mezzanine might be exactly what you are looking for.\nMezzanine is a powerful Content Management System that is built using the Django framework, but differs in that instead of having to build out models/view/templates for basic features, Mezzanine provides many of them by default, including the ability to create pages and posts in the admin with a beautiful, user-friendly interface.\nMezzanine can also be added onto a Django project and can be extended with e-commerce functionality.\nIn this course, you will learn all about its features as we build out a clean, responsive blog with dynamic blog posts, custom hero images, a contact form, and much more using Mezzanine's tools and templates.\nWhy this class?\n\nBecause aside from the docs, there are hardly any tutorials out there for using Mezzanine, and any that you do find are from 4-5 years ago. Therefore, I decided to create one comprehensive, thorough course on it myself.\nAlso, it's common for clients to ask for blogs to be built, but are opposed to using WordPress for various reasons. Mezzanine offers the perfect alternative for them!\nRequirements\nThis is a course on Mezzanine, not on HTML or CSS, so it would be good to have an understanding of the two. This will be assumed in the course.\nAlso, since Mezzanine is built with Python and on the Django framework, the student should have a basic understanding of those as well, however because of the dozens of templates shipped with Mezzanine, these can be picked up rather quickly as we use those as \"guides.\"\nWho should take this course?\nAnyone who wants to learn more about Mezzanine\nAnyone who is looking for a WordPress alternative for their blog\nAnyone who finds Django overkill for creating blogs for their clients.\nAnyone looking to add a new tool to their web development portfolio.\nWhether you fit into these categories or not, Mezzanine is an excellent CMS and I am certain you will be as excited to use it as I am.",
      "target_audience": [
        "Anyone who is looking for a WordPress alternative for their blog or for their clients",
        "Anyone who wants to learn more about Mezzanine CMS",
        "Anyone looking to add a new web framework to their web development portfolio.",
        "Anyone who finds Django overkill for creating blogs for their clients."
      ]
    },
    {
      "title": "ASP.NET CORE 2.2.1 COURSE",
      "url": "https://www.udemy.com/course/asp-net-core-2-angular-4/",
      "bio": "Learn and build full apps with Asp Net Core 2.2.1,Angular 6,Entity Framework Core,Identity Core,NET Standarts,React.js",
      "objectives": [
        "Learn how to develop Web Applications With Asp Net Core 2 Mvc 6 Framework",
        "Learn Dependency Injection in Asp net Core 2 Mvc 6",
        "Develop Client-Side Apps With, JQuery, Knockout js",
        "Learn to use Razor Web Pages",
        "Angular 4 using in Asp net Core 2 Mvc 6 projects",
        "Learn to use Design Patterns",
        "Learn how to integrate Entity Framework Core to Asp Net Core 2 project",
        "Learn how to implement and use Asp Net Core IDENTITY",
        "Learn to use state managements like, sessions, caching and cookie",
        "Learn to use React JS",
        "Learn how to develop Pipeline at the security side"
      ],
      "course_content": {
        "Asp Net Core 2.0 Overview": [
          "Introduction",
          "Download Visual Studio for Asp Net Core 2",
          "Installation Asp net core 2.0",
          "Introduction Asp net core 2.0,",
          "Why use Asp Net Core",
          "Introduction NET Standard",
          "Life-saving Innovations",
          "NET Core 2.0 Changes",
          "What’s The Difference .net Standard vs .net Core",
          "Create First Angular 4 Project",
          "Create First React.js Project",
          "Working With Razor Web Pages (New) (Part 1)",
          "Working With Razor Web Pages (New) (Part 2)",
          "Working With Razor Web Pages (Extend) (Part 1)",
          "Working With Razor Web Pages (Extend) (Part 2)",
          "Asp Net Core 2.0 Mvc Project Overview",
          "Working on Startup Class",
          "Program cs Overview",
          "Working on Nuget Packages"
        ],
        "Entity Framework Core 2.0": [
          "What is Entity Framework Core",
          "New features in EF Core 2.0",
          "Adding Entity Framework Core 2.0",
          "Create Database Tables",
          "Base Classes in Entity Framework Core",
          "Create Data Context in Entity Framework Core",
          "Dependency Injection",
          "Connection Strings"
        ],
        "Asp.Net Core Project - Setup": [
          "Create Project and Code Overview",
          "Project all Settings"
        ],
        "Identity Core 2.0": [
          "Introduction",
          "Identity Core Setup (Part 1)",
          "Identity Core Setup (Part 2)",
          "Identity Core Setup (Part 3)",
          "Identity Core Setup (Part 4)",
          "Identity Core Setup (Part 5)",
          "Identity Core Setup (Part 6)",
          "Identity Core Setup (Part 7)",
          "Identity Core Setup (Part 8)"
        ],
        "Services and Repositories": [
          "What is Repository Design Pattern",
          "Create Generics",
          "Work with Repositories (Part 1)",
          "Work with Repositories (Part 2)",
          "Work with Repositories (Part 3)"
        ],
        "Working With Mvc 6": [
          "What is MVC 6",
          "Asp.Net Core Mvc 6 (Part 1- Controller)",
          "Asp.Net Core Mvc 6 (Part 2- Controller)",
          "Asp.Net Core Mvc 6 (Part 3- Views)",
          "Asp.Net Core Mvc 6 (Part 4 - Views - Tag Helpers)",
          "Asp.Net Core Mvc 6 (Part 5 - Scaffold Templates)",
          "Asp.Net Core Mvc 6 (Part 6 - Templates)",
          "Asp.Net Core Mvc 6 (Part 7)",
          "Source Codes"
        ],
        "Asp Net Core Web Api": [
          "Introduction",
          "What is Web API",
          "More details about Web API",
          "Why choose Asp Net Core Web API",
          "Http Protocols",
          "First Web API project",
          "Asp net Core Web API project overview",
          "What is Postman and Fiddler",
          "What is Postman and Fake Data",
          "Areas and Area Routing",
          "Working on Web API(Part 1)",
          "Working on Web API(Part 2)",
          "Dependency Injection",
          "Repositories on Web API(Part 1)",
          "Repositories on Web API(Part 2)",
          "Repositories on Web API and View Models(Part 3)",
          "Repositories on Web API(Part 4)",
          "Repositories on Web API(Part 5)",
          "Source Codes"
        ]
      },
      "requirements": [
        "Visual Studio 2017 (FREE)",
        "Knowledge and experience in C#",
        "Basics of Html, CSS and Javascript",
        "Basics of .Net Framework"
      ],
      "description": "ASP NET CORE 2 - THE MOST COMPREHENSIVE COURSE ON THE NET!\nIn this course you will learn ASP NET Core 2.2.1.\nIf you already know ASP NET Core, it is time for you to move on the next version.\nThis is a chance to see the new features and apply them on the sample live project with all the elements used successfully. So you can expreriment all the new features of Asp NET Core 2, on a live project.\nWe can say that this course is the most comprehensive ASP NET CORE 2 course on the internet !!!\n\nFirst of all, you should know that ASP NET CORE 2 is developed on the object oriented architecture. So you should have some knowledge and experience on software development and OOP - C#.\n\nThe course is starting with Model - View - Controller (MVC).  First you will learn what is it, and after that you will learn to apply MVC Architecture on the same project.\nOne of the best new features is, Razor Web Pages. And these are the special detailed subject on this course.\nAlso you will learn how to use Web API on Asp Net Core 2.\nAfter MVC, you will learn routing, model binding, model validation, dependency injection and how to use design patterns in the project. And continue with Entity Framework Core, how to integrate to the project and new features of the Entity Framework Core 2.\nThe most important subject of the course is IDENTITY. You will learn Login, Register, Forget Password And Security Processes by manuel and auto. So we can be developing secure projects on this course.\nThe next big subject is, State Management.\nSessions,\nCaching,\nCookies\nand how to use them on ASP NET Core 2.\nWell of course we will learn Angular 6, Knockout.js and React.js which comes at the templates with Asp NET Core 2.2.1 in details.\nAlso some advances subjects : Pipeline and how to develop code on pipeline, especially at the security side and user interaction.\nWellcome to our course, which will teach you all about ASP NET CORE 2.",
      "target_audience": [
        "Wants to develop Asp Net Core 2 Web Applications",
        "Wants to learn the differences between Asp Net Core 1 and Core2",
        "Wants to learn Entity Framework Core 2",
        "Wants to learn how to use Web API on Asp Net Core 2",
        "Wants to learn Angular 4"
      ]
    },
    {
      "title": "Apply Jobs as MERN stack developer with this course",
      "url": "https://www.udemy.com/course/apply-jobs-as-mern-stack-developer-with-this-course/",
      "bio": "Develop Production grade Fullstack Projects with MERN stack and start apply applying Jobs as MERN stack developer",
      "objectives": [
        "You can apply Jobs as a MERN stack developer",
        "You will learn to implement Authentication and Restricted Routes concept",
        "You will become a Pro Fullstack developer",
        "You will learn all the concepts of React, Node, Express and MongoDB in practical project based approach",
        "You will learn various debugging techniques"
      ],
      "course_content": {
        "Fundamentals of React JS": [
          "Course Overview",
          "Know Your Instructor & Get Help/Support",
          "ReactJS introduction and environment setup",
          "create react app",
          "program flow and project files walkthrough",
          "types of components in react",
          "creating and using 1st functional component",
          "creating 1st stateful class componentcreatin",
          "ES6 functional component, export and import",
          "comparision between functional and class component",
          "react hooks intro",
          "jsx explained",
          "props in functional and class component",
          "state vs props",
          "deep dive into setState",
          "Handling form in class component part-1",
          "Handling form in class component part-2",
          "componentDidMount lifecycle onload method"
        ],
        "Backend API for Login & Signup: Production Grade MERN stack project": [
          "1.1-Setup local environment",
          "Setup backend nodejs API",
          "what is middleware",
          "Setup free cloud MongoDB",
          "Storing and exporting configuration",
          "Setting up UserModel with mongoose",
          "Setting up 1st router and 1st route",
          "Creating Registration REST API",
          "Saving user in the database",
          "Encrypting password before saving",
          "Implementing Login API",
          "Implementing JWT authentication",
          "Implementing middleware for protected routes"
        ],
        "Backend API for user POST: Production Grade MERN stack project": [
          "Setting up Post model with mongoose",
          "Setting up route for Post",
          "Implementing create post API",
          "Do not return password in response",
          "Get all posts for all users",
          "Get all posts for current logged-in user"
        ],
        "Setup frontend React env & develop layout: Production Grade MERN stack project": [
          "Setting up frontend environment with React",
          "Add Materialize css and work on NavBar",
          "Add React VSC extension and further style NavBar",
          "Update About React-Router-Dom - V6",
          "Adding pages and routing",
          "Stopping page refresh with LINK tag",
          "Adding google fonts and custom style",
          "Working on Login screen",
          "Working on Signup screen",
          "Working with profile page",
          "Working with profile page gallery section"
        ],
        "Integrating Frontend & Backend": [
          "Working on Homepage Post section",
          "Enhancing Homepage post section",
          "Working on Create Post page",
          "Adding create post routing and further styling it",
          "Futher styling create-post page",
          "Running Frontend and Backend together",
          "Adding state variables to signup page",
          "Connecting Signup form to Backend Registration API",
          "Solving CORS issue",
          "Add Toast message on frontend for error",
          "Further styling the Toast message for error",
          "Navigate user to login page after successful registration",
          "Form input validation",
          "Integrating Login page with backend Login API"
        ],
        "Cloud storage & Redux": [
          "Enriching Login API to get more user information",
          "Setup free cloud storage for storing images",
          "Adding state variables to create post screen",
          "Uploading Post image to cloud storage",
          "Updating backend create-post api for storing post image url",
          "Storing loggedin user info in local storage",
          "Saving new post by making API call",
          "Testing create new post functionality end to end",
          "Setup Reducer and Context API for state sharing and management Part-1",
          "Setup Reducer and Context API for state sharing and management Part-2.mp4",
          "Fixing error",
          "Enriching styling for home page",
          "Hide and Show menu items based on user loggedin state",
          "Loading home page posts from backend API"
        ],
        "Like, Unlike, Comment, Delete, Logout functionality": [
          "Implementing Logout functionality",
          "Fetching Profile page data from backend API",
          "Implementing Like Post API in Backend",
          "Implementing UnLike Post API in Backend.mp4",
          "Implementing Like and Unlike on frontend and integrate to backend",
          "Refresh Like and Unlike count",
          "Restricting user to like and unlike only once per post",
          "Implementing Backend API for Comment",
          "Integrate frontend with backend comment API",
          "12.6-Showing comments on frontend",
          "API for Delete Post",
          "Integrate frontend with backend Delete Post API",
          "Test the functionality"
        ],
        "Other's Profile & Follow, Unfollow": [
          "API for seeing Post from different user",
          "Frontend for Other user profile page Part-1",
          "Navigate to Other user profile page",
          "Create Follow Unfollow backend API",
          "Frontend changes for Follow",
          "Updating localStorage with following information",
          "Updating frontend state with following info",
          "Implementing unfollow logic on frontend",
          "Make the user profile info dynamic",
          "Showing extra info on user profile page",
          "API for Post from my followings",
          "UI changes for post from my followings - Part -1",
          "UI changes for post from my followings - Part 2",
          "Bug fix for follow unfollow",
          "Working on user profile picture",
          "Showing user pic along side user name on Post"
        ],
        "Project Source Code": [
          "Frontend source code",
          "Backend source code"
        ]
      },
      "requirements": [
        "Basics of Html, Css, JavaScript"
      ],
      "description": "In this course, you will learn everything that is needed for you to become a Pro Fullstack developer in a hands-on step by step approach.\nIn this MERN stack course you are going to learn all the components that will help you develop your own production grade full stack application.\nYou will be able to apply for any Job related to MERN stack.\nEverything will be taught from scratch with practical examples.\nFollowing are the topics that will be covered in this course:\n1.1-ReactJS introduction and environment setup\n1.2-create react app\n1.3-program flow and project files walkthrough\n1.4-types of components in react\n1.5-creating and using 1st functional component\n1.6-creating 1st stateful class component\n1.7-ES6 functional component, export and import\n1.8-comparision between functional and class component\n1.9-react hooks intro\n1.10-jsx explained\n1.11-props in functional and class component\n1.12-state vs props\n1.13-deep dive into setState\n1.14-Handling form in class component part-1\n1.15-Handling form in class component part-2\n1.16-componentDidMount lifecycle onload method\n\n\nWe will use the following technologies:\n\n\nMONGODB - NoSQL database for storing data as documents and collection\nEXPRESS JS - Web framework for developing RESTful web services/API’s\nREACT JS - Library for developing the single page UI with functional components\nNODE JS - Runtime environment for developing our backend application\nBcrypt JS - Npm package for encrypting and decrypting password\nJson Web Token(JWT) - For secure token based communication between frontend and backend via API calls\nREACT REDUX - For state management in our React application\nlocalStorage - For storing application information in the frontend\nNodemon - Npm package for auto-reload of backend changes\nCloudinary - Cloud storage for storing images\nVisual studio code - Development tool/IDE\n12. ES7 React Extension - Helps to create React functional component faster\nWe will also learn the debugging techniques and best practices that will help you become an awesome MERN stack developer.",
      "target_audience": [
        "Anyone who wants to apply Jobs as a MERN stack developer"
      ]
    },
    {
      "title": "Laravel 9 Admin Panel - Learn Roles and Permissions",
      "url": "https://www.udemy.com/course/laravel-9-admin-panel-learn-roles-and-permissions/",
      "bio": "Laravel Roles and Permissions without Package",
      "objectives": [
        "Create admin panel with Laravel",
        "Learn roles and permissions without package",
        "Learn how to use Policy with Laravel",
        "Create a custom blade directive with Laravel",
        "Create Laravel Policy and use permissions to authorize users"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Upgrade GitHub Repos from Laravel Mix to Vite"
        ],
        "Create First Admin Panel": [
          "Create Laravel Project",
          "Install Laravel Breeze Package",
          "Create Admin Seeder",
          "Create The Admin Middleware",
          "Create Admin Dashboard with Tailwind CSS"
        ],
        "Create Second Admin Panel": [
          "Create The Project",
          "Create Model and Migration for Role and Permission",
          "Create Admin Seeder",
          "Create Admin Layout",
          "Create Admin Middleware",
          "Create One Middleware to Use For All Roles"
        ],
        "CRUD for Roles and Permissions": [
          "Create Roles and Permissions Routes",
          "Display Roles and Permissions",
          "Create Pages for Roles and Permissions",
          "Store new Roles and Permissions",
          "Update Roles and Permissions",
          "Delete Roles and Permissions",
          "Assign Permissions to The Role"
        ],
        "Display, Update and Delete Users": [
          "Create Users Index Page",
          "Update and Assign Role to the User",
          "Delete Users"
        ],
        "Working with Posts": [
          "Create Fake Posts",
          "Display All Posts"
        ],
        "Working with Authorization": [
          "Create Post Policy",
          "Authorize the User for Creating new Post",
          "Authorize the Admin for ALL Actions",
          "Add Authorization for Update and Delete Post"
        ],
        "Create Custom Blade Directive": [
          "Create Custom Admin Blade Directive"
        ],
        "Resource Code": [
          "Get The Links"
        ]
      },
      "requirements": [
        "You need to know the basics of Laravel"
      ],
      "description": "This is the course to take if you want to learn how to add user roles, levels, permissions, and an admin dashboard to your app.\n\n\nThe method I teach in this course will work on any version of Laravel. So, not only will it work on Laravel 9.\nHere we are going to create all the work from scratch so without package.\n\n\nSo tag along and let's go for a nice ride!\n\n\nIn this course, you will learn how to create an admin panel with Laravel and Tailwind CSS. Learn how to create roles and permissions. Create Policy and make authorization. You are going to learn also how to create custom blade directives. We are going to create custom middleware for roles and protect routes.\nLearn Laravel roles and permissions without packages. We are going to work also with Tailwind CSS and Alpinejs for designin the admin layout dashboard.\nCreate CRUD for Roles, Permissions.\nCreate Posts and also create the Post policy to authorize users based on user role permissions. The admin can assign roles to the user and also assign permissions to the role.\nLearn Laravel 9 Roles and Permissions without package. Learn how to create admin panel in the easy way.",
      "target_audience": [
        "PHP Laravel developers"
      ]
    },
    {
      "title": "Build Udemy Clone Learning Management Using PHP - Unofficial",
      "url": "https://www.udemy.com/course/build-learning-management-system-udemi-clone-using-php/",
      "bio": "Do you intend to learn or want to run online learning management platform business, then this is the best course for you",
      "objectives": [
        "Be able to build any web app you want using codeigniter 2025",
        "Be able to build complete Udemi clone web application",
        "Build fully-fledged web apps for your startup or business",
        "Work as a freelance PHP developer anywhere anytime",
        "Craft a portfolio of web apps to apply for seniour developer jobs",
        "Learn to use PHP Framework",
        "Have a new PHP Skill that would increase income",
        "Learn best way to use AJAX",
        "Understands how youtube, vimeo API works",
        "Build a Multi-linqual Web Application",
        "How to run online course business",
        "Build complete email verrification system with ease",
        "Learn how to automatically calculate video lenght with API's",
        "Create a simple quiz management system to evaluate your students",
        "Real time ajax chat without refreshing your page",
        "Standard and mature internal messaging system.",
        "Learn how to add products to cart using PHP Framework"
      ],
      "course_content": {
        "Introduction": [
          "Showing what we are building",
          "1.2 Files download and installation (text editor, wamp, codeigniter)",
          "1.3 Solving common wamp server problem",
          "1.4 Understanding phpmyadmin and how to use it via command",
          "1.5 Understanding phpmyadmin and how to use it via command part two"
        ],
        "2. Introduction and Understanding CodeIgniter Framework": [
          "2.1 Introducing php codeigniter framework",
          "2.2 Installation and setup of codeigniter",
          "2.3 Quick Explanation on How Codeigniter Works",
          "2.4. Basic Codeigniter Config Explainning Files Autoload",
          "2.5 Integrating html template to the codeigniter",
          "2.6 How to Link our CSS files with PHP base_url function",
          "2.7. How to download the template we are using in this course - MUST WATCH"
        ],
        "3. Creating Database and tables to used for the purpose of this course": [
          "3.1 Creating database and category table",
          "3.2 Creating comment table",
          "3.3 Creating courses table",
          "3.4 Creating the enrolment table",
          "3.5 Creating the frontend language and language list table",
          "3.6 Creating table for lesson",
          "3.7 Creating log message and message thread table",
          "3.8 Creating table for payment",
          "3.9 Create payout question and rating tables",
          "3.10 Create tag settings role and section tables",
          "3.11 Creating table users"
        ],
        "4. Working with the Download Template and Loading Login Page": [
          "4.1 Basic Information on the template we are using",
          "4.2 Connecting to database and explaining how to database for autoload",
          "4.3 Brief Explanation on the routes and htaccess",
          "4.4 Explaining what is config and working with FCPATH function",
          "4.5 Loaind our first login page",
          "4.6 More explanationo on the login view",
          "4.7 Inserting and selecting settins table",
          "4.8 Working with the helper to select from database",
          "4.9 Testing and round up section"
        ],
        "5. Create Language Helper, Login Function Codes and Prepare Registration Form": [
          "5.1 Working with the language helper",
          "5.2 Working with the language helper part two",
          "5.3 Working with the language helper part three",
          "5.4 Testing the multi-language in our app",
          "5.5 Preparing login codes in auth controller",
          "5.6 Creating Login Model and autoloading it",
          "5.7 Insert into role table",
          "5.8 Preparing registration form page",
          "5.9 Complete and fine tune registration form page"
        ],
        "6. Working with the register codes, email sending and verification": [
          "6.1 Working with the user registration",
          "6.2 Working with user registration using json",
          "6.3 Working with user registration using json two",
          "6.4 Working with user registration - email_model user_model and nnotification",
          "6.5 Fix simple bugs encounter",
          "6.6 Creating email and user model and checking email duplication",
          "6.7 Brief explanation on function that check for email duplication",
          "6.8 Write an insert codes in user model",
          "6.9 Send email verification code",
          "6.10 Send email message with mail function",
          "6.11 Verify account and encode link with base64_encode",
          "6.12 Fix little issue and test our registration code",
          "6.13 Hide registration notification with javascript"
        ],
        "7. Write login code and login to the admin portal": [
          "7.1 Working with the login code in model",
          "7.2 Finishing the login codes in model",
          "7.3 Working with helper to create get user role function",
          "7.4 Create admin and home controllers with dashbaord method",
          "7.5 Login to admin portal and fix login code issue",
          "7.6 Working with the logut function and redirect for admin"
        ],
        "8 Working with the forgot password codes": [
          "8.1 Working with the forgot password function",
          "8.2 Finalizing the reset password code in auth controller",
          "8.3 Working with the email model to reset password",
          "8.4 Test password and round up section"
        ],
        "9 Fine tunning admin portal page": [
          "9.1 Fine tunning the admin portal",
          "9.2 Working with the footer page info and auto get seconds that page load",
          "9.3 Showing how to use elapsed_time in benchmark",
          "9.4 Working with the admin image in model",
          "9.5 Working with the user model to display login users name",
          "9.6 Working with the navigation menu",
          "9.7 Loading our navigation menu from text file",
          "9.8 Display image and name of the user on header",
          "9.9 Working with the header part two"
        ],
        "10. Building system general settings page": [
          "10.1 General information and fixing setting link",
          "10.2 Working with the method for settings",
          "10.3 Preparing settings tabs and linking to the js file",
          "10.4 Installing system html template",
          "10.5 Insert more column into settings table",
          "10.6 Adding another image tab and perfect form",
          "10.7 Arrangng other template for the tabs",
          "10.8 Working with the update codes in controller",
          "10.9 Testing update code and display information",
          "10.10 Display general setting info part two",
          "10.11 Testing update codes and display information part three",
          "10.12 Testing update codes and display information part four",
          "10.13 Complete display general setting information"
        ]
      },
      "requirements": [
        "Little knowledge of PHP, though not neccessary becase I'll teach you everything you need to know",
        "Little knowledge of CSS will be an advantage",
        "Zeal to learn PHP Framework",
        "Computer System - Windows/Mac",
        "I'll walk you through, step-by-step how to setup PHP CodeIgniter"
      ],
      "description": "PLEASE READ ALL THE POINTS BEFORE PROCEEDING\nYou will get complete source codes and database once you enroll for this course BUT NOTE THAT ALL LESSONS HAVE NOT BEEN FULLY UPLOADED. Please do not JOIN this course if you can not wait for me to fully upload complete lessons.\nPlease do not ask me to tell you estimated time the lessons will be fully uploaded because I may be very busy during the process of creating more lessons but will definitely complete the course as soon as possible.\nPlease watch the preview video and ensure you are satisfy with my accent and my English before enrolling for the course.\nPlease do not take the course if you are not ready to learn how to build complete learning management system like this platform.\nPlease note that The objective of this course is learn PHP CodeIgniter framework by building your own complete learning system through learning by practical.\nAlso, note that there is going to be assignments, quizzes, and evaluations.\nPlease read the Pre-requisites ABOVE before joining the course\nIf you are still with me lets continue\nBuilding dynamic websites is not an easy challenge and requires time and effort dedicated to coding every bit and piece of the website, which is why anytime there is a new tool that promises to ease the woes of coding, developers always jump at the chance to try it.\nPHP Framework (CodeIgniter) is a simple open-source framework that makes it the coding tasks easier by providing a faster way to set up a PHP website from the ground-up. This tool with a small framework ensures that developers can design websites that are light, fast and dynamic.\nSo, for any developer that wants to become a server-side master, this is a tool that they should definitely have in their toolkit. But, it’s not always easy to find a course that is clear and concise and targets exactly what you are looking for!\nThis is why we have designed this course with an aim teach you everything you need know about PHP Framework (CodeIgniter) with real world project (Building Standard and Most School Management System) using a no-fluff and clear approach at the topic at hand, this tutorial will breakdown CodeIgniter into simple and easy to learn videos so as to be able to build any real world application on PHP Framework (CodeIgniter).\nAt the end of this course, you will have not only learnt the PHP Framework (CodeIgniter), but you will actually be able to start building your own projects from scratch. In addition to knowledge, this course will also give you the practical hands-on experience and the confidence to start coding your own websites by building school system.\nThe course will start at the very beginning with a detailed introduction into the PHP Framework (CodeIgniter) from there moving on to installing the framework. From there you will become familiar with the framework, and start building your own Learning Management Application.\nJoin us today as we learn PHP Framework (CodeIgniter) together by building real world software and be free from some authors who claim to teach you a particular programming language but only teach you basis and some copy and paste projects which at the end cannot take you to anywhere.\nLearning management system\nA learning management system (LMS) is a software application for the administration, documentation, tracking, reporting, automation and delivery of educational courses, training programs, or learning and development programs. The learning management system concept emerged directly from e-Learning\nBenefits of Learning Management System\n1. Organizes eLearning content in one location.\nInstead of having your eLearning content spread out over different hard drives and devices, you can store all of your eLearning materials in one location. This reduces the risk of losing important data and makes it easier to create your eLearning course. Every member of your eLearning team can also access the information if you’re using a cloud-based Learning Management System, thanks to the fact that it’s all stored on the remote server. This makes Learning Management Systems a natural fit for online collaboration.\n2. Provides unlimited access to eLearning materials.\nOnce you upload your eLearning course materials onto the LMS and publish them, your audience has unlimited access to the information they need. Even those who are on the go can login to the eLearning platform via their smartphones and tablets, so that they don’t have to wait until their next online training session to develop skills and perfect work-related tasks. This is one of the main reasons why a LMS is essential for global audiences in different time zones.\n3. Easily tracks learner progress and performance.\nThe best Learning Management System gives you the ability to keep track of learner progress and ensure that they are meeting their performance milestones.\n4. Reduces Learning and Development costs.\nA Learning Management System gives you the power to completely do away with instructor travel costs, online training site rentals, and printed eLearning materials. Your online learners can carry out all of their training online, which means that you can save a sizable sum on your Learning and Development budget. For example, you won’t have to worry about printing out 500 manuals and booking a hotel room for your instructor, because all the information your online learners require is right in the LMS.\n5. Reduces Learning and Development time.\nA Learning Management System can even reduce online training times, thanks to the fact that it gives online learners only the information they need in a direct and organized manner. Instead of having to sit through a lengthy half-hour online training course, online learners can simply click on the online modules they need and absorb the knowledge in a fraction of the time. They can also assess their understanding by taking online exams or quizzes, participate in interactive scenarios and simulations, and watch eLearning videos that highlight complex processes or tasks.\n6. Quickly and conveniently expands eLearning courses.\nIf you want to add additional online modules to your eLearning course in order to update information based on new trends or scientific evidence, you can simply login to the Learning Management System and make the necessary modifications without redoing your entire eLearning course. All of the content is in one location, which allows you to change only the master eLearning course and then deploy it to all of your online learners. This is in stark contrast to a traditional course, where you would have to send every member of your audience an updated manual or updated handouts.\nFrom Beginner to Expert PHP Framework (CodeIgniter) Developer\nWe know that you’re here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they’re doing, you’d be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and we’re always on hand to answer student questions.\nSo by the end of the course, you’ll completely understand:\nPHP Framework (CodeIgniter) to level of building your own software especially LMS.\nLearn how work with API's (Youtube, Vimeo and many others)\nLearn how to create add-on to your existing projects\nHow to use Ajax, jQuery effectively.\nBuild complete LMS.\nHow to create secure email verification system\nSoftware Design: How to organise and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, classes and protocols.\nBe ready to build meaningful software quickly\nDon’t waste your time\nDon’t waste another minute of your precious life on poor quality videos on YouTube or instructors who you can’t understand or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it and why many students rated my courses 5 stars!\nDon’t waste your money\nInside this course, you’re getting exactly the same course materials and curriculum as our 16 weeks in-person programming bootcamp. Save loads of money by getting this course and do it at your own pace!\nThose that will benefit from this course :\nIf you have never programmed before, then take this course to learn\nIf you know how to code, but are new to programming, then take this course to build web Apps.\nIf you are a developer, then take this course to see how much time you can save building real world software – Complete Udemy Clone\nIf you’ve tried PHP Framework (CodeIgniter) before, then take this course to get a comprehensive curriculum that covers all the important aspects of PHP Framework (CodeIgniter) development\nEntrepreneurs Who Want to Build Web Apps with Single Codebase\nManagers and Program Managers Who Want to Learn How to Build Complete Hospital Management System.\nAnyone wanting to learn to code in a practical way\nAnyone who wants to kick start a career or hobby developing apps\nThis is the only course on this platform where students can drop their desired features and both the students and the instructor will develop it together. This is also a course where more features will be added by the instructor and each section will be released everyday.\nJoin us NOW as we build this awesome software together using one of the best PHP Framework !",
      "target_audience": [
        "Beginner developer want to learn more about PHP Framework",
        "Professional who want to add more to their knowledge",
        "Those who want to know how to build udemi clone",
        "Developers who want to be PHP Framework expert.",
        "Beginner Codeigniter developers curious about how to build school system",
        "Business men/women who want to go into onine course business",
        "Those who want to increase their daily revenue",
        "Freelance who want to increase thier skills",
        "Developers who want to write code like a professional"
      ]
    },
    {
      "title": "Vue.js Jump-start with Nuxt.js & Firebase",
      "url": "https://www.udemy.com/course/vuejs-jump-start-with-nuxtjs-firebase/",
      "bio": "Learn how to build search engine friendly web apps with Vue & Nuxt",
      "objectives": [
        "Students will be able to jump-start their new Vue/Nuxt projects with the skill and app boiler plate from this course",
        "Get a good grasp of Vuex, VueRouter and Nuxt",
        "Properly structure and secure Firebase database and make reasonably complex Firebase queries",
        "Install and integrate Vue plugins and Nuxt modules and create Vue filters",
        "General understanding of a full-blown application that includes user management and role based access",
        "Techniques to make pages built with Vue/Nuxt search engine friendly",
        "Basic understanding on deploying Vue/Nuxt app as a server in production mode with PM2"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting started": [
          "Project creation",
          "Setting up",
          "Laying foundation",
          "Vuex store",
          "Setting up Firebase"
        ],
        "Development starts": [
          "Adding user group",
          "Form and user interaction",
          "Intro to components",
          "Form validation"
        ],
        "User groups": [
          "Listing user groups",
          "Update group",
          "Delete user group"
        ],
        "Authentication": [
          "Setting up signup form",
          "Signup process",
          "Mixin",
          "Logging in",
          "Dynamic menu"
        ],
        "Firebase rules and user profile": [
          "Firebase rules",
          "User profile"
        ],
        "Administration": [
          "Administrators",
          "Products",
          "Uploading image",
          "Listing products",
          "Delete product",
          "Update product"
        ],
        "The catalog": [
          "Product catalog",
          "Search and sort",
          "Product page"
        ],
        "Shopping cart": [
          "Cart - Part 1",
          "Cart - Part 2",
          "Cart - Part 3",
          "Cart - Part 4",
          "Checkout - Part 1",
          "Checkout - Part 2",
          "Local storage"
        ],
        "The server": [
          "The server"
        ]
      },
      "requirements": [
        "Some web development knowledge of HTML, CSS and Javascript",
        "Some familiarity with Node, especially with the use of npm"
      ],
      "description": "Welcome to the course.\nThis course is about how to build a search engine friendly website or application using Vue.js with Nuxt.js (Updated for Nuxt v2).\nWe'll have search engine friendly features and improved perfomarnce by using Nuxt.js which is a Vue framework.\nThis is because Nuxt pre-renders the code and only delivers mostly the things required on the client side, which is the browser.\nThe other major part of the course is Firebase. We'll use it as the database for this course.\nWe'll be learning how to structure the database, it's security rules, file storage and of course queries to work with data.\nSo, this course is also a good primer on Firebase that will help you learn simple to reasonably complex Firebase queries.\n\n\nThis is a course where you would learn by building an app.\nWe'll build a simple ecommerce app with product and user management and role based access.\nThen there is a product catalog and shopping cart on the front end.\nAt the end of the course you'll have a working app boiler plate that you could use for your own projects.\n\n\nThis is a jump-start course. So, it's about getting you up and running quickly. And it's not about long and winding explanation of everything.\nWe'll just do some work and then look at the result so that we learn by doing.\nAt the end of the course you'll receive the source code of the app we built.\nSo, I wish you good luck and let's get started.  ;)",
      "target_audience": [
        "Web development beginner looking to skill up and upgrade from simple tools like Jquery",
        "Intermediate web developer looking for a good foundation in Vue-js and Firebase"
      ]
    },
    {
      "title": "Laravel Ecommerce Website with Vue.js Admin Panel",
      "url": "https://www.udemy.com/course/laravel-ecommerce-website-with-vuejs-admin-panel/",
      "bio": "Building Full Stack Applications with Laravel, Tailwind.css, Vue.js and Alpine.js and Deploy on Custom Domain",
      "objectives": [
        "Build full stack apps with Laravel, Vue JS and Tailwind CSS from start to finish",
        "Create Tailwind CSS + Vue JS responsive admin panel",
        "How to build Laravel REST API and connect it to Vue JS Admin Panel",
        "Deploy Laravel and Vue JS apps on custom domain",
        "How to integrate Stripe online payments in your Laravel applications"
      ],
      "course_content": {
        "Introduction": [
          "Project Full Demo",
          "Prerequisites"
        ],
        "Project Setup": [
          "Setup Working Environment",
          "Understanding Database Schema",
          "Generate Models and Empty Migrations",
          "Write Migrations",
          "Project Source Code",
          "Discord Server"
        ],
        "Building Vue.js Admin Panel": [
          "Section Overview",
          "Tailwind.css Crash Course",
          "Generate Vue.js project with Vite",
          "Add Tailwindcss to Vue.js Project",
          "Install vuex and create store",
          "Install vue-router and create routes",
          "Create Login form page",
          "Create request password reset and reset password pages",
          "Create Layout for guest users",
          "Create Empty Layout for Authorized Users",
          "Create Admin Panel Sidebar",
          "Create Admin Panel Navbar",
          "Create and Implement Sidebar toggle button",
          "Make Layout Responsive",
          "Handle Unauthorized Users to Redirect to Login Page",
          "Create Not Found Page",
          "Project Source Code"
        ],
        "Connect Vue.js Admin Panel to Laravel API": [
          "Section Overview",
          "Create Admin User Seeder in Laravel",
          "Implement Login and Logout for Admin Panel in Laravel",
          "Install and Configure axios in Vue.js",
          "Implement Login/Logout Full Process",
          "Show Validation Error Messages in Login Form",
          "Add Splash Screen and Output User in Navbar",
          "Project Source Code"
        ],
        "Products CRUD in Vue.js Admin with Laravel API": [
          "Section Overview",
          "Implement Product CRUD in Laravel API",
          "Create Vue.js Spinner Component",
          "Create Products Table in Vue.js",
          "Connect Products Table Vue.js Component to API",
          "Implement Pagination",
          "Implement Per Page and Search in Products",
          "Products sorting",
          "Refactor Product Component",
          "Create Empty Product Modal",
          "Implement Product Creation Modal Component",
          "Connect Product Create Modal to Laravel API",
          "Product Delete",
          "Product update",
          "Add Animation to Products Table",
          "Move API Controllers into Api Folder",
          "Testing products CRUD",
          "Project Source Code"
        ],
        "Start Working on Website Frontend": [
          "Section Overview",
          "Download the Frontend Theme",
          "Install Laravel Breeze",
          "Integrate E-commerce Theme into Laravel",
          "Create Login Form with Theme Design",
          "Create Password Reset Form",
          "Create Signup Form",
          "Render Products on Website Part 1",
          "Render Products on Website Part 2",
          "Send Email on Customer Registration",
          "Customize Email Templates",
          "Create Empty Product Page",
          "Display Product Details Page",
          "Project Source Code"
        ],
        "Shopping Cart Functionality": [
          "Section Overview",
          "Create Cart Helper with reusable methods",
          "Create CartController",
          "Prepare API Routes for Cart Management",
          "Create middleware guestOrVerified",
          "Prepare JavaScript for Add to Cart",
          "Implement Adding Items into Cart",
          "Create Cart Page Part 1",
          "Create Cart Page Part 2",
          "Show Cart Subtotal and Checkout Button",
          "Implement Add to Cart from Product inner Page",
          "Project Source Code"
        ],
        "Customer Profile Management": [
          "Section Overview",
          "Rename customer id into user_id",
          "Insert Customer in DB on Cegistration",
          "Change Countries States Column into JSON",
          "Setup Eloquent Model Relations from Customer to Addresses and to User",
          "Create Profile Controller",
          "Create ProfileRequest",
          "Create Customer Details Form",
          "Implement Customer Details Update",
          "Implement Password update",
          "Project Source Code"
        ],
        "Stripe Checkout & Orders": [
          "Section Overview",
          "Stripe Online Payments Checkout Part 1",
          "Stripe Online Payments Checkout Part 2",
          "Stripe Online Payments Checkout Part 3",
          "Stripe Online Payments Checkout Part 4",
          "Create Order List Page for Customers",
          "Implement Payment of Unpaid Orders",
          "Stripe Webhooks Part 1",
          "Stripe Webhooks Part 2",
          "Create Order Details Page",
          "Project Source Code"
        ],
        "Output all Orders in Vue.js Admin Panel": [
          "Section Overview",
          "Create Orders Table Component",
          "Load Data into Orders Table",
          "Prepare API for Order Details Page",
          "Create Final version of OrderResource",
          "Create Order Details Page",
          "Implement Order Status Update from Admin",
          "Display Notification on Order Status Update",
          "Create Mail classes for new order and order status update",
          "Final Test of Sending Emails",
          "Project Source Code"
        ]
      },
      "requirements": [
        "Good knowledge of Object Oriented Programming",
        "Basic knowledge of Laravel",
        "Basic knowledge of Vue JS"
      ],
      "description": "Welcome to the world of E-commerce development with our comprehensive course on building and deploying Laravel E-commerce websites! Whether you're just starting out or looking to expand your skills, this course is designed to guide you through every step of the process, from setting up your development environment to deploying your project on a custom domain.\nThroughout this course, you'll learn how to build full stack applications using the latest technologies including Laravel, Vue.js, Tailwind.css, and Alpine.js. With over 33 hours of video content and 200+ videos, you'll dive deep into every aspect of E-commerce development, including building a responsive landing page, managing cart items, implementing online payments with Stripe, creating an admin dashboard with analytics, and much more.\nOne of the highlights of this course is the hands-on project-based approach. You'll follow along as we build a fully functional E-commerce website, tackling real-world challenges such as debugging, problem-solving, and refactoring along the way. By the end of the course, you'll not only have a deep understanding of Laravel and Vue.js but also the skills to deploy your own projects and even connect to third-party APIs.\nHere's a glimpse of what you'll learn:\nCreating scalable Laravel projects\nIntegrating Tailwind.css themes into Laravel\nImplementing Stripe online payments checkout\nHandling Stripe Webhooks and email sending in Laravel\nDeveloping responsive admin panels with Tailwind.css and Vue.js\nConnecting Vue.js apps to Laravel REST APIs for CRUD operations\nDeploying Laravel projects on custom domains and configuring business email addresses\nAnd much more!\nWhether you're a beginner looking to build your first project or an experienced developer seeking to enhance your skills, this course is tailored for you. With lifetime access to course materials and a private Discord group for support, you'll have everything you need to succeed.\nSo, if you're ready to take your E-commerce development skills to the next level, enroll today and join me on this exciting journey!",
      "target_audience": [
        "This course is ideal for people who just started learning Laravel and Vue JS and want to build some cool project.",
        "This course is excellent for you if you want to see the full working process of building application from an experienced developer",
        "This course is good for you if you are looking for awesome project to put in your portfolio"
      ]
    },
    {
      "title": "Mastering Jenkins CI with Amazon AWS: Build DevOps Pipeline",
      "url": "https://www.udemy.com/course/jenkins-ci-aws/",
      "bio": "Implement and integrate Jenkins continuous integration CI with Amazon AWS Beanstalk using Github. DevOps in action",
      "objectives": [
        "Learn complete Jenkins CI/CD pipeline implementation an Amazon AWS Elastic Beanstalk",
        "Learn Github integration with Jenkins and Amazon AWS",
        "Deploy Python and PHP applications using Github using Jenkins CI/CD build automation on AWS Beanstalk",
        "Gain solid understanding of DevOps concepts along with software development lifecycle",
        "Be able to fully master and integrate your application with Github, Jenkins CI, and Amazon AWS Beanstalk",
        "Learn to use SSH Shell and basic Linux commands within AWS CLI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Agenda",
          "What You Should Have",
          "*NEW* AWS Management Console *UPDATED* Lecture",
          "*NEW* EC2 Dashboard Experience"
        ],
        "Download Source Code": [
          "Source Code"
        ],
        "Configuring AWS Environment": [
          "Creating AWS Security Group",
          "Generating Key Pair (Public & Private)",
          "Creating AWS Instance",
          "Connecting to AWS Instance with Putty for Windows",
          "Installing Jenkins, Java, NGINX",
          "Configuring NGINX Proxy"
        ],
        "Building Jenkins Environment": [
          "Connecting to Jenkins Dashboard",
          "Configuring AWS SES",
          "Setting up SMTP Jenkins - AWS",
          "Build Server",
          "Creating IAM Role for Build Server",
          "Creating Security Group and Key for Build Server",
          "Spin Up Build Server AWS Instance",
          "What is Elastic Beanstalk",
          "Elastic Beanstalk Environments",
          "Install AWS Elastic Beanstalk CLI on Build Server",
          "Connect Jenkins to Build Server"
        ],
        "DevOps Primer": [
          "Understanding Software Development Life cycle",
          "DevOps Tools",
          "Continuous Integration CI",
          "DevOps Automation"
        ],
        "GitHub Integration & AWS Elastic Beanstalk": [
          "Connecting Jenkins with GitHub",
          "Testing Web-hook",
          "Creating an AWS Elastic Beanstalk Environment",
          "Grand Finale",
          "Deploying PHP Application - Practice",
          "Cleaning up AWS Environment"
        ],
        "Test Your Knowledge - Take a Quick Quiz": [
          "Test Your Knowledge"
        ],
        "Conclusion & Bonus": [
          "DevOps Drivers and Salary Structure",
          "Understand Git",
          "Course Recap"
        ]
      },
      "requirements": [
        "AWS account is required. You need a credit card, then choose FREE Tier AWS account.",
        "Knowledge of basic programming concepts such a object oriented programming is diserable",
        "Understanding of basic HTML and CSS is also desireable",
        "Basic understanding of software development lifecycle is also desirable, but not required",
        "Knowledge of basic Linux commands is helpful"
      ],
      "description": "[Course Updated- October 2021]: Added source code commands Section 2: Lecture 5. You can download.\nIn the world of DevOps automation and Auto Devops, Big Data Analytics, and Enterprise Cloud Applications, developing and managing enterprise grade applications has become a challenge!\nJenkins continuous integration and continuous delivery capabilities along with robust Amazon AWS platform is a powerful combination and provides a seamless solution to implementing a Devops lifecycle.\nWelcome to Mastering Jenkins CI with Amazon AWS: Build DevOps Pipeline course, bringing you the latest technologies with up-to-date knowledge.\nDo if you or your company are facing challenges with enterprise app deployment or would like to learn how to automate software delivery using Jenkins Continuous Integration with Amazon AWS Beanstalk and GitHub as source repository? Look no further - The Mastering Jenkins CI with Amazon AWS: Build DevOps Pipeline  course will help you gain solid understanding of all these concepts along with hand-on application in a flipped classroom manner!\nCourse Description\nAre you a company or a App Developer, Data Analyst, Business Analyst, Web Developer, IT administrator, Data Center Architect, Project Manager, Enterprise Architect, or Programmer? and want to gain fundamental and intermediate level skills and enjoy a fascinating high paying career?\nOr maybe you just want to learn additional tips and techniques taking to a whole new level?\nWelcome to Mastering Jenkins CI with Amazon AWS: Build DevOps Pipeline  course - A specialized course!\nIt is not only a comprehensive hands-on course with detailed concepts and their application, you are will not find a course similar to this. The flipped classroom model with hand-on learning will help you experience direct  into the course as your begin your learning journey.\nIn this course, you'll learn and practice:\nSetting up Amazon AWS Environment from scratch\nInstalling Java JDK, NGINX, Elastic beanstalk CLI\nConfiguring AWS instances with security groups and roles\nInstall Jenkins using AWS Shell and implement a build server for Continuous Integration\nConnect GitHub as source repository for Python and PHP applications\nDeploy an AWS Elastic Beanstalk with Jenkins CI, complete Devops pipeline, and much more....\nYou will also get valuable resources with this course!\nSo, if you would like to:\ngain solid understanding of Amazon AWS, AWS Beanstalk, EBCLI, Jenkins CI/CD, GitHub, and Linux SSH Shell, this course is for you\ngain marketable skills as an IT expert and professional, this course is for you\nThis course is not designed for advanced level students\nthis Mastering Jenkins CI with Amazon AWS: Build DevOps Pipeline course is exactly what you need, and more. You’ll even get a certification of completion\nSee what our students say “It is such a comprehensive course that I don’t need to take any other course but this one to learn all important concepts and hand-on application with this Mastering Jenkins CI with Amazon AWS: Build DevOps Pipeline course, and I would without a doubt recommend it to everyone.” - Sajid Ahmed\n“This is such an awesome course. Clear instruction, and I loved every bit of it – Wonderful learning experience!”  Jennifer Stevens.\nJoin thousands of other students and share valuable experience\nWhy take this course?\nAs a senior Enterprise Architect & Project Manager managing and deploying enterprise level IT projects, along with a Microsoft Certified Systems Engineer & Trainer, my experience with AWS has been phenomenally great! I am excited to share my knowledge and transfer skills to my students.\nEnroll now in Mastering Jenkins CI with Amazon AWS: Build DevOps Pipeline course today and revolutionize your learning. Stay at the cutting edge of Devops - and enjoy bigger, brighter opportunities.\nSee you in class\nSyed and Team ClayDesk",
      "target_audience": [
        "Beginner level programmers and developers who want to master running Jenkins on AWS and build a complete pipeline",
        "IT beginner level students who would like to gain solid understanding of DevOps life cycle",
        "Anyone who wants to learn Jenkins continuous integration pipeline running on AWS Beanstalk",
        "Beginner IT professionals who want to master end to end Jenkins CI on Amazon AWS",
        "Intermediate level students who want to brush up their skills and learn additional techniques"
      ]
    },
    {
      "title": "Complete Developers Guide: Ruby on Rails & React with Redux",
      "url": "https://www.udemy.com/course/rubyrailsreactredux/",
      "bio": "Ultimate coding for the web! Learn to develop apps with practical projects. Master the fundamentals of coding languages.",
      "objectives": [
        "Code in Ruby on Rails.",
        "Make simple web apps.",
        "Lay out a web app in a logical way.",
        "Use JSX, a pre-processor that adds XML syntax to JavaScript.",
        "Build a single-page app using React Router.",
        "Code in ES6 and JavaScript.",
        "Use Web Pack, a bundler for code.",
        "Transition from webpack 1.0 to webpack 2.0.",
        "Write modular CSS.",
        "Use Redux, a predictable state container for JavaScript apps.",
        "Refactor code (alter code to make it simpler and more efficient).",
        "Fix bugs and handle errors."
      ],
      "course_content": {},
      "requirements": [
        "An Internet connection is required for the free coding platform we use to code in Ruby.",
        "For the React and Redux section, please have a modern web browser.",
        "Basic HTML/CSS knowledge is recommended."
      ],
      "description": "\"Really good, straightforward for the beginner.\"  ⭐ ⭐ ⭐ ⭐ ⭐\nDo you want to make web apps? You've come to the right place. Learn how to build a Rails app and (separately) learn how to build a pure React/Redux app.\nEnroll now to build your portfolio with projects no one can take away from you!\nIn Part 1 of this course Tristan Mackinlay teaches you to code in Ruby, one of the most user-friendly programming languages out there. In Part 2, you learn how to build beautiful, well-functioning web apps with React and Redux. Join web developer Chris Veillette to start coding for the Internet.\nReact is an efficient and flexible JavaScript library for building user interfaces. Many popular websites including Instagram, Facebook, Netflix, and Imgur use React.\n\nIncluded in this course is material for beginners to get comfortable with the interfaces. Please note that we reuse this content in similar courses because it is introductory material. You can find some material in this course in the following related courses:\nMake games in GameMaker & learn to code for the web in Ruby!\nComplete 3D Modeler & C# Unity VR Game Developer Masterclass\nThe Complete VR Course: Build 3D Models and Unity Games\nThe Complete Ruby on Rails & 3D Rendering Humans for Games\nBecome a Web Developer: Learn the Basics and Fundamentals of Ruby!\nMake Games and Web Apps: Unity, React and Redux Masterclass\nComplete Modern Developer: React JS with Redux & SpriteKit\nIntroduction to React and Redux. Code Web Apps in JavaScript\nYou can build your own web apps! This course is full of practical examples. We teach you theory while also building real projects that you can put in your web development portfolio.\nHands-on training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation.\nLearn to program today and get a head start for tomorrow. People who can master technology will rule the future.\nYou get full lifetime access to this course for a single fee! Join now to meet us",
      "target_audience": [
        "Beginners to coding - some previous experience is helpful.",
        "Developers who want to learn about React and Redux.",
        "Coders who want to learn to build web apps.",
        "Coders who want to learn JavaScript."
      ]
    },
    {
      "title": "The beginners guide to coding",
      "url": "https://www.udemy.com/course/the-beginners-guide-to-coding/",
      "bio": "Break into web development with this 100% beginner friendly course. Absolutely NO experience is required.",
      "objectives": [
        "How to get started in web development",
        "Which programs to download and install (they are all free)",
        "How websites work behind the scenes",
        "What web browsers do (it's A LOT)",
        "Introduction to HTML/HTML5",
        "What HTML is and why it's important",
        "How to read and write HTML",
        "Create a portfolio webpage as your primary project"
      ],
      "course_content": {
        "Web Development Fundamentals": [
          "What is web development?",
          "How to get into web development",
          "What does it take to get into web development?",
          "Web development tools",
          "How websites are created",
          "Frontend vs. backend coding",
          "Fullstack web development",
          "Working with teams",
          "Open source",
          "Don't reinvent the wheel",
          "Getting started"
        ],
        "Understanding Websites": [
          "Introduction to Understanding Websites",
          "What is a browser?",
          "What does your browser do?",
          "What are web requests?",
          "The request lifecycle",
          "What are server responses?",
          "Interpreting HTML, CSS and JavaScript",
          "Viewing your requests and responses",
          "Your project"
        ],
        "HTML 101: The beginners guide to coding": [
          "HTML 101 Introduction",
          "What is HTML?",
          "Getting setup",
          "HTML syntax",
          "The base structure",
          "Page titles",
          "Paragraphs and headers",
          "Whitespace doesn't matter",
          "Nesting HTML elements",
          "Bold, italics and underline",
          "The div element",
          "Block elements vs. inline elements",
          "Linking to other pages",
          "Opening links in new windows",
          "Adding images",
          "Linking an image to a web page",
          "Horizontal rules",
          "HTML comments",
          "Lists",
          "CSS tags",
          "Script tags",
          "Sharing code with CodePen",
          "Finding extra support",
          "Your project"
        ],
        "HTML 201: Intermediate HTML": [
          "Welcome to HTML 201",
          "No more underlines",
          "Internal links",
          "Favicons",
          "Asset pathing",
          "Introduction to tables",
          "Table rows and cells",
          "Merging table cells and rows",
          "Table and cell widths",
          "Table headers",
          "Inline CSS",
          "HTML classes",
          "HTML ID's",
          "Code formatting",
          "HTML entities",
          "Introduction to forms",
          "Input elements",
          "Textareas",
          "Buttons",
          "Dropdown menus",
          "Embedding videos",
          "Your Project"
        ]
      },
      "requirements": [
        "You need a desktop or laptop (you cannot code on a phone or tablet)."
      ],
      "description": "Welcome to the beginner's guide to coding!\nIn this course, we're going to explore a lot together. There are three modules (3 mini courses) included in the beginners guide to coding:\nWeb Development Fundamentals: A beginners guide to coding\nUnderstanding how websites work, a glimpse into the request/response lifecycle\nHTML 101: An introduction to web development for complete beginners\nFirst, we'll look at web development fundamentals including common myths about getting into web development, the tools of the trade, getting a coding program installed, and much more.\nThen we'll dive into understanding websites and take a look at how websites actually work, what your browser does, and how it all comes together on your computer. We'll look into web requests and server responses as the way computers \"talk\" to each other.\nLastly, we'll jump into HTML 101 where we'll learn about what HTML is, how it's useful, why we should learn it, and then we'll be writing quite a bit of code.\nThere are 3 projects — one at the end of each module. This will give you hands-on experience every step of the way.\nWhat separates this course from other courses is this is 100% beginner-friendly, there are no assumptions made about your skill level, and I've designed the curriculum to help you learn properly meaning you won't need to take another HTML course if you don't want to — you'll be completely set up for success as a beginner web developer.",
      "target_audience": [
        "People who are interested in learning about web development",
        "People who want to get into web development or coding but don't know where to start"
      ]
    },
    {
      "title": "Learn ASP.NET Core Step By Step",
      "url": "https://www.udemy.com/course/aspnetcoremaruti/",
      "bio": "Upgrade Yourself to Dot Net Core Now!",
      "objectives": [
        "After learning this course students will be able to understand basics of Dot Net core Framework and they will be more comfortable with Asp Net Core development with step by step hands-on which we have shown in this.",
        "If you are familiar with Dot Net Framework and wants to upgrade to Asp Dot Net Core then this course if perfect for you"
      ],
      "course_content": {
        "Introduction of the course": [
          "Understanding ASP Dot Net Core Framework",
          "Tools and Software Required for this course",
          "Getting started with Dot Net Core"
        ],
        "Dealing with ASP Dot Net Core Web Application": [
          "Creating New Dot Net Core Application Using Visual studio 2017",
          "Handling HTML page using Configure Method in Startup",
          "Configuring MVC Structure in application",
          "Adding more Actions and Controlling Developer Exceptions for them.",
          "Configuring _Layout and _ViewStart for application",
          "Dealing with ViewImports and Tag Helpers of MVC Core"
        ],
        "Asp Net Core Middleware": [
          "Getting Familiar with Middleware using Code",
          "Understanding Request and Response Pipeline with Use and Run",
          "Creating Custom Middleware"
        ]
      },
      "requirements": [
        "Basics of C# programming language and Application development basics",
        "Visual Studio 2017 with Dot Net Core 2.0 or higher is required",
        "If you do not know C# basics and Never created OOP based applications then this Course is not for you."
      ],
      "description": "Are you a developer working on Dot Net framework?\nAre you willing to learn new Dot Net Core framework with Ease?\nAre you willing to upgrade you existing application to MVC 6?\nIf answer of above questions are yes then this course is for you.\nIn my 13 years of experience of working as a corporate trainer I have understood that what most developers are looking for when they want to learn any new technology, and that's why in my all of the courses i focus on two main things,\nFirst : All my student learn with minimum investment of Time and Cost\nSecond : Whatever students learn they should be able to do same code after learning from online course with hands-on practice.\nThis course of Dot Net Core will give you easy and straight to the point understanding of the latest Dot Net Core framework and I am sure all the students will love the journey they will go through.",
      "target_audience": [
        "Any developer who want to Learn ASP Dot Net Core Application Development can take this course."
      ]
    },
    {
      "title": "Introduction to Django for beginners",
      "url": "https://www.udemy.com/course/introduction-to-django-for-beginners/",
      "bio": "Build practical useful projects",
      "objectives": [
        "How to install Python",
        "How to install and create a virtual environment",
        "How to install Django",
        "How to create a Django Project",
        "How to create a Django App",
        "How to create Django Models",
        "How to migrate Django Models",
        "How to create Django Views",
        "How to create Django Templates",
        "How to setup Django URL patterns",
        "How implement version control with Git",
        "How to push your project code to Github",
        "How create and store dynamic content in a database",
        "How to deploy your Django app to the internet cloud"
      ],
      "course_content": {
        "Python beginners crash course": [
          "Introduction",
          "What is Python",
          "Download and install Python",
          "The python IDLE",
          "Python Variables",
          "Python List",
          "Python Tuples",
          "What is a class",
          "Your first Python Program",
          "Generating Random Numbers",
          "Number guessing game"
        ],
        "Introduction to command line Interface": [
          "What is the command line interface",
          "How to access the command line",
          "What you can do with command line",
          "Useful commands"
        ],
        "Introduction to Code Editors": [
          "Introduction to Plain Text Editors",
          "Installing Visual Studio Code",
          "Installing SublimeText",
          "Installing Brackets",
          "Installing Atom"
        ],
        "Django Installation and setup": [
          "What is Django",
          "Famous Apps built with Django",
          "Django Architecture",
          "What is Http",
          "How the internet works",
          "Verifying Python and Pip installation",
          "Creating a new project directory",
          "Installing virtual environment",
          "Creating and activating a virtual environment",
          "Updating Pip",
          "Installing Django"
        ],
        "Introduction to Django App and Project": [
          "What we will create",
          "Django App Vs Django Project",
          "Creating a Django Project",
          "Anatomy of a Django Project",
          "Starting a django development server",
          "What are Migrations",
          "Installing a Django App",
          "Anatomy of a Django App"
        ],
        "Building our Django Todolist App": [
          "Project mockup design",
          "Django admin and superuser",
          "Templates",
          "What are views",
          "URL and URL Patterns",
          "Accessing static files"
        ],
        "Django Models": [
          "What are Django Models",
          "Creating a Model",
          "Migrating Models",
          "Adding model to admin site"
        ],
        "Version Control": [
          "What is version control",
          "What is git",
          "Installing Git",
          "Git configuration",
          "Git Glossary",
          "What is Github",
          "Creating a Github account",
          "Initialising a git repository",
          "Excluding files and directories from version control",
          "Adding files and directories to version control",
          "Committing code to version control",
          "Creating a remote repository on Github",
          "Pushing project code to github"
        ],
        "Implementing Dynamic Data Display": [
          "Displaying data from database",
          "Setting background color for completed items",
          "committing changes to github",
          "Adding a form",
          "Getting form to capture data from text input",
          "Adding form to template and view",
          "Adding form input to database",
          "Creating a view for completed items",
          "Creating a view to delete all completed items",
          "creating a view function to remove all items from database",
          "Pushing updates to version control"
        ],
        "Deploying your django app to the cloud": [
          "Deploying your app to the internet - part 1",
          "Deploying your app to the internet - part 2",
          "Deploying your app to the internet - part 3",
          "Project Source Code",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic HTML Knowledge",
        "Basic CSS Knowledge",
        "Basic JavaScript Knowledge",
        "Basic Python Knowledge",
        "Basic Commadline Knowledge"
      ],
      "description": "Django is a fantastic web framework built with the Python programming language. With Django you can create websites and web apps very quickly and efficiently.\nDjango was created by very experienced developers who have built into it several tools for rapid web application development.\nDjango is very fast ,secure and scalable making it an attractive framework choice for thousands of developers.\nDjango developers are in hot demand and command attractive wages. Some billion dollar companies like Instagram and Pinterest were created using the Django framework.\nThis is a beginners  Django course that will take you from absolute scratch to creating a simple Django web app. The course is\na hands on course and i strongly advise you to follow along with me so you can gain a better understanding of the framework.\nWhat your will learn:\nHow to install python\nHow to check for and upgrade Pip\nHow to install virtual isolated environments\nHow to activate the virtual environment\nHow to install Django\nHow to create Django project\nHow to create Django app\nHow to create Django Model\nHow to run Django commands\nHow to use command line interface\nHow to run Migrations\nHow to query Django database\nHow to register Django app\nHow to Administer Django app\nBasic crash course in Python\nDjango is an extremely in-demand skill that pays quite well. Django is used by a lot of startups to build great applications.\nInstagram was once a startup that was built using Django and later sold to facebook for $1 billion  ,Yes 1 billion dollars !\njust  roughly two years after it was created.\nDjango has a thriving community that you can engage with as you begin your Django journey.",
      "target_audience": [
        "Beginner Python developers",
        "Beginner Django developers",
        "Beginner Web developers"
      ]
    },
    {
      "title": "Web Development Basics: Learn HTML, CSS and Javascript",
      "url": "https://www.udemy.com/course/web-designing-essentials/",
      "bio": "Best course to learn HTML, CSS and Javascript",
      "objectives": [
        "By the end of this course you’ll be able to design your own website and work as a freelancer or apply for javascript developer jobs in IT industry.",
        "You will be learning basics of HTML, CSS and Javascript with practical examples of various scenario's which are useful in real time.",
        "For every concept, I'll be showing you an example and help you understand the concepts from basics",
        "You will learn regarding using styles in CSS and event driven programming in Javascript."
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use Chrome / IE on your PC or Phone"
      ],
      "description": "Welcome to Web Development Basics: Learn HTML, CSS and Javascript course. In this course you will learn the basic concepts of Web Designing :\nHow to use HTML / CSS to design your website\nHow to use Javascript to make your website dynamic\nDrastically improve your ability to debug problems in Javascript.\nHow to host your website on internet and make it available online.\nPractice your new skills with coding challenges (solutions included).\nIn addition, you will be able to get lifetime access to my HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.",
      "target_audience": [
        "If you want to learn Web Designing Essentials, this course will be the best for you. I'll be teaching you HTML & CSS along with Javascript, which will help you in starting your career as a Web Developer"
      ]
    },
    {
      "title": "Modern Freelancing Website In PHP&MYSQLI With Bootstrap 4",
      "url": "https://www.udemy.com/course/modern-freelancing-website-in-phpmysqli-with-bootstrap-4/",
      "bio": "Learn advanced freelancing website In php&mysqli with bootstrap 4 with its complete functionalities in a single course.",
      "objectives": [
        "Students will learn to make Fully Responsive Design - shows beautifully on different devices.",
        "Students will learn to make Buyer Requests Section - Complete system for sending buyers requests for sellers.",
        "Students will learn to make Submitting An Offer Functionality On Buyers Requests.",
        "Students will learn Creating Proposals",
        "Students will learn to make Featured Proposals",
        "Students will learn to add Video In Proposals",
        "Students will learn to add Custom Proposal Video Player",
        "Students will learn to make Manage Selling Proposals Sales (Active, DELIVERED, Completed, Cancelled, All)",
        "Students will learn to make Manage Buying Proposals Purchases (Active, DELIVERED, Completed, Cancelled, All)",
        "Students will learn to make Proposals Coupons For Discount System",
        "Students will learn to make PayPal & stripe integration for buying proposals",
        "Students will learn to make Proposals Favorites System",
        "Students will learn to make Proposals Reviews & ratings System",
        "Students will learn to make share Proposals on social media networks using buttons",
        "Students will learn to make Admin Proposals Approval/Validation System",
        "Students will learn to make SEO Friendly Proposals Url's",
        "Students will learn to make Inbox Conversations System",
        "Students will learn to make E-Mail notification for new messages System",
        "Students will learn to make E-Mail notification for new Orders System",
        "Students will learn to make Advanced Notifications System",
        "Students will learn to make Google ReCaptcha System Functionality",
        "Students will learn to make Password strengthen functionality",
        "Students will learn to make Advanced Level Filters for searching online,offline and top levels proposals",
        "Students will learn to make Withdrawal Minimum Limit - only let users request a withdrawal if their available balance is more than the set amount.",
        "Students will learn to make Set Days Before Withdrawals",
        "Students will learn to make PayPal Withdrawals System",
        "Students will learn to make Stripe/PayPal Payment System",
        "Students will learn to make Pay via Shopping Account Balance",
        "Students will learn to make Referral System",
        "Students will learn to make Encrypted Encoded Passwords",
        "Students will learn to make Sellers Levels System",
        "Students will learn to make Sellers SEO friendly Url's",
        "Students will learn to make Seller Skills Functionality",
        "Students will learn to make Seller Languages Functionality",
        "Students will learn to make Customer Support Center Inquiry Type Functionality",
        "You can Manage your Contacts (Buyers,Sellers)",
        "Students will learn to make Advanced User Account Settings",
        "Students will learn to make Terms & Conditions Page",
        "Students will learn making a dynamic and responsive admin with full functionalities to control the website",
        "Admin can Login as a User in any account",
        "Admin Can Add Review",
        "Admin Can Block/Ban Users Accounts System",
        "Resolution Center Functionality for giving the authority to admin to resolve any dispute between seller and buyer.",
        "Orders Revision Request,Cancellation Request,Decline Cancellation Request Functionality",
        "Students will learn to make Orders Percentage Commissions System",
        "Students will learn to make Categories and sub categories",
        "Students will learn to make Admin Panel Custom CSS",
        "Students will learn to make Admin Panel Files",
        "In short, at the end of my course,students will be able to make any kind of advance freelancing website in php&mysqli with the assistance of bootstrap 4."
      ],
      "course_content": {},
      "requirements": [
        "Students need to have a code editor ,xampp software and a browser for starting this course."
      ],
      "description": "Have you ever wondering how to build your next marketplace Web application?\n\nI have made this advanced freelancing website for those students who want to learn to make any kind of freelancing website by purely using PHP and MySQL functions with the assistance of Bootstrap 4 framework to make it complete responsive and dynamic.Often people use bootstrap for this purpose and the good thing about the usage of bootstrap kinds of framework is that students can easily make any kind of theme responsive without indulging themselves in any complicated issues. Therefore I have made this freelancing website to make the students fully expert in all the essential PHP & MySQL functions and Bootstrap 4 framework.So I am very hopeful that after joining this course and learning it, you will get a good control over making any kind of advance level responsive plus dynamic freelancing website with all its complete functionalities with the assistance of Bootstrap 4, PHP & MySQL. I have focused to make the students fully experts in the usage of all the essential PHP & MySQL functions and Bootstrap 4, so you could learn their usage very well.So I assure you that after joining this course and learning it completely, you will be able to run your own freelancing company like fiverr,freelancer and upwork.",
      "target_audience": [
        "Students who want to learn to make an advance freelancing website in php&mysqli with bootstrap 4 can join this course.",
        "Anyone who wants to work with Bootstrap 4",
        "Anyone who has a dream to build a freelancing company",
        "Entrepreneurs who want to launch a website like fiverr"
      ]
    },
    {
      "title": "Complete React JS Course 2025 : React JS For Beginners",
      "url": "https://www.udemy.com/course/react-js-for-beginner/",
      "bio": "Master React JS from Scratch : Your Ultimate Beginner Guide to React Project Learn React Hooks, React Router",
      "objectives": [
        "Gain a solid foundation in React concepts, including components, JSX, and the virtual DOM.",
        "Master the core principles of React, including components, JSX",
        "Apply your skills in a real-time project that mimics real world scenarios from initial setup to deployment",
        "React js FundamentalS",
        "Nested Routes",
        "React Router"
      ],
      "course_content": {
        "React Fundamentals": [
          "Component",
          "Event Handling in React",
          "Conditional Rendering",
          "Ternary Operator",
          "Quiz-1"
        ],
        "React ES6": [
          "ES6 Classes",
          "ES6 Variables",
          "ES6 Arrow Func",
          "ES6 Array Methods",
          "ES6 Destructuring",
          "ES6 Spread Operator (ARRAYS) -1",
          "ES6 Spread Operator (OBJECTS)-2",
          "ES6 Rest Operator",
          "Quiz-2",
          "ES6 features you need to know before learning React"
        ],
        "Working with Lists and Forms": [
          "Rendering Lists",
          "Form Submission"
        ],
        "React Hooks": [
          "useState Hook",
          "useEffect Hook -1",
          "useEffect Hook -2",
          "useEffect Hook -3"
        ],
        "React Router": [
          "Introduction to React Router",
          "Routing Components",
          "Dynamic Routing & Route Parameters"
        ],
        "Deploy": [
          "RealTime Deploy Project using netlify"
        ],
        "Interview questions": [
          "50 Common Job Interview Questions and Answers"
        ],
        "Test your knowlege": [
          "Test your knowledge",
          "Notes and Resources for developers",
          "ReactJS Developer Roadmap | Zero to Hero"
        ]
      },
      "requirements": [
        "No prior experience required as the course will cover all necessary concepts from the ground up",
        "Foundational understanding of HTML and CSS is essential for creating and styling web pages."
      ],
      "description": "Unlock the full potential of modern web development with our in-depth React.js course. Perfect for both aspiring and seasoned developers, this course provides a thorough exploration of React.js, empowering you to build dynamic and high-performance web application.\n\n\n#1 Trending\nWhat You'll Learn:\nReact Fundamentals: Dive into the core concepts of React, including components, JSX, and the virtual DOM, to create efficient and reusable user interfaces.\nReact Hooks: Master React Hooks such as useState, useEffect  to manage state and side effects in functional components.\nState Management in React: Explore advanced state management techniques using Context API and Redux for scalable and maintainable application state management.\nReact Router: Implement client-side routing and navigation with React Router to build seamless multi-page experiences.\nAdvanced React Patterns: Learn advanced React patterns, including higher-order components, render props, and custom hooks to enhance code reusability and flexibility.\nPerformance Optimization: Discover essential optimization techniques such as memoization, code splitting, lazy loading, and efficient rendering to ensure your applications perform at their best.\nBuilding and Deploying React Applications: Get hands-on experience with the complete development lifecycle, from setting up your project to deploying it on platforms like Netlify.\nReal-World Project: Apply your knowledge in a comprehensive real-time project, simulating practical development scenarios. Build a portfolio-worthy application from scratch, implementing all the concepts learned throughout the course.\nWho Should Enroll: This course is ideal for aspiring web developers, front-end developers looking to enhance their skills, JavaScript enthusiasts, and anyone interested in mastering modern web technologies. While no prior experience with React.js is required, a basic understanding of HTML, CSS, and JavaScript will help you get the most out of the course.\nCourse Features:\nHands-On Learning: Engage with interactive lessons and practical projects to solidify your understanding.\nExpert Instruction: Learn from experienced instructors who offer valuable insights and practical tips.\nFlexible Schedule: Access course materials and complete lessons at your own pace, anytime, anywhere.\nSupport and Community: Connect with a supportive community of learners and get answers to your questions.\nBy the end of this course, you will be proficient in React.js, capable of building and deploying sophisticated web applications, and ready to tackle complex development challenges with advanced techniques and patterns.",
      "target_audience": [
        "Individuals who are looking to break into the field of web development and want to build dynamic modern web applications using React js",
        "This course assumes no prior experience with React js making it accessible for beginners while still offering valuable insights and advanced techniques for more experienced developers",
        "Tech enthusiasts eager to explore modern web development trends",
        "Anyone Interested in Web Development"
      ]
    },
    {
      "title": "Comprehensive TypeScript",
      "url": "https://www.udemy.com/course/typescript101/",
      "bio": "Master TypeScript and its many useful features. Learn interfaces, classes, types and functions, and much more!",
      "objectives": [
        "Read, write and compile TypeScript",
        "Understand and explain when and why TypeScript should be used",
        "Use all basic TypeScript classes",
        "Create custom TypeScript types with interfaces and classes"
      ],
      "course_content": {},
      "requirements": [
        "Basic PC or Mac able to run Node.js",
        "Working knowledge of JavaScript, Java or C#"
      ],
      "description": "This amazing tutorial series contains over $5,000 worth of content and can be yours. Act now!\nBeing a knowledgeable TypeScript user can come in handy in various ways. It can dramatically increase your chances of landing a job in a TypeScript-oriented workplace - and those are becoming more frequent. It can also help you write your own code in better ways for your personal projects and apps.\nThis course will teach you everything you need to know about TypeScript, in a fun and interactive manner. We'll learn about types, classes, interfaces, modules, and more, plus learn practical programming tips.\nWe'll build custom classes, precise interfaces and strictly typed functions, becoming a TypeScript master along the way.",
      "target_audience": [
        "Web developers who wish to learn TypeScript",
        "Developers who know another typed language like C# or Java who want to get into Web Development",
        "Programmers interested in developing for WinJS",
        "JavaScript developers who want to take their projects to the next level"
      ]
    },
    {
      "title": "The Complete Modern Javascript course for beginners 2024",
      "url": "https://www.udemy.com/course/the-complete-modern-javascript-course-for-beginners-complete-course/",
      "bio": "Learn Modern JavaScript from Scratch 2023 | From Basics to Advanced with Expert Instructor-led Course |Enroll Today!",
      "objectives": [
        "You will learn the basics of JavaScript programming, including how to write programs and statements.",
        "You will learn the different keywords in JavaScript and how to use them effectively.",
        "You will learn the different types of values in JavaScript, such as strings, numbers, and booleans.",
        "You will learn how to declare and use variables in JavaScript, including the different types of variable scope.",
        "You will learn the different data types in JavaScript and how to work with them effectively.",
        "You will learn how to create and manipulate arrays in JavaScript.",
        "You will learn how to create and manipulate strings in JavaScript.",
        "You will learn the basics of working with numbers in JavaScript, including basic arithmetic operations.",
        "You will learn the different types of operators in JavaScript and how to use them to perform different operations.",
        "You will learn how to declare and call functions in JavaScript, including passing arguments and returning values.",
        "You will learn how to create and manipulate objects in JavaScript, including object literals and constructor functions.",
        "You will learn how to handle user interactions and events in JavaScript.",
        "You will learn how to use boolean values and operators in JavaScript to make logical decisions.",
        "You will learn how to use the switch statement in JavaScript to make decisions based on multiple conditions.",
        "You will learn how to use loops in JavaScript to repeat a block of code.",
        "You will learn how to use the break and continue keywords in JavaScript to control the flow of a loop.",
        "You will learn how to use sets in JavaScript to store unique values.",
        "You will learn how to use maps in JavaScript to store key-value pairs.",
        "You will learn how to handle errors in JavaScript and how to use strict mode to enforce stricter rules."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML and CSS: JavaScript is often used to enhance the interactivity and functionality of web pages, so having a basic understanding of HTML and CSS can be helpful.",
        "A code editor: To practice writing and testing JavaScript code, you will need a code editor that can handle JavaScript syntax highlighting and auto-completion.",
        "Motivation and perseverance: Learning a new programming language can be challenging, so having the motivation and perseverance to stick with it and practice regularly is essential.",
        "Access to a modern web browser: JavaScript is primarily used to create dynamic web pages, so having access to a modern web browser, such as Google Chrome or Firefox, can be helpful for testing and debugging your code."
      ],
      "description": "Welcome to Scorpius Programming's course on JavaScript!\nThis comprehensive course is designed to teach you the fundamentals of JavaScript, one of the most widely used programming languages in the world. Whether you're a beginner or an experienced programmer, this course will provide you with a solid foundation in JavaScript and equip you with the skills and knowledge you need to create dynamic and interactive web pages.\nThroughout the course, you'll learn about a wide range of topics, from connecting JavaScript with HTML to working with arrays and objects, loops, and functions. You'll also learn about JavaScript data types, operators, events, and error handling, as well as how to use sets and maps in JavaScript.\nThe course is structured in a logical and easy-to-follow manner, with each section building on the concepts and skills covered in the previous one. You'll start by learning the basics of JavaScript programming, including how to output data, use variables and data types, and write programs and statements. You'll then move on to more advanced topics, such as working with arrays and strings, using operators, and writing functions.\nOne of the highlights of the course is the section on objects, which provides a comprehensive overview of how to work with objects in JavaScript. You'll learn about object properties and methods, how to create and use objects, and how to work with object prototypes and inheritance.\nThe course also includes a section on JavaScript events, which is essential for creating dynamic and interactive web pages. You'll learn how to handle user events such as clicks, key presses, and form submissions, as well as how to use event listeners and handlers.\nThroughout the course, you'll have ample opportunity to practice what you've learned through coding exercises and quizzes. You'll also have access to a variety of resources, including downloadable code examples, a glossary of JavaScript terms, and a discussion forum where you can ask questions and interact with other students.\nBy the end of this course, you'll have a solid understanding of the fundamentals of JavaScript programming and be equipped with the skills and knowledge you need to create dynamic and interactive web pages. Whether you're interested in front-end web development, back-end scripting, or desktop application development, the skills you'll learn in this course will be invaluable.\nSo what are you waiting for? Enroll today and start your journey toward mastering JavaScript!",
      "target_audience": [
        "Beginners who are new to programming and want to learn the fundamentals of JavaScript.",
        "Web developers who want to enhance their front-end development skills and create dynamic and interactive web pages using JavaScript.",
        "Back-end developers who want to add client-side scripting capabilities to their web applications.",
        "Students or professionals who want to learn JavaScript as a prerequisite for more advanced topics, such as React or Angular.",
        "Anyone who wants to learn a versatile and widely used programming language that can be applied in a variety of contexts, including web development, server-side scripting, and desktop applications."
      ]
    },
    {
      "title": "Advanced PHP Ajax Registration & Login Form",
      "url": "https://www.udemy.com/course/ajax-signup-login-form-with-cool-validations/",
      "bio": "Ajax Signup & Login Form With Real Time Validations & Complete User Profile with Ajax & PHP, Learn Regular Expressions",
      "objectives": [
        "You will learn Ajax Technique",
        "You will learn PDO (PHP Data Object) Concept",
        "Bootstrap 4 framework components",
        "Google Place API",
        "Submit form with Bootstrap Modal",
        "Professional jQuery Validations",
        "Session flash messages",
        "Password hashing with full security",
        "Build complete user profile",
        "Upload image with extensions validation",
        "JavaScript complex regular expressions validate URL and all form fields using regular expression"
      ],
      "course_content": {},
      "requirements": [
        "A computer/laptop with any operating system mac OS, Windows or Linux",
        "Basic knowledge of PHP & HTML",
        "There is no need for any paid software"
      ],
      "description": "PHP is a server-side language for building dynamic websites. PHP is a widely used language, there are many large frameworks and CMS which are using PHP WordPress is built on top the PHP language and Laravel is one the most popular PHP framework.\nAJAX is used to create more interactive applications. AJAX stands for Asynchronous JavaScript and XML, AJAX is a technique for creating fast and dynamic web pages. If you want to learn the ajax technique with examples then this course is suitable for you, In this course, you will learn how to submit the signup && login form using the ajax technique with cool jQuery validations.\nIn this course, we will use.\nPHP\nPDO (PHP Data Object)\nAjax\njQuery\nBootstrap 4\nMySQL\nJavaScript Complex Regular Expressions\nGoogle Place API\nJSON\nSo after taking this course you will learn a lot of new concepts in web development. this course is fully project base course not a theoretical course.\nProject Features:\nsignup & login system fully jQuery validated\nJavaScript Complex Regular Expressions Validated forms\nComplete user profile\nSession base flash messages\nFetching address using Google Place API\nSubmitting forms with bootstrap modal\nWhy this course is different:\nThis course fully projects base course, it's a course with real-world examples. I'm an experienced teacher working on YouTube from 2015.\ncompleting this course we will be able to create any type of ajax applications, and this course is give you a lot of extra features for-example  PDO, JSON, Bootstrap 4, JavaScript regular expressions, google place API and much more.",
      "target_audience": [
        "Beginner students who want to learn ajax with examples",
        "Intermediate level who want to improve the skills"
      ]
    },
    {
      "title": "MERN Stack Movie Tickets Booking App 2023",
      "url": "https://www.udemy.com/course/mern-stack-movie-tickets-booking-app/",
      "bio": "Build a Real Time Movie Tickets Booking App With React , Node , Express , Mongo , Redux , Antd",
      "objectives": [
        "Building full-stack real world applications from scratch",
        "Separate User Interfaces for Users, Admins , Theatre Owners",
        "JWT Authentication and Password Hashing using BCRYPT",
        "Ant Design Library for UI Components, Custom stylesheets for overriding antd components",
        "Redux and Redux Toolkit for state management",
        "Adding Theatres and Shows",
        "Shows Availability between the dates",
        "Stripe Payment Gateway integration",
        "Book Tickets using Stripe"
      ],
      "course_content": {
        "Project Demo & Resources": [
          "Promo & Demo"
        ],
        "Front End Setup": [
          "React App Setup / Github",
          "Folder Structure Setup",
          "Stylesheets Setup"
        ],
        "User Authentication Front End": [
          "Register Screen",
          "Login Screen"
        ],
        "Backend Setup": [
          "Node Server",
          "Mongo DB Setup"
        ],
        "User Authentication Backend": [
          "Register API",
          "Login API"
        ],
        "User Auth API's Integration": [
          "Auth APIS Integration",
          "Authorization - 1",
          "Authorization - 2"
        ],
        "Redux Setup": [
          "Setup Redux Toolkit",
          "Create Loaders using Redux"
        ],
        "Layout": [
          "Homepage Loayout"
        ],
        "Movies": [
          "Admin Panel Intro",
          "Add Movie Form",
          "Add Movie API",
          "Movies List",
          "Edit Movie",
          "Delete Movie"
        ],
        "Theatres": [
          "Add Theatre UI",
          "Add Theatre API",
          "Theatres List",
          "Edit Theatre",
          "Delete Theatre",
          "Theatre Approval From Admin"
        ]
      },
      "requirements": [
        "React",
        "Node",
        "Javascript"
      ],
      "description": "Hi Guys, Welcome to the course 'MERN Stack Movie Tickets Booking Application'\nIn this course, you will learn the following topics\n\n\nBuilding full-stack real-world applications from scratch\nWorking with complex MongoDB, queries, schemas, models\nSeparate User Interfaces for Users, Admins, and Theatre Owners\nJWT Authentication and Password Hashing using BCrypt\nAnt Design Library for UI Components, Separate stylesheets overriding ANTD Components, and reusable classes\nRedux and Redux Toolkit for State Management,\nAdmin can upload the movies and allow theatre owners to add shows for the movies\nTheatre owners must add the Theatre in the portal and get the admin approval to add shows in the theatres.\nOne theatre can have multiple shows in a single day at different times.\nSeat Availability Checking based on the selected date, show\nStripe Payment Gateway Integration\nHandling negative payment scenarios\nManage Tickets and Users from the Admin Pane;\nPushing Code to GitHub,\nHosting application in Heroku\n24/7 Q/A Support.\nMERN stands for MongoDB, Express, React, and Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework and Node.js is a famous and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA), N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. Meta and a community of individual developers and companies maintain it.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser designed to build scalable network applications.",
      "target_audience": [
        "Full Stack Developers",
        "MERN Stack Developers"
      ]
    },
    {
      "title": "Develop Computer Based Test (CBT) and Chat App In PHP 2025",
      "url": "https://www.udemy.com/course/develop-computer-based-test-cbt-and-chat-app-in-php-2020/",
      "bio": "You will learn everything on how to develop complete computer based test(cbt), chat application software in codeigniter",
      "objectives": [
        "Develop complete computer based test (CBT) in php 2025",
        "Have a new PHP Skill that would increase income",
        "Learn to use PHP effectively",
        "Be able to build any web app you want using codeigniter",
        "Build fully-fledged web apps for your startup or business",
        "Work as a freelance codeigniter developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "1.2 Please see what we are building",
          "1.3 How to download complete source codes and database"
        ],
        "2. Gathering and Downloading Required Tools": [
          "2.1 Files download and installation (text editor, wamp, codeigniter)",
          "2.2 Solving common wamp server problem",
          "2.3 Downloading Free Admin Template",
          "2.4 Showing the html template we want use",
          "2.5. How to convert html template to php",
          "2.6. Understanding PHP include and how to use it"
        ],
        "3. Introduction and Understanding CodeIgniter Framework": [
          "3.1 Introducing php codeigniter framework",
          "3.2 Installation and setup of codeigniter",
          "3.3 Quick Explanation on How Codeigniter Works",
          "3.4. Basic Codeigniter Config Explainning Files Autoload, Config, Database, Rout",
          "3.5 Integrating html template to the codeigniter",
          "3.6 How to Link our CSS files with PHP base_url function",
          "3.7. How to download the template we are using in this course - MUST WATCH"
        ],
        "4. Understanding the admin template you downloaded from our google drive": [
          "4.1 Quick explanation on the codeigniter template you downloaded from our google"
        ],
        "5. Loading And Working With Our First Login Page": [
          "5.1 Introduction and section objective",
          "5.2 Creating Our First Database And Connecting With Our Software",
          "5.3 Creating Session Save Path Table In Phpmyadmin",
          "5.4 Loading Our First Login Page",
          "5.5 Working With Language With Codeigniter Helper",
          "5.6 Creating Language And Settings Table In Phpmyadmin",
          "5.7 Using Get Phrase Function For Language Translation",
          "5.8 Creating Admin Table In Database",
          "5.9 Login codes in controller part one",
          "5.10 Login Codes In Controller Part Two",
          "5.11 Implementing Mvc For Login",
          "5.12 Testing Our Login Codes",
          "5.13 Creating Admin Controller And Setting The Page Data",
          "5.14 Login In user and redirecting to user dashboard",
          "5.15 Logout Codes And Redirect If Session Is On",
          "5.16 Error Message For Wrong Email Or Password",
          "5.17 Quick Explanation On The Template",
          "5.18 Echo system name and title in the login page"
        ],
        "6. Working with Admin Profile": [
          "6.1 Introduction and section objective",
          "6.2 Arrangment of the navigation menu",
          "6.2 Arrangment of the navigation menu",
          "6.3 Using if statement to determine current page",
          "6.4 Create manage profile method in admin controller",
          "6.5 Creating html form for Admin profile",
          "6.6 Working with the html form",
          "6.7 Working with php form open and close function",
          "6.8 Preparing codes that update admin information",
          "6.9 Create admin model and update codes",
          "6.10 Select admin information in admin model",
          "6.11 Set global codes in crud model must watch",
          "6.12 Display admin image from the model",
          "6.13 Working with password reset part one",
          "6.14 Working with password reset part two"
        ],
        "7. Building the navigation and header image and name": [
          "7.1 Code to display login user image",
          "7.2 Code to display login user name",
          "7.3 Code for login user image and name by the header",
          "7.4 Perfect header arrangement and complete section"
        ],
        "8. Building general settings for our app": [
          "8.1 Preparing the files and the controller for settings",
          "8.2 Preparing html form for system setting part one",
          "8.3 Preparing html form for system setting part two",
          "8.4 Preparing html form for system setting part three",
          "8.5 Brief information on the template theme",
          "8.6 Update code in system model",
          "8.7 Codes to upload logo, set system theme and round up section"
        ],
        "9. Working with the navigation menu": [
          "9.1 Prepare navigation menu part one",
          "9.2 Prepare navigation menu part two",
          "9.3 Prepare navigation menu part three"
        ],
        "10. Building classes and teachers": [
          "10.1 Create class table",
          "10.2 Create the method to manage classes",
          "10.3 Why we need to create teacher table",
          "10.4 Create teacher method",
          "10.5 Create teacher form part one",
          "10.6 Create teacher form part two",
          "10.7 Create, update and delete teacher codes in model",
          "10.8 Select teacher from teacher's table",
          "10.9. Working with the modal controller",
          "10.10. Load modal via ajax function",
          "10.11. Test the delete codes and insert another teacher",
          "10.12. Update teacher and test app",
          "10.13. Working with the class html form",
          "10.14. Working with class and round up section"
        ]
      },
      "requirements": [
        "PHP version 7+ is a must",
        "Little knowledge of CSS will be an advantage",
        "I'll walk you through, step-by-step how to setup codeigniter",
        "Computer system - windows/mac",
        "Zeal to learn codeigniter framework",
        "Little knowledge of PHP, though not neccessary becase I'll teach you everything you need to know"
      ],
      "description": "Building dynamic websites is not an easy challenge and requires time and effort dedicated to coding every bit and piece of the website, which is why anytime there is a new tool that promises to ease the woes of coding, developers always jump at the chance to try it.\nCodeIgniter is a simple open-source framework that makes it the coding tasks easier by providing a faster way to set up a PHP website from the ground-up. This tool with a small framework ensures that developers can design websites that are light, fast and dynamic.\nSo, for any developer that wants to become a server-side master, this is a tool that they should definitely have in their toolkit. But, it’s not always easy to find a course that is clear and concise and targets exactly what you are looking for!\nThis is why we have designed this course with an aim teach you everything you need know about CodeIgniter with real world project (Building Standard and Complete Computer Based Test Software) using a no-fluff and clear approach at the topic at hand, this tutorial will breakdown CodeIgniter into simple and easy to learn videos so as to be able to build any real world application on CodeIgniter.\nAt the end of this course, you will have not only learnt the CodeIgniter framework, but you will actually be able to start building your own projects from scratch. In addition to knowledge, this course will also give you the practical hands-on experience and the confidence to start coding your own websites by building computer based test system.\nThe course will start at the very beginning with a detailed introduction into the CodeIgniter framework, from there moving on to installing the framework. From there you will become familiar with the framework, and start building your own cbt software.\nJoin us today as we learn CodeIgniter together by building real world software and be free from some authors who claim to teach you a particular programming language but only teach you basis and some copy and paste projects which at the end cannot take you to anywhere.\nSome of those things we will cover are as follows:\n1. Complete chat Application\n2. Compute Based Test the following features:\na. Filling the gap questions\nb. Multiple choice questions\nc. True or false questions\n3. How to integrate html admin template in codeigniter\n4. Build complete result processing management system\n5. Build complete automated certificate management system\nSign up today, and look forwards to:\nHD 1080p video content, everything you’ll ever need to succeed as a CodeIgniter developer.\nBuilding complete and standard computer based test software.\nAll the knowledge you need to start building any web app you want\nBuild computer based test software\nChallenges and Solutions\nFast and helpful support if you need anything or have questions\nMy great sense of humor.\nBe ready to build meaningful software quickly\nFrom Beginner to Expert CodeIgniter Developer\nWe know that you’re here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they’re doing, you’d be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and we’re always on hand to answer student questions.\nSo by the end of the course, you’ll completely understand:\nCodeIgniter framework to level of building your own software especially school system.\nHow to use Ajax, jQuery effectively\nHow to create secure Login for Code\nSoftware Design: How to organise and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, classes and protocols\nJoin us NOW as we build this awesome software together using one of the best frameworks - Codeigniter!!!",
      "target_audience": [
        "Professional who want to add more to their knowledge",
        "School Administrator that needs computer based test for thier schools",
        "Developers who want to be codeigniter expert.",
        "Beginner Codeigniter developers curious about how to build computer based test software",
        "If you have never programmed before, then take this course to learn CodeIgniter.",
        "If you know how to code, but are new to CodeIgniter, then take this course to build web Apps.",
        "If you are a CodeIgniter developer, then take this course to see how much time you can save building real world software.",
        "If you’ve tried CodeIgniter before, then take this course to get a comprehensive curriculum that covers all the important aspects of CodeIgniter development.",
        "Entrepreneurs Who Want to Build Web Apps with Single Codebase",
        "Managers and Program Managers Who Want to Learn How to Build Complete Computer Based Test software.",
        "Anyone wanting to learn to code in a practical way",
        "Anyone who wants to kick start a career or hobby developing apps",
        "If you need CBT software to run your business"
      ]
    },
    {
      "title": "JavaScript Introduction to Object Oriented JavaScript",
      "url": "https://www.udemy.com/course/javascript-introduction-to-object-oriented-javascript/",
      "bio": "Learn about the JavaScript object model and using the concepts of object oriented programming in JavaScript.",
      "objectives": [
        "Learn the advantages of using JavaScript",
        "Create your own JavaScript code",
        "Learn about Objects in JavaScript",
        "Learn Object oriented JavaScript"
      ],
      "course_content": {
        "Learn about Object oriented JavaScript": [
          "Introduction to Object oriented JavaScript",
          "JavaScript Intro Namespace and definitions",
          "OOP JavaScript terms",
          "JavaScript Define a Global Object"
        ],
        "Learn the fundamentals of Object Oriented JavaScript": [
          "Working with JavaScript Objects Properties",
          "Exercise 1 create a JavaScript object",
          "Create a simple object",
          "JavaScript object method",
          "Setup a JavaScript Method Exercise 2",
          "JavaScript constructor Objects",
          "Literal version vs Constructor Version Exercise 3",
          "Update New Object",
          "JavaScript New instances",
          "JavaScript OOP class instances",
          "JavaScript creating prototype methods",
          "Practice Methods Exercise 4",
          "JavaScript setup inheritance Child parent",
          "Setup inheritance exercise 5",
          "JavaScript Parent Child inheritance",
          "Inheritance Exercise 6",
          "JavaScript OOP Public and Private",
          "Public and Private Classes Exercise 7",
          "JavaScript OOP Polymorphism",
          "Polymorphism Exercise 8"
        ],
        "Course Bonus Resources and Extra Lectures": [
          "JavaScript Resources",
          "Learning Guides and resources PDF guides"
        ]
      },
      "requirements": [
        "Basics of JavaScript",
        "Understand basic coding principles",
        "Desire to learn about Object Oriented Programming with JavaScript"
      ],
      "description": "Learn to Create Object Oriented JavaScript!!!\nJavaScript typically lacks some of the features of Object Oriented Programming. Within this course we show you how to add these into JavaScript and use objects in JavaScript as you typically would in Object Oriented Programming. This can make your JavaScript more reusable and robust.\nWe have designed this course to optimize practicing JavaScript coding.\nCODE SAMPLES INCLUDED!!\nPRACTICE EXERCISES\nCODE EXPLANATIONS\nCODE IMPLEMENTATIONS\nTry the code after each video lesson. PDF copy and paste code that we use within the course and TRY FOR YOURSELF.\nEverything you need to learn about JavaScript Object Oriented Programming is provided within this course.\n\nquick lessons get right to the point\nsource files downloadable to work along\nchallenges and lessons\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nLearn how Javascript works and it's fundamental concepts when it comes to Object Oriented Programming. Learn to build your own Javascript code to make you website more interactive.",
      "target_audience": [
        "Web Developers",
        "Web coders",
        "web content managers",
        "JavaScript developers",
        "Learn the advantages of using JavaScript"
      ]
    },
    {
      "title": "Java Web Developer's masterclass : Java + JSP + JSF (3 in 1)",
      "url": "https://www.udemy.com/course/java-jsp-jsf/",
      "bio": "Golden Step to become Java Web Developer, This course has everything* you need to get started with Java Web Development.",
      "objectives": [
        "Code Java console application",
        "Understand Code Java",
        "Code Web applications using JSP, Servlets and JSTL",
        "Code Web applications using JSF"
      ],
      "course_content": {
        "Introduction": [
          "Background story",
          "Reviews and ratings"
        ],
        "Setting up": [
          "Download and installation process of Java (Windows)",
          "Download and installation process of Eclipse (Windows)"
        ],
        "Introduction to Java : Keywords, datatype, variable and operators": [
          "The language of 50 keywords",
          "Our first Java program",
          "Variables and datatype",
          "Understanding variables",
          "Primitive Data Types (Integer datatype)",
          "Primitive Data Types (floating point datatype)",
          "Primitive Data Types (Boolean and char datatype)",
          "String basics",
          "Type casting",
          "Project files",
          "How to Import Project Files?",
          "Meet your Author",
          "Linkedin and Instagram links",
          "IntelliJ IDEA FREE access for 6 months"
        ],
        "Operators and decision making": [
          "Arithmetic operators",
          "Making decision with operators - Part 1",
          "Making decision with operators - Part 2",
          "Making decision with operators - Part 3",
          "Ternary operator",
          "Assignment operators",
          "Making decision with if else",
          "Checkout \"Our Full Stack Java Developer Course\"",
          "Project files"
        ],
        "Flow control": [
          "Switch case - Part 1",
          "Switch case - Part 2",
          "Switch case - Part 3",
          "For loop",
          "While loop",
          "Do while loop",
          "Loops Revisited",
          "Break and continue",
          "Nested loops",
          "Nested loops - Exercise",
          "Connect on LinkedIn, \"It's good!\"",
          "Project files"
        ],
        "How to use IntelliJ IDEA (Supported by JetBrains)": [
          "IntelliJ IDEA Shortcuts",
          "IntelliJ IDEA Terminal features",
          "IntelliJ IDEA Docker support"
        ],
        "Methods": [
          "Methods",
          "Methods parameters & return type",
          "Method overloading - Part 1",
          "Method overloading - Part 2",
          "Discussion forum",
          "Project files"
        ],
        "Some good information": [
          "Naming convention",
          "Code Block, Indentation and statements",
          "About Project files",
          "Java literals"
        ],
        "Object Oriented Programming": [
          "Classes - Introduction",
          "Classes - Getters and setters introduction",
          "Classes - Getters and setters",
          "Classes - Adding functionality into class",
          "Constructors Introduction",
          "Default constructor",
          "Usage of constructor",
          "Understanding inheritance",
          "Working with inheritance - Part 1",
          "Working with inheritance - Part 2",
          "Working with inheritance - Part 3",
          "Working with inheritance - Part 4",
          "Working with inheritance - Part 5",
          "Composition Introduction",
          "Composition Setting up",
          "Working with composition",
          "Adding functionality",
          "Encapsulation - Part 1",
          "Encapsulation - Part 2",
          "Polymorphism - Part 1",
          "Polymorphism - Part 2",
          "We have started AI related courses",
          "Project files"
        ],
        "Core concepts": [
          "Interfaces",
          "Abstract class - Introduction",
          "Multiple inheritance using interfaces",
          "Inner classes",
          "Types of nested class",
          "Local inner class",
          "Anonymous object",
          "Anonymous inner class",
          "Advantages of inner class",
          "User input",
          "Static elements",
          "Static inner class - Part 1",
          "Static inner class - Part 2",
          "Final keyword",
          "Final keyword with method and class",
          "Packages",
          "Packages continues",
          "Scope",
          "Access modifier",
          "Access modifier - Part 1",
          "Access modifier - Part 2",
          "Exception handling (Intro)",
          "Exception handling, Multiple catch blocks",
          "Exception handling, Multiple catch blocks - Part 2",
          "Finally block",
          "Throw and throws",
          "User defined exception",
          "Checked and unchecked exceptions",
          "Enum",
          "Enum continues",
          "Strings",
          "String methods (Document)",
          "String formatting (Document)",
          "Project files"
        ]
      },
      "requirements": [
        "Html basic",
        "Basic programming knowledge",
        "SQL basic (Recommended)"
      ],
      "description": "This course comprises multiple sub-courses, meticulously designed for aspiring Java web developers. It is tailored to equip learners with the essential skills and knowledge required for building robust web applications. Covering all key topics critical to a Java Web Developer’s journey, this course ensures a deep understanding of both foundational and advanced concepts.\nCore Topics Covered in This Course\nCore Java – Building a solid foundation in Java programming.\nJSP & Servlets, Including JSTL (J2EE) – Mastering server-side technologies for dynamic web development.\nJSF: Java Server Faces – Developing rich and interactive web applications with Java Server Faces.\nBonus: Enroll now to receive a FREE 6-month subscription to IntelliJ IDEA Ultimate or another JetBrains IDE of your choice, empowering you with cutting-edge tools for professional-grade development.\nPractical Web Application Development\nIn addition to covering theoretical concepts, this course demonstrates the complete process of creating a fully functional web application using JSP and Servlets. You'll gain hands-on experience by applying the skills learned throughout the course.\nWe are confident that this course will provide you with unparalleled insights and a substantial boost to your knowledge base, setting you on the path to becoming a proficient Java Web Developer.\nJoin us and take the first step toward achieving your professional goals!",
      "target_audience": [
        "Newbies with some knowledge of HTML",
        "Who is willing to make career in Java",
        "Any programming lover"
      ]
    },
    {
      "title": "The NEXT.JS & REACT 19 course, welcome to the Server Side.",
      "url": "https://www.udemy.com/course/server-side-react-apps-with-next-js-2021-edition/",
      "bio": "Learn SSR using the React version 19 you love and the latest Next.js version 15.",
      "objectives": [
        "Use Next JS and React",
        "Better performing apps",
        "Practice real life scenarios",
        "Deployment to production"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing NODE JS",
          "IDE",
          "Repositories and Source code",
          "What is Next JS ?"
        ],
        "The basics": [
          "Creating an App",
          "How Routes work",
          "Static Routes",
          "Nested Routes",
          "Dynamic Routes",
          "Params and SearchParams",
          "Catch All segments",
          "Layouts",
          "Linking and Navigation",
          "Standard Components",
          "Styles and Modules",
          "Parallel Routes",
          "Route Groups"
        ],
        "Rendering - Server & Client components": [
          "Introduction",
          "SSR Refresher",
          "Setting up JSON Server",
          "Fetching Employees",
          "Why can't I use Hooks ?",
          "Server vs Client",
          "Introduction to server forms",
          "Server form - No JS",
          "useActionState hook",
          "Loading UI",
          "Getting employee by ID",
          "Error UI",
          "Not Found UI",
          "Edit Employee page",
          "Forms with Formik and Yup",
          "Edit employee action part one",
          "Edit employee action part two",
          "Deleting employees",
          "Streaming"
        ],
        "Next JS Caching": [
          "Build and Start",
          "Dynamic or Static",
          "Segment config options",
          "Revalidate Path",
          "Using Fetch options",
          "Headers and Cookies",
          "Generate static Params"
        ],
        "Working with API Routes": [
          "Introduction",
          "Creating an API Route",
          "Endpoint Basics",
          "GET Employees",
          "POST Employees",
          "PATCH Employees",
          "DELETE Employees"
        ],
        "NEXT JS Extras & Goodies": [
          "Introduction",
          "What is Tailwind ?",
          "Installing Sass",
          "NEXT UI Introduction",
          "NEXT UI nav ( practice )",
          "Import Alias",
          "Image Component"
        ],
        "Authentication": [
          "Introduction",
          "Creating a Nav",
          "Custom Fonts",
          "Auth Config File",
          "The Auth Secret",
          "Auth Middleware",
          "Use Server Session",
          "Client Server Session",
          "GitHub Sign In",
          "Custom register form part one",
          "Custom register form part two",
          "Creating a Mongo DB Cluster",
          "DB Config",
          "The Register Route",
          "Register Users",
          "Sign in User",
          "Sign out User"
        ],
        "Event0 - Practice App": [
          "Adding links to the Nav",
          "The Venue Model",
          "Add Venue Form",
          "Posting Venues",
          "Venue Schema validation",
          "Add Venue handling errors",
          "Event Model and Page",
          "Add Event form",
          "Add Event datepicker",
          "Posting Events",
          "Displaying toasts",
          "Getting Home Events",
          "Home Event Cards part one",
          "Home Event Cards part two",
          "Home Load More",
          "The Event by Slug page",
          "Event Card",
          "Deployment"
        ],
        "Routing [ Legacy NEXT 14 ]": [
          "What is Next JS ?",
          "Installing a NEXT App",
          "How Routes Work",
          "Creating a simple route",
          "Nested routes",
          "Dynamic Routes",
          "Params and SearchParams",
          "Catch ALL",
          "Layouts",
          "Navigation",
          "Standard React code",
          "Styles",
          "Parallel Routes",
          "Route Groups"
        ],
        "Server and Client [ Legacy NEXT 14 ]": [
          "Creating a tiny template",
          "Header and links",
          "Strategies",
          "JSON Server",
          "Showing employees",
          "Using Hooks",
          "More on Server and Client",
          "Server action file",
          "Posting employees",
          "Re-Factor to actions file",
          "UseFormState",
          "UseFormState part 2",
          "Employee by ID",
          "Loading UI",
          "Error UI",
          "Not found UI",
          "Edit user Server component",
          "Client side validation",
          "Edit server action",
          "Edit server action part 2",
          "Deleting employees"
        ]
      },
      "requirements": [
        "Know a little bit of JavaScript, html and CSS",
        "Patience, we will do a lot of code."
      ],
      "description": "Do you want better performing, SEO friendly web apps with server side rendering ?. This is the course for you.\nWe will start from the very beginning, from \"I don't even what it is and why should I use it?“ to actually understand how Server side with Next + React works.\nYou will learn all the logic and practice behind Next JS + React in different modules, starting from the very beginning till under the hood topics.\n\n\nDon’t know how to use React ?\nDon’t worry, there is an optional full min course where we will show you how to use plain React, so once you have a strong base of React you can start with Next JS.\n\n\nTo sum everything up, you will learn in this course:\nThe very basics of Next. How to install and the logic behind it.\nHow to use routes properly and make it work with React.\nWe will learn how pre-rendering occurs on Next JS\nSince our app will need a database, you will learn how to use it with MongoDB and mongoose.\nApply security, authentication, route guards.\nWe will create a practice projects just to practice everything.\nOf course, we will learn the whole process of deploying to Vercel, Next's hosting.\nIf you want to refresh your React abilities you also get a Full mini React course.\nWhat about the instructor experience ?\nWell I've been around for 15 years now, built lots of applications for small projects and big companies like Citi, Fox, Disney and a lot more.\nToday I work as developer for a major company developing applications in React or Angular mostly, but I like to teach in my spare time.\nHow about the target audience?\nThis course is for almost everyone, a little bit of JavaScript is required. We will use ES6 but you can learn as we go.\nIf you want to take your coding to the next level, this is the course for you.",
      "target_audience": [
        "All levels"
      ]
    },
    {
      "title": "Creating HTML5 banners & animations using Adobe Animate CC",
      "url": "https://www.udemy.com/course/html5-banners-adobe-animate-cc/",
      "bio": "Learn how to create industry standard, high quality HTML5 banners quickly and efficiently using Adobe Animate CC 2017",
      "objectives": [
        "Optimise images for banners",
        "Make web animations using Animate CC",
        "Make use of webfonts within Animate CC",
        "Add clickTag and prepare banner for DoubleClick"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to HTML5 Banners"
        ],
        "Animate CC workspace": [
          "Animate CC workspace"
        ],
        "Building the banner": [
          "Preparing banner assets",
          "Importing and adding assets on stage",
          "Adding Keyframes on the timeline",
          "Masking",
          "Animating the symbols",
          "Adding a button"
        ],
        "Fonts": [
          "Fonts in Animate CC"
        ],
        "Finishing the banner": [
          "Looping",
          "ClickTag",
          "Preparing for DoubleClick"
        ]
      },
      "requirements": [
        "Have basic Photoshop skills to export images",
        "Be creative!"
      ],
      "description": "Creating HTML5 banners that work seamlessly through all browsers can be a tedious task if developed via coding only. Animate CC now allows web developers and creative engineers to concentrate on the creative side of the banners without having to worry about coding while publishing on the HTML5 canvas element, rendering smooth animations.\nIn this tutorial, I will teach you how to build an HTML5 banner from scratch. In the first section, I will explain you a few things about ad-servers and HTML5 banners. I'll then give you tips on how to properly export images from your Image software such as Photoshop. We will progressively build our banner by importing the images, organise the layers and work on the animations.\n\nThere is also one whole chapter dedicated to Fonts, which is of great importance. I'll teach you 5 different methods for integrating fonts including custom CSS font.\n\nIn the last chapter, we will finalise the banner by making it loop the required amount of times, add the clickthrough URL and prepare it for publish on adServer.",
      "target_audience": [
        "People working or intend to work as creative engineers",
        "Anyone who wants to build HTML5 banners or animations for the web!"
      ]
    },
    {
      "title": "React Advanced Concepts: Re-Rendering, Performance & More",
      "url": "https://www.udemy.com/course/react-advanced/",
      "bio": "Deep Understanding of React’s Inner Workings and Best Practices, From Intermediate to Advanced React",
      "objectives": [
        "Understanding React State Like Never Before",
        "Deep Understanding of Re-Rendering",
        "React’s Decision Process: Mount, Re-Render, and Unmount",
        "Memoization & Performance Optimization",
        "Reconciliation & Diffing Algorithm",
        "Higher-Order Components (HOC)",
        "Context API & Advanced State Management",
        "Handling Race Conditions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is this course for?",
          "Source code"
        ],
        "State as a Snapshot: Deep Understand": [
          "The fact about state",
          "State as a snapshot - concept",
          "Understand snapshot",
          "Snapshot example",
          "More snapshot example",
          "Set new state using callback",
          "Nested state object",
          "How to mutate state?",
          "useImmer hook"
        ],
        "Re-render: Deep Understand": [
          "Introduction to re-render",
          "HeavyComponent",
          "Lifecyle overview",
          "First rule to fix performance: Isolate State",
          "Misconception about props",
          "Second rule to fix performance: Render as Props",
          "ElementBeforeReRender vs ElementAfterReRender",
          "Refactor to render as children",
          "Summarize"
        ],
        "Memoization: Enhance Performance Optimization": [
          "Introduction to memoization",
          "Prevent unnecessary re-render using memo",
          "Break memo - Why memo not work?",
          "useCallback - memo function",
          "useMemo - memo result",
          "memo with useCallback & useMemo"
        ],
        "Reconciliation & Diffing Algorithms": [
          "Section Overview",
          "Hmm. What's going on??",
          "How does React decide to unmount component?",
          "The difference between re-render and mount/unmount",
          "Force component mount/unmount",
          "Deep understand the \"key\" props",
          "Force component unmount with \"key\" props",
          "The anti-pattern"
        ],
        "Higher Order Component (HOC)": [
          "What's HOC?",
          "Understand higher order component",
          "Implement withFetchData HOC",
          "Implement withTheme HOC",
          "Add additional logic to HOC"
        ],
        "React Context Deep Dive: Don't Scare Context": [
          "Section Overview",
          "App overview",
          "State & pass props down",
          "Context can fix performance",
          "Optimize re-render for context"
        ],
        "Ref: Access to DOM Element": [
          "Introduction",
          "Explain the ref in detail",
          "More about ref - experimental",
          "Most common use case",
          "Pass ref to children component",
          "useImperativeHandle"
        ],
        "Race Condition on Front End": [
          "Welcome to this section",
          "Race condition demo",
          "The way to fix race condition"
        ]
      },
      "requirements": [
        "Have experience with React (1-2 years)",
        "Ability to build applications with React"
      ],
      "description": "You've been working with React for a while, building applications and following best practices. But do you sometimes find React behaving in ways you don’t fully understand? Do unexpected re-renders, performance issues, or complex component interactions leave you feeling stuck?\nThis course is designed to take you beyond the fundamentals and into the advanced mechanics of React. We’ll break down the hidden intricacies of React’s rendering engine, performance optimization techniques, and architectural patterns that top React developers use to build scalable and efficient applications.\nWhat You’ll Learn:\n- Understanding React State Like Never Before: Learn exactly how React manages state, how it triggers updates, and how to avoid common state-related pitfalls.\n- Deep Understanding of Re-Rendering: Understand what re-rendering truly means, when React decides to re-render a component, and how to prevent unnecessary renders.\n- React’s Decision Process: Mount, Re-Render, and Unmount: Gain a crystal-clear understanding of when React mounts a component, when it re-renders, and when it unmounts—and how you can control this behavior for better performance.\n- Memoization & Performance Optimization: Master techniques like useMemo, useCallback, and React.memo to optimize expensive computations and prevent unnecessary updates.\n- Reconciliation & Diffing Algorithm: Learn how React efficiently updates the DOM behind the scenes and how understanding this process can help you write more performant components.\n- Higher-Order Components (HOC): Explore how to enhance component functionality using HOCs and compare them with modern alternatives like hooks.\n- Context API & Advanced State Management: Dive deep into React’s Context API, fix some performance issue\n- useRef & ForwardRef: Learn how to manage references, avoid unnecessary re-renders, and directly manipulate the DOM when needed.\n- Handling Race Conditions & Async Pitfalls: Discover how to prevent common issues when dealing with asynchronous operations in React, ensuring a smooth and bug-free user experience.\n- How to Optimize Performance in React Applications: Learn real-world techniques to improve app performance, reduce unnecessary renders, and make your React applications faster and more efficient.\nBy the end of this course, you won’t just use React—you’ll truly understand React. You’ll be able to debug complex issues, optimize performance, and write more maintainable and scalable code with confidence.",
      "target_audience": [
        "React developers who want to improve their skills",
        "Want to understand React in depth"
      ]
    },
    {
      "title": "Shopify Hydrogen & GraphQL Storefront API Development | 2025",
      "url": "https://www.udemy.com/course/shopify-hydrogen/",
      "bio": "Learn Shopify Hydrogen, Shopify Admin Panel, GraphQL Storefront API usage (BOGO included!). Shopify Development.",
      "objectives": [
        "Become an advanced, confident, and modern Shopify developer from scratch",
        "Become job-ready by working with libraries and tools used in professional projects",
        "Be able to use the Shopify Hydrogen, Shopify Storefront API, Shopify Admin Panel Usage",
        "Make money by selling your Shopify Hydrogen Apps! So are you interested to learn more?"
      ],
      "course_content": {
        "Introduction": [
          "Welcome!",
          "What You'll Learn In This Course",
          "How Can You Get Help About The Course?",
          "Shopify Hydrogen? Storefront API (GraphQL)? Admin Panel?",
          "Shopify Hydrogen in Details. Differences between Liquid and Hydrogen"
        ],
        "Getting Started": [
          "Setting Up Your VSCode",
          "Fix `cr` Error",
          "How To Install Postman",
          "Creating Your Shopify Hydrogen App",
          "[DO NOT SKIP] IF YOU HAVE ANY PROBLEM DURING INSTALLATION PROCESS",
          "Creating A Shopify Account",
          "[DO NOT SKIP] Creating Shopify Store And Connecting With App"
        ],
        "Routing in Remix": [
          "Routing System Basics in Remix",
          "Remix Loader in Details",
          "Client Side Routing in Remix",
          "Server Side Routing in Remix"
        ],
        "Implementing BOGO (Buy One Get One) Feature": [
          "Creating A Product Item Component",
          "Adding Gift To The Product - (Admin Panel - Metafields)",
          "Implementing To The Product Queries - (GraphQL - Metafields)",
          "Understand The CartForm for Gift Product",
          "Adding Gift Product Automatically",
          "Updating The Gift And Original Product Automatically",
          "Deleting The Gift And Original Product Automatically",
          "Fix: Decreasing Product Two To One Problem",
          "Hiding Adjust Button If The Product Is Free",
          "Replacing Zero Price With \"Free!\" Text"
        ],
        "Storefront API Usage Details (GraphQL)": [
          "What Is GraphQL Storefront API (Headless) ?",
          "How Do We Use The Storefront API With Hydrogen Apps?",
          "Using Of GraphQL Playground",
          "Using Of Variables In A GraphQL Query",
          "Using Multiple Queries In GraphQL",
          "Using Of Fragments In A GraphQL Query",
          "Getting Cart Details With A GraphQL Query",
          "Getting Campaign Name Of Free Product",
          "Showing Campaign Name Of Free Product",
          "Showing Prices In The Search Results",
          "Implementing Min/Max Price Filter To Search",
          "Clean Up The Console Logs"
        ],
        "Publishing Your App": [
          "Publishing On Vercel",
          "Publishing On Shopify Oxygen"
        ],
        "What's Next?": [
          "Follow News On The Shopify Hydrogen Ecosystem",
          "Thank You And Good Luck!",
          "My Linkedin Address (Join +32K Network!)"
        ]
      },
      "requirements": [
        "You must know HTML, CSS, JavaScript & React",
        "No Shopify experience needed. You will learn everything you need to know"
      ],
      "description": "Are you new to the Shopify ecosystem?\nYou hear about GraphQL Storefront API, Shopify Hydrogen, and Shopify Admin Panel, but you don't know where to start. Don't worry, I am here to help! I'll teach you all of them. So, after finishing this course, you will know precisely how to build a beautiful, professional, and ready-to-launch e-commerce web app.\n\n\nBut what if you want to build a completely different website? Well, no problem! I designed the course curriculum precisely to enable you to design and develop any website you can think of, not just copy the course project.\n\n\nThis course is:\nFor those who want to learn to build an e-commerce website by using the up-to-date version of Shopify Hydrogen.\nWho wants to move their Shopify Liquid Storefront to a modern React App with Shopify Hydrogen.\nThe Shopify Hydrogen & GraphQL Storefront API Development [2024] teaches you how to use GraphQL and Storefront API.\nThat can help you get an e-commerce job quickly or improve your app's abilities.\n\n\nSo, to become a confident and independent Shopify Hydrogen developer capable of building your websites in the future, you will learn the following:\nThe fundamentals of modern Shopify App Development\nCreating a campaign (BOGO - Buy One Get One)\nStorefront API Usage\nUse of Shopify Admin Panel\nPublishing Your Storefront App\nDoes this sound like fun? Then join me and start building e-commerce apps today!\nOr are you not sold yet and need to know more? No problem, keep reading...\n\n\n[01] Why should you learn Shopify Hydrogen in the first place?\nDevelopers can craft fully tailored websites, gaining access to controllers and models. This facilitates the implementation of intricate logic and the execution of third-party service requests. An advantageous aspect of Hydrogen lies in its non-restrictive code coupling to the Shopify platform. This unique feature empowers businesses with the flexibility to transition between platforms without the need to commence development anew.\n\nAdvantages:\nHigh performance, beneficial for SEO optimization.\nOffers extensive customization options.\nSeamless transition without the need for a complete migration.\nKey Features:\nEnhanced Flexibility: Hydrogen empowers developers to construct diverse websites, including single-page and progressive web applications. Additionally, it facilitates unit testing, supports custom URLs, and exhibits superior performance compared to Liquid.\nOptimized Performance: Hydrogen is finely tuned for optimal performance, efficiently handling substantial traffic volumes. Stores developed with Hydrogen stand to benefit from quicker loading times and enhanced responsiveness.\nRobust Error Handling: Hydrogen introduces advanced error handling and debugging capabilities, streamlining the process of identifying and resolving issues within your store.\nImproved Developer Experience: Hydrogen is intentionally designed to be more user-friendly and accessible to learn than Liquid. This improved developer experience contributes to Shopify stores' seamless construction and maintenance.\n[02] This course is for you if...\n... you are a complete beginner with Shopify, with no idea how to build an e-commerce app.\n... you already know a bit of React.\n\nSo, does all of this sound great? Then join me and start your Shopify development journey today!",
      "target_audience": [
        "You just finished learning React and are looking for your next step!",
        "Shopify merchants who wants to learn about Shopify Hydrogen Apps",
        "People interested in eCommerce",
        "People who want to learn Shopify Hydrogen",
        "People who want to learn Shopify Storefront API",
        "People who want to learn Shopify Admin Panel Usage"
      ]
    },
    {
      "title": "Playwright E2E Testing with AI for Beginners – Zero to Hero",
      "url": "https://www.udemy.com/course/playwright-e2e-testing-for-beginners-js-ts/",
      "bio": "Build robust E2E tests with TypeScript, use Playwright MCP for AI test gen, learn POMs, add automation with CI/CD",
      "objectives": [
        "Core Concepts: Understand Playwright’s architecture and context/page model",
        "Element Selection: Use built-in selectors and custom locators for reliable element targeting. Use TypeScript for test scripts",
        "AI-driven test generation and management",
        "Playwright MCP - TypeScript",
        "Page Interactions: Automate user actions (clicks, typing, navigation) and handle frames, pop-ups, alerts.",
        "Assertions & Expectations: Apply Playwright’s expect API for state validation, visibility, timing, and value checks.",
        "Fixtures & Hooks: Setup/teardown management",
        "API Testing: HTTP requests & response validation",
        "CI/CD & Reporting: Pipeline integration & HTML reports",
        "Playwright automation - use Playwright as a web scrapping tool"
      ],
      "course_content": {
        "Introduction to Playwright": [
          "Welcome to the Playwright course",
          "Do you know JavaScript?",
          "Tools we will need",
          "Course source code and resources",
          "Creating the First Playwright Project",
          "Understanding Playwright tests and automation concepts",
          "Writing and Executing an Initial Test",
          "Playwright Test Fixtures",
          "Common Issues and Quick Fixes",
          "Async code explanation in TypeScript & JavaScript"
        ],
        "Playwright locators": [
          "Section intro",
          "HTML and DOM elements overview",
          "Practice Application Overview",
          "GetByRole introduction",
          "GetByRole part 2: assertions",
          "GetByText",
          "GetByLabel and other selectors",
          "GetByTestId",
          "CSS locators",
          "Children, parents and index locators - Navigating DOM Hierarchies",
          "Locator tools: the inspector, codegen and debugger"
        ],
        "Interacting with elements in Playwright": [
          "Section intro - Interaction Patterns Overview",
          "Simple interactions: click, fill, type, select (core automation actions)",
          "Exercise: Auto-waiting practice in TypeScript with Playwright",
          "Handling cookies in a JavaScript/TypeScript app",
          "Managing Local Storage",
          "Handling pop-ups",
          "Handling events"
        ],
        "Hands on practice #1 - Playwright automation": [
          "Section intro",
          "Testing project - feedback form",
          "Refactoring tests - Playwright TypeScript"
        ],
        "Organizing and Managing Playwright tests": [
          "Section intro - playwright automation",
          "Test annotations",
          "Test hooks",
          "Organizing tests - describe",
          "Organizing tests - Tags",
          "Configuration layers - different levels of configuration",
          "Configuring testing device",
          "Test runner options - speeding test execution",
          "Using Multiple Playwright test Projects"
        ],
        "Hands-on practice #2: Test real-world workflows [Intermediate level]": [
          "Section intro - Playwright automation focus",
          "Manual testing in Playwright",
          "Project setup - Playwright TypeScript",
          "Basic Test - add product to cart - TypeScript workflow",
          "Implementing the Page Object Model (POM) - TypeScript workflow",
          "End-to-End testing - Complete order workflow",
          "Playwright step function for Clear Reporting",
          "Mail utils for sign up workflow",
          "Automating the Sign-Up Flow",
          "Storing Credentials Securely",
          "Playwright authentication - Reusing Authentication State",
          "Intercepting and Asserting API Calls",
          "Improving Speed by Blocking Assets"
        ],
        "Using AI Tools for Test Automation (GitHub Copilot and Playwright MCP)": [
          "Section intro",
          "AI coding tools (Vibe Coding approach)",
          "Installing GitHub Copilot in VSCode",
          "Using GitHub Copilot",
          "Model Context Protocol (MCP)",
          "Installing Playwright MCP",
          "Playwright MCP - First steps",
          "Generating test scenarios using Playwright MCP",
          "Troubleshooting tests using GitHub Copilot",
          "Code completions",
          "Chat mode (Ask)",
          "Section summary & conclusion"
        ],
        "API testing using Playwright": [
          "Section intro",
          "Identifying API calls in a web app",
          "API manual testing using Postman",
          "Creating a simple API request (GET request)",
          "Writing assertions (HTTP status code, headers, body)",
          "Creating complex requests (POST)",
          "Creating workflows (chaining requests)",
          "Making API calls from E2E tests",
          "Section summary"
        ],
        "Playwright automation using CI/CD: Jenkins, GitLab & GitHub Actions [Advanced]": [
          "Section intro",
          "Playwright configuration for CI/CD",
          "Jenkins: Installation and first pipeline",
          "Jenkins: Playwright integration",
          "Jenkins: Publishing Playwright reports (JUnit, HTML)",
          "GitHub Actions: Playwright integration",
          "GitHub Actions: Publishing Playwright reports (GH annotations, HTML)",
          "GitLab CI/CD: Playwright integration",
          "GitLab CI/CD: Publishing Playwright reports (JUnit, HTML)"
        ],
        "Final thoughts & Conclusion": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Knowing some JavaScript (or TypeScript) fundamentals can speed things up",
        "Windows/macOS/Linux with administrator permissions so that you can install tools and software",
        "Visual Studio Code IDE",
        "To install and use GitHub Copilot, you need a free GitHub account"
      ],
      "description": "This hands-on course is designed for complete beginners who want to master end-to-end testing with Playwright using JavaScript and TypeScript.\nStarting from the very first installation and project setup, you’ll learn how to write robust, maintainable tests that automate real-world browser workflows—from logging in and filling forms to navigating multi-page applications.\nAlong the way, you’ll build confidence with Playwright’s intuitive context/page model, powerful selector strategies, and built-in fixtures and hooks to organize your test suites.\nYou’ll discover how to:\n\n\nInteract with pages: Automate clicks, typing, drag-and-drop, dialogs, and frame navigation.\nAssert application state: Use Playwright’s TypeScript expect API for visibility, timing, text, and value checks.\nHandle networks: Intercept and mock HTTP requests to simulate back-end failures, control test data, and speed up execution.\nScale tests: Run suites in parallel across Chromium, Firefox, and WebKit for broad browser coverage.\nStructure frameworks: Implement the Page Object Model, reusable utilities, and custom fixtures for scalable, team-ready code.\nPlaywright automation: Automate your workflows with Playwright automation tools. You may even use it for web scrapping.\nUse AI tools and Playwright MCP to generate and manage test cases.\nAdd API checks: Send REST requests via APIRequestContext, validate response payloads, and chain API flows alongside UI tests.\nIntegrate CI/CD: Configure GitHub Actions (or your preferred pipeline) to run tests on every commit, generate HTML reports, and fail builds on regressions.\nUse Playwright with TypeScript: Use the most popular programming language for Playwright automation. All the TypeScript code is clean, properly formatted and professionally written.\nWhether you’re a manual tester stepping into automation, a developer wanting to catch regressions early, or a QA professional seeking modern JavaScript/TypeScript tools, this course will equip you with everything you need to deliver fast, reliable, and maintainable end-to-end and API tests.\n\n\nDisclaimer: This course is an independent training program and is not endorsed by, sponsored by, or affiliated with Playwright, Microsoft, or any of their subsidiaries. All product names, logos, and trademarks are the property of their respective owners.",
      "target_audience": [
        "Manual Testers Transitioning to Automation",
        "Automation Engineers & SDETs",
        "Frontend Developers",
        "Backend/API Developers",
        "QA Leads & Architects",
        "DevOps & CI/CD Engineers",
        "Students & Bootcamp Graduates",
        "TypeScript developers engaged in Quality products"
      ]
    },
    {
      "title": "The 30 Days Guide to Becoming a Pro Django Developer",
      "url": "https://www.udemy.com/course/the-30-days-guide-to-becoming-a-pro-django-developer/",
      "bio": "Learn to Create Amazing websites in Django, A Website Development Framework of Python",
      "objectives": [
        "Anyone who wishes to learn Django Website Development",
        "Django Development from Scratch to Advanced",
        "Learn Interesting and Amazing websites of your own",
        "Learn Django by creating an interesting appplication"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction"
        ],
        "Building Blocks": [
          "Overview",
          "Introduction",
          "Features",
          "MVC",
          "MVT"
        ],
        "Assignment": [
          "Assignment"
        ],
        "Project Files - I": [
          "Overview",
          "Creating Our First Project",
          "Manage.py"
        ],
        "Project Files - II": [
          "Settings.py",
          "wsgi,url,init.py",
          "asgi.py"
        ],
        "Apps - I": [
          "Overview",
          "Our First Project",
          "Project Files"
        ],
        "Apps - II": [
          "Running the Server",
          "Our First Application"
        ],
        "Some Key Concepts": [
          "Overview",
          "Django Template Language",
          "Jinja Format",
          "GET vs POST"
        ]
      },
      "requirements": [
        "No Basic Skills required"
      ],
      "description": "Django is a back-end server side web framework. Django is free, open source and written in Python. Django makes it easier to build web pages using Python.\nIn this course you will learn how to create amazing websites using one of the website development framework of python. This course will take you from the very basic knowledge about the framework and take you deep into the advanced knowledge you need to have to start coding your own websites in Django. This course basically makes your learning more directional since it covers the framework Django in a very professional way by creating a website. SO not only you will learn concepts of Django but you will also be able to learn how to implement those concepts in your website as we will take along a website with us and create it by applying everything we learn in this course.\nAfter completing this course you will be able to create websites of your own in Django. There are assignment tasks and sections  for you as this course intends to keep the students intact and interested throughout the course. You will be asked to challenge yourself after completing some concepts so that you can get a hold of your confidence level that you are learning what is being taught.",
      "target_audience": [
        "Anyone who wants to create amazing websites in Django"
      ]
    },
    {
      "title": "React for Beginners - From HTML CSS & JavaScript to React.js",
      "url": "https://www.udemy.com/course/react-for-beginners-from-html-css-javascript-to-reactjs/",
      "bio": "Complete React Guide including (incl Hooks, React Router, Redux, Styled Components) also Vite and Tailwind CSS",
      "objectives": [
        "React Fundamentals: learn the basic concepts of React, including components, JSX (JavaScript XML), state, props, and the component lifecycle",
        "Component-based Architecture: React is based on a component-based architecture, and students will learn how to design and create reusable components.",
        "React Router: a library that enables navigation and routing in React applications. Set up routes, handle URL parameters, and create nested routes.",
        "State Management: React provides various techniques for managing application state.",
        "Hooks: React Hooks revolutionized how developers write React components. Students will learn about different hooks, such as useState, useEffect, useContext, etc",
        "Forms and User Input: learn how to handle form submission, validation, and user input using React.",
        "Styling in React: learn various approaches to styling React components, including CSS modules, inline styles, CSS-in-JS libraries like styled-components",
        "Asynchronous Data Fetching: learn data fetching data from APIs. learn techniques to handle asynchronous operations using features like the fetch API & axios.",
        "Deployment and Build Processes",
        "Tailwind CSS for React",
        "Learn Vite for Next Generation Frontend Tooling"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "What is React & why learn it ?",
          "React DEMO",
          "What you need to know before React",
          "Environmental Setup for React JS",
          "Links & Resources"
        ],
        "React Basics": [
          "Section overview",
          "Traditional HTML CSS & JS Website",
          "Adding React to your website",
          "Render a react component",
          "What is JSX",
          "JSX Dynamic Values and Variables",
          "Functions and Events in JSX",
          "Using Images"
        ],
        "Create React App": [
          "Section overview",
          "How to create a React Application",
          "React Structure explained",
          "How to start run and stop a react development server"
        ],
        "How to use Style in React": [
          "Section overview",
          "Using the style attribute in React",
          "Using CSS in React"
        ],
        "React Components and Props": [
          "Section overview",
          "What are Components and how to create a react components",
          "What are Props",
          "Children Prop",
          "Create a reusable Card Component",
          "Using Icons in React",
          "Using Bootstrap in React",
          "Create a Button Component",
          "Function props aka event handlers",
          "Assignment: Replace the rest of the cards"
        ],
        "Project: E-Learning Platform": [
          "Section overview",
          "Create the App",
          "Create a Title Component",
          "Header Component with child props",
          "Button component with click event handlers"
        ],
        "React State and useState Hook": [
          "Section overview",
          "What is State and how to useState in React",
          "Example with useState Hook",
          "Create a Modal Comp and apply useState",
          "Extend components and state",
          "Using List in React",
          "useState on Lists",
          "Add all offers to the list"
        ],
        "Working with DATA and the React useEffect Hook": [
          "Section overview",
          "Create a Testimonial component",
          "Working with JSON data",
          "What is useEffect and how to use it",
          "Dependency Array of useEffect",
          "Update testimonials with useEffect",
          "Add Star rating with useState and map"
        ],
        "Element Reference with React useRef Hook": [
          "Section overview",
          "What is useRef and how to use it",
          "Page navigation with useRef",
          "Scroll Back To Top Button with useRef"
        ],
        "Forms submissions in React": [
          "Section overview",
          "Forms label and inputs",
          "Form group component",
          "Input values and changing values",
          "Referencing inputs with useRef",
          "Form submission and reset",
          "Simple Login and Form validation",
          "Create a Registration Form Component",
          "Simple Form registration"
        ]
      },
      "requirements": [
        "Basic HTML CSS and JavaScript"
      ],
      "description": "Welcome to my comprehensive React course for beginners! If you're someone who has experience with HTML, CSS, and JavaScript and wants to take your web development skills to the next level, then this is the course for you.\nThroughout this course, I'll guide you through the basics of React, including how to build and structure React components, use React hooks, and create multiple projects to help you practice your newfound skills.\nTo start off, we'll take a look at what React is and why it's such an important tool in the web development industry. React is a JavaScript library used for building user interfaces, and it's become incredibly popular over the years due to its flexibility and ease of use. In fact, many companies, such as Facebook, Instagram, and Airbnb, use React to build their web applications.\nWith that in mind, we'll dive into the basics of React, including how to set up your development environment, create a basic React component, and how to render that component to the browser. From there, we'll explore the various React components that you can use, such as function components and class components, and how to structure your components in a way that makes sense for your application.\nNext, we'll delve into React hooks, which are functions that let you use state and other React features without writing a class. We'll go through the various hooks, including useState, useEffect, useContext, and more, and show you how to use them in your applications to make your code more concise and easier to read.\nFinally, we'll round out the course with multiple projects that you can work on to apply your newfound knowledge. These projects will include creating a simple to-do list application, a movie search application, and a weather app. By the end of the course, you'll have a solid understanding of how to build React applications and the confidence to create your own projects.\nIn conclusion, our React course for beginners is the perfect way to take your web development skills to the next level. With our comprehensive approach, we'll guide you through the basics of React, teach you how to use React components and hooks, and provide you with multiple projects to practice your skills. React is an important tool in the web development industry, and with this course, you'll be well on your way to becoming a proficient React developer.\n\n\nHere is a list of all the hooks available in React and I will be teaching in this course, along with a short description of what they do:\n\n\nuseState: Allows you to add state to a functional component by providing a state variable and a function to update it.\nuseEffect: Allows you to perform side effects (such as fetching data or updating the DOM) after a component has rendered or before it's about to unmount.\nuseContext: Allows you to access data stored in a context object without having to pass props down through multiple levels of components.\nuseReducer: Allows you to manage complex state in a predictable way, by taking in a reducer function and an initial state value.\nuseCallback: Allows you to memoize a function, which can help with performance by preventing unnecessary re-renders of child components.\nuseMemo: Allows you to memoize a value, which can help with performance by preventing unnecessary calculations.\nuseRef: Allows you to create a mutable reference to a value or DOM element, which can be useful for accessing the DOM directly or persisting values across renders.\nuseLayoutEffect: Similar to useEffect, but runs synchronously after all DOM mutations have completed, which can be useful for manipulating the DOM directly.\nuseImperativeHandle: Allows you to customize the instance value that's exposed to parent components when using ref.\nuseDebugValue: Allows you to add a label to a custom hook, which can be useful for debugging and tracing the flow of data in your application.\nVite development environment: Instant Server Start, Lightning Fast HMR, Rich Features, Optimized Build, Universal Plugins, Fully Typed APIs\nThese hooks are some of the most commonly used ones in React, and can be incredibly powerful when used correctly. By understanding how each hook works and when to use it, you can build more complex and performant applications with ease.\n\n\nDear aspiring developers,\nWelcome to the extraordinary world of React.js! My name is Norbert B.M I am a self tough web developer and Today, we gather here to embark on a transformative journey that will take you from the realms of HTML, CSS, and JavaScript to the captivating universe of React.\nIn this course, I have crafted a learning experience tailored specifically to guide you through this remarkable transition. My primary focus is to bridge the gap between your existing knowledge and the intricacies of React.js. Together, we will lay a solid foundation upon which you can build your expertise and create captivating web applications.\nReact.js, with its elegance and power, opens up new possibilities in the realm of web development. It empowers you to craft highly interactive, efficient, and scalable user interfaces. This revolutionary library will change the way you approach building websites, elevating your skills to new heights.\nThroughout this course, we will embark on an immersive journey, gradually introducing you to React.js concepts and techniques. We will start by revisiting and reinforcing your understanding of HTML, CSS, and JavaScript, ensuring a strong footing for the adventure ahead.\nAs we progress, we will delve into the fundamental building blocks of React.js, such as components, states, and props. You will learn how to break down complex user interfaces into modular pieces, enabling reusability and maintainability in your codebase.\nThrough practical exercises and engaging projects, you will witness firsthand the transformative power of React.js. I will be by your side, offering my expertise, guidance, and support every step of the way. My real-world experiences will illuminate the path, providing valuable insights and best practices.\nWhile this journey may present challenges, I believe in your potential to overcome them. I have carefully designed this course to provide a nurturing and inclusive environment where you can learn, explore, and grow. Together, we will unravel the mysteries of React.js, unlocking the doors to a world of endless possibilities.\nSo, my fellow learners, are you ready to embark on this transformative journey? Are you prepared to witness your skills evolve and witness the magic of React.js unfold before your eyes? If so, then join me as we set forth on this exhilarating adventure.\nEmbrace the power of React.js, and let us embark on this extraordinary voyage together!\nI am Norbert BM, see you in the course!",
      "target_audience": [
        "Beginner Web Developers: If you are new to web development or have basic knowledge of HTML, CSS, and JavaScript, this course can be a great starting point for learning React. It provides a solid foundation and introduces you to the key concepts and techniques used in building React applications.",
        "Front-end Developers: If you are already familiar with front-end development and want to expand your skills by learning React, this course can help you enhance your knowledge and enable you to build more interactive and dynamic user interfaces.",
        "JavaScript Developers: If you have experience with JavaScript but have not yet worked with React, this course can help you dive into the world of React and learn how to leverage its features and benefits in your projects.",
        "UI/UX Designers: If you are a UI/UX designer who wants to have a better understanding of how to implement your designs in code and create interactive prototypes, learning React can be valuable. This course will teach you the necessary skills to bring your designs to life using React.",
        "Backend Developers: If you have experience with backend development and want to expand your skill set to include front-end development using React, this course can help you bridge that gap and understand how to integrate React components into your existing projects.",
        "Anyone Interested in React: If you have a general interest in React and want to explore its capabilities and possibilities, this course can serve as a comprehensive introduction. It is designed to cater to individuals with varying levels of programming experience.",
        "Who want to use simple no CSS code like Tailwind CSS"
      ]
    },
    {
      "title": "Beginning .NET Core MVC, Razor, API, Blazor, Azure, Identity",
      "url": "https://www.udemy.com/course/beginning-asp-net-core/",
      "bio": "Create CRUD project with Northwind DB in ASP.NET Core MVC, Razor Pages, Web API, Identity, and deploy it to Azure",
      "objectives": [
        "Create ASP .NET Core MVC Project with .Net Core Identity",
        "Create ASP .NET Core Web API with .Net Core Identity",
        "Consume ASP .NET Core Web API with .Net Core Identity",
        "Create ASP .NET Core Blazor Project with .Net Core Identity",
        "Create ASP .NET Core Razor Pages Project with .Net Core Identity",
        "Create Azure Database",
        "Implement .NET Core Identity to Azure Database",
        "Deploy ASP .NET Core Project to Azure",
        "Implement SQL Stored Procedures with C# code",
        "Implement SQL Statements with C# Code",
        "Implement Http Client Object with C# Code",
        "Implement SqlClient Object with C# Code",
        "Install Existing Database to Local Server",
        "Implement Repository Pattern"
      ],
      "course_content": {
        "Introduction": [
          "About This Course",
          "Workflow and Source Code"
        ],
        "Setting Up Northwind Database": [
          "Installing Northwind Database",
          "Scaffolding from Existing Database"
        ],
        "ASP.NET CORE MVC Project - Employee Manager": [
          "Creating Project",
          "Installing NuGet Packages",
          "Adding Employee Model",
          "Adding DbContext",
          "Adding Connection String",
          "Creating Employee Manager Controller",
          "Creating List View",
          "Creating Insert Action",
          "Creating Update Action",
          "Creating Delete Action",
          "Modifying List View",
          "Creating Insert View",
          "Creating Update View",
          "Creating Delete View",
          "Adding ASP.NET Core Identity",
          "Configuring ASP.NET Core Identity",
          "Adding Identity Tables to Northwind Database",
          "Creating Sign In User Model",
          "Creating Register User Model",
          "Crating Security Controller",
          "Creating Register Action",
          "Creating Sign In Action",
          "Creating Sign Out Action",
          "Adding Authorization",
          "Creating Registration View",
          "Creating Sign In View",
          "Adding Sign Out Option",
          "Testing"
        ],
        "ASP.NET CORE Razor Pages Project - Employee Manager": [
          "Creating Project",
          "Installing NuGet Packages",
          "Configuring Services for Razor Pages",
          "Adding Partial Views",
          "Creating List Code Behind",
          "Creating List View",
          "Creating Insert Code Behind 1",
          "Creating Insert Code Behind 2",
          "Creating Insert View",
          "Creating Update Code Behind",
          "Creating Update View",
          "Creating Delete Code Behind",
          "Creating Delete View",
          "Creating Error Page",
          "Creating Sign Out Page",
          "Creating Sign In Code Behind",
          "Creating Sign In View",
          "Creating Register Code Behind",
          "Creating Register View"
        ],
        "Creating ASP.NET Core Web API Project with ASP.NET Core Identity": [
          "API - Creating Project",
          "API - Installing Packages",
          "API - Configuring Services",
          "API - Creating Interface",
          "API - Implementing Interface",
          "API - Implementing Select All Method",
          "API - Implementing Select By ID Method",
          "API - Implementing Delete Method",
          "API - Implementing Insert Method",
          "API - Implementing Update Method",
          "API - Creating Controller",
          "API - Creating Controller Tasks",
          "API - Testing and Fixing Bugs",
          "API Client - Creating Project",
          "API Client - Setting Up Project",
          "API Client - Creating App Settings",
          "API Client - Adding Http Client",
          "API Client - Creating Constructor with Http Client",
          "API Client - Creating Countries Drop Down Task",
          "API Client - Creating List Task",
          "API Client - Creating Insert Task",
          "API Client - Creating Update Task",
          "API Client - Creating Delete Task",
          "API Client - Testing",
          "OPTIONAL - Creating SQL Stored Procedures 1",
          "OPTIONAL - Creating SQL Stored Procedures 2",
          "OPTIONAL - Implementing SQL Stored Procedures 1",
          "OPTIONAL - Implementing SQL Stored Procedures 2",
          "OPTIONAL - Testing"
        ],
        "Creating ASP.NET Core Blazor Project with ASP.NET Core Identity": [
          "Creating Project",
          "Creating Repository",
          "Implementing Repository",
          "Setting Up Packages and Services",
          "Setting Up List Component Directives",
          "Coding List Component",
          "View List Component",
          "Bug Fix For Insert Component",
          "Coding Insert Component",
          "View Insert Component",
          "Coding Update Component",
          "View Update Component",
          "Coding Delete Component",
          "View Delete Component",
          "Setting Up ASP.NET CORE Identity",
          "Configuring ASP.NET Core Identity",
          "Modifying Authorization Settings",
          "Testing and Debugging"
        ],
        "Creating Azure Project -": [
          "Creating Project",
          "Creating Azure Database",
          "Setting Up Azure Database",
          "Creating Employee Interface",
          "Implementing Select All Method",
          "Creating List Action",
          "Implementing Select By ID Method",
          "Implementing Insert Method",
          "Implementing Update Method",
          "Implementing Delete Method",
          "Implementing Select Countries Method",
          "Creating Fill Countries Method for Select List Item",
          "Creating CRUD Actions",
          "Testing and Debugging",
          "Adding .Net Core Identity to Azure Database",
          "Deploying to Azure and Testing"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "6+ months of coding with C#",
        "Installed Visual Studio and ASP .NET CORE 3.1",
        "Have Azure account (if want to deploy the project to Azure)",
        "Basic familiarity with SQL",
        "Understanding of HTML and CSS"
      ],
      "description": "Welcome to my course Beginning .NET Core MVC, Razor, API, Blazor, Azure, Identity.\nAs the title of the course suggests, this is a course for beginners who want to start Web Development with ASP.NET CORE.\nBut .NET Core Framework is a vast and complex environment with many different technologies. The goal of this course is to get you started with several of those technologies.\nThroughout the course we will create a simple Database driven project using several different ASP.NET Core technologies. We'll use MVC Pattern, Web API and API Client that will consume the API, then Razor Pages, Blazor, and also Azure. Each project will use Entity Framework Core for database access. We will use local server installed with Visual Studio, however, in the last project we will also create and deploy Azure SQL Database, as well as the web app we created. Throughout the course, we'll be using the well-known NorthWind Database. I will show you how to install it on your local server, and later on Azure.\nThe structure of this course is different than what you may be familiar with. We will create the exact same project with each of the technology. That’s because the goal of this course isn’t to integrate all the technologies into one project, but to give you a good overview of the strengths and weaknesses of each approach. And that is best done by creating the same project with each individual technology because that allows you to compare how each of the technologies works side by side.\nBut wouldn’t creating the same project over and over be quite a boring experience? I promise it won’t be. Even though the project remains the same for each technology, I packed each implementation with different ways of doing things. For example, we’ll be using different approach to CRUD operations. In one project we’ll use LINQ queries, in another we’ll use SQL statements, we’ll also use SQL Stored Procedures, and also SQL Client Object Model. We’ll also implement Repository pattern, and add .Net Core Identity to each implementation. We will use Local Server, but also Azure SQL Database. And of course, each technology and requires different approach with different structure for the whole application. So no, it won't be boring, quite the opposite!\nSo why to take my course? You see, a typical ASP.Net Core course shows you lots of different concepts by building a single big project. You start with empty template and several hours later you have a finished project with lot of advanced concepts, and technologies. And for some students, this works fine. But a typical beginner usually gets lost half way as the sheer amount of concepts and technologies presented in such course is way too everywhelming. You find yourself mindlessly coding along the instructor, only to realize at the end, that you don’t remember any of the concepts presented at the earlier lessons.\nLike I said, the structure of my course is very different. My goal is to not only present the concepts, but also re-enforce them throughout the course. This course is all about .Net Core technologies. This way we can truly concentrate on mastering the ASP.Net Core framework and concepts. So by the end of the course, not only you will remember all the essential knowledge and skills, but you will also understand and remember the more advanced ones as they are introduced slowly, thoughtfully, and in step-by step way.\nSo get excited to learn a lot of new material and dive into the world of .Net Core. The course makes the learning easy with the mix of introduction of new material, and practical coding! Every step is explained every time to make each project easy to follow.\nSee you in the course!\nLet's code!",
      "target_audience": [
        "Beginner to Intermediate Web Developers",
        "Students who want to get a basic overview of ASP .NET Core Technologies",
        "Students who want to compare different ASP .NET Core project types",
        "Developers who want to move from other Web Development platforms to ASP .NET Core"
      ]
    },
    {
      "title": "The Complete TypeScript Programming Guide for Web Developers",
      "url": "https://www.udemy.com/course/typescript-programming/",
      "bio": "Master TypeScript Development and Object Oriented JavaScript",
      "objectives": [
        "Learn to program using TypeScript",
        "Learn about annotations and static type checking",
        "Learn the concepts of Object oriented programming",
        "Master ES2015 Integration",
        "Create a complete project from scratch using Typescript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Intro to TypeScript": [
          "Section Intro",
          "What is TypeScript",
          "Why Use TypeScript",
          "Compiler & Environment Setup",
          "Intro to TypeScript Quiz"
        ],
        "Getting Started With Types": [
          "Section Intro",
          "Basic Types - Strings, Numbers, Bool",
          "Array & Tuple Types",
          "Enum & Any Type",
          "Functions & Types",
          "Getting Started With Types Quiz"
        ],
        "More Types & Interfaces": [
          "Section Intro",
          "Void, Undefined & Never",
          "String Literals & Union Types",
          "Working With Interfaces",
          "Generics",
          "More Types & Interfaces Quiz"
        ],
        "TypeScript & ES2015": [
          "Section Intro",
          "let & const Block Scoping",
          "Arrow Functions",
          "Destructuring & Patterns",
          "Template Literals",
          "TypeScript & ES2015 Quiz"
        ],
        "Classes & Objects": [
          "Section Intro",
          "Creating a Class",
          "Class Inheritance",
          "Using Modifiers",
          "Static Members",
          "Class Interfaces",
          "Import & Export",
          "Classes & Objects Quiz"
        ],
        "TS Todos Project": [
          "Project Intro",
          "Webpack Environment Setup",
          "Twitter Bootstrap UI",
          "Todos Class & Adding Todos",
          "Adding Todos",
          "Deleting Todos",
          "Persist To LocalStorage"
        ],
        "Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Student should have basic knowledge of HTML and JavaScript before taking this course"
      ],
      "description": "TypeScript was practically unheard of before its introduction in Angular 2, but post Angular 2, TypeScript has been gaining its own fandom with developers who are constantly on the lookout for faster, easier and more productive languages.\nTypeScript has since become an independent popular language to use for app development within the industry. A lot of people are leaning towards using TypeScript because it is a simple language that makes development easy. TypeScript is a superset of JavaScript, which means it can be considered as an add-on to the language. So, if you are already familiar with JavaScript, you are halfway through the battle.\nTypeScript makes it easy to not only code, but also offers numerous features such as all the benefits of ES6 and also a brilliant compiler. TypeScript’s offers a static type-checking that allows the compiler to discover mistakes and errors during compilation, rather than during testing, reducing the coding time drastically.\nHere’s your chance at becoming an expert on TypeScript. Learn this brilliant amazing language and advance your skillset. Learn how to code powerful apps, using the simplest language you can find. This course has been designed specifically to help you transition from a beginner to an expert in TypeScript. All you need is to know is the basics of JavaScript, the rest you will find within this course.\nIn this course, you will start from the very beginning with a detailed introduction to TypeScript, it’s basic commands and how it can be integrated with JavaScript. You will learn how to set up the environment, different data types that you can use including strings, booleans, arrays, tuples, and enoms.\nFrom there on, the course will also cover advanced TypeScript features such as interface and generics; learn how to integrate ES2015 and use its features such as arrow functions and template literals. You will also learn use classes and objects within TypeScript such as inheritance, modifiers, adding interfaces to classes, etc.\nLast but not least, you will also get hands-on training, by actually designing a project from scratch. You will build a ToDo App in TypeScript with Webpack. This project will help you put all the theories you’ve learned throughout the course into practical application including setting up the environment, automating typescript compiling, adding todo classes with interface, static typing, block scoping with let and const, and also local storage implementation for persisting data.\nWith so much left to learn, what are you waiting for? Let’s make you a TypeScript master!",
      "target_audience": [
        "Student who want to learn front end programming with Typescript will find this course very beneficial"
      ]
    },
    {
      "title": "PyCharm for Power-Developer",
      "url": "https://www.udemy.com/course/pycharm-for-power-developer/",
      "bio": "Optimize Pycharm's strength to develop application easily.",
      "objectives": [
        "Create high-quality code with PyCharm",
        "Recognize the different methods of using quotes to contain your text in the print function",
        "Understand how to create a project with the Flask microframework",
        "Navigate through the source code of a project and the source of python libraries",
        "Improve your code quality with Lens Mode and Intentions",
        "Use Python with database and web technology development",
        "Discover how to write, refactor, test, and debug Python code with PyCharm",
        "Understand how code completion works in PyCharm for Python and JavaScript"
      ],
      "course_content": {
        "Hello PyCharm": [
          "The Course Overview",
          "Starting a New Project: Python Versions and Interpreters",
          "PyCharm’s Lens Mode: Navigating Errors and Warnings Throughout a File",
          "Intention Actions: Making the Most of PyCharm’s Suggested Solutions",
          "PyCharm’s Python Console"
        ],
        "Python Packages, Virtual Environments, and Version Control": [
          "PyCharm’s Package Manager",
          "Pip Installs Packages",
          "Setting Up Virtual Environments in PyCharm",
          "Anaconda and Conda Environments",
          "Integrating Version Control"
        ],
        "Creating Quality Python Code": [
          "Exploring PEP8",
          "Exploring PyLint",
          "Discovering PyCharm’s Debugger",
          "Assertions and Unit Tests",
          "Configuring Test Runners",
          "Making Dynamic Templates with Ninja"
        ],
        "Python, JSON, and SQL": [
          "Introduction to JavaScript Objects",
          "JSON and Python",
          "Creating a Local SQL Database",
          "Connecting to a Remote Database",
          "Queries in SQL"
        ],
        "Flask and Web Development": [
          "RESTful APIs",
          "Introducing the Flask Framework",
          "Hello World Web App",
          "Tying it All Together: Flask and SQL"
        ]
      },
      "requirements": [
        "A fast-paced guide to help you set up your development environment and explore PyCharm's first-rate text editing tools in an engaging, friendly, example-driven way."
      ],
      "description": "Python is a beautiful and fast-growing language used to develop programs to efficiently analyze data, create eloquent software solutions for real-world problems, and design original web apps. PyCharm brings the robust and mature tools that you would expect from Visual Studio or Eclipse to Python development and provides you with a one-stop shop for all of your development tool needs.\nIn this course, you’ll learn how to improve your code quality with Lens Mode and Intentions, refactor and debug code, and perform unit testing with the PyCharm test runner. Along the way, we’ll work with SQL databases. Further on, you’ll learn to integrate Python with web projects that include HTML and JavaScript and build a project with the Flask microframework.\nBy the end of the course, you’ll be well-versed with a terrific tool for Python development—PyCharm—and be able to do everything expected of a Python developer.\nAbout the Author\nMelissa Dale is a Research Assistant at iPRoBe Lab. She is currently working with Python in Computer Vision and Machine Learning. Her previous research has focused on Software Engineering with a focus on design patterns and how they evolve over time. For her research, she has had the opportunity to explore using multiple languages including Python, Java, and Statistical R.",
      "target_audience": [
        "The course is targeted at Python dev who would want to learn how to test, maintain and evolve their software with PyCharm"
      ]
    },
    {
      "title": "Linode: Build a Scalable Blog App using PHP & MySQL DB",
      "url": "https://www.udemy.com/course/linode-build-a-scalable-blog-app-using-php-mysql-db/",
      "bio": "Cloud Computing | IaaS | Instance Deployment | Linux Foundations | Apache + DBMS | LAMP Stack | Scaling | PHP | Security",
      "objectives": [
        "Understanding the fundamental concepts of cloud computing and the benefits it provides, such as scalability, flexibility, and cost savings.",
        "Knowledge of different cloud service models such as IaaS, PaaS, and SaaS.",
        "Ability to set up and deploy virtual servers on Linode cloud platform and configure web servers and databases.",
        "Understanding of Linux operating system basics, including file systems, command-line tools, and user management.",
        "Ability to install and configure the LAMP stack (Linux, Apache, MySQL, and PHP) on Linode server.",
        "Knowledge of server security measures such as firewalls, SSH access, and SSL certificates.",
        "Familiarity with server scaling techniques such as adding resources like CPU, RAM, and storage.",
        "Knowledge of load balancing and auto-scaling concepts to ensure high availability and scalability of cloud-based applications.",
        "Understanding of PHP programming language and its syntax, data types, and control structures.",
        "Ability to write and execute PHP scripts.",
        "Understanding of database management concepts such as creating tables, inserting data, and running queries using MySQL.",
        "Ability to design and develop web applications that require user authentication and enable users to create and edit blog posts.",
        "Knowledge of best practices for securing web servers and databases.",
        "Experience in deploying, maintaining, and managing cloud-based applications.",
        "Ability to create and restore server images and backups."
      ],
      "course_content": {
        "Introduction to Cloud Computing": [
          "History of Linode",
          "Intro to Cloud Computing",
          "Benefits of Cloud Computing",
          "Cloud Computing Service Models"
        ],
        "Cloud Computing Service Models": [
          "Infrastructure as a Service (IaaS)",
          "Platform as a Service (PaaS)",
          "Software as a Service (SaaS)",
          "IaaS vs PaaS vs SaaS"
        ],
        "Cloud Server Deployment on Linode": [
          "Linode Account Setup",
          "Exploring the Linode Cloud Manager",
          "Enabling TFA on Linode",
          "Deploying a Linode Virtual Instance",
          "Exploring the Linode Instance Dashboard",
          "Remote Server Admin via SSH",
          "Password vs SSH Key Authentication",
          "SSH Key Pair Authentication on Windows",
          "SSH Key Pair Authentication on MacOS",
          "Connecting with LISH",
          "Adding SSH Public Keys to Linode"
        ],
        "Linux Foundations": [
          "Introduction to Linux",
          "The Linux Filesystem",
          "Linux Maintenance Commands",
          "Linux Directory Commands [Part 1]",
          "Linux Directory Commands [Part 2]",
          "Ubuntu Basic Server Configuration",
          "Introduction to User Accounts",
          "Creating a Non-Root Account",
          "Securing the New User Account",
          "Disabling Root User Access and Password Authentication"
        ],
        "Web Server and Database Foundations": [
          "Introduction to Web Servers",
          "Self Hosting vs Hosting Provider",
          "Web Server Software (NGINX vs Apache)",
          "Introduction to Databases",
          "SQL vs NoSQL Databases",
          "Database Transaction Standards (ACID vs CAP)",
          "CAP Theorem for NoSQL Databases",
          "Characteristics of SQL vs NoSQL DBMSes",
          "Key Terms: Stacks, Frameworks, & Languages [Part 1]",
          "Key Terms: Stacks, Frameworks, & Languages [Part 2]",
          "Key Terms: Stacks, Frameworks, & Languages [Part 3]"
        ],
        "LAMP Stack Installation and Configuration": [
          "Installing LAMP Stack on Ubuntu via Command Line",
          "Installing LAMP Stack using Linode Marketplace",
          "Testing PHP on Apache",
          "Testing MariaDB Connection from PHP [Part 1]",
          "Testing MariaDB Connection from PHP [Part 2]",
          "Remote Server Administration using Linode GLISH"
        ],
        "Foundations of Server Security": [
          "Introduction to Server Security",
          "Introduction to Firewalls",
          "Network Firewalls",
          "Securing SSH with a Network Firewall",
          "Strict Network Firewall Policy",
          "Hosted Software Firewalls UFW"
        ],
        "Server Scaling": [
          "Introduction to Scaling",
          "Vertical Scaling",
          "Horizontal Scaling with Auto Load Balancers (NodeBalancer)",
          "Instance IP Swaps"
        ],
        "Server Images and Backups": [
          "Introduction to Images and Backups",
          "Creating a Custom Image",
          "Linode Backup Service"
        ],
        "PHP Foundations": [
          "PHP Introduction",
          "PHP Preparation",
          "PHP File Test",
          "PHP Syntax",
          "PHP Variables",
          "PHP Variable Scope",
          "PHP Global Keyword",
          "PHP Static Keyword",
          "PHP Echo vs Print",
          "PHP Data Types",
          "PHP Objects",
          "PHP Strings",
          "PHP Constants",
          "PHP Operators",
          "PHP Conditional Statements",
          "PHP ElseIf Statement",
          "PHP Switch Statement",
          "PHP While Loops",
          "PHP For Loops",
          "PHP Functions",
          "PHP Functions Continued",
          "PHP Arrays",
          "PHP Multidimensional Arrays",
          "PHP Sorting Arrays",
          "PHP Superglobal Variables",
          "PHP Forms Introduction",
          "PHP POST vs GET Basics",
          "PHP Form Output and Validation",
          "PHP Form Required Fields",
          "PHP Validation Continued"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course is designed to provide students with a comprehensive understanding of cloud computing and server deployment using Linode. The course starts by introducing students to cloud computing foundations and service models. Students will gain an understanding of cloud computing technologies, including virtualization, containers, and microservices. They will also learn about the benefits of cloud computing, including scalability, flexibility, and cost savings.\n\nNext, the course will delve into cloud server deployment on Linode. Students learn to set up a Linode account and deploy a virtual server in the cloud. Students gain practical experience by deploying Linux servers and configuring various services, such as web servers and databases. Students also learn about Linux foundations, including command-line tools, file systems, and user management.\n\nAfter understanding the basics of cloud computing and server deployment, the course will introduce students to web server and database foundations. They will learn several web server technologies such as Apache and Nginx, and database technologies such as MySQL, MariaDB and MongoDB. Students also learn about LAMP stack, which includes Linux, Apache, MySQL/MariaDB, and PHP. Students gain practical experience by installing and configuring LAMP stack on their Linode server.\n\nThe course then covers the foundations of server security. Students learn to secure their Linode server by configuring firewalls, securing SSH access, and using SSL certificates. They also learn about best practices for securing web servers and databases.\n\nOnce students have gained a strong understanding of server deployment and security, the course covers server scaling. Here, students learn how to scale their Linode server by adding resources such as CPU, RAM, and storage. Students also learn about load balancing and auto-scaling, which are important concepts for ensuring high availability and scalability of cloud-based applications.\n\nThe course then dives into server images and backups. Students learn how to create and restore server images, which are useful for deploying pre-configured servers quickly. They will also learn about backup strategies and best practices for ensuring data reliability.\n\nThe next topic covered in the course is PHP foundations. Students learn about the PHP programming language, including syntax, data types, and control structures. They also gain practical experience by writing and executing PHP scripts.\n\nFinally, the course will culminate with students building a members-only blog using PHP and MySQL. Students will apply the knowledge they have gained throughout the course by creating a web application that requires user authentication and allows users to create and edit blog posts. They will also learn about best practices for designing and developing web applications.\n\nThis course is designed to provide students with a comprehensive understanding of cloud computing, server deployment, and web application development. Students will gain practical experience by deploying virtual servers in the cloud, configuring web servers and databases, and building web applications using PHP and MySQL. By the end of the course, students will have the skills and knowledge necessary to deploy and maintain cloud-based applications with confidence.",
      "target_audience": [
        "IT professionals who want to expand their knowledge of cloud computing and server deployment.",
        "Web developers who want to learn how to deploy web applications on the cloud using Linode.",
        "Entrepreneurs and small business owners who want to learn how to manage and maintain their own cloud-based applications.",
        "Students pursuing a degree in computer science, information technology, or related fields.",
        "Anyone interested in learning more about cloud computing and server deployment, regardless of their technical background."
      ]
    },
    {
      "title": "JavaScript for Coders: Learn OOP in JavaScript",
      "url": "https://www.udemy.com/course/advance-javascript-for-coders-learn-oop-in-javascript/",
      "bio": "Learn Object Oriented Programming in JavaScript",
      "objectives": [
        "Master Professional JavaScript",
        "Learn to look under the hood and build better apps",
        "Master Concepts such as Inheritance, Encapsulation and Polymorphism using live examples",
        "Become a better JavaScript Developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Object-oriented programming": [
          "Object-oriented programming concepts Part A",
          "Object-oriented programming concepts Part B"
        ],
        "Primitive data types": [
          "What you need to remember",
          "The \"NUMBER\" DATA Type",
          "STRINGS",
          "BOOLEANS",
          "ARRAYS Part A",
          "ARRAYS Part B",
          "The switch statement Part A",
          "The switch statement Part B"
        ],
        "Functions": [
          "The heart of JavaScript",
          "Well-known functions: ParseFloat",
          "Variable scope",
          "Functioms are variables Part A",
          "Functioms are variables Part B"
        ],
        "Objects": [
          "Connecting the dots",
          "Object constructors",
          "Which object belongs to which constructor",
          "JavaScript built-in objects",
          "Functions are also objects",
          "The call() method applied usage",
          "The Boolean wrapper",
          "The string() function",
          "The Math global object",
          "Introduction to Regular Expressions Part A",
          "Introduction to Regular Expressions Part B"
        ],
        "Prototype": [
          "The prototype Part A",
          "The prototype Part B",
          "Limitations of object enumeration Part A",
          "Limitations of object enumeration Part B"
        ],
        "Inheritance": [
          "The javaScript way",
          "Climbing the prototype chain Part A",
          "Climbing the prototype chain Part B",
          "Calling parent class methods",
          "Inheriting from object literals Part A",
          "Inheriting from object literals Part B",
          "Using both type of inheritance together"
        ],
        "The Browser Environment": [
          "JavaScript in action",
          "The navigator object",
          "The history object",
          "The screen object",
          "Scheduled execution",
          "DOM nodes",
          "Navigating from a given node",
          "Event handling",
          "AJAX flagship: the XMLHttpRequest object"
        ],
        "Design Patterns": [
          "Best coding practices and JavaScript Desin Patterns",
          "Using namespaces",
          "Method chaining",
          "Design patterns: the singleton Part A",
          "Design patterns: the singleton Part B",
          "Design patterns: the decorator"
        ],
        "summary": [
          "summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Students should have basic knowledge of HTML and JavaScript"
      ],
      "description": "Do you love coding in JavaScript, but are struggling to master advance JavaScript concepts? Also, does creating sound design pattern for your apps seem a little difficult? Shouldn’t there be a better way for writing codes where a little code can perform a herculean task? There is! It’s object-oriented JavaScript.\nJavaScript works well with OOP (object-oriented programming) because of three major techniques that simplify coding for developers – Inheritance, Polymorphism and Encapsulation.\nObject-oriented programming also allows developers to contain pieces of codes that can be encapsulated within an object, which can then be called numerous times in the application without having to write the code again. Another benefit of OOP JavaScript is prototype-based inheritance, compared to classes based, which allows an object to directly inherit from another object.\nYou will learn how to maximize your code using OOP and JavaScript, as well as so much more in this comprehensive course.\nIn our object-oriented JavaScript course, you will learn how to perfectly blend the practicality of object-oriented programming with the functionality of JavaScript to write codes that are clean, concise and perform exactly the way you want them to.\nThe course will begin with a quick refresher on JavaScript and its basic fundamentals, with an emphasis on important concepts such as closures and prototypes. It will then progress to understanding object-oriented programming principles and how they can be integrated with JavaScript. You will also learn OOP concepts such as encapsulation, inheritance, etc. and how they can be used to enhance your JavaScript codes.\nThe tutorial will also include how OOP and JavaScript will perform in browsers with reference to Document Object Model (DOM) and Browser Object Model (BOM). The course comes packed with many coding examples, which the learners are definitely encouraged to try on their own.\nLet OOP JavaScript simplify your codes and your life. Click Enroll now!",
      "target_audience": [
        "Students who want to learn and master advance JavaScript should take this course"
      ]
    },
    {
      "title": "Learn Restful WEB API, JavaScript and HTML: Web Services",
      "url": "https://www.udemy.com/course/learn-html-javascript-restful-api-from-scratch-web-services/",
      "bio": "Restful Web API Services PHP with MySQL, POSTMAN, JSON object and JWT token authentication",
      "objectives": [
        "Create your own Restful API services",
        "Create web APIs for Mobile apps",
        "Learn to Apply ChatGPT Open AI techniques to write API source code",
        "Master Restful API development using PHP coding and back-end development using MySQL database",
        "Apply HTML, JavaScript, PHP, MySQL and POSTMAN Beginner to start code on real-world tasks",
        "Learn to apply fully function web api service applications using PHP coding with MySQL",
        "Identify and create user JWT token authentication system with MySQL",
        "Learn What is Generative AI / Gen AI",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Get Course requirements",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "ChatGPT AI for Software Developers",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "HTML": [
          "Introduction HTML",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "Overview of a Webpage",
          "Structure of a Full HTML Webpage",
          "First Hello World! Webpage"
        ],
        "HTML Basic": [
          "Heading tags",
          "Paragraph",
          "Formatting Text",
          "List Items Unordered",
          "List Items Ordered",
          "Classes",
          "IDs",
          "Comments",
          "Heading tag exercise"
        ],
        "HTML Intermediate": [
          "Images",
          "Forms",
          "Marquee",
          "Text area",
          "Tables",
          "Links",
          "Navbar - Menu",
          "HTML Entities",
          "Div tag",
          "Google Maps"
        ],
        "HTML Advanced": [
          "HTML Audio",
          "HTML Video",
          "Canvas",
          "Iframes",
          "Input Types",
          "Input Attributes",
          "Registration Form",
          "Contact Us Form",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "JavaScript Introduction": [
          "What is JavaScript",
          "Hello World Program",
          "Getting Output",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer"
        ],
        "JavaScript Basics": [
          "Variables",
          "Data Types",
          "Numbers",
          "Strings",
          "String Formatting"
        ],
        "JavaScript Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators"
        ],
        "JavaScript Conditional Statements": [
          "If-else statement",
          "If-else-if statement"
        ],
        "JavaScript Control Flow Statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)"
      ],
      "description": "Master the art of building RESTful web services with \"Learn RESTful WEB API, JavaScript, and HTML: Web Services.\" This comprehensive course is designed to take you from a beginner to a skilled developer capable of creating secure, efficient, and scalable web services. Whether you’re new to programming or looking to enhance your existing skills, this course covers everything you need to know to develop modern web APIs.\n\n\nYou’ll start by understanding the basics of RESTful architecture and how web services interact with clients and servers. Learn to design and structure APIs using HTTP methods like GET, POST, PUT, and DELETE, and understand the importance of proper URL routing and status codes. The course introduces you to server-side technologies with JavaScript, using Node.js and Express to build the backend of your web services. You’ll explore JSON for data exchange, learn about request and response handling, and see how to integrate your APIs with databases like MySQL.\n\n\nIn addition, you’ll work with HTML and JavaScript to create user interfaces that consume these web services. Learn to build dynamic, interactive web applications that can send requests to your RESTful APIs and display real-time data. Hands-on projects and real-world examples will help solidify your understanding, and you’ll gain practical experience in building and deploying web services that interact seamlessly across different platforms.\n\n\nBy the end of this course, you’ll be equipped with the skills to create RESTful web services that serve dynamic, data-driven web applications, preparing you for a career in full-stack development or web services engineering.\n\n\nEnroll now and start building RESTful web services today!",
      "target_audience": [
        "Beginner Restful API developers and MySQL development curious about WEB API services",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to learn ChatGPT AI techniques to learn Web API coding",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Restful API developer",
        "Anyone who wants to start API coding for Mobile and Web apps"
      ]
    },
    {
      "title": "Projects in Django: Learn Django Building Projects",
      "url": "https://www.udemy.com/course/projects-in-django-learn-django-building-projects/",
      "bio": "Learn to build real world professional Django apps from scratch",
      "objectives": [
        "Learn core concepts of Django",
        "Build real world projects using this amazing technology",
        "Learn professional web development tips and tricks"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "Project Intro",
          "Django Installation",
          "Code Editor",
          "Simple Website"
        ],
        "Database Driven Dynamic Website": [
          "Introduction",
          "Defining Classes",
          "Displaying Content and Integrating Bootstrap",
          "Home Page Layout",
          "Adding the Footer",
          "Adding About and News Pages",
          "News Page Layout",
          "Adding Models, Data Migrations and Debugging",
          "Pulling Data from the Database",
          "Editing Data from the Database"
        ],
        "Django App": [
          "Introduction",
          "Initial Pages",
          "Backend Updates",
          "Rendering Website",
          "Creating Models",
          "Running Database Migrations",
          "Adding Data and Building Post Detail Layout",
          "Adding Remaining HTML Pages",
          "Debugging Final Functionality",
          "Adding Stylesheet"
        ],
        "Messaging And Email Form": [
          "Introduction",
          "Building Out Framework",
          "Populating views.py",
          "Base Template",
          "Child Templates",
          "Enabling Contact Form Functionality",
          "Building Out default.css"
        ],
        "Ecommerce Website": [
          "Introduction",
          "Creating Models",
          "Completing Models and Creating Migrations",
          "views.py- Creating User Session",
          "views.py- Handling Cart Functionality",
          "URLs and Adding Templates",
          "Populating base.html and index.html",
          "Initial Product Display",
          "Final Templates and Walk Through"
        ],
        "User Authentication and Admin Panel": [
          "Introduction",
          "Overview and Initial Site Creation",
          "Admin, Models, View Buildout",
          "Finishing Backend Functionality",
          "Testing Site Functionality",
          "Summary"
        ],
        "Course Summary": [
          "Course Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic Knowledge of Python is required for the course",
        "Basic Knowledge of HTML, CSS and JavaScript is assumed by the author"
      ],
      "description": "Django is a powerful web development framework that is taking the current market by storm, allowing developers to build powerful dynamic websites or apps. Django encourages clean and pragmatic designed apps, that can be built quickly on their framework. Using Python, Django can build heavy websites with fewer lines of codes.\nDjango relies on ideologies such as reusability and \"pluggability\", rapid development and the don’t repeat yourself principle. It uses Python as a programming language, which makes writing codes even easier. Django also provides an optional administrative create, read, update and delete interface that is generated dynamically through introspection and configured via admin models.\nPopular websites such as Instagram, Public Broadcasting Service, The Washington Times, and Pinterest have been built on Django.\nDo you want to learn Django? Build complex, database-driven websites? You’ve come to the right place!\nWhile, there are hundreds of different courses and tutorials available on the internet, so why should you choose this one? While, other courses focuses heavily on theory or teaching you the basics, once the course is over, students are often left confused without any idea of what they can do next. Not in this course!\nOur tutorial adheres to ‘learn by doing’ approach. In this course, not only will you go over theoretical aspects of Django, but you will learn how to actually build websites with this amazing framework. The instructor will go through each project with you, helping you not only learn Django, but also how you can build real world websites and apps. At the end of this course, you will have the knowledge as well as the confidence for practical applications.\nYou will learn 5 different projects in the duration of this course that will range from easy to more complex applications. Starting with a simple website, you will then progress on to creating a shopping cart, complete with a mock check out.\nLet’s look at projects you will cover:\nProject 1: Database Driven Website – You will learn how to tie a website into a database, as well as how to use dynamic code into HTML pages.\nProject 2: Django app – You will learn how to build a complete functional app, as well as how it communicates with other apps.\nProject 3: Email sent form – In this project, you will learn how to use the messaging component in Django by creating an email form that will be sent to a real email account.\nProject 4: Ecommerce website – In this one, you will learn how to design a complete ecommerce website, along with a cart and a checkout process.\nProject 5: User authentication – You will learn how to do user authentication, where users can sign up and log in.\nSo, what are you waiting for? Let’s get down to it and start building Django websites!",
      "target_audience": [
        "Any one who wants to learn professional web development in Django will find this course very useful"
      ]
    },
    {
      "title": "React Full Stack Web Development With Spring Boot(Inc. JWT)",
      "url": "https://www.udemy.com/course/step-by-step-full-stack-development-spring-boot-with-react/",
      "bio": "Spring Boot, React, Intellij, Java, Mysql, Liquibase, MVC, CRUD, JWT, Full Stack Development, JWT (Json Web Token)",
      "objectives": [
        "Full Stack Development",
        "React, React Architecture, Example React Implementation",
        "Spring Boot, String Boot Model View Controller Structure",
        "Liquibase Example Cases"
      ],
      "course_content": {},
      "requirements": [
        "Basic Java Knowledge",
        "Basic Javascript Knowledge"
      ],
      "description": "In this course, we will implement example project step by step with using Spring Boot and React. We will create a product management system. And products can be seen and bought by users.\nThere will be two roles of users. Admin and User.\nSo we will also go on with role based authentication. To imlement it, we will use Json Web Token (JWT).\nTo secure login, authentication and authorization, we will use Spring security.\nWe will go on with two main components. These are client side and server side.\nOn client side, we will implement example react project.\n- Admin Panel and user operations will be implemented.\nOn server side, we will implement example spring boot project.\n- Model view controller will be implemented.\n- Liquibase will be implemented for database changesets.\n- Mysql will be used for Database.\n- Json Web Token will be used for role based authentication.\n\n\nOur example project will be product management system. With this project, we will create an application that contains different pages like Login, Register, Home, Admin, Profile etc. And we will manage all pages one by one. Like you see from page list, we will have different role-based pages like Admin, Profile... so we will also see the role based authentication and authorization or for frontend terminology, it is guards.",
      "target_audience": [
        "All developers curious about React and Spring Boot"
      ]
    },
    {
      "title": "Learn Node.js by building Udemy: Stripe + MailChimp + Wistia",
      "url": "https://www.udemy.com/course/use-javascript-to-build-udemy-stripe-mailchimp-wistia/",
      "bio": "Learn how to use Javascript Serverside Nodejs to build Udemy Clone",
      "objectives": [
        "Students will be able to build their own dream elearning web application and sell their own course online"
      ],
      "course_content": {
        "Core Foundation": [
          "Technologies",
          "Basics of HTTP",
          "Web Application Basics Part 1",
          "Web Application Basics Part 2",
          "MongoDB and Mongoose Part 1",
          "MongoDB and Mongoose Part 2",
          "MongoDB and Mongoose Part 3",
          "Template Engine: EJS",
          "Cookie and Session",
          "Passport : Local Login"
        ],
        "Section 1: Setting up the project and Authentication": [
          "Source code",
          "Setting up Project",
          "Organizing the project",
          "Create two Schemas",
          "Setting up Template Engine",
          "Facebook Authentication Part 1",
          "Facebook Authentication Part 2",
          "Facebook Authentication Part 3",
          "Facebook Authentication Part 4",
          "Passport Overview",
          "Mailchimp Integration"
        ],
        "Teacher's section": [
          "Setting up becoming an Instructor URL",
          "Setting up becoming an Instructor web page",
          "Setting up Teacher's dashboard",
          "Create a course",
          "Create a course web page",
          "Edit a Course: URL and Web page",
          "Revenue Report"
        ],
        "Student's Section": [
          "All courses URL and Web page",
          "Single Course URL",
          "Course Description",
          "Payment Route - Stripe",
          "Payment Frontend - Stripe",
          "Host videos with Wistia"
        ]
      },
      "requirements": [
        "Should know basics of Javascript operations",
        "Students should know basics of HTML and CSS",
        "Students should be really passionate about building web application",
        "Have the courage to ask questions whenever stucked."
      ],
      "description": "Have you ever wondering on how to build your next Revolutionary E-learning Web application?\nThis course will teach you step by step on how to build an elearning web application like Udemy with the latest cutting edge technology and that is Node.js\nYou will use Javascript on both the backend and frontend of the web application.\nLive is too short to depend on someone else, if you are still waiting for that one amazing technical co-founder to help you on building your web app, then I suggest you instead of waiting , its better for you to do it yourself.\nEvery code that will be written by me, will be explained in details. So you do not need to worry about not understanding certain algorithm.\nIf you are ready to embark on this journey on building an Elearning web application, then what are you waiting for? Lets get into it!",
      "target_audience": [
        "Node.js ethuasiast",
        "Entrepreneurs",
        "Frontend Developer",
        "Newbie server-side developer"
      ]
    },
    {
      "title": "ArcGIS Online 2025: Web Maps, Apps, Survey123 & Dashboards",
      "url": "https://www.udemy.com/course/learn-webgis-with-agol/",
      "bio": "Build interactive maps, web apps, Survey123 forms & dashboards in ArcGIS Online – No Coding Required!",
      "objectives": [
        "Build Interactive Web Maps using ArcGIS Online (AGOL)",
        "Create Web Apps & Dashboards to visualize and analyze spatial data",
        "Design & Deploy Survey123 Forms for real-world data collection",
        "Integrate GIS Data seamlessly across Web Maps, Apps, and Dashboards",
        "Enhance Data Visualization with charts, indicators, and dynamic actions",
        "Apply WebGIS Skills to real-world projects like environmental mapping and urban planning"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of GIS will be helpful but not mandatory",
        "A 21-day trial or organizational ArcGIS Online (AGOL) account"
      ],
      "description": "Unlock the power of WebGIS with ArcGIS Online (AGOL) in this hands-on, practical course crafted for both beginners and experienced GIS professionals. Whether you’re looking to enhance your GIS skill set, digitize your field surveys, or build powerful web-based GIS applications, this course will guide you step by step through the core features of ArcGIS Online.\nWe begin by covering the fundamentals of AGOL—learning how to navigate the interface, add and visualize spatial data, apply smart symbology, and explore authoritative datasets using the Living Atlas of the World. You’ll gain confidence in creating and customizing WebMaps, integrating multiple data layers, setting pop-ups, filters, bookmarks, and publishing your maps for interactive use.\nNext, we move on to Web Apps—where you’ll learn to build fully functional GIS applications using Web AppBuilder. You’ll customize your app with themes, layouts, and interactive widgets, all without writing a single line of code.\nIn the following module, you’ll get hands-on with ArcGIS Survey123, designing a mobile-friendly data collection form. You’ll learn how to deploy it, collect field data, and integrate it into your GIS projects.\nFinally, we’ll build a powerful ArcGIS Dashboard, turning your raw data into meaningful visualizations using maps, charts, indicators, and live updates.\nBy the end of this course, you'll be able to design and share professional GIS products tailored for urban planning, environmental monitoring, disaster management, education, and many other real-world applications. Join us and take your GIS skills to the next level with ArcGIS Online!",
      "target_audience": [
        "# GIS beginners & enthusiasts # Students & researchers # GIS & remote sensing professionals # Urban planners & environmental analysts # Surveyors & field data collectors # Anyone passionate about mapping"
      ]
    },
    {
      "title": "Essentials of Docker For .Net Developers",
      "url": "https://www.udemy.com/course/docker-for-dotnet-developers/",
      "bio": "Step-by-Step Learning, Containers, Images, Docker File, SQL Server Linux Image, API, Final Project",
      "objectives": [
        "Docker Containers Concept",
        "Docker Vs Virtual Machines",
        "Significance of Docker",
        "Where Docker fits in",
        "Docker Commands",
        "Docker Images",
        "Docker File",
        "Docker Compose",
        "Multi Container Scenarios",
        "Dockerhub"
      ],
      "course_content": {
        "Introduction": [
          "Introduction- Docker For .Net Developers",
          "Who should take this course?",
          "Docker Installation Process"
        ],
        "Containers Introduction": [
          "Why Containers?",
          "VM vs Containers",
          "Where Docker fits in?"
        ],
        "Docker Basics": [
          "Images and Containers",
          "Docker Image Command Basics",
          "Docker Container Commands",
          "Removing Containers"
        ],
        "Docker File": [
          "Project Creation",
          "Creating Docker File",
          "Building the Docker File",
          "Running the Container"
        ],
        "Installing SQL Server": [
          "Installing SQL Server Linux Image",
          "Connecting SQL Server Via Management Studio",
          "Connecting SQL Server Via Command Line"
        ],
        "Docker Compose": [
          "Creating Sample API Project",
          "Creating the Docker File",
          "Creating the Docker Compose File",
          "Running the Docker Compose File",
          "Publishing to Docker Hub",
          "Final Notes"
        ]
      },
      "requirements": [
        "Any command/terminal prompt basics.",
        "Have a GitHub and Docker Hub account.",
        "General dotnet concepts is desirable to have.",
        "Local admin access to install Docker for Mac/Windows/Linux.",
        "No paid software required - Just install your favourite text editor and get started."
      ],
      "description": "In this course, our instructor Rahul Sahay (Microsoft MVP), specialising in Web technologies will take you through the essentials of Docker for .Net Developers.\nDocker—A mainstream programming containerisation platform—can streamline the development procedure by accelerating the setup and design of environments.\nIn case you're a .NET developer who needs to utilise containers in your application environment, this course can help by exhibiting how to use Docker in your workflow.\nThis course will starts by discussing the job of Docker in the container world, and after that goes over fundamental ideas, including how to run a container from a Docker image.\nFurthermore, how to use docker commands easily. This starts from fundamental Docker process, like how to include a Dockerfile to a Visual Studio project, and how to compose a Docker image from a Dockerfile. He wraps up the course by talking about how to work with the Docker Compose file format and then publishing the same on dockerhub cloud.",
      "target_audience": [
        "Dotnet developers",
        "Developers, looking to learn containerization techniques.",
        "Developers, looking to learn how to build cross platform apps.",
        "Developers, looking to learn; how to dockerize any .NET Project.",
        "Software architects wanting to learn docker applied to dotnet projects."
      ]
    },
    {
      "title": "Absolute Beginners Introduction to web development",
      "url": "https://www.udemy.com/course/absolute-beginners-introduction-to-web-development/",
      "bio": "Learn practical hands-on web development with : HTML | CSS | JavaScript",
      "objectives": [
        "Install and use text editors",
        "Install multiple web browsers to test applications",
        "Plan and design a web project",
        "Create a project directory",
        "Understand basic anatomy of an HTML Element",
        "Understand basic structure of an HTML document",
        "Create basic HTML document structure",
        "Understand and use HTML Attributes",
        "Markup Texts",
        "Create links on web pages",
        "Use comments in your code",
        "Write and understand CSS Ruleset",
        "Apply CSS in various ways",
        "Use CSS Base Selectors",
        "Understand CSS Box Model",
        "Change the background color of HTML document",
        "Understand and use CSS Margin and Padding properties",
        "Understand and use CSS Fonts and display properties",
        "Apply JavaScript in various ways",
        "Understand and create JavaScript Variables",
        "Understand and create JavaScript Arrays",
        "Understand and use various JavaScript data types",
        "Understand and use various types of JavaScript Operators",
        "Understand JavaScript Operator precedence",
        "Understand and use JavaScript Conditional statements",
        "Understand and create JavaScript functions",
        "Understand and use JavaScript Events",
        "Build a digital calculator",
        "Build an analogue clock",
        "Build a todo list web app"
      ],
      "course_content": {
        "Getting started": [
          "Introduction",
          "Tools you need",
          "Install Text editors",
          "Install sublimetext",
          "Install web browsers",
          "Planning your web project",
          "Sketching your website design",
          "Choosing your assets",
          "Creating your project folder structure"
        ],
        "Introduction to HTML": [
          "What is HTML",
          "Anatomy of an HTML Element",
          "Basic structure of an HTML document",
          "Creating HTML document structure - part 1",
          "Creating HTML document structure - part 2",
          "Creating HTML document structure - part 3",
          "HTML Attributes",
          "Marking Up Text",
          "Creating Links",
          "Commenting your code",
          "What is a a source code"
        ],
        "Introduction to CSS": [
          "What is CSS",
          "Various ways of applying CSS",
          "Styling multiple properties",
          "Styling multiple elements",
          "Modifying CSS",
          "Using CSS basic selectors",
          "Commenting your css code",
          "The CSS Box Model",
          "Using CSS Margin and Padding properties",
          "Changing background color",
          "CSS display property",
          "Positioning and styling page title",
          "Using CSS Font property",
          "Using google font"
        ],
        "Introduction to JavaScript": [
          "What is JavaScript",
          "Where to place JavaScript",
          "What are JavaScript Variables",
          "Variable naming convention",
          "JavaScript Arrays",
          "JavaScript Data Types",
          "Combing data types",
          "What are operators",
          "Arithmetic Operators",
          "Assignment operators",
          "Operator Precedence",
          "String operators",
          "Comparison Operators",
          "Logical operators",
          "Typeof operators",
          "Conditional statements",
          "Functions",
          "Commenting your JavaScript Code",
          "JavaScript linting tools",
          "JavaScript Events",
          "Changing images with Javascript",
          "Fixing jslint warnings -part 1",
          "Fixing jslint warnings -part 2",
          "Adding a welcome message to a web page"
        ],
        "Bonus Project 1: Creating a digital calculator": [
          "What we will create",
          "Design and Sketch",
          "Creating directory and files",
          "Creating structure with HTML",
          "Creating structure with HTML - Part 2",
          "Adding functionality with JavaScript",
          "Adding CSS"
        ],
        "Bonus Project 2: Creating Analogue Clock": [
          "What we will create",
          "Creating directory and files",
          "Creating canvas object",
          "Creating the clock face",
          "Drawing the clock numbers",
          "Drawing the time and hand"
        ],
        "Bonus Project 3: Todo List WebApp": [
          "What we will create",
          "Creating directory and files",
          "Creating the app structure",
          "Styling the app",
          "Adding functionality with JavaScript -Part 1",
          "Adding functionality with JavaScript -Part 2",
          "Thank You"
        ]
      },
      "requirements": [
        "You should be able to use a computer at beginner level",
        "You should be able to navigate the internet at beginner level."
      ],
      "description": "Hello and welcome to this course.\nIf you are a complete beginner, web development can be challenging —this course  will guide you and provide enough detail for  you to feel comfortable and learn the topics properly.  You should feel at home whether you are a student learning\nweb development (on your own or as part of a class), a teacher looking for class materials, a hobbyist,\nor someone who just wants to understand more about  how web technologies work.\nThe objective of this course is not to take you from \"beginner\" to \"expert\" but to take you from \"beginner\" to \"comfortable so you can feel confident to experiment further.\nThe three technologies every web developer must know are :\nHTML : Used to create  content\nCSS: Used to present the content\nJavaScript : Used to create interaction\nThese core technologies  are the building blocks of all websites and web based projects.\nTopics include:\nIntroduction to basic HTML\nHTML document structure\nAnatomy of HTML element\nMarking up text\nLinks\nUsing comments and HTML Attributes\nIntroduction to  basic CSS\nWays to apply CSS\nCSS Ruleset\nCSS basic selectors\nStyling multiple elements\nCSS Box model\nUsing margin and padding properties\nChanging background color\nCSS Display property\nCSS Font property\nUsing google fonts\nIntroduction to basic JavaScript\nWhere to place JavaScript\nVariables\nData Types\nOperators\nOperator precedence\nUsing Conditionals\nFunctions\nEvents\nUsing Linting tools\nAdding image changer\nAdding personalized message\nThe course is  practical and hands-on and should provide you with enough basic web development skills to be creative building your own projects.",
      "target_audience": [
        "Beginners to web development",
        "Anyone who wants to learn web development"
      ]
    },
    {
      "title": "Hands-On WebAssembly for C++ Programmers",
      "url": "https://www.udemy.com/course/hands-on-webassembly-for-c-programmers/",
      "bio": "Take advantage of the performance and speed of C++ directly in web browsers",
      "objectives": [
        "Gain a robust understanding of WebAssembly and its place in the modern web ecosystem so that you can leverage it correctly",
        "Transform your C++ applications into WebAssembly so that you can deploy them to the web, but with the performance you're used to",
        "Explore the in's and out's of WebAssembly by working through code so you understand core concepts",
        "Interact with system libraries, such as graphics and audio frameworks, to seamlessly convert heavy-duty C++ applications into WebAssembly",
        "Debug and profile C++/WebAssembly code, so that you can easily detect and remove bottlenecks"
      ],
      "course_content": {
        "Getting Started with WebAssembly": [
          "Course Overview",
          "Understanding WebAssembly and C++",
          "Seeing WebAssembly in Action",
          "Test your knowledge"
        ],
        "Running Our First C++ Application in the Browser": [
          "Setting Up Your Toolchain",
          "Running Your First C++ Application on the Web",
          "Using the C++ Compiler to Generate WebAssembly",
          "Calling C++ Functions with JavaScript",
          "Passing Complex Data with Embind",
          "Test your knowledge"
        ],
        "Getting Under the Hood of WebAssembly": [
          "Interacting with the Browser",
          "Exploring the Syntax of WebAssembly",
          "Understanding the Memory Model",
          "Catching WebAssembly Traps",
          "Integrating WebAssembly Modules",
          "Test your knowledge"
        ],
        "Using WebAssembly System Libraries": [
          "Interacting with System Libraries",
          "Handling Input and Output",
          "Telling Time Through WebAssembly",
          "Performing in Parallel by Threading",
          "Communicating with Other Programs over the Network",
          "Test your knowledge"
        ],
        "Working with Computer Hardware in the Web": [
          "Converting the Game to SDL",
          "Drawing Our Game in WebAssembly",
          "Handling Keyboard and Mouse Inputs",
          "Experimenting with WebGL",
          "Wrapping Applications with Windowing",
          "Test your knowledge"
        ],
        "Making Music in the Browser by Integrating Audio": [
          "Understanding Audio Processing in WebAssembly",
          "Playing Simple Sounds in SDL",
          "Integrating Sounds into Our Applications",
          "Providing Music in Our Applications",
          "Test your knowledge"
        ],
        "Debugging Techniques in WebAssembly": [
          "Exploring Web Debugging",
          "Debugging WebAssembly",
          "Protecting Your Code with Debug Capabilities",
          "Profiling WebAssembly",
          "Tracing Execution in WebAssembly",
          "Course Review",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Some prior knowledge of JavaScript would be helpful.",
        "Additionally, web developers who want to surgically remove JavaScript bottlenecks using WebAssembly will also benefit from the course."
      ],
      "description": "Due to recent trends, companies are looking to design their applications live on the web. However, it's easy to grow frustrated with JavaScript, which offers limited scope for fine- tuning performance.\nIf you want get ahead of your competitors by working in a language you're comfortable with, one that is designed for speed? WebAssembly is your answer. Starting with first principles; you'll learn is why WebAssembly is so powerful and why C++ is a natural fit. The you'll look at compiling a program for WebAssembly using C++.\nThis course looking provides code examples, rather than slides so that you can really delve into the depths of WebAssembly. Allowing you to go beyond simple toy examples and learn about how real programs compile to WebAssembly.\nYou'll find out that not everything works out right the first time, and it's just as important to learn how to debug and profile your programs.\nBy the end of this course, you will have gained all the skills you need to get a speed advantage over pure JavaScript applications, leaving your competitors behind.\nAbout the Author\nPatrick Viafore is a software engineer with 12 years' experience writing C++ and web applications. From meteorology software to telecommunication firmware and operating systems in the cloud, he's been involved in many facets of the software world.\nPatrick has seen new technologies grow and blossom, and knows how hard it can be to stay on the cutting edge, especially given the lightning-quick pace of web development.\nHe focuses on distilling the concepts that you care about, and reinforcing them with real code. In this course, he will be pulling code excerpts from real, open-source libraries and showing you how to transform them into WebAssembly.\nPatrick enjoys teaching and has given conference talks, hosted workshops, and mentored many developers.",
      "target_audience": [
        "This course is suitable for C++ programmers who want to get their applications browser-ready with WebAssembly, but don't know where to start."
      ]
    },
    {
      "title": "Angular 8 Real World WebApp Development w/ Node.js & MariaDB",
      "url": "https://www.udemy.com/course/angular-real-world-webapp-development-w-nodejs-mariadb/",
      "bio": "Build a real world web app by creating your own SEO-friendly blog with Angular Universal, Node.js, Sequelize & MariaDB.",
      "objectives": [
        "Build an Angular (Universal) web application from the ground up",
        "Implement a NodeJs web service in the backend",
        "Use the relational database management system MariaDB",
        "Implement authentication with JSON Web Tokens (JWT)",
        "Use object-relational mapping (ORM) with Sequelize",
        "Publish your web application on a Windows Server with IISNode",
        "Implement HTTP Interceptors",
        "Restrict component access with Angular Route Guards",
        "Implement a JavaScript Middleware",
        "Make use of the Facebook Sharing Debugger",
        "How to update your web application to a new Angular version"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience with Angular and NodeJs is preferable",
        "Familiarity with HTML, CSS and JavaScript basics is also recommended",
        "To publish your web application with IISNode you need a Windows Server with IIS"
      ],
      "description": "\"This course was well designed and gave very in-depth classes on specific features of Angular and Node. I found each section clear and easy to follow and the project really wrapped up everything in a fun to code along project!\"\n⭐⭐⭐⭐⭐ - Robin Labonde\n\n\nWelcome the Angular 8 Real World WebApp Development with Node.js & MariaDB course!\nIn this course, we’ll focus on building a real-world web application with the tools Angular and Node.js provide.\nWe will build an SEO friendly blog, which means we're going to use Angular Universal to build a server-side rendered front end.\nIn the back end, we're going to use Node.js for the web service, we store our data in a MariaDB and to map our objects with the database, we’re going to use the object-relational mapping library Sequelize.\nAnd finally, we publish the whole thing on a Windows Server with IISNode.\nThe web application itself will be a blog that could be extended to a big news or magazine web application.\nWe start with displaying some articles and later on we'll build an administration dashboard with authentication (we're using JSON Web Tokens to be more specific) and the option to create new articles, modify them, and so on.\nLet's have a deeper look at what you are going to learn in this course:\nThe Basic Blog\nIn this section, we will start with our Angular project and develop the blog, so that it will work offline - without any web service or database. In essence, you could already publish this blog if you want to add all your blog posts within your Angular app.\nMeta & Open Graph Tags\nAs the title may already imply, here we will add meta tags and open graph tags. So the information that search engines and social media platforms need to find your blog and display your articles properly when they are shared.\nKeep in mind though, that these tags won’t necessarily work if you stick with a client-side rendered Angular app. Google promised to be able to crawl client-side rendered Angular web applications, but by the experience of many blogs and developers, we are not there yet.\nApart from that, social media platforms still need proper source code or tags to scrape your site properly.\nAngular Universal\nA short but important section - we will implement server-side rendering (SSR) here. That’s what Angular Universal is all about. When you finished implementing server-side rendering, your tags will be available in the source of your blog and your pages will also render much faster.\nBack end with Node.js\nIt’s time for the backend. We’ll create a new project, the web service with Node.js. Now the articles will come from the web service.\nDatabase & ORM with MariaDB & Sequelize\nWe expand the web service and finally connect our web application with a database so that the articles are now stored in a MariaDB. Additionally, we will use Sequelize for the object relational mapping between our models and the database tables.\nAdministration Dashboard\nIn essence, the blog works with all layers. We have the client, the web service and the database. But adding new articles and modifying them is a bit cumbersome. So let’s add an administration panel where we get an overview of all articles and where we can create, update and delete them - this means, building all CRUD operations.\nAuthentication\nThe administration dashboard works, but until now, everybody could use it. In this section, we change that by adding authentication with JSON web tokens. Also, we’re going to introduce Angular interceptors, route guards and a small middleware.\nIISNode\nFinally, we are able to deploy our blog. In this section, you’re going to learn how to build and publish the Angular Universal client and the Node web service on a Windows Server with Internet Information Services.\n\n\nWhat tools are we using?\nAll the tools we're going to use in this course are available for free.\nVisual Studio Code - A source-code editor developed by Microsoft for Windows, Linux, and macOS. We will use this code editor for the Angular client application as well as the Node.js web service.\nHeidiSQL - A free and open-source administration tool we will use and install together with MariaDB. It's perfectly suited to see the data we're going to store in the database.\nPostman - A greate choice for API testing. Later during this course, we will use Postman to run API calls against the Node.js web service.\nGoogle Chrome - It's not necessary to use Google Chrome, any web browser with developer tools is useful here. We're going to use the developer tools for its console output and inspecting the HTML of our web application.\nGit - This one's totally optional. I recommend using Git as source control. You can use it locally or push your code to a hoster like GitHub. The complete code written in this course is available on GitHub, for instance.\n\n\nWho is this course for?\nThis course is suited for students who...\n...already have a little experience with Angular\n...want to up their game with Angular and Node.js\n...learn the skills to build a modern web application with Angular, Node.js, MariaDB and Sequelize from the ground up\n...want to create a portfolio website or private blog completely on their own without using any third-party services\n\n\nWho is the instructor?\nPatrick is an experienced web developer who has been working in this field for over 15 years. With several courses on Udemy, over 30.000 students and more than 3.000 reviews, he knows what you are looking for in a course about web development. He works full-time as full stack developer at a market research company in Germany, teaches online courses on Udemy and YouTube, and also gives one-on-one online lectures. Let's see, what other students are saying:\n⭐⭐⭐⭐⭐\n\"Patrick is an incredibly gifted programmer and educator. He writes code effortlessly and does a beautiful job of explaining concepts, the code structure, and how everything interacts with each other. He is patient and supportive and can efficiently work with beginners and people with more advanced skill. If you want to learn any aspects of programming, you MUST contact Patrick. He’s among the best instructors I’ve ever worked with, and I give him my highest recommendation.\" - Mike\n⭐⭐⭐⭐⭐\n\"Very good, easy pace, and easy to understand! this is the good course for beginner and intermediate developers. Thank you!\" -Tri\n⭐⭐⭐⭐⭐\n\"Quick and useful course getting someone upto speed on WCF RESTful services. I like this course as the instructor Patrick just gets to the crux of the topics without padding with unnecessary discussions. When people are limited by time to spend on a course, this is the kind of course that is ideally looked up to. Very good course! Thank you!\" - Sundararajan\n⭐⭐⭐⭐⭐\n\"Patrick is a great instructor in that he is organized, knows his stuff, and takes the time to explain everything in detail. Great course for beginning WCF developers!\" - Evarardo\n⭐⭐⭐⭐⭐\n\"I like the pace, the simplicity of piece by piece introductions and the author's speaking pace & clarity. very nice!\" - Stephen\n⭐⭐⭐⭐⭐\n\"Love the way you go through each step one short video at a time - makes it more rewarding and easier to digest and break down if need be. Also appreciate your thorough responses to others' questions! Great job, I look forward to seeing more videos like this because I am learning a ton from you! Thank for all of your hard work and dedication!\" - Adrienne\n⭐⭐⭐⭐⭐\n\"Single Page Application (SPA) has become a very important requirement for web application projects. This course has given me a very good example on how to create a \"SPA\". The whole process is covered since creating the project, the HTML page, the detailed creation of each file til its deployment. Very good. I recommend it for systems analysts who are starting to use this concept of SPA, just like me. If something in your solution does not work it's because you're doing something wrong. Everything works fine, the instructor is clear and gives us good and complete information. For me, the course was excellent.\" - Michel\n⭐⭐⭐⭐⭐\n\"As always, a course by Patrick God is a good choice for learning. I had a chance to watch another courses from him and I have to say, I did the right thing choosing this guy.He is very straight forward, speak well, and let me understand quickly all what I need.\" - Paulo",
      "target_audience": [
        "Everyone who wants to learn how to build a SEO-friendly web application with Angular, NodeJs, Sequelize and MariaDB",
        "Students who want to up their game with Angular & NodeJs"
      ]
    },
    {
      "title": "Create Hotel Website with Online Booking & Reservation in WP",
      "url": "https://www.udemy.com/course/hotel-website-creation-online-booking-reservation-resto/",
      "bio": "Create a professional website for your hotel, motel or any property and accept booking and reservations with WordPress",
      "objectives": [
        "Design a professional hotel website with FREE professional hotel theme from me ( 59$ )",
        "How to create complete hotel website with online booking facility and reservation",
        "How to create rooms, room services in hotel rooms with conditions and manage them",
        "How to create blogs to get real organic traffic without paid promotion",
        "How to add restaurant menu in website ( offline menu ) as well as ( online ordering system )",
        "Managing both hotel booking and restaurant orders",
        "Creating booking / orders manually and configuring payment gateways for both hotel and restaurant",
        "How to convert visitors easily into booking with marketing automation",
        "Editing pages like terms and conditions, privacy policy and other legal pages",
        "Creating mobile app without coding for both android and ios platform",
        "Visually customizing Wordpress css without coding / changing css like text, images, animations, etc",
        "Integrate booking systems like hotel world, booking, airbnb or trip advisor or any other affiliate booking",
        "Adding social logins to website like google and facebook logins",
        "Add ecommerce Platform with woocommerce and sell products / food items",
        "Creation of seasonal pricing and weekly pricing of hotel rooms",
        "Customize booking email templates and restaurant email templates"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to Course"
        ],
        "Hosting and WordPress Setup": [
          "Hosting WordPress"
        ],
        "Hotel Booking WordPress Theme": [
          "Please Download Hotel Website Theme",
          "Installing Theme for Hotel Website",
          "Importing Demo Data",
          "Customizing Website Name",
          "Fixing Homepage, Adding sliders and enabling booking functionality",
          "Customizing Header Logo, Icon and Menu",
          "Customizing Home Slider - Revolution Slider",
          "Customizing Homepage of Website",
          "Search / Explore page Customization",
          "Adding Contact us page",
          "Creating Terms and Conditions page"
        ],
        "Managing Rooms and Booking": [
          "Adding Rooms to Hotel",
          "Creating Room Services",
          "Adding Extra Services for rooms / persons",
          "Configuring Contact Forms",
          "Configuring Payment Gateway - Hotels",
          "Multiple Hotels and Locations,",
          "managing hotel bookings from website"
        ],
        "Marketing Automation - For More Conversion & Sales": [
          "Live sales pop, Coupon Pop & Chat",
          "Header smart bar",
          "adding blogs for organic traffic"
        ],
        "Hotel with Restaurant Offline and Online": [
          "Restaurant Offline Menu",
          "Adding Woocommerce and Creating your First Food item",
          "Customizing Checkout Page",
          "Payment Gateways for taking Payment for Foods and Coupons",
          "Bulk Editing for Multiple Products - Fastest Way to manage and add"
        ],
        "Converting Website to Android & iOS App": [
          "Creating Android App",
          "Creating iOS App"
        ],
        "Blogging and SEO": [
          "Keyword Tools ( BEST FREE TOOLS )",
          "Integrate Google Analytics with WordPress",
          "Yoast and Rankmath SEO Plugins"
        ],
        "Make WordPress Load Faster without any Technical skills": [
          "Tools for Pagespeed and Performance ( BEST FREE TOOLS )",
          "WP-Rocket WordPress Plugin and Comparison ( PLUGIN PROVIDED FREE )",
          "Configuring WP-Rocket Plugin",
          "Imagify Image Compression"
        ],
        "Bonus Lecture": [
          "Yellow Pencil - Best Visual CSS Customization Plugin",
          "Themes and Plugins - Download"
        ]
      },
      "requirements": [
        "You don't need any coding experience at all. That is the beauty of Wordpress.",
        "You will need a working computer and a web browser connected to the internet..",
        "No prior knowledge of Wordpress is required as everything will be covered in this course."
      ],
      "description": "Learn to Create Premium Hotel Website with WordPress\n- Creating a strong brand identity is one of the important things in the hotel industry as it can help with booking sales and revenue. We know that people will recognize the hotel's brand immediately after hearing about that brand more than 3 times.\n- Increase direct sales is one of the challenging parts for hotels nowadays. Hence, having your own hotel website could be another reason why a hotel website is so much important.\n- With the hotel website, the hotel able to upsell potential guests with attractive packages including tickets, tours, and activities.\n- Through a hotel website, the hotel can provide more attractive offers and benefits,\n\n\nThis course is designed for any kind of hotel business it is perfect for all kind of hotel, resort, chalet, holiday Business and much more like :\nHotel\nHostel\nMotel\nMountain and Lake chalet\nLuxury Apartment\nPrivate Accommodation\nBed and Breakfast ( b&b )\nBooking Online Rooms\nReservation Online System\nResort\nVacation Rooms\nRooms Rental\nHoliday Structures\nTravel Apartments\nBeach Houses\nVacation Rentals\nCabins\nCottages\nAlso, you will also be able to add marketing automations to get more sales faster and create your website app without any coding for both android and ios apps\nTime flies and now technology is rapidly evolving. It is something that is incomprehensible if there is a hotel that thinks they can operate without having a hotel website. Surely they can, but with a hotel website, they can do so much more in getting more sales and revenue.\nDownload Premium Hotel WordPress theme - HOTEL BOOKING ( FREE )\nEnroll Now",
      "target_audience": [
        "Wordpress designers who wants to design an hotel website",
        "Hotel, motel or apartment owners / managers who wants to take their business to next level",
        "Hotel affiliates who wants to make money with affiliate business",
        "Anyone who wants to learn how to create website / app without coding",
        "This course is for you if you want to build a wordpress website, whether for personal or business reasons."
      ]
    },
    {
      "title": "Google Chrome Extensions: Guide to Development & Publishing",
      "url": "https://www.udemy.com/course/chrome-extensions-beginners-guide/",
      "bio": "Step-by-step Chrome Extension development guide to building & publishing your first browser Google Chrome Extension",
      "objectives": [
        "Build and test your very own Google Chrome Extension",
        "Publish their own Chrome Extension to the Chrome Store",
        "Learn about the changes between Manifest V2 and V3",
        "Work with Chrome APIs to create more interactive Chrome Extensions"
      ],
      "course_content": {
        "Introduction": [
          "What Will You Learn in this Course?",
          "What Do You Need to get the Most from this Course?",
          "What is a Chrome Extension?",
          "Page Actions",
          "Browser Actions",
          "Summary"
        ],
        "Build and Publish Your First Google Chrome Extension": [
          "Introduction",
          "IMPORTANT UPDATE - Transitioning to manifest V3",
          "Setting up the project and the manifest file",
          "The HTML markup",
          "The CSS styles",
          "The JavaScript functionality",
          "Adding The Icon",
          "Implement your Extension Locally",
          "Publish to the Store",
          "Chrome Extension Quiz",
          "Summary"
        ],
        "Where to go next?": [
          "Making use of Google's API's",
          "Useful Resources"
        ],
        "Conclusion and Thank You": [
          "Thank You.",
          "Bonus Lecture"
        ],
        "Bonus Lectures - Working with Chrome APIs": [
          "Chrome APIs Introduction and Font Size Settings Extension",
          "Browser Data API Extension",
          "Top Sites API Extension"
        ]
      },
      "requirements": [
        "Students should be familiar with the basics of front-end web languages such as HTML, CSS and JavaScript"
      ],
      "description": "Get paid by businesses who require a Chrome Extension. Or build your own Chrome Extension and sell it on the Google Chrome Store.\nLearn to Build, Test and Publish Your Own Google Chrome Extension\nLearn the code\nRecognise what elements need to be included\nLearn how to test your Chrome Extension\nFind out how and where to publish to the Chrome Store\nI designed this course to be easily understood by web developers at any level, including beginners. However, to get the most from this course, I would expect you to have basic knowledge of HTML, CSS and JavaScript. I have not included any complicated terminology so as long as you have the basic understanding of front-end web languages, you will be able to follow along with the development of the Chrome Extension that you will be building.\nIncluded in this course are the images and icons I have used in the lectures but you are free to use your own.\nThis course is about an hour long. The lectures contain everything you need to know in a step-by-step format to build and publish your own Chrome Extension, whilst remaining concise and to the point.\nAt the end of this course, you will be a fully-fledged Google Chrome Extension developer. Not only will you know how to build a Chrome Extension, but how to test, how to implement on your local browser and how to publish to the Chrome Store.\nIn the next hour, you will have the knowledge to make money from your own Extension. Enrol today!",
      "target_audience": [
        "This course is ideal for web developers of any skill level who want to learn to build and publish their own Chrome Extension"
      ]
    },
    {
      "title": "Infrastucture as a Code - with ARM Templates and Powershell",
      "url": "https://www.udemy.com/course/infrastucture-as-a-code-with-arm-templates-and-powershell/",
      "bio": "All you need to know about ARM Templates and Automation with Azure / Powershell",
      "objectives": [
        "Students will be able to deploy infrastructure using json",
        "Understand repeatable deployments using ARM templates and powershell",
        "Learn how to manage and deploy Azure cloud resources using ARM templates",
        "Automate Azure PaaS deployments using Azure ARM templates",
        "Automate Azure IaaS deployments using Azure ARM templates"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Learning Objectives",
          "What is Infrastructure As A Code",
          "Pre-requisiites for Azure Powershell",
          "Powershell Warmup",
          "Creating a PAAS with Powershell - I",
          "Creating a PAAS with Powershell - II",
          "Retrieving information using PS",
          "Building Virtual Networks with PS",
          "Creating Virtual machines with PS - Method -I",
          "Creating Virtual machines with PS - Method -II",
          "CreateVM-Method II .Contd.",
          "Assignment",
          "What is JSON ?",
          "Parameters",
          "Variables",
          "Resources",
          "Outputs",
          "How do you call ARM Templates / JSON ?",
          "Build Basic ARM template - Create VNet and Storage account",
          "Deploy ARM templates with Powershell",
          "Authoring ARM templates with VisualStudio",
          "Deploying Infra using ARM templates with Visual Studio",
          "ARM templates -Microsoft Repository",
          "Visualize ARM templates graphically - ARMVIZ.io",
          "Deploy ARM via GUI - Method I",
          "Deploy ARM via GUI - Method II",
          "Verify Deployment",
          "Conclusion"
        ]
      },
      "requirements": [
        "Azure subscription",
        "Basic understanding of azure and it's service offerings",
        "A device with Powershell installed",
        "Basic knowledge about cloud computing",
        "Understanding of JSON format"
      ],
      "description": "ARM Templates provides a common language for you to describe and  provision all the infrastructure resources in your cloud environment in azure.  Azure resource Manager allows you to use a simple text file to model and  provision, in an automated and secure manner, all the resources needed  for your applications across all regions and accounts.\nThis course is designed to understand and master the techniques of writing ARM templates using JSON,\nThis course emphasizes the usage of all cloud-formation features like.\nResources\nParameters\nMappings\nConditions\nMetaData\nYou will learn to author ARM Templates using JSON and use tools like notepad++ and visual studio to integrate the deployment to azure. Building infrastructure ( storage accounts, Virtual machines, networks ) will now become much easier with ARM templates.\nUnderstand the use case of ARM templates and repeatable deployments with JSON + Powershell",
      "target_audience": [
        "Anyone who wishes to learn ARM templates / JSON",
        "Learn infrastructure as a code ."
      ]
    },
    {
      "title": "Create a Successful Multivendor Website Like Amazon",
      "url": "https://www.udemy.com/course/create-a-buy-and-sell-website-like-amazon-with-joomla/",
      "bio": "Now you too, can create and launch your own marketplace for anyone to buy or sell their products with Joomla. No coding!",
      "objectives": [
        "Create a website like Amazon that allows buying and selling of physical or downloadable products",
        "Integrate Facebook & Twitter into their website for marketing",
        "Create a revenue sharing module for all vendors",
        "Add unlimited number of products to your site",
        "Vendors be able to will create & manage their account, view customers, and create coupons.",
        "Site owner will set the limit on the number of stores each vendor is allowed to open",
        "Create additional pages where vendors can get their questions answered"
      ],
      "course_content": {
        "Section 1: Getting Started With This Course": [
          "Course overview",
          "What you'll learn to create in this course",
          "Who needs to take this course?",
          "Tools you’ll need for this course"
        ],
        "Section 2: Installation and Setup": [
          "Section Introduction",
          "Installing Joomla from the cpanel",
          "Installing Quick2cart component",
          "Installing helix3 framework",
          "Installing K2 component",
          "Installing Jomsocial component",
          "Installing Easysocial component",
          "Installing JSN Page Builder",
          "Creating site menus",
          "Create template for vendors",
          "Practice exercise",
          "Final thoughts on this section",
          "Section 2 Quiz"
        ],
        "Section 3: Backend Setup": [
          "Section Introduction",
          "Dashboard overview and features",
          "Creating Stores",
          "Creating Categories",
          "Adding products",
          "Checking your orders",
          "Viewing sales report",
          "Payout reports",
          "Creating coupons",
          "Selecting countries",
          "Setup Tax rates",
          "Setup tax profiles",
          "Creating Shipping Methods",
          "Create or edit regions",
          "Setup shipping profiles",
          "Creating tax zones",
          "Add/edit length classes",
          "Add/edit weight classes",
          "Practice exercise",
          "Final thoughts on this section",
          "Section 3 Quiz"
        ],
        "Section 4: Frontend Setup": [
          "Section Introduction",
          "Create and manage your store",
          "Add, edit and view your products",
          "Selling downloadable products",
          "The ordering process",
          "Managing customers and orders",
          "Creating coupons",
          "Adding fronted modules",
          "Practice exercise",
          "Final thoughts on this section",
          "Section 4 Quiz"
        ],
        "Section 5: CCK & Social Integration": [
          "Section Introduction",
          "Joomla integration",
          "K2 integration",
          "Jomsocial integration",
          "Easysocial integration",
          "Practice exercise",
          "Final thoughts on this section",
          "Section 5 Quiz"
        ],
        "Section 6: Successful Launch Steps": [
          "Section Overview",
          "Best Joomla Web Hosting Companies",
          "Making Your Site The Best on The Web (part 1)",
          "Making Your Site The Best on The Web (part 2)",
          "Checking For Broken Links",
          "Effective Testing & Retesting Process",
          "Choosing a commission rate",
          "Creating a user forum for support",
          "Practice exercise",
          "Final thoughts on this section",
          "Section 6 Quiz"
        ],
        "Section 7: Conclusion": [
          "Final words and tips"
        ]
      },
      "requirements": [
        "You will need to decide the types of products you want to be sold on your store; the number of store vendors will be able to open, and what percentage of the commission do you want to share."
      ],
      "description": "Amazon is one of the most successful websites in the world; it's also the #6 website most popular website in the world. Amazon generated $29 billion dollars in 2014 with a net profit of $240 million dollars! That's a ton of money. There are several reasons why Amazon is so successful but one of the reason why they're so successful is because they allow anyone to sell or buy products on their website.\nThis course teaches you step by step instructions on how you too, can build your empire just like Jeff Bezos (Amazon founder). You don't have to be a coder and won't be writing any codes in this course. You'll see how simple and easy it is for anyone to launch their own successful multi vendor store that allows anyone to sell their product(s) directly on your website.\nHere are some of the amazing features your store will have:\nMulti Store Support\nA seller/vendor can create more than 1 stores on the site. Admin can control the number of stores a seller/vendor can create by setting a limit on them. For example, the same Vendor can have a Flower Store as well as a Clothing store on your site.\nTax Configuration\nTaxation being one of the most important factors while purchasing a product, special attention has been given to this feature to make it up to the mark. Zones can be created to group the countries and regions with similar taxation rules. Taxation profiles can be created to club multiple taxes charged on a product. Making this a perfect taxation feature.\nShipping Configuration\nWhen it comes to online shopping shipping plays a key role in it. Shipping for both single and multi-vendor modes. Setting up zones is mandatory. Shipping methods can be selected based on the shipping provider. Creating shipping profiles to combine multiple shipping methods making it easier for the store owner keep a track.\nOptional Shipping\nDon’t need Shipping for your products? Just disable it in the backend! As simple as that!\nSupport For Multiple Payment Gateways\n2Checkout\nAlpha User Points\nAuthorizenet\nJomSocial Points\nEasySocial Points\nLinkpoint\nPay By Check\nPay By Purchase Order\nPaypal\nPaypal - Adaptive Payment\nPayu India (Credit Card/Debit Card/Net Banking)\nAutomate Payouts in your Marketplace with Paypal Adaptive Payments Support\nQuick2Cart features Paypal Adaptive payments integration which takes the pain of having to do manual payouts out of the equation. With Adaptive payments, the fees and the vendor payment is instantly split when the buyer makes the payment.\nMultiple Product Attributes\nDefine any number of product attributes with positive/negative price impact. Get greater flexibility in defining products. Eg : Size, Color, Storage Capacity etc.\nStock Management\n- Ability to specify in stock quantities for products and automatically subtract quantities on successful sales.\n- Out of stock shipping support optionally lets you buy a product in an out of stock situation.\nMinimum and Maximum Order Quantity\nThe user can control the quantities per product by optionally setting minimum and maximum order quantities per product.\nIf you've always wanted to build your own multi vendor store, this course teaches you step by step how to do that.",
      "target_audience": [
        "This course is for people who like to sell physical or downloadable products online",
        "It’s also for people who want to create a multi vendor store with revenue sharing",
        "Business owners who are interested in making passive income from home",
        "This course is probably not for the person who is not interested in creating a marketplace for buying or selling products online",
        "It is also not for the person that is not willing to follow the course step by step"
      ]
    },
    {
      "title": "NodeJS For Beginners",
      "url": "https://www.udemy.com/course/nodejs-for-beginners-v/",
      "bio": "Nodejs in Javascript, learn rapidly growing web server technology, Nodejs & understand how NodeJS works with Node course",
      "objectives": [
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Nodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "Node is designed around an event loop, which allows for easy management of asynchronous functions. This makes it a popular environment for modern developers",
        "NodeJs is a server environment built for fast and easily scalable network applications.",
        "NodeJs is open-source, meaning it’s a free code for all developers.",
        "NodeJS is a Javascript library for full stack web development, backend web development",
        "Node is backend side, on the other hand react is front end web development side"
      ],
      "course_content": {
        "Introduction to NodeJS for Beginners, Node.JS, Node": [
          "What will we learn in Node JS?",
          "FAQ about NodeJS for beginners (node, node.js)"
        ],
        "Let’s Start Node JS": [
          "What is Node JS?",
          "Installing Node JS",
          "NodeJS Project Files",
          "NodeJS V8 Engine",
          "Node JS Globals",
          "NodeJS Functions",
          "NodeJS Module and Require",
          "NodeJS Module exports patterns",
          "Node JS Event Emitter",
          "Node JS More about Event Emitters",
          "Node.JS Reading and Writing Files",
          "Node.JS Creating and Removing Directories",
          "Quiz NodeJS, Node, Node.JS, Nodejs for beginners"
        ],
        "NodeJS Server": [
          "NodeJS Clients & Servers",
          "NodeJS Creating Server",
          "Quiz NodeJS, Node.JS, Node"
        ],
        "Node.JS Streams And Buffers": [
          "NodeJS Streams and Buffers",
          "NodeJS Readable Stream",
          "NodeJS Write Stream",
          "NodeJS Pipe",
          "Serving HTML",
          "Serving JSON data",
          "NodeJS Routing",
          "Quiz"
        ],
        "Extra": [
          "NodeJS For Beginners"
        ]
      },
      "requirements": [
        "Ability to install software on your computer",
        "Basic HTML knowledge",
        "Basic understanding of JavaScript",
        "Desire to learn NodeJS, Node, Node JS",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device."
      ],
      "description": "Hello there,\nWelcome to NodeJS For Beginners course.\nNode js in Javascript, learn rapidly growing web server technology, Nodejs & understand how NodeJS works with Node course\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser. Nodejs, node js, node, node.js, nodejs beginner, node js for beginners, node.js for beginners, node js beginner, nodejs for beginners, learn and understand nodejs, node js beginners, node beginner\nBy learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\n\nWhat Node.JS can do?\nNodejs can generate the dynamic page content\nNodejs can create, open, read, write, delete, and close files on the server\nNodejs can collect form data\nNodejs can add, delete, modify data in your database\nThis course is designed to be a comprehensive approach to Node JS. It is really easy to learn Node JS. That is being said, no prior knowledge or experience is required. At the end of this course, you will get the basics of Node JS.\nIn this course, we'll look at how the C++ written V8 Javascript engine works and how NodeJS uses it to expand the abilities of Javascript.\nNode.js is essential to developing real-time applications in JavaScript and has been instrumental in the development of websites like eBay and PayPal. Node is designed around an event loop, which allows for easy management of asynchronous functions. This makes it a popular environment for modern developers working on chat and gaming apps.\nIn this course;\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files. We'll see how that leads to building a web server in Node with hands-on examples.\nWith my Node JS course, you will learn rapidly growing web server technology, and become a Node developer which is among the highest-paid in the industry.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s a free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nWhat is microservices architecture and how can Node.Js be used for it?\nMicroservices architecture is a software development style or method where single-function modules originate. Each has a very well-defined operation and interface and can deploy on its own. In essence, it’s a way of developing modules that you can repurpose from one program or application to another. When you create an application, it’s a collection of modules that have been thoroughly tested and are well-maintained. The modules are typically built around different business-specific capabilities and are then loosely coupled to other modules when deployed as part of a program. You can use Node.Js in microservices architecture as the language of choice for one, some, or all of the microservices (or modules). The beauty of microservices is that you can use the best language for the specific microservice. But where highly scalable, fast programs are needed, Node.Js would be a top contender.\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now NodeJS For Beginners course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in NodeJS",
        "Developers new to NodeJS"
      ]
    },
    {
      "title": "The Complete Django Rest Framework Bootcamp [Latest]",
      "url": "https://www.udemy.com/course/the-complete-django-rest-framework-bootcamp-2024-latest/",
      "bio": "Master Django Rest Framework : A Comprehensive Bootcamp for Building Powerful APIs with Python",
      "objectives": [
        "Building APIs with Django Rest Framework",
        "Various authentication methods: session, token, JWT",
        "Permission classes for access control",
        "Using routers to manage API endpoints",
        "Creating efficient ViewSets"
      ],
      "course_content": {},
      "requirements": [
        "Django",
        "Python"
      ],
      "description": "Welcome to a transformative learning experience that will empower you with essential skills in Python, Django, and API development, ensuring you stay at the cutting edge of technology in 2024 and beyond.\nIn today's rapidly evolving tech landscape, Python has emerged as a dominant force. Its versatility, simplicity, and readability have made it the go-to choice for developers across the globe. Our comprehensive course dives deep into Python, ensuring you not only understand the fundamentals but also master advanced techniques that are crucial in the current and future tech industry.\nDjango, a high-level Python web framework, has revolutionized web development, making it faster and more efficient. In this course, you'll delve into Django and learn how to leverage its power to build dynamic web applications. But that's not all; we take it a step further by exploring Django Rest Framework, which is essential for creating robust APIs. This skill is in high demand as APIs are the backbone of modern applications, enabling seamless communication between various software components.\nWhat sets our course apart is our commitment to staying up-to-date with industry trends. Technology is in a constant state of flux, and we ensure that our content reflects the latest advancements. Whether it's new Python libraries, Django updates, or API development best practices, we've got you covered.\nEffective learning is not just about acquiring knowledge; it's about applying it. That's why we emphasize whiteboarding before coding. This hands-on approach encourages you to visualize and plan your solutions before diving into the code, a crucial skill for any developer.\nBy enrolling in our all-inclusive bootcamp, you're not just learning; you're future-proofing your abilities. The tech world is ever-changing, and being adaptable is key to success. Our course equips you with the skills and knowledge to navigate this dynamic landscape with confidence.\nBecoming a sought-after developer in today's job market requires more than just technical skills. It requires a deep understanding of the tools and technologies driving the industry forward. With our course, you'll not only elevate your programming skills but also master the art of creating effective APIs with Django Rest Framework.\nJoin us on this exciting journey of discovery and growth. Whether you're a beginner taking your first steps into the world of programming or an experienced developer looking to upskill, our course is tailored to meet your needs. Don't miss out on this opportunity to transform your career and thrive in the ever-changing tech world of 2024 and beyond. Enroll now, and let's code a brighter future together!",
      "target_audience": [
        "Beginner Django Developers Curious To Develop REST APIs"
      ]
    },
    {
      "title": "Practical RESTful Web Services with Java EE 8 (JAX-RS 2.1)",
      "url": "https://www.udemy.com/course/java-ee-8-tutorials-restful-web-services-with-jax-rs-21-for-java-devs/",
      "bio": "Your Complete Guide to Developing RESTful Web Services (JAX-RS 2.1) on the Next Generation Java EE Platform",
      "objectives": [
        "How to craft modern, beautiful web services with Java EE",
        "How to Secure web services with Json Web Token (JWT)",
        "How to incorporate dependency injection into your web services",
        "How to use filters to customize requests to your web services",
        "How to make REST requests with the JAX-RS Client API",
        "How to create asynchronous web services with Java EE Asyn APIs",
        "How to validate client requests to your web services with the Bean Validation API",
        "How to return JSON strings to client requests",
        "How to map exceptions using Exception Mappers"
      ],
      "course_content": {},
      "requirements": [
        "A willingness to master how to build modern RESTful web services with the industry gold standard Java EE",
        "A computer with Windows, Mac or Linux installed.",
        "Java 8 intsalled",
        "A basic knowledge of the Java programming language",
        "Apache Maven",
        "Git",
        "Insomnia Rest Client"
      ],
      "description": "Are you a Java developer? Do you aspire to be a Java EE developer? Do you need a modern, next generation, powerful, open platform to develop the next big thing the world has to see? Do you need to build RESTful web services as fast as possible? Do you want to spend time fleshing out your business ideas instead of fighting your framework? If you answered yes to any of the above questions, I have good news for you!\nPractical RESTful Web Services with Java EE 8 (JAX-RS 2.1) is your complete guide to developing modern RESTful web services with the industry gold standard Java EE. This course is designed to equip you with the critical knowledge you need to master the Java EE API for creating RESTful web services.\nYou will learn both the theory and practice of the JAX-RS API and come away with deep understanding of how to craft great web services with Java EE. You will also be trained in using the very detailed Java EE documentation available at your disposal to further deepen your knowledge of Java EE.\nPractical RESTful Web Services with Java EE 8 will teach you\nHow to secure your web services with Json Web Token (JWT)\nHow to incorporate Contexts and Dependency Injection (CDI) into your web services\nHow to create asynchronous web services\nHow to map Java classes to various HTML actions like POST, GET\nHow to validate user input into your web services with Bean Validation API\nHow to use filters to customize client requests\nPractical RESTful Web Services with Java EE 8 (JAX-RS 2.1) is uniquely designed with you the student in mind, aimed at taking you from 0-1 developing RESTful Web Services as fast as possible. The goal is to get you to productivity in the shortest possible time while still sharing valuable good software development principles and practices with you.\n\nSo what are you waiting for? Go on, click the big green button to enroll in this course and be on your way to developing awesome web services in no time with the awesome Java EE platform. Go ahead, enroll by clicking the green button and I will see you in the course.",
      "target_audience": [
        "Anyone who wants to craft modern, beautiful web services with the most productive REST framework out there",
        "Anyone who wants to master the development of modern RESTful web services on the Java EE platform",
        "Anyone who wants to master the Java API for RESTful Web Services (JAX-RS)",
        "Anyone who desires to learn about the latest features in JAX-RS 2.1",
        "Anyone who wants to learn about the next generation Java EE platform",
        "Anyone interested in modern software application development on Java EE"
      ]
    },
    {
      "title": "Python Programming: Build and Deploy Your Own Applications.",
      "url": "https://www.udemy.com/course/python-programming-build-and-deploy-your-own-applications/",
      "bio": "Python Programming: Master the complete application lifecycle: Build, test, and deploy your Python projects.",
      "objectives": [
        "Basic Syntax and Data Types",
        "Variables and operators",
        "Defining Functions",
        "Scope and Global Variables",
        "Using Built-in Modules (e.g., Math, Random, Datetime)",
        "File Modes (Read, Write, Append)"
      ],
      "course_content": {
        "Introduction to Python": [
          "Basic Syntax and Data Types",
          "Variables and Operators",
          "Input and Output Operations"
        ],
        "Control Flow": [
          "Conditional Statements (If, Else, Elif)",
          "Loops (For and While)",
          "Break and Continue Statements"
        ],
        "Functions": [
          "Defining Functions",
          "Function Parameters and Arguments",
          "Return Values",
          "Scope and Global Variables",
          "Recursive Functions"
        ],
        "Data Structures": [
          "Lists",
          "Tuples",
          "Dictionaries",
          "Sets",
          "String Manipulation"
        ],
        "Modules and Packages": [
          "Importing Modules",
          "Creating Your Own Modules",
          "Using Built-in Modules (e.g., Math, Random, Datetime)"
        ],
        "Object Oriented Programming (OOP)": [
          "Classes and Objects",
          "Inheritance",
          "Polymorphism"
        ],
        "File Handling": [
          "Reading and Writing Files",
          "File Modes (Read, Write, Append)",
          "Exception Handling"
        ]
      },
      "requirements": [
        "No Programming Experience Needed."
      ],
      "description": "This course, 'Python Programming: Build and Deploy Your Own Applications,' is designed to bridge the gap between writing Python code and launching fully functional, real-world applications. It's tailored for individuals who want to move beyond basic scripting and gain the practical skills necessary to bring their software ideas to life.\n\n\nI start by solidifying your understanding of Python fundamentals, ensuring you have a strong foundation for building complex applications. You'll delve into application architecture, learning how to structure your projects for scalability and maintainability. This includes understanding modular design, object-oriented principles, and best practices for writing clean, efficient code.\n\n\nTesting and debugging are integral parts of the development process, and I'll cover techniques for writing unit tests and integration tests to ensure your applications are robust and reliable. I'll also explore debugging tools and strategies to help you identify and fix errors quickly.\n\n\nComprehensive Skillset: Learn the entire application lifecycle, from development to deployment. This includes testing and debugging techniques, ensuring your applications are robust and reliable. You’ll gain proficiency in writing unit and integration tests, and learn to debug effectively, saving you time and frustration.\n\n\nPractical, Hands-On Learning: This course emphasizes practical, hands-on learning. You’ll build and deploy real-world projects, solidifying your understanding and building a portfolio. This practical approach ensures you can immediately apply your skills in professional settings.\n\n\nBy the end of this course, you'll have a comprehensive understanding of the entire application lifecycle, from development to deployment. You'll be equipped with the skills and knowledge to build, package, and deploy your own Python applications, empowering you to share your creations with the world. Whether you're a budding entrepreneur, a developer seeking to expand your skillset, or simply passionate about building software, this course will provide you with the practical experience and confidence to bring your Python projects to life.",
      "target_audience": [
        "Who want to learn python programming."
      ]
    },
    {
      "title": "Svelte 4 for Beginners",
      "url": "https://www.udemy.com/course/svelte-for-beginners/",
      "bio": "Learn the basic fundamentals of a JavaScript framework with Svelte",
      "objectives": [
        "Build a simple web application with the Svelte framework",
        "Transfer JavaScript Framework knowledge to any framework (React, Vue, etc)",
        "Create a scaffold project with Svelte, TailwindCSS and DaisyUI",
        "Differentiate between vanilla JavaScript and the Svelte framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Video"
        ],
        "JavaScript Frameworks and Svelte": [
          "What is a JavaScript Framework",
          "Why Use a JavaScript Framework",
          "Svelte"
        ],
        "Setup Your Project": [
          "Project Setup"
        ],
        "Lessons": [
          "Lesson 0: Svelte Component Basics",
          "Lesson 1: Reactivity",
          "Lesson 2: Conditional Rendering",
          "Lesson 3: Class Binding",
          "Lesson 4: Template Looping",
          "Lesson 5: Form Binding",
          "Lesson 6: Components, Props and Refactoring",
          "Lesson 7: Routing",
          "Lesson 8: Component Lifecycle",
          "Lesson 9: State Management",
          "Lesson 1 Assignment: Add a divide reactive assignment",
          "Lesson 2 Assignment: Add a warning message",
          "Lesson 3 Assignment: Add another button with an active class",
          "Lesson 4 Assignment: Add and display a date for each post",
          "Lesson 5 Assignment: Add a date input field",
          "Lesson 6 Assignment: Add a header component with name and about props",
          "Lesson 7 Assignment: Add an about page with a nav link",
          "Lesson 8 Assignment: Add a waving hand emoji on a show hide timer",
          "Lesson 9 Assignment: Add a user to the store"
        ],
        "Extras": [
          "Debugging"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript is recommended but not required."
      ],
      "description": "Svelte makes learning JavaScript Frameworks fun.\nIf you know how to code in JavaScript you can already write a simple Svelte app. Take those skills and level up into the most loved tool for developers.\nWhat will you learn?\nHow to build a simple web application using Svelte\nWhat is a JavaScript framework\nWhy use a JavaScript framework\nJavaScript framework fundamentals like conditional rendering, template looping, state management, routing, etc.\nHow to prototype quickly with TailwindCSS and DaisyUI\nThe confidence and knowledge to use Svelte as well as learn any other JavaScript framework\nSvelte is the latest and greatest front-end tool for web developers. If you want to stay ahead of the curve and be ready for where the industry is going, learn Svelte now!\nWho is this course for?\nAnyone looking to learn how to make reactive websites\nBeginners that want to take the next step after learning HTML, CSS, and JavaScript basics\nAnyone that wants to stay on top of the latest and greatest tools\nThe course is broken up into 9 lessons and 9 assignments. Each assignment is meant to reinforce the knowledge you will learn during the lesson. It's highly recommended to code alone with the lessons and then complete each assignment before moving on to the next one.\nAll the code will be available in a GitHub repo which you will be in the description of the setup video.",
      "target_audience": [
        "Beginner web developers looking to make the jump into their first frontend JavaScript framework"
      ]
    },
    {
      "title": "Drupal 7 Intermediate",
      "url": "https://www.udemy.com/course/drupal-7-intermediate/",
      "bio": "Take your Drupal knowledge to the next level. Learn all about content types, Views and Panels.",
      "objectives": [],
      "course_content": {
        "Warm Up": [
          "Warm Up Tasks",
          "Update Site Configuration"
        ],
        "Create": [
          "Introduction to the Project",
          "Adding the Poster",
          "Adding the Parental Rating",
          "Adding the Movie Length",
          "Adding the Movie Genre",
          "Adding the Release Date",
          "Adding the Short Summary",
          "Adding the Five-Star Rating",
          "Adding the Watchlist",
          "Adding the Trailer",
          "Adding the Key People",
          "Managing the Display"
        ],
        "Extend": [
          "Introduction to Views",
          "Populating our Site with the Devel Module",
          "Create a Block View",
          "Create a Page View",
          "Create the IMDB Page View",
          "Modify the IMDB Page View",
          "Create the Actors Block View",
          "Session Notes: Actors Block View"
        ],
        "Design": [
          "Introduction to Panels",
          "Creating a New Homepage",
          "Redesigning an Existing Page or Node"
        ],
        "Practice": [
          "Introduction to the Practice Assignment - WhiteHouse.gov",
          "Set Up a New Site",
          "Planning",
          "Content Types",
          "Fields",
          "Add Content using Devel",
          "Views: Photo of the Day",
          "Views: Featured Legislation",
          "Views: The Blog",
          "Views: Featured Topics",
          "Views: Slideshow of Headlines",
          "Design: Theme, Views and Blocks",
          "Panels: Create Homepage"
        ]
      },
      "requirements": [],
      "description": "This class follows immediately on from the beginner class and takes your Drupal skills to a higher level.  You'll learn how to master fields, Views and Panels to create sophisticated Drupal sites.\nThe course includes a course project, where we replicate the most famous Drupal site in the world, WhiteHouse.gov\nThis is the same material that we have used to teach businesses, universities, and government organizations, such as MIT, Stanford, NY Transit Authority, and Houston Public Library.\nWe hope you enjoy the course!",
      "target_audience": []
    },
    {
      "title": "NodeJs React Rest Summer Special 2020",
      "url": "https://www.udemy.com/course/nodejs-react-rest-summer-special-2020/",
      "bio": "NodeJs React Madness!",
      "objectives": [
        "NodeJs Rest Api & React"
      ],
      "course_content": {
        "Introduction": [
          "What were building",
          "Project One Resource",
          "Project Two Resource"
        ],
        "Projecton One": [
          "Setting up our system Part I",
          "Setting up our system Part II",
          "Setting up our system Part III",
          "Setting up our system Part IV",
          "Setting up our system Part V",
          "Setting up our system Part VI",
          "Setting up our system Part VII",
          "Frontend App 008",
          "Frontend App 009",
          "Frontend App 010",
          "Frontend App 011",
          "Frontend App 012",
          "Frontend App 013",
          "Frontend App 014",
          "Frontend App 015",
          "Frontend App 016",
          "Frontend App 017",
          "Frontend App 018",
          "Frontend App 019",
          "Frontend App 020",
          "Frontend App 021",
          "Frontend App 022",
          "Frontend App 023",
          "Frontend App 024",
          "Frontend App 025",
          "Frontend App 026",
          "Frontend App 027",
          "Frontend App 028",
          "Frontend App 029",
          "Mongo Setup 030",
          "Backend 031",
          "Backend 032",
          "Backend 033",
          "Backend 034",
          "Backend 035",
          "Backend 036",
          "Backend 037",
          "Full Throttle 038",
          "Full Throttle 039",
          "Full Throttle 040",
          "Full Throttle 041",
          "Full Throttle 042",
          "Full Throttle 043",
          "Full Throttle 044",
          "Full Throttle 045",
          "Full Throttle 046",
          "Full Throttle 047",
          "Full Throttle 048",
          "Full Throttle 049",
          "Full Throttle 050",
          "Full Throttle 051",
          "Full Throttle 052",
          "Full Throttle 053",
          "Full Throttle 054",
          "Full Throttle 055",
          "Full Throttle 056",
          "Full Throttle 057",
          "Full Throttle 058",
          "Full Throttle 059",
          "Full Throttle 060",
          "Full Throttle 061",
          "Full Throttle 062",
          "Full Throttle 063",
          "Full Throttle 064",
          "Full Throttle 065",
          "Full Throttle 066",
          "Full Throttle 067",
          "Full Throttle 068",
          "Full Throttle 069",
          "Full Throttle 070",
          "Full Throttle 071",
          "Full Throttle 072",
          "Full Throttle 073",
          "Full Throttle 074",
          "Full Throttle 075",
          "Full Throttle 076",
          "Full Throttle 077",
          "Full Throttle 078",
          "Full Throttle 079",
          "Full Throttle 080",
          "Full Throttle 081",
          "Full Throttle 082",
          "Full Throttle 083",
          "Full Throttle 084"
        ],
        "Project Two": [
          "Setting Up Our System Part I",
          "Setting Up Our System Part II",
          "Setting Up Our System Part III",
          "Setting Up Our System Part IV",
          "Setting Up Our System Part V",
          "Frontend 006",
          "Frontend 007",
          "Frontend 008",
          "Frontend 009",
          "Frontend 010",
          "Frontend 011",
          "Frontend 012",
          "Frontend 013",
          "Frontend 014",
          "Frontend 015",
          "Frontend 016",
          "Frontend 017",
          "Frontend 018",
          "Backend 019",
          "Backend 020",
          "Backend 021",
          "Backend 022",
          "Full Throttle 023",
          "Full Throttle 024",
          "Full Throttle 025",
          "Full Throttle 026",
          "Full Throttle 027",
          "Full Throttle 028",
          "Full Throttle 029",
          "Full Throttle 030",
          "Full Throttle 031",
          "Full Throttle 032",
          "Full Throttle 033",
          "Full Throttle 034",
          "Full Throttle 035",
          "Full Throttle 036",
          "Full Throttle 037",
          "Full Throttle 038",
          "Full Throttle 039",
          "Full Throttle 040",
          "Full Throttle 041",
          "Full Throttle 042",
          "Full Throttle 043",
          "Full Throttle 044",
          "Full Throttle 045",
          "Full Throttle 046",
          "Full Throttle 047",
          "Full Throttle 048",
          "Full Throttle 049",
          "Full Throttle 050",
          "Full Throttle 051",
          "Full Throttle 052",
          "Full Throttle 053",
          "Full Throttle 054",
          "Full Throttle 055",
          "Full Throttle 056",
          "Full Throttle 057",
          "Full Throttle 058",
          "Full Throttle 059",
          "Full Throttle 060",
          "Full Throttle 061",
          "Full Throttle 062",
          "Full Throttle 063",
          "Full Throttle 064",
          "Full Throttle 065",
          "Full Throttle 066",
          "Full Throttle 067",
          "Full Throttle 068",
          "Full Throttle 069",
          "Full Throttle 070",
          "Full Throttle 071",
          "Full Throttle 072",
          "Full Throttle 073",
          "Full Throttle 074",
          "Full Throttle 075",
          "Full Throttle 076",
          "Full Throttle 077",
          "Full Throttle 078",
          "Full Throttle 079"
        ],
        "Adding Google Social Login": [
          "Add On.",
          "Google OAuth Login 001",
          "Google OAuth Login 002",
          "Google OAuth Login 003",
          "Google OAuth Login 004",
          "Google OAuth Login 005",
          "Google OAuth Login 006",
          "Google OAuth Login 007",
          "Google OAuth Login 008",
          "Google OAuth Login 009",
          "Google OAuth Login 010",
          "Google OAuth Login 011",
          "Google OAuth Login 012",
          "Google OAuth Login 013",
          "Google OAuth Login 014",
          "Google OAuth Login 015",
          "Google OAuth Login 016",
          "Google OAuth Login 017",
          "Google OAuth Login 018",
          "Google OAuth Login 019",
          "Google OAuth Login 020",
          "Google OAuth Login 021",
          "Google OAuth Login 022",
          "Google OAuth Login 023",
          "Google OAuth Login 024",
          "Google OAuth Login 025",
          "Resource Link"
        ]
      },
      "requirements": [
        "Healthy Development Environment"
      ],
      "description": "This is a two in one course. The first part has a Sci-Fi like design to get us involved with Mongo. We will build a login panel and a registration panel and a section to list blogs. Includes is a paging mechanism and like - unlike feature for blogs. The Second part is an administration panel for building and testing rest API's in NodeJs.",
      "target_audience": [
        "People who love to code."
      ]
    },
    {
      "title": "The Complete Guide to the Best 200 WordPress Plugins",
      "url": "https://www.udemy.com/course/wordpress-plugins-a-guide-on-the-best-plugins-part-1/",
      "bio": "Learn how to use a wide variety of amazing plugins to improve the design and functionality of your WordPress website.",
      "objectives": [
        "Install and configure over 100 different WordPress plugins",
        "Learn how to choose the right kind of plugins"
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome & How it All Works",
          "The Different Types of Plugins",
          "Connect with Me",
          "IMPORTANT NOTES - DO NOT SKIP!!!"
        ],
        "Content & Design": [
          "Introduction to the Section",
          "Plugin List Directory",
          "Better Font Awesome",
          "Black Studio TinyMCE Widget Plugin",
          "Shortcodes Ultimate Plugin",
          "WP Shortcode by MyThemeShop",
          "WP SVG Icons",
          "Simple Tooltips",
          "Business Hours Indicator",
          "Opening Hours",
          "CM Tooltip Glossary",
          "PayPal Donations",
          "WP Review",
          "WP Google Maps",
          "Uji Countdown",
          "Content Views Plugin",
          "Table Press",
          "Intuitive Custom Post Order",
          "Duplicate Posts",
          "Drop Shadow Boxes",
          "WP Notification Bars",
          "PDF & Print by BestWebSoft",
          "Document Gallery",
          "Compact WP Audio Player",
          "WP Author Box Lite",
          "WP User Avatar",
          "Team Members",
          "Events Calendar",
          "Event Tickets",
          "Event List",
          "Easy Testimonials Plugin",
          "Testimonials Widget"
        ],
        "Page Builders and Structure": [
          "Introduction to the Section",
          "Plugin List Directory",
          "WP Featured Content & Slider",
          "WP Tab Widget",
          "Accordions",
          "Responsive Accordion & Collapse",
          "Launcher",
          "Forty Four - 404 Plugin for WordPress",
          "Site Origin Page Builder",
          "Beaver Page Builder",
          "Visual Composer"
        ],
        "Sidebars & Widgets": [
          "Introduction to the Section",
          "Plugin List Directory",
          "Display Widgets",
          "Widget CSS Classes",
          "Widget Options",
          "Widget Shortcode",
          "Flexible Posts Widget",
          "Simple Image Widget",
          "Recent Posts Widget Extended",
          "Advanced Random Posts",
          "Easy Profile Widget",
          "YouTube Widget Responsive",
          "Google Maps Widget"
        ],
        "Forms": [
          "Introduction to the Section",
          "Plugin List Directory",
          "Contact Form 7",
          "Ninja Forms",
          "Formidable Forms",
          "Gravity Forms",
          "Optin Forms",
          "Email Subscribers & Newsletters",
          "Rain Maker",
          "WordPress PopUp - Popover Maker",
          "Yeloni Exit Popup"
        ],
        "Images & Sliders": [
          "Introduction to the Section",
          "Plugin List Directory",
          "Meta Slider",
          "Logo Carousel",
          "Client Logo Carousel",
          "Simple Lightbox",
          "Lightbox - Gallery Lightbox",
          "Responsive Lightbox by dFactory",
          "Easy FancyBox",
          "Foo Gallery",
          "Envira Gallery",
          "YourChannel - YouTube Video Gallery",
          "Cyclone Slider 2",
          "Meteor Slides",
          "Easing Slider",
          "Fluid Responsive Slideshow"
        ],
        "Menus": [
          "Introduction to the Section",
          "Plugin List Directory",
          "Nav Menu Roles",
          "Menu Image",
          "Menu Icons",
          "Easy Sidebar Menu Widget",
          "WP Sticky Menu",
          "WR Mega Menu",
          "Max Mega Menu",
          "WP Jump Menu",
          "Responsive Menu"
        ],
        "Social Media": [
          "Introduction to the Section",
          "Plugin List Directory",
          "Social Icons Widget",
          "Social Media Widget by Acurax",
          "Simple Share Buttons Adder",
          "Ultimate Social Media Share",
          "Social Media Feather",
          "Social Sharing (By Danny)",
          "Share Buttons by AddThis",
          "Shareaholic"
        ],
        "Comments": [
          "Introduction to the Section",
          "Plugin List Directory",
          "Basic Comment Quicktags",
          "Simple Comment Editing",
          "Featured Comments",
          "Wp Discuz",
          "WP Live Chat Support",
          "Tidio Live Chat"
        ],
        "Assignment": [
          "Assignment"
        ]
      },
      "requirements": [
        "Basics of WordPress",
        "Experience working with plugins"
      ],
      "description": "As WordPress users, we all know the incredible power and difference that good plugins can offer our websites. This is why in this course, you will learn how to install and configure over 200 plugins that will boost the functionality and design of any WordPress website.\nWith nearly 50,000 plugins available to download today, it can be quite a daunting task finding the right plugin for the right job. This course removes that headache and saves you time because I have spent months researching and finding the best plugins for you to use.\nMost of the plugins covered in this course are FREE and are well maintained by their developers. They are all updated for the year 2017 and will work with the latest versions of WordPress.\nThe course is divided into 12 main sections.\nCONTENT\nThe first section covers plugins that are primarily used for creating and editing content as well as plugins that can be used to improve the design of any WordPress website.\nSTRUCTURE\nSection 2 covers plugins that are used for building page structures. You will learn how to use 3 of the best page builder plugins on WordPress and in addition you will learn how to design your own custom 404 page and how to add accordions to your pages.\nSIDEBARS & WIDGETS\nSection 3 will cover plugins that are predominantly featured in your sidebar. You will learn how to configure and customize the content shown in your sidebars by making use of some extremely powerful plugins.\nFORMS\nIn section 4, you will learn how to use different types of plugins for building and publishing contact forms on your WordPress website. You will learn how to use Contact Form 7, Ninja forms, Gravity forms and Formidable forms.\nSLIDERS & GALLERIES\nThe next section will introduce you to plugins that you can use to design and publish sliders and galleries. You will learn about the Soliloquy slider which is reputed to be the fastest slider for WordPress. You will learn how to create galleries featuring your images and videos.\nMENUS\nYou will then move on to learn how to use plugins that you can use to build beautiful mega menus. You will learn how to use plugins like the Max Mega Menu and the WR Mega Menu plugins. You will also learn how to use lightweight menu plugins that can enhance your menu such as the WP Sticky menu.\nSOCIAL MEDIA\nNo WordPress website is complete without social media functionality which is why in section 7 you will learn how to use a wide range of social media plugins that will allow your audience to not only follow you on social media but will also give them the ability to share your best content on their own social media platforms.\nCOMMENTS & CHAT\nThe last section will focus on plugins you can use to improve the default WordPress comment system. You will also learn how to use chat plugins as well which can be vital for business websites.\nSECURITY\nSecurity has never been more important in the world we live in today with hackers and cyber criminals constantly attacking WordPress websites. In this dedicated section to WordPress security you will learn how to use some of the best plugins to secure and protect your site against hackers and malware.\nSPEED & MAINTENANCE\nIts one thing to have a well designed website with good functionality and its quite another to have a site that is performing at peak performance. You will learn how to use several plugins to help you improve the speed of your site. You will also be exposed to several plugins for cleaning up and maintaining your database as well.\nSEO & STATISTICS\nThe following section covers plugins for SEO and statistics. SEO is a crucial for the success of any website and you will learn how to use some awesome plugins to help get your website on the first page of major search engines. You will also learn how to use some plugins to better analyze your traffic and study your major sources of traffic.\nBONUS SECTION - WOOCOMMERCE\nin this bonus section, you will learn how to install and configure over 30 plugins that will boost the functionality and design of your WooCommerce store.\nProducts are the lifeblood of any WooCommerce store and you will learn how to work with some plugins that will not only improve how your products are displayed but also help you manage them.\nWe will also cover plugins for prices and checkout customization where you will learn how to improve the default WooCommerce checkout page and how to offer different types of pricing models to your customers.\nYou will also learn how to configure plugins that will enable you to offer PDF invoices to your customers and charge different types of shipping prices depending on what products are purchased and the location of the customer.\nWe will then finally cover plugins that will improve the overall design and functionality of your WooCommerce store making it a more attractive and exciting place for customers to visit and shop.\nBy the end of this course, you will have been exposed to nearly 200 plugins that will greatly improve your ability to make your WordPress website more attractive and functional for your customers.\nMost of the plugins covered in this course are FREE and are well maintained by their developers. They are all updated for the year 2018 and will work with the latest versions of WordPress.",
      "target_audience": [
        "WordPress Users",
        "Students who want to learn how to use a wide variety of plugins"
      ]
    },
    {
      "title": "Css For Beginners",
      "url": "https://www.udemy.com/course/css-made-simple-for-beginners-learn-to-style-a-website-page/",
      "bio": "This course is a practical hands-on course that will teach from how to write CSS syntax to applying Styles to HTML",
      "objectives": [
        "Learn How to apply styling to divs",
        "Learn how to write CSS Syntax",
        "Learn how to apply Internal stylesheet to an HTML Document",
        "Learn how to apply External stylesheet to an HTML Document",
        "Learn how to make rounded corners on a square",
        "Learn how to change the background color of a webpage",
        "Learn how to position images on a webpage",
        "Learn how to style HTML elements by their id and Class"
      ],
      "course_content": {
        "Cascading Style Sheets": [
          "Introduction",
          "Installing Notepad++ Text Editor (Only Available For Windows PC)",
          "Installing Visual Studio Code",
          "CSS Rule",
          "Applying CSS Inline",
          "Internal CSS Styling",
          "External CSS Styling",
          "Using CSS Comments In Your Code",
          "CSS Color Property",
          "Setting and Changing Background-color",
          "Styling With The Id Selector",
          "Styling With The Class Selector",
          "Group Selectors",
          "Changing Font Type With the Font-Family Property",
          "How to use CSS Margin Property",
          "Changing The Text Size Using Font-Size Property",
          "Applying CSS Padding to an HTML Element",
          "Setting and Changing Text Alignment",
          "How to set the font thickness using Font-weight Property",
          "Using and Removing Text Decoration",
          "Using Css Line Height Property to Give Your Paragraphs some space",
          "List-Style Property",
          "CSS Border Property",
          "Learn to Make A Square Have Rounded Corners",
          "Controlling the layout of Elements Using CSS Float and Clear Property",
          "The Css Overflow Property",
          "CSS Display Property",
          "Styling Links",
          "Mini Project Exercise: Styling a Website Yourself",
          "CSS",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic Knowlegede of HTML",
        "A good modern web browser",
        "Good text editor"
      ],
      "description": "This course is video based and is structured in a way that will make it easy for a beginner to follow step by step. This is a hands on course and you will learn by styling various HTML elements.\nThe course will teach you all the things below:\nHow to CSS Syntax\nHow to apply background colour to a webpage\nHow to change the size of a text\nHow to apply margins to HTML elements\nHow to apply external style sheets to HTML elements\nHow to embed CSS into HTML Document\nThe benefits of taking this course includes:\nGaining skills to know how to apply styling to a webpage.\nConfidence to be creative and customize website yourself\nHave the ability to understand and possibly fix css issues on a website\nYou will gain skills to change the look of a website as required.The skills will give you the flexibility to work from home or anywhere in the world as a web designer and developer.",
      "target_audience": [
        "Anyone who has some basic understanding of HTML"
      ]
    },
    {
      "title": "How to build Wordpress Website With Astra & Elementor",
      "url": "https://www.udemy.com/course/wordpress-astra-elementor/",
      "bio": "Learn how to create a business website with WordPress using Elementor + Astra Theme, no coding needed.",
      "objectives": [
        "Install and configure WordPress on a hosting account",
        "Build your own beautiful website using WordPress.",
        "Install and configure WordPress on a Local Environment",
        "An understanding of the main content types of WordPress and their differences",
        "The ability to configure WordPress to your preferences",
        "An understanding of how to tweak your theme settings and alter the look of your site",
        "An understanding of how to make your site more secure",
        "The ability to install new themes and plugins in to your WordPress site"
      ],
      "course_content": {
        "Introduction Course": [
          "Instructor Introduction",
          "What You Need for this Course",
          "What You'll Learn in this Course",
          "Download all the images from here"
        ],
        "Introduction to WordPress": [
          "What is WordPress? A little history",
          "GoDaddy Hosting Account",
          "Flywheel Hosting Account",
          "Install WordPress Manually"
        ],
        "Introduction To the Dashboard": [
          "Backend Login",
          "Posts",
          "Pages",
          "Media",
          "Comments",
          "Menus",
          "Widgets",
          "Users",
          "Plugins",
          "Themes",
          "Customizer",
          "General",
          "Permalinks"
        ],
        "Anatomy of a website": [
          "Headers",
          "Footers",
          "Sidebars"
        ],
        "Introduction To Elementor": [
          "Elementor"
        ],
        "Introduction to Astra Theme": [
          "Astra Theme"
        ],
        "Building The Business Website from Scratch": [
          "Come up with Design Concept",
          "Choose Colours",
          "Choose Fonts",
          "Design Logo with Photoshop",
          "Design Logo with Canvas",
          "Basic Administrator Tasks for Wordpress",
          "Install Elementor and Astra Theme",
          "Build Homepage: Logo",
          "Build Homepage: Pages and Menu",
          "Build Homepage: Edit the Hero Image Text",
          "Build Homepage: Middle Section Part 1",
          "Build Homepage: Middle Section Part 2",
          "Build Homepage: Middle Section Part 3",
          "Build Homepage: Footer",
          "Build Homepage: Mobile Ready",
          "Build About Us Page",
          "Build Services Page",
          "Build Blog Page",
          "Build Contact Us Page"
        ],
        "Essential WordPress Plugins": [
          "Security",
          "Search Engine Optimization (SEO)",
          "Backup and Cloning",
          "Restoring Your Website",
          "Wordpress Caching",
          "Google Analytics"
        ],
        "Managing Updates, and Security": [
          "Wordpress Updates",
          "Custome Backend Login Page"
        ],
        "Conclusion": [
          "Next Steps"
        ]
      },
      "requirements": [
        "A working Laptop/computer, either Windows or Mac.",
        "A browser: Chrome/Firefox/Safari",
        "Internet Access",
        "This Course starts from basics hence no EXPERIENCE Required"
      ],
      "description": "All the tools we are using on this course are all 100% free.\nEveryone knows about the importance of creating a responsive website that looks smashing on desktop, tablet and mobile devices.\nIn this course, we go through step by step how to create a stunning WordPress website with the FREE Elementor and Astra theme.\nWe then go on to explain how to customize the website we created to fit all devices, using Elementor's visual mobile editing tools.",
      "target_audience": [
        "Anyone who is interested to learn how to build website",
        "Anyone who want to learn how to use Wordpress"
      ]
    },
    {
      "title": "React and Redux - Building a Production E-Commerce",
      "url": "https://www.udemy.com/course/building-a-production-e-commerce-with-react-redux/",
      "bio": "Learn React.js, Redux, React Router, Ramda, while creating real project of ecommerce shop",
      "objectives": [
        "Build real project with React and Redux",
        "Write high quality code",
        "Create reusable selectors and components"
      ],
      "course_content": {
        "Project configuration": [
          "What is this section about?",
          "Setup boilerplate",
          "Configuring project"
        ],
        "Implementing phones page": [
          "What is this section about?",
          "Loading data for products page",
          "Preparing data for products page",
          "Rendering page with products"
        ],
        "Pagination": [
          "Implementing pagination"
        ],
        "Implementing single product page": [
          "Preparing data for product page",
          "Rendering single product page"
        ],
        "Basket widget": [
          "Implementing basket widget for all pages"
        ],
        "Search": [
          "Implementing products search"
        ],
        "Categories": [
          "Preparing data for categories",
          "Rendering categories and filtering products"
        ],
        "Basket page": [
          "Preparing data for basket page",
          "Adding actions to the basket"
        ],
        "Real API": [
          "Fetching data from real API"
        ],
        "Homework": [
          "Homework",
          "My Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)",
        "Some knowledge about React and Redux"
      ],
      "description": "In this course we will build a production E-Commerce shop of mobile phones using React and Redux. This course is fully focused on fast and deep dive into creation of frontend part of real application with React and Redux without spending time on building css or implementing backend. We will start from scratch and step by step you will get close to finished real application. You will deeply understand how to structure your application, build reusable and understandable React component split code into smaller chunks of code. We will write code together in more functional way to make it pure and avoid data complexity.\nFor each lesson you'll get source code is two states: before and after completing the lesson, so it's easy to see the progress and get a working app on any lesson you want just by downloading source code of the lesson.\nWhat you will learn in this course:\nStructure and configure project\nWrite high quality code with React and Redux on real project\nCreate reusable selectors and components\nDecouple API layer from actions\nUse Ramda library for comfortable data transformations\nGetting data from API\nIf you are feeling like you learned React and Redux but you still can't use it effectively or build your own real application this course is what you need. This course is fully focused on creating the application without getting deep into basic knowledge of React and Redux!",
      "target_audience": [
        "This course is for you if you want to develop real project from beginning to the end",
        "This course is for everyone who is interested in functional programming in javascript",
        "This course is for you if you want to improve you knowledge of React and Redux"
      ]
    },
    {
      "title": "Introduction To Data Analytics Using Microsoft Power BI",
      "url": "https://www.udemy.com/course/data-analytics-powerbi/",
      "bio": "Learn how to perform Big Data Analytics using Microsoft Power BI- Microsoft Business Intelligence",
      "objectives": [
        "Understand how to use Power BI Online and Power BI Desktop",
        "Perform Big Data Analytics using Real World Scenario",
        "Transform Big Data and customize",
        "Create Powerful Visualization based on Big Data",
        "Sharing Dashboard with other users by emailing them directly or creating a URL link",
        "Ask questions from Big Data in plain English language",
        "Download Power BI Desktop",
        "Create an online account for Power BI Online"
      ],
      "course_content": {
        "Introduction and Course Agenda": [
          "Introduction and Course Agenda"
        ],
        "Getting Started With Power BI Data Analytics": [
          "Creating a Microsoft Power BI Online Account",
          "Practice Task #1: Create a Power BI Online account",
          "Downloading Power BI Desktop",
          "Practice Task #2: Download Power BI Desktop",
          "Importing Data Power BI Online",
          "Power BI Desktop Vs Power BI Online: Understanding Differences"
        ],
        "Working With Big Data": [
          "How To Transform Data",
          "Creating Visualization",
          "Big Data Import & Transformation",
          "Practice Task #3: Import Big Data",
          "Publishing Big Data To BI Online",
          "Using Quick Insights",
          "Q&A Search - Asking Questions From Big Data",
          "Sharing Dashboard"
        ],
        "Conclusion": [
          "Course Conclusion",
          "Power BI Documentation"
        ]
      },
      "requirements": [
        "You need a stable and high speed internet connection",
        "Knowledge of Microsoft Excel (any version 2010, 2013, or 2016) is helpful",
        "Students are encouraged to take the Intro to Excel course first"
      ],
      "description": "[Course Updated] Added new documentation for Power BI\nMicrosoft Business Intelligence or Power BI is a suite of business analytics tools to analyze data and share insights. Monitor your business and get answers quickly with rich dashboards available on every device. Data Analytics field is growing exponentially.\nCourse Description\nLearn Introduction to Data Analytics Using Power BI Online and Power BI Desktop\nPower BI ( Microsoft Business Intelligence) offers basic data wrangling capabilities similar to Excel's Power Query. It also lets you create interactive visualizations, reports and dashboards with a few clicks or drag-and-drops; type natural-language questions about your data on a dashboard; and handle files that are too large for Excel.\nPower BI transforms your company's data into rich visuals for you to collect and organize so you can focus on what matters to you. Stay in the know, spot trends as they happen, and push your business further.\nIt can work with dozens of data types not only Excel, Access and CSV files, but also Salesforce, Google Analytics, MailChimp, GitHub, QuickBooks Online and dozens of others. And, it will run R scripts meaning that any data you can pull in and massage via R you can import into Power BI\nLet me help you bring your Big Data to life using Real World Data. We will use New York City Public Data Set as well as existing samples in Power BI\nSo, if you are looking for new ways to seek insights and create powerful visualization on the fly, Power BI is the answer. You can transform your company's data into rich stunning easy to use visuals for you to collect and organize, so you can spot trends, collaborate in new ways, and make sense of your data.\nIncrease your skills This course contains the following lessons:\nLearn Data Analytics & Microsoft Business Intelligence concepts and application\nIntroduction  to Power BI Online, Power BI Desktop, and the Interface\nBe able to Import data using both Power BI Online and Power BI Desktop\nLearn the difference between Power BI Online Vs Power BI Desktop\nMaster the skill of transforming Big Data – Real World Data Set (New York City Public data set)\nCreate stunning visualization\nUsing Quick Insights & Analytics\nAsking Questions from your Big Data using plain English language and much more\nI welcome to our community of learners, and will see you in class\nSyed and\nTeam ClayDesk",
      "target_audience": [
        "This course is designed for beginners and small business owners",
        "Intermediate and advanced users can gain additional tips and techniques from this course",
        "If you have never worked with Microsoft Excel before, you may find this course very challenging"
      ]
    },
    {
      "title": "Django for Beginners",
      "url": "https://www.udemy.com/course/django-for-beginners-x/",
      "bio": "Learn to build web applications using Django - 4 framework",
      "objectives": [
        "Django 3",
        "Installation of python",
        "Setup project for Django",
        "Create custom App in Django",
        "Learn Application Development Process",
        "What are Models in Django and Creating Models in Django",
        "Create Views and Manage Views in Django",
        "Migrations in Django",
        "Work with URL's and Path's in Django",
        "Work with Templates in Django",
        "Output data to HTML templates",
        "Assign styles in Django"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Django and it's advantages",
          "Prerequisites",
          "Environmental Setup for Python & Django",
          "Everything you need to know about Virtual Environment in Django"
        ],
        "Building the student Details Application": [
          "Creating a Students App and adding the necessary files",
          "Key Components of Django and Django Architecture",
          "What are Models and How to work with them (Theory)",
          "Models and Migrations (Coding)",
          "What is Admin Module in Django and Basic CRUD in Admin Module",
          "Understanding Views and URLS in Django"
        ],
        "Building the application code & Conclusion": [
          "Building the Student Details Application, Styling and Rendering",
          "Uploading code to GitHub"
        ]
      },
      "requirements": [
        "Previous Knowledge in Python is expected",
        "Previous knowledge in HTML, CSS will come in handy"
      ],
      "description": "This is an introductory course, where you will learn about how to develop web applications using Django. you will be gaining a basic level understanding about Django after completing this course. you will be able to develop web applications after completing this course.\n\n\nThis Course Covers various topics that are listed below:\n\n\nIntroduction to Django & It's Advantages\nEnvironmental Setup for Python & Django\nEverything you need to know about Virtual Environment in Django\nCreating a Students App and  adding the necessary files\nComponents of Django and its Architecture\nWhat are Models and How to work with them (Theory)\nModels and Migrations (Coding)\nLearning to create views in Django\nWhat is Admin Module in Django and Basic CRUD in Admin Module\nUnderstanding Views and URLS in Django\nCreate styles using CSS\nAnd by the end of this course, You will be able to build a student detail application that helps to view data of different students present in the database.\n\n\nOn the path to becoming a software developer,  the best way to grow your programming skills is to actually write code.\nMany new programmers use coding challenge problems to get that practice, and that's a great starting point, but those challenge problems are well framed with clearly defined goals. Programming in the real world is way more open-ended.\nAs a developer, you'll likely be involved in framing and defining what a program needs to do, not just writing code. Developing personal projects is a great way to build that muscle, but it can be a bit overwhelming for new programmers.\nI am surya teja koka, I have been working with Python and Django for the past 2 years. I love helping new developers take the next step in their programming journey. If you're excited to get started creating your own Python projects using Django,\nThis is the place to begin your journey, join me in this course.",
      "target_audience": [
        "Anyone with knowledge in python3",
        "Anyone interested in Web Development",
        "Anyone looking to build a career as a python Developer",
        "Anyone who wants to learn latest Django",
        "Anyone interested to build web applications with Django",
        "Anyone who wants to become a full stack web developer",
        "Anyone who is interested to improve their skillset"
      ]
    },
    {
      "title": "Programming with JavaScript",
      "url": "https://www.udemy.com/course/programming-with-javascript/",
      "bio": "JavaScript is a powerful and versatile scripting language used in web applications, games, asynchronous coding, and more",
      "objectives": [
        "Define what JavaScript is and how to install the necessary software including Brackets",
        "Understand the fundamentals of the JavaScript language",
        "Work with control statements including loops and conditional logic",
        "Break out code into reusable functions",
        "Work with strings, numbers, dates, and times",
        "Use data structures such as arrays",
        "Learn about the DOM, DOM Scripting, and the JavaScript event model",
        "Validate data input within HTML forms using regular expressions",
        "Understand the fundamentals of object-oriented programming and how it applies to JavaScript",
        "Work with XML and JSON data using the XmlHttpRequest object",
        "Handle errors and debug JavaScript code"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use a PC at a beginner level",
        "Have access to an Internet connection to download necessary software applications",
        "Exercise files and support PowerPoint presentations are provided as additional resources at the beginning of each lecture."
      ],
      "description": "JavaScript is a powerful and versatile scripting language used in web applications, games, asynchronous coding, and more. Students will learn how this language can enhance a web page, allowing additional interactivity and more precise control of page elements. Students will also learn how JavaScript can be used to validate web forms and how to script for the DOM in an effort to manipulate web page elements. More advanced techniques used in creating a website and making the content more dynamic will also be taught as well as how to use JavaScript in a variety of ways from building simple games to simple financial applications.",
      "target_audience": [
        "This course is meant for beginning to intermediate programmers and Web developers aspiring to learn the JavaScript language"
      ]
    },
    {
      "title": "Create an API with Python | Django | MySQL | REST Framework",
      "url": "https://www.udemy.com/course/create-an-api-with-python-django-mysql-rest-framework/",
      "bio": "Build a CRUD API from scratch",
      "objectives": [
        "How to create and activate a virtual environment",
        "How to install Django in a virtual environment",
        "How to install Django REST Framework",
        "How to create a Django project and app",
        "How to setup MySQL Database with Django",
        "How to create Models",
        "How to create model objects",
        "How to create and run migrations",
        "How to create a Serializer Class",
        "How to create views",
        "How to map views to URLS",
        "How to use Django REST framework to process HTTP Request",
        "How to test API by creating CRUD operations using Postman"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Installing Python",
          "Create and activate a virtual environment",
          "Installing Django",
          "Installing REST Framework"
        ],
        "Creating a Django Project and App": [
          "Creating a Django Project",
          "Creating a Django App",
          "Installing Corsheaders",
          "Registering Applications"
        ],
        "Database Integration": [
          "Installing MySQL",
          "MySQL Workbench",
          "Django and MySQL Database Setup",
          "Applying Initial Migration"
        ],
        "Creating a Model and Serializer": [
          "Creating a Django Model",
          "Creating and applying a new migration",
          "Creating a serializer class",
          "Starting and stopping development server",
          "Creating a superuser account"
        ],
        "Creating Views and URLS": [
          "Creating views - Part 1",
          "Creating views - Part 2",
          "Maping views to URLS",
          "Register Model with Admin Site",
          "Creating Model Objects"
        ],
        "Testing API": [
          "Installing Postman",
          "Testing API with CRUD Operations",
          "Project code",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge of Python",
        "Basic knowledge of Django",
        "Basic knowledge of MySQL"
      ],
      "description": "API stands for Application Programming Interface.\nAn API is a software intermediary that allows two applications to talk to each other. In other words, an API is the messenger that delivers your request to the provider that you're requesting it from and then delivers the response back to you.\nWhen we are building APIs, we want our models to provide four basic types of functionality. The model must be able to Create, Read, Update,and Delete resources.\n\n\nIn this course, we are going to build an API using the following technology:\nPython\nDjango\nDjango Rest Framework\nMySQL\nmysqlclient adapter\ndjango-cors-headers\n\n\nWhat You Will Learn :\nHow to Create and activate a virtual environment\nHow to install Django\nHow to install Django REST Framework\nHow to Create a new Django Project\nHow to Create a new Django App\nHow to register applications with Django\nHow to setup  MySQL Database with Django\nHow to create and run Migrations\nHow to Create a Django Model\nHow to define Data Models and migrate it to MySQL\nHow to Create and apply a new migration\nHow to Create a serializer class\nHow to Create views\nHow to Map views to URLs\nHow to Create Model Objects\nHow to test API with CRUD Operations\nHow to use Django Rest Framework to process HTTP requests\nHow to create CRUD operations interacting with API using Postman",
      "target_audience": [
        "Beginner web developers",
        "Beginner programmers",
        "Beginners to API development"
      ]
    },
    {
      "title": "Azure Solution Architect Certification- AZ 300 and AZ 303",
      "url": "https://www.udemy.com/course/azure-solution-architect-certification-az-300/",
      "bio": "From beginner to expert",
      "objectives": [
        "In this course we would explore various Cloud services available on Microsoft Azure.",
        "Learn about Cloud Storage services like- Blob, File Storage, and Queue",
        "Learn about Database Services like CosmosDB and SqlDB",
        "Learn about Azure Command Line Interface (AZ CLI), Cloudshell, Storage Explorer",
        "Deploy projects on - blob, file, host static & dynamic website, host wordpress site, integrate cosmodb and sql db into application",
        "Learn about Networking tools like- DNS, Traffic Manager, Firewall, ExpressRoute, Virtual WAN, Vnet, NSG",
        "Learn about Containers like- Docker, Kubernetes, Service Fabric Cluster, AKS, Container Instance, Container Registry",
        "Learn about DevOps features like- Boards, Artifacts, Repos, Pipelines, TestPlan, Tool Integration, DevTest labs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Azure Solution Architect Certification"
        ],
        "Storage": [
          "Introduction to Storage",
          "BloB",
          "File storage",
          "Queue",
          "Az Storage Quiz"
        ],
        "Azure Database": [
          "CosmosDB",
          "SqlDB"
        ],
        "CLI options": [
          "cli cloudshell",
          "cli cloudshell python",
          "cli install",
          "cli powershell",
          "storage explorer 1",
          "storage explorer 2"
        ],
        "Storage Project 1": [
          "blob cli",
          "file cli 1",
          "file cli 2",
          "file cli 3",
          "file cli 4"
        ],
        "Host a Website on Cloud": [
          "static website 1",
          "static website 2",
          "static website 3",
          "upload image website 1",
          "upload image website 2",
          "upload image website 3",
          "upload image website 4",
          "upload image website 5",
          "wordpress 1",
          "wordpress 2"
        ],
        "PROJECT: CosmosDB": [
          "PROJECT: CosmosDB part 1",
          "PROJECT: CosmosDB part 2"
        ],
        "PROJECT: SQL Database": [
          "PROJECT: SQL Database",
          "PROJECT: SQL Database 2",
          "PROJECT: SQL Database 3",
          "PROJECT: SQL Database 4",
          "Az Database Quiz"
        ],
        "Networking on Cloud": [
          "DNS",
          "Traffic Manager",
          "Firewall",
          "ExpressRoute",
          "Virtual WAN",
          "Az Networking Quiz"
        ],
        "VNet (Virtual Network)": [
          "VNet",
          "VNet Practical-1",
          "VNet Practical-2"
        ]
      },
      "requirements": [
        "A basic understanding of Cloud Computing concepts would be more than sufficient, however it is not required to begin with this course.",
        "If you have little exposure on Microsoft Azure cloud platform, it will be helpful."
      ],
      "description": "Microsoft Azure the fastest growing cloud computing platform, which is currently the second most popular just after Amazon Web Services. You could be familiar with AWS or any other cloud computing platform, or you could be a someone interested to learn professional level skills on Microsoft Azure, this comprehensive tutorial would provide you sufficient knowledge with hands-on practical demonstrations of wide range of cloud services on Microsoft Azure.\nThe course curriculum is designed in a way that it would be helpful for Azure Solution Architect- AZ 300 or AZ 303 Certification exam. Before getting this certification you must have subject matter expertise in designing and implementing solutions that run on Microsoft Azure, including aspects like compute, network, storage, and security.\nA Cloud Solution Architect is person who is expected to perform various roles that include advising stakeholders and translating business requirements into secure, scalable, and reliable cloud solutions. An Azure Solution Architect could partner with cloud administrators, cloud DBAs, and clients to implement solutions.\nIn this course you would be learning various concepts and skills on Microsoft Azure, including-\nCloud Storage services like- Blob, File Storage, and Queue.\nDatabase Services like CosmosDB and SqlDB.\nAzure Command Line Interface (AZ CLI), Cloudshell, Storage Explorer.\nProjects like- Storage, Host a Website on Cloud, Wordpress, etc\nNetworking tools like- DNS, Traffic Manager, Firewall, ExpressRoute, Virtual WAN, Vnet, NSG.\nContainers like- Docker, Kubernetes, Service Fabric Cluster, AKS, Container Instance, Container Registry.\nDevOps features like- Boards, Artifacts, Repos, Pipelines, TestPlan, Tool Integration, DevTest labs.\nYou will also learn Project on CosmosDB, and SQL Database.\nMoreover, if you utilize your time precisely for learning Azure cloud services, you could prepare for Azure Solutions Architect exam easily and learn Azure in 30 days.",
      "target_audience": [
        "Anyone who would be interested to learn Cloud Computing with Microsoft Azure.",
        "Would be interested in learning various cloud services and options available on Microsoft Azure.",
        "Want to make a career with Cloud Computing.",
        "Would be interested in Microsoft Azure Solution Architect Certification."
      ]
    },
    {
      "title": "Master AI & WordPress: Web Development with AI for Beginners",
      "url": "https://www.udemy.com/course/master-ai-wordpress-website-development-with-ai-for-beginners/",
      "bio": "Learn WordPress, Elementor, Figma, ChatGPT, MidJourney, DALL-E, Elementor AI to create websites without coding",
      "objectives": [
        "Instant WordPress Setup: Learn how to install and configure WordPress.",
        "Design with Figma: Dive into website design from scratch using Figma, understanding the essentials of a user-friendly interface.",
        "Build with Elementor: Transform your Figma designs into fully functional WordPress sites using Elementor, an intuitive page builder.",
        "Enhance Designs with AI: Discover how Elementor AI can supercharge your design process, making complex tasks simpler.",
        "Content Creation with ChatGPT: Learn to generate compelling website content effortlessly with ChatGPT.",
        "Create Stunning Visuals: Use MidJourney and DALL-E to craft unique visuals and logos that stand out.",
        "Master WordPress Management: Navigate the WordPress dashboard with ease and master its extensive features.",
        "Optimize with SEO: Apply effective SEO strategies using Yoast to enhance your site's visibility and reach.",
        "Expand Functionality: Explore advanced plugins to add extra features and optimize your site’s performance and security.",
        "Responsive Design: Ensure your website is responsive and looks great on any device, enhancing user experience.",
        "Site Security: Learn to protect your WordPress site from potential threats and ensure it remains safe from hackers.",
        "Professional Skills Development: Gain the skills, knowledge, and confidence to work professionally in web design and development."
      ],
      "course_content": {
        "Introduction": [
          "What are you going to build"
        ],
        "WordPress Introduction": [
          "What is WordPress",
          "WordPress Types"
        ],
        "Domain & Hosting": [
          "What is domain",
          "What is hosting",
          "How to install WordPress locally",
          "How to purchase hosting & domain",
          "Installing SSL",
          "How to access WordPress"
        ],
        "Navigating WordPress": [
          "Dashboard",
          "Settings",
          "Theme",
          "Theme settings"
        ],
        "How to design a website with AI": [
          "Introduction to AI",
          "How to write prompts in ChatGPT",
          "Custom GPT & GPT Projects",
          "Custom GPT Instruction",
          "ChatGPT Prompts",
          "Requirements",
          "Style guide in ChatGPT",
          "Page structure in ChatGPT",
          "Generating text in ChatGPT",
          "Generating images in ChatGPT & MidJourney",
          "Generating logo in DALL-E",
          "Access to generated images"
        ],
        "Figma": [
          "Introduction to Figma",
          "Figma guide",
          "How web design works",
          "Access Figma project",
          "Defining styles in Figma",
          "Designing homepage",
          "Designing footer",
          "Designing about us page",
          "Designing contact us page"
        ],
        "Elementor": [
          "What is Elementor",
          "How to install Elementor",
          "Elementor overview",
          "How to purchase Elementor PRO",
          "Elementor PRO Overview",
          "Applying styles in Elementor"
        ],
        "Building Homepage": [
          "Hero section",
          "About section",
          "Our classes section",
          "Testimonials section",
          "Contact section",
          "Blog section",
          "Adjusting spacing between sections",
          "Responsive Web Design (RWD)",
          "Adding links"
        ],
        "Building About us": [
          "Hero section",
          "Journey & meet us section",
          "Mission section",
          "Testimonials & gallery sections",
          "Responsive Web Design (RWD)"
        ],
        "Building Contact Page": [
          "Hero & form sections",
          "Follow section",
          "FAQ section",
          "Map section",
          "Responsive Web Design (RWD)"
        ]
      },
      "requirements": [
        "No prior experience required! Just bring a computer with internet access."
      ],
      "description": "Unlock the power of WordPress and discover how to build professional-quality websites without any programming knowledge with my comprehensive course. This beginner-friendly course takes you through the essentials of using WordPress in conjunction with modern tools like Elementor, Figma, ChatGPT, MidJourney, DALL-E, and Elementor AI.\nStart by mastering the basics of WordPress, from installation to customization. Learn how to design visually stunning websites with Figma, and see how Elementor can transform these designs into fully functional web pages. Explore the capabilities of ChatGPT and DALL-E to generate engaging content and eye-catching visuals, enhancing the user experience on your sites.\nWith the added power of MidJourney and Elementor AI, you’ll be able to incorporate advanced design elements effortlessly, making your websites not only more attractive but also more effective. This course is perfect for small business owners, bloggers, and aspiring web designers who want to build their online presence or start a career in web development.\nBy the end of this course, you will have a solid understanding of how to leverage these powerful tools to create responsive, aesthetically pleasing, and user-friendly websites. Join me to start your journey into the world of web development and prepare to build websites that make a real impact.",
      "target_audience": [
        "Beginners interested in learning WordPress and web design.",
        "Small business owners who want to establish or improve their online presence.",
        "Bloggers seeking to enhance their sites with advanced design tools.",
        "Anyone curious about using AI tools to create visually appealing websites.",
        "Individuals wanting to develop practical skills for building and managing websites independently.",
        "Career changers looking to start making money by building and managing websites."
      ]
    },
    {
      "title": "WordPress Blogging : How To Start A WordPress Blog (2019)",
      "url": "https://www.udemy.com/course/wordpress-blogging-guide/",
      "bio": "WordPress Blogging : The Only Guide You Need to Setup Your WordPress Blog Website",
      "objectives": [
        "Pick the right niche and create a blog you are passionate about",
        "Setup your blog in just 5 minutes using WordPress",
        "Choose the best WordPress theme for your blog",
        "Free WordPress plug-in’s for blogging success",
        "Tips for Search Engine Optimization (SEO) of your blogging website",
        "Discover ways to build the traffic and earn from your blog website"
      ],
      "course_content": {
        "Start Here First!": [
          "My Personal Story and Why You Need a Blog"
        ],
        "Quick Start Blogging Course": [
          "Finding the Right Niche for Your Blog",
          "Picking a Great Domain for Your Blog",
          "How to Setup Your Blog in 5 Minutes",
          "Choosing the Best Wordpress Theme for Your Blog",
          "Top Wordpress Plugins for Your Blog",
          "SEO Basics for Your New Blog",
          "Free Traffic Methods for Your Blog",
          "How to Make Money with Your Blog"
        ],
        "Bonus Material": [
          "What Happens in an Internet Minute?",
          "How to Make $500 with a Blog Webinar Replay"
        ]
      },
      "requirements": [
        "You should be passionate about creating your own Blog website",
        "There are no specific requirements to take this course, anyone can follow this course and start a blog today"
      ],
      "description": "Do you want to start a WordPress blog the right way? I know that starting a blog can be a terrifying thought especially when you are not geeky. Guess what - you are not alone. Having helped over thousands of users to start a blog, in this course, I will give you exact instructions on how to start a blog from the scratch on WordPress.\nThis course is the only guide you need to setup your WordPress Blog website\nKnow how you can pick the right niche for your blog\nCreate a blog you are passionate about\nSetup your blog in just 5 minutes (yes you read it right, only 5 minutes)\nChoose the best possible WordPress theme for your blog website\nInstall free WordPress plugin’s for blogging success\nOptimize your blogging website for better SEO\nDiscover ways to build the traffic and earn from your blog website\nThe first thing we are going to do in this course is we are going to pick the right niche for your blog. Create a blog you are passionate about. Find a passion that will also make you earn in the process.\nOnce you decide on your blogging niche the second thing it that choose a unique but effective domain name for your blog website. I will walk you through the process of choosing a great domain name for your blog website.\nAfter choosing a domain name, time is to go live. I will walk you through the process of how to setup your blog in just 5 minutes with WordPress and without any coding. Choose a right WordPress theme for your blog website is also an important.\nIn this course, you will understand the top WordPress plugins for your blogging website success. You will also understand what is SEO and discover the top WordPress SEO tips to help you improve your WordPress blog website SEO and get more organic traffic.\nAt the end, I am going to show you the best methods to get free traffic to your blog. The great ways you can start right away.  Also, I will show you the best ways to make money from your blog. Understand the audience to discover the best ways to earn.\nThe course is easy enough for a newbie blogger to follow, yet also the only guide you need to get your blog fully functional and live. Be sure to visit bonus video material for more videos on the specifics of how to complete any of the actions discussed in the course.\nA webinar on “How to Make $500 with a Blog” as a Bonus material inside the course.\nWe don’t want you to have a disappointment, if you don’t like the course for any reason then you can request for the refund in first 30 days from your purchase.  Also, remember that this course comes with lifetime access to the course, that means you will get access to all the future lectures at FREE of cost.\nThanks for your interest in this course, hope you’re as excited to get started.\nGo ahead and click on “Enroll Now” button. See you inside the course…!!!",
      "target_audience": [
        "This \"WordPress Blogging : How To Start A WordPress Blog (2017)\" course is for the beginners who are passionate about Blogging and want to learn where to start and how to create a blog website",
        "Anyone can take this course and start their own blog from today"
      ]
    },
    {
      "title": "Mendix : Building a Pluggable Widgets With React Hooks",
      "url": "https://www.udemy.com/course/mendix-building-a-pluggable-widgets-with-react-hooks/",
      "bio": "Learn React Hooks & Mendix Widget Development fundamentals in all aspects...",
      "objectives": [
        "React",
        "React Hooks API & Side Effects",
        "Pluggable Widget Types",
        "Mendix Widget Development Patterns"
      ],
      "course_content": {
        "Giriş": [
          "What You'll Learn?",
          "Installations",
          "Necessary VS Code Extensions",
          "How To Access To Lecture Codes?",
          "Mendix 9.9.1 Download URL"
        ],
        "React Hooks Introduction": [
          "What is React?",
          "Create First React Project",
          "Project Structure",
          "Component Tree"
        ],
        "Styling Components": [
          "Adding Bootstrap",
          "Coding User Component",
          "Card Component & Props",
          "Refactor Card Component",
          "Looping Card Component",
          "Styling of Components"
        ],
        "useState": [
          "useState Hook and re-draw UI",
          "Parent Component State Update Behaviours",
          "Child Component State Update Behaviour",
          "Update Parent Component State From Child"
        ],
        "useContext": [
          "Prop Drilling and useContext",
          "Immutable State Update"
        ],
        "useReducer": [
          "Introduction to useReducer Hook",
          "useReducer Hook Implementation",
          "useReducer Refactor",
          "useReducer & Immer",
          "Add Random Product"
        ],
        "Custom Hooks": [
          "Reusable Custom Hooks",
          "Refactor User Component with Custom Hook",
          "Refactor Main Component with Custom Hook"
        ],
        "useEffect": [
          "useEffect Introduction",
          "useEffect with empty array",
          "useRef Hook",
          "useEffect with dependency variable",
          "usePassFirstMount implementation"
        ],
        "Introduction to Mendix Widget Development": [
          "Install Yeoman and Widget Generator",
          "Creating First Widget Project",
          "Preparing Project Structure"
        ],
        "Static Widget Types": [
          "Static Widget Types - String",
          "All Static Widget Types",
          "Showing Static Widget Types"
        ]
      },
      "requirements": [
        "Strong Mendix Fundementals",
        "Javascript",
        "HTML",
        "CSS",
        "Bootstrap"
      ],
      "description": "Mendix is a huge low-code platform, and the best in low-code development. It provides and utilizes tools to build, test, and deploy applications in same platform. Mendix has been building out the platform so that businesses can go live sooner and attain success faster. In addition to that on 1  October  2018, Mendix was acquired by Siemens, the largest industrial manufacturing company in Europe.\nIn this course you will build and learn;\n- Strong Javascript & JSX skills.\n- What is React?\n- React Component Tree\n- React State Management\n- State vs Props\n- React Side Effects (useEffect)\n- React Hooks API & How to use them\n- Scaffolding a Widget Project\n- Pluggable Widget Property Types & How to use them\n- Widget Development Patterns\n- How to develope custom Datagrid\n- How to develope custom Sortable Template Grid.\nThis is a 7.5 hours course to teach you to give more deep insight about Mendix Widget development.\nMendix is a high productivity app platform that enables you to build and continuously improve mobile and web applications at scale. The Mendix Platform is designed to accelerate enterprise app delivery across your entire application development lifecycle, from ideation to deployment and operations.\nMendix enables you to implement both Agile and DevOps best practices. It even goes beyond that by involving business stakeholders in the actual development of the applications.",
      "target_audience": [
        "Developers who want to further customize their mendix projects can enroll in this course.",
        "Developers who want to learn React Hooks in short amount of time."
      ]
    },
    {
      "title": "Python Django: Ultimate Web Security Checklist - 2025",
      "url": "https://www.udemy.com/course/python-django-ultimate-web-security-checklist-2022/",
      "bio": "Learn how to secure your Django web application | Theory and hands-on demonstrations",
      "objectives": [
        "How to ensure that your website is secure and ready for deployment",
        "Implement a reCAPTCHA",
        "How to implement two factor authentication (2FA) with a virtual device",
        "Manage failed login attempts",
        "How to add a session timeout",
        "Configure and set various security settings",
        "How to manage users passwords",
        "Theoretical tips on file handling"
      ],
      "course_content": {
        "Course Introduction": [
          "Course overview and prerequisites - [Important]",
          "Course support",
          "Thought process"
        ],
        "Project resources": [
          "Final project code and slides - Download",
          "Final project code - Important information"
        ],
        "Create a Django web app - [Recommended]": [
          "Python and Visual Studio Code - Installation - Windows",
          "Python and Visual Studio Code - Installation - MacOS",
          "Django project setup - Windows",
          "Django project setup - MacOS",
          "Django app setup",
          "Templates, URL's and Views",
          "Configure static files",
          "Block content and extending templates",
          "Styling our web app",
          "Add font awesome icons to our homepage",
          "User registration with forms",
          "Add crispy forms to style our registration form",
          "Testing the user creation process"
        ],
        "reCAPTCHA v2": [
          "Introduction",
          "Setup reCAPTCHA in Google Cloud - Pt. 1",
          "Add reCAPTCHA to our web app - Pt. 2"
        ],
        "Two-Factor Authentication (2FA) with a virtual device": [
          "Introduction",
          "2FA in Django - An important note",
          "2FA in Django - [Alternative]",
          "Installing the two-factor packages",
          "Configuring time zones",
          "Overriding the default templates",
          "Dashboard styling and user logout",
          "Template analysis for 2FA",
          "Adding customised templates",
          "Enable 2FA with the setup wizard",
          "Backup tokens - Important note!",
          "Utilising backup tokens - [Optional]",
          "Disable 2FA"
        ],
        "Session timeout": [
          "Introduction",
          "Adding a session timeout"
        ],
        "Configure environment variables": [
          "Introduction",
          "Configure environment variables"
        ],
        "Manage brute force attacks": [
          "Introduction",
          "Create an account-locked template",
          "Managing brute force attacks",
          "Brute force attacks - Important notice!",
          "Custom functionality - Brute force prevention method #1 - [Optional]",
          "Custom functionality - Brute force prevention method #2 - [Optional]"
        ],
        "Password management": [
          "Introduction",
          "Resetting a user's password - Pt. 1",
          "Creating an app password",
          "Resetting a user's password - Pt. 2",
          "Resetting a user's password - Pt. 3"
        ],
        "UI design and styling": [
          "Utilising Django messages - Part 1",
          "Utilising Django messages - Part 2",
          "Adding icons to our Django messages",
          "Final UI touches and cleanup - [Optional]"
        ]
      },
      "requirements": [
        "Fundamental knowledge of Django is required",
        "You should also know the basics of HTML/CSS and JavaScript"
      ],
      "description": "Welcome! I'm here to help you ensure that your Django web application is secure for deployment.\n\n-- Please read carefully --\n\nThis course is primarily intended for developers who have a basic knowledge of Django and want to secure their web application by integrating the following security strategies and more:\n\n- Integrate a reCAPTCHA\n- Two-Factor Authentication (2FA) with a virtual device\n- Manage failed login attempts\n- Add a session timeout\n- Password management\n- Configure behind the scenes security settings\n- Additional security measures\n- General advice on better security management\n\nI want to help YOU to fully secure your Django web application.\n\n\nThe Python Django: Ultimate Web Security Checklist course has been structured in a simple and logical order. Everything that has been designed from the styling to the graphics and topics covered is crafted with the absolute duty of care towards the student.\n\n\nIt covers a variety of topics that will ensure that your website is safe and secure.\nIt is mixed with theory and practical hands-on demonstrations.\nThe course is structured in a logical and cohesive way - not just random slides plastered everywhere.\nIt starts off very simple and then builds on gradually throughout the course.\nThis course is jam-packed with lecture slides, PDF walkthroughs, code snippets/references and comes along with the full project source code - as a zip file.\nAll 80 + slides are available as a downloadable PDF.\n\nThe Python Django: Ultimate Web Security Checklist course is a highly practical course and allows you to apply your knowledge:\n\n\nThere is a wealth of hands-on lectures throughout this course.\n\n\nYour instructor:\nMy name is Arno Pretorius. I'm a qualified IT teacher who has taught programming both in-person and online. My main passions are teaching and technology, so I thought why not just combine the best of both worlds to create something truly amazing and valuable. Over the years, I have created and deployed many real-world Django-based applications, including a job portal for university graduates and an exclusive social network.\nI'm a Software developer, an AWS Solutions Architect and Developer associate. I have a keen interest in cloud computing, web development and everything that relates to programming and technology.\nSo, let's go and become fluent in Django web application security.\nTrust me you are in good hands!\n\n\nThis course also comes with:\n- 6 + hours of on-demand video\n- Full lifetime access\n- A Udemy certificate of completion\n- Access on mobile and TV\n\n\nJoin me in this course if you want to master the fundamentals of securing your Django web application.",
      "target_audience": [
        "This course is primarily intended for developers who have a basic knowledge of Django and want to secure their web application"
      ]
    },
    {
      "title": "Mastering CSS with Sass & Bootstrap + Interview Questions",
      "url": "https://www.udemy.com/course/html-css-sass-bootstrap-beginner-to-expert-bootcamp/",
      "bio": "Real-world responsive web-designing using flexbox & grid layouts. Front-end/UI/UX projects with assignments.",
      "objectives": [
        "Practice HTML & CSS - the easy way",
        "Sass and Bootstrap with real-world practical usage",
        "Responsive web design using flexbox & grid layouts",
        "Pseudo classes and elements, selectors, combinators, flexbox, grid, display property, media queries, transform and animation properties",
        "100% practical course on HTML, CSS, Sass and Bootstrap",
        "Real-world questions for interview preparation",
        "Practical Assignments and hands-on projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "HTML Basics": [
          "HTML Page Structure",
          "The Paragraph Tag <p>",
          "Tags, Empty tags & Elements",
          "Attributes",
          "<div> & <span>",
          "H1 to H6",
          "The Unordered List Tag <ul>",
          "The Ordered list tag <ol>",
          "<a> Anchor tag",
          "<a> - Advanced concept (#)",
          "<img> tag",
          "Relative path Vs. Absolute path",
          "The <input> tag - text, numeric & email",
          "<input> - checkbox & radio",
          "The <select> tag",
          "HTML vs XHTML",
          "Semantic Tags - address, footer, section, header",
          "Concept Of Accessibility In Web Applications",
          "ARIA - attribute",
          "Meta Tags (The SEO friendly tags)",
          "Installing Google Analytics",
          "Understanding DOM"
        ],
        "CSS Basics & Selectors": [
          "Introduction",
          "Inline Styling and basic CSS syntax",
          "Internal Styling with <style> tag",
          "External Styling - <link> tag",
          "Element Selector",
          "Class Selector",
          "element.class Selector",
          "ID Selector",
          "Group Selector",
          "Universal Selector",
          "CSS Specificity",
          "Universal Selector & CSS Reset"
        ],
        "Combinators - Advanced Selectors (Part 1)": [
          "Introduction",
          "Descendent selector (space)",
          "Child Selector (>)",
          "Adjacent Selector (+)",
          "Attribute Selector - element[attribute]",
          "Attribute Spaced Selector (~)",
          "Attribute Selector (^) - prefixed value",
          "Attribute selector ($) - suffixed value",
          "Attribute contains selector (*)",
          "Attribute Hyphenated Selector (|)"
        ],
        "Pseudo-classes & Elements - Advanced Selectors (Part 2)": [
          "Introduction",
          "Linguistic pseudo-classes",
          "Location pseudo-classes",
          ":hover - User action pseudo classes Part 1",
          ":active - User action pseudo classes Part 2",
          ":focus - User action pseudo classes Part 3",
          ":focus-within - User action pseudo classes Part 4",
          ":enabled/disabled - Input pseudo classes",
          "readonly/contenteditable attributes",
          ":read-only/read-write - Input pseudo classes",
          ":placeholder-shown - Input pseudo class",
          ":valid/:invalid & :required - Input pseudo class",
          "HTML/CSS Live Preview Extension",
          ":nth-child() selector - Tree structural pseudo class",
          ":nth-child() selector - complex arguments",
          "Pseudo Element (pseudo class vs. element)",
          "::first-line - pseudo element part 1",
          "::first-letter - pseudo element part 2",
          "::before/::after - pseudo element part 3",
          "::before/::after - pseudo element part 4"
        ],
        "Text Formatting": [
          "font-family",
          "@font-face",
          "font-weight",
          "line-height",
          "font-style",
          "text-transform",
          "font-variant",
          "text-decoration",
          "text-alignment",
          "Indenting text",
          "color property - Applying foreground color"
        ],
        "Working with Colors & Gradients": [
          "Introduction - different ways to assign colors",
          "Using RGB values",
          "Hexadecimal notations",
          "Using HSL values",
          "Working with opacity",
          "CSS Gradients - linear-gradient()",
          "CSS Gradients - radial-gradient()",
          "CSS Gradients - conic-gradient()"
        ],
        "CSS Units": [
          "Introduction",
          "Absolute Units :- px",
          "Absolute Units :- pt",
          "Absolute Units :- cm",
          "Absolute Units :- mm",
          "Absolute Units :- in",
          "Absolute Units :- pica - pc",
          "Relative Units :- em",
          "Relative Units :- rem",
          "Relative Units :- % - percentage",
          "Relative Units :- ex - x height",
          "Relative Units :- ch - character",
          "Relative Units :- vw",
          "Relative Units :- vh",
          "Relative Units :- vmin/vmax",
          "Angle Measurement Units :- deg, grad, rad & turn",
          "Time Measurement Units :- ms/s"
        ],
        "CSS Page Layout Fundamentals": [
          "Introduction",
          "CSS box-model",
          "Applying Border in CSS",
          "Applying Padding in CSS",
          "Applying Margin in CSS",
          "Collapsing Margins and Negative Margins",
          "Understanding float",
          "Clearing floats",
          "Container/Float collapsing",
          "Clearfix - Modern way to clear floats",
          "Creating multiple columns floated layout",
          "Display property",
          "fix, fluid & responsive layout",
          "Understanding grids",
          "Spanning Rows and Columns in Grid",
          "Introduction to CSS Flexbox",
          "Flex Container Properties",
          "Flex Item Properties",
          "Calculation of flex-grow",
          "@media query - Introduction",
          "Assignment - Implementation of @media query",
          "media type - all",
          "media type - screen",
          "media type - print",
          "Creating a basic responsive form using media query with Breakpoint"
        ],
        "CSS Transform": [
          "Introduction",
          "Move Element With “translate()” Method",
          "rotate() Method",
          "Assignment - rotate() Method",
          "Resizing Elements Using scale() Function",
          "Transforming Elements Using skew() Function",
          "Assignment - Skew() on Text",
          "matrix() - The All-in-one Method",
          "3D Card Flip Design Using transform Method"
        ]
      },
      "requirements": [
        "No prior programming knowledge required!",
        "Time, attention and dedication to learn & practice."
      ],
      "description": "If you are serious about learning web development from scratch – then let me assure you, this is the only HTML/CSS/Sass/Bootstrap course you’ll ever need to become a hands-on developer!\nWhen you start this course (even if you have ZERO knowledge about HTML/CSS/Sass/Bootstrap) – you’ll be given proper guidance and taught step by step in order to understand and completely grasp the topics.\nI am here just not to teach you theoretically about the concepts but to explain each lecture with easy to understand and practice examples. Adding to that, I’ve covered real-world interview questions which are asked by fortune 100/500 companies.\nUnderstanding the fundamentals of HTML and CSS is the foundation of becoming a smart and confident developer who is ready to take on any challenge head-on!\nIf you have gone through my other courses, you’ll know that the lectures are methodical, logical and of course practical. It is indeed a progressive course, as I will add more practical assignments and projects from time to time along with version updates.\nLastly, if you want to learn HTML, CSS, Sass, and Bootstrap in the simplest and in a methodical way – this course is crafted just for you as this is the only material you will ever need to master this subject!\nIf you think you are ready for this exciting learning journey, then start right now and hit the “Take this course\" button.\nGiving this course a try is not a bad idea as you have Udemy’s backing of a 30-day refund policy. (Though I’m confident that you won't regret your decision!)",
      "target_audience": [
        "Anyone who wants to learn HTML, CSS, Sass, and Bootstrap from scratch.",
        "Junior & mid-level developers who want to enhance their skills to the max!",
        "Expert developers who want to upgrade their existing development skills."
      ]
    },
    {
      "title": "jQuery - Complete jQuery Course From Beginner To Advanced",
      "url": "https://www.udemy.com/course/jquery-complete-jquery-course-from-beginner-to-advanced/",
      "bio": "Create Dynamic Interactive Website With jQuery Coding and Learn jQuery as per the Current Industry Demands.",
      "objectives": [
        "Learn jQuery from scratch",
        "Create Dynamic HTML pages with jQuery",
        "Add beautiful effects & animations to your sites",
        "Build professional user interfaces",
        "better use jQuery methods",
        "Create dynamic websites that users enjoy",
        "Build high performing jQuery applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Get Started",
          "Syntax",
          "Selectors",
          "Event Methods",
          "Hide and Show",
          "Fading",
          "Sliding",
          "Stop Animations",
          "Chaining",
          "Callback Functions",
          "Get Content and Attributes",
          "Set Content and Attributes",
          "Add Elements",
          "Remove Elements",
          "css() Method",
          "Dimensions",
          "Traversing",
          "Ancestors",
          "Delegated Event"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript"
      ],
      "description": "Are you ready to transform your web development skills and create interactive, dynamic web applications? Welcome to the \"jQuery - Complete jQuery Course From Beginner To Advanced,\" your all-in-one resource for mastering jQuery, one of the most popular JavaScript libraries in the world.\n\n\nIn today's web development landscape, jQuery is a vital tool that enables you to build user-friendly, responsive, and feature-rich websites and web applications. Whether you're a complete beginner or a seasoned developer looking to enhance your skillset, this course will equip you with the knowledge and hands-on experience you need to become a jQuery expert.\n\n\nKey Learning Objectives:\n\n\nIntroduction to jQuery: Start from the ground up, as we guide you through the basics of jQuery and how to set it up in your projects.\n\n\nDOM Manipulation: Learn how to select, traverse, and manipulate elements on a web page effortlessly, enhancing your ability to create dynamic content and responsive designs.\n\n\nEvent Handling: Master the art of handling user interactions, from simple clicks to complex events, and bring your websites to life.\n\n\nAnimations and Effects: Create visually stunning web applications with smooth animations and effects that captivate your users.\n\n\njQuery UI: Dive into the jQuery UI library, exploring its rich set of widgets, themes, and user interface components to enhance your web applications.\n\n\nAdvanced Techniques: Explore advanced topics such as creating plugins, optimizing performance, and addressing real-world challenges.\n\n\nWhy Choose This Course?\n\n\nComprehensive Curriculum: We've designed the course to take you from a jQuery novice to an advanced developer, ensuring you have a deep understanding of this essential tool.\n\n\nHands-On Learning: Practice your skills with hands-on exercises, coding challenges, and projects that mirror real-world scenarios.\n\n\nInstructor Support: Get access to expert guidance and support from experienced developers who are passionate about helping you succeed.\n\n\nLifetime Access: Once enrolled, you'll enjoy lifetime access to the course content and updates, keeping your skills up-to-date.\n\n\nWhether you're building your first website or you're a seasoned developer looking to expand your toolkit, this comprehensive jQuery course will provide you with the knowledge and practical skills needed to excel in the world of web development. Enroll today and unlock the potential of jQuery, propelling your web projects to the next level. Don't miss this opportunity to become a web development pro. Your journey to jQuery mastery begins here!",
      "target_audience": [
        "Who wants to learn to use jQuery",
        "Front End Developers",
        "Web Development Students"
      ]
    },
    {
      "title": "JavaScript Full Course 2025 Zero to Advance With 30 Projects",
      "url": "https://www.udemy.com/course/javascript-complete-course-zero-to-advance/",
      "bio": "Master the Complete JavaScript with 30 real world JavaScript project with Source Code and detailed JavaScript Notes",
      "objectives": [
        "You will learn to create modern web applications using JavaScript",
        "You will learn all JavaScript concept with practical example",
        "You will learn Advanced JavaScript & ES6 also in this course",
        "You can download all the JavaScript projects source code",
        "Build 30 real-world projects to practice and improve your portfolio",
        "Enhance your job prospects by exploring the core principles of JavaScript",
        "JavaScript fundamentals: variables, conditional statements, operators, boolean logic, functions, arrays, objects, loops, strings, and more",
        "Learn advanced topics such as the 'this' keyword, higher-order functions, closures, and more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to JavaScript",
          "First JavaScript Program"
        ],
        "JavaScript Basics": [
          "JavaScript Variables",
          "Scope in JavaScript",
          "Data Types (Primitive)",
          "Data Types (Reference)"
        ],
        "Operators": [
          "Arithmetic & Assignment Operator",
          "Increment & Decrement Operator",
          "Comparison & Logical Operator",
          "String Operator, Precedence & Associativity of Operator"
        ],
        "Control flow Statements": [
          "Conditional Statements (If, Else, Switch & Ternary)",
          "Loops (for, while, do while)",
          "Break & Continue Statement"
        ],
        "Functions": [
          "Functions, Parameters & Arguments",
          "Function Return"
        ],
        "Objects & Prototype": [
          "Object",
          "Object Methods & This Keyword",
          "Constructor Functions",
          "Object Prototype",
          "Object Destructuring",
          "Object Literal Syntax Extensions"
        ],
        "Classes": [
          "Classes",
          "Getters, Setters & Class Expression",
          "Class Inheritance",
          "Static & Private Methods"
        ],
        "Document Object Model": [
          "Introduction to DOM & Node",
          "Selecting elements",
          "Traversing elements",
          "Manipulating HTML elements",
          "Attribute Methods",
          "Manipulating Element's Styles",
          "JavaScript Events"
        ],
        "Projects": [
          "Mini Calendar using JavaScript",
          "Form Validation using JavaScript",
          "E-Commerce Product Page",
          "Calculator using JavaScript"
        ],
        "Advanced Concepts": [
          "Symbol Data Type",
          "Arrow Functions",
          "Rest parameter",
          "String & String Methods",
          "Numbers & Formatting Numbers",
          "Boolean Type",
          "Array & Array Methods",
          "JavaScript Modules",
          "Dynamic Import",
          "Math Object",
          "Date Object"
        ]
      },
      "requirements": [
        "NO prior JavaScript knowledge is required.",
        "A basic understanding of HTML and CSS is more than enough to take this JavaScript Course.",
        "A windows or macOS laptop or desktop is required to learn and execute JavaScript projects."
      ],
      "description": "This is the most comprehensive and in-depth JavaScript course with 30 JavaScript projects.\nJavaScript is currently the most popular programming language in the world. If you are an aspiring web developer or full stack developer, JavaScript is a must to learn. It also helps you to get high-paying jobs all over the world.\n\n\nThis JavaScript course is based on my 8+ years of full stack web development experience.\nIn this Course, You will learn JavaScript from the very beginning to advance step by step with code examples and 30+ most popular JavaScript projects.\n\n\nAfter completing this course, you will be ready to learn JavaScript frameworks like React js, Next js, Vue or Angular.\n\n\nEach concept is carefully made to be beginner-friendly, with clear explanations and practical examples. Along with this I will also provide you the complete notes of this course in PDF format.\n\n\nBut here's the best part: it's not just theory. At the end of this course, we will make some real world projects like Weather App, To-do list app, Online Notes App, Quiz App, Form Validation, Image Slide, Digital Clock, E-commerce product page and many more.\nDon’t worry, you don’t need prior coding experience before starting this course.\nBy the end of this course, you will have the knowledge and confidence that you need in order to ace your job interviews and become a professional web developer.\n\n\nTopics covered in the course?\n\n\nSection - 1 ( Getting Started )\n\n\n1.1 What is JavaScript?\n1.2 Install a JavaScript source code editor.\n1.3 Use of Console Tab of Web Development Tools.\n1.4 Writing JavaScript first Code (Hello World).\nSection - 2 ( Basics )\n\n\n2.1 Basics\nVariable & scope\nOperator, Statement\nKeyword / reserved word\nExpression\n2.2 Data Types\nString\nNumber\nBoolean\nNull\nUndefined\n2.3 Primitive vs. reference values (Array).\n\n\nSection - 3 ( Operators )\n\n\n- 3.1 Arithmetic, Assignment-\n- 3.2 Logical, Equality\n- 3.3 Conversion, Relational / Comparison\n- 3.4 Increment / Decrement\n- 3.5 Operator Precedence\n- 3.6 Operator Associativity.\n\n\nSection - 4 ( Control flow Statements )\n\n\n4.1 If\n4.2 If else\n4.3 If else if\n4.4 Switch\n4.5 Ternary Operator\n4.6 For\n4.7 While\n4.8 do-while\n4.9 Break / Continue\n\n\nSection - 5 ( Functions )\n\n\n5.1 Functions\nParameters / Arguments\nreturn.\n5.2 Anonymous Functions\n5.3 Recursive function\n5.4 Default Parameters\n\n\nSection - 6 ( Objects & Prototype )\n\n\n6.1 Object\nkey\nValue\nmethod.\n6.2 Constructor functions\n6.3 Prototype\n6.4 Object Destructuring\n6.5 Object literal syntax extensions\n\n\nSection - 7 ( Classes )\n\n\n7.1 Class\n7.2 Getters & Setters\n7.3 Class Expression\n7.4 Inheritance\n7.5 Static Methods\n7.6 Private Methods\n\n\nSection - 8 ( DOM - Document Object Model )\n\n\n8.1 Node\nText Node\nElement Node\nChild Node\nParent Node\nDescendent Node\nSibling Node\n8.2 Query/Get Elements\n8.3 Create / clone Element\n8.4 Add node to document\n8.5 Get Element Details\n8.6 Modify Element\n8.7 Get and Modify Element Class\n8.8 Remove Node\n8.9 event listener(.add/.remove)\n\n\nAdvanced JavaScript ( Advanced + ES6 )\n\n\nSection - 1 ( Advanced Concepts )\n\n\n1.1 New Data Type ( Symbol )\n1.2 Rest parameter\n1.3 Callback functions\n1.4 String ( concat, charAt, indexOf, startsWith, endsWith, split, slice )\n1.5 Number ( toFixed, toPrecision, toString )\n1.6 Boolean ( toString )\n1.7 Array\n1.8 Modules\n1.9 Imports ( Dynamic )\n1.10 Math ( pow, sqrt, min, max, floor, ceil, round, random )\n1.11 Date ( getDay, getFullYear, getMonth, now )\n\n\nSection - 2 ( Promises & Async/Await )\n\n\n2.1 Promises\n2.2 Promise chaining\n2.3 Promise error handling\n2.4 async / await\n\n\nSection - 3 ( JavaScript Runtime )\n\n\n5.1 JavaScript Runtime\n5.2 Execution Contexts\n5.3 Call Stack\n5.4 Event Loop\n5.5 Hoisting\n\n\nSection - 4 ( Error Handling )\n\n\n4.1 Try catch\n4.2 Try catch finally\n4.3 Throw\n4.4 Catch binding\n\n\nSection - 5 ( Iterators & Generators )\n\n\n3.1 Iterators\n3.2 Generators and Yield\n3.3 Async Iterators\n3.4 Async Generators\n\n\nSection - 6 ( ES6 )\n\n\n6.1 Syntax\nLet\nSpread Operator\nFor..of Loop\nTemplate Literals\n6.2 ES6 Collections\n\n\nSection - 7 ( Web API )\n\n\n7.1 Client Storage\nCookies\nlocalStorage\nsessionStorage\n7.2 Form Data API\n7.3 Drag-and-Drop API\n7.4 Geolocation API\n7.5 Notification API\n7.6 Network Requests ( Fetch API )\n\n\nSection - 8 ( BOM : Browser Object Model )\n\n\n8.1 Window\nWindows\nAlert\nConfirm\nPrompt\nsetTimeout\nsetInterval\n8.2 Location\n8.3 Navigator\n8.4 Screen\n8.5 History\n\n\n30 JavaScript Projects like\n\n\nTo-Do list app\nWeather App\nImage Search Engine\nQR Code Generator\nQuiz App in JavaScript\nNotes App in JavaScript\nand many more..\n\n\nGit and Github\n\n\nGit and GitHub Introduction\nGit Commands\nHost Project on GitHub Pages\n\n\nReact JS (Add-on)\n\n\nReact JS for Beginners\nTo-Do List App React JS Project\nWebsite Header React JS Project\nTic Tac Toe React JS Project\n\n\nSo, are you ready to master JavaScript?\nEnroll now and let’s dive into the world of JavaScript together!\n\n\nAbout Me:\nMy Name is Avinash, I’m an experienced web developer with 8+ years of experience. I have been teaching web dev since 2015 to hundreds of thousands of students from all over the world on my YouTube channel and Udemy.",
      "target_audience": [
        "Take this course to achieve a comprehensive and profound understanding of JavaScript",
        "Take this course if you have a basic knowledge of JavaScript and are seeking advanced content",
        "Take this course to start your programming journey - JavaScript is an excellent language",
        "Take this course if you've been struggling to learn JavaScript or find it hard to understand the concepts of JavaScript"
      ]
    },
    {
      "title": "Progressive Web Application With React Jumpstart",
      "url": "https://www.udemy.com/course/progressive-web-app-with-react-jumpstart/",
      "bio": "Build Application That Works Offline, Looks Like Native Mobile App etc",
      "objectives": [
        "Build web apps that look and feel like native mobile apps for iOS and Android",
        "Understand How Push Notification Works",
        "Build Offline WebApplication Using Service Workers",
        "Using Progressive Web App in React Ecosystem",
        "Caching the network request calls"
      ],
      "course_content": {
        "Understanding Progressive Web Applications": [
          "What is Progressive Web Application?",
          "Understanding Service Worker",
          "Life Cycle of Service Worker",
          "Recap"
        ],
        "Bootstrap React Project": [
          "Using Create React App",
          "Side Note: Why not a starter kit?",
          "Understanding File Structure",
          "Understanding registerServiceWorker.js file"
        ],
        "Application Shell Architecture": [
          "Our first Real Service Worker",
          "Understanding our application",
          "Designing the Layout of our application",
          "Analyzing The Network Calls",
          "Caching the layout files",
          "Intercepting the network calls",
          "What is Application Shell Architecture?",
          "Real World Example of AS"
        ],
        "Single Page Application and React Router.": [
          "General Intro To SPA",
          "Setting up React Router",
          "Closing the Side Navigation Automatically",
          "Side Note: Why we are using Incognito Tab?",
          "Creating Tech Product Home Page",
          "Exercise 1",
          "General Introduction to Product Hunt APIs"
        ],
        "Building Our Dynamic Content": [
          "Firing Ajax call using fetch",
          "Displaying the data onto the UI",
          "Adding loading Screen"
        ],
        "Making The Dynamic Content Work Offline": [
          "Saving the state into local storage",
          "Improving the look and feel.",
          "Caching the images dynamically",
          "Offline/Online Pop-Up Notifications",
          "Exercise 2",
          "Exercise 3"
        ],
        "Add To Home Screen": [
          "Setting up Android VM",
          "Doing the production build.",
          "Web App Manifest JSON",
          "Changing The Icon",
          "Upcoming"
        ],
        "Push Notifications": [
          "What is Push Notifications? A simple view.",
          "Technical Details Of Push Notifications",
          "Subscribing to user notifications",
          "Building the back-end.",
          "Connecting the front-end and back-end",
          "Listening for push events"
        ],
        "Source Code Link": [
          "Source Code Link"
        ]
      },
      "requirements": [
        "Basics of React",
        "Basics Of Javascript",
        "You need to know the basic of HTML, CSS"
      ],
      "description": "Have you ever thought about building web application that works offline? A web application that can be added to your smartphone’s screen? A web application that can send you push notifications on the fly? Web application that feels like Native mobile application? Yes, this is what we call as “Progressive Web Applications”.\nIn this course, we are going to build 2 applications, that will teach you the fundamentals and techniques behind building a Progressive Web Application. Yes, we are going to use React for the same! We will be using the latest React create-app for building our projects. All these projects are started from scratch!\nNote that, the course is not for learning React, but using React to build Progressive web application. Fundamentals of React and Javascript is required.  By the end of this course, you will be confident enough to understand the key concepts behind Progressive Web Application:\nService Worker\nApplication Shell Architecture\nOffline/Online Notifications\nAdd to “HomeScreen”\nCaching & Offline loading\nPush Notification\nand much more!\n\n\nSo, what are you waiting for? Sign up today and learn the cutting-edge technology.\n(Sign up this course and get 80% of on my next course on \"Jumpstart with NodeJS Streams\")",
      "target_audience": [
        "Students who want to build offline-ready web apps",
        "Students who want to build Progressive web application using React ecosystme",
        "Students who want to understand how Push Notification , Caching works in PWA"
      ]
    },
    {
      "title": "Full Stack developer course for Web Applications: Bootcamp",
      "url": "https://www.udemy.com/course/web-developer-course-bootcamp/",
      "bio": "Development course with HTML, JavaScript, PHP with MySQL database application development: Real-world approach",
      "objectives": [
        "Create websites and webapp",
        "Identify a case study to manage a project development",
        "Get a job as a junior web developer",
        "Create your own stunning, html layouts for awesome websites",
        "You will be strong on Full stack development on Coding and database",
        "Master front-end development using HTML & JavaScript back-end development using PHP & MySQL",
        "Add Client-Side scripting to create a Web Pages using JavaScript",
        "Apply HTML, JavaScript and PHP Beginner to start code on real-world tasks",
        "Create fully function dynamic web applications using PHP MySQL",
        "Learn What is Generative AI / Gen AI",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Get Course requirements",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "HTML": [
          "Introduction HTML",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "Overview of a Webpage",
          "Structure of a Full HTML Webpage",
          "First Hello World! Webpage"
        ],
        "HTML Basic": [
          "Heading tags",
          "Paragraph",
          "Formatting Text",
          "List Items Unordered",
          "List Items Ordered",
          "Classes",
          "IDs",
          "Comments",
          "Heading tags exercise"
        ],
        "HTML Intermediate": [
          "Images",
          "Forms",
          "Marquee",
          "Text area",
          "Tables",
          "Links",
          "Navbar - Menu",
          "HTML Entities",
          "Div tag",
          "Google Maps"
        ],
        "HTML Advanced": [
          "HTML Audio",
          "HTML Video",
          "Canvas",
          "Iframes",
          "Input Types",
          "Input Attributes",
          "Registration Form",
          "Contact Us Form",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "JavaScript Introduction": [
          "What is JavaScript",
          "Hello World Program",
          "Getting Output",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer"
        ],
        "JavaScript Basics": [
          "Variables",
          "Data Types",
          "Numbers",
          "Strings",
          "String Formatting"
        ],
        "JavaScript Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators"
        ],
        "JavaScript Conditional Statements": [
          "If-else statement",
          "If-else-if statement"
        ],
        "JavaScript Control Flow Statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Become a proficient full-stack web developer with the \"Full Stack Developer Course for Web Applications: Bootcamp.\" This immersive bootcamp is designed for those who want to gain in-depth knowledge of both front-end and back-end web development, equipping you with the skills to create complete, high-quality web applications. Whether you’re starting from scratch or building on your existing skills, this course will provide you with everything you need to become a well-rounded full-stack developer.\n\n\nStarting with the fundamentals, you’ll learn how to create responsive, user-friendly websites using HTML, CSS, and JavaScript. You'll then dive into front-end, which will help you build dynamic, interactive user interfaces. On the back-end, you’ll master server-side technologies like PHP, and learn how to manage databases (MySQL and SQL) to handle and store data efficiently.\n\n\nThroughout the bootcamp, you’ll work on hands-on projects that simulate real-world scenarios, such as building e-commerce platforms, social networking sites, and other complex web applications.\n\n\nlearn to take note and practice with real time scenario examples for your real skills\n\n\nBy the end of the course, you'll have the expertise to build, deploy, and maintain scalable web applications, preparing you for a career in full-stack web development.\n\n\nEnroll now and take the first step toward mastering full-stack web development for modern web applications!",
      "target_audience": [
        "Beginner HTML, JavaScript, PHP and MySQL developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": ".NET Core Web API, Vue JS & Microsoft SQL Full-Stack Web App",
      "url": "https://www.udemy.com/course/dot-net-core-web-api-vue-js-microsoft-sql-full-stack-web-app/",
      "bio": "learn to create a full stack web application from scratch using MS SQL, .NET Core API and Vue JS",
      "objectives": [
        "learn how to create a full stack web application from scratch using Microsoft SQL server for the database, .NET Core Web API for the backend, and Vue JS for the front end."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Environment set up": [
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install SQL Server Management Studio"
        ],
        "Backend : .NET Core Web API": [
          "Create DB Objects",
          "Web API Project",
          "CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API"
        ],
        "Frontend : Vue JS": [
          "Vue JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Sorting and Filtering"
        ],
        "Source Code": [
          "Source"
        ]
      },
      "requirements": [
        "basic html, css, javascript and c#"
      ],
      "description": "In this course, you will learn how to create a full stack web application from scratch using Microsoft SQL server for the database, .NET Core Web API for the backend, and Vue JS for the front end.\nWe will first install the necessary tools needed for the development.\nAnd then start with creating the necessary tables in Microsoft SQL server, then create the Web API project with the required rest API end points. Finally we will use Vue JS for creating the front end.\n> You will learn to create database tables in Microsoft SQL Server.\n> Create ASP .NET Core Web API project and understand the project structure.\n> Enable CORS and JSON serializer in the API project.\n> Implement CRUD APIs in API project.\n> Implement upload file API and store files in backend server.\n> You will learn how to add routing for our app using vue router.\n> Create bootstrap table and populate data by consuming the Rest APIs using axios.\n> Use axios to consume the REST Apis.\n> Add  bootstrap modal pop up windows with drop downs and date pickers.\n> We will also learn how to upload an image and store it in the backend server.\n> Learn to implement custom sorting and filtering features for the bootstrap table.",
      "target_audience": [
        ".net, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "Qwik For Beginners",
      "url": "https://www.udemy.com/course/qwik-course/",
      "bio": "An in-depth introduction to the Qwik Framework - decide if Qwik is right for you!",
      "objectives": [
        "Qwik components and component composition",
        "Understand in detail how Qwil works under the hood",
        "Qwik stores and the Qwik change detection system",
        "Qwik HTTP (resumable and non-resumable scenarios)",
        "Input properties and event handlers",
        "Styling Qwik components - scoped and non-scoped styles",
        "Common tasks: conditional rendering, rendering a list of elements"
      ],
      "course_content": {},
      "requirements": [
        "Previous knowledge of Javascript is needed",
        "Previous knowledge of other frameworks like Angular or React is not required",
        "Previous knowledge of Typescript is not required"
      ],
      "description": "This course is an in-depth introduction to the Qwik framework. It comes with a running Github repo.\nThis Course in a Nutshell\nQwik is a web framework created by the same creator as Angular and AngularJs, and it allows developers to create blazing-fast web applications.\nQwik is very similar to react in terms of its developer's experience,  due to the use of JSX and also because many of the Qwik API's have similar names to React.\nBut under the hood, it has a completely different and much more powerful engine.\nQwik provides us with server-side rendering out of the box, without any special extra configuration. But besides that, Qwik is the first resumable application framework, where we can create server-side rendered applications that will transfer their state automatically to the client, and resume their execution on the browser after the initial rendering on the server.\nQwik comes with a very innovative fine-grained lazy-loading mechanism, where lazy-loading is done automatically for us by the framework in a transparent way.\nWe as developers don't have to worry about server-side rendering anymore, Qwik will take care of that for us.\nAlso, Qwik comes with a brand new reactive change detection mechanism that is based on Javascript Proxies. This change detection has all the performance of an \"on-push\" style change detection system, without any of the drawbacks of having to use immutability libraries.\n\n\nCourse Overview\nIn this course, you are going to get an initial introduction to the Qwik framework fundamentals, starting with components and component composition. We are going to cover template expressions, input properties, event handlers and how to pass callback functions to a component.\nYou will also learn in detail how Qwik works under the hood. You are going to learn in detail the Qwik lazy-loading mechanism, and we will also cover the notion of QRLs.\nWe are then going to cover how to do some JSX-based tasks such as conditional rendering, or rendering a list of items.\nThen we will cover everything that you need to know about component styling, namely scoped and unscoped component styles, and how to conditionally add CSS classes or styles to a template element.\nWe are then going to have a full section on Qwik stores, and get the full picture of how to handle application data in Qwik using the useStore and useContext APIs.\nWe will also have a complete section on Qwik HTTP and the useResource API, where we will learn about a couple of common HTTP scenarios in Qwik: resumable HTTP and non-resumable HTTP.\n\n\nTable of Contents\nThis course will go over the following topics:\nQwik components and component composition\ninput properties and event handlers\nQwik under the hood, and QRLs\nQwik lazy loading\nCommon JSX tasks: conditional rendering, list rendering\nStyling Qwik components, conditional styles\nQwik Stores, Qwik change detection and the useContext API\nQwik HTTP (resumable and non-resumable scenarios)\nWhat Will You Learn In this Course?\nThe focus of this course is on covering the bread and butter of Qwik, so that you can start getting productive with the framework straight away.\nWe are going to focus only on the 20% of the features that you are going to be using 95% of the time, so that you can quickly start creating your own components and applications.\nHave a look at the course free lessons below, and please enjoy the course!",
      "target_audience": [
        "Software developers looking to learn the Qwik framework",
        "Developers trying to find if Qwik is the right choice for their project",
        "Angular, React and Vue developers looking to learn a new web framework"
      ]
    },
    {
      "title": "Angular JS with Sample Project (from Basic to Advanced)",
      "url": "https://www.udemy.com/course/angular-js-with-sample-project-from-basic-to-advanced/",
      "bio": "Learn Angular JS - Every module feature demonstrated with real-time examples",
      "objectives": [
        "Reduce the amount of code you write to build rich user interface applications.",
        "Increase the reliability and maintainability of UI by using data binding.",
        "Retrieve data from back-end server, manipulate it and display it with ease.",
        "Modularise your code with the custom services and directives.",
        "Providing two way binding of data.",
        "Create Single Page Applications (SPA)."
      ],
      "course_content": {},
      "requirements": [
        "A browser and a text editor",
        "Basic HTML and Javascript knowledge"
      ],
      "description": "C language which is considered the mother of all languages, is and will be the most sought after programming language for any beginner to jump start his career in software development. Not only does it help a beginner to understand what software programming is all about, it also gives an excellent platform to build programming skills for those who eventually want to learn modern languages like C# or Java for developing advanced level applications.\nBestDOtNetTraining's online training videos which include both the concepts and practical examples will help you learn the C language down to the minutest detail. Every topic in the course is covered in-detail along with sample programs and assignments (along with solutions).\nThis combination of concepts and practical is guaranteed to make you an expert on the language and will put you in a position to tackle even the toughest of interview challenges. And if that wasn’t enough, our course offering will also provide you a library of Interview Questions in each and every module of our \"C\" training program.\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nHe is always accessible to all his students anytime for any kind of question they may have. you can send him an email your queries at sandeepsoni@deccansoft.com.\nBy the end of this course you should able to\nUnderstand the purpose of programming.\nDownload and understand the role of IDE in writing \"C\" programs.\nGain knowledge about how one can write Software Programs.\nWrite interactive programs to perform input and output operations.\nApply logic using programming techniques & decision making statements.\nUnderstand the advantage of using Arrays and Pointers for handling large data.\nLearn how to break up a big task into smaller units using functions.\nUnderstand how memory can be dynamically allocated and de-allocated for pointers.\nPersist data of the program into data files for using at later point of time.\nCreate and process data in files using file I/O functions.\nRead and consume command like arguments in a program.",
      "target_audience": [
        "Web developers and designers looking to learn AngularJS",
        "Those who have researched AngularJS but still find it hard to understand",
        "Developers and designers who have used jQuery but are tired of doing everything manually"
      ]
    },
    {
      "title": "Sharepoint 2013 Development",
      "url": "https://www.udemy.com/course/sharepoint-2013-development/",
      "bio": "Sharepoint 2013 Development - complete guide",
      "objectives": [
        "Learning SharePoint Server API",
        "Customizing most widely used sections of the SharePoint (site collections,sites,lists, lists items, list queries, fields)",
        "Using CAML Queries and LINQ to fetch data from SharePoint lists.",
        "Understand features and executing custom code while features are activated and deactivating.",
        "Write code for custom event handlers.",
        "Building and deploying web parts.",
        "Develop custom workflow solutions for SharePoint.",
        "Using features and solutions for deploying projects in Microsoft SharePoint Server 2013.",
        "Developing Sandboxed solutions with limited access.",
        "Accessing external data using BCS.",
        "Develop custom Application Page with Client Side Object Model.",
        "Using RESTful and OData.",
        "Develop SharePoint Apps for different environments."
      ],
      "course_content": {
        "Introduction": [
          "IIS Introduction And Creating a New Website In IIS"
        ],
        "Important Terms and HTTPs": [
          "Important Terms and HTTPs"
        ],
        "Creating Users and Groups in Active Directory": [
          "Creating Users and Groups in Active Directory"
        ],
        "Introduction to SharePoint": [
          "Introduction to SharePoint"
        ],
        "Installing SharePoint 2013": [
          "Installing SharePoint 2013"
        ],
        "Creating Web Application and Site Collection": [
          "Creating Web Application and Site Collection"
        ],
        "Site Customization": [
          "Site Customization"
        ],
        "Subsite and Custom Site Templates": [
          "Subsite and Custom Site Templates"
        ],
        "Understanding Service Applications": [
          "Understanding Service Applications"
        ],
        "Server Object Model": [
          "Server Object Model"
        ]
      },
      "requirements": [
        "Basic knowledge of C# and ASP .NET is mandatory."
      ],
      "description": "Gone are those days when we used to manage all information in a  corporate manually. For every type of requirement we have different  solutions but integrating them is a big nuisance. SharePoint integrated  intranet, document management, content management is an excellent way to  find secure place to store, organize, share, and access information  from almost any device. To get started using the extraordinary features  of SharePoint all an associate in the organization need is just a  browser like IE or Firefox or Chrome. SharePoint is a pre-developed  ASP.NET application by Microsoft for managing day to day activities of a  corporate portal.",
      "target_audience": [
        "For those who want to shift their career from Web development to SharePoint Developement and SharePoint Administrator to SharePoint Developement"
      ]
    },
    {
      "title": "Build Ecommerce REST API with Django REST Framework & Python",
      "url": "https://www.udemy.com/course/build-ecommerce-rest-api-with-django-rest-framework/",
      "bio": "Build E-commerce REST API in Django & Django REST Framework with Postgres, Stripe, AWS, JWT, Deployment on AWS & more",
      "objectives": [
        "Understanding the folder structure of Django Project",
        "In-depth knowledge of Django REST Framework",
        "Connecting to Postgres Database",
        "Migrations & Making Migrations",
        "Implementation of Filters, Search & Pagination",
        "Implment CRUD Operations",
        "How to handle Error/Exceptions",
        "Learn how to upload Product Images on AWS S3",
        "All about Authentication with JWT",
        "How to Make Admin Only Routes",
        "Implement Forgot & Reset Password",
        "How to send emails to User",
        "Manage Reviews & User Orders",
        "Implementation of Payment Gateway like Stripe",
        "Deploying API on AWS Elastic Beanstalk"
      ],
      "course_content": {},
      "requirements": [
        "You should know basic of API",
        "You should know basic of database",
        "Basic Knowledge of API will be plus point"
      ],
      "description": "Are you ready to take your Django programming skills to the next level? Look no further than this comprehensive course on building REST APIs with Django & Django REST Framework. With step-by-step instructions, you'll learn how to design, build, and deploy RESTful APIs that can be integrated into any application or service.\n\n\nFrom authentication and authorization to serialization and validation, you'll gain a deep understanding of the key concepts that you need to succeed in modern web development with Django & Django REST Framework. You'll learn how to create APIs that are efficient, scalable, and secure, using the latest tools and techniques. Whether you're building a web application, mobile app, or any other type of software, REST APIs are a critical component of modern programming.\n\n\nIn this comprehensive Django course, you'll learn how to build an e-commerce REST API using Django REST Framework. Whether you're a beginner or a seasoned developer, you'll discover the key concepts, techniques, and tools to create a robust and scalable e-commerce API in Django.\n\n\nDjango REST framework is a powerful and flexible framework for building Web APIs. It is one of the most popular frameworks from Django, it is beginner-friendly and provides a lot of features. It has made life a lot easier with features like Serialization, Filtration, Pagination, Exception Handling, Validations, Authentication, and much more.\n\n\n\n\n===   Super Friendly Support   ===\nIf you ever get stuck in any problem, I'm here to unstuck you. I always respond as fast as I can. Because I know there’s nothing worse than getting stuck into problems, especially programming problems. So, I am always here to support you.\n\n\n\n\nBelow are some features that will add to this production-ready app:\n\n\nUnderstanding Folder Structure\nConnecting to Postgres Database\nMaking Migrations\nFilters, Search & Pagination\nError/Exception Handling\nUpload Product Images on AWS S3\nManage Product\nAuthentication & Authorization\nHandle Product Reviews\nForget & Reset Password\nManage Order Resource\nIntegrate Stripe for Payments\nDeploy API on AWS Elastic Beanstalk\n\n\nYou can watch the complete DEMO of this API in the course content. If you are ready to build Production-Ready, Scalable REST API in Django & Django REST Framework then I will see you in the course.",
      "target_audience": [
        "Anyone who whats to build API in Django",
        "Anyone who wants to master Django REST Framewoek",
        "Django Developers who want to enhance their skills in API building",
        "Anyone who wants to learn new technology"
      ]
    },
    {
      "title": "Selenium Webdriver with Java",
      "url": "https://www.udemy.com/course/seleniumbybhanu/",
      "bio": "Basics + Advance + Architect+TestNG+Jenkin+Github+Framework",
      "objectives": [
        "Once you finish this course with honesty you would be master in automation and you can crack any interview"
      ],
      "course_content": {
        "TestNG Tutorial": [
          "TestNG Introduction and Configuration in eclipse",
          "TestNG Annotations",
          "Assertions In TestNg",
          "Dependents on Method in TestNG",
          "DataProvider in TestNg",
          "Design TestNG xml to Run TestCases",
          "Grouping In TestNG",
          "Priority In TestNg",
          "Parameterization in TestNG using testng.xml",
          "TestNG Listeners",
          "Retry of Failed Test Cases in TestNG"
        ],
        "Selenium Locators": [
          "Types of Locators in Selenium",
          "How to Write X Path and CSS Selector",
          "X Path and CSS Locators",
          "Identify Child Locators through reference of Parent Node",
          "Following-Sibling, Preceding-sibling, Child, Parent Concepts in Selenium",
          "starts-with and ends-with locators in CSS and Xpath",
          "Automatic Way of Getting the X Path from Chrome Browser"
        ],
        "Selenium Webdriver with Java": [
          "Selenium webdriver architecture",
          "Webdriver API and Return Type",
          "Action Class Methods",
          "Select Class Methods",
          "How To SetUp Selenium Project",
          "How To enter Data in Textbox",
          "How to enter Data in Multiple textBox",
          "How to select Data from Select box.",
          "MouseOver In selenium",
          "Do MouseOver and Click On Link",
          "How to Work with Multiple windows",
          "Execute Script to show how Multiple window is handled",
          "How to Handel Calendar in Selenium",
          "How to Handel Calendar OR TextBox OR Select Box",
          "Execution of How to Handel Calendar OR TextBox OR Select Box",
          "How to Get Rows and Columns from Web table",
          "How to get Row Data From Dynamic WebTable.",
          "How to get Max Price From Dynamic WebTable",
          "Print All Data From Dynamic WebTable.",
          "How to get All Links From WebPage",
          "Radio Button and Auto Suggestion textBox in Selenium",
          "Execution of Radio Button and Auto Suggestion textBox in Selenium",
          "Checkbox in Selenium",
          "How to Verify Checkbox is checked or Not",
          "Add Cookie In selenium",
          "Delete Cookies In Selenium",
          "ScrollInSelenium Using JavaScriptExecutor",
          "ZoomIn ZoomOut In Selenium",
          "iframe In Selenium",
          "Handling of Alerts and JavaScript Alerts In Selenium",
          "JavaScript Executor In Selenium Lecture-1",
          "JavaScript Executor In Selenium Lecture-2",
          "Drag and Drop In Selenium",
          "Keyboard And Mouse Event In Selenium Lecture-1",
          "Keyboard And Mouse Event In Selenium Lecture-2",
          "Keyboard And Mouse Event In Selenium Lecture-3",
          "Verify Radio Button is Checked",
          "Verify Open And Collapse In Selenium"
        ],
        "Reporting, Logging and Excel Coding For Selenium": [
          "log4j Configuration With Selenium",
          "Extent Report In Selenium"
        ],
        "Page Object Model Design Framework": [
          "Page Object Model in Selenium Video-1",
          "Components Of Selenium Framework Video-2",
          "Project SetUp For Selenium Framework Video-3",
          "Package Structure of Framework Video-4",
          "Logger Helper In Framework Video-5",
          "Resource Helper in Framework Video-6",
          "Wait Helper in Framework Lecture-1 Video-7",
          "Wait Helper in Framework Lecture-2 Video-8",
          "Frame Helper In Framework Video-9",
          "Window Helper in Framework Video-11",
          "Java Script Helper in Framework Lecture-1 Video-11",
          "Java Script Helper in Framework Lecture-2 Video-12",
          "Retry Listener in Framework Lecture-1 Video-13",
          "Retry Listener in Framework Lecture-2 Video-14",
          "Verification Helper In Framework Video-15",
          "Assertion Helper In Framework Video-16",
          "Alert Helper In Framework Video-17",
          "DropDown Helper In Framework Video-18",
          "Excel Helper In Framework Lecture-1 Video-19",
          "Excel Helper In Framework Lecture-2 Video-20",
          "Excel Helper In Framework Lecture-3 Video-21",
          "Excel Helper In Framework Lecture-4 Video-22",
          "Browser Configuration Helper in Framework Video-23",
          "ExtentManager In Framework Video-23",
          "Extent Report Configuration With Framework Video-24",
          "Test Base Design For Framework Lecture-1 Video-25",
          "Test Base Design For Framework Lecture-2 Video-26",
          "Test Base Design For Framework Lecture-3 Video-27",
          "Test Base Design For Framework Lecture-4 Video-28",
          "Test Base Design For Framework Lecture-5 Video-29",
          "Test Base Design For Framework Lecture-6 Video-30",
          "Listener in Framework Video-31",
          "Test Base Integration with Extent Report Lecture-1 Video-32",
          "Test Base Integration with Extent Report Lecture-2 Video-33",
          "Data Base Helper In Framework Lecture-1 Video-34",
          "Data Base Helper In Framework Lecture-2 Video-35",
          "Data Base Helper In Framework Lecture-3 Video-36",
          "Page Object Design in Framework Lecture-1 Video-37",
          "Page Object Design in Framework Lecture-2 Video-38",
          "Page Object Design in Framework Lecture-3 Video-39",
          "Page Object Design in Framework Lecture-4",
          "Page Object Design in Framework Lecture-5",
          "Page Object Design in Framework Lecture-6",
          "Test Scripts Design Lecture-1",
          "Test Scripts Design Lecture-2",
          "Test Scripts Design Lecture-3",
          "Test Suite Design",
          "Configure TestNg SuiteFile in Pom.xml",
          "Data Driven Test Support to framework Lecture-1"
        ],
        "Selenium Interview Question and Answer Series": [
          "Selenium Interview Question and Answer Series-1",
          "Selenium Interview Question and Answer Series-2",
          "Selenium Interview Question and Answer Series-3",
          "Selenium Interview Question and Answer Series-4",
          "Selenium Interview Question and Answer Series-5",
          "Selenium Interview Question and Answer Series-6",
          "Selenium Interview Question and Answer Series-7",
          "Selenium Interview Question and Answer Series-8",
          "Selenium Interview Question and Answer Series-9",
          "Selenium Interview Question and Answer Series-10"
        ],
        "Github tutorial": [
          "How to Create Git Repository and Clone The project",
          "Install git Bash and Clone Project Video-1",
          "Import Maven Project to eclipse Video-2",
          "Git Commands to Add File in Remote Repository Video-3",
          "Git Command To Get file From Remote Repository Video-4",
          "Git Branching and Pull Request Lecture Video-5",
          "Get Master Branch Code to Local Branch in Git Video-6",
          "How to Resolve Conflict in Git Repository Video-7",
          "How to Save and See difference in Local Branch Video-8"
        ],
        "cucumber framework for selenium": [
          "What is Cucumber Framework",
          "V Tiger CRM Application Installation for Automation",
          "Cucumber Plugin Installation for Eclipse",
          "Add Required Dependencies for Selenium Cucumber Framework",
          "Create Package and Explain Feature file",
          "Create Feature File and Write Step definitions",
          "Test Runner Design in Selenium Cucumber",
          "Test Base Design For driver Object Creation",
          "log4j Support in Selenium Cucumber",
          "Design Selenium Cucumber Test Scripts and Reporting",
          "Page Objects Design in Selenium Cucumber",
          "Step Definitions Design For Login Script",
          "Create Feature file for Leads Creation",
          "Leads Page Step Definitions",
          "Feature File Executions and Assertion",
          "Capture Screenshot on Cucumber Test Failure",
          "Cucumber Test Report Analysis",
          "Leads Creation With data Table Cucumber"
        ],
        "Keyword Driven Framework For Selenium": [
          "Keyword Driver Framework Components Video-1",
          "Maven Project Setup For Keyword driven Framework Video-2",
          "HTML Utility Code For Keyword Driven Framework Video-3",
          "HTML Utility Code For Keyword Driven Framework Video-4",
          "Excel Code For Keyword Driven Framework Video-5",
          "Test Excel Code Video-6",
          "Test Base For Keyword Driver Framework Video-7",
          "Keywords Design in Keyword driven framework Video-8",
          "TestController Design in Keyword Driven Framework Video-9",
          "TestController Design in Keyword Driven Framework Video-10",
          "Keyword Class Modification in Keyword Driven Framework Video-11",
          "Test case Execution of Keyword Driven Framework Video-12"
        ],
        "Log4j Interview question and Answers": [
          "Log4j Interview question and Answers"
        ]
      },
      "requirements": [
        "Knowledge of Core Java and Eclipse Editor"
      ],
      "description": "Selenium WebDriver Training - Expert Level\n\nThis course will have all topics of selenium Webdriver and supported third party tool\nOnce you finish this Course, it will enable you to design framework and automation scripts.\nThis Course will have Selenium Webdriver with TestNG framework, Selenium Framework, Jenkin Installation, configuration and Github Repository.\nCourse Highlights\nTestNG framework\n\nSelenium Locators Writting\n\nSelenium Basic and Advance Scripting\n\nSelenium Reporting\n\nSelenium API\n\nLog4J\n\nExcel Tutorial\n\nProperties File Tutorial\n\nHybride Framework\n\nPage Object Model Design\n\nData Driven Framework\n\nCucumber framework\n\nMaven Tutorial\n\nGithub Tutoril\n\nJenkin Installation and configuration\nInterview Question and Answers",
      "target_audience": [
        "This course is good for a candidate who is looking a job in software automation area or whoever is planning to move in automation"
      ]
    },
    {
      "title": "Complete Full Stack Development with MERN",
      "url": "https://www.udemy.com/course/complete-full-stack-developement-with-mern/",
      "bio": "Everything You Need to Know to Get Started with MERN",
      "objectives": [
        "Students will master the fundamentals of the MERN stack, including MongoDB, Express js, React, and Node js.",
        "Students will be able to develop full-stack web applications with CRUD functionality.",
        "Students will implement user authentication and authorization using JWT and role-based access control",
        "Deploy and host MERN applications on cloud platforms like Heroku and AWS."
      ],
      "course_content": {
        "Module 1: Introduction and Setup": [
          "Course Overview and Community Introduction",
          "Development Environment Setup"
        ],
        "Module 2: Frontend Development with React.js": [
          "React.js Basics",
          "JSX and Props",
          "State in React js",
          "Hooks in React Js",
          "Use Effect Hook",
          "Use Context Hook",
          "React Routing",
          "Form Handeling and Validation",
          "Form Validation",
          "State Management with contaxt API",
          "React Redux"
        ],
        "Module 3: Backend Development with Node.js and Express.js": [
          "3.1 Backend Development with Node.js and Express",
          "3.2 Http server, URL, Method",
          "3.3 Express Js and REST API's",
          "3.4 Express Js and REST API's Part-2",
          "3.5 Middleware and Headers",
          "3.6 Introduction to MongoDB",
          "3.7 MVC (Model, View & Controler)",
          "3.8 User Authentication and Authorization",
          "3.9 User Authentication and Authorization part-2",
          "3.10 File uploads and Image handling",
          "3.11 Introduction to Websocket"
        ],
        "Module 4: Full-Stack Integration, Deployment, Testing, and Final Project": [
          "4.1 Project- Integrating Frontend and Backend",
          "4.2 Project- Integrating Frontend and Backend Part-2",
          "4.3 Project- Integrating Frontend and Backend Part-3",
          "4.4 Project- Integrating Frontend and Backend Part-4",
          "4.5 Project- Integrating Frontend and Backend Part-5",
          "4.6 Project- Integrating Frontend and Backend Part-6",
          "4.7 Project- Integrating Frontend and Backend Part-7",
          "4.8 Project Deployment"
        ]
      },
      "requirements": [
        "Basic understanding of HTML, CSS, and JavaScript.",
        "Familiarity with programming concepts such as variables, functions, and control flow.",
        "Access to a computer with an internet connection for downloading software and completing coding exercises."
      ],
      "description": "Course Description:\nGet ready to embark on an exciting journey into the world of full-stack web development.  Welcome to our comprehensive MERN Stack course, where you'll learn to build modern and dynamic web applications using MongoDB, Express js, React, and Node js. Whether you're a beginner or an experienced developer looking to expand your skillset, this course is designed to equip you with the knowledge and practical experience needed to excel in the ever-evolving field of web development.\n\n\nWhat You'll Learn:\nIn this course, you'll start by laying the groundwork with an introduction to the MERN stack, and understanding the roles of MongoDB, Express.js, React, and Node.js in web development. You'll then dive into setting up your development environment, learning how to install and configure the necessary tools and dependencies.\nWith the basics in place, you'll progress to frontend development with React.js, where you'll explore JSX, components, state management, and routing. You'll build interactive user interfaces and learn advanced concepts like form handling, state management with Context API, and integrating authentication.\nNext, you'll venture into backend development with Node.js and Express.js, where you'll build RESTful APIs, interact with MongoDB using Mongoose, and implement user authentication and authorization with JSON Web Tokens (JWT). You'll also explore file uploads, error handling, and other advanced backend techniques.\nAs you advance through the course, you'll integrate the frontend and backend to create full-stack applications, mastering concepts like CRUD operations, authentication strategies, and real-time communication with WebSockets. You'll also learn about deployment strategies and best practices for hosting your applications on cloud platforms like Heroku and AWS.\n\n\nImportant Topics Covered:\nFrontend Development with React js: JSX, components, props, state management, routing.\nBackend Development with Node js and Express.js: Building RESTful APIs, middleware, MongoDB integration with Mongoose, user authentication and authorization.\nFull-Stack Integration: Connecting frontend and backend functionalities, implementing CRUD operations, authentication strategies.\nReal-Time Communication: Introduction to WebSockets, implementing real-time features with Socket io.\nDeployment and Hosting: Deploying applications to cloud platforms, environment variables, securing keys.\n\n\nCourse Features:\nHands-on projects and coding exercises to reinforce learning.\nReal-world examples and case studies to apply theoretical concepts.\nQuizzes and assessments to test your understanding.\nInstructor support and a vibrant community for collaboration and networking.\n\n\nBy the end of this course, you'll have the skills and confidence to build your own web applications from scratch using the MERN stack. Whether you're pursuing a career in web development, starting your own projects, or enhancing your existing skills, this course will empower you to succeed in today's competitive tech landscape.\n\n\nEnroll now and unlock the door to endless possibilities in web development with the MERN stack!",
      "target_audience": [
        "Beginners with basic knowledge of HTML, CSS, and JavaScript eager to dive into full-stack web development.",
        "Students pursuing degrees or certifications in computer science or related fields seeking practical experience with the MERN stack.",
        "Web developers familiar with other stacks or frameworks looking to expand their skillset to include MongoDB, Express js, React, and Node js.",
        "Professionals transitioning into web development roles who want to build real-world, scalable web applications using modern technologies.",
        "Hobbyists and enthusiasts passionate about learning the latest trends and best practices in web development to create their own projects and portfolios."
      ]
    },
    {
      "title": "DevOps Fundamentals With Agile: Gain Solid Understanding",
      "url": "https://www.udemy.com/course/devops-core-fundamentals/",
      "bio": "Learn the fundamentals of DevOps methodology, continuous integration, build automation, quality assurance, with agile",
      "objectives": [
        "Be able to gain solid understanding of DevOps principles and methodology",
        "Learn DevOps lifecycle along with SDLC and DevOps culture",
        "Learn the role of QA in DevOps",
        "Gain additional tips and techniques in managing the DevOps cycle",
        "Learn Agile approach along with Lean and Kaizen topics relating to project management basics",
        "See how DevOps and Agile integrate to produce efficient processes and allow organizations to become profitable"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Meet your Instructor & Course Structure",
          "What Is DevOps & WIIFM? (What's in it for me?)",
          "Cultural Shift In DevOps",
          "State Of DevOps Report - 2018 By Puppet",
          "DevOps Core Values & Principles",
          "DevOps Methodologies",
          "DevOps Tools",
          "Kaizen Principles Apply To DevOps",
          "Lean-Agile In DevOps",
          "DevOps Automation",
          "Continuous Integration & Delivery",
          "Continuous Testing",
          "Release Management",
          "App Performance Monitoring"
        ],
        "Conclusion and Bonus Section": [
          "Value Of DevOps - Salary For DevOps Professionals",
          "Learning Resources"
        ]
      },
      "requirements": [
        "Basic knowledge of software and hardware including IT Networking fundamentals",
        "Knowledge of basic project management concepts is desirable",
        "A basic understanding of software development life-cycle would be helpful"
      ],
      "description": "DevOps Fundamentals With Agile: Gain Solid Understanding\nDevOps is the union of people, process, and products to enable the continuous delivery of value to end users. It aims to create a culture and environment where building, testing, and releasing software can happen rapidly, frequently, and more reliably, so you can innovate like a startup and scale for the enterprise. By taking this introductory DevOps course, you’ll be able to define DevOps, understand why you need DevOps, and learn how you can get started with DevOps. You’ll learn the key ideas and techniques to bring development and operations together to produce higher-quality software and deliver it more quickly.\nLearning Objectives:\nAfter completing this course, you will be able to:\nDefine DevOps and understand its Methodology and Principles\nDescribe how to unify processes and improve collaboration between development and operations\nIdentify core tools and values when incorporating DevOps practices\nExplain the key concepts and benefits of Continuous Integration (CI), continuous testing, Continuous Deployment (CD), and Build Automation\nLearn the Role of QA in DevOps along with Quality Assurance\nUnderstand Cloud containers and Server-less computing\nBe able to comprehend basic Project Management concepts and much more\nJoin thousands of other students and share valuable experience\nWhy take this course?\nAs a senior Project Manager & Enterprise Architect managing and deploying enterprise level IT projects, along with a Microsoft Certified Systems Engineer & Trainer, my experience with managing enterprise level projects has been phenomenally great! I am excited to share my knowledge and transfer skills to my students.\nEnroll now in DevOps Fundamentals With Agile: Gain Solid Understanding today and revolutionize your learning. Stay at the cutting edge and enjoy bigger, brighter opportunities.\nSee you in class\nSyed and Team ClayDesk",
      "target_audience": [
        "Anyone who wants to learn DevOps fundamentals and basic project management concepts",
        "Web developers, enterprise architects, programmers, IT professionals who wish to learn more about DevOps",
        "This course does not teach how to build CI/CD pipelines nor does it teach Docker and Kubernetes"
      ]
    },
    {
      "title": "Build 18 Real World JavaScript Development Projects Bootcamp",
      "url": "https://www.udemy.com/course/build-real-world-javascript-development-projects/",
      "bio": "Use Modern HTML5, CSS3, VanillaJs, Boots, JavaScript To build Responsive And Mobile Friendly Web Development project",
      "objectives": [
        "Project based teaching to sharpen your HTML, CSS & JavaScript skills",
        "Write clean, maintainable and performant Javascript code",
        "Modern Techniques and Tricks",
        "Projects with pure JavaScript, HTML5, CSS3 with all code provided",
        "Learn UI/UX practices to build responsive and mobile first web applications",
        "Become job-ready by understanding how JavaScript really works behind the scenes",
        "Build 18 beautiful real-world projects for your portfolio"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript"
      ],
      "description": "JavaScript is a text-based programming language used both on the client-side and server-side that allows you to make web pages interactive. Where HTML and CSS are languages that give structure and style to web pages, JavaScript gives web pages interactive elements that engage a user. Common examples of JavaScript that you might use every day include the search box on Amazon, a news recap video embedded on The New York Times, or refreshing your Twitter feed.\nIncorporating JavaScript improves the user experience of the web page by converting it from a static page into an interactive one. To recap, JavaScript adds behavior to web pages.\n\n\nWhat is JavaScript used for?\nJavaScript is mainly used for web-based applications and web browsers. But JavaScript is also used beyond the Web in software, servers and embedded hardware controls. Here are some basic things JavaScript is used for:\n\n\n1. Adding interactive behavior to web pages\nJavaScript allows users to interact with web pages. There are almost no limits to the things you can do with JavaScript on a web page – these are just a few examples:\nShow or hide more information with the click of a button\nChange the color of a button when the mouse hovers over it\nSlide through a carousel of images on the homepage\nZooming in or zooming out on an image\nDisplaying a timer or count-down on a website\nPlaying audio and video in a web page\nDisplaying animations\nUsing a drop-down hamburger menu\n2. Creating web and mobile apps\nDevelopers can use various JavaScript frameworks for developing and building web and mobile apps. JavaScript frameworks are collections of JavaScript code libraries that provide developers with pre-written code to use for routine programming features and tasks—literally a framework to build websites or web applications around.\nPopular JavaScript front-end frameworks include React, React Native, Angular, and Vue. Many companies use Node.js, a JavaScript runtime environment built on Google Chrome’s JavaScript V8 engine. A few famous examples include Paypal, LinkedIn, Netflix, and Uber!\n3. Building web servers and developing server applications\nBeyond websites and apps, developers can also use JavaScript to build simple web servers and develop the back-end infrastructure using Node.js.\n4. Game development\nOf course, you can also use JavaScript to create browser games. These are a great way for beginning developers to practice their JavaScript skills.",
      "target_audience": [
        "Beginners in JavaScript"
      ]
    },
    {
      "title": "Website Wireframing with HTML5 & CSS3",
      "url": "https://www.udemy.com/course/website-wireframing-with-html5-css3/",
      "bio": "Discover how to quickly mockup your web ideas!",
      "objectives": [
        "Learn how to rapidly build web layout wireframes"
      ],
      "course_content": {
        "Introduction": [
          "Welcome! Understanding Layout Wireframing",
          "Why Using Photoshop May Not be the Best Choice",
          "Using HTML & CSS for Fast Wireframe Compositing",
          "A Look At What We'll Build in this Course",
          "Bonus Lesson: How to turn any web page into a wireframe"
        ],
        "Getting Started": [
          "Setting Up the Rough Page Structure",
          "Building the Structural CSS Rules, Part 1",
          "Building the Structural CSS Rules, Part 2",
          "Connecting Up the HTML to the CSS",
          "Centering Layout Elements",
          "Setting Up Inner Layout Containers",
          "Inserting Additional Inner Containers",
          "Spacing Apart the Layout"
        ],
        "Wireframing The Header in Greater Detail": [
          "First Thing's First: Getting Organized",
          "Building the Logo Container",
          "Setting Up the Main Navigation Menu",
          "Creating A Call-To-Action Button"
        ],
        "Building the Rest of the Layout": [
          "Inserting the Hero Image",
          "Getting Started with the Hero Content",
          "Finishing Up the Hero Section",
          "Inserting the Feature Headers",
          "Building the Feature Boxes",
          "Wireframing the Organize Section",
          "Speeding Things Up for the Share Section",
          "Finishing Up the Wireframing"
        ],
        "Finishing Touches": [
          "Inserting A Placeholder Image",
          "Adding A Logo Placeholder with Text",
          "Inserting the Remaining Image Placeholders",
          "Inserting a Background Placeholder",
          "Adding Subtle Interactivity",
          "Adding Button Interactivity",
          "Finishing Touches",
          "Sharing the Wireframe for Review"
        ],
        "Wrapping Up": [
          "Where to Go From Here"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A basic understanding of HTML and CSS"
      ],
      "description": "Whether you’re an HTML veteran or just a beginner, this course is for you. Award-winning trainer Geoff Blake will walk you through the process of creating a website wireframe in just under three hours! This series of instructional videos will guide you through the process of creating the basic sections of your site, arranging and aligning text and images, and adding interactive features. Once you’re finished creating the wireframe, Geoff will show you how to put it online to share with coworkers and clients. After taking this course you’ll be able to build attractive and professional website prototypes in about an hour. The best part? Unlike a simple mockup in Photoshop, you can actually turn this wireframe into a fully-functioning website! Let Geoff Blake help you build your professional skills with this easy to follow course from Ten Ton Online.",
      "target_audience": [
        "Those wanting to learn how to build wireframe interfaces with HTML and CSS"
      ]
    },
    {
      "title": "Drupal from Basics to Advance with 3 Live Projects",
      "url": "https://www.udemy.com/course/advanced-web-development-with-drupal/",
      "bio": "A Complete guide to the Drupal CMS. How to develop Advanced websites using Drupal. Make 3 Projects live in this Course.",
      "objectives": [
        "Make an advanced web system",
        "To make a complete Learning Management System",
        "Make a community site.",
        "Create an online Assignments system.",
        "Create an advanced Image Galleries.",
        "Learn a powerful CMS"
      ],
      "course_content": {
        "Basics Of Drupal": [
          "Introduction To This Course",
          "Introduction To Drupal",
          "Setting Up Environment on Local System",
          "Configuration of PHP & MySQL",
          "How to make Databases in MySQL DB",
          "Introduction To FTP",
          "Working With FileZilla FTP",
          "Installing Drupal on Localhost",
          "Summary"
        ],
        "CREATING YOUR FIRST WEBSITE WITH DRUPAL": [
          "Drupal’s Terminology",
          "Core Functionality of Drupal ( Old )",
          "Core Functionality of Drupal ( New/Updated )",
          "Exploring the Admin Panel of Drupal",
          "What are themes in Drupal and how to Install them?",
          "What are Modules in Drupal and how to install Them?",
          "What are content Types and how to create Them?",
          "How to make different Access Levels in Drupal’s Site?",
          "Summary"
        ],
        "Create a Learning Management System(LMS) with Drupal": [
          "Why and How to Install Text Editors in Drupal?",
          "1# Blogging In Drupal – Creating Student & Teacher Blogs # Part - 1",
          "2 # Blogging In Drupal – Creating Student & Teacher Blogs # Part - 2",
          "Bookmarking In Drupal",
          "Online Assignment System with Drupal",
          "Extends Users Profiles",
          "How to Track Student’s Progress",
          "Summary"
        ],
        "CREATING a Multimedia WEBSITE WITH DRUPAL": [
          "Working with Multimedia in Drupal?",
          "Creating Audio Content Type in Drupal",
          "Working with Audios",
          "Creating Video Content Type in Drupal",
          "Using Drupal as a Video Hosting Platform",
          "Embedding Videos from External Sites",
          "Creating Image Content Type",
          "How to make an Image Gallery in Drupal?",
          "Summary"
        ],
        "CREATING a Community Building Website with Drupal": [
          "Community building with Drupal",
          "Some Great Community Building Ways",
          "Build Community through Forums",
          "Working with Advanced forum Module",
          "Social Integration in Drupal",
          "Social Sharing in Drupal Site",
          "Add a Live Chat System to Drupal Site"
        ],
        "Security in Drupal's Sites": [
          "Some great Ways to mantain the security of websites",
          "Add Captchas in Drupal Site",
          "How to stop spam users in your Drupal Site",
          "Update your Content"
        ],
        "Drupal Backups & Upgrades": [
          "Backups & Upgrades",
          "Why we need Bakups & Upgrades",
          "How to make Backups of Drupal's Sites",
          "How to recover Drupal website from backups",
          "How to upgrade Drupal Version",
          "Getting support from Drupal's community"
        ]
      },
      "requirements": [
        "HTML (Optional)",
        "Css (Optional)",
        "JavaScript (Optional)",
        "PHP(Optional)",
        "SQL (Optional)"
      ],
      "description": "Learning from very basic takes some time, but after the initial stages, you'll get it very easy, and it shouldn't take more than a month to master this program, the PHP web development is not that difficult to learn as shown on the web, but with a practical & positive approach, it gets very easier gradually.\nWhy should you learn Drupal?\nDrupal has become, over the past years, one of the most favorite CMS large corporations choose for their enterprise solutions.  The word spread out there says that Joomla has not yet fulfilled this space in some occasions.\nThere is demand for Drupal Pro's\nTake a look at the IT want-ads and they will tell you that big corporations and\nDrupal service integrator need Drupal pro's.  A good thing for Drupal\ndevelopers out there is that corporations are paying extremely well for\nexperienced web developers.\nAbout this Course:\nThis is the complete course about  drupal CMS, In this course we will cover everything about drupal ,We will built some professional sites with drupal, Also we will make an advanced online Learning Management System.\nAfter this course you will be able to create advanced and customized web Apps using Drupal.",
      "target_audience": [
        "Those wh are Beginners to Drupal.",
        "Those who have a basic understanding of Drupal.",
        "Those who want to become a professional web developer.",
        "who don't like to write long code scripts.",
        "who want to build their own website free of cost."
      ]
    },
    {
      "title": "Mastering MediaSoup: Live Streaming & Video Conferencing SFU",
      "url": "https://www.udemy.com/course/create-a-scalable-live-streaming-apps-with-mediasoup/",
      "bio": "Learn to build scalable real-time communication apps with MediaSoup for video conferencing and live streaming.",
      "objectives": [
        "Connect as many computers in a streaming call as you can manage!",
        "Understand the MediaSoup Architecture and Components",
        "Implement WebRTC Video and Audio Streaming with MediaSoup",
        "Troubleshoot Common MediaSoup Issues and Debugging Techniques",
        "Optimize Bandwidth and Quality with MediaSoup’s BWE"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Structure",
          "Class GitHub Repo",
          "Why do we need MediaSoup?",
          "What Can MediaSoup Do? Why An SFU?",
          "Glossary - refer as needed",
          "Whiteboard a MediaSoup Call",
          "My Development Setup/How I Do Node"
        ],
        "The Basics": [
          "Project 1 Demo",
          "Build our server, express, socket.io, https",
          "createWorkers, initMediaSoup, and config",
          "Create Router (w/MediaCodecs)",
          "Front-End Starter Files",
          "Init Connection to Server",
          "Create and Load Device",
          "Transport - Whiteboard Explanation",
          "Create Server Producer Transport (and Transport Docs)",
          "Create Client Producer Transport",
          "Connect Producer Transport And Produce",
          "Create Consumer Transport",
          "Consume!",
          "Debugging and Troubleshooting Your Connection",
          "Loading On Another Device",
          "Close connection - lots of options!"
        ],
        "Video Conferencing": [
          "Demo",
          "Front-end Setup With Vite",
          "Add Front-End Markup",
          "Create Server",
          "Connecting front-end and back-end",
          "Task List & joinRoom function/events",
          "Client Class",
          "Room class with its own worker and router",
          "Finish joinRoom event",
          "Load device on front-end",
          "Enable Feed",
          "Send Feed - Part1",
          "Create Transport Params On Server",
          "Create Producer (front-end)",
          "Connect and Produce Events",
          "Talk through application scenarios - consuming and dominant speaker",
          "Dominant Speaker",
          "Mute audio - Test Dominant Speaker",
          "Optional - Testing Your Connection With getStats",
          "Start Consuming Process - on joinRoom",
          "Request Transport - Consumer Updates",
          "Create Consumer - Front End",
          "consumeMedia - Server",
          "Connect(), consume(), and combine & display each stream (finally!!!)",
          "Handle activeSpeaker changes - mute",
          "Handle activeSpeakers changes - resume, create",
          "Front-end - New Active Speaker"
        ],
        "The Basics 2.0": [
          "getStats - Getting Data & Troubleshoot Workhorse (same as in Video Conferencing)"
        ],
        "Recording Video - Video Conferencing App Cont.": [
          "Front-end recording, generates a downloadable file"
        ]
      },
      "requirements": [
        "JavaScript and Nodejs are requested",
        "A computer with a webcam and mic",
        "We use socketio to build our signaling server. You must know it, or be able to follow me",
        "Exposure to networking",
        "Basic knowledge of WebRTC is highly recommended"
      ],
      "description": "Are you ready to create your own video conferencing or live streaming app? Whether you're looking to build a WebRTC-based solution or take your real-time communication skills to the next level, this course will show you how to leverage MediaSoup—the powerful framework designed to handle large-scale, high-quality video and audio communication!\nWhy MediaSoup? Traditional WebRTC is fantastic for peer-to-peer connections, but when it comes to scaling for multiple users, it falls short... not because it's lacking. It was never designed to do that! That’s where MediaSoup comes in. MediaSoup is the go-to solution for building scalable, reliable real-time apps that can handle hundreds or even thousands of users, with fine-grained control over each media stream. Whether you want to build a video conferencing app with hundreds of users or a live streaming app where one broadcaster streams to many, MediaSoup can handle it all.\nWhat You’ll Learn: In this project-based course, we’ll dive deep into MediaSoup and build a live streaming app from scratch. Along the way, you’ll learn how to:\nSet up and configure MediaSoup for real-time video and audio communication\nStream live video with scalable architecture using SFU (Selective Forwarding Unit)\nImplement key features like bandwidth management, dynamic stream adaptation, and network resilience\nTroubleshoot common issues and debug your application effectively using MediaSoup’s tools\nThroughout the course, you'll gain hands-on experience by building your own application, working through the official MediaSoup documentation, and learning best practices for scalability and performance.\nWho This Course Is For: This course is perfect for web developers, fullstack/Node.js engineers, and anyone passionate about real-time communication who wants to take their skills to the next level. You'll need to be familiar with JavaScript and Node.js, and we’ll work with socketio for signaling. Don’t worry if you’re not an expert—follow along, and you’ll have everything you need to succeed.\nWhy Choose This Course? When I first explored SFUs and MediaSoup, I found the resources scattered and confusing. This course cuts through the complexity, guiding you step-by-step as you build real-time communication apps. I've been a developer for over 20 years and have spent countless hours in this space. Let me help you gain the skills you need to build powerful apps that scale.\nBy the end of the course, you’ll have the knowledge and experience to build your own live streaming or video conferencing app using MediaSoup, and the confidence to tackle real-world challenges in video and audio communication.\nReady to dive in? Sign up today and start building your real-time app with MediaSoup!",
      "target_audience": [
        "Any developer interested in building a live streaming application!"
      ]
    },
    {
      "title": "Create your own Cryptocurrency & ICO Page with Solidity",
      "url": "https://www.udemy.com/course/create-your-own-cryptocurrency-ico-page-with-solidity/",
      "bio": "Become a Blockchain Developer by creating your own ICO-Cryptocurrency with Ethereum & Solidity - Tutorial 2019",
      "objectives": [
        "Create and design a fully-compliant ERC20 Token on the Ethereum Platform",
        "Smart Contracts in practice",
        "Understand the basic technology behind the blockchain and decentralized applications",
        "Understand the Ethereum Blockchain Platform (ether, gas, transactions, mining, addresses, etc)",
        "Create your own ICO-Webpage with ReactJS from scratch",
        "The fundamentals of the Solidity smart contract language"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Ethereum, Blockchain and Smart Contracts": [
          "What is Ethereum?",
          "What is a Blockchain?",
          "Difference: Bitcoin-Blockchain & Ethereum-Blockchain",
          "Download Metamask",
          "Buying Test-Tokens",
          "Writing our first Smart Contract",
          "Deploying Smart Contract with JavaScript VM",
          "Deploying Smart Contract with Injected Web3",
          "Creating the Variables for our ICO",
          "Basic Variables in Solidity",
          "Values of the Variables in the Constructor",
          "Buy Tokens Function - Payable",
          "Differences: Ether, Finney, Gwei, Wei",
          "Gas-System",
          "Differences: Payable & Return Functions",
          "Two More Functions",
          "End-Sale Function",
          "ERC20 Standard-Interface Implementation",
          "ERC20 Standard Explanation",
          "Buy Tokens Function & Events",
          "SmartContract - SourceCode"
        ],
        "Creating the ICO-Webpage with ReactJS": [
          "Requirements: Code-editor & Node.js",
          "Download ReactJS",
          "What is ReactJS?",
          "Creating the Navbar",
          "Styling the Navbar - Part1",
          "Styling the Navbar - Part 2",
          "Creating & Styling the Start-Component - Part1",
          "Creating & Styling the Start-Component - Part2",
          "The About-Component",
          "The Whitepaper-Component",
          "The Roadmap-Component",
          "The Contribute-Component",
          "The Team-Component",
          "React Scroll to Component",
          "Source Code - If you want to skip this lecture"
        ],
        "Combining the SmartContract & the Webpage": [
          "What is Web3?",
          "How can we deploy the SmartContract to the Blockchain?",
          "Compiling Solidity Code into JSON",
          "Ico.js",
          "Returning Values from Blockchain on our Webpage",
          "Returning Values from Blockchain on our Webpage - Part2",
          "Contribute to the ICO Part-1",
          "Contribute to the ICO Part-2",
          "Setting up Infura Provider",
          "Deployment with Truffle-HD-Wallet-Provider & Infura"
        ]
      },
      "requirements": [
        "A Mac or PC",
        "A basic understanding of Html, CSS, JavaScript & NPM will help"
      ],
      "description": "What is an ICO?\nAn Initial Coin Offering (ICO) is a fundraising mechanism in which new projects sell their underlying crypto tokens in exchange for bitcoin or ether. It's similar to an Initial Public Offering (IPO) in which investors purchase shares of a company. But an ICO is much, much easier to create and basically everyone is able to start an ICO.\nIn 2018 ICOs earned in total over 20.000.000.000$. Therefore an ICO is at that moment the most powerful kickstart for your business or App-idea in order to raise money from investors!\n\n\nWhat do we cover in this course?\nIn short: we will cover everything  you need to know in order to start with your own ICO-project. The course is structured in 3 major lectures:\n1. Ethereum, Blockchain and Smart Contracts:\nIn this lecture we will cover all the basic stuff you need in order to start writing your first Smart-Contract. We will learn for example:\nWhat is Ethereum?\nWhat is a Blockchain?\nCreating the ERC20 Token from scratch\nCreating the ICO-SmartContract\nDeploying SmartContracts to the Rinkeby Testnetwork\n\n2. Creating the ICO-Webpage with ReactJS\nWe will set up the ICO LandingPage for your ICO project. This lecture contains:\nWhat is ReactJS\nDownload & Installation of ReactJS\nCreating basic Html, CSS & JavaScript Code for the Webpage\n\n3. Combing the ICO-Webpage with the ICO SmartContract\nWe will cover here for example:\nWhat is Web3?\nHow to compile Solidity code into JSON\nSetting up Infura provider\nDeployment of Smart-Contracts with Truffle-HD-Wallet-Provider",
      "target_audience": [
        "Anyone who want to create their own ICO",
        "Programmers looking to leverage blockchain technology",
        "Programmers who want to start with Ethereum & Solidity"
      ]
    },
    {
      "title": "Blogging for Beginners with WordPress",
      "url": "https://www.udemy.com/course/blogging-for-beginners-with-wordpress/",
      "bio": "Create your own blog from scratch even if you are not technical or are afraid of math.",
      "objectives": [
        "Develop the confidence you can be a blogger, as long as you have something to say",
        "Create a blog online (using WordPress)",
        "Create new posts for your brand spanking new blog",
        "Add photos and videos to your blog",
        "Manage Comments on your blog, because hey this will be huge, right?",
        "Add new WordPress plugins to your blog to extend what it can do",
        "Change the look of your blog (with different WordPress themes)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "What is WordPress? Why Sould I Care?": [
          "What do I need on my computer?",
          "What life was like before WordPress",
          "Why WordPress?",
          "Why WordPress? part 2"
        ],
        "Getting Ready": [
          "Creating Your FIrst Post",
          "What is a Theme?",
          "What is a Plugin?"
        ],
        "Getting Started - Option 1 WordPress.com": [
          "Installing WordPress Self-Hosted",
          "Configuring WordPress",
          "Adding Basic Plugins",
          "Useful Plugins",
          "Jetpack and Akismet plugins"
        ],
        "Getting Started - Option 2 - WordPress.com": [
          "Getting a WordPress.com account",
          "Configuring WordPress.com"
        ],
        "Content Creation": [
          "Adding photos / images",
          "More on adding photos / images",
          "Adding YouTube videos",
          "What Makes A Good Blog Post"
        ],
        "Customization": [
          "Choosing a Theme",
          "Adding Other Users",
          "Comments",
          "Categories and Tags",
          "Adding Categories and Tags",
          "Adding Pages",
          "Menus",
          "Widgets",
          "Adding Google Analytics"
        ],
        "Security": [
          "Security"
        ],
        "Miscellaneous": [
          "SEO",
          "Improving SEO with Plugins",
          "Linking to Commercial Content"
        ]
      },
      "requirements": [
        "You should be able to know how to turn on your computer, get to a website (and hey you are here on Udemy!), and follow simple instructions"
      ],
      "description": "In this course you will learn how to setup your own blog from an award winning blogger Chris Christensen. We will use WordPress which is the most popular blogging software. You don't need to be a programmer, be technical or be good with math. You do need to be able to follow a set of instructions and you need to be able to get to the web... looks like you have that working.\nSet aside and afternoon, and follow along while you actually setup your website. Whether you use a blog to change your life and get invited to the White House (I did) or just use it to collect your thoughts, you can start today.",
      "target_audience": [
        "This course is intended for people who don't have a blog or who have one on some other software and want to move to the world's most popular blogging platform, WordPress",
        "This is not a get rich quick course. Blogging has been very very good to me, but it takes sustained effort",
        "If you can use a word processor like Microsoft Word then you are smart enough to learn WordPress"
      ]
    },
    {
      "title": "Ruby On Rails Web Development: To-Do List App",
      "url": "https://www.udemy.com/course/ruby-on-rails-to-do-list-app/",
      "bio": "Learn Ruby On Rails The Fast And Easy Way!",
      "objectives": [
        "Build Web Apps With Ruby On Rails",
        "Build Your Own To-Do List App",
        "Understand the Bootstrap CSS Framework",
        "Use Databases with Ruby on Rails",
        "Use Professional Webhosting For Rails Apps",
        "Understand C.R.U.D."
      ],
      "course_content": {
        "Setting Up The Development Environment": [
          "Rails Overview",
          "First Things First: How To Get Support Fast!",
          "Install Node.js",
          "Install Sublime and Git Bash Terminal",
          "Create SSH Key",
          "Install The Heroku Toolbelt",
          "Install Ruby on Rails",
          "Update!",
          "Create Test Project and Handle Errors",
          "Create New Project and Run Server",
          "Git",
          "Github.com"
        ],
        "Create A To-Do List App With Ruby On Rails": [
          "Rails Scaffold",
          "Database Migration",
          "Rake Routes and Views",
          "Root Route",
          "Views Walkthru",
          "Install Bootstrap CSS",
          "Bootstrap CSS Walkthru",
          "Styling Todo Items",
          "Strikethrough Text",
          "Creating Links",
          "Redirection",
          "Flash Messages",
          "Form On The Index Page",
          "Styling The Index Form",
          "Creating a Navbar",
          "Putting a Form on The Navbar",
          "Table Colors",
          "Style The Edit Page",
          "Delete Marked Items Button",
          "Delete All Items Button",
          "Checkbox Buttons"
        ],
        "Webhosting A Ruby On Rails App": [
          "Intro To Heroku Webhosting",
          "Pushing Code To Heroku",
          "Domain Names With Heroku",
          "Redirect To Root: Update Video",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You need a computer with Internet access",
        "No programming skills necessary to take this course but a little HTML and CSS would be helpful"
      ],
      "description": "Ruby on Rails can seem overwhelming at first, but it doesn’t have to be! In this Rails course I’ll walk you through it step by step and you’ll be building your first web app in MINUTES. You’ll be amazed how quick and easy it is to create very professional looking websites with Ruby on Rails, even if you have no programming or web design experience at all.\nWatch over my shoulder as I build a cool To-Do List app step by step right in front of you. You’ll follow along and build your own copy. By the time we’re finished, you’ll have a solid understanding of Ruby on Rails and how to use it to build awesome web apps.\nThe course contains 29 videos – and is just over 2 hours long. Watch the videos at your own pace, and post questions along the way if you get stuck. You don’t need any special knowledge or software to take this course, though any experience with HTML or CSS is a plus. You don’t even need to know the Ruby programming language. I’ll walk you through EVERYTHING.\nRuby on Rails is a great web development tool and learning it has never been this easy.\nWhat We'll Build...\nWe'll build a cool To-Do List app that let's you make lists and save them to a database. You can update items as you complete them to \"cross them off the list\".\nWe'll style the website using the popular Bootstrap CSS framework (I'll show you how to use it!)\n\n\nYou'll Learn How To...\nUse Git and Github for Version Control\nLeverage Ruby on Rails Scaffold\nMake a Database Migration\nUse Rake Routes and Views in Ruby on Rails\nCreate a Root Route\nBuild Pages (Views)\nInstall Bootstrap CSS For Ruby on Rails\nStyle Database Items\nUse Strikethrough Text for your list items\nCreating Rails Links\nManage Redirection\nCreate Flash Error Messages\nStyle The Index Form\nCreating a Navbar\nPut a Form on The Navbar\nChange Table Colors\nStyle The Edit Page\nBuild a Delete Marked Items Button\nBuild a Delete All Items Button\nUse Checkbox Buttons\nUse Heroku for Webhosting\nPushing Code To Heroku\nUse a Custom Domain Name With Heroku\nAnd More...\n\n\nThere's a reason why Ruby on Rails is so popular.  Find out why today!\n\n\nSign up today and I'll see you on the inside!\n\n\n-John Elder",
      "target_audience": [
        "This course is meant for absolute beginners who want to learn Ruby on Rails for Web Development",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "PHP Registration Form, Email Verification & Responsive Email",
      "url": "https://www.udemy.com/course/php-registration-form-email-confirmation-responsive-email/",
      "bio": "Object oriented PHP Registration & Login Form with Email Confirmation, Forgot Password & Responsive Email Template",
      "objectives": [
        "Modern UI Layout",
        "Object oriented programming",
        "PHP Custom Libraries",
        "Responsive Email Template",
        "Email Confirmation",
        "Forgot Password",
        "Complete Registration Form with Dashboard Settings"
      ],
      "course_content": {
        "Download Resources": [
          "Download Editor & Xampp Server",
          "Download Resource Files",
          "Run Final Project On Local Machine",
          "Optional - Send Email Confirmation Link from Local Host using 2nd Way"
        ],
        "Create & Design Layout": [
          "Section Intro",
          "Create Folder Structure",
          "Install Liver Server Extension",
          "What is CSS Variable & CSS Rem Unit ?",
          "Choose Google Fonts For Layout",
          "Create Navigation Bar",
          "Style Links",
          "Create Signup Form",
          "Style Signup Form",
          "Make Layout Responsive",
          "Create Login Form",
          "Create Forgot Password Form",
          "User Dashboard",
          "Style User Card",
          "Style Content Section",
          "Modify Profile Image and Buttons",
          "Create Update Password Form",
          "Create Add/Update Job Form",
          "Create Add/Update Skills Form",
          "Create Add Biography Form",
          "Create Custom File Input Field",
          "Show Image Name On Label",
          "Create Alert Messages",
          "Make The Layout Responsive"
        ],
        "Object Oriented Programming Basics": [
          "Section Intro",
          "What is Object Oriented Programming",
          "What is a Class ?",
          "What is $this Keyword ?",
          "Access Level Modifiers",
          "What is Inheritance ?",
          "What is Construct Method ?",
          "Static Methods & Static Properties",
          "Class Auto loading"
        ],
        "PDO Basics": [
          "Section Intro",
          "Create Database Connection",
          "Insert Data in Database",
          "Prepare Statement",
          "Update & Delete Records",
          "Fetch Data From Database Table"
        ],
        "Create Free Defined Classes & Library": [
          "Section Intro",
          "Create Database Connection",
          "Improve Database Connection",
          "Create CRUD Method",
          "Create Row Count Method",
          "Create Single Fetch Row Method",
          "Create All Fetch Rows Method",
          "Create Form Validation Library",
          "Split Rules",
          "Required Rule",
          "Error Label",
          "Alphabetic Rule",
          "Minimum Length Rule",
          "Unique Email Rule",
          "Fetch Input Field Values",
          "Set Form Values",
          "Explain Email Template",
          "Install Composer",
          "Install Email Library",
          "Send Email From Local Host",
          "Create Email Class"
        ],
        "Submit Registration & Login Form": [
          "Section Intro",
          "Create a New Table",
          "Register Form Templating",
          "Submit Register Form",
          "Style Error Class",
          "Fetch Data From Input Fields",
          "Insert User Data Into Database",
          "Send Confirmation Email Link",
          "Display Account Created Success Message",
          "Confirm User Email",
          "Style up Email Confirm Success Message",
          "Improve Message File",
          "Create Dashboard File",
          "Set Up Login Form",
          "Login Form Validations",
          "Solve Issues",
          "Login Form Submit",
          "Forgot Password Request Form",
          "Forgot Password Form Validation",
          "Send Forgot Password Email",
          "Forgot Password URL Checking",
          "New Password Form",
          "New Password Form Validations",
          "Update Password",
          "Unset requestUserId Session",
          "Show Dynamic Links",
          "Setup Upload Image Form",
          "Submit Image Upload Form",
          "Create Image Upload Library",
          "Upload Image",
          "Show Dynamic Profile Image",
          "Show First Two Characters From FullName Each Word",
          "Authorization",
          "Setup Update Name Form",
          "Submit Update Name Form",
          "Setup Add/Update Job Form",
          "Submit Add/Update Job Form",
          "Setup Add/Update Skills Form",
          "Submit Add/Update Skills Form",
          "Show Skills",
          "Setup Add/Update Biography Form",
          "Submit Add/Update Biography Form",
          "Show Dynamic User Biography",
          "Setup Update Password Form",
          "Submit Update Password Form",
          "Update Password",
          "Create Website Loader",
          "Hide Website Loader After 5 Seconds",
          "Optional - Modify Layout Design",
          "Check Final Application",
          "Final Message Congratulation"
        ]
      },
      "requirements": [
        "Basic PHP Knowledge is required",
        "You don't need any experience with object oriented programming"
      ],
      "description": "Registration Form is a compulsory part of any dynamic website, in this course, we are going to create a PHP registration form with email confirmation, forgot password, and responsive email template. They should be responsive it will open on desktops and mobile devices and it's very awesome besides that we will learn some more advanced PHP stuffs as well which are tags feature, profile image upload with the custom avatar, and much more. This course is for PHP beginners, you just need the basic knowledge of PHP and we will cover Object Oriented Programming fundamentals in this course we have a separate section for Object-Oriented Programming. For database communication, we will use PDO(PHP Data Object) which is a modern query language.\nWhy should I take the course?\nBecause in this course you will learn Object-Oriented Programming from scratch, and after we will create a project with Object-Oriented Programming as well besides that you will also learn modern CSS.\nSupport:\nIf you have any issue regarding the course you can ask the question in the QA section.\nWhat you will learn?\nHTML & CSS Build eye catch UI\nObject oriented programming fundamentals\nPDO (PHP Data Object) fundamentals\nDatabase library, form validations library & email library\nResponsive email template",
      "target_audience": [
        "Anyone who knows PHP and is looking to upgrade their skills"
      ]
    },
    {
      "title": "O365 SharePoint Online- Guide for Super Users and Developers",
      "url": "https://www.udemy.com/course/o365sharepoint/",
      "bio": "Learn SharePoint in Office 365 Online with the Modern UI Experience and latest features - with updated Audio",
      "objectives": [
        "O365 SharePoint Online - Modern Experience, Latest OOB features",
        "Creating SPFX Webparts and Deployment",
        "Overview of SharePoint Page Model - Master Pages, Page Layouts, Pages",
        "Search in SharePoint - Custom search page, Adding Search Results web part, Indexing, Refinement Panels",
        "Basic features of SharePoint - Site Columns, Content Types, Site Groups and Permissions",
        "Overview of SharePoint List and Libraries and Column Formatting",
        "Managed Metadata- Term store Management, Keywords",
        "Flows in SharePoint Online - Replacement of SharePoint designers",
        "REST APIs - How to create Urls for Add, Update, Delete, fetching more than 5000 records",
        "Managed Property and Crawled properties"
      ],
      "course_content": {
        "What is O365 SharePoint and the features of SharePoint": [
          "Overview of O365 SharePoint",
          "SharePoint List: Overview of List, List Columns, Version History,",
          "SharePoint List: Column Formatting, Views, List Templates",
          "Site Columns: Difference between List Column and Site Column, Benefits",
          "Content Types: Reusable Metadata, Benefits",
          "Site Groups and Permissions: Site Level, Subsite Level, List/Library Level, Item",
          "List Permissions- Break the inherited permission from List, List Item Permission",
          "Document Library: Versioning Settings, Check Out Features and other settings",
          "Assignment 1: Creating Lookup columns"
        ],
        "Out Of Box Features(OOB) of SharePoint Online - MMS, Search Service, Flows": [
          "Managed Metadata - Taxonomy,Term Store, Terms",
          "Managed Metadata Column, Navigation, Friendly Urls",
          "How to use Keywords in list, Search using Keyowords",
          "Creating custom Search Page using Page Layout, Overview of Page Model",
          "Managed Property, Mapping Crawled Property, Search Web Parts, Display Templates",
          "Setting Custom Search Page as a Default Page, Indexing of site",
          "Assignment 2: Add a refinement filter of document type."
        ],
        "REST in O365 SHarePoint": [
          "What is REST: Performing GET operation in IE and Console",
          "REST: fetching more than 5000 items; Common Queries in REST",
          "Assignment 3: Using REST API, fetch the items from the City List"
        ],
        "Flows in O365": [
          "Overview of Flow and Creating a flow from existing template",
          "Flows on Leave Request List",
          "Creating Flow from Blank Template",
          "Assignment 4: Create a Flow based when an item deleted from the list"
        ],
        "SPFX- SharePoint Framework": [
          "Introduction to SPFX : Gulp , Yeoman",
          "Creating your first SPFX Webpart",
          "SPFX: Adding the Dropdown Property",
          "Deploying the SPFX WebPart in SharePoint",
          "Deploying the SPFX WebPart in SharePoint - II"
        ]
      },
      "requirements": [
        "No prior knowledge is required",
        "Need SharePoint site to perform demos provided in the course",
        "Code Editor: Visual Code(Free)"
      ],
      "description": "O365 SharePoint: Learn OOB(OUT of the BOX) and advanced features of SharePoint with me. The course is for both users and developers who want to upgrade themselves in SharePoint. This course also targeted for those who are new in SharePoint and want to know more about SharePoint.\nI have covered all the demos in the modern view of SharePoint as future of SharePoint lies in the Modern SharePoint instead of Classic SharePoint.",
      "target_audience": [
        "To become SharePoint Super user",
        ".Net Developer who want to know about SharePoint",
        "SharePoint developer who want to learn about SharePoint Development",
        "Understanding the basic and advanced functionalities of SharePoint"
      ]
    },
    {
      "title": "Angular + TypeScript from Basic to Advanced + Live Project",
      "url": "https://www.udemy.com/course/angular4-typescript-from-basic-to-advanced/",
      "bio": "Learn all features of Angular (with TypeScript) and eventually perform CRUD operations using Angular and Web API",
      "objectives": [
        "Build real-world Web applications with Angular 4",
        "Master the best practices of Angular.",
        "Tools and tips to debug and troubleshoot errors."
      ],
      "course_content": {
        "TypeScript Introduction": [
          "TypeScript Introduction"
        ],
        "TypeScript-Basic Data Types": [
          "Basic Datatypes"
        ],
        "TypeScript-Destructuring & Spread": [
          "TypeScript-Destructuring & Spread",
          "Destructuring Objects",
          "Option And Default Parameters",
          "Spreads"
        ],
        "TypeScript-Working With Classes": [
          "Working with Classes and Objects"
        ],
        "TypeScript-Interfaces": [
          "Interfaces"
        ],
        "Typescript-Function Types": [
          "Function Types"
        ],
        "TypeScript-Modules": [
          "Modules"
        ],
        "Typescript-Namespaces": [
          "Namespaces"
        ],
        "TypeScript-Ambients": [
          "Ambient Declarations"
        ],
        "Angular-Introduction": [
          "Angular Introduction",
          "How To SetUp Local Development Environment"
        ]
      },
      "requirements": [
        "Basic Knowledge on JavaScript is essential. Visual Studio Code or any other IDE of your choice.",
        "You don't need to familiar with Angular 1"
      ],
      "description": "The course enables you to master front-end web development with Angular 4. It helps you gain in-depth knowledge of concepts.\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nHe is always accessible to all his students anytime for any kind of question they may have. you can send him an email your queries at sandeepsoni@deccansoft.com.\n\nWe also have a new course for Angular, named \"Angular7 and TypeScript - Complete course\". You can go through its Curriculum and decide which course would be beneficial for you.\nBy the end of this course you should able to\n\nUnderstand importance of Angular and its key features.\nLearn about the Angular Library and MVC framework\nCreate Controllers and share data between Controllers\nDependency Injection Concepts\nLearn Custom Directives, Filters and overview of Creating Routes\nDescription of Angular Modules\nDeploy Validations and Business Logic in Controllers\nIntegrating Angular with MVC Web API\nWork on real-time AngularJS 4 applications",
      "target_audience": [
        "Front-end developers who want to stay up-to-date with the latest technology",
        "Back-end developers who want to learn front-end development and become full-stack developers"
      ]
    },
    {
      "title": "AngularJS For ASP.NET MVC Developers",
      "url": "https://www.udemy.com/course/angularjs-for-aspnet-mvc-developers/",
      "bio": "The Fastest Way For .NET Developers To Add AngularJS To Their Resume",
      "objectives": [
        "Use Client side AngularJS in .NET project",
        "Effectively communicate between .NET and AngularJS"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Overview of AngularJS",
          "Interactive Code Snippets"
        ],
        "Kicking Off With Pure AngularJS": [
          "Introduction To AngularJS Client Side Scripting (Interactive Code)",
          "AngularJS Models (Interactive Code)",
          "Pure AngularJS Knowledge Check"
        ],
        "AngularJS And ASP.NET MVC": [
          "Interacting With .NET (project file attached)",
          "Round Trip Communications Between AngularJS To ASP.NET MVC",
          "AngularJS Model Knowledge Check"
        ],
        "A Little More AngularJS On The Client Side": [
          "Web Calls And Looping Through Collections (Interactive Code)",
          "Simple Technique For Showing & Hiding Elements Client Side (Interactive Code)"
        ],
        "Summary": [
          "Wrap Up"
        ]
      },
      "requirements": [
        ".NET",
        "Knowing AngularJS is not needed"
      ],
      "description": "AngularJS is one of the hottest and most in-demand web languages on the market. Be one of the only .NET developers on your team to posses this skill.\nIf you know zero AngularJS, you're the perfect student. In this course, you'll download AngularJS straight into your brain. In time, you'll fully understand how to use AngularJS client side and how to interact with .NET.\nWhile AngularJS 2 is now available, there are a ton of AngularJS 1 applications that need to be maintained and enhanced. Companies can take a while to move to a new technology. Especially when the upgrade is as night and day as it is between AngularJS 1 & 2. Meaning, AngularJS 1 development will continue to be an in-demand skill.\nBeef up your resume with AngularJS. You'll not only be able to talk the talk but this course with arm you with enough hands on experience that you will also definitely walk the walk.",
      "target_audience": [
        "Any .NET developer who wants to learn Angular"
      ]
    },
    {
      "title": "Learn Express",
      "url": "https://www.udemy.com/course/learn-express/",
      "bio": "Master Express - the fast and lightweight Node framework for building backend servers",
      "objectives": [
        "Implement a server with Express 4",
        "Understand and explain Express and Node's role in the ecosystem of the internet",
        "Use Mocha and Supertest to write tests for your Express apps",
        "Implement a RESTful API with Express",
        "Serve HTML and CSS files using Express",
        "Implement Express middleware including body-parser and Cors"
      ],
      "course_content": {
        "Introduction to Express": [
          "What is Express?",
          "How Express Works",
          "What We'll Be Covering In This Course",
          "Slides - What We'll Learn",
          "Express and Networking Basics"
        ],
        "Beginner Express Workshop": [
          "Hello World in Express",
          "Sending a JSON Response with Express",
          "Serving a Static Directory",
          "Understanding and Managing Post Requests",
          "Beginner Express"
        ],
        "Advanced Express Workshop": [
          "Routes in Express",
          "Cross-Origin Request Security (CORS)",
          "Build a RESTful API",
          "Testing an Express Application with Mocha and Supertest"
        ],
        "Conclusion": [
          "Course Review",
          "Continuing Learning",
          "Advanced Express"
        ]
      },
      "requirements": [
        "A text editor installed on your workstation (Brackets, Sublime Text or IntelliJ are suggested)",
        "You need sufficient administration priveleges on your computer to install Node.js. If you can't, have your administrator install Node and let you install NPM modules before starting"
      ],
      "description": "Express is an extremely powerful tool for creating web applications built on Node.\nJoin us for an action-packed series of video tutorials as we learn about how to use and implement the impressive Express library.\n- Install Express on your computer- Run a custom server- Understand requests and responses\nWe'll learn about many aspects of practical Express implementation over the course of over 13 videos and lots of other amazing course material.\n- Use GET and POST requests- Write and run tests with Mocha- Learn about RESTful APIs\nThis course teaches you EVERYTHING you need to know to use Express!\nExpress is an extremely practical tool, whether you're looking to use it for prototyping, hobbies or if you're looking to improve your qualifications to work in the field of Web Development, this is the course for you!\n- Over seven workshops and five lectures- Test your knowledge with challenging quizzes\nThis is an extremely practical and skills-oriented course. Take the next step to improving your web development skills today!",
      "target_audience": [
        "Beginners to internet networking and servers will find this course very informative",
        "Those already expert in Express 2 or 3 may benefit more just from reading the documentation",
        "Students coming from other languages (.NET, C#) should find this course informative but may wish to skip ahead to the workshop section",
        "Those who want to understand running servers with Node.js should enjoy this course",
        "Absolute beginners to programming may consider taking a beginner JavaScript course before taking this one"
      ]
    },
    {
      "title": "Wordpress For Complete Beginners No Coding Wordpress Course",
      "url": "https://www.udemy.com/course/wordpress-launch-your-site-fast/",
      "bio": "Learn Wordpress Design Wordpress Create With Wordpress Master Wordpress Skill Wordpress Build With Wordpress , Worpdress",
      "objectives": [
        "Setting up A Website In Wordpress",
        "Internet Connection Wordpress",
        "Setting up Worpdress",
        "Learn About All Webdesign Basics Wordpress",
        "What Wordpress is",
        "What a Content Management System is",
        "How To Create a Website With Wordpress",
        "Wordpress"
      ],
      "course_content": {
        "Getting Started": [
          "Best Fast Hosting"
        ],
        "Content Management System": [
          "What Is Wordpress",
          "The Wordpress Dashboard",
          "Installing Elementor And They Astra Theme",
          "how to create Pages",
          "how to install a Plugin",
          "how to install Wordpress",
          "install they Astra theme",
          "Setting up Homepage",
          "What is a theme",
          "What is a PLugin",
          "Installing A Theme",
          "Gutenberg",
          "The Media Libary",
          "Installing Classic Editor",
          "Stop Spam"
        ],
        "Design The Site": [
          "Design The Site",
          "Setting Up Homepage"
        ],
        "installing Gutenberg Blocks": [
          "How to use the theme Customizer",
          "Importing A Template Kit"
        ],
        "Marketing": [
          "What is Seo",
          "How to do Seo On a Post",
          "Website Traffic"
        ]
      },
      "requirements": [
        "Basic Computer Skills For Wordpress",
        "Internet Connection For Wordpress",
        "Some Motivation For Wordpress"
      ],
      "description": "WordPress has so much to offer. WordPress isn’t just a platform — WordPress is a full ecosystem. With WordPress, you can build client-ready websites, and with WordPress layout mastery, you’ll learn how to visually shape your WordPress pages. WordPress real projects give you hands-on experience, and WordPress zero coding means you can work with WordPress without needing technical skills. WordPress plugin optimization ensures your WordPress runs faster and more securely. Thanks to WordPress adaptive design, your WordPress site adjusts perfectly to any screen. With WordPress content blocks, you build modular WordPress pages, and WordPress element styling gives you full control over the look and feel of you\n\n\nWordPress page builder tips help you use WordPress more efficiently. WordPress WP themes unlock creative freedom within WordPress. With WordPress live preview, you instantly see your WordPress changes. WordPress domain setup and WordPress hosting integration make sure your WordPress site goes live smoothly. WordPress modern layout makes your WordPress site both attractive and functional. You’ll build a WordPress student portfolio and learn WordPress visual editing. You’ll earn a WordPress course certificate and master WordPress full site design. Through WordPress community access, you’ll get support and inspiration. WordPress lifetime updates keep your WordPress course fresh. You’ll explore WordPress marketing-ready strategies and WordPress next-gen design. WordPress creative freedom is central to this WordPress course.\n\n\nYou’ll also learn to work with WordPress no-code tools, so you can build WordPress sites without writing code. WordPress responsive websites ensure your WordPress content looks great everywhere. With WordPress visual builder tools like Elementor, you’ll create WordPress pages using drag-and-drop. WordPress SEO design helps your WordPress site get found online. WordPress user-friendly pages provide a smooth experience. WordPress fast loading keeps your WordPress site speedy. WordPress tutorials guide you step by step. You’ll need WordPress no HTML needed — everything is visual. WordPress mobile-ready means your WordPress site is optimized for phones. WordPress UI/UX ensures a great user experience. This WordPress course for beginners is ideal for anyone starting with WordPress.\n\n\nWordPress is flexible, WordPress is powerful, and WordPress is the world’s most widely used CMS. Whether you want to start a WordPress blog, build a WordPress store, or create a WordPress portfolio — WordPress makes it possible. With WordPress, you can integrate tools, connect WordPress to email marketing, and use WordPress for SEO. You can expand WordPress with plugins, customize WordPress with themes, and host WordPress on your own server. WordPress gives you control, WordPress gives you freedom, and WordPress grows with you.\n\n\nEvery WordPress course module is designed to deepen your WordPress knowledge. You’ll learn WordPress step by step, practice WordPress tasks, and build WordPress projects. You’ll discover how WordPress works behind the scenes, how to optimize WordPress, and how to use WordPress to reach your goals. WordPress is perfect for freelancers, WordPress is ideal for entrepreneurs, and WordPress is accessible to beginners. With WordPress, you can build your brand, share your message, and reach your audience.\n\n\nWordPress has so much to offer. WordPress isn’t just a platform — WordPress is a full ecosystem. With WordPress, you can build client-ready websites, and with WordPress layout mastery, you’ll learn how to visually shape your WordPress pages. WordPress real projects give you hands-on experience, and WordPress zero coding means you can work with WordPress without needing technical skills. WordPress plugin optimization ensures your WordPress runs faster and more securely. Thanks to WordPress adaptive design, your WordPress site adjusts perfectly to any screen. With WordPress content blocks, you build modular WordPress pages, and WordPress element styling gives you full control over the look and feel of your WordPress components.\n\n\nWordPress page builder tips help you use WordPress more efficiently. WordPress WP themes unlock creative freedom within WordPress. With WordPress live preview, you instantly see your WordPress changes. WordPress domain setup and WordPress hosting integration make sure your WordPress site goes live smoothly. WordPress modern layout makes your WordPress site both attractive and functional. You’ll build a WordPress student portfolio and learn WordPress visual editing. You’ll earn a WordPress course certificate and master WordPress full site design. Through WordPress community access, you’ll get support and inspiration. WordPress lifetime updates keep your WordPress course fresh. You’ll explore WordPress marketing-ready strategies and WordPress next-gen design. WordPress creative freedom is central to this WordPress course.\n\n\nYou’ll also learn to work with WordPress no-code tools, so you can build WordPress sites without writing code. WordPress responsive websites ensure your WordPress content looks great everywhere. With WordPress visual builder tools like Elementor, you’ll create WordPress pages using drag-and-drop. WordPress SEO design helps your WordPress site get found online. WordPress user-friendly pages provide a smooth experience. WordPress fast loading keeps your WordPress site speedy. WordPress tutorials guide you step by step. You’ll need WordPress no HTML needed — everything is visual. WordPress mobile-ready means your WordPress site is optimized for phones. WordPress UI/UX ensures a great user experience. This WordPress course for beginners is ideal for anyone starting with WordPress.\n\n\nWordPress is flexible, WordPress is powerful, and WordPress is the world’s most widely used CMS. Whether you want to start a WordPress blog, build a WordPress store, or create a WordPress portfolio — WordPress makes it possible. With WordPress, you can integrate tools, connect WordPress to email marketing, and use WordPress for SEO. You can expand WordPress with plugins, customize WordPress with themes, and host WordPress on your own server. WordPress gives you control, WordPress gives you freedom, and WordPress grows with you\n.\nEvery WordPress course module is designed to deepen your WordPress knowledge. You’ll learn WordPress step by step, practice WordPress tasks, and build WordPress projects. You’ll discover how WordPress works behind the scenes, how to optimize WordPress, and how to use WordPress to reach your goals. WordPress is perfect for freelancers, WordPress is ideal for entrepreneurs, and WordPress is accessible to beginners. With WordPress, you can build your brand, share your message, and reach your audience.\n\n\nWordPress has so much to offer. WordPress isn’t just a platform — WordPress is a full ecosystem. With WordPress, you can build client-ready websites, and with WordPress layout mastery, you’ll learn how to visually shape your WordPress pages. WordPress real projects give you hands-on experience, and WordPress zero coding means you can work with WordPress without needing technical skills. WordPress plugin optimization ensures your WordPress runs faster and more securely. Thanks to WordPress adaptive design, your WordPress site adjusts perfectly to any screen. With WordPress content blocks, you build modular WordPress pages, and WordPress element styling gives you full control over the look and feel of your WordPress components.\n\n\nWordPress page builder tips help you use WordPress more efficiently. WordPress WP themes unlock creative freedom within WordPress. With WordPress live preview, you instantly see your WordPress changes. WordPress domain setup and WordPress hosting integration make sure your WordPress site goes live smoothly. WordPress modern layout makes your WordPress site both attractive and functional. You’ll build a WordPress student portfolio and learn WordPress visual editing. You’ll earn a WordPress course certificate and master WordPress full site design. Through WordPress community access, you’ll get support and inspiration. WordPress lifetime updates keep your WordPress course fresh. You’ll explore WordPress marketing-ready strategies and WordPress next-gen design. WordPress creative freedom is central to this WordPress course.\n\n\nYou’ll also learn to work with WordPress no-code tools, so you can build WordPress sites without writing code. WordPress responsive websites ensure your WordPress content looks great everywhere. With WordPress visual builder tools like Elementor, you’ll create WordPress pages using drag-and-drop. WordPress SEO design helps your WordPress site get found online. WordPress user-friendly pages provide a smooth experience. WordPress fast loading keeps your WordPress site speedy. WordPress tutorials guide you step by step. You’ll need WordPress no HTML needed — everything is visual. WordPress mobile-ready means your WordPress site is optimized for phones. WordPress UI/UX ensures a great user experience. This WordPress course for beginners is ideal for anyone starting with WordPress.\n\n\nWordPress is flexible, WordPress is powerful, and WordPress is the world’s most widely used CMS. Whether you want to start a WordPress blog, build a WordPress store, or create a WordPress portfolio — WordPress makes it possible. With WordPress, you can integrate tools, connect WordPress to email marketing, and use WordPress for SEO. You can expand WordPress with plugins, customize WordPress with themes, and host WordPress on your own server. WordPress gives you control, WordPress gives you freedom, and WordPress grows with you.\n\n\nEvery WordPress course module is designed to deepen your WordPress knowledge. You’ll learn WordPress step by step, practice WordPress tasks, and build WordPress projects. You’ll discover how WordPress works behind the scenes, how to optimize WordPress, and how to use WordPress to reach your goals. WordPress is perfect for freelancers, WordPress is ideal for entrepreneurs,\n\n\nWordPress is flexible, WordPress is powerful, and WordPress is the world’s most widely used CMS. Whether you want to start a WordPress blog, build a WordPress store, or create a WordPress portfolio — WordPress makes it possible. With WordPress, you can integrate tools, connect WordPress to email marketing, and use WordPress for SEO. You can expand WordPress with plugins, customize WordPress with themes, and host WordPress on your own server. WordPress gives you control, WordPress gives you freedom, and WordPress grows with you",
      "target_audience": [
        "People that Don't Know How to Build a Website with Wordpress",
        "People that want to learn webdesign With Wordpress",
        "Wordpress For Beginners",
        "Anyone that want to learn Wordpress"
      ]
    },
    {
      "title": "Mastering Ruby On Rails 7 - The Complete Reference Guide",
      "url": "https://www.udemy.com/course/rubyonrails7/",
      "bio": "Learn Rails 7, ActiveRecordORM,ActiveJob, Turbo,Stimulus, API's, Authentication, Authorization-From Scratch Step By Step",
      "objectives": [
        "Learn How To Setup Development Environment for Ruby On Rails Development",
        "Understanding MVC Architectural Pattern",
        "Learn How to work with various Built-in Tag Helpers",
        "Learn How to Create Models, Controllers and Views",
        "Learn How to develop data driven Pages using Rails Active Record ORM",
        "Learn How to implement Pagination, Sorting and Filter functionality",
        "Learn How to perform Bulk Insert,Bulk Update and Bulk Delete Operations",
        "Learn How to export data to Excel,CSV,PDF formats",
        "Learn How to Perform Form Validations",
        "Learn How to implement Authentication and Authorization",
        "Learn How to Develop a REST API using RAILS",
        "Learn How to Consume a RAILS REST API"
      ],
      "course_content": {
        "Ruby On Rails - The Big Picture": [
          "Course Introduction",
          "Course Support for Learners",
          "Introduction To Rails Full-Stack Web Framework",
          "Installing Ruby",
          "What is GEM?",
          "Installing Rails",
          "Installing Ruby 3.3.5",
          "Installing Rails 7.2.1",
          "Installing an Editor",
          "Understanding MVC Architecture",
          "Complete Course Exercise Files"
        ],
        "Rails Application Request Response Life Cycle": [
          "Understanding Rails Request Response Life Cycle"
        ],
        "Getting Ready with Rails Sample Application": [
          "Creating Rails Application",
          "Creating Rails 7.2.1 Application",
          "Creating a New Controller with Actions",
          "Accessing Request QueryString Parameters",
          "Accessing Controller's Variables in Views",
          "Displaying Current Date and Time in View"
        ],
        "Working with built-in Helper Methods": [
          "Passing a Hash To View",
          "Working with IF In View",
          "Looping through with .each Method"
        ],
        "Debugging Rails Application": [
          "Using ViewHelper Methods to inspect variables",
          "Working with Debug Gem",
          "Working with web-console Gem"
        ],
        "Understanding Logging Mechanism": [
          "Logging Messages with various Log Levels"
        ],
        "Consuming RESTAPI": [
          "Consume RESTAPI and Render Data",
          "Consume RESTAPI and Render Data using Bootstrap Card Component",
          "Working with redirect_to, link_to",
          "Handling CheckBox Events using jquery-rails"
        ],
        "Setting Up SQLite3 Database for Rails Application": [
          "Configuring SQLite3 Database Adapter"
        ],
        "Setting Up SQL Server Database for Rails Application": [
          "Installing SQL Server 2022",
          "Installing SQL Server Management Studio",
          "Configuring SQL Db Adapter in Rails App"
        ],
        "Performing CRUD Operations using Rails ORM - ActiveRecord": [
          "Creating Models and Applying Migrations",
          "Performing CRUD Operations from Rails Console",
          "Displaying List Of All Employees",
          "Displaying Details of an Individual Employee",
          "Editing Details of an Employee",
          "Updating Data To Database Table",
          "Deleting an Employee",
          "Inserting a New Employee"
        ]
      },
      "requirements": [
        "Visual Studio Code Editor, Ruby, Rails",
        "Basic Knowledge of Ruby,JavaScript,jQuery,CSS,Bootstrap",
        "Basic Knowledge of any SQL Database"
      ],
      "description": "Rails is Server side Web Application Development framework, written in Ruby.\nRails makes it easier to create dynamic web sites using Ruby.\nRails follows the MVC Architectural Design Pattern (Model View Controller). Rails  was designed to help developers take applications from concept to completion as quickly as possible.\nWith Rails, you can take web applications from concept to launch in a matter of hours. Rails takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel.\nRails follows the principle of reducing repetition of information or code, promoting efficient development.\nRails introduces the Active Record framework, which allows developers to design interactive database queries.\nThis course provides developers with a thorough knowledge in developing Web Applications using Rails MVC architectural Pattern.\nIn this course by development expert Kameswara Sarma Uppuluri, you'll learn all, essential concepts that you need to know to build Modern Web Applications using Rails 7.0.\nThis course provides step-by-step walk-throughs and coding demos that you're encouraged to code along with to enhance the learning process.\nThis course is broken down into 36 Modules with each module providing source code so that you can follow along with Kameswara Sarma Uppuluri.",
      "target_audience": [
        "This course is for all web developers who want to learn Ruby On Rails or enhance their existing Ruby On Rails skills to the next level."
      ]
    },
    {
      "title": "Modern Frontend Web Development: Angular, Javascript JS",
      "url": "https://www.udemy.com/course/modern-web-development-from-zero-to-advanced/",
      "bio": "Advanced modern web development with Angular, JavaScipt JS, Bootstrap, HTML CSS. Become Front end web development master",
      "objectives": [
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap",
        "Learn Bootstrap 4 and UIs from scratch",
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Learn to compile Sass in the easiest way possible using a GUI",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "You will learn to use basic tags which are used commonly",
        "You will be able to prepare lists in different formats",
        "You will be able to create commonly used user login and registration pages by learning the form structure",
        "In the developing world, we will talk about all the details about web design compatible with different screens.",
        "CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field.",
        "Some web developers will obtain a degree or certification in the field.",
        "Each aspect of creating websites and applications entails a unique set of skills.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting making it very important language for web developer",
        "JavaScript is a text-based programming language used for client- and server-side development.",
        "Choosing the best JavaScript framework for your web project depends on what you are looking for.",
        "HTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "HTML is not considered a programming language but rather a markup or formatting language.",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "React is a front-end library in Javascript that was developed by Facebook.",
        "React, or React JS, is a front-end Javascript library for building UI components for the web.",
        "There are many reasons why React is popular. One reason is that Facebook developed it."
      ],
      "course_content": {
        "Introduction to advanced web development course": [
          "What is Internet and HTML ?",
          "Project Files and Course Documents",
          "Basic Tags",
          "Images and Attributes in HTML",
          "Lists in HTML",
          "List Example",
          "Block Level - Inline Elements in HTML",
          "FAQ about Full stack web development with javascript, css, html",
          "HTML Quiz"
        ],
        "Let's Learn More Complex Topics in HTML": [
          "Tables in HTML",
          "Table Example in HTML",
          "Forms in HTML",
          "Forms Example in HTML",
          "HTML Quiz"
        ],
        "CSS": [
          "CSS Basics",
          "CSS Colors",
          "Background and Border",
          "Selectors",
          "CSS Quiz"
        ],
        "Intermadiate CSS": [
          "Text and Fonts",
          "Debugging in CSS",
          "Box Model",
          "CSS Position",
          "CSS Float",
          "Display Property",
          "Box-Model Practice",
          "Float-Layout Practice",
          "Box-Sizing",
          "Media Queries",
          "CSS Quiz"
        ],
        "Flexbox and Grid For CSS": [
          "Flexbox Introduction",
          "Flexbox Properties 1",
          "Flexbox Properties 2",
          "Flexbox Properties 3",
          "Grid CSS Intro",
          "Grid CSS",
          "Grid CSS - 2",
          "Grid CSS - 3",
          "Grid CSS - 4",
          "Grid CSS - 5",
          "Grid and Flexbox Project",
          "Grid and Flexbox Project - 2",
          "Grid and Flexbox Project - 3",
          "Grid and Flexbox Project - 4",
          "Flexbox Quiz"
        ],
        "Bootstrap": [
          "What is Bootstrap?",
          "Including Bootstrap in the Project",
          "Web Design",
          "Bootstrap Quiz"
        ],
        "Introduction To Bootstrap": [
          "Nav Bar",
          "Grid System",
          "Header Section",
          "Our CSS File-1",
          "Our CSS File-2",
          "Font Awesome and Features Section",
          "Font Awesome and Features Section-2",
          "Bootstrap Quiz"
        ],
        "Intermediate Bootstrap": [
          "Bootstrap Modals",
          "Modals-2",
          "Bootstrap Cards",
          "Bootsrap Cards Part 2",
          "Carousel 1",
          "Carousel 2",
          "CSS Z-Index",
          "Z-Index Our Project",
          "Image Gallery",
          "Forms",
          "General Changes",
          "General Changes - Part 2",
          "Bootstrap Quiz"
        ],
        "JavaScript": [
          "Introduction to JavaScript",
          "Setup Visual Studio Code",
          "Adding js File",
          "quiz"
        ],
        "Language Basics in Javascript": [
          "Variables and Data Types",
          "Type Coercion",
          "Variable Mutation",
          "Basic Operators",
          "Boolean Logic",
          "Logical Operators",
          "quiz"
        ]
      },
      "requirements": [
        "No prior knowledge neededfor HTML, CSS, Javascript, Bootstrap and angular",
        "You will be learning from scratch",
        "This course will take you from scratch to the advanced level",
        "Computer with access to the internet",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "You will be learning Full Stack web development from scratch to master degree",
        "Desire to learn javascript",
        "Desire to learn HTML & CSS",
        "Desire to learn angular",
        "Desire to learn web development with react, react native, html, css, bootstrap",
        "Desire to learn bootstrap for web design, website development",
        "Desire to learn grid css",
        "Desire to learn html, css, bootstrap"
      ],
      "description": "Hello there,\nWelcome to Modern Frontend Web Development: Angular, Javascript JS course.\nAdvanced modern web development with Angular, JavaScipt JS, Bootstrap, HTML CSS. Become Front end web development master\nThis course will be your gateway to learn web design with blank HTML, CSS, and JavaScript files with a step-by-step approach.  We can assure you that only this course will enough for you to learn Web Development from scratch to intermediate.\n\nJavaScript is the number one programming language for internet applications. During our course, you will be informed about the basics of JavaScript in detail and how to solve problems. Here's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.Full stack web developer, Angular, Full stack web development 2021 guide with nodejs & mongodb, Full stack, Full stack web developer, Nodejs, Node js, Web development, Oak Academy, React, Full stack development, Fullstack web development, fullstack, full stack javascript, javascript, full stack web development 2021, bootstrap, reactjs, full stack web development angular\nWhether you’re interested in mastering responsive web design, creating WordPress templates using Bootstrap, or integrating Bootstrap with HTML5, and CSS3, Udemy has a top-rated course to help you achieve your goals.\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML.\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work, and is rightfully considered a cornerstone of internet technology.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills.\nThis course will be your gateway to learn web development from scratch.\nThis course will take you from a complete beginner to a master in hours! By the way, you do not need to know anything about this course.\nWe'll be moving rapidly to give you the quickest, yet most thorough website building experience.\nIn this course, we have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an HTML page associated with it and has a start state.\nWith this course, you will improve your Bootstrap experience with HTML5 and CSS3 codes\nThis course will take you from a complete beginner to a Master level in hours! By the way, you do not need to know anything for this course.\nWe'll be moving rapidly to give you the quickest, yet most thorough Bootstrap website building experience.\nIn this course, we have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an HTML page associated with it and has a start state. As we move along through the lectures, you code along with us while learning all that web development offers including helpers/utilities, components, widgets, grid, and more.\nThe most important feature that distinguishes this course from the others is that it deals with the most basic issues about JavaScript in detail and helps students to put what they have learned in theory into practice.\nIn our course, you can test what you have learned on both MAC and Windows computers. You do not need to purchase any tools or applications as free tools and platforms are used.\nDuring the course, I made sure to explain all the topics that may seem complicated to you in as simple and detailed as possible. I have used some diagrams to help you understand better.\nThis course will take you from a beginner to a more experienced level. You will learn HTML5, CSS3, Bootstrep, JavaScript and Angular step by step with hands-on examples.\nIn this course you will learn;\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nHow you can operate on variables,\nBoolean logic,\nHow to create a conditional statement,\nHow you can perform transactions with Loops,\nHow a function is created and why it needs arguments,\nHow Arrays and Objects, which are basic data structures, are created,\nHow DOM Manipulation is done,\nYou will have learned and have the opportunity to test what you have learned with the code quizzes in our course.\nFull stack web development\nWeb development\nFront end web development\nFull stack web development\nFull stack developer\nfull web development\nHtml css javascript\nWeb developer\nFull stack\nFull stack web development\nWeb development\nFront end web development\nFull stack web development\nFull stack developer\nPhp, Fullstack Web development\nHtml css javascript\nWeb developer\nFull stack\nBootstrap\nBootstrap 4\nBootstrap 3\nBootstrap 5\nHtml csss bootstrap\nBootstrap wordpress\nBootstrap studio\n\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhat is AJAX and what is it used for?\nAJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications. AJAX uses XHTML for content, CSS to style the page, and JavaScript for controlling content dynamically. AJAX allows you to update a web page without reloading the page (this technique is called a “SPA” or Single Page Application), request data for the page after it has loaded, receive data after the page has loaded, and send data to the server in the background. Despite XML being part of the acronym that makes up AJAX, AJAX can send and receive data in any format, including JSON or plain text. While traditional web applications use synchronous methods to send and receive information from a web server, AJAX can use asynchronous API calls in the background without blocking activity in the browser. AJAX is a data-driven rather than a page-driven technology.\nHow can I teach myself Javascript?\nOne of the best ways to learn to write code is through an online course that teaches you how to write JavaScript with an instructor that will explain the code, what versions you should use, and why. Learning to develop a real-world application, with an instructor explaining in a step-by-step fashion, will teach you modern code techniques.\nWhat is the best IDE for Javascript?\nWith all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences. Webstorm is a popular JavaScript IDE from JetBrains. It provides fast static code analysis, integrated testing, local history, code refactoring, and debugging. While the IDE requires a paid subscription, many developers swear by it because of its compatibility with JavaScript, HTML, and CSS. Those searching for a free option might prefer VS Code. This general-purpose, open-source IDE comes with IntelliSense, Git integration, and debugging features built-in. Many third-party extensions are available to add new language and programming features, making it one of the more flexible choices. Atom is another general-purpose IDE that is popular with JavaScript developers. It is also free, open-source, and has third-party extensions to add.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is an HTML element and why is it important?\nHTML is designed on a modular basis, meaning every part of the web page has a specific “place.” An HTML element is a part of the page. Common HTML elements include “<p>” for a “paragraph” and “<title>” for the “title” of the page. In fact, the entirety of the HTML page is within the “<html>” element. Elements are begun and ended with tags, so a title would be written: “<title>This is the Title to the page.</title>” Organizing code this way makes it easier to reference and control. Each element may also have characteristics. For instance, the “<p>” (paragraph) tag can be aligned in a certain direction. These are the basic building blocks of HTML and what most designers should learn first.\nIs HTML a programming language?\nHTML is not considered a programming language but rather a markup or formatting language. This is an important distinction. Formatting languages merely control how things are displayed on a visual level, whereas programming languages are more dynamic; they use logic gates to determine the behavior of a program. But there is some crossover. “DHTML,” for instance, refers to Dynamic HTML. It is a type of HTML augmented by Javascript to make it easier to adjust on the fly. Because HTML, Javascript, and CSS are so frequently used together, they can often be folded together, which can contribute to some confusion regarding whether HTML is a programming language.\nIs HTML hard to learn?\nHTML is known as one of the easiest languages to learn. It’s also one of the most ubiquitous. Many individuals interested in front-end, back-end, or full-stack development will learn HTML first. While HTML is largely intended for websites as a language, it is also used in many other programs. For example, when you create an email signature, you will usually be using HTML. Emails themselves use a combination of HTML and CSS. An advantage (and an occasional double-edged sword) to HTML is that it is very forgiving. You can get some HTML wrong, and your page will still be displayed, if not exactly how you want it to be.\nWhat jobs use HTML?\nNearly any development or design job will require a cursory understanding of HTML. HTML has also evolved dramatically since it was originally developed; it is far more complex and standardized than before. Because of this, even those who have been experts in HTML during their career may need to undergo an HTML refresher periodically. Most jobs that require HTML will involve web design, web development, or layout and design. For example, someone who manages a content management system such as WordPress may not need to know any other programming languages but should still know HTML basics. Similarly, someone who formats online newsletters or an online magazine in an administrative capacity may not need to be a web designer or web developer but might need to understand the principles of HTML.\nWhat is responsive design?\nResponsive design is a new type of design intended to respond to the platform and environment that a user is on. When HTML was created, most people used PCs. Today, people can browse a website on a PC, phone, tablet, or even a game console. In the past, developers created separate sites for “desktop” and “mobile.” While it worked, it wasn't easy to maintain. Rather than creating separate sites, responsive design generates the site based on the environment it detects. This greatly reduces the amount of development and maintenance for the site. Responsive design is generally achieved with a combination of HTML, CSS, and Javascript.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat skills should I have before learning CSS?\nBefore learning CSS, you should know the basics of using a computer and how to use a text editor because that is where you will be writing CSS. You should also be familiar with web browsers for browsing the web because it will inform your use of CSS. Since you may end up using specialized tools to write CSS, you should know how to install software on your computer and create and manage files and folders on your computer so you can create a CSS project. Once you have those skills down, the next thing to learn is HTML; after all, CSS is nothing without an HTML page to apply styles. That should be the basics you need to know to get started with CSS.\n\nNo prior knowledge is needed!\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel our seasoned instructors' expertise.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now Modern Frontend Web Development: Angular, Javascript JS course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5, CSS 3, Bootstrap 4, JavaScript and Angular the first step in web development, completely and easily, you are at the right place.",
        "People who are willing to make a career in the Web Development",
        "If you want to building your own website, you should enroll",
        "Students who want to learn how to build fast single page web apps",
        "Anyone planning a job transformation and wants to become a Web developer",
        "Anyone who wants to become an Angular Developer",
        "Students who want to learn how to build fast single page web apps",
        "Anyone planning a job transformation and wants to become a javascript developer",
        "Anyone looking to build a career as a Angular developer",
        "People who want to become web development with html, css, javascript, bootsrap and angular",
        "People who want to learn front end web development",
        "People who want to learn backend web development",
        "People who want to learn full stack web development",
        "People who want to learn website development",
        "People who want to become mern stack developer and create real work react projects, javascript projects, web application"
      ]
    },
    {
      "title": "Booking System in Laravel With Hybrid Mobile Version",
      "url": "https://www.udemy.com/course/booking-system-in-laravel-5-with-hybrid-mobile-version/",
      "bio": "Advanced Web Development with Laravel (nice PHP framework) by creating Web App - Reservation System with Mobile Version",
      "objectives": [
        "You will get familiar with the very popular PHP framework - Laravel",
        "You will build from scratch an advanced web application in the Laravel framework - booking system",
        "You will build a hybrid mobile version of the Internet application for mobile phones",
        "You will get a very good and complex practical exercise by building two versions of the application: Internet and hybrid mobile",
        "You will be navigated through the process of creating an advanced application by touching many aspects of the full-stack web developer work: not only PHP and Laravel but also frontend technologies",
        "You will learn the methodology of working on the creation of the application: from the html template to the finished project",
        "You will achieve the advanced level of web application development in the Laravel framework",
        "You can put a project from the course to your portfolio and show it in your CV",
        "You will learn about important Laravel topics such as service container and service providers",
        "You will learn the object-oriented Java Script, thanks to which the jQuery code will be better organized and more readable",
        "You will learn about popular design patterns, which make it easier later to maintain and modify code",
        "You will build a hybrid API that supports both the web application (14 tables in the database) and a hybrid mobile application",
        "You will use all database relationships available in Laravel - including polymorphic ones, thanks to which the application is easier to modify and maintain later",
        "You will learn how to debug the application better",
        "You will be inspired to build your own solutions and not just copy someon's else ones ( hybrid api and the way of notification in real time I came up with myself)",
        "And much more"
      ],
      "course_content": {
        "Introduction": [
          "What you are going to build and how this course is organised",
          "Before you start the course",
          "Discussing the application template and methods of Laravel installation"
        ],
        "Laravel installation, frontend and backend template of the application": [
          "Installation of Laravel framework",
          "Moving template to Laravel, part 1",
          "Moving template to Laravel, part 2",
          "Moving template to Laravel, part 3"
        ],
        "Database, login and registration": [
          "Login, registration",
          "Database design. Migrations, part 1",
          "Database design. Migrations, part 2",
          "Laravel Seeder - sample data on the website, part 1",
          "Laravel Seeder - sample data on the website, part 2"
        ],
        "Application front page - list of tourist objects": [
          "List of tourist objects on the main page, part 1",
          "List of tourist object on the main page, part 2",
          "List of tourist object on the main page, part 3"
        ],
        "Application front page - view details of the tourist object": [
          "View details of the tourist object, part 1",
          "View details of the tourist object, part 2"
        ],
        "Application front page - search engine for renting rooms": [
          "Room rental search engine, part 1",
          "Room rental search engine, part 2",
          "Room rental search engine, part 3"
        ],
        "Application front page - details of the room in the tourist object": [
          "Room details in the tourist object, part 1",
          "Room details in the tourist object, part 2"
        ],
        "Application front page - view for the article and user": [
          "Details of the article about the tourist object",
          "View details of the user (tourist)"
        ],
        "Application front page - object likes in the application and commenting system": [
          "Likes of tourist objects and articles",
          "Adding comments to articles and tourist objects"
        ],
        "Administration panel - reservation of a room in a tourist object": [
          "Booking a room in a tourist object on the reservation page",
          "Booking calendar, part 1",
          "Booking calendar, part 2",
          "Booking calendar, part 3",
          "Booking calendar, part 4",
          "Booking calendar, part 5",
          "Booking calendar, part 6",
          "Booking calendar, part 7",
          "Extra features in the application",
          "Confirming and deleting reservations from the calendar"
        ]
      },
      "requirements": [
        "Basics of Laravel",
        "PHP at the basic level",
        "Basics of object-oriented programming",
        "Basics of HTML, CSS, Java Script, jQuery, SQL",
        "The ability to install and configure software on Windows, Linux, Mac (in the course I am discussing the software to be installed without installation during the course)",
        "The ability to install local servers: Xamp, Wamp, Vagrant, Linux etc. (in the course I am discussing the software to be installed without installation during the course)",
        "Basics of MVC - Model View Controller"
      ],
      "description": "GO TO A HIGHER LEVEL OF WEB DEVELOPMENT !!!\nDuring the course, you will create  a web application for booking vacation homes in the  Laravel framework and PHP 7, and additionally a hybrid version of this application as a mobile application for smartphones. This is not the same as the responsive website. The application will be responsive, but in addition there will be a second version as a separate application for a mobile phone that runs like a regular application from the phone application list and not from a web browser.\n\n\n\n\nIMPORTANT NOTE: Course for more advanced users! Absolutely not for beginners! Not everything will be clearly visible and understood at once. You may need to do some work yourself: print_r or dd(), use chrome console, comment out something, uncomment, etc. This course is a challenge. Or if you want, you can quickly go through all lectures, copy files and get working applications as soon as possible. There are files for the lessons, in most cases I don't write code on the screen, I am discussing it. More complicated code I write on the screen but simple and repeated (e.g. echoing data in views) I don't write in videos. For more information take a look at first video of this course and see in the section below called \"How do the course look like?\".\n\nThis is not a typical course discussing next chapters of the documentation. You will create a real life web application using the very popular Laravel framework. During the course most of the topics from Laravel's documentation will be used. The course touches many areas of full-stack web development, not only backend but also css, html, jQuery, JavaScript and others. The course was created on the Laravel 5.6 version, but the project files were updated to Laravel 5.8. See upgrade guide section to upgrade to the next versions of Laravel (including Laravel 6).\nWhy is the application so advanced and the course takes less than 10 hours? Because no unnecessary talks, no scratching head. I almost never write anything on the screen. I am discussing the code from the lesson files available for download (70 lectures). Only meat, no fat, no bones, etc. If you want you can cut out or comment code from the files and write it yourself. Then you will learn the most out of it. I'm going straight to the goal, from empty folder to working applications. No unnecessary things, only two apps: web and mobile from the beginning to the end.\n\n\n\nThis is a very advanced application for an online course on the Internet - 14 tables in the database bound with all types of database relationships available in Laravel.\n\n\n\nTHE ONLY THING TO MAKE YOU A GOOD WEB DEVELOPER AND SO MORE ATTRACTIVE FOR THE EMPLOYER - IS THAT YOU NEED TO MAKE ADVANCED APPLICATIONS, LIKE FOR EXAMPLE IN THIS COURSE.\nIn the course I used technologies that are popular and proven in the world of web development.\n\n\n\n\n*** TECHNICAL ASPECTS USED WITHIN THE COURSE ***\nLaravel topics used in the application:\ninstallation\nconfiguration necessary for work\nservice container, service provider & binding implementation of interfaces to the object container\nthe life cycle of the http request in Laravel\nfacades\ninjecting objects (dependency injection)\nevents & listeners\ncaching in Redis\nroutes\nmiddlewares\nLaravel Policies - on permission based user actions in the system\ngenerating  url's\nanti csrf protection\ncontrollers, models, views\nResource Controllers\nGET, POST, PUT, DELETE requests, responses\nhttp redirections\nArtisan console commands\nviews and the Blade template system\nLaravel Mix\nview composers\nmultilanguage feature in web applications\nvalidation of forms\nhelpers (e.g. route function)\nsessions\ncookies\nfile uploads\nauthentication (login)\nauthorization (accessing a resource based on permissions)\nuser registration to the system\nresetting a forgotten password\npagination of results from the database\ndatabase lazy & eager loading\ndatabase migration\ndatabase seeders\noperations on the database: fluent query builder & eloquent orm, accessors\nrelationships in the database: one to one, one to many, many to many, one to many through dependent model (hasManyThrough), polymorphic one to many, polymorphic many to many\nAlso:\njQuery\njQuery Mobile\nobject oriented Java Script\nGateway Pattern\nRepository Pattern\nPresenter Pattern\nSingleton Pattern\ninterfaces\ntraits\nPHP 7 directives\nTwitter Bootstrap modified by Bootswatch\nApache Cordova for hybrid app\nJWT authentication and authorization (Json Web Token)\n\n\n\n\n*** ABOUT LARAVEL ***\nThere is a reason that Laravel leads in Google Trends compared to other popular PHP frameworks - thanks to it complex applications are created quickly, thanks to many facilities and automation of frequent tasks, e.g. Laravel login mechanism we generate with one command of the built-in console! We use very easily relationships in a database, including more complex polymorphic relations.\n\nLaravel is probably the easiest to master PHP framework. The syntax is simple and intuitive. Applications in Laravel are easy to later scale horizontally thanks to good code organization and built-in integrations, e.g. with Amazon S3. Do you want to use Redis for the session instead of the standard session mechanism in the files on the server? In Laravel it is several lines in the configuration file. Web development with Laravel is simple and pleasant.\n\n\n\n\n\n*** HOW DO THE COURSE LOOK LIKE? ***\nAlmost all lessons are accompanied by source files, ready to be copied to the project. On the slides I show the activities that should be done in a given lesson. This is, for example, copying files or commands run in the console. Next, with the editor opened, I discuss the files to change in the lesson. The course was created in a way that I first wrote this application and then divided it into 70 lessons, to which the source files are attached. In most videos, I do not write anything on the screen. I only do this for more complicated code to better explain the issue. There is no point writing very simple or common instructions on the screen that are repeatedly done in each application.\n\nIn the course, I create step-by-step a web application in Laravel and a mobile version, according to the top-down approach. We start from the application template, the skeletons of individual methods, and I finally lead to ready and working applications. The course is more back-end than the frontend. The html template will be available for download.\n\nI did the same course earlier for Polish students in a different version. The Polish course lasted more than 20 hours and this course lasts much less hours. Why such a difference? Well, I changed the form of this course. In this course, unlike the first version - there are files for the lessons. And what follows, I don't write everything on the screen. I decided that it makes no sense to repeat the instructions on the screen which are often repeated many times in applications, for example, displaying data in views or simple foreach loops. But that does not mean that I will not show you how to debug the application. There is a separate lesson where I discuss tips on how to debug. However, on the screen I write the most difficult code and discuss it in detail. And although this course has been shortened, it contains the same amount of material, and even in some places, some issues are better explained.\n\nThe entire course is based on free software, most often open-source.\n\n\n\n\n\n*** WHAT FAMOUS PEOPLE  SAY ABOUT PROGRAMMING AND LEARNING? ***\nSteve Jobs said that everyone should learn to program because it teaches how to think. So in order to learn how to program and so better think, you need to create applications - program them. The more the better. The more complex applications the better. Only theory from documentation is not enough. You have to create something yourself. Programming is problem solving. You will not be a good web developer if you stop only on theory. No course will make you a good web developer (except for simple pages with the tab \"about us\" and with a simple html form). You will be a good web developer only if you are able to build complex applications by yourself, such as in this course.\nAnd another great man - Benjamin Franklin said: \"Tell me and I forget, teach me and I may remember, involve me and I learn\". It is difficult to get involved someone in an online course without direct contact with the student. But take to heart what that great man said. And be aware that you must actively participate in the learning process. In other words - write yourself with your head and not just copy and paste without analysis. Web development is not a massage - it will not do it itself, nobody will do it for us.\n\n\n\n\n\n*** HOW TO USE THE COURSE TO GET THE MOST BENEFITS AND LEARN THE MOST? ***\n\nThe code from the lecture files that cause problems is best to write yourself than to copy from a file. However, in order to speed up the process to reach to the end of the course, you don't have to write code that you already know well, such as simple foreach loops or printing data with the Laravel Blade engine, which is repeated many times in the code. If you want to see the effects of the application on your computer as fast as possible, simply view and paste the files from the lesson to your editor. But if you want to understand everything and learn the most - you can cut out or comment the code from the lesson and write it yourself.\n\nAfter each lesson, review everything exactly what has been done and try to understand it as much as you can:\nCompare the effects on the screen or use debugging, for example, the dd() function or Chrome dev tool, to show on the screen to better understand how a given piece of code works.\nYou can compare the code with the Laravel documentation, e.g. when validating forms, you can look in the documentation about other rules for validating forms than those currently displayed on the screen.\nOr when creating a migration, see what other types of columns in the database are described in the documentation and try to save a different one and see the effects after running a command in the console.\nIf you think that something can be done differently, don't hesitate to do it and write it differently than it is on the screen. In other words, be active during the course. Then you will get the most out of it than if you only listen passively and copy the code from lesson files or from the screen without analyzing it. If you haven't understood something, ask me a question or search the internet. Laravel has a large community and there are lots of material about it on the web.\nPlay with the code pasted from the source, comment out, uncomment, dump something, etc. Thanks to this you will understand better what is happening.\n\n\n\n\nRemember that only practice makes perfect. If necessary, study the course two or more times. Take notes  during the course like a real student. Use documentations, Google search. Finally, try to write the application yourself, not necessarily the same as in the course, you can try to change, add something, etc. No single course will make you a very good web developer. It can only bring you closer to this goal. The more practice, the better.\n\n\nQA:\n\nWhy do you use jquery mobile?\nThe mobile application is not the main subject of the course, it is the last few lectures of the course. The course focuses mainly on Laravel and design patterns. By building a mobile application I show in the course what can be done with Laravel. These are some general concepts that can later be applied to other mobile frameworks. However jquery hasn't disappeared from the industry, many companies still require it for maintaining existing websites or even building new ones.\n\n\nYou used Laravel 5 in this course for creating an app. Now we have Laravel 7 already. Does it mean that this course is outdated and I will not benefit from it?\nAbsolutely not! In tools like PHP frameworks the fundamentals and base syntax almost never change regardless of the version. But of course any maintained software evolves all the time. That's why I always suggest you to use the version of software that instructor uses in the course. It prevents from errors and confusions. As a someone who wants to learn web development you should be aware, that real web development involves also adapting the code to newer versions if necessary - but this is not always necessary, not every company do that. Software changes so often that the instructors would not be able to create the courses so that they match the latest version. This is not even advisable, because as a student you would loose an important aspect of real web development - the awareness that everything is changing and you need to be able to deal with it.\n\n\n\n\nImportant note:\nI am not a native speaker of English, so you can check before enrollment\nwhether my English is good for you and you can always speed up\nthe video in the player options.\n\n\nHave a fruitful study!",
      "target_audience": [
        "For every person with the will and min. basic knowledge of web development",
        "For more advanced web developers wanting to learn something new",
        "For junior web developers with aspirations for middle and senior",
        "For companies aimed at quickly creating high-quality web business projects in popular and proven open source technologies"
      ]
    },
    {
      "title": "Learn Python + JavaScript + Microsoft SQL for Data science",
      "url": "https://www.udemy.com/course/learn-python-javascript-microsoft-sql-for-data-science/",
      "bio": "Learn Python and JavaScript how to use it to analyze, visualize and present data using Microsoft SQL queries",
      "objectives": [
        "Write python code for webapps",
        "Get a job as a junior web developer",
        "Create your own stunning, layouts for awesome websites",
        "Applying python code on Data Science projects",
        "Master client-end development using JavaScript, back-end development Python and Microsoft SQL",
        "Working with Relational Database of Microsoft SQL",
        "Apply JavaScript, Python for data science and Microsoft SQL database queries on real-world tasks",
        "Create fully function web apps using Python, MSSQL and JavaScript",
        "learn what is Generative AI for future learning",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Unlock the power of Python, JavaScript, and Microsoft SQL for data science with the \"Learn Python + JavaScript + Microsoft SQL for Data Science\" course. This comprehensive course is designed for those looking to develop a strong foundation in data science and analytics by mastering key programming languages and databases that are integral to data-driven decision-making.\n\n\nYou’ll begin by learning Python, one of the most powerful and popular languages for data science. Explore core Python concepts, libraries, and discover how to manipulate, analyze, and visualize data efficiently.\n\n\nNext, you’ll explore JavaScript and its relevance in data science, particularly for building interactive data visualizations and integrating web-based data applications. Learn how to use JavaScript frameworks create interactive graphs and data-driven visualizations that can enhance your data analysis.\n\n\nThe course also covers Microsoft SQL Server, teaching you how to query and manage databases using T-SQL, extract meaningful data with advanced SQL queries, and perform complex data operations. You’ll learn to design efficient database structures, optimize queries, and SQL databases with Python for seamless data processing.\n\n\nThroughout the course, you’ll work on hands-on projects that integrate all three technologies, preparing you to solve real-world data science problems.\n\n\nEnroll now and develop the skills you need to become a proficient data scientist using Python, JavaScript, and Microsoft SQL!",
      "target_audience": [
        "Beginner JavaScript, Python and MSSQL developers curious about data science development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Bootstrap 3 -> Profitable WordPress Theme Development!",
      "url": "https://www.udemy.com/course/bootstrap-wordpress/",
      "bio": "Develop stunning Bootstrap 3 WordPress site Themes! Amazing step-by-step secrets to a mobile first Bootstrap site!",
      "objectives": [
        "Create your own WordPress Theme from scratch.",
        "Use Twitter Bootstrap to create stunning designs.",
        "Make money selling web design services to paying customers.",
        "Make back the investment by the first site you build instead of buy"
      ],
      "course_content": {
        "Introduction to the course": [
          "Why responsive web design is all the rage and why use WordPress and Bootstrap 3?",
          "Get to know Bootstrap 3 - Mobile trends and responsive web development!",
          "Wordpress Themes - Why Themes are so popular with developers and site owners?",
          "Course overview and the Udemy environment",
          "Why work with WordPress and Bootstrap 3?"
        ],
        "Bootstrap 3: Design the Prototype": [
          "Rough draft - Included elements to talk about the needs with the customer.",
          "Up and running with Bootstrap - Get the development environment ready and setup.",
          "Look and Feel - Beautiful color scheme!",
          "Bootstrap Header design - Adding our logo and creating a nice menu structure.",
          "Glyphicons in Bootstrap - Great for adding light-weight graphics to the design.",
          "Footer Design - Embedding a Google Map and an address to the footer region.",
          "Carousel - Adding a sweet slide show Bootstrap element to the design.",
          "Carousel - Adding real images and the Finished Boostrap 3 Prototype Walkthrough.",
          "Bootstrap 3 Prototypes",
          "BONUS: Bootstrap 3 Grid System!",
          "Bootstrap CDN: A better way.",
          "Bootstrap 3 Cheat Sheet!",
          "Pysical Deliverable - Bootstrap 3 Prototype Download"
        ],
        "PHP for Wordpress Theme Developers": [
          "PHP Quick Minicourse"
        ],
        "Wordpress Theme: Step-by-Step - Creating From Scratch": [
          "Begin from Scratch - Step-by-Step - Empty folder to a working WordPress Theme!",
          "Slicing up the design - From the Bootstrap 3 design into the slick new WP Theme!",
          "The Loop - Get in touch with the workings of the WordPress core",
          "Hooking into the navigation - Making sure the WP navigation works the way I want",
          "Create a screenshot for the working WordPress Bootstrap 3 Theme"
        ],
        "WordPress Theme: The Important Parts": [
          "Adding real world data using Export-Import from the working WordPress site.",
          "Connecting the WordPress menu system into the Bootstrap 3 design.",
          "single.php - the simple way to display a single WordPress post in a nice way!",
          "page.php - equally simple way to display a page in WordPress",
          "category.php - 1 - now we are getting more advanced and adventurous in WP Theme!",
          "category.php - 2 - fixing small problems and adding a cool effect in WordPress!"
        ],
        "BONUS - WordPress Theme: Advanced integration": [
          "Integrating the marketing messages with the Bootstrap Glyphicons into WordPress!",
          "Integrating the Bootstrap Carousel into the WordPress theme!",
          "Sidebar - Widgetizing our WordPress theme!",
          "Customize Admin Panel - Allow user to change branding logo!",
          "Customize Admin Panel - Connect the theme with the new branding and logo!"
        ],
        "WordPress Theme: Wrap up": [
          "Physical Deliverable - Bootstrap 3 WordPress Theme - WPBootstrap3 - Download",
          "WordPress Theme Development Cheat Sheet!"
        ],
        "Conclusion": [
          "Congratulations on finishing the Bootstrap 3 WordPress Theme course and a BONUS",
          "New Bootstrap 3 and WordPress Theme course lectures coming soon!",
          "BONUS - My other course with a HUGE discount!"
        ],
        "BONUS - Q&A and Case Studies": [
          "CASE STUDY: Spinal Cord Injury Ontario - Annual Report by Rodney Ronquillo",
          "Q&A Blab 1: Bootstrap and WordPress - HTML and PHP integration and more!"
        ]
      },
      "requirements": [
        "Some basic web concepts like HTML and CSS is preferred",
        "Javascript and PHP knowledge is helpful"
      ],
      "description": "UPDATE: Added for Winter 2015-2016:\nPHP Quick Minicourse!\nQ&A Blab - Bootstrap and WordPress HTML and PHP integration and more!\nGet the Bootstrap 3 WordPress Theme course NOW while the price is still low ... just CHECK OUT THE REVIEWS below!\n\nJoin more than 5000 students who have started the Bootstrap 3 WordPress Theme course ... a HUGE thank you to each and everyone. Do not miss out - TAKE THIS COURSE NOW!\n======================================================\nWordPress and Bootstrap 3 is like a box of chocolates!\nSink your teeth into some amazing and tasty Bootstrap 3 treats. Enjoy the sweet aroma when you crack open the colorful pieces of smooth CSS and HTML goodies.\nDelight your guests with an attractive and custom baked website that you magically piece together into a wonderful WordPress theme.\nENLIST NOW in the Develop a Bootstrap 3 WordPress Theme course to inspire your boss and draw in new customers with your stunning skills.\n======================================================\nAn Excellent Course for Bootstrap Combined with WordPress. The instructor provides a clear and concise description of his work every step of the way. He demonstrates his knowledgeable coding skills using Notepad++ . The voice and quality of the production were excellent. I thoroughly enjoyed this course and I would recommend this to any developers or designers, beginner and advanced, interested in learning new concepts to further enhance their skills into the inner workings of Bootstrap and WordPress theming.\n+Susan Cork\n======================================================\nBootstrap 3 is a fantastic framework for creating websites that LOOK GREAT on all internet browsers – from mobile and tablets to desktops.\nWordPress is simply the most popular website creation platform and content management system on the face of the Earth!\nBootstrap 3 and WordPress are sizzling HOT and TRENDING right NOW and FREE to use :)\nMaster developing for the Bootstrap 3 and WordPress Theme platforms and you'll become the obvious expert of choice!\nIn this course, I take you by the hand and walk you step-by-step through the slick Bootstrap HTML and CSS framework and help you build your own stunning WordPress Theme from scratch!\nLearn how to create a WP Theme using Bootstrap 3 ... Enroll Now!\n======================================================\nExpert Guidance on Responsive Web Design with WordPress and Bootstrap 3 This course is great in explaining about responsive web design with WordPress and Bootstrap 3. The structure of the course has been well planned - each lesson is presented with great clarity in a concise, right to the point manner and the course progresses in a smooth, logical flow. From designing the prototype to creating the WordPress theme, this course is about as comprehensive as it should be without overwhelming me with too much information. Thrandur (the instructor) covers each topic with amazing attention to detail in an engaging tone. Also, working files and external resources are generously provided whenever applicable. What impresses me most are the insights he shares based on his own experience ... the practical tips that would save me a lot of time from having to figure it out myself. In a nutshell, if you're looking to learn about responsive web design with WordPress and Bootstrap 3, this course will help you get there effectively. +Michael Lim\n======================================================\nDISCOVER HOW TO BUILD\nA Wordpress Theme from scratch\nUse Twitter Bootstrap 3 to create stunning designs\nDevelop a Responsive WordPress Theme with Bootstrap 3 takes you stepbystep from getting set up and idea creation to a working theme that you can use or sell to high-paying customers!\nIf you want to make money creating websites that are easy to make and look amazing on all devices this course is for you.\nGet up and running in the best-practice Bootstrap 3 framework and WordPress platform.\nFull, free lifetime access\nAll future extra lectures and upgrades are always included for free\nUnconditional Udemy 30 day money-back guarantee ... that's my personal promise of your success!\n... and much, much more!\nONE FINAL POINT\nNow you can have your own WordPress Bootstrap 3 Theme up and running today, right after going through this course ... and be earning big soon after that!\nClick the \"take this course\" button, top right, now ... every hour you delay is costing you money...\nLearn first hand how I create a WordPress Theme using Bootstrap 3. Scroll up and Enlist Now!",
      "target_audience": [
        "Web Developers",
        "Web Designers",
        "Online Marketers"
      ]
    },
    {
      "title": "Intro to Django Python Web Apps",
      "url": "https://www.udemy.com/course/intro-to-django-python-web-apps/",
      "bio": "Make Web Apps with Django",
      "objectives": [
        "Django Introduction",
        "How to manage URLs",
        "How to use static files",
        "How to Build Static Web Sites",
        "How to Build a Blog",
        "How to use a Database",
        "How to use the Django Users System"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction"
        ],
        "Project: Static Website": [
          "Virtualenv",
          "Lecture Notes",
          "Hello World",
          "Lecture Notes",
          "Views",
          "Lecture Notes",
          "Templates",
          "Lecture Notes"
        ],
        "Project: Blog": [
          "Setup New Environment",
          "Setup Database for Project",
          "Lecture Notes",
          "Django Admin",
          "Lecture Notes",
          "Django Database ListView",
          "Lecture Notes",
          "Django Database DetailView",
          "Lecture Notes",
          "Django Load CSS (1/2)",
          "Lecture Notes",
          "Django Load CSS (2/2)",
          "Lecture Notes"
        ],
        "Blog Project: User Authentication": [
          "Django Login",
          "Lecture Notes",
          "Django User SignUp",
          "Lecture Notes",
          "Django User Change Password",
          "Lecture Notes",
          "Django User Reset Password",
          "Lecture Notes",
          "Let Users Create Posts",
          "Lecture Notes"
        ]
      },
      "requirements": [
        "Python",
        "SQL, HTML and CSS familiarity"
      ],
      "description": "This is an introduction course to Django.\nIn this course you'll learn how to build basic websites with Django.\nIt contains two projects: a static website and a blog.\nYou'll learn how to make a website, setup a database, how to use the django user system and more Django basics. This course gets you started with Django. It's aimed for beginners.",
      "target_audience": [
        "Beginner Python Developers who want to make Web Apps with Django"
      ]
    },
    {
      "title": "Web Scraping with Python, Ruby & import. io",
      "url": "https://www.udemy.com/course/web-scraping-with-python-ruby-import-io-for-fun-profit/",
      "bio": "Learn exactly how to scrape web data from many popular websites even if you have very little experience as a programmer!",
      "objectives": [
        "Scrape a variety of websites",
        "Scrape websites with Ruby",
        "Scrape websites with Python",
        "Scrape websites with Import. io"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction: What you will learn"
        ],
        "Import.io - Free, Easy to use software built for scraping websites": [
          "Introduction to the new Import io Web Scraping tool",
          "Setting up the new Import io",
          "Wikipedia - Learn to scrape a table from Wikipedia",
          "Wikipedia - Learn to grab content from a Wikipedia page",
          "CNN.com - Learn how to grab content from a CNN article page",
          "IMDB - Scrape the most popular movies from IMDB",
          "NFL.com - Learn how to Scrape the top QB stats",
          "NFL Draft - Learn how to Scrape all rounds of the NFL Draft"
        ],
        "Import io - Download tool": [
          "Download Import.io",
          "Import.io overview: learn how to install and get up and running",
          "Oh, it's kind of Magic: Grab products from IKEA",
          "Scrape Wikipedia Data and Map it",
          "Learn how to Extract data from IMDB",
          "Extract data from Macys.com",
          "Yelp: Learn how to scrape information from Yelp!",
          "Yelp Advanced: Scrape the Top 100+ Pizza places in New York City",
          "Yelp: Learn how to Search and scrape Yelp results with an automated process!",
          "Learn how to crawl an entire website and capture over 40k products!",
          "From Import.io to Google Sheets. Get it into the cloud!",
          "BONUS: How to extract specific data - Zip Codes in Yelp",
          "Learn how to Install and Setup Ruby",
          "Simple Script: Learn How to Scrape Macys.com products",
          "Next Step: Macys.com getting a bit more advanced as we build your skills",
          "CSV: Now you have Macys.com data learn how to put it into a CSV file"
        ],
        "Ruby - Don't know Ruby? It doesn't matter because you will soon!": [
          "Walmart: How to scrape all pages from a product category on Walmart.com",
          "Spoof a site and look like you are web browser!",
          "Google + Mechanize = How to scrape search results from Google with Mechanize",
          "BONUS: Scraping YouTube's Most Popular",
          "BONUS: Scraping Zillow by Zip Code",
          "BONUS: Using JSON to scrape Walmart's website"
        ],
        "Python - Don't know Python? It doesn't matter because you will soon!": [
          "Installing and setting up Python",
          "Simple Script: Learn how to crawl IMDB",
          "Learn how to submit a web form",
          "Install Selenium and PhantomJS - Trust me you'll want these!",
          "Yes, you can crawl JavaScript! Learn to scrape Ajax with Selenium",
          "Simple: Crawl and export data from Nordstrom.com into a CSV",
          "Next Step: Crawl NFL data - Grab all the QB data from 2014!",
          "Advanced: Export NFL QB data to a CSV",
          "Export Data to MySQL"
        ],
        "Scrapy - Use Scrapy built for Python to create your web crawler": [
          "Installing and setting up Scrapy",
          "Craigslist: Use Scrapy for a basic crawl of 100 jobs",
          "Craiglist: Crawling through paginations for all jobs"
        ],
        "Bonus: Ruby - How to Scrape via Twitter API": [
          "Scrape a Tweets from another User or Users",
          "Scrape Twitter searches for keywords and anyone who has tweeted using that keyw",
          "Take the scraped users and follow them or swap out for another username"
        ]
      },
      "requirements": [
        "How to install software on their computer",
        "Be able to understand a reasonable level of programming -- much of it will be explained",
        "Follow step-by-step instructions"
      ],
      "description": "Latest Update:\nMarch 9, 2017 - Please note that import io is no longer a free program. They just recently started to charge for use of the platform. I would love some feedback about whether to keep the tutorials up for this portion or to remove and add more lessons from Python, Scrapy and/or Ruby.\n_____________________________________________________________\nYou'll be web scraping in less than an hour!!\nThis course teaches you three ways to scrape websites:\nImport. io is a software that you download and is a really quick way to start web scraping quickly. It is not without its limitations but depending on what you need or plan to do it could do everything you need. No programming experience necessary!\nIf you prefer to learn a little programming along the way, and aren't afraid to invest a little time, you can learn how to do web scraping with Ruby and/or Python. Both have their pluses and minuses but both can do just about anything you could imagine.\nEven if you have never used Python or Ruby you can learn how to still use these programs as a web scraper. But if you are willing to learn you can scrape just about any website there is online!\nWant to do some web scraping of super popular websites? That's how you will learn!\nThis course comes complete with code for every lecture for Ruby and Python!\nYou will learn to web scrape popular websites like:\nZillow\nCraigslist\nYelp\nIMDB\nWikipedia\nGoogle\nMacys\nYouTube\nNFL\nNordstrom\nWal-Mart\nTwitter\nYou will learn to install Python and Ruby. You'll learn how to download what you web scrape into CSV files and with Python you will learn how to put your data into a database.\nOther lessons include how to get around obstacles such as websites with ajax that load content dynamically. You'll also learn how to crawl multiple pages of websites and get all the data you need!\nWith Import. io you will learn how to download a website that has over 40,000 products on it. Yes, 40,000 products and you will learn how to scrape all of those products.\nStop imagining you can grab data off websites and use them for your next web project, you an do it now.\nPlease note: Software installation can be done for both Mac OSX and Windows. I use a Mac so it is more focused on OSX however instructions are available for Windows.\nUpdate: January 17, 2016 - Added three Scrapy videos. How to setup scrapy and scraping Craigslist\nUpdate: October 17, 2015 - Added Bonus lesson on extracting zip codes from Yelp\nUpdate: September 15, 2015 - Added How to find JSON and scrape it on Walmart\nUpdated: September 1, 2015 - Three new Twitter API scraper videos. How to scrape user tweets, users searching for keywords and how to follow those users through Ruby/Twitter API\nUpdate: August 28, 2015 - Added Wikipedia scraper and map\n\nEnroll now!",
      "target_audience": [
        "Anyone who has an interest or idea where they want to utilized data from other websites"
      ]
    },
    {
      "title": "WordPress for Beginners | Ultimate Guide to Starting a Blog",
      "url": "https://www.udemy.com/course/wordpress-access-pass-guide-to-starting-a-blog-with-wordpress/",
      "bio": "Learn how to start a WordPress blog from scratch even if you have no prior technical experience.",
      "objectives": [
        "You'll learn the basic foundation of what makes a good looking website blog",
        "You'll learn how to create a domain name and set up your web hosting account",
        "You'll learn how to setup your WordPress website correctly",
        "You'll learn how to create pages and setup a navigation menu",
        "You'll learn how to create a custom logo for your website for as little as $5",
        "You'll learn how to customize your website with Free and Premium WordPress Themes",
        "You'll learn the exact step-by-step process of publishing your first blog post",
        "You'll learn how to add images, videos and links on your pages and posts",
        "You'll learn how to add social media widgets for social sharing",
        "And more..."
      ],
      "course_content": {
        "Introduction to Blog Websites": [
          "WordPress Blog Structure"
        ],
        "Setting Up Your Hosting and Domain Name": [
          "How to Buy a Web Address",
          "WebHosting Intro and Setup",
          "How to Setup Nameservers",
          "Website Email Account Setup"
        ],
        "Installing WordPress and Settings": [
          "Easy WordPress Installation",
          "WordPress Password Change",
          "WordPress Admin Settings"
        ],
        "Installing WordPress Themes": [
          "Free WordPress Themes",
          "Premium WordPress Themes",
          "Genesis Theme Settings"
        ],
        "Creating Website Pages": [
          "How to Create a Page",
          "How to Install a Contact Plugin",
          "Creating an Email Contact Page"
        ],
        "Customizing Navigation Bar, Website Logo and Sidebar": [
          "Make a Header Navigation Menu",
          "Custom Website Logo for $5",
          "Host a Logo Design Contest",
          "How to Install a Website Logo",
          "How to Use Sidebar Widgets"
        ],
        "Creating Your First Blog Post": [
          "Difference Between a Page and Post",
          "Setup Categories and Tags",
          "Installing a Text Editor Plugin",
          "Create and Edit a Blog Post",
          "How to Create a Hyper Link",
          "Where to Get Royalty Photos",
          "How to Add Photo Images",
          "Adding YouTube Videos to Posts",
          "How to Final Blog Post Before Publishing"
        ],
        "Bonus Material": [
          "Scheduling A Blog Post",
          "Facebook, Twitter, Social Share Buttons",
          "How to Install Akismet Spam Filter",
          "Add Social Media Icons to Header",
          "How to do Domain Forwarding and Masking"
        ]
      },
      "requirements": [
        "No Previous Experience Necessary",
        "Web Hosting Account (For example, Hostgator, Bluehost, etc). However, if you don't have a web hosting account yet no problem as I will walk you step-by-step how to buy and set one up.",
        "Domain Name (For example YourBusiness.com from GoDaddy, NameCheap, etc). However, if you don't have one yet no problem as I will walk you step-by-step how to buy and set one up.",
        "You will need a computer either a laptop, desktop, or Tablet to view this course and implement the strategies to building a website blog."
      ],
      "description": "\"WordPress for Beginners: The Ultimate Guide to Starting a Blog with WordPress\"\nHave you ever wanted to start a blog, but the thought of coding and html intimidates you and has always prevented you from getting started?\n\nIf so, then I know exactly how you feel.\n\nThere's nothing worse than watching all the pro bloggers making thousands of dollars in the comfort of their home, while you're stuck at work at that 9-to-5 job, working to the bone, and never feeling appreciated for all your hard work.\n\nAnd to make matters worse, as your bills start piling up, your wife is always asking you when your going to get that next raise? You can see the doubt in her eyes and you can tell from the tone of her voice that her patience is wearing thin.\n\nYou end up feeling frustrated because you're trying to figure out a way to bring in some extra income and nothing seems appealing...\n\nUntil now the only thing that inspires you is to create a blog so that you can make passive income and work at home in your PJ's.\n\nThe big problem is that most web designers charge you at least $2,500+ to build a custom website. So even if you created one you would spend hundreds of dollars to have them maintain it for you.\n\nThat's why today, I'm thrilled to be able to share with you the \"WordPress for Beginners\" - Ultimate Guide to Starting A WordPress Blog.\n\nMy name is Anthony Tran and I've coached thousands of people just like you how to create a blog and make money online.\n\nIn this WordPress training course, I reveal the exact steps you need to follow in order to start your very first blog.\n\nWhether you're planning to blog as a hobby or you want to create a profitable online business, the \"WordPress Access Pass\" gives you the pieces of the puzzle you need to finally make your dreams a reality.\n\nNow what makes this course different to any other program out there, is that this isn't just a collection of ideas or principles. It's a simple, STEP-BY-STEP GUIDE.\n\nAll you need to do is watch these short videos, apply what you learned and YOU WILL start blogging today.\n\nLet me explain to you exactly how the \"WordPress Access Pass\" course is laid out.\n\nOnce you purchase the course, you will get access to the first module that will walk you through the basics of a blog website. Next I'll show you how to buy a domain web address. After that I'll show you how to get a web hosting account and how to set it all up.\n\nI also show you how to install WordPress with a few simple clicks, and show you how to setup your blog so that it is ready to go.\n\nYou'll learn how to customize the look and feel of your blog with theme templates so that your blog looks professional and fun.\n\nAfter you have customized the appearance of your blog I will show you how to start building pages on your website like an email contact page and a navigation menu.\n\nOnce that is complete I will then show you how you can create a custom logo for your website for as little as $5.\n\nHere is the best part! You will learn step-by-step how to write your first blog post, edit the content, add pictures, videos, and links so that it is completely engaging to your readers.\n\nTo put things into perspective after you finish this course you would have saved hours of frustration, time and thousands of dollars.\n\nHere's what people are saying about the \"Ultimate Guide to Starting A Blog With WordPress\"\n\n-----\nAmber Hurdle said, “Some people have a gift to teach and Anthony Tran is among them. He was able to educate an online marketing beginner like me about the ways of WordPress and beyond, explaining in simple, non-tech language how my website could actually work for me through generating traffic and leads. I am officially enlightened!”\n\n-----\nAndres Zuleta said, \"Anthony can take complex, convoluted concepts, and explain them in an easy-to-understand and – most importantly – actionable way. He has a knack for distilling the essentials, and has helped me tremendously with regard to my understanding of search engine marketing. He is earnest, kind and honest, and I am thrilled to know him!”\n\n-----\n\nBy now you're probably wondering how much the \"WordPress Access Pass\" will be.\n\nAnd that's a fair question when you consider that a single personal coaching session with me can cost up to $250 an hour.\n\nHowever, the reason I created \"WordPress Access Pass\" is that I understand that a lot of people just can't afford to fork out hundreds of dollars to hire a professional web designer or internet marketing coach.\n\nAnd so for a small investment you can start learning how to create a blog today with \"WordPress Access Pass\" for only $20.\n\nSo if you're ready to make a change and finally get your online business up and running, just click the \"Add To Cart\" button on this page.\n\nLook, if you're serious about starting a blog and generating a passive income for you and your family, you need to take action and get in the game.\n\nThe good news is that \"WordPress for Beginners\" course gives you a proven step-by-step plan to start from ground zero and build a website blog with virtually no technical experience.\n\nJust imagine waking up in the morning, opening your email inbox, and getting a notification that you earned an affiliate commission from your blog website.\n\nYou laugh out loud as you realize that you now made money while you sleep rather then spending your days in that 9-to-5 job that you dislike so much.\n\nYou've built a real, profitable online business AND won the respect of those who doubted you.\n\nSo start your training with \"WordPress for Beginners\" course now, and let's get you blogging today.",
      "target_audience": [
        "For Beginners",
        "For People Who Want to Start a Blog",
        "For Startup Online Entrepreneurs",
        "For Small Business Owners Looking to Create a Website"
      ]
    },
    {
      "title": "9 React Projects",
      "url": "https://www.udemy.com/course/9-react-projects/",
      "bio": "Learn React by making 9 different React Projects",
      "objectives": [
        "Learn React by making 9 different React Projects",
        "Creating a React Project from scratch",
        "Cleaning up the File Structure",
        "Functional components",
        "Hooks - useState, useEffect, useRef",
        "React Router - Route, Link",
        "useHistory, useParams",
        "React Context",
        "Npm packages like uuid, react copy to clipboard",
        "Fetch / Getting the data from the api"
      ],
      "course_content": {},
      "requirements": [
        "Code Editor",
        "NodeJs",
        "Basic understanding of Javascript",
        "Basic understanding of React, React hooks and functional components"
      ],
      "description": "In this course we are going to make 9 React projects that will help you get a better understanding of React JS, alongside with having great projects to showcase on your portfolio. These are the projects we are gonna be making:\n- Typing Game\n- Todo App\n- Dynamic Gallery With Masonry Layout\n- Book List App\n- Shopping Cart\n- Github App\n- Text Generator App\n- Image App\n- Recipes App",
      "target_audience": [
        "Beginner / Intermediate",
        "People who wanna learn more and improve",
        "People who are interested in Project based Course"
      ]
    },
    {
      "title": "Laravel E-commerce Project Tutorial For Beginners to Advance",
      "url": "https://www.udemy.com/course/create-e-commerce-website-using-laravel-beginner-to-advance/",
      "bio": "Laravel E-commerce Project Tutorial From Beginner to Advance Level With Easy Instruction",
      "objectives": [
        "You will be able to make a e-commerce project using laravel",
        "The E-commerce project will be dynamic . it means you will be able to control everything from admin dashboard.",
        "In this project customer will be able to add product to the cart and confirm order from the cart page",
        "You will learn how to make payment using debit/credit/master card to buy the product",
        "You will learn how to make email verification",
        "You will learn how to send email notification from admin dashboard to customer",
        "you will learn how to make PDF receipt for each order from admin dashboard"
      ],
      "course_content": {
        "Introduction": [
          "Setup our Laravel project",
          "Setup the database",
          "Making Multiple Authentication for admin and user Laravel 11"
        ],
        "Integrating Html Template to our Project": [
          "Integrating Html template to our homepage",
          "Separating Html template Code to Different blade file",
          "Making Changes for Login & Registration",
          "Integrating Admin Template In Project"
        ],
        "Adding Product details from Admin Panel": [
          "Designing Category Page for Admin Panel",
          "Adding Category to Database Table from Admin Panel",
          "Show Category Data in Admin Panel",
          "Deleting Category Data From Admin Panel",
          "Creating Product table in the database",
          "Designing Product page to add product",
          "Showing category in the select option",
          "Insert Product data in Product table",
          "Designing Product page in Admin panel",
          "Showing product data from database table",
          "Deleting product data from admin panel",
          "Creating Update Page & showing a specific Product data",
          "Updating Product data"
        ],
        "Home Page Setup": [
          "Showing All Product Data in Home Page",
          "Pagination for Product in Home Page",
          "Showing product details for a specific product",
          "Designing the add to cart button",
          "Checking logged in user before add product to cart",
          "Creating Cart table",
          "Adding product to the cart",
          "Discount price & quantity condition for adding product to cart"
        ],
        "Cart Page Setup": [
          "Designing the Cart page",
          "Showing Cart data for specific user",
          "Calculating total price in Cart page",
          "Removing Product from Cart Page"
        ],
        "Product Order Setup": [
          "Creating Order Table",
          "Storing data from cart table to order table for cash on delivery",
          "Deleting data from cart table when Clicked cash on delivery"
        ],
        "Card Payment for Ordering Product": [
          "Creating Stripe account & Setup .env",
          "Making view for Card Payment",
          "Paying Using Card to Order Product from Cart",
          "Modifying the Card Payment Page"
        ],
        "Admin Panel Order Page Setup": [
          "Designing Order Page in Admin Panel",
          "Showing Order Data in Admin Order Page",
          "Update Payment & Delivery Status for Ordered Product",
          "Print PDF file for Ordered Product"
        ],
        "Email Setup": [
          "Verify Email Address after Registration",
          "Designing a View for Sending Email Notification",
          "Sending Email Notification in Laravel from Admin Panel"
        ],
        "Search for Ordered Product In Admin Panel": [
          "Order search for product in admin panel",
          "Showing data not found if a certain search does not exist"
        ]
      },
      "requirements": [
        "You only need to have some basic knowledge of html , css , bootstrap , php",
        "Basic knowledge of Laravel"
      ],
      "description": "In this project i will teach you how to build an E-commerce project using Laravel . I will start from the very beginning so that you will be able to understand everything clearly .\n\n\nNow lets talk about what we will make in this course  :\n\n\nIn this project we will let the customer being able to see all the product and customer will also be able to search product and see product details as well .\nCustomer can add product to the cart and also order the product from the cart page . I will also show you how can customer pay for the product using his/her debit/credit/master card .\n\n\nIn order to register customer need to verify their email . So when a customer register , an email will be send to their email address .Once they verify their email they will be able to login .\n\n\nWe will also have a comment and reply section in this project .\n\n\nIn the admin dashboard we will let admin add / update or delete product . Admin will be able to see all the customer details .\n\n\nWe will let admin see all the order details and print receipt for each order . Once the product delivery is done admin will have  option to change the product delivery status . Admin will also be able to send email to customer .",
      "target_audience": [
        "This is a course for Beginner Laravel Developer who want to learn how to make a E-commerce project using Laravel",
        "I will start from the very beginning and explain every step . so no worries"
      ]
    },
    {
      "title": "Learn Node.JS Selenium Webdriver",
      "url": "https://www.udemy.com/course/learn-nodejs-selenium-webdriver/",
      "bio": "Learn automated browser testing",
      "objectives": [
        "Build an Automated Register Bot",
        "Automate browser testing",
        "Understand Selenium Webdriver",
        "Build your own tests",
        "Create robots to test your website"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Selenium WebDriver Intro"
        ],
        "Promises": [
          "Promises",
          "Manual promise chaining",
          "Find all wiki links"
        ],
        "Structure": [
          "Application structure",
          "How to take a screenshot"
        ],
        "Build an Automated Register Bot": [
          "Registration bot intro",
          "Registration bot from scratch"
        ],
        "Learn Jasmine": [
          "Jasmine introduction",
          "Jasmine"
        ],
        "Final": [
          "Last word"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge",
        "Basic Node.JS knowledge"
      ],
      "description": "Using Selenium you can avoid boring web-based administration tasks and manual testing. Primarily, it is for automating web applications. You can schedule Selenium to test your application and make sure it's up and running. You can also create automated bots to do the job for you!\nYou will learn how to work with Selenium WebDriver, how to create your own tests and best practices. Learn how to work with promises, how to find links and elements and how to take a screenshot using Node.JS and Selenium! It will be very usefull for your test reports!\nAnd the most amazing part of this tutorial is... you will build your own registration bot from scratch!\nBy the end of this course, you will also learn how to work with Jasmine!",
      "target_audience": [
        "Those looking to build a career as a NodeJS developer",
        "Those who want to grasp Selenium",
        "Who doesn't like to test manually"
      ]
    },
    {
      "title": "How To Create A Website With Wordpress From Scratch",
      "url": "https://www.udemy.com/course/how-to-create-a-website-with-wordpress-from-scratch/",
      "bio": "Wordpress Site Creation - Learn How To Create Your Own Website From Scratch Using Wordpress Without Knowing Development",
      "objectives": [
        "Create Various Types Of Websites Using The Wordpress Platform.",
        "Build Their Own Business Website, Blog Or Online Store.",
        "Work As Freelancers Or As A Business And Offer Website Building Services."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Types Of Websites"
        ],
        "How To Setup Everything Before Starting To Build Your Website": [
          "How To Get Your Domain Name And Website Up",
          "How To Get Web Hosting",
          "How To Change the DNS",
          "Section 2 Assignment"
        ],
        "Building Your Website With Wordpress": [
          "How To Install Wordpress",
          "How To Login To Wordpress",
          "How To Install Themes",
          "Basic Settings For Your Wordpress Website",
          "Section 3 Assignment"
        ],
        "Customizing And Working With Your New Wordpress Site": [
          "Using Posts",
          "Using the WYSIWYG Editor",
          "Working With Pages",
          "Installing And Using Plugins",
          "Using Widgets To Enhance Your Wordpress Website",
          "How To Create A Blog",
          "How To Use Social Sharing",
          "Using Featured Images",
          "Using And Changing Header Images",
          "Creating Your About Me Section",
          "Creating And Using Menus With Your Wordpress Site",
          "How To Create A Business Website",
          "How To Use The Virtue Business Theme",
          "How To Setup Gmail SMTP",
          "How To Create An Online Store",
          "Section 4 Assignment"
        ]
      },
      "requirements": [
        "No previous experience is required for this course or learning what is presented."
      ],
      "description": "Forget about the times when you had to learn programming to create your own website or spend a ton of money with companies or freelancers to do it just to end up with a website that you didn't like to much.\nNow it's easier than ever to create your website as you want it, with all the functions included, without having to spend weeks or even months to learn how to do it or build it from scratch.\nNeedless to say that most of us already know about Wordpress and some of us have already tried to use it to build a website but we didn't do such a great job or we don't know how to fully customize it to give it a decent look.\nThis course will teach you how to create a Website with Wordpress from scatch. It will teach you the whole process from registering a domain to creating a website.\nYou will even learn how to create a personal branding website, a corporate or business website and an online store.\nYou will learn how to change the look of your website by installing different themes and how to customize it to fit your business and brand needs. You will learn how to add new features to your website via plugins and widgets and even how to integrate SMTP for email marketing.\nBy the time you are finished with the course, you will be able to create your own website or offer website creation services to your clients at a local or international scale.\nSo, it this course we are going to cover:\nHow To Register A Domain\nHow To Setup Wordpress For Your New Website\nHow To Chose A Theme And Customize It\nHow To Set Your Wordpress Website\nHow To Add Functionalities To Your Site\nHow To Build Presentation Sites, Online Stores Or Business Sites.\nand much more...\nLifetime Access to all other updates!\nSurprise Bonuses!\nNew Tools introduced in the course!\nFULL Support through the discussion area of the course!\n30 Day Money Back GUARANTEE if you feel this course didn't help you at all and you can't apply anything...that is how dedicated we are to your success!\nAll of this in less than 4 hours (out of your busy schedule) of simple to follow lectures that YOU CAN APPLY from TODAY!\nIt's Time to take action! After taking this course, you can be a freelancer and create sites for clients or make your own sites for your business ventures.\nTo Your Massive Success,\nSorin Constantin & Emily S. Lima",
      "target_audience": [
        "Anyone who wantes to learn how to create a fully functional website simple and fast using Wordpress."
      ]
    },
    {
      "title": "Building Chatbots with IBM Watson Assistant: End-to-End",
      "url": "https://www.udemy.com/course/building-chatbots-with-ibm-watson-assistant-end-to-end/",
      "bio": "IBM Watson Assistant Chatbot development tutorial",
      "objectives": [
        "After taking this course, you will be able to develop your own chatbot from the very beginning to live deployment.",
        "You will be a pro and be able to take on any chatbot requirements/ project for any industry and make them real.",
        "Understand in detail how IBM Watson Assistant works",
        "Be able to deploy applications on IBM Cloud",
        "Have basic understanding of NodeJS",
        "Develop your own fully functional chatbot in less time",
        "Understand the Watson workspace platform",
        "Understand the building blocks of chatbots",
        "Understand how to improve your chatbot continuously that it remains intelligent"
      ],
      "course_content": {
        "Introduction": [
          "Preview",
          "Introduction",
          "Basic requirement",
          "IBM Watson Assistant service"
        ],
        "IBM Watson Workspace Introduction": [
          "Login into IBM Cloud, creating a service and accessing the workspace"
        ],
        "Building": [
          "Building: Intents and Entities",
          "Building: Dialog"
        ],
        "Deployment and testing": [
          "Deployment and testing"
        ],
        "Advanced chatbot improvement": [
          "Context Variables",
          "Improvement Tab"
        ]
      },
      "requirements": [
        "No development knowledge required to build a basic bot",
        "Advantageous: Logic, Process flow, Basic programming principles",
        "You should be able to use the terminal/command line on Windows / MacOS / Linux",
        "You should at least have seen a chatbot in action"
      ],
      "description": "With the IBM Watson™ Assistant service, you can build a chatbot that understands natural-language input and uses machine learning to respond to customers in a way that simulates a conversation between humans.\nThis course will teach how to use IBM Watson Assistant service to build intelligent chatbots from end to end,\nThis diagram shows the overall architecture of a complete solution:\nUsers interact with your application through the user interface that you implement. For example, a simple chat window or a mobile app, or even a robot with a voice interface.\nThe application sends the user input to the Watson Assistant service.\nThe application connects to a workspace, which is a container for your dialog flow and training data.\nThe service interprets the user input, directs the flow of the conversation and gathers information that it needs.\nYou can connect additional Watson services to analyze user input, such as Tone Analyzer or Speech to Text.\nThe application can interact with your back-end systems based on the user's intent and additional information. For example, answer question, open tickets, update account information, or place orders. There is no limit to what you can do.",
      "target_audience": [
        "Anyone who wants to develop chatbots and get introduced to AI using IBM Watson services",
        "Web developers interested in building exciting conversational interfaces and agents",
        "Mobile developers who're keen on integrating conversational agents in their apps",
        "Digitally Inquisitive Individuals",
        "Business Analysts",
        "Solution Architects"
      ]
    },
    {
      "title": "Step By Step Create Admin Panel With Spring Boot And Angular",
      "url": "https://www.udemy.com/course/step-by-step-create-admin-panel-with-spring-boot-and-angular/",
      "bio": "Dashboard, Admin Panel, Hibernate, Liquibase, Spring Boot 2, Angular 7, Mysql, CRUD operations, Json Web Token (JWT)",
      "objectives": [
        "To create admin dashboard panel",
        "Basic CRUD (Create, Read, Update, Delete) operations on Spring Boot and Angular",
        "Spring Boot",
        "Angular"
      ],
      "course_content": {
        "Introduction": [
          "Prerequests Of Application",
          "Introduction",
          "System Architecture - Overview",
          "Source Code"
        ],
        "Preparation For Spring Boot, Intellij, Lombok": [
          "Source Code",
          "Prerequests For Server Side",
          "Open Project In Intellij (Demo) - How?",
          "Install And Enable Lombok",
          "Lombok Overview",
          "Spring Overview - Basic Annotations, Dependency Injection..."
        ],
        "Restful Web Services - Overview": [
          "@RequestParam Annotation and How does it work?",
          "@PathVariable Annotation and How does it work?",
          "@RequestBody Annotation and How does it work?"
        ],
        "Server Side": [
          "Source Code For Server Side",
          "Overview",
          "Installation - https://start.spring.io",
          "Why Did We Choose Gradle? Isn't Maven most common one?",
          "Configuration",
          "Entity Diagram",
          "Hibernate Overview - Basic Annotations",
          "Create User Model",
          "Create Product Model",
          "Create Transaction Model",
          "Liquibase Overview",
          "Liquibase Template And Implementation",
          "Liquibase Implementation For Product And Transaction",
          "JPA (Java Persistence API) Repository Overview",
          "Create Repository For User",
          "Create Repository For Product And Transaction",
          "User Service Implementation",
          "Product Service Implementation",
          "Transaction Service Implementation",
          "Controller Overview",
          "Rest Controller Overview - Get, Post, Put, Delete, Patch",
          "Response Entity Overview",
          "User Controller",
          "Admin Controller",
          "Spring Security Overview",
          "How will we implement the Security? - Overview",
          "User Details Service Implementation - Security",
          "What is CORS And CRSF",
          "Spring Security Default Configuration And Customization",
          "Authentication - Spring Security",
          "Authorization - Spring Security",
          "Web Security Configuration - Spring Security",
          "Circular Reference Error - Spring Boot 2.6+",
          "Json Web Token Overview",
          "Json Web Token Installation And Configuration",
          "Create Json Web Token Provider",
          "Create Json Web Token Authorization Filter And Implement It",
          "Test Server Side",
          "Server Side - Build And Run"
        ],
        "Client Side (Frontend) and Server Side Integration (Backend)": [
          "Integration - How can we reach to Backend on the Frontend?"
        ],
        "Client Side": [
          "Prerequests For Client Side",
          "Source Code For Client Side",
          "Angular Overview - Components, Directives...",
          "Overview",
          "Create Project with Angular CLI",
          "Configuration",
          "Router Implementation In Angular",
          "Model View Controller Architecture In Angular",
          "Create User Model Class",
          "Create Product Model Class",
          "Create Transaction Model Class",
          "Observables Overview",
          "User Service Implementation",
          "Guard Authentication Implementation",
          "Error Pages Implementation (404, 401)",
          "Login Component Page And View Implementation",
          "Register Component Page And View Implementation",
          "Profile Component Page And View Implementation",
          "Home Component Page And View Implementation",
          "Product Detail Component Page And View Implementation",
          "User Template Implementation",
          "Admin Service Implementation",
          "Dashboard Component Page And View Implementation",
          "User List Component Page And View Implementation",
          "Product List Component Page And View Implementation",
          "Transaction List Component Page And View Implementation",
          "Admin Template Implementation",
          "App Component Implementation",
          "Json Web Token Implementation On Angular",
          "CSS Stylesheets For Components",
          "Client Side - Build And Run"
        ],
        "Test And Result": [
          "Test Application After All Implementations",
          "Github Repository"
        ]
      },
      "requirements": [
        "Basic java knowledge",
        "Basic html knowledge"
      ],
      "description": "In this course, we will create admin panel. With this admin panel, we will learn and implement a lot of new things. Our system will be based on user and product management system. So we will go on with users and products. The basic operations will be like below:\nFor users:\nlogin\nregister\nprofile\nto see all products\nto purchase product\nFor admin:\nmanage users (CRUD (create, read, update, delete) operations)\nmanage products (CRUD (create, read, update, delete) operations)\nAll operations will be implemented step by step.\nIn this course, we will use below tools, frameworks and languages:\nSpring Boot 2.1.4\nMySQL\nHibernate\nLiquibase\nGradle\nLombok\nSpring Security\nAngular 7\nIntellij\nJson Web Token (JWT)\nWe will create a admin dashboard. In this dashboard, we can handle CRUD operations. When I say CRUD operations, I mean Create, Read, Update, Delete operations. To handle these operations, we will create some reusable components. Of course to handle them, we will support operations on frontend and backend. So we will see an practical full stack example case of admin dashboard...\n\n\nWe will create endpoints on backend. And we will provide them with the rest api endpoints. From frontend, we will use these rest endpoints and we will serve the api data with http calls...\n\n\nHere, we can use some out-of-date versions but it doesnt matter. Because current code infrastructure is still similar...",
      "target_audience": [
        "All developers curious about Spring Boot and Angular"
      ]
    },
    {
      "title": "2-Second Website Speed Optimization In 1 Day - Technical SEO",
      "url": "https://www.udemy.com/course/improve-page-load-speed/",
      "bio": "Faster website Technical SEO tactics like website speed optimization using GTMetrix, PageSpeed Insights, HTML, CSS",
      "objectives": [
        "Speed up your site within hours of taking this course",
        "Boost user engagement",
        "Boost sales",
        "Boost email signups",
        "Boost SEO rankings",
        "Improve UX and conversion of whatever you are promoting on your site",
        "PERSONALIZED HELP from the instructor: Join OFFICE HOURS Zoom call with the instructor and students to ask questions directly",
        "WORLD-CLASS student support: I answer 99% of student questions within 24 hours"
      ],
      "course_content": {},
      "requirements": [
        "Be able to yourself or have your developer or website hosting tech support make edits to your site",
        "Be ready for more user engagement and sales"
      ],
      "description": "A faster website will immediately get more sales and more user engagement!\nThis course is made for non-technical people to be able to make 90% of the technical SEO and website speed optimization yourself and begin seeing results almost immediately.\nIn under 24 hours, you will:\nSpeed up your website\nIncrease engagement on your website\nBoost sales and email sign-up conversion rates on your site\nSave money by not having to hire a developer or SEO freelancer\nIn the mid-term and long-term, you will:\nHave your site rank higher in SEO\nGet more traffic from the higher SEO ranking\nExperience increasing engagement and sales from all the growth\nINSTRUCTOR BACKGROUND\nI've been an entrepreneur for 15+ years, have coached 1,000+ entrepreneurs in person, taught 100,000+ students, impacted millions of entrepreneurs worldwide creating 6 and 7-figure businesses in the process, and I would love to help you.\nI am an expert growth marketer, and I create winning marketing strategies for my clients all the time. Now it is your turn to grow your business, and fulfill your dreams.\nBONUSES INCLUDED\n* Personal invitation to my Facebook community after you complete the course\n* My list of 50 business-success skills when you complete the course\n* Be entered to get chosen for my student of the month status and have your business featured\nRESPONSIVE AND CARING INSTRUCTOR: WORLD-CLASS STUDENT SUPPORT\nIf you have questions, know that I am here to help! I answer 99% of student questions within 24 hours. Many students tell me that other instructors don't respond. Well, I do because\n1) I care about my students.\n2) I feel a responsibility to make sure that students get their money's worth from the course.\nCERTIFICATE OF COMPLETION WHEN YOU FINISH THE COURSE\nWhen you complete 100% of the videos in this course, you will be emailed a certificate of completion by Udemy so you can show it as proof of your expertise and that you have completed a certain number of hours of instruction in the course topic.\nMONEY-BACK GUARANTEE\nThe course comes with an unconditional, Udemy-backed, 30-day money-back guarantee. This is not just a guarantee, it's my personal promise to you that I will go out of my way to help you succeed just like I've done for thousands of my other students.\nInvest in your future. Enroll now.",
      "target_audience": [
        "Website owners who want better results from their websites",
        "If you are working on SEO for your website",
        "If you want your website to load faster"
      ]
    },
    {
      "title": "Asp.Net Core : The Complete Guide To Build Rest Api's",
      "url": "https://www.udemy.com/course/aspnet-core-the-complete-guide-to-build-rest-apis-mac/",
      "bio": "Learn to build secure RESTful Api's with Asp.Net Core, MySQL Server, Entity Framework Core and Visual Studio For MAC",
      "objectives": [
        "Understand the Web Api's",
        "Build the backend for your web and mobile applications",
        "Build Web Api's with Entity Framework & MySQL Server via Code First Approach",
        "Use Entity Framework to query data",
        "Use Model Validations to Validate the data",
        "Implement Sorting , Paging & Searching",
        "Implement Caching to reduce server load",
        "Implement Authentication & Authorization in Web Api's",
        "Deploy Web Api to Microsoft Azure",
        "Test Api via Postman",
        "Develop Real World Coffee Shop Api with Asp .Net Core"
      ],
      "course_content": {},
      "requirements": [
        "The student's must have a MAC machine.",
        "Knowledge of Asp .Net , C# and Entity Framework.",
        "C# (at a minimum lambda expressions, LINQ)"
      ],
      "description": "Welcome to the Complete Rest Api's course with Asp.Net Core and C#.\nAre you tired of boring outdated and incomplete courses , then let's dive in to this course.Well I'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of rest ful web api's with asp.net core and c#. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a complete web api's in asp.net core. And the purpose of this course is to train you to build your own Restful web api's in asp.net core.\n\nThe main focus of this course is on the Restful Web Api via Asp.NET Core and C#. So if you're familiar with C# , Asp.Net and Entity Framework Or if you want to create the Restful web api's in Asp.Net then this is the right course for you.\nIf you don't have any idea about Rest Api then don't worry because in this course we'll cover all the Rest Api concepts.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nHow to create a Rest Api via Entity Framework Code First Approach with all the advanced functions.\nConnect Your Rest Api's with MySQL Server\nImplement Status Codes\nAdding Migrations in Web Api's\nAdding Content Negotiation\nImplement Validation in Web Api's\nHow to add the Routing and Custom Methods\nImplement Sorting , Paging & Searching\nImplement Authentication and Authorization and secure your Api with JWT\nSetup Auth0\nAdding Caching inside the Rest Api's\nCreate MySQL Server on Microsoft Azure\nDeploy Web Api on Microsoft Azure\nCreate A Real World Coffee Shop Api From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Apis in Asp.Net Core happily)\n\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos courses. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. In this course you'll get a best instructors with carefully crafted content, beautiful outline and proper structured material and learning by doing.\nI'll explain you each and every single line of code. I've been in your shoes and every time copy and paste is not a solution and that's why I've tried to create everything in front of you so that you can learn how to solve the errors. We'll learn every thing from scratch.\nAnd before this course you don't need my other courses. If you're a C# developer  then you should go ahead with this course.\nAfter this course you'll be very much familiar with Asp.Net Core Web Api's and you'll be able to create any kind of real world web api's in asp.net quite easily as well as efficiently.\nSign up today, and look forward to:\nOver 4 hours of HD 1080p video content\nBuilding a Real World fully-fledged Web Api's including ones that use Rest Api Architecture , Access Token , Authentication , Authorization, Caching and much more.\nAll the knowledge you need to start building any api you want\n\n\nRemember...\nAfter this course you'll get all the  Source Code and along with this I'll also share  the links and helping material for the Rest Api's with you but you need your personal Azure Portal where you can launch your web api.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First Complete Rest Api's Course with Asp.Net Core and C#.",
      "target_audience": [
        "Developers who are familiar with C# Programming Language.",
        "Some prior programming experience in Object Oriented Programming languages will also help to pick the concepts easily.",
        "Developers who want to build the Complete Restful Web Api from A to Z.",
        "Developers with no knowledge of Asp .Net Core Web Api's who want to build Restful Web Api's with this framework."
      ]
    },
    {
      "title": "ASP.NET Core MVC and Angular 5 Project- Creating a CMS",
      "url": "https://www.udemy.com/course/asp-net-mvc-core-and-angular-5-project-creating-a-cms/",
      "bio": "Create a real world app using ASP.NET Core MVC and Entity Framework Core to build a RESTful API and Angular 5 for the UI",
      "objectives": [
        "Learn how to create restful APIs with ASP NET Core MVC",
        "Learn how to use ASP NET Core MVC with Angular 5 to create real world apps",
        "Use GET, POST, PUT and DELETE"
      ],
      "course_content": {
        "Introduction and Project Overview": [
          "Introduction",
          "project overview"
        ],
        "The Project": [
          "tools overview and new projects",
          "getting jquery and bootstrap",
          "adding the navbar component",
          "adding models and dbcontext",
          "creating the database",
          "get pages and get page",
          "page service and enabling api requests",
          "navbar links",
          "get page service method and pages component",
          "pages component",
          "routing, navbar and page content",
          "admin pages",
          "admin add page 1",
          "admin add page 2",
          "admin add page 3",
          "admin edit page 1",
          "admin edit page 2",
          "admin edit page 3",
          "admin edit page 4",
          "Sidebar 1",
          "Sidebar 2",
          "Sidebar 3",
          "Register and Authentication components",
          "Register 1",
          "Register 2",
          "Login 1",
          "Login 2",
          "Adding user links",
          "Logout",
          "Delete page",
          "Admin navbar",
          "Adding sidebar to pages",
          "adding sidebar to front end",
          "Adding the wysiwig",
          "Sidebar wysiwig and final touches"
        ],
        "Bonus Material": [
          "Bonus Material"
        ]
      },
      "requirements": [
        "Some familiarity with ASP NET Core MVC is assumed (I have a course on that)",
        "Some familiarity with Angular is assumed"
      ],
      "description": "A no-nonsense and to the point course that shows you how to create a real-world application using ASP.NET Core  with Angular 5.\n\nBuild a RESTful API with ASP.NET Core MVC\nBuild the UI with Angular 5\nThis course is for everyone that has some familiarity with Angular 5 and ASP.NET Core MVC and wants to learn how to combine the two technologies to make a real-world application.\nNOTE: You should have some ASP.NET Core MVC and Angular 5 experience before taking this course, if you want to learn ASP.NET Core MVC I have a course on it.\nNOTE 2: If the current asking price is too much for you feel free to message me for a discount!",
      "target_audience": [
        "Anyone who wants to learn how to use ASP .NET Core MVC and EF Core with Angular 5 to build a real world RESTful app"
      ]
    },
    {
      "title": "Joomla 3 Beginner",
      "url": "https://www.udemy.com/course/joomla-3/",
      "bio": "This class teaches you all of the essential concepts and knowledge you need to get started with Joomla 3.",
      "objectives": [
        "By the end of this class, you will be able to create a website powered by Joomla 3."
      ],
      "course_content": {},
      "requirements": [
        "No prior experience is necessary. All that's needed is a computer (e.g. PC, Mac)."
      ],
      "description": "This class teaches you all of the essential concepts and knowledge you need to get started with Joomla 3.\nThis Joomla 3 Beginner class is aimed at people who are completely new to Joomla. You don't need have any experience or know any coding.\nIn the first part of the class, we introduce you to Joomla and explain the basics about how Joomla works:\nIntroduction\nWhat is Joomla?\nNavigating the Public Site\nNavigating the Administrator Site\nIn the second part of the class, you'll see how to manage content in Joomla. You'll add text and images then see all your options for presenting content to your visitors.\nThe Joomla Workflow\nThe Category Manager\nThe Article Manager\nAdding Images to Articles\nAdding Code to Articles\nAdding Images for the Introduction to Articles\nFeatured Articles\nThe Menu Manager\nCreating a New Menu\nLinking to an Article\nLinking to a Blog\nLinking to Articles from a Category in a List\nLinking to a Category List\nThe Article Options\nManaging Menus\nIn the third part of the class, you'll learn about extensions which provide all of the extra features you could want in your Joomla site:\nUnderstanding Extensons\nBanners\nContacts\nJoomla Update\nMessaging\nRedirects\nSearch\nSmart Search\nModule Manager\nNew Modules\nPlugins\nLanguages\nIn the fourth part of the class, you'll learn about design and show you how to find, install and use a great-looking template:\nWhat is a Template?\nModifying Your Template\nInstalling a Template\nIn the fifth part of the class, we show you how to keep your Joomla site safe and secure.\nUser Manager\nUser Registration\nAccess Control Levels\nMaintenance and Security\nIn the final part of the class, you'll learn about a wide variety of installation options for Joomla:\nLocal Installation on a PC\nLocal Installation on a Mac",
      "target_audience": [
        "This class is great for beginners looking to create and/or manage a website using Joomla. It assumes that you have no prior web design or coding experience."
      ]
    },
    {
      "title": "CSS Infinity - Creative CSS Animation Course",
      "url": "https://www.udemy.com/course/infinity-creative-css-animation-course/",
      "bio": "Advanced CSS Animations, Transitions and Transforms And Hover Effects With Creative Examples.",
      "objectives": [
        "Html5 and CSS3 Creative Hover Effects and Animation For Web Design",
        "master css animations, transitions and transforms",
        "be able to create any creative css animation",
        "CSS Animation Effects Tutorial",
        "CSS Animations: Create Amazing Effects on Your Website"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you will need",
          "Course Setup",
          "Rotate Small Circle Inside Big Circle",
          "How to Rotate Small Circle In an Infinity Shape",
          "How to Rotate Long Tail Shape inside Infinite Shape Path",
          "Rotating Long Tails With Glowing Gradient Effects",
          "Infinity Text Animation",
          "Rotation Long Tail From Infinity To Circle",
          "Roatate Text From Infinity To Circle Path"
        ]
      },
      "requirements": [
        "Basic knowledge of html css and javascript",
        "Any Code Editor Of Your Choice"
      ],
      "description": "Have you ever seen a web animation on codepen or on any website and then you think “Ohh that is awesome! I want to do that!” but then think it’s complex and far beyond your skills?\nWell I’m here to tell you: No, it definitely is not!��I’m Md Irshad Ansari, a full stack web developer and freelancer with more than 5 years of experience, and I wanna welcome you to my CSS Animations, Transitions and Transforms Creativity Course.\n\n\nCss animation is quickly becoming an essential design tool that’s increasingly used to help our users understand and interact with our websites. It’s definitely the next big step in css! Absolutely amazing things can be done with it. It’s literally up to your imagination! It gives life to your website and enhances the user experience—and you know better user experience means a higher reputation and more satisfied visitors. So css animations, transitions, and transforms are critical skills for any web developer nowadays...and I’m here to make sure you learn it the right way.\n\n\nSo in this course you will master css animations, transitions, and transforms, starting from scratch, and not only that, we’re also gonna get our hands dirty and create many examples together so that you will get tons of ideas, and lots of inspiration to help you create any complex animation you can think of.",
      "target_audience": [
        "Html CSS Tutorials for Creative People",
        "Creative CSS Animation Effects",
        "Next Level CSS Effects"
      ]
    },
    {
      "title": "Angular 2 Jump Start With Typescript",
      "url": "https://www.udemy.com/course/angular-2-jump-start-with-typescript/",
      "bio": "Understand Brand New AngularJs 2 Framework By Building Apps",
      "objectives": [
        "Understand and write Angular 2 Applications",
        "Understand core concepts like Dependency Injection, Routing, Directives",
        "Understand Components using Angular 2",
        "Communicating between components",
        "Form Elements"
      ],
      "course_content": {
        "Introduction.": [
          "Introduction - What we are going to build?"
        ],
        "Introduction to Angular 2": [
          "What is MVC?",
          "MVC in pure Javascript",
          "Angular As A Framework",
          "Lets Analyse An Web Page",
          "Component Based Thinking",
          "Introduction to Angular 2",
          "Dependency Injection",
          "Quiz"
        ],
        "Hello World In Angular 2": [
          "What we are going to see?",
          "Project Source Code Link",
          "Typescript Aside: What is Typescript?",
          "Setting up with Angular 2 and Typescript",
          "Lets Create An Component",
          "ES6 Aside: What are modules?",
          "Wiring The Component With Angular Annotation",
          "Binding the component with view",
          "Final Step: Bootstrapping.",
          "A word on data binding",
          "Quiz"
        ],
        "Bootstrapping our application": [
          "What we are going to see?",
          "Downloading Project Source Code",
          "NPM Aside: Handling our dependency.",
          "Gulp Aside: Handling our product flow.",
          "Explaining the source files.",
          "Typescript Aside: How does Typescript is getting converted?",
          "Recap"
        ],
        "Designing our Application Navigation.": [
          "What we are going to see?",
          "Installing And Understanding Bootstarp",
          "Designing our navigation bar",
          "An Gentle Introduction to SPA"
        ],
        "Routing.": [
          "What we are going to see?",
          "Fundamentals of Routing",
          "Two Types Of Routing",
          "Injecting The Routing Providers",
          "Directives and RouterOutlet",
          "@RouteConfig Annotations",
          "RouterLink Directives",
          "Recap"
        ],
        "Service And Dependency Injection": [
          "What we are going to see?",
          "Intro to Dependency Injection",
          "Inversion of Control",
          "Creating our Injectable Service",
          "Injecting HTTP using @Inject",
          "Udemy API Aside: Udemy Rest API Details",
          "Observables and its methods",
          "HTTP and Observables",
          "Injecting Services Using providers",
          "Subscribing to Observables",
          "Recap"
        ],
        "Binding View With Our Model": [
          "What we are going to see?",
          "Designing our View",
          "Designing our Model",
          "Binding View With Our Model",
          "Designing our view with ngFor directive",
          "Conditional Check with ngIf directive",
          "MV* terminology revisited"
        ],
        "Communicating Between Components": [
          "What we are going to see?",
          "Revisit On Component Thinking",
          "Creating Card Component",
          "Passing Data to Card Component Using Properties",
          "Passing Data to Card Component Using @Input"
        ],
        "Components And View Encapsulation In Depth": [
          "What we are going to see?",
          "Shadow DOM: Webcomponent Standard",
          "How do we handle View encapsulation?",
          "ViewEncapsulation Emulated In Detail",
          "ViewEncapsulation Native In Detail",
          "ViewEncapsulation None In Detail",
          "Recap"
        ]
      },
      "requirements": [
        "Basics of Javascript is required",
        "Typescript knowledge is not required",
        "Angular 1 knowledge is not required"
      ],
      "description": "With more than 1k+ students with great ratings and review;This course is under active development based out on students topics, sign up today before the price rises! Look at the \"Upcoming Lectures\" section on the curriculum for the upcoming topics!\nThere are two groups of people. First group of people might already knew Angular 1 and thinking Angular 2 have come up in its beta version, which is completely has new concepts then Angular 1. They might be thinking how to get started with Angular 2?\nSecond group of people might be the person who wants to learn Angular from scratch and thinking where to start from. Whether should I start Angular 1 or Angular 2? Obviously Angular 2, but from where?\n\nI'm sure out your out of these two groups! And this course designed for these two groups of people! Having Angular 2 have reached its beta version, it indicates that its APIs are going to be stable and doesnt change! Thats great news!\nThis course teaches the fundamentals of Angular 2 using Typescript as an language. Don't worry if Typescript is new to you! This course teaches the enough knowledge on Typescript to work on Angular 2. We will start with fundamentals of Angular 2 and goes in depth!\nI believe the best way to learn is to understand how a Angular 2 works and what it does for you, look at examples, and then try it yourself. By keeping that principles in mind, we will be building up Udemy Course Tracker page using Angular 2 completely from scratch. By building this application, students will be getting immense knowledge on Angular 2 as framework.\n\nSignup the course today to learn Angular 2 in its beta version and be ready when Angular 2 is in production!\nThe gist of the course is as follows:\n1. What is Component in web terms?\n2. How Angular 2 is different from Angular 1 ( Bonus lectures )\n3. Dependency injection\n4. Directives\n5. Routing\n6. Communication between components\n7. Form handling\n8. Pipes and Custom Pipes\n9. Observables (advanced)\n10. HTTP Services\nand etc.\nAll code samples are put in Github, so that students can follow the lectures and build themselves!",
      "target_audience": [
        "Anyone who have interested to learn Angular 2",
        "This course doesn't teach Angular 1",
        "Anyone who wants to be ready and master Angular 2!"
      ]
    },
    {
      "title": "WordPress for Beginners 2023 + Google AdSense Implementation",
      "url": "https://www.udemy.com/course/wordpress-tutorial-for-beginners-and-google-adsense-implementation/",
      "bio": "Build your own WordPress Website / Blog in Step by Step, and Earn More with AdSense Complete Blog Monetization.",
      "objectives": [
        "You will Learn Best Placement for AdSense Ads to make them click and Boost up your Earnings.",
        "You will Learn WordPress Self Hosted site in Step by Step.",
        "You will Learn how to Set-up WordPress to your Personal Computer.",
        "You will Learn how to transfer your WordPress Localhost to Live Internet.",
        "You will Learn How to Stop Spam Comments with FREE Akismet Key.",
        "You will know how to customize WordPress, menus, sidebars, footers and etc.",
        "You will Learn Install and Customize WordPress Theme Using Customizer.",
        "You will Learn how to Set-up WordPress Child Theme for theme modification.",
        "You will Know AdSense Site Requirements for Before Signing Up.",
        "You will Learn How Add AdSense Search to your WordPress Site.",
        "WordPress Child Theme with AdSense Implemented are downloadable on this course."
      ],
      "course_content": {},
      "requirements": [
        "You will need a desktop computer or laptop and a web browser connected to the internet.",
        "No prior knowledge of WordPress is required as everything will be covered in this course.",
        "In WordPress Essentials Section You don't need any coding experience at all.",
        "In AdSense Section we will implement the ads using basic HTML and CSS to put the ads in most clickable area in the site.",
        "If you don't have an idea on HTML and CSS for now, The WordPress Child Theme with AdSense Implemented are included so you can download for reference."
      ],
      "description": "WordPress for Beginners 2023 + Google AdSense Implementation\n\nCOURSE UPDATE v2\n\nGoogle AdSense Native Ads\nAdSense Native Ads Secret Implementation has Added to the course, In this Section, you'll learn how to add the Native Ads correctly to the site.\nCOURSE UPDATE v1\nWordPress Plugins Series Added to the Course Curriculum\nIn this Series you'll be learn How to setup useful WordPress Plugins like Google Analytics, Backup, Caching, SEO Yoast and many more... this Series will updated soon....\n-----------------------------------------------------------------\nWelcome to this course WordPress Tutorial for Beginners and Google AdSense Implementation this course is the Essential of Creating a Blog or Website.\nIn this wordpress adsense course I will teach you how to create a Blog / website using WordPress self hosted site in step by step.\nWe will install a WordPress application in the desktop or laptop computer then and we will play the WordPress, we will create a...\nBlog post\nphoto gallery\npages,\nadding navigation menu,\nusing widgets\nand how to customize the theme using customizer.\nWordPress Child theme\nAdSense\nAdSense Native Ads\nand many more\nDomain name and Web Hosting is not required on this course, if you can't purchase Domain name and Web Hosting, you can follow on on this course while in local computer (Localhost) also internet connection is required.\n\nAfter we play a WordPress in Localhost, we will purchase a domain name and best cheap web hosting for your WordPress website, then we will upload to the live server to get your site live in the internet.\n\nIn the live site we will continue the development and choose a new Beautiful WordPress responsive theme and install and customize to look nice, we will customize the navigation menu, sidebar and footer widget and many more.\n\nand the last chapter on this course we will Implement Google AdSense ads...\n\nI know some of you don't have a AdSense account yet, don't worry the have video on this course Effective Google AdSense Requirements for your Website, my advice follow the Requirements and i guarantee to you your application will  be approved.\n\nIn AdSense ads section will Implement the ad using a little bit basic HTML and CSS, this is the best way to put AdSense ads in the most clickable part on your website to boost up your Earnings.\nIf you don't have a knowledge in HTML and CSS for now don't worry i will attached the WordPress Child Theme With AdSense Implemented code to this course, so you can download the theme for your reference in the future.\nAnd also we will Implement AdSense Search and AdSense Auto ads for additional earnings on your WordPress Site.\n\nAll links presented in every video are included to the article on this course you must check the article for the links in every video.\nIf you have a thought in every video, kindly ask here in the course, and ill be response as soon as possible.\n\nI design this wordpress tutorial and adsense tutorial for everyone, if you want to share your passion in your own website, like Travel, Cooking, Fashion, Web Development and soon you can create your own website and share, with this tutorial.\n\nPRODUCED BY:\n\nAxl Mulat\nWordPress / eCommerce Developer / SEO / AdSense Expert",
      "target_audience": [
        "If you want a guarantee step-by-step WordPress tutorial this course is you.",
        "Your can Learn WordPress without buying domain name and Web hosting you can build your WordPress Site in your computer (Localhost)",
        "This course is for you if you want to build a website, whether for personal blog, business or for Adsense Earnings",
        "Want to Boost Up your AdSense Earning? we will put the Ads in the Best Placement to make them click.",
        "I Design this tutorial for everyone, if you want to share your passion in your own website, like Travel, Cooking, Fashion and Web Development, this course is you you."
      ]
    },
    {
      "title": "VueJS V1 Introduction to VueJS JavaScript Framework",
      "url": "https://www.udemy.com/course/vuejs-introduction-to-vuejs-javascript-framework/",
      "bio": "Complete guide to getting started with VueJS easy to learn JavaScript Framework for data binding and dynamic web content",
      "objectives": [
        "create applications using Vuejs",
        "add vuejs to create data binding within HTML",
        "create custom directives and Vue content"
      ],
      "course_content": {
        "Getting started with Vuejs": [
          "VUEjs Course introduction",
          "Introduction to Vuejs Course intro",
          "Create a Vue instance",
          "Bring in the Data Vuejs",
          "Creating a Vue instance Object",
          "Vue instance Lifecycle",
          "Vue Output data on the fly",
          "data binding input fields",
          "Vue form data",
          "Vue Source Code"
        ],
        "Vue JS built in functionality right out of the box": [
          "Vue working with lists",
          "Adding Filters Vuejs",
          "Custom filters Dynamic Content Vuejs",
          "Source Code",
          "Vue built in Directives",
          "Events and methods",
          "Event arguments",
          "Source Code Clicks events"
        ],
        "Take what we've learned build a task list in Vuejs": [
          "Project 1 Build a task list",
          "Add remove items from list",
          "Source Code Projects"
        ],
        "Vuejs More": [
          "Create Components Vuejs",
          "Data Binding to parent",
          "Using Templates Vuejs",
          "Source Code Templates",
          "computed values",
          "Source Code Computed",
          "Create custom directives Vuejs",
          "Source Code"
        ],
        "Vuejs Advanced": [
          "AJAX data from external source",
          "Source Code"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "html and javascript",
        "access to a computer"
      ],
      "description": "Vuejs is the solution for web application developers, in creating more dynamic interactive content you deliver to your web users.   Web users are expecting more, and Vuejs is the tool to help you deliver that.   You will be amazed at how easy it is to handle data in a meaningful efficient format that will save you time.\nSimple easy to learn but powerful JavaScript Library\nBest of all, you don't need to be an expert at HTML or JavaScript to start using Vuejs.   It simply makes sense and adding to web applications can save you coding time.\nVuejs is designed for web developers who want to utilize modern reactive components within their web applications.     This is a hands-on course teaching Vuejs fundamentals and the core skills to understand how to use Vuejs within modern web development.   Vuejs is a solution to common everyday application tasks, making them easier to add and more dynamic.\nYou'll learn how to implement functionality that is expected in modern applications, and also be amazed at how easy it is to start creating applications with Vuejs.\nMore and more of the interactive and dynamic portion of web applications is moving towards being handled by the front end.\nIf you have been looking to get started with more complex frameworks like Angular, Vuejs is right for you as it is heavily influenced by Angular JS and React.\nStart exploring what you can do with Vuejs\nBy the end of the course you will have the skills and know how to add Vuejs within you website.\nI am here to help you learn how to create your own websites and ready to answer any questions you may have.\nWant to know more, what are you waiting for take the first step.  Join now to start learning how you too can create DYNAMIC and INTERACTIVE pages with Vuejs today.",
      "target_audience": [
        "anyone who wants to learn Vuejs",
        "anyone who wants to start using reactive javascript",
        "JavaScript developers",
        "frontend application designers and developers"
      ]
    },
    {
      "title": "Creating Plugins to Extend WordPress",
      "url": "https://www.udemy.com/course/creating-plugins-to-extend-wordpress/",
      "bio": "Developing Custom Plugins with PHP and the WordPress API",
      "objectives": [
        "Learn how to create your WordPress plugins and widgets",
        "Once you have completed this training course, you will have learned how to create and distribute your own plugins using PHP and the WordPress API"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Introduction And Course Overview",
          "About The Author",
          "Surveying The Existing Plugin Landscape",
          "Creating A Theme VS A Plugin"
        ],
        "Getting Ready": [
          "Setting Up A Local Web Server With MAMP",
          "Setting Up WordPress On MAMP",
          "Setting Up A Local Web Server With DesktopServer",
          "Why And How To Use An IDE",
          "Setting Up The PhpStorm IDE For WordPress Development",
          "Optional: Configuring Xdebug And Connecting It To PhpStorm",
          "Finding And Using Online And Offline Documentation",
          "A Small Grab Bag Of Developer Tips"
        ],
        "Highlights Of The WordPress API": [
          "Hooks, Actions, And Filters: A Developer's Interface With WordPress",
          "Storing Data: Posts Or A Custom Database Table?",
          "Plugin Security: Authentication, Sanitizing, Escaping, And Nonces"
        ],
        "Our First Plugin: A Dashboard Banner": [
          "Make A Plan And Mock It Up",
          "Create The Plugin Shell",
          "Find The Right Hooks",
          "Implementing The Hook We Found",
          "Refactoring The Plugin As A Class",
          "Adding CSS And/Or Javascript"
        ],
        "Our Second Plugin: Movie Reviews": [
          "Make A Plan: The Data Model",
          "Register The Custom Post Type",
          "Set Configuration Options For The Custom Post Type",
          "Add Activation And Deactivation Hooks",
          "Create Custom Fields Using Core WordPress",
          "Interface With Another Plugin For Better Custom Fields",
          "Add A Taxonomy For Custom Categories",
          "Provide A Template For Themes"
        ],
        "Further Enhancements For Our Plugin": [
          "Create A Widget For The Custom Posts",
          "Finish The Custom Widget",
          "Create An Options Page For Settings",
          "Register Settings And Sections",
          "Create The User Interface For The Custom Options",
          "Sanitize And Use The Options",
          "Add Your Own Hooks To Your Plugin",
          "Make Your Plugin Ready For Internationalization",
          "Prepare Your Plugin For Localization"
        ],
        "Additional Plugin Possibilities": [
          "Expand The Possibilities Of WordPress With The REST API",
          "Use Transients To Cache Expensive Operations",
          "Implement The Transients API",
          "Create Custom Data Using The $wpdb Class",
          "React To Deactivation And Uninstallation Of Your Plugin"
        ],
        "Distributing Your Plugin": [
          "Submitting To The WordPress.org Plugin Directory",
          "Publishing Independently On Github",
          "Ideas For Commercializing Your Plugin"
        ],
        "Conclusion": [
          "Additional Resources And How To Contribute",
          "Wrap Up"
        ]
      },
      "requirements": [
        "PC or MAC",
        "Working files are included, allowing you to follow along with the author throughout the lessons"
      ],
      "description": "In this Creating Plugins to Extend WordPress training course, expert author Joe Chellman will teach you how to create your own plugins using the WordPress API. This course is designed for users that already have a basic working knowledge of WordPress.\nYou will start by learning about the highlights of the WordPress API, then jump into creating your first plugin: a dashboard banner. From there, Joe will teach you how to create your second plugin, as well as how to further enhance your plugin, including how to create a widget for custom posts, register settings and sections, and prepare your plugin for localization. This video tutorial also covers additional plugin possibilities, such as using transients to cache expensive operations, implementing the transients API, and reacting to deactivation and uninstallation of your plugin. Finally, you will learn how to distribute your plugin, including how to publish independently on GitHub and submit to the WordPress plugin directory.\nOnce you have completed this computer based training course, you will have learned how to create and distribute your own plugins using PHP and the WordPress API. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "This course is designed for users that already have a basic working knowledge of WordPress",
        "This course is geared towards WordPress users learning how to create WordPress plugins and widgets"
      ]
    },
    {
      "title": "WordPress SEO 2021 - The Complete WordPress SEO Blueprint",
      "url": "https://www.udemy.com/course/seo-2020-the-complete-wordpress-seo-blueprint/",
      "bio": "Learn about WordPress SEO, Keywords, Google Trends, Page Authority, Speed Optimization, Bounce Rates and so much more",
      "objectives": [
        "Optimize your websites to rank highly in major search engines",
        "Learn how to properly research for the right keywords",
        "Configure and use some of the very best plugins for WordPress SEO",
        "Apply the very latest techniques to boost your Website's speed",
        "Write better content that is SEO friendly",
        "Increase website traffic by 97%"
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "Connect with Me"
        ],
        "Introduction to SEO": [
          "What is SEO?",
          "Basic Terms & Terminologies used in SEO",
          "General Introduction to Google Ranking Steps",
          "On page SEO",
          "Off page SEO",
          "DOs and DONTs of SEO",
          "Back Links"
        ],
        "Google Analytics & Google Search Console": [
          "Introduction to Google Analytics & Google Search Console",
          "How to Install Google Analytics on your WordPress Website",
          "Working with Google Analytics - Part 1",
          "Working with Google Analytics - Part 2",
          "How to Install Google Search Console",
          "Working with Google Search Console - Part 1",
          "Working with Google Search Console - Part 2"
        ],
        "Rank Math": [
          "Why Rank Math?",
          "Installation and Setup",
          "General Settings",
          "Titles & Meta - Part 1",
          "Titles & Meta - Part 2",
          "Connecting our Site to Google Search Console",
          "Site Maps",
          "404 Redirections",
          "SEO Analysis",
          "Tools & Status",
          "Bulk Editor Tool",
          "Optimizing our Content"
        ],
        "Keyword Research & Competition": [
          "Introduction",
          "Short Tail Keywords & Long Tail Keywords",
          "Understanding Key Phrases",
          "Ask the Public",
          "Using Google",
          "Domain Authority vs Page Authority",
          "Using the Moz Bar",
          "Moz Keywords Analysis Tools",
          "Keywords Everywhere Tool"
        ],
        "On Page SEO - Content Optimization": [
          "Introduction",
          "Google Ranking - The Key Factors",
          "Long Articles are the BOMB",
          "Crafting Headlines, SEO Titles & Meta Descriptions",
          "Maximizing your CTRs",
          "Creating the Table of Contents",
          "Adding Rich Snippets",
          "How to get Google to Award you Rich Snippets",
          "The importance of the ALT Text",
          "Permalinks",
          "Internal & External Links",
          "Review Update"
        ],
        "Speed Optimization": [
          "Introduction",
          "Testing your Speed Site",
          "Web Hosting",
          "JPGs NOT PNGs",
          "Serving Scaled Images",
          "Optimizing Images",
          "Using a Content Delivery Network",
          "Better Search & Replace",
          "Caching",
          "Fixing Broken Links",
          "Lightweight vs Heavyweight Plugins",
          "Database Cleanup",
          "Fighting against Spam",
          "Adding SSL"
        ],
        "Conclusion": [
          "Getting your Certificate",
          "Thank You"
        ]
      },
      "requirements": [
        "Basics of WordPress",
        "Basic knowledge of general SEO"
      ],
      "description": "What is the point in having the best services, products or even articles when no one can find you on the internet? If you plan on having a successful business or website online, then your Search Engine Optimization needs to be top notch.\nWelcome to the Ultimate Guide for WordPress SEO in 2021. This is a course I have designed specifically to help you get your websites and content on the first page of Google and other major search engines using the latest techniques.\nSo what exactly am I going to learn?\nGlad you asked. This course is broken down into 4 main sections.\nIn the first section I am going to show you exactly how to use one of the most powerful plugin for WordPress SEO - Rank Math  plugin. This is a plugin that is used by millions of WordPress users because it does a great job at SEO. I will show you how to configure and use its most important functions.\nIn section 2, we are going to cover keywords. Being able to know how to target and find the right keywords is absolutely essential for SEO. I am going to show you some of the best web tools for researching and finding keywords. You will learn how to properly analyze these keywords and how to properly utilize them in your content.\nSection 3 is all about optimizing your content. You will learn about\nHow to write fully optimized titles for your pages and posts\nHow to optimize your headings\nHow to maximize your CTRs\nHow to properly link internally and externally to boost your 'link juice'\nHow to use SEO friendly images\nand much more\nFinally in section 4, we will cover technical SEO.  Its one thing to write optimized content for search engines and its quite another to have a website that is running at peak performance and fully optimized for search engines.\nYou will learn how to test the speed of your website and you will learn about all the most effective ways to improve the overall speed and performance of your WordPress website.\nBy the end of this course, you will have gained enough knowledge to begin to optimize both your content and website for all the major search engines.\nThank you and I hope you sign up for the course today.\nAlex.",
      "target_audience": [
        "Students interested in learning about WordPress SEO",
        "WordPress users interested in getting their websites to rank highly on major search engines"
      ]
    },
    {
      "title": "Web Design Course With HTML, CSS, Wordpress Novice to Expert",
      "url": "https://www.udemy.com/course/web-design-course-with-html-css-wordpress-novice-to-expert/",
      "bio": "Learn the Basics of HTML, CSS, Wordpress and get Started with Web Design",
      "objectives": [
        "Essential Function of HTML",
        "Essential Function of CSS",
        "Essential Function of Wordpress",
        "Essential Function of Elementor",
        "The fundamentals of HTML and CSS, including structure, layout, and styling",
        "How to create responsive websites that look great on any device",
        "How to use WordPress to create and manage your website without any coding experience",
        "How to add custom features and functionality to your website with WordPress plugins and themes"
      ],
      "course_content": {
        "HTML": [
          "Introduction",
          "HTML CSS Introdicement",
          "Start with HTML",
          "Text, header and paragraphs",
          "Style",
          "Formatting",
          "Link",
          "Image",
          "List",
          "Table"
        ],
        "CSS": [
          "CSS Introducement",
          "Selectors",
          "Internal inline and external CSS",
          "Color CSS",
          "Background CSS",
          "Borders",
          "Padding",
          "Alignment, line spacing and letter spacing",
          "Link",
          "Float",
          "Text icon height width font",
          "List and navigation",
          "Project of NAV Bar"
        ],
        "Wordpress": [
          "Introduction to Wordpress Course",
          "WordPress Functions Introduction",
          "Posting on Wordpress",
          "Heading wordpress",
          "All tools for post",
          "Add Media to post",
          "More Settings on Post",
          "Category",
          "Pages",
          "Comments",
          "Widgets",
          "Themes",
          "Plugins",
          "Setting Homepage on Elementor",
          "Function Of Elementor-001"
        ]
      },
      "requirements": [
        "Understand English Language",
        "Able to run computer"
      ],
      "description": "Hello Everyone, Welcome to the Web Design Course for Beginners to Intermediate. If you plan to learn HTML, CSS, Wordpress from the beginning then this is a basic-level course. If you never open HTML, CSS, Wordpress before or if you don't have any previous knowledge then you join in this class because we designed this course from the very basic to advanced.\n\n\nCourse Features:\n\nThe fundamentals of HTML and CSS, including structure, layout, and styling\nHow to create responsive websites that look great on any device\nHow to use WordPress to create and manage your website without any coding experience\nHow to add custom features and functionality to your website with WordPress plugins and themes\nAnd much more!\n\n\nThis course have three separate section like HTML, CSS, Wordpress. So lets take a look what you will learn from this course:\nIn HTML Section you will learn about:\n\n\nTag Element Attributes\nChoosing Editor\nVisual Studio Setup\nStructure and Title\nText and Heading\nFont Color\nBackground Color\nText Background\nFonts\nText Formatting\nPage Link and Hyperlink\nAdding and Resizing the Image\nList\nTable\nI-frame and many more\n\n\nIn CSS Section you will learn about the:\nCSS Selectors\nExternal CSS\nMargin\nPadding\nColor and Background\nText\nBorders and many more\n\n\n\n\nIn WordPress Section you will learn about the:\nWordPress Installation\nFunctionality of WordPress\nMedia\nPage\nComment\nAppearance\nPlugins\nUser\nSettings\nDevelop a complete site and many more\n\n\nBy the end of this course, you will have strong skills in creating websites with. So once you will complete this course you will have knowledge about HTML, CSS and Wordpress\nDuring learning, if you face any problem then you don’t have to worry about I am always there for you to help you out. You just have to ask me the questions. I am expecting you to have you in my first lesson. Thanks",
      "target_audience": [
        "Beginner who wants to learn html from the beginning",
        "Anyone who wants to learn the basics of web design",
        "People who want to create their own website or blog",
        "Anyone who wants to learn WordPress"
      ]
    },
    {
      "title": "Build A Flashcard Website With Python and Django",
      "url": "https://www.udemy.com/course/build-a-flashcard-website-with-python-and-django/",
      "bio": "Learn Python Driven Web Development With Django and Python!",
      "objectives": [
        "Introductory Django",
        "How to Build Basic Websites With Django",
        "Download and Install Python",
        "Install Django",
        "How To Manage URL's",
        "How to Create Views/Pages"
      ],
      "course_content": {
        "Set Up TheDevelopment Environment": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Install Python",
          "Install Sublime Text Editor and Git Bash Terminal",
          "Create a Virtual Environment",
          "Install Django and Startproject",
          "Run The Web Server",
          "Migrate The Database"
        ],
        "Create The Django Flashcards App": [
          "Startapp",
          "Create an URLS.py File",
          "Understanding URLS, Views, and Templates",
          "Intro To The Bootstrap CSS Framework",
          "Understanding Base.html",
          "Add a Bootstrap Navbar",
          "Build Some Math Web Pages",
          "Create Math URLS",
          "Introduction To Web Forms",
          "Form Action",
          "Form Processing",
          "Random Number Generation",
          "Pass Random Numbers To View",
          "Determine Correct Answer",
          "Answer Formatting",
          "Colored Message Boxes",
          "Flashcard Images",
          "Download Image Files",
          "Create The Subtract Page",
          "Create The Multiply Page",
          "Create The Divide Page",
          "Error Handling"
        ],
        "Version Control and Web Hosting": [
          "Version Control With Git",
          "Version Control With Github.com",
          "Introduction To Heroku",
          "Install The Heroku Toolbelt",
          "Generate a Procfile",
          "Change Settings.py File For Heroku",
          "Push Code To Heroku",
          "Heroku Domain Names",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "In this course we'll build a cool little website with Django and Python that will generate random math flashcards and allow the user to guess the answer.  The app will then evaluate the answer and let the user know if they were correct or not.\nIt may seem like a simple app, but there are a lot of moving parts that will allow us to really learn some cool things with Django and Python!\nYou don't need to know Python, Django, or HTML to take this course, but if you already know any of those things, it'll be easier for you to follow along.\nAfter we build the website, I'll show you how to set up Version control with Git, then we'll push our code to Github for safe keeping before pushing it to Heroku for Free Web hosting.\nPython is easily the most popular programming language out there, and Django is the most popular Web Development Framework for Python. Learning it has never been easier!",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the to build Websites with Django and Python",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "The Ultimate Wix Code Course: Beginner to Full-Stack Wix Dev",
      "url": "https://www.udemy.com/course/velo-for-beginners/",
      "bio": "Learn to enhance your Wix website with code— dynamic behavior, custom forms, CMS databases, API integrations and more!",
      "objectives": [
        "How to navigate the Velo development environment",
        "Basic JavaScript as a foundation for Velo code",
        "How to use Velo code to interact with the Wix editor and customize behavior",
        "How to use Velo API's to customize frontend business solutions",
        "BONUS: Advanced Velo concepts and Full Stack Wix Development"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to Velo for Beginners!",
          "Prerequisites",
          "How the course works",
          "Course Resources",
          "2025 Wix Updates - 2024 Wrapped"
        ],
        "Module 1 - Dev Mode On!": [
          "Lesson 1 - Overview: The Velo Dev Environment",
          "Lesson 2 - Velo: Writing Your First Line of Code.",
          "Lesson 3 - JavaScript: The Language of the Web",
          "Lesson 4 - Web Dev: Debugging is Coding."
        ],
        "Module 2 - Interacting with the Editor": [
          "Lesson 1 - Overview: Where to write your code",
          "Lesson 2 - Velo: Selecting an Element",
          "Lesson 3 - JavaScript: Data types and variables",
          "Lesson 4 - Velo: Basic Element Interactions",
          "Lesson 5 - Web Dev: Under the hood",
          "Lesson 6 - Velo: Careful!"
        ],
        "Module 3 - Forming a Form": [
          "Lesson 1 - Velo: Input Elements",
          "Lesson 2 - JavaScript + Velo: Event Listeners",
          "Lesson 3 - Project: Counter",
          "Lesson 4 - JavaScript: Operators",
          "Lesson 5 - Project 2: Calculator"
        ],
        "Module 4 - Data, Data, Data": [
          "Lesson 1 - Web Dev: Breakdown of a Web App",
          "Lesson 2 - Overview: The Wix CMS (Refresher)",
          "Lesson 3 - JavaScript: Objects and Arrays",
          "Lesson 4 - Web Dev: CRUD Operations",
          "Lesson 5.1 - Velo: The Wix Data API - Intro",
          "Lesson 5.2 - Velo: The Wix Data API - Insert",
          "Lesson 5.3 - Velo: The Wix Data API - Get",
          "Lesson 5.4 - Velo: The Wix Data API - Update",
          "Lesson 5.5 - Velo: The Wix Data API - Save",
          "Lesson 5.6 - Velo: The Wix Data API - Remove & Truncate"
        ],
        "Module 5 - Show em' what you got!": [
          "Lesson 1 - Velo: Wix Data Query",
          "Lesson 2 - Velo: Displaying data with a Repeater",
          "Lesson 3 - Velo: Pagination",
          "Lesson 4 - JavaScript: Functions",
          "Lesson 5 - Exercise: Refactoring code",
          "Lesson 6 - Project: Student Registry"
        ],
        "Module 6 - Let's get moving!": [
          "Lesson 1 - Web Dev: Website Structure",
          "Lesson 2 - Velo: Wix Location API site navigation",
          "Lesson 3 - Velo: Datasets API",
          "Lesson 4 - Velo: Dynamic Pages",
          "Lesson 5 - Velo: Multi Reference Fields",
          "Lesson 6 - Project: To Do List App",
          "Bonus: Reference Fields Refactoring"
        ],
        "Module 7 - Who's there?": [
          "Lesson 1 - Web Dev: Authentication",
          "Lesson 2 - JavaScript: Promises",
          "Lesson 3 - Velo: Wix Members API",
          "Lesson 4 - Velo: Wix CRM API",
          "Lesson 5 - JavaScript: Loops",
          "Lesson 6 - Velo: Triggered emails"
        ],
        "Module 8 - Final Project: Pollbook": [
          "Part 1 - Project Requirements",
          "Part 2 - Sign Up page",
          "Part 3 - Login Page",
          "Part 4 - Create Poll page",
          "Part 5 - Vote on polls",
          "Part 6 - View poll results",
          "Part 7 - All Polls page",
          "Part 8 - Member Profile pages",
          "Bonus: More ideas for your web app",
          "Project Submission"
        ],
        "Epilogue - The learning never ends": [
          "Epilogue - The learning never ends"
        ]
      },
      "requirements": [
        "No prior coding experience is needed.",
        "Familiarity with the Wix Editor is recommended."
      ],
      "description": "Have a powerful idea for your Wix site but no idea how to bring it to life?\nThis course was built for you!\nDon’t let your idea stay stuck in drag-and-drop limitations. With this course, you’ll finally unlock the power of code—on a platform you already know and love.\n\n\nThe Ultimate Wix Code Course aims to guide you from being a simple Wix user or designer to becoming a Wix developer, equipping you with essential skills and the right mindset for your journey. Throughout this course, you'll gain proficiency in accessing the Velo environment, understanding its documentation, and, most importantly, leveraging it to transform your website into a dynamic web app!\n\n\nWhat You’ll Learn:\nWith over 20 hours of hands-on lessons, By the end of this course, you’ll be able to:\nWrite JavaScript inside your Wix site using the built-in Dev Mode.\nAdd custom functionality like dynamic forms, filters, toggles, and pagination\nMaster the Wix CMS and use it to build fully dynamic pages\nWork with backend code to store data, send emails, and protect APIs\nConnect third-party services using APIs and HTTP functions\nBuild and launch complete full-stack web apps—without leaving Wix\n\n\nThe Course is divided into two main parts:\n1. Velo for Beginners\nThis part covers the very basics and all the tools you need to effectively add page or \"frontend\" logic in Wix. Each module culminates with a unique project that helps you flex those coding muscles and practice creative problem solving as a developer.\n2. Advanced Velo\nThis part picks up where the previous leaves off and covers more advanced concepts such as the Wix \"backend\" and provides the tools you need to build a full stack web app in Wix.\n\n\nReal Projects You'll Build:\nStudent Registry App with form submission and data queries\nPollBook – a full-stack voting platform with user accounts\nTo-Do List App using CMS, page logic, and CRUD operations\nCalendly Integration using HTML embeds and backend services\nAnd much more—every module ends with a hands-on coding project\n\n\nWhat is Velo?\nVelo began in 2016 as \"Wix Code\", later renamed \"Corvid\" (2019), and later again rebranded as \"Velo\" (2021) due to sounding like Covid. Technically Velo is the ability to extend your Wix website's functionality using JavaScript. It includes the interface in which this code is managed and written as well as the unique syntax and API's necessary to interact with the Wix platform.\n\nAs of 2025 - Wix has announced it will be adding the option to use the JavaScript SDKs as an alternative to some Velo packages. Nonetheless, Velo remains a pillar of coding in Wix and the skills provided in the course are easily applicable to the JavaScript SDKs.\n\n\nWhy Wix + Velo?\nWhether you already have a Wix site or you're a developer exploring new tools, Wix + Velo is one of the fastest ways to build powerful, custom-coded web experiences. It allows you to:\nAdd that extra feature you’ve always wanted—especially when Wix doesn’t offer a built-in solution\nLaunch a minimum viable product (MVP) quickly, without needing to set up external infrastructure\nAvoid backend headaches by letting Wix handle hosting, database, and server management for you\nBypass common development obstacles, like authentication, payment systems, and form handling\nBuild full-fledged web apps entirely within the Wix ecosystem—fast, flexible, and scalable\nIf you're serious about turning your Wix site into something powerful, dynamic, and unique, Velo is how you make it happen.",
      "target_audience": [
        "DIY website builders on Wix who want to extend their website's functionality with code.",
        "Web design agencies who want to expand their services and bring in new business.",
        "Web developers who want to extend their skill set to a new language and platform.",
        "Anyone starting off on their web development journey."
      ]
    },
    {
      "title": "Cloud Security with AWS and Microsoft Azure",
      "url": "https://www.udemy.com/course/cloud-security-with-aws-and-microsoft-azure/",
      "bio": "learn cyber security tools and services in modern era of cloud computing 2023",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over Microsoft Azure and Amazon Cloud- Amazon Web Services.",
        "Having command over all the Cloud Security options, services and tools available with all Identity and Security tools available.",
        "You would be able to take better decisions at securing your cloud services",
        "You would be able to implement various security best practices and also be able to integrate various cloud security services"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites at all. But if you are aware of some cloud based or web development tools and technologies, it is helpful."
      ],
      "description": "Cloud Security has almost been overlooked by a lot of professionals, where they just tend to focus on getting some sort of Cloud Certifications. When they are building an application, or working on some project, people generally forget to implement the Security aspect correctly. In this rapidly changing world, where everything is moving to Cloud platforms, with exponential rise in Cyber threats, no individual or organization can risk their job or business to an open Vulnerability waiting to be harnessed by any kind of Black hat guy. You can avoid such situations simply by taking a few simple decisions, adding a few compliance on your Cloud Project.\nThis course is all about implementing the Cloud Security in the first place, where you will learn all the security tools and services available on AWS (Amazon Web Services) and Microsoft Azure. You will learn how you can create instances for Security services and how you can manage them by integrating with you cloud applications. You will also learn some of the best practices that you can put forward in your overall cloud strategy.\nYou will be learning a range of services from Hardware Security to firewall, network security to adding a single sign-on and a lot more. You will learn Cloud security on AWS in the starting sections, followed by Cloud security on Microsoft Azure. You will learn following security services in this course:\nCloud Security on AWS\nArtifact\nCloudHSM (Hardware Security Module)\nCertificate Manager\nDirectory Service\nGuard Duty\nInspector\nSingle Sign-on\nWAF and Shield\nCloud Security on Microsoft Azure\nSecurity Center\nAzure Active Directory\nVPN Gateway\nDDoS Protection\nKey Vault\nDedicated HSM\nApplication Gateway\nAzure Sentinel\nInformation Protection",
      "target_audience": [
        "Anyone who just wants to learn and test Amazon Web Services Platform or any developer willing to develop his/her application over Amazon Cloud- Amazon Web Services.",
        "Individuals who are interested in the domain of Cyber Security and want to make a career in Cloud Security.",
        "Individuals who are currently learning or working on cloud and interested to learn Cloud Security on AWS and Microsoft Azure.",
        "Anyone who just wants to learn and test Microsoft AZURE cloud or any developer willing to develop his/her application over Microsoft Azure."
      ]
    },
    {
      "title": "React, NextJS and Golang: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/react-go-advanced/",
      "bio": "React with Typescript, Next.js, Redux, Golang, Docker, Redis, Stripe, Frontend & Backend Filtering, Gorutines, Channels",
      "objectives": [
        "Use Docker",
        "Login with HttpOnly Cookies and Multiple user Scopes",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "Gorutines and Channels",
        "React Hooks with Typescript",
        "React Material UI",
        "Use Redux"
      ],
      "course_content": {},
      "requirements": [
        "Good understanding of Golang",
        "Good understanding of React"
      ],
      "description": "Learn how to create an Ambassador App using React, NextJS and Golang. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big Golang API.\nIn Go you will learn:\nUse Docker\nUse the Fiber framework inspired by express.js\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nLogin with Scopes\nUse Gorutines\nUse Channels\nUse Golang with Redis\nUse Stripe\nSending Emails\nFilter Cached Products\nIn React you will learn:\nCreate a React project with Typescript\nCreate a Next.js project with Typescript\nReact Material UI\nUse Redux\nUse React Hooks\nCreate public and private routes\nRestrict routes for unauthorized users\nUse Stripe\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Master Amazon EC2 Storage: Complete Guide for EBS, EFS & AMI",
      "url": "https://www.udemy.com/course/master-amazon-ec2-storage-complete-guide-for-ebs-efs-ami/",
      "bio": "Block Storage | Object Storage | Elastic Block Store | Snapshots | AMIs | Image Builder | Elastic File System (EFS)",
      "objectives": [
        "Register and Navigate an AWS Account",
        "Distinguish between Global vs. Regional Services in AWS",
        "Creating Billing Alerts and Enable Multi-Factor Authentication",
        "Create IAM users for Basic Account Administration",
        "Understand the Core Features of EC2",
        "Explore various EC2 Instance Types",
        "Create and Deploy EC2 Instances from Amazon Machine Images (AMIs)",
        "Navigate the EC2 Instance Dashboard",
        "Create and Attach Elastic IPs",
        "Remotely Administer EC2 Instances using Terminal and PuTTY",
        "Create and Configure EC2 Instance Launch Templates",
        "Creating Security Groups and IAM Roles for EC2",
        "Distinguishing between Block, File and Object Storage",
        "Deployment and Administration of Elastic Block Store (EBS) volumes",
        "Creating and Deploying EC2 Instances from EBS Snapshots",
        "Configuring an EC2 Instance with Ubuntu",
        "Creating Elastic File Stores (EFS)",
        "Attaching multiple Instances to a Single EFS"
      ],
      "course_content": {
        "Getting Started with AWS": [
          "Introduction",
          "AWS Pricing Foundations",
          "AWS Free Tier Overview",
          "AWS Acceptable Use Policy",
          "AWS Account Registration",
          "AWS Cloud Practitioner Exam - Key Topics",
          "AWS Global vs. Regional Services",
          "Global vs. Regional Services Example",
          "Creating Billing Alerts",
          "AWS Multi-Factor Authentication (MFA)",
          "Activate MFA for the Root User Account",
          "Creating IAM Users and Groups",
          "IAM User Custom Sign-In Link",
          "Configure a Custom Password Policy"
        ],
        "Amazon Elastic Compute Cloud (EC2)": [
          "Introduction to EC2",
          "EC2 Instance Core Features",
          "EC2 Instance Types",
          "Amazon Machine Images (AMI)",
          "Creating an IAM User for EC2",
          "The EC2 Dashboard",
          "Deploying an EC2 Instance",
          "Deploying an EC2 Instance (Continued)",
          "EC2 Instances Console",
          "Elastic IP (Theory)",
          "Elastic IP (Guide)",
          "EC2 Instance Administration (Guide)",
          "EC2 Instance Launch Templates",
          "Creating an Amazon Machine Image (AMI)",
          "IAM Roles (Theory)",
          "IAM Roles (Practical Guide)",
          "IAM Roles for EC2 (Guide)",
          "Introduction to Security Groups",
          "Security Groups (Guide)",
          "Secure Socket Shell (SSH) Overview",
          "PuTTY (SSH) Client for Windows",
          "EC2 Instance Connect (Guide)"
        ],
        "AWS Storage (EC2)": [
          "Introduction",
          "Block vs. File. vs Object Storage",
          "Amazon Elastic Block Store (EBS) Overview",
          "Amazon EBS Guide [Part 1]",
          "Amazon EBS Guide [Part 2]",
          "EBS Snapshots Overview",
          "EBS Snapshots (Guide)",
          "Amazon Machine Image (AMI)",
          "Amazon AMI Guide [Part 1]",
          "Amazon AMI Guide [Part 2]",
          "Amazon EC2 Image Builder",
          "Amazon EC2 Image Builder Guide [Part 1]",
          "Amazon EC2 Image Builder Guide [Part 2]",
          "Amazon Elastic File System (EFS)",
          "Deploy an EC2 Instance with Ubuntu (Guide)",
          "Creating an EFS (Guide)",
          "Attach EFS to EC2 (Guide)",
          "Upload Files to EFS via FTP (Guide)",
          "Attach EFS to Second EC2 Instance (Guide)",
          "Account Cleanup"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to our complete guide on Amazon EC2 Storage. In this course, you will learn how to effectively manage and optimize your storage on Amazon Web Services (AWS). This includes a comprehensive overview of the main forms of EC2 storage offered by AWS, including Elastic Block Store (EBS), Elastic File System (EFS), and Amazon Machine Images (AMI).\n\nThe course starts with the foundations of AWS, where we demonstrate how to register an AWS account. Students also learn the basics of AWS billing, global vs. regional services, and AWS multi-factor authentication (MFA).\n\nOnce students are familiar with navigating the AWS dashboard, we dive into working with the EC2 service. Here we explore the core features of EC2 instances, along with instance deployment, instance administration, and security. Students will learn how to create and deploy instances from Amazon Machine Images (AMIs) that are fully equipped with Elastic IP addresses, and remote access via terminal and PuTTY. We also cover a host of other integral concepts including IAM roles for EC2, Security Groups, and EC2 Instance Launch Templates.\n\nAfter the EC2 section, we delve into AWS EC2 storage solutions. Here, we start with exploring the key differences between block, file, and object storage. From there, we take a deep dive into Amazon Elastic Block Store (EBS). EBS is a block storage service provided by AWS which allows for the creation of virtual disks, called EBS volumes that can be attached to Amazon Elastic Compute Cloud (EC2) instances. These EBS volumes can be used as raw block devices, in order to store data, such as system files, application data, and virtual machine images. We will cover how to create, attach, and manage EBS volumes, as well as how to use EBS Snapshots to create point-in-time backups of your data.\n\nFrom there, we explore Amazon Machine Images (AMIs), which are templates that contain the software configuration and data required to launch an EC2 instance. We will cover how to create and customize AMIs, as well as how to use the EC2 Image Builder to automate the creation of AMIs.\n\nIn the last section, we introduce students to the Elastic File System (EFS), which is a file storage service provided by AWS. EFS allows you to create a file system that can be accessed by multiple EC2 instances to store and share files across multiple availability zones. We will cover how to create and manage EFS file systems, as well as how to mount EFS file systems on your EC2 instances.\n\nBy the end of this course, you will have a solid understanding of the various storage options available on AWS, and you will be able to confidently choose the right storage solution for your needs. You will also have the skills and knowledge to effectively manage and optimize your storage on AWS, ensuring that your data is safe, secure, and accessible.\n\nIf you’re excited about learning everything you need to know about AWS EC2 storage, hit the enroll button and let’s get started.",
      "target_audience": [
        "Students interested in Cloud Computing with AWS",
        "Students interested in learning the foundations of Amazon Web Services",
        "Students interested in Mastering the Amazon EC2 Service",
        "Students interested in Mastering EC2 Storage Solutions: ELB, EFS, AMI"
      ]
    },
    {
      "title": "Build lightning fast web components apps for any framework",
      "url": "https://www.udemy.com/course/webcomponents-apps/",
      "bio": "Learn how to create reusable components that work in every modern framework",
      "objectives": [
        "You will learn the webcomponents spec: Templates, Custom Elements, Shadow DOM, ES Modules",
        "You will learn to build re-usable components without any library",
        "You will learn protips on how to use webcomponents in real-world scenarios",
        "You will learn to build a complete app with four components",
        "You will learn to use new CSS pseudo selectors for shadow DOM",
        "You will learn to use webcomponent state management & communication"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML, CSS & JavaScript knowledge is required",
        "Bonus chapter on JS features used in the course included",
        "No prior webcomponents knowledge required",
        "Prior experience with component systems a plus but not mandatory"
      ],
      "description": "A lot of aspiring developers and even experienced frontend developers tend to get hung up on the complex dependencies and setup requirements just to get started writing web applications. Not with this course. The first coding chapter uses no libraries at all and the rest of the course uses easy-to-use boilerplate templates for you to get started with.\nThis course showcases a new standard called web components, which allows us to write re-usable and framework agnostic components without the need of any tooling or libraries. You'll be able to write your own lightning fast web component powered apps or build single components to drag & drop into your existing projects, independent of what framework you're using.\nWeb components work with Angular, React, Vue and many more frameworks out of the box.\nThis course goes well beyond the basics of web components by teaching real-world best practices for efficiently building web apps. Whether you're a beginner or have existing experience with web development, I've made sure to pack the course full with my years of experience building products the right way. Topics include:\n\n\nWeb components basics:\nThe theory and concept behind web components and all four parts of the spec\nHow do define custom elements and deal with the lifecycle of a component\nManaging state and rendering to the shadow DOM\nDifferent concepts on how component communication can be managed\nIntroduction to new CSS pseudo selectors for web components like :host or ::slotted\nBuilding your first app with the technologies mentioned above\n\n\nReal-world automated tests via ESLint & Karma\nImplementing linting vis ESLint\nSetting up prettier for automatic code-formatting\nUnit and integration testing via Karma\nSetting up Istanbul for code coverage reports\nSetting up CircleCI for Continuous Integration, so tests run with every push to your repo\nSetting up slack notifications for failed and fixed tests\nAdding CI badges to your repos to highlight the status of your tests\n\n\nAfter taking this course, you’ll have a solid foundation in the fundamentals of the web components standard, and will be confident enough to build production grade apps powered by web components.",
      "target_audience": [
        "Beginner webdevelopers wanting to learn the hottest frontend trend in 2019",
        "Beginner or advanced developers with existing frameworks knowledge (React, Angular, Vue, etc) who want to try webcomponents",
        "Advanced developers who want to integrate webcomponents in their existing workflows and frameworks"
      ]
    },
    {
      "title": "Web Development: Project Based Learning",
      "url": "https://www.udemy.com/course/web-development-project-based-learning/",
      "bio": "Hands-On Approach",
      "objectives": [
        "Understanding of APIs and handling it using JavaScript",
        "Using Bootstrap Framework in web application design",
        "HTML and JavaScript basics with hands-on projects",
        "Working with Google Charts using JavaScript",
        "Hosting a project on GitHub",
        "Working with JSON data"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Calculator using JavaScript",
          "Uploading the project on GitHub"
        ],
        "Weather Station": [
          "Weather Station using OpenWeatherMap API"
        ],
        "Todo List": [
          "Todo List"
        ],
        "Stop Watch": [
          "Stop Watch Project"
        ],
        "Tesla Stock Market Dashboard": [
          "Tesla Stock Market Dashboard",
          "End of the Course"
        ]
      },
      "requirements": [
        "Basic understanding of web development is required."
      ],
      "description": "This course will help you understand the art of designing Web applications by making use of HTML, Bootstrap and JavaScript technologies. This is a project based course and in this journey you will design five utility based projects completely from scratch. This course provides you an in depth knowledge of working with various useful technologies that developers use for building modern day web applications. You will get to explore working with APIs, DOM manipulation, working with google charts, understanding bootstrap framework and its practical use, Hosting a web project on GitHub and much more. All the codes that have been designed in the course will be provided to you so that you can revisit them whenever needed. The course attempts to teach you web development skills with hands-on approach. The following projects will be designed in this course:\n1. Calculator : Here you will learn how to perform Addition, Subtraction, Multiplication and Division operation by making use of JavaScript and you will also learn about DOM manipulation. All the components will be styled using bootstrap framework so that you get a responsive design. Further you will get a chance to learn how this project can be hosted on GitHub so that you get a dedicated URL on GitHub for your project that you can share with other people. This will teach you some basic and necessary skills to get started with GitHub which is one of the most widely used services for managing Git Repositories.\n2. Stop Watch: Here you will learn the art of designing a ready to use stop watch which works on any browser by making use of JavaScript. You will work with functions like setInterval( ) and clearInterval( ) and understand their use case from practical view point. You will also learn how to disable a button and enable it so that whenever needed you can control the functionality of the web components using JS.\n3. Todo List: Here you will get a chance to design your own Todo list that has the features of adding, editing and deleting a  Todo. In this you will learn how to append a child node to a parent element using JavaScript and how to render the components dynamically on the browser basis user interaction with the Web App.\n4. Weather Station: In this project you will work with OpenWeatherMap API to fetch the live weather data of any city in the world. You will get to work with JSON data and in the journey you will understand the API in depth and how to fetch the desired data for temperature and weather condition icon so that the same can be rendered on the screen whenever user make a request to fetch the data using the API. You will learn how fetch( ) works in JS, using API keys and most important part is the JSON handling in JS.\n5. Tesla Stock Market Dashboard: In this project you will get to work with the stock market API from Alpha Vantage which is free to use and can give intra day share data trends. We will work with Tesla share as a test case and will design a dashboard using bootstrap and JS and this time we will work with the dark theme so that you get to know how efficient and easy it is to  design a beautiful dark theme based dashboard. You will also work with google charts to show the trends of share volume traded with time.",
      "target_audience": [
        "Beginners and intermediate level web developers who want to enhance their skills through Project Based Learning Approach. Experts will also find the projects interesting and it will help them to brush up their skills.",
        "Students and Academicians who wish to enter into the field of Web Development",
        "Anyone who wish to learn the art of Front End Development by making use of Bootstrap Framework and JavaScript",
        "Anyone who is curious to understand how APIs work and how they are handled using JavaScript"
      ]
    },
    {
      "title": "How to Create a Social Network For a Niche-Related Community",
      "url": "https://www.udemy.com/course/how-to-create-a-social-network/",
      "bio": "Learn how to build a fully functional online community website to start a niche-related network, using Buddypress.",
      "objectives": [
        "Build a beautiful, fully functional online network ready to welcome new members",
        "Create a public or private online community",
        "Work with Wordpress and Buddypress",
        "Configure the various network abilities",
        "Take control of any aspect of the network as the system administrator",
        "Create a network which includes friendship connections, messaging system, groups, forums, photo and video sharing and more"
      ],
      "course_content": {
        "Introduction to the Course and to Online Communities": [
          "Introduction to the Course",
          "Ideas of Online Communities You Can Build"
        ],
        "Introduction to BuddyPress": [
          "What Is BuddyPress and Why You Should Create Your Community With This Platform",
          "Successful BuddyPress-Based Online Communities",
          "This is The Final Website You Will Learn to Create In This Course",
          "Exploring the community you will build - as a member",
          "Course Structure - What Are The Steps of Creating an Online Community"
        ],
        "Preparations - Hosting, Domain and WordPress Installation.": [
          "Registering to a Hosting Account and Getting a Domain Name",
          "Installing Wordpress on Your Website",
          "Deleting Unnecessary Plugins That The Installation Added To Our Website"
        ],
        "Start Creating Your Website with WordPress - Theme, Plugins, Menus and Widgets": [
          "Installing the Free Theme We Will Work With in This Course",
          "Creating Some Static Content Pages for Your Website",
          "Adding a Blog and Creating Blog Posts of Different Categories",
          "Adding a Menu to the Website",
          "Learn How to Work with the Theme Options - Customize Your Website Look and Feel",
          "Using Widgets on the Homepage and on the Sidebar of Your Website"
        ],
        "BuddyPress - Creating an Online Community and Configuring Your Network": [
          "Installing and Activating BuddyPress",
          "Configuring the Community Components - Decide Which Ones You Want to Use",
          "Configuring the Community Pages",
          "Final Settings for Configuring the Community"
        ],
        "Working with BuddyPress": [
          "Adding Community-Related Menu Items to the Website",
          "BuddyPress Built-In Widgets You Can Add to the Sidebar and Homepage",
          "Publishing a Status in the Activity Wall - Similar to the Facebook Wall",
          "Making Friendship Connections With Other Community Members",
          "Working With Messages - Sending Private and Global Messages Between Members",
          "Adding the Sitewide Activity Wall to the Menu",
          "Reaching Links to the Community Components From Different Places in the Website",
          "Preventing Community Members From Accessing Wordpress Dashboard",
          "Privacy Issues in BuddyPress - and How to Solve Them to Allow Ultimate Privacy",
          "Members Profiles and How to Edit Them and Control the Email Notifications",
          "Adding Photo, Video and Link Sharing Options to the Activity Wall",
          "Adding Interest Groups to your Website - to Make it Even More Interesting!",
          "Adding Forums to Your Network - to Give Your Members another Way to Communicate!"
        ],
        "Final Touches Before Launching Your Community!": [
          "Adding a Contact Form to Your Website",
          "Implementing Community-Related Widgets in Your Website"
        ],
        "How to Keep Your Community Alive and Attract New People to Join": [
          "Adding BuddyPress to an Existing Wordpress Website",
          "What is Your Starting Point, and What You Can Do To Bring New Members",
          "More plugins you might find helpful for you community"
        ],
        "Conclusion": [
          "Thank you for taking the course!"
        ]
      },
      "requirements": [
        "Basic computer knowledge",
        "Not being afraid of trying new and exciting things like getting a website online!"
      ],
      "description": "An online community is a great place for people with the same interest to share their thought, experiences and stories with each other. This course will teach you how to build a social network that would allow your members to make friendship connections, to send messages to each other, to share ideas and statuses on a site-wide activity stream, and you will also learn how to create niche-related groups to make your network even more interesting. You don't need to have any former experience with Wordpress and/or Buddypress, which are the platforms we will use in this course, since i show you how to use them.\nCourse Structure\nThe course is built in a \"Learn by Watching\" way, which is my favourite way of teaching and learning. I simply show you where i click and how i do everything on my screen, so you can see and imitate in your own system.\nThe course will take about 2 hours to complete and i suggest you watch it on a tablet if you own one, so you can put it besides your computer while you work on your community website.\nHere are the steps we will go through in this course:\nWebsite hosting - you will need one to get your platform online\nWordpress installation\nAdding Wordpress (free) theme\nLearn Wordpress basics - content, menus, theme options, plugins, widgets\nBuddypress installation and configuration\nNetwork components and how to work with them\nWhat kind of network will i learn to build\nThe network you will build depends on your needs. I will give you all the tools you can use in order to create a network with the most possibilities Buddypress can provide, and it's yours to take what you need from it. You can build a public community for anyone to join. You can build a secret community for specific people with restricted content to make sure it stays private. You can build a half-public half-private community with the help of groups - where you can decide which ones are public, which ones are restricted and which ones are even hidden from a guest viewer.\nI will teach you how to work with every component of Buddypress, and you can decide which one you need and want to use. If you don't want to let your members create friendship connections - you can deactivate this option. If you don't need groups - don't use them. If you don't want your members to be able to communicate through private messages - just don't allow it. Buddypress is such a flexible platform that you can really fit it to your needs and even change your configurations with a click of a button later on if you decide you want to add/remove a specific component.\nWho should take this course?\nAnyone looking for people with a common interest to talk and share thoughts with\nBloggers who want to take their blog to a new level and start an online community where they can engage with their readers\nFamilies who want to keep in touch in a special way - by creating a private family online community where they can share photos, videos and experiences with each other\nBusinesses who want to raise credibility and connections with their customers by creating a warm space where they can keep in touch with them and talk a bout their products/services\nPromoters of a specific product who want to promote it in a unique way and create a social network around it\nGroup of parents who want to create a convenient place where they can discuss about their children's activities for example - a community for a sport team, a class, etc.\nGroup of friends who want to share more than words with each other by creating a (private) online community where they can communicate\nAdditional CostsThe only additional cost you might have (unless you already have a hosting account) is to the hosting provider. The costs vary from 4$-12$ per month depending on the company, and you should do your research about which provider would fit your website needs the most. In the course you will see how i sign up with one of the hosting companies and get a free domain for the first year.You might also be interested in getting a premium Wordpress theme, but that is not a necessity - the theme we will work with in this course is free and is good enough to keep it this way and to create a beautiful website and network.",
      "target_audience": [
        "This course is meant for new and advanced Wordpress users who want to get into the online communities world",
        "No prior website building experience is needed",
        "Anyone who wants to create a place where they can share thoughts, photos, videos and experiences with a group of people should take this course"
      ]
    },
    {
      "title": "Java Masterclass | Beginner to OOP Programming with Eclipse",
      "url": "https://www.udemy.com/course/java-masterclass-beginner-to-oop-programming-with-eclipse/",
      "bio": "Learn Basic to Advanced Java programming Techniques and Methods as well as Object Orientated Programming",
      "objectives": [
        "They will have an excellent understanding of the fundamentals in Java programming.",
        "Use many advanced Java programming techniques",
        "Learn OOP with Java",
        "Create beginner to advanced Java programs"
      ],
      "course_content": {
        "Basic Java Programming with Eclipse": [
          "Introduction",
          "Downloading and Installing Eclipse",
          "Your First Line of Code",
          "String and Integer Variables",
          "Math with Integer Variables",
          "If Statements",
          "And, Or and Nested If Statements",
          "The While Loop",
          "The For Loop",
          "User Input Through Input Dialogs",
          "String and Integer Parsing",
          "Char Variable and Parsing",
          "Double Variable and Parsing",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "Basic Methods": [
          "Introduction",
          "The toUpperCase Method",
          "The toLowerCase Method",
          "The isLetter method and Boolean Variables",
          "The isDigit Method",
          "The isWhiteSpace Method",
          "The Length Method",
          "The compareTo Method",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "Substring and indexOf": [
          "Introduction",
          "Substring Introduction",
          "Substring Practice",
          "indexOf Introduction",
          "indexOf Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "File Reading and Writing": [
          "Introduction",
          "Scanner Introduction",
          "Scanner Practice",
          "Delimiters and Basic Error",
          "File Reading Introduction",
          "File Reading Preparation",
          "File Reading Practice",
          "Print Writer Introduction",
          "Print Writer Practice",
          "Try and Catch",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "Arrays": [
          "Introduction",
          "Arrays Introduction",
          "One-Dimensional Array Practice",
          "Two-Dimensional Array Practice",
          "Split Method Introduction",
          "Split Method Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "Object Orientated Programming": [
          "Introduction",
          "Classes Introduction",
          "Class and Void Method Creation",
          "Typed Method Creation",
          "Private Variables",
          "Scanner Method and Object Practice",
          "OOP Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "Nothing. No prior knowledge of programming is needed.",
        "You will need access to the internet",
        "You will need space on your computer for the software we will download"
      ],
      "description": "Welcome to my Masterclass course on Java Programming with Eclipse!\nMy name is Matthew Dewey. I am an experienced programmer, having received several accommodations on programming in my formal education as well as tough several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in an easy and fun manner. In this course I do just that and with one of the most useful IDEs coupled with the Java programming language.\nJava, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving Java over any other language. Of course, it goes without saying that Java is an excellent language, but do you know what is required of you to start programming Java?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course. Further on, once completing the basic section, we move onto advanced Java programming and OOP. Data is important in the technological world that we live in, but what we use is processed data, so you, as the budding programmer need to know this as well. I show you how to scan through large amounts of data with ease as well as extract specific types and process it as well.\nWhat about Eclipse? A popular, widely used IDE that many large applications have been created in over the years. Do you know how to use it to its full potential? Well, in this course we will go through several projects that will help you get truly comfortable with the IDE as well as more adept at program creation.\n\n\nI help you:\nInstall your IDE\nEstablish fundamental code\nCreate and use variables\nRetrieve user input\nProcess simple data\nAdvanced Java Methods\nData Collection\nData Processing and Storage\nData Extraction\nData Scanning\nOOP, Object Orientated Programming\nand BONUS tips and tricks!\nGo no further if you're looking for the course that will guide you into the world of programming! With my masterclass course I can guarantee that the knowledge you learn will help you get a head-start in Java programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Students ready to learn the joys of programming for the first time.",
        "I.T Students",
        "Basic Java programmers",
        "Beginner Programmers",
        "Java Programmers Wanting to Learn OOP"
      ]
    },
    {
      "title": "Guide to learning JavaScript",
      "url": "https://www.udemy.com/course/javascript-complete-guide-to-learning-javascript/",
      "bio": "Everything you need to learn how to write JavaScript code from scratch The complete web developer JavaScript Course",
      "objectives": [
        "Use JavaScript to Create web content",
        "create dynamic web sites",
        "create interactive web content",
        "supercharge your HTML with functionality"
      ],
      "course_content": {
        "Learn about JavaScript": [
          "Introduction to JavaScript",
          "JavaScript Introduction course resources",
          "First JavaScript Code",
          "How to add JavaScript to your webpage",
          "Syntax of JavaScript how to write code",
          "Source Code Comments alerts",
          "Debugging Dev tools console messages in JavaScript"
        ],
        "Writing JavaScript code Cornerstones of JavaScript": [
          "JavaScript Variables Data Types",
          "Source Code Variables",
          "JavaScript How arrays work",
          "JavaScript working with Arrays",
          "JavaScript Arrays in Action",
          "JavaScript Arrays as Strings and Slices",
          "Source Code Arrays",
          "JavaScript Working with Objects",
          "JavaScript Constructor Objects",
          "Source Code Objects",
          "JavaScript Introduction to Functions",
          "JavaScript working with Functions",
          "JavaScript Functions in Action",
          "JavaScript Global Scope Values in Functions",
          "Source Code Functions"
        ],
        "Dynamic Interactive JavaScript": [
          "What is the DOM",
          "JavaScript DOM Document Object Model",
          "JavaScript getElementById",
          "JavaScript DOM select elements via Class and Tags",
          "JavaScript the Document Object data",
          "JavaScript Update Styling attributes using the DOM",
          "Source Code DOM",
          "JavaScript DOM onclick",
          "JavaScript Mouse Event Listeners",
          "Source Code Events",
          "JavaScript addEventListener",
          "Source AddEventlistener",
          "JavaScript Queryselectorall mulitple elements event listeners",
          "JavaScript More Element Selection options",
          "Source Code Multiple Element Selection",
          "JavaScript Creating New Elements",
          "Source Code Create Elements",
          "DOM and Form Create Form Validation",
          "Source Code Form Validation"
        ],
        "JavaScript fundamentals": [
          "JavaScript Fundamentals",
          "JavaScript Operators Introduction",
          "JavaScript Operators increment alternating row colors",
          "JavaScript Conditional ternary operator",
          "JavaScript Logical operators",
          "Source Code operators",
          "JavaScript Math Method",
          "JavaScript Date Method",
          "Source Code Useful Methods",
          "JavaScript Conditions",
          "JavaScript working with Conditions",
          "Source Code Conditions",
          "JavaScript Switch Condition",
          "Source Code Switch",
          "JavaScript While Loop",
          "JavaScript Do loop",
          "JavaScript For loop",
          "Source Code Loops"
        ],
        "JavaScript using JSON and AJAX": [
          "JavaScript introduction to JSON",
          "JavaScript Multiple Objects",
          "JavaScript AJAX connection",
          "JavaScript Get JSON data using AJAX",
          "JavaScript External JSON file Data using AJAX",
          "Source Code AJAX",
          "JavaScript AJAX more details",
          "JavaScript AJAX server interaction",
          "JavaScript AJAX send data to server",
          "JavaScript AJAX post data to server",
          "Source Code AJAX POST",
          "update form to multiple inputs challenge",
          "Source Code Multiple fields"
        ],
        "Additional JavaScript Coding Lessons Code Snippets and Examples": [
          "JavaScript Lesson",
          "JavaScript Counting Vowels"
        ]
      },
      "requirements": [
        "basic HTML and /or CSS",
        "desire to learn",
        "computer access"
      ],
      "description": "JavaScript is the most in demand and popular programming language on the web today.\nLearn to create dynamic interactions on your web pages, JavaScript is were the magic happens.  JavaScript gives you the tools you need to create modern websites, with interactive content.   Alongside HTML and CSS, it is one of the three core technologies of World Wide Web content production.\nThe most common use of JavaScript is to add client-side behavior to HTML pages.  Learn how to interact with the Document Object Model (DOM) of the page.\n\nIntroduction to JavaScript\nStep by Step learning with examples and source code\nHow to use JavaScript within your web pages\nVariables and how they work\nEverything about JavaScript Arrays\nPower of using JavaScript Functions\nJavaScript Objects and what you can do with them\nUpdating your HTML elements with JavaScript\nJavaScript event listeners\nLogical operators\nJavaScript Built in Methods\nConditions and switches\nLoops making it easy\nWhat AJAX is and how it works\nHow to use JSON\nSend data and retrieve data from the server\nNo page reload data loading\nAnd a whole lot more.\nBy the end of the course you will have the skills and know how to add JavaScript within you website.\nI am here to help you learn how to create your own websites and ready to answer any questions you may have.\nJavaScript is the most in demand skills, and learning how to use JavaScript will help to separate you from the crowd.\nWant to know more, what are you waiting for take the first step.  Join now to start learning how you too can create DYNAMIC and INTERACTIVE pages with JavaScript today.",
      "target_audience": [
        "web developers",
        "anyone who wants to learn how to make their websites dynamic and interactive"
      ]
    },
    {
      "title": "Learning Joomla! 3 Extension Development",
      "url": "https://www.udemy.com/course/learning-joomla-3-extension-development/",
      "bio": "Create your own custom Joomla! components, plugins, modules, and template extensions",
      "objectives": [
        "Build a component to save, retrieve, and display custom data",
        "Add dynamic data with the model-view-controller to display the page and language file",
        "Add finishing touches to the component which include a router file, print view, and RSS feed",
        "Implement ACL in a component and add parameters to a menu item",
        "Add category functionality to a component",
        "Create a frontend editing form and add it to a component",
        "Build a basic module and add standard field types to a module",
        "Create search and content plugins for a custom component",
        "Build a template that uses Bootstrap CSS"
      ],
      "course_content": {
        "Component Development- Part I": [
          "Getting Started with Component Development",
          "Adding a Database to the Component",
          "Displaying Dynamic Data on the Site using the Model-View-Controller",
          "Adding an Item View",
          "Language and Menu Item Type"
        ],
        "Component Development - Part 2": [
          "Adding a Form to the Admin Component",
          "Add Save and Close Buttons to the Admin Component",
          "Adding New and Delete Buttons to the list view",
          "Adding Categories to the Component",
          "Adding Categories to the Site Component"
        ],
        "Component Development - Part 3": [
          "Adding Standard Fields to the Component",
          "Applying the Publishing Options and Metadata",
          "Joomla! Router for SEF URLs",
          "Adding and Using the Publish Field",
          "Adding a Print and Email Option and RSS Feed to the Component"
        ],
        "Module Development": [
          "Basic Bare-Bones Module",
          "Standard Form Field Types",
          "Output Form Field Data",
          "Form Fields for Module Layout and SQL",
          "Custom Field Type"
        ],
        "Plugins and Languages": [
          "Building a Content Plugin",
          "Building An Editor Button",
          "Building a Search Plugin",
          "Building a Smart Search Plugin",
          "Process Content Plugins"
        ],
        "Component Development and Configuration": [
          "Component Configuration Options",
          "Menu Item Options",
          "Enabling Joomla!'s Access Control List (ACL)",
          "Batch Processing",
          "Frontend Editing"
        ],
        "Template Development": [
          "The Basic Template",
          "Adding Module Positions"
        ]
      },
      "requirements": [
        "A working knowledge of Joomla! 3 administration, PHP, and MySQL is a requirement to follow along with this course, but prior knowledge of using extensions is not expected.",
        "Learning Joomla! 3 Extension Development contains step-by-step instructions on how to utilize Joomla! extensions to achieve optimal performance on your website. It shows you how to perform specific tasks in Joomla! using the popular extensions available in the Joomla! extensions directory. It will also help you to choose the right extension for performing a specific task in Joomla!"
      ],
      "description": "This video course provides you with a step-by-step tutorial for building a basic component with frontend editing. You will also learn how to build both content and search plugins for your component, how to build a module to display data from your component, and finally how to build a template using Bootstrap CSS.\nThe course starts by teaching you how to build a basic, bare bones component for inserting and displaying recipes using the minimum amount of code that is needed for a component. No component is complete without search and content plugins. You will start off by building standard search and smart search plugins, a content plugin for inserting our component’s data into a content item, and adding code to insert other plugins’ data into our display page. The plugins will make our recipes searchable on the site and will enable the insertion of recipes into content articles.\nYou will then move on to build a basic module, add standard field types, and finally add a custom field type when standard fields are not enough. The module will display select recipes from our collection. Finally, you will also learn how to build a template that uses Twitter Bootstrap’s CSS.\nLearning Joomla! 3 Extension Development makes it fast and easy to develop your own custom Joomla! components, plugins, modules, and templates.\nAbout the Author\nDonna Vincent has been developing websites since 2004, and she has been using the Joomla! platform since 2006. In 2009, she began developing custom Joomla! extensions for her clients. She is also an EDI and barcode programmer. Donna lives and works in the New York City area and enjoys food photography when not building websites.",
      "target_audience": [
        "If you want to build a basic Joomla! website and are looking for information on the use of Joomla! extensions and their customization, then this course is for you."
      ]
    },
    {
      "title": "Modern Web Animations",
      "url": "https://www.udemy.com/course/web-animations/",
      "bio": "Deep Dive into Animations and Transitions, The Web Animations API, Scroll Driven Animations and The View Transitions API",
      "objectives": [
        "Learn about CSS Animations & Transitions.",
        "Learn about the new JavaScript Web Animations API.",
        "Discover scroll driven animations in details.",
        "Create impressive page transitions with the View Transitions API."
      ],
      "course_content": {
        "CSS Animations & Transitions": [
          "Before Watching the Course",
          "Setting Up Our Project Folder",
          "Introduction to CSS Transitions",
          "Using CSS Transition with JavaScript",
          "Using JavaScript Transition Events",
          "Transition Behavior & Discrete Animations",
          "Animating an Element from display: none to display: block",
          "Using @starting-style rule",
          "More on @starting-style",
          "Timing Functions Boilerplate Code",
          "Linear Timing Functions",
          "Smooth Animations with Cubic Bezier Timing Functions",
          "Animating in Jumps Using the Steps Timing Function",
          "Introduction to CSS Animations",
          "CSS Animations Properties",
          "Adding Multiple Animations",
          "Animation Composition",
          "Animation Fill Mode",
          "More on the @keyframe at-rule",
          "Animations JavaScript Events",
          "Discrete Animations",
          "Animations Exercise (Part 1)",
          "Animations Exercise (Part 2)",
          "Animations Exercise (Part 3)",
          "Animations Exercise (Part 4)"
        ],
        "The Web Animations API": [
          "When to use the Web Animations API",
          "Timeline, Animation Objects & Animation Effects",
          "Creating our First Animation Using the Web Animations API",
          "Another Way for Defining Keyframes",
          "Quick Note!",
          "Iteration Composite",
          "Controlling Our Animation with Animation Object Methods",
          "Updating Our Animation Effect (Keyframe Effect)",
          "Getting Information About Our Animations",
          "More on the currentTime Property",
          "More on the startTime Property",
          "Animation Pending State & Ready Promise",
          "Finished Promise, Finish and Cancel Events",
          "Getting All Animations in the Document or an Element",
          "Persisting Filling Animations Styles with commitStyles",
          "Automatic Animations Removal By Browsers",
          "Web Animations API Exercise Overview",
          "Exercise: Animating the Character",
          "Animating the Street, Background and Foreground",
          "Pausing the Entire Scene",
          "Speeding Up And Slowing Down Our Character",
          "Adding and Animating a Shadow to Our Character",
          "Adding a Random Car to the Scene",
          "Randomizing Our Car's Speed & Occurrence",
          "Animating the Car Wheels"
        ],
        "Scroll Driven Animations": [
          "An Overview to Scroll Based Animations",
          "Named Scroll Progress Timelines",
          "Anonymous Scroll Progress Timelines",
          "Customizing the Animation Range",
          "Timeline Scope",
          "Named View Progress Timelines",
          "View Timeline Inset",
          "Anonymous View Progress Timelines",
          "Named Timeline Ranges",
          "Named Timeline Ranges Summary",
          "Creating Scroll Progress Timelines using the Web Animations JS API",
          "Creating View Progress Timelines using the Web Animations JS API",
          "Exercise Overview",
          "Assets Credits",
          "[Exercise] Animating the SVG Logo Path",
          "[Exercise] Animating the Header Backgroud",
          "[Exercise] Animating the Hero Section (Part 1)",
          "[Exercise] Animating the Hero Section (Part 2)",
          "[Exercise] Animating the Features Section",
          "[Exercise] Animating the Team Members Section (Part 1)",
          "[Exercise] Animating the Team Members Section (Part 2)",
          "[Exercise] Animating the Services Section (Part 1)",
          "[Exercise] Animating the Services Section (Part 2)",
          "[Exercise] Turning off the Animations According to the User Preference",
          "[Exercise] Fixing Styles for Unsupported Browsers"
        ],
        "View Transitions API": [
          "Introduction & Demo App",
          "Assets Credits",
          "Getting Started with the View Transitions API",
          "Customizing the Default Crossfade Animation",
          "Isolating Elements For More Control on Our Transition Animation",
          "Adding View Transition Name Dynamically",
          "ViewTransition Object Methods & Promises",
          "Using View Transition Promises to Scroll an Item Into View",
          "Transforming the Thumbnail Image Into the Large Image",
          "Transforming the Thumbnail Image Into the Large Image (Cont.)",
          "Animating Grid Items with Dynamic View Transition Names",
          "Changing Transition Animations For Users Who Prefers Reduced Motion",
          "Animating the View Transitions Pseudo Elements with the Web Animations API",
          "Note for the Next Lectures",
          "[Words Game Exercise] Introduction",
          "[Words Game Exercise] Assets Credits",
          "[Words Game Exercise] Animating the Letters",
          "[Words Game Exercise] Animating the lives & coins",
          "[Words Game Exercise] Handling Duplicate Letters",
          "[Words Game Exercise] Animating the Modal",
          "Using View Transitions with JS Frameworks [ReactJS & Svelte Example]",
          "Using View Transitions with Single Page Applications",
          "[SvelteKit Example] Introduction",
          "[SvelteKit] Using onNavigate to Initialize a View Transition Between Routes",
          "[SvelteKit] Animating the Image",
          "[SvelteKit] Different Transition Animation for Mobile Screens",
          "[Update] Cross Document View Transitions",
          "[Update] Cross Document View Transitions (Cont.)"
        ]
      },
      "requirements": [
        "Some basic HTML, CSS & JavaScript Knowledge is required."
      ],
      "description": "Welcome to Modern Web Animations, a deep dive into modern animation techniques with no libraries, only browser APIs.\n\n\nCSS Animations & Transitions have been around for a long time now. But recently new APIs were introduced to modern browsers to further improve animating on the web and give developers more control.\n\n\nAmong these new additions is the Web Animations API (WAAPI). The Web Animations API unlocks the power of the browser's animation engine for developers. It allows us to construct animations and control their playback with JavaScript. It is one of the most performant ways to animate on the Web.\n\n\nIn addition to that, new features were added to CSS Animations that allow us to control animations as users scroll. By adding new properties like animation-timeline, scroll-timeline and view-timeline, we can now have animations that are not based on time but based on scrolling progress or based on the visibility of a certain element in the viewport. This opens the door to creating impressive scroll driven animations without having to load any external libraries.\n\n\nAnother recent addition to modern browsers is the introduction of the View Transitions API. This API allows us to easily create animated transitions between different DOM states. It can be especially useful in Single Page Applications (SPAs) when we need to have an animation when navigating between different routes. Before the View Transitions API these kinds of animations were extremely complicated to achieve.\n\n\nIn this course we are going to cover all of these topics in great detail. And not only that, but we are also going to have a section on old CSS Animations & Transitions and discuss every aspect of them in depth. We are also going to have practical examples and exercises for every topic discussed.\n\n\nSo join now if you want to bring your websites to life!",
      "target_audience": [
        "Web developers looking to learn everything about animating in the browser.",
        "Web developers looking to learn about new animation APIs like the Web Animations API, scroll driven animations & the View Transitions API."
      ]
    },
    {
      "title": "NextAuth v5 Credentials with Next App Router & TypeScript",
      "url": "https://www.udemy.com/course/next-auth-js/",
      "bio": "Learn Next JS Auth in Next.js app router. Email + password login / signup / reset, 2FA, postgres, drizzle, TS + more!",
      "objectives": [
        "Increase your value and improve your knowledge as a web developer",
        "Implement Secure Authentication with NextAuth v5",
        "Integrate Two-Factor Authentication (2FA) with the Google Authenticator App",
        "Build and Manage Databases with Postgres hosted on Neon + incorporate Drizzle ORM for efficient database interactions",
        "Master the integration of TypeScript, shadcn/ui, Tailwind CSS, Zod, and React Hook Form to build robust, type-safe, and user-friendly applications",
        "Implement password reset functionality and protect specific routes to ensure that only authenticated users have access to certain parts of their application",
        "Utilize Next JS server actions and integrate email functionality using Resend for seamless user communication"
      ],
      "course_content": {
        "Introduction": [
          "Important! Read this before you begin the course! (Github repo etc)",
          "Introduction",
          "Udemy ratings and reviews",
          "Create the Next JS project"
        ],
        "Build the Register functionality": [
          "Create the Register page",
          "Create the Register form using zod and react-hook-form",
          "Add form fields to the Register form",
          "Add extra form validation using zod",
          "Create a server action to post new user registrations"
        ],
        "Save user data to a postgres database": [
          "Create a new postgres database hosted on neon",
          "Set up drizzle in our Next JS project",
          "Create the users table using drizzle",
          "Save new user data to the postgres database",
          "Finish off the Register form with extra validation"
        ],
        "Build the login functionality": [
          "Create the Login page, Login form with react-hook-form, and validation with zod",
          "Create the Login server action",
          "Implement Next Auth",
          "Log in using Next Auth",
          "Redirect on successful login and add logout functionality",
          "Add the Login and Register links and login error message"
        ],
        "Build the mini user dashboard": [
          "Create the my-account page",
          "Create the logged-in layout",
          "Protect routes for logged in users using Next JS layouts",
          "Add the My Account Card"
        ],
        "Build the change password functionality": [
          "Create the change-password page",
          "Create the changePassword server action"
        ],
        "Build the forgot password functionality": [
          "Create the password-reset page",
          "Pass email value from Login page to Password Reset page",
          "Create the passwordReset server action",
          "Create the password_reset_tokens table",
          "Save the password reset token to the database",
          "Add a success message to the UI when a token is created",
          "Create the update-password page and validate password reset token",
          "Create the update password form and server action",
          "Finish the update password server action",
          "Set up email sending with Resend"
        ],
        "Build the two-factor authentication functionality": [
          "Create the initial UI for Step 1 in the Two-Factor Auth flow",
          "Create the server action to generate and return the 2FA secret",
          "Render the QR code to scan in the Google Authenticator app",
          "Create the OTP confirmation UI",
          "Create the activate and deactivate 2FA server actions",
          "Refactor Login page to cater for 2FA",
          "BONUS!"
        ]
      },
      "requirements": [
        "Willingness to Learn and Experiment: A proactive attitude and eagerness to explore new technologies, such as NextAuth, TypeScript, and database management, will help students get the most out of the course",
        "A basic understanding of React is required, as the course builds upon React concepts and integrates them with Next JS",
        "Familiarity with Node and NPM is recommended for managing dependencies and running development environments"
      ],
      "description": "Unlock the Power of Secure Authentication in Next.js with NextAuth v5\nIn today's digital world, securing user data is more important than ever. Whether you're a seasoned developer or just starting out, mastering secure authentication is a skill that will set you apart. With this course, you’ll not only learn how to implement robust authentication systems but also gain hands-on experience with the latest tools and technologies.\nWhy This Course?\nImagine building a login system that not only protects user data but also enhances the user experience. In this course, you’ll dive into NextAuth v5 with Next.js, mastering email and password logins with the Credentials provider. But we don’t stop there. You'll also implement Two-Factor Authentication (2FA) using the Google Authenticator app, giving your users that extra layer of security they demand.\nWhat You'll Master:\nSeamless User Authentication: Implement secure login systems using NextAuth v5 and the Next.js app router, making your application both powerful and user-friendly.\nAdvanced Security Features: Learn how to add password reset functionality and protect specific routes, ensuring that only authorized users access sensitive areas of your app.\nCutting-Edge Tech Stack: Work with Neon-hosted PostgreSQL, Drizzle ORM, and TypeScript to build a robust backend, while using shadcn/ui and Tailwind CSS for beautiful, responsive user interfaces.\nEfficient Form Handling & Validation: Streamline your forms with React Hook Form and Zod, ensuring your data is always accurate and your user experience flawless.\nReliable Email Integration: Implement email functionalities with Resend, making communication with your users smooth and reliable.\nWho Is This Course For?\nThis course is perfect for developers at any stage of their career who are eager to learn how to build secure, scalable applications. Whether you're aiming to enhance your existing skills or break into the world of full-stack development, this course will provide you with the knowledge and tools to succeed.\nEnroll now and take the next step in your development journey. By the end of this course, you'll be fully equipped to build and deploy secure, scalable authentication systems with Next.js and NextAuth v5. Don’t miss out - start today!",
      "target_audience": [
        "This course is ideal for web developers who want to increase their value as a web developer and enhance their skills in building secure authentication systems using modern tools and technologies like Next JS and NextAuth v5"
      ]
    },
    {
      "title": "Web Developer Fundamentals: Newbie to Pro Web Bootcamp!",
      "url": "https://www.udemy.com/course/become-a-web-developer/",
      "bio": "The 12 must have web programming courses to help you become the ultimate web developer. Includes 50+ hours of training.",
      "objectives": [
        "Create and manage websites",
        "Learn to create websites using a wysiwyg HTML editor",
        "Learn Basic HTML & CSS",
        "Learn how to develop using PHP and MySQL",
        "Advanced web development languages including JavaScript, jQuery and XML",
        "Advanced programming techniques",
        "Dozens of code examples to download and test",
        "Learn how to create responsive websites using the Bootstrap framework",
        "11 optional quizzes with over 300 questions to test what you've learned",
        "Learn essentials for AngularJS",
        "Put their skills into practice with a real Python project",
        "What is Python and why was it created.",
        "How Python fits into the diverse ecosystem of programming languages.",
        "The basic data types in Python - Strings, Integers, Floats, and Boolean",
        "The basic data types in Python - Strings, Integers, Floats, and Boolean",
        "All about Pythons built-in functions",
        "How to debug errors in Python",
        "How Variables and Functions work in Python",
        "How to use IF-Else Statements in Python",
        "All about storing complex data, including Lists and Dictionaries",
        "How to install Python locally",
        "How to write your first script in Python"
      ],
      "course_content": {
        "Introduction to Course": [
          "IMPORTANT: Start Here First and Read!"
        ],
        "Learn Dreamweaver CC Course: Introduction to Dreamweaver CC": [
          "Acquiring Dreamweaver CC",
          "WATCH ME: Essential Information for a Successful Training Experience",
          "Dreamweaver CC Course Exercise Files"
        ],
        "Dreamweaver CC: Getting Started": [
          "Start Using Dreamweaver CC"
        ],
        "Dreamweaver CC: The Workspace & Help Tools": [
          "How to Create a New Workspace",
          "How to Create an HTML Page",
          "Dreamweaver CC Help"
        ],
        "Dreamweaver CC: Creating a Website & Web Page Basics": [
          "How to Create a Website",
          "How to Publish Your Website Online",
          "Formatting Pages",
          "Creating a Second Page - Exercise 1"
        ],
        "Dreamweaver CC: How Hyperlinks Work": [
          "Creating Hyperlinks",
          "Exercise 2"
        ],
        "Dreamweaver CC: Customization Tools": [
          "Page Properties",
          "Learning CSS"
        ],
        "Dreamweaver CC: Previewing Pages": [
          "Previewing Pages in Browsers"
        ],
        "Dreamweaver CC: Panels": [
          "Using Panels"
        ],
        "Dreamweaver CC: Working with Text": [
          "Adding and Styling Text",
          "Formatting Text, Adding Special Characters",
          "Formatting Using HTML"
        ]
      },
      "requirements": [
        "Dreamweaver CC",
        "A text editor",
        "A passion to learn",
        "No prior knowledge required"
      ],
      "description": "“WOW! You built that?!\" After taking this 50+ hour course, your web developer skills will quickly make you the envy of your friends, create awe among your colleagues, and even help you land a cool, high-paying job as a web developer.\nBest yet, this collection of courses is available at a fraction of what they'd cost individually. So you get exclusive access to thousands of dollars worth of web development training -- for just $199 - Sweet!\nThis course is a careful compilation of the 12 most essential programming languages that you'll need to accelerate from absolute novice to advanced developer. You'll receive practical learning techniques, along with expert advice and valuable tips, on how to create fully interactive and custom-designed websites and web applications.\n\n\nStep-By-Step Advancement for Developer Success\nWe've helped over 70,000 students become a wiz at web development. We carefully design each course to maximize your understanding and online learning success. You'll receive a combination of stimulating lectures, coding examples with exercise files for real hands-on practice, and an optional quiz to test your learning along the way.\nThe end result? You'll go from total newbie to a totally talented web developer with a set of simple steps that can be completed in one week.\n\n\n11-Steps to Becoming an Awesome Web Developer\nDreamweaver CC for Beginners (Dreamweaver CS6 also included)\nHTML/CSS Crash for Beginners\nHTML5 Essentials for Beginners\nPHP Programming for Beginners\nMySQL for Beginners\nLearn Advanced PHP Programming\nLearn JavaScript for Beginners\nLearn XML Crash Course\nBuild a Responsive Website with Bootstrap 3\nLearn jQuery Crash Course\nLearn AngularJS Crash Course\nIntroduction to Python (Added August 2020)\nThe introductory Dreamweaver course teaches students with no previous website knowledge on web development how to create a website from scratch. Advancing to the HTML/CSS crash course will teach you basic website building plus the coding required. Expand your developer skills with PHP and MySQL courses – ideal for creating and maintaining dynamic websites. By the time you graduate to the JavaScript, XML Crash Courses, and Bootstrap courses, you'll be able to create fully interactive and engaging websites.\nDETAILS:\n12 courses\n54 hours of video, over 350 videos\n12 optional quizzes to test what they've learned consisting of 300+ questions and answers\n\n\nAdditional Bonus: Effective February 2015, the Dreamweaver CS6 course is available at no additional cost.\nUPDATE: June 2015 AngularJS course added.\nUPDATE: August 2020 Introduction to Python added\n\n\nWhat our students are saying:\n\n\n\"Very good well balanced web development course. Would highly recommend it\". - Jamal Mahamed\n\n\n\"Very broad, well presented course\". - Marcus Simpson\n\n\n\"Instructor presents the material clearly and completely\". - William Powers",
      "target_audience": [
        "Complete beginners",
        "Someone who has never coded before",
        "Someone new to web development",
        "Web masters who need to improve their development skills",
        "Students requiring additional knowledge and instruction",
        "Those considering a career in web development",
        "Entrepreneurs looking to develop skills for a lean startup",
        "People looking to learn the Python Programming Language"
      ]
    },
    {
      "title": "Learn the basics of HTML, CSS, JavaScript and React",
      "url": "https://www.udemy.com/course/master-the-basics-of-html-5/",
      "bio": "Build modern websites using HTML, CSS, JavaScript and React. Lay your foundation into the field of web development.",
      "objectives": [
        "Write HTML 5 Code",
        "Create Web Pages with HTML",
        "Add media files to Website using Advanced HTML Tags",
        "Structure your HTML Code and learn best practices",
        "Modern Semantic elements of HTML 5",
        "Basic and advanced CSS selectors",
        "CSS Colors Backgrounds and typography",
        "CSS Box Model",
        "CSS Positions",
        "CSS Flexbox Model",
        "CSS Grid Model",
        "Responsive Web Design using media queries",
        "CSS Animations",
        "JavaScript Variables, Operators and Datatypes",
        "JavaScript Conditionals",
        "JavaScript Arrays and Loops",
        "JavaScript Functions and Objects",
        "How to implement JavaScript in HTML",
        "The Document Object Model",
        "Manipulating the DOM and using JavaScript Events"
      ],
      "course_content": {},
      "requirements": [
        "Desire to learn",
        "A computer (Desktop/Laptop)"
      ],
      "description": "Learn to create a website from scratch with this simple and straightforward HTML, CSS, JavaScript, and React course. Apply common HTML tags you need to know to be able to create websites. Then learn all the CSS you need to style those HTML elements. Learn how to add interactivity to those websites using JavaScript. Finally learn how to create full-stack applications using React and Firebase.\nStart from scratch and learn how to create a full-stack React Application.\nWhat will you learn in this course:\nHTML 5\nHTML5 web page structure\nelements and tags\nHTML spacing\nusing comments\nLine break and how to nest elements\nHTML headings\nCreate hyperlinks to connect content\nadd images as needed\nhow to work with lists\nUsing Divs and Spans in HTML\nNew HTML5 elements\nHow to transform your HTML code with styling\nCSS 3\nBasic CSS Selectors\nCSS Colors\nUsing and creating backgrounds\nTypography\nCSS Box Model\nPositions property in CSS\nThe Flexbox model\nThe Grid model\nAdvanced CSS Selectors\nCreating Responsive Websites\nCSS Media Queries\nCSS Animations\nJavaScript\nWhat are Variables - Var, Let, Const\nOperators\nDatatypes\nConditional Statements\nArrays\nFunctions\nObjects\nLoops\nImplementing JavaScript in HTML\nDocument Object Model\nJavaScript Events\nDOM Manipulation\nJavaScript ES6 Concepts - React Prerequisite\nArrow Functions\nHigher-Order Functions\nDestructuring\nModules\nGetting Started with React\nReact Core Concepts - Build a Counter Application\nBuild a Tic Tac Toe Game with React\nBuild a full-stack Todo Application with React and Firebase\nBuild an awesome Clock with Glassmorphism design\nBuild a newsletter signup form with React and Firebase\nAll resources and source code from the course are provided so you can practice working with code right from the start.\nI am here to help you learn HTML/CSS/JavaScript and am ready to answer any questions you may have. I have over 10 years of real-world web development experience, which I will share with you within this course.\nHTML, CSS, and JavaScript are the bread and butter of every web developer and are used literally on every website.\nNothing to lose, there is a 100% Money Back if you don't like it\nWant to know more, what are you waiting for? Take the first step. Join now to start with the basics of the web development today.",
      "target_audience": [
        "Anyone who wants to learn the basics of HTML and CSS",
        "Anyone who wants to be a web developer",
        "Anyone who wants to create a website"
      ]
    },
    {
      "title": "The Ultimate 2023 Google Chrome Extension Development Course",
      "url": "https://www.udemy.com/course/the-ultimate-2023-chrome-extension-and-firefox-plugin-dev/",
      "bio": "4 projects of increasing complexity. The only Google and Firefox extension / plugin development course you'll need!",
      "objectives": [
        "Learn all important concepts for chrome and firefox extensions.",
        "All topics will be covered with the help of 4 projects and theory",
        "We will work with the latest version of chrome (Manifest V3) and help you migrate older projects (Manifest V2) too",
        "Understand how extensions work, their components and structure",
        "Understand service workers",
        "Chrome APIs",
        "Reading, modifying and injecting scripts and components of web pages",
        "Caching and storing data",
        "Download data and items from websites",
        "Events and listeners",
        "Playing with DOM of webpages"
      ],
      "course_content": {},
      "requirements": [
        "Bare basics of JavaScript and HTML"
      ],
      "description": "Hi guys, hope you’re doing well! I’m Dhruv and in this chrome extension development and firefox plugin development course, I’ll cover everything you’ll need to be ready to create or work upon the latest versions of chrome extensions and firefox plugins and the old. Most of the material you’ll find has been outdated due to google’s radical change from Chrome Manifest V2 to V3, including Chrome API, structure and functionality changes, but don't worry as I said I'll teach you everything you’ll need to be ready to create or work upon the latest versions of chrome extensions and the old. I have taught about this topic in various seminars and workshops. I’ll cover the topics in 4 levels of expertise and I promise by the end of it, you’ll have everything you need to start working on your own project on firefox plugins or chrome extensions.\n\n\nOne of the primary benefits of extension development is the low barrier to entry. Unlike other types of software development, which often require significant resources and expertise, extension development is relatively simple and can be done by anyone with a basic understanding of web technologies. This means that it is possible to get started as an extension developer with minimal upfront investment. If you know the basics of JavaScript and HTML, you’re good to go here.\n\n\nEven though it is simple, chrome extension development is highly profitable and I personally have 3 extensions on the web store which make significant revenue. And a simple search on job portals will tell you how in-demand these job profiles are.",
      "target_audience": [
        "Anybody who wants to work upon extensions"
      ]
    },
    {
      "title": "React and NodeJS: A Practical Guide with Typescript",
      "url": "https://www.udemy.com/course/react-node-admin/",
      "bio": "NodeJS with Typescript, React Hooks, Redux, MySQL, TypeORM, Upload Images, Export CSV",
      "objectives": [
        "Use NodeJS with Typescript",
        "Use TypeORM with MySQL",
        "Generate Jwt Token",
        "Login with HttpOnly Cookies",
        "Upload Images",
        "Export CSV files",
        "React with Typescript",
        "Use Redux"
      ],
      "course_content": {},
      "requirements": [
        "Basic Javascript Knowledge"
      ],
      "description": "Learn how to create an Admin App using React and NodeJS.\nIn NodeJS you will learn:\nUse TypeORM and connect with MySQL\nUse Typescript\nUse Access Middlewares\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV's\nIn React you will learn:\nCreate a React project with Typescript\nUse Redux\nCreate public and private routes\nReact Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "The Extreme Web Development Course - For Beginners",
      "url": "https://www.udemy.com/course/the-extreme-web-development-course/",
      "bio": "Learn Web development easily and automatically.HTML5, CSS3, Javascript, JQuery,Ajax,Bootstrap 4 ,PHP ,MYSQL and MORE...",
      "objectives": [
        "HTML5 Essentials: Build the structure of web pages using HTML5, including advanced tags and attributes for creating modern layouts.",
        "CSS3 Fundamentals: Style your web pages with CSS3, learning about flexbox, grid, animations, transitions, and responsive design techniques.",
        "JavaScript for Interactivity: Make your web pages dynamic by understanding core JavaScript concepts such as variables, functions, loops, and DOM manipulation.",
        "jQuery Simplified: Harness the power of jQuery to streamline your JavaScript code, handle events, and create animations easily.",
        "AJAX Basics: Learn how to fetch and send data from/to the server asynchronously, improving the performance of your web applications.",
        "Bootstrap 4 Framework: Design mobile-first responsive websites quickly using Bootstrap 4’s powerful grid system, utilities, and components.",
        "PHP Programming: Dive into server-side programming with PHP to build dynamic websites, manage forms, and create interactive web applications.",
        "MySQL Databases: Learn how to interact with MySQL databases to store, retrieve, and manage data, building full-stack applications.",
        "Web Development Tools: Get familiar with essential tools like code editors, version control (Git), and browser developer tools to streamline your workflow.",
        "Real-World Projects: Apply your skills by building multiple real-world projects, including a fully functional dynamic website."
      ],
      "course_content": {},
      "requirements": [
        "No prior programming experience needed: This course is designed for absolute beginners with no coding knowledge.",
        "A computer with internet access: You’ll need a computer (Windows, macOS, or Linux) and a stable internet connection to follow along with the lessons and tools.",
        "Basic computer skills: Knowing how to navigate files, folders, and install software on your computer will be helpful.",
        "A desire to learn: A positive attitude and willingness to put in practice will go a long way.",
        "Text editor: Any code editor will work (such as VS Code, Sublime Text, or Atom). You’ll be guided on how to set one up.",
        "Web browser: You’ll need an up-to-date web browser like Google Chrome, Firefox, or Safari."
      ],
      "description": "What You'll Gain from This Course\nGet ready to dive deep with 99% hands-on coding and learn the latest web development trends.\nThis is the only complete web development course designed to equip you with the skills needed in the programming industry, filled with awesome code examples.\n\n\nWelcome to The Extreme Web Development Course\nThis course is designed to provide you with everything you need to become a master web developer. I focus on straight-to-the-point topics that will accelerate your programming skills.\nWhile many say being a developer is hard, I believe it's not—it's fun when you're solving problems! By the end of this course, you'll have the confidence and skills to be a professional web developer.\n\n\nBecome a Pro in Just 4 Weeks\nWhether you're starting from scratch or looking to sharpen your skills, this course will take you from beginner to professional in just 4 weeks.\n\n\n\n\nWhat You'll Learn:\nHTML5\nCSS3\nBootstrap 4\nJavaScript\nJavaScript Apps\njQuery\nAJAX\nPHP\nMySQL\nJSON\nGoogle Maps Integration\nVersion Control with GIT\n\n\nWhat You'll Be Able to Do:\nBuild your own startup like Facebook.\nCreate an e-commerce store like eBay.\nDevelop an online course platform like Udemy.\nBecome a freelance web developer.\nSecure a full-time web development job.\nTake the leap today—start this course and transform your career in web development. The sooner you begin, the faster you'll gain the skills needed to succeed in this field.\nThank you!",
      "target_audience": [
        "Absolute Beginners: If you have zero coding experience and want to start from scratch, this course is for you.",
        "Aspiring Web Developers: Anyone looking to build a career in web development and learn the core skills needed to create websites and web applications.",
        "Students and Hobbyists: Whether you’re a student, hobbyist, or just curious about web development, this course will guide you step by step.",
        "Entrepreneurs and Business Owners: If you want to build your own websites, blogs, or e-commerce stores without relying on developers, this course will equip you with the necessary skills.",
        "Career Switchers: Professionals from non-tech backgrounds who are considering a career change and want to get into tech or web development.",
        "Designers and Marketers: If you already have a background in design or digital marketing and want to expand your skill set by learning to code and build websites."
      ]
    },
    {
      "title": "Full Stack Web Development Course 2025: Bootcamp",
      "url": "https://www.udemy.com/course/web-development-course-from-scratch-bootcamp/",
      "bio": "Become a Full-Stack Web Developer with just ONE course. HTML, JavaScript and Python",
      "objectives": [
        "Build websites and webapp for your needs",
        "You will apply Python coding for Data Science and Machine learning",
        "Create your own stunning, html layouts for awesome websites",
        "Learn to start coding from basic to app creator",
        "Master front-end development using HTML & JavaScript back-end development using Python",
        "Add Client-Side interactivity to Web Pages using JavaScript",
        "Apply Python Coding, HTML and JavaScript coding on real-world problems",
        "Learn What is Generative AI / Gen AI",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Unlock your potential as a full-stack web developer with the \"Full Stack Web Development Course 2025: Bootcamp.\" This comprehensive bootcamp is designed for anyone looking to master both front-end and back-end web development, equipping you with the skills to build dynamic, interactive, and scalable web applications from start to finish. Whether you're a beginner or looking to advance your web development career, this course will guide you through the latest tools, technologies, and best practices used in modern web development.\n\n\nYou’ll start with the core front-end technologies—HTML, CSS, and JavaScript—learning how to build responsive, visually appealing web pages. Then, you’ll dive into popular frameworks create interactive and dynamic user interfaces. On the back-end, you'll learn how to work with server-side technologies like Python programming.\n\n\nThe course takes a hands-on, project-based approach, guiding you through building full-stack applications like e-commerce sites, social media platforms, and real-time applications. You’ll also explore essential concepts such as modules and apps, and deployments.\n\n\nBy the end of the bootcamp, you’ll have the expertise to design, develop, and deploy complete full-stack web applications, making you job-ready for a career in web development.\n\n\nJoin now and become a full-stack developer capable of building modern, responsive web applications from the ground up!",
      "target_audience": [
        "Beginner HTML, JavaScript and Python developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Shopify App Development For Beginners: Create Shopify Apps",
      "url": "https://www.udemy.com/course/shopify-app-development-masterclass/",
      "bio": "Learn how to create a fully-functional Shopify app using Node.js, React, and Polaris",
      "objectives": [
        "Shopify App Development",
        "Polaris",
        "Shopify REST API",
        "Shopify GraphQL API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Getting Started",
          "Creating the app",
          "Text Editor",
          "Creating the project and Installing the app to development store",
          "Installing Polaris",
          "Errors that you might encounter"
        ],
        "REST API": [
          "Getting Products",
          "Displaying Product List",
          "Deleting Products",
          "Creating Script Tags",
          "Preventing Script Tags From Being Installed More Than Once",
          "Deleting Script Tags"
        ],
        "GraphQL API": [
          "Understanding GraphQL",
          "Installing And Getting Shop Data with GraphQL",
          "Creating App Subscription",
          "Draft Order Create & Complete",
          "Disabling Subscription",
          "Creating Custom Orders",
          "Server Cleanup",
          "Redesigning The Layout",
          "Resource List, Items, and Form",
          "Create Orders With Product Variants"
        ],
        "Webhooks": [
          "Webhook On App Uninstall"
        ],
        "Storefront": [
          "Creating Popup Message In Storefront",
          "Fixing Router 404 Not Found"
        ],
        "Polaris": [
          "Index Page",
          "Product Page",
          "Install ScriptTag Page",
          "Create Orders Page"
        ],
        "Closing Line": [
          "Next Steps",
          "Project Source Code"
        ],
        "Course Update": [
          "Creating a new app using the new koa-shopify-auth",
          "Setting up App Bridge, GraphQL, and using Old Project Files",
          "Database & Custom Session Storage"
        ]
      },
      "requirements": [
        "Must know how to use node and Reactjs"
      ],
      "description": "Shopify is growing exponentially! A lot of eCommerce businesses are being built using Shopify. Why not take this opportunity to learn how to create a Shopify app and make a profit out of it by making an app that works and helps Shopify merchants?\nIn this course, you will learn how to develop Shopify apps using Node.js, React, and Polaris. We will also go through the important parts of Shopify REST & GraphQL API like subscriptions, script tags, products, orders, and more!\n\n\nThis course covers the following topic:\nShopify REST API\nGraphQL\nSubscription API\nDraft Orders API\nProducts API\nScript Tag API\nWebhooks!\nPolaris\nand more!\nWe're also going to create a very easy popup message in the storefront. That way, you will get an idea of how to customize a store using your very own app.\n\n\nIn this course, we will be using the API version 2020-10 although you can easily update to the latest version through the server file. If you have any questions, feel free to ask me in the QnA section.\n\n\nWhy you should take this course?\nYou should take this course if you want to learn how to create Shopify apps. In this course, we will cover the most important part of Shopify app development which is of course the webhooks. If you don't know, all Shopify apps must have a webhook to get accepted in the app store. But does that mean I can't take this course if I only wish to create private apps? Of course not! Public or Private, you can learn a lot from this course.\n\n\nSo what are you waiting for? Enroll now and let's make the best Shopify app ever created.",
      "target_audience": [
        "Intermediate developers seeking for Shopify App Development lessons",
        "Developers wanting to create Shopify apps"
      ]
    },
    {
      "title": "The Redux Official Course Tutorial Code Along For All Levels",
      "url": "https://www.udemy.com/course/the-redux-master-course-tutorial-code-along-for-all-levels/",
      "bio": "Modern 2023 Industry React - Redux & Redux Toolkit for Passing High Level Interviews & Migrating To RTK",
      "objectives": [
        "Master Redux from beginner to advanced level, gaining a deep understanding of Redux concepts, principles, and best practices.",
        "Successfully migrate traditional Redux applications to Redux Toolkit (RTK) for improved productivity and simplified development workflows.",
        "Develop proficiency in querying, caching, and normalization using RTK Query, optimizing data handling in Redux applications.",
        "Apply advanced memoization techniques and optimization strategies to enhance performance and efficiency in Redux applications.",
        "Implement WebSocket streaming for real-time communication in Redux, enabling seamless and instant data updates.",
        "Build a comprehensive social media app from scratch, showcasing advanced Redux architecture, features, and a sophisticated mock database.",
        "Acquire TypeScript fundamentals and integrate TypeScript with Redux for type-safe and robust application development."
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. JavaScript and React recommended! Redux a plus :)"
      ],
      "description": "Are you ready to take your Redux skills to the next level? Look no further! In this comprehensive and in-depth Udemy course, you will embark on an immersive journey through the Redux official documentation, equipping yourself with the knowledge and expertise to excel as a React developer.\nKey Focus: Upgrading Skills, Mastering Redux, and Excelling in React Interviews\nWhy RTK Matters: Unlock the Power of Modern Redux\nIn today's fast-paced industry, it's crucial to stay up-to-date with the latest tools and techniques. That's why this course places a key focus on Redux Toolkit (RTK) - the modern solution that simplifies Redux development and enhances productivity. You will understand why learning RTK is essential and how it outshines regular Redux by providing a streamlined and efficient workflow.\nWhy am I the right  teacher for you?\nMy name is Clarian, I've worked as a head engineer with top tech and entertainment companies around the world for over 15 years, tech developer, Co-founder for million plus businesses built from scratch, consultant in the space for billion plus tech companies, and I am fully passionate and dedicated to what I teach. My courses and programming is published world wide including on highly regarded computer science publications such as Safari O'Reilly\nI have recently been spending my time building comprehensive training models with clear explanations to help others evolve and grow by demystifying common misconceptions and problems.\nFrom Junior to Senior: Progressively Advanced Topics\nStarting from the junior level, we will guide you through a carefully designed learning path, ensuring that you build a strong foundation. We will cover the fundamentals of Redux, gradually progressing to highly advanced topics that will prepare you to tackle complex real-world projects.\nA Deep Dive into the Redux Official Docs and Beyond\nNo stone will be left unturned as we dive deep into the Redux official documentation. We will meticulously explore each concept and technique, giving you a comprehensive understanding of Redux principles, best practices, and advanced features.\nRTK Querying, Caching, and Normalization: Mastering Efficient Data Handling\nDiscover the power of RTK Query as we delve into advanced data querying, caching, and normalization techniques. You will learn how to optimize your Redux applications by efficiently managing data flows, reducing unnecessary API calls, and leveraging caching strategies.\nBest Practices for Memoization and Optimization: Boost Performance\nWe believe in writing highly performant applications, and this course will equip you with the tools and strategies to achieve just that. Learn the art of memoization, optimization techniques, and performance tuning to create blazingly fast Redux applications.\nWebSocket Streaming: Real-Time Communication Made Easy\nStay on the cutting edge of modern web development by incorporating real-time communication with web sockets. You'll gain hands-on experience in implementing WebSocket streaming in your Redux applications, enabling seamless and instant data updates.\nBuilding a Social Media App from Scratch: Real-World Project Examples\nPutting theory into practice is essential, and that's why we provide a comprehensive example project where you will build a social media application from scratch. This project will give you invaluable experience in architecting Redux applications, implementing advanced features, and working with a highly advanced mock database.\nBeyond Redux: Comprehensive Skill Set\nTo ensure you are well-rounded in your knowledge, we go beyond Redux and cover additional essential topics. You will learn TypeScript fundamentals, explore Next.js integration with Redux, and gain insights into other relevant technologies and best practices in the React ecosystem.\nWhy Take This Course: Elevate Your Redux Skills and Excel in Interviews\nBy the end of this course, you will learn how to master Redux and have the tools and roadmap at your disposal to prepare to excel in high-level React and Redux interviews. This course aims to give you the confidence to tackle complex projects, implement best practices, and leverage the full potential of modern Redux, particularly RTK.\nWhat We Learn In This Course\nIn-depth understanding of Redux concepts, including actions, reducers, and the Redux store.\nMastering the concept of immutability and its importance in Redux state management.\nAdvanced usage of selectors to efficiently extract data from the Redux store and create derived state.\nWorking with Redux middleware to handle asynchronous actions, such as Redux Thunk or Redux Saga.\nImplementing advanced Redux patterns like middleware chaining, custom middleware, and middleware composition.\nExploring different data flow architectures, such as Flux and Redux, and understanding their pros and cons.\nLeveraging Redux DevTools for debugging and time-traveling capabilities.\nImplementing complex reducers, including combining multiple reducers using Redux combineReducers.\nDeep dive into asynchronous actions with Redux using async/await, Promises, and handling API requests.\nAdvanced state management techniques like handling complex data structures, nested data, and normalization.\nAdvanced usage of Redux middleware, including creating custom middleware for specific use cases.\nFine-tuning performance with memoization techniques like reselect to optimize selector performance.\nUnderstanding and utilizing the powerful Redux DevTools extension for debugging and time-traveling through state changes.\nHandling side effects and asynchronous operations using Redux middleware such as Redux Thunk\nImplementing efficient caching mechanisms in Redux to optimize data retrieval and reduce unnecessary API calls.\nExploring advanced debugging techniques and strategies for troubleshooting Redux applications.\nIn-depth understanding of Redux middleware and how to extend and customize its functionality.\nWorking with Redux store subscriptions and handling subscription updates for efficient UI rendering.\nImplementing advanced data manipulation and transformation using Redux reducers and custom middleware.\nAdvanced state management techniques, including handling complex data structures, deep nesting, and normalization.\nApplying best practices for organizing and structuring Redux code in large-scale applications.\nUnderstanding and implementing Redux middlewares for advanced functionality, such as logging, caching, or authentication.\nIntegrating Redux with other libraries or frameworks, such as React Router or form libraries.\nExploring advanced topics like Redux persistence, state rehydration, and handling optimistic updates.\nTechniques for testing Redux applications, including unit testing reducers, actions, and middleware.\n\n\nEnroll today and take a leap towards becoming a highly skilled React developer. Upgrade your Redux expertise, pass advanced interviews, and unlock new career opportunities. Start your journey to Redux mastery now!\nNote: This course is designed for all levels, from junior to senior developers, with tailored examples and projects for each level.",
      "target_audience": [
        "Junior developers looking to build a strong foundation in Redux and advance their React skills.",
        "Intermediate React developers seeking to master Redux and excel in high-level React and Redux interviews.",
        "Senior React developers aiming to stay updated with modern Redux concepts and industry requirements.",
        "React developers interested in migrating from traditional Redux to Redux Toolkit (RTK) for improved productivity.",
        "Developers looking to enhance their understanding of advanced Redux topics, such as querying, caching, and WebSocket streaming."
      ]
    },
    {
      "title": "Cisco Certified DevNet Associate Course - Part 1 - NetDevOPs",
      "url": "https://www.udemy.com/course/cisco-certified-devnet-associate-course-netdevops/",
      "bio": "Cisco Certified DevNet Associate Course - Part 1: Developing Applications and Automating Workflows using Cisco Platforms",
      "objectives": [
        "You will learn Python basics, linux basics, Mac Os and Windows basics that are relevant to Networking and Network Programming",
        "You will learn and Understand Application Programming Interface (RESTful APIs and RPC) with practical sessions using Postman, Curl and Python",
        "You will learn Software Development and Design including how to develop and maintain applications built on Cisco platforms using DevOps tools like git",
        "You will learn about application development and security in DevOps environment using Docker.",
        "You will learn about infrastructure and automation with automation tools such as Ansible",
        "You will learn how to work with data structures such as XML, JSON, YAML and on API CRUD actions using HTTP requests and Responses"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computing Skills",
        "Basic Networking skills at Cisco CCT level preferred",
        "A lot of Interest in the subject matter"
      ],
      "description": "Python, Linux & NetDevOps Toolset for Network Automation and Programmability\nThe Cisco Certified DevNet Associate Course   (Developing Applications and Automating Workflows using Cisco Platforms) gives you the foundational skills and knowledge you need for network automation and programmability. The course focuses on key tools and practices in NetDevOps. You will learn how to install and use Linux operating system and the Python programming language for network programming and automation.\nThe foundation to becoming a DevOps Engineer is learning python programming in a Linux environment and building on that by learning DevOps tools such as Docker, Postman, Git, and Jenkins among others. In this course, we will cover the following topics among others:\nMain Topics\nSetting and using a virtual development environment.\n· Linux and basic Linux commands and operations.\n· Python Programming for Network Engineers\n· Version Control with Git and GitHub.\n· Container Technology with Docker.\n· Software Engineering for Network Engineers.\n· Understanding and using Application Programming Interface.\n· Working with API Documentation.\n· Continuous Integration – Continuous Delivery (CI-CD).\n· Jenkins - Building a CI-CD Pipeline Using Jenkins.\nAfter the training in Linux and Python, the course delves into the practical use of various NetDevOps tools and platforms such as Git/Github, Docker, Postman, and Jenkins. Furthermore, the course will also guide you systematically on how you can use the Application Programming Interface (API) and data structures for secure remote communications between various platforms. You will learn how to work with XML, JSON, and YAML. You will also practically learn how to access, configure and manage various network devices using protocols such as NETCONF and RESTCONF.\nThe conventional methods of accessing and configuring network devices are with the Simple Network Management Protocol and the command-line interface. These methods are manual and require the intervention of a network support engineer or technician. The necessity to physically access devices and to manually manage or configure them delays resolving critical network issues and configurations. Some network issues, such as security breaches, require immediate redress because significant delays can interfere with or affect critical business processes. They may also have adverse effects if the network supports critical services.\nModern cultural practices involve remote support, work from home, and distributed responsibilities. Automation of most network tasks, such as device configuration, management, security, and monitoring, is essential in that kind of environment. This course equips you with the skills you can use to leverage the capabilities of modern networking devices because they are developed with their programmability in mind.\nWhile developing software to automate devices. Network engineers should embrace a DevOps approach. DevOps stands for Development and Operations and is a practice that calls for the automation of the software development process using various automation tools. The approach also requires collaboration between development and operation teams in iterative software development, testing, and deployment process. The practice of employing DevOps for network automation and programming is referred to as NetDevOps.\nIn NetDevOps, standardized network device APIs and software automation tools are used to configure, manage and monitor network devices. NetDevOps workflows use Open Source, standards, and Python scripts alongside commercial devices and tools to deliver flexible, secure, and fast-responsive networks. NetDevOps brings the culture, tools, technical methods, and best practices from DevOps to Networks.\nIt combines the culture, tools, best practices, and ideas from DevOps with network engineering; and is about automation, configuration management, monitoring, Continuous Integration - Continuous Delivery, ChatOps, and so much more.",
      "target_audience": [
        "Those interested in starting a career in Network Engineering",
        "People with Cisco CCT skills",
        "People with Cisco CCNA skills",
        "Beginners interested in a learning modern technologies and practices in ICT"
      ]
    },
    {
      "title": "Drupal Fast Start: Learn Drupal in Less Than 2 Hours!",
      "url": "https://www.udemy.com/course/drupal-fast-start/",
      "bio": "Watch my step-by-step Drupal tutorials and learn how to build your Drupal site from scratch!",
      "objectives": [
        "The pros and cons of using Drupal.",
        "How to install and configure Drupal 9.",
        "How to change the appearance of your Drupal site using themes.",
        "How to add more functionality using Drupal modules.",
        "How to publish articles and pages in Drupal.",
        "How to create and edit navigation menus in Drupal."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Why You Should Use Drupal": [
          "Drupal Pros and Cons"
        ],
        "The Different Types of Web Servers for Drupal": [
          "Your Drupal Web Server"
        ],
        "Installing Drupal 9": [
          "An Easy Way to Install Drupal 9"
        ],
        "An Overview for Admins": [
          "A Brief Walkthrough for Drupal Admins"
        ],
        "How to Change the Appearance of Your Drupal Site": [
          "3 Ways to Change the Appearance Of Your Drupal Site"
        ],
        "How to Use Drupal Modules to Add Extra Functionality to Your Website": [
          "Installing the Media Library Module",
          "Installing the Metatag Module for SEO",
          "Installing the Pathauto Module for SEO-friendly URLs"
        ],
        "How to Use Taxonomy": [
          "Learn How to Use Taxonomy In Drupal"
        ],
        "All About Blocks and Regions": [
          "How to Add Blocks to Various Regions of Your Webpages"
        ],
        "All About Managing Content in Drupal": [
          "Learn How to Manage Various Types of Content in Drupal"
        ]
      },
      "requirements": [
        "There are no prerequisites. This course assumes no prior knowledge of Drupal or web development."
      ],
      "description": "If you're jumping into Drupal for the first time, you might find it very difficult to configure, change the appearance, and also manage your content. In this course, my goal is to provide you with enough information so that you can create and use your Drupal content management system (CMS) in as little as 2 hours!\nNOTE: This course will be updated for future versions of Drupal. The lessons apply to both Drupal 8 and 9. I've also provided important notes about upgrading to Drupal 10.\nBefore using Drupal, you'll want to see if it's the right content management system for you. I'll go over the top  CMS's, discuss pros and cons, and the reasons I use Drupal over other systems.\nFrom there, I'll jump into Drupal hosting accounts. Not all servers can be used for Drupal. While many of the top hosting providers say that they support Drupal, their infrastructure just isn't fine-tuned for it. I'll discuss my recommendations based on my personal experiences. From there, I'll go over 6 platforms to help you make an educated decision on the web server that fits your needs.\nBefore publishing content, you'll want to learn about changing the appearance of Drupal. While Drupal does have a lot of themes, you'll need to do more than selecting one and activating it. This lesson will discuss Drupal-specific processes that you'll need to do in order to make your website look stunning.\nAfter setting up your theme, I'll go over the steps for extending Drupal's features through modules. I'll provide several lessons that will discuss my recommended modules, and I'll also show you how to configure them step-by-step.  I'll discuss the media library for easily managing your website assets, creating search engine friendly URL's with the Pathauto module, the Metatags module for SEO, and the CSS Editor module that will allow you to change the appearance of your site using custom CSS.\nIn the taxonomy lesson, I'll cover different ways that you can categorize and tag content. Drupal allows you to create custom taxonomy as well. This is useful for site owners that want to create megasites with extreme content silos or want a way categorize various elements of the site for advanced content queries.\nIn the blocks and regions lesson, you'll learn how to insert existing or custom content into various areas of your webpages. This will allow to customize your header, sidebars, and footer regions to add custom content like banner ads, alerts, custom menus, and other relevant content.\nFinally, I'll discuss content types and how you can search, add, and edit articles and basic pages. This key lesson will allow you to provide content that informs, educates, or entertains your audience. From there, you'll be able to get traffic to your website and start engaging with your audience.",
      "target_audience": [
        "This course is ideal for anyone that wants to learn how to install and configure Drupal for publishing content."
      ]
    },
    {
      "title": "Node, Express JS, Angular 12 & Mongo DB web app development",
      "url": "https://www.udemy.com/course/node-express-js-angular-12-mongo-db-web-app-development/",
      "bio": "learn to create a full stack web application from scratch using Angular 12, Node, Express JS and Mongo DB",
      "objectives": [
        "Full Stack Web Development",
        "Backend Development with Node, Express JS and Mongo DB",
        "Front End Web Development with Angular 12",
        "Build RESTful APIs"
      ],
      "course_content": {},
      "requirements": [
        "basic html, css and javascript"
      ],
      "description": "Hello Everyone, and welcome to this course on Angular 12, Node, Express JS and Mongo DB full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n* Mongo DB for the database.\n* Node, Express JS for the back end web development.\n* And the latest Angular 12 for the front end web development.\n\n\n-We will first start with installing and setting up the environment needed for our database, back end project and front end project.\n-Then we will develop REST API end points using Node and Express JS.\n-Finally we will be using Angular 12 to design the front end part of our App.\n* You will learn how to create the navigation menu and tables using bootstrap, add routing and navigation to our Angular App, add modal pop up window with drop downs and date pickers, and also add upload profile picture functionality and store it in the backend server. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        "Backend developers, Frontend developers, Node JS developers, Angular, React and Vue JS developers"
      ]
    },
    {
      "title": "Django 2 & React: Build a Realtime web app",
      "url": "https://www.udemy.com/course/django2-and-reactjs-build-a-realtime-web-app/",
      "bio": "Learn to build a realtime web app using Django 2, Channels, Redis, Websocket and Reactjs",
      "objectives": [
        "Build a realtime note taking application like Evernote",
        "Structure & Build a full web application",
        "Create Restful API with Django Rest Framework",
        "Websocket using Channels and Redis",
        "Combine Django and Reactjs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup"
        ],
        "Project Backend": [
          "Creating application structure",
          "Models, Migrations & Admin panel",
          "Django Rest Framework - Setup API",
          "Websocket with channels"
        ],
        "Frontend - React": [
          "Setup React",
          "Creating the main layout",
          "Listing notes",
          "Connecting to API",
          "Saving new notes",
          "Updating changes with websocket"
        ]
      },
      "requirements": [
        "Basic understanding of Python or other languages like Php, Java etc..",
        "Reactjs basics",
        "Using a terminal"
      ],
      "description": "Welcome to Complete Django 2 & React Bootcamp. In this course you are going to learn how to setup and build a realtime web application like Evernote. We will start off by setting up our models then model serializers for the API and finally giving our application realtime feature. We are going to be using alot awesome django packages such as: Django Rest Framework(For API), Django Channels(For websocket/realtime), Redis and much more..\nBut that's not it. For the frontend we will be using ReactJs to pull the data from our API and connecting to the websocket.",
      "target_audience": [
        "Beginner web developers",
        "Anyone who wants to build nice web applications using python django 2"
      ]
    },
    {
      "title": "The Complete MERN Stack Developer Course 2020",
      "url": "https://www.udemy.com/course/the-complete-mern-stack-developer-course-react-node-2020/",
      "bio": "Learn how to create Full Stack Web applications using React as Front-End , Node+Express as Backend and Mongo as Database",
      "objectives": [
        "Build a full stack Web Apps with React ,Node, Express & MongoDB",
        "Learn Node JS API (Backend) Development",
        "Node JS Runtime Environment",
        "Express JS and Express Routing",
        "Mongo DB and its Operations",
        "Connecting Node JS with Mongo DB",
        "React Introduction",
        "Developing Single Applications With React",
        "Learn to Write Functional Components with React Hooks"
      ],
      "course_content": {
        "Introduction": [
          "What is MERN Stack",
          "Course Structure",
          "Node Installation",
          "Join The Community"
        ],
        "ES6 Brush Up": [
          "Let Keyword",
          "Const Keyword",
          "Arrow Functions",
          "For Of loop",
          "Template Literals",
          "Spread Operator"
        ],
        "React - Intro": [
          "What is React",
          "What is Component",
          "JSX Overview"
        ],
        "First React App": [
          "Helloworld App in React",
          "Project Structure of React-App",
          "Debuggung React App"
        ],
        "Components": [
          "Components Introduction",
          "Class Components",
          "Functional Components",
          "Parent , Child Components",
          "What is state",
          "setState Method",
          "Props in Class Components",
          "Props in Functional Components"
        ],
        "Event Handling In React": [
          "Event Handling in Class Components",
          "Event Handling in Functional Components"
        ],
        "CSS in React": [
          "Inline CSS",
          "Local CSS",
          "Manipulating CSS using Events"
        ],
        "Project - Counter App": [
          "Counter Application"
        ],
        "LifeCycle": [
          "Class Component Life Cycle Methods"
        ],
        "React Hooks": [
          "What is a React Hook",
          "useState Hook",
          "useEffect Hook",
          "Manipulating CSS using Hooks"
        ]
      },
      "requirements": [
        "Javascript Basics"
      ],
      "description": "MERN is a free and open-source JavaScript software stack for building dynamic web sites and web applications. Because all components of the MERN stack support programs that are written in JavaScript, MERN applications can be written in one language for both server-side and client-side execution environments\nIn This Course You Will Learn\nWhat is MERN Stack\nAdvantages Of Mern Stack\nNode Js\nImplementing Routes in Node JS\nRendering HTML Files in Node Js\nExpress JS\nExpress Routing\nNPM Node Package Manager\nMongo DB\nMongoDB Commands Like Create, Read, Update, Delete\nConnecting Node JS With Mongo DB\nHow To Create a new React Application\nComponents and Different types of Components\nComponents Structure and Life Cycle\nHow to handle events in React\nApplying styles to React JS Components\nReact Hooks\nForms and Form Submissions\nRouting in React\nControlling one component from another Component with the help of Context-API\nConnecting React Applications to Back-End and build complete full-stack Applications",
      "target_audience": [
        "MERN Stack",
        "React",
        "Node",
        "Mongo DB",
        "Express",
        "Javascript"
      ]
    },
    {
      "title": "PHP : Learn to upload files to Amazon S3 and use CloudFront",
      "url": "https://www.udemy.com/course/php-learn-to-upload-files-to-amazon-s3-and-use-cloudfront/",
      "bio": "Learn to upload files to Amazon S3 using PHP and Serve them with CloudFront",
      "objectives": [
        "Learn to upload files to the cloud using PHP and Amazon S3",
        "Learn to use Amazon S3 with CloudFront"
      ],
      "course_content": {},
      "requirements": [
        "Basic OOP in PHP"
      ],
      "description": "This is a small course focus on uploading files to the cloud in this case Amazon S3 which stands for Amazon Simple Storage Service.  The great thing about S3 is that is very cheap and very scaleable.\n\nWether you are building a blog, video or photo application as your application gets bigger you might need to start saving your data somewhere else rather than in your server.\nHosting your videos and photos with S3 can really improve your application speed, hosting prices and even your SEO results.\nThis course focuses on Amazon S3 but after you learn how to do it wth S3 you will find easier to do it with other cloud space providers.",
      "target_audience": [
        "This course is meant for students who want to learn how to upload files to the cloud in their application",
        "Students who want to use CDN to serve application videos and large files"
      ]
    },
    {
      "title": "Python Mastery with Generative AI: Coding to AI Integration",
      "url": "https://www.udemy.com/course/python-mastery-with-generative-ai-coding-to-ai-integration/",
      "bio": "Learn Python, AI Applications, Data Analysis & Code Optimization",
      "objectives": [
        "Master Python syntax and basic programming constructs.",
        "Utilize AI tools like ChatGPT and GitHub Copilot for code enhancement.",
        "Optimize and refactor Python code using AI technologies.",
        "Implement advanced error debugging and code review techniques.",
        "Develop skills in asynchronous programming and threading.",
        "Apply design patterns and best coding practices in Python.",
        "Enhance data manipulation skills using Pandas and visualization libraries.",
        "Explore object-oriented programming and dynamic attributes.",
        "Build AI-driven Python applications for real-world scenarios.",
        "Gain proficiency in deep learning and NLP with Python frameworks."
      ],
      "course_content": {
        "Basic Python Programming Concepts and Generative AI": [
          "Introduction",
          "What you Should know before Starting Python?",
          "Understanding of Python and installations",
          "Basics of Python",
          "How is AI beneficial in programming?",
          "Generative AI (Chatgpt, Bard, Copilot, Git&Github copilot)"
        ],
        "Leveraging Generative AI for Enhancing Python Skills": [
          "Advanced Use of AI Code Completion Tools for Python",
          "Integrating AI for Code Optimization and Refactoring",
          "Utilizing AI for Error Debugging",
          "AI-Powered Code Review and Quality Analysis"
        ],
        "Efficient Development Environment Setup": [
          "Advanced Python Environment Management",
          "Profiling and Optimizing Python Code with Generative AI",
          "Debugging Techniques"
        ],
        "Intermediate to Advanced Syntax and Concepts (Using chatGPT-4 and Gemini)": [
          "Lambda Functions and Functional Programming Techniques",
          "Threading, Multiprocessing, and Asynchronous Programming",
          "Advanced Error and Exception Handling Techniques",
          "Python Memory Management and Optimization"
        ],
        "Design Patterns and Best Practices": [
          "Implementing Design Patterns in Python",
          "Writing Pythonic Code: Best Practices and Conventions using ChatGPT",
          "Unit Testing and Test-Driven Development (TDD) in Python with Gemini"
        ],
        "Data Manipulation and Analysis Generative AI": [
          "Advanced Data Manipulation with Pandas",
          "Data Visualization Techniques",
          "Working with Data Sets and Performance Tuning"
        ],
        "Advanced Object-Oriented Programming in Python": [
          "Design Principles with Copilot",
          "Advanced Techniques in OOP",
          "Working with Dynamic Attributes and Methods"
        ],
        "Utilizing Python Libraries and Frameworks for Specialized Tasks": [
          "Data Science and Machine Learning",
          "Network Programming",
          "Advanced Web Development"
        ],
        "AI and Deep Learning with Python": [
          "Deep Learning Concepts and Frameworks",
          "Natural Language Processing (NLP) with Python"
        ],
        "10 Project": [
          "Building a Todo List App with Flask: Leveraging Python and JavaScript for an Enh"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts.",
        "Access to a computer with internet connectivity.",
        "Installation of Python and relevant development tools.",
        "Eagerness to learn about AI's role in programming.",
        "No prior experience required; just a passion for technology!",
        "Access to a computer and internet for software installation."
      ],
      "description": "Dive into the world of programming with our comprehensive course \"Python Mastery with Generative AI: Coding to AI Integration\". This course is meticulously designed for both beginners and experienced developers who aspire to master Python while integrating cutting-edge Generative AI technologies. Starting with the basics of Python programming, you'll quickly progress to understanding how AI tools like ChatGPT, Bard, and GitHub Copilot can elevate your coding skills.\nExplore advanced programming topics such as lambda functions, multiprocessing, and asynchronous programming tailored with the aid of AI. Delve into data manipulation using Pandas, create visually appealing data visualizations, and optimize data performance. Learn the principles of object-oriented programming enhanced by AI insights, and harness Python's vast library ecosystem for tasks ranging from web development to machine learning.\nThe course also prepares you for real-world applications by teaching you how to implement AI in data analysis and business intelligence, culminating in building a practical To-Do List app. By joining, you'll gain access to a plethora of resources for continuing education, participate in Python open source projects, and stay updated with the latest trends and best practices in Python programming. Prepare to transform your coding skills and embrace the future of Python and AI with us!",
      "target_audience": [
        "Aspiring Developers: Beginners who want to start a career in programming with Python.",
        "Experienced Programmers: Those looking to enhance their skills with AI integrations.",
        "Data Analysts: Professionals aiming to leverage Python for data manipulation and visualization.",
        "Tech Enthusiasts: Individuals curious about the intersection of AI and software development.",
        "Project Managers: Managers seeking to understand the technical aspects of Python projects.",
        "Students: College or university students studying computer science or related fields."
      ]
    },
    {
      "title": "The 2025 JavaScript Course: Build Modern JavaScript Projects",
      "url": "https://www.udemy.com/course/the-javascript-course-build-modern-javascript-projects/",
      "bio": "Learn Modern JavaScript. Master JavaScript with Projects and Build Your Portfolio. JavaScript Bootcamp.",
      "objectives": [
        "Practice modern JavaScript (Arrow functions, Asynchronous programming with Fetch API, Async/Await, etc.)",
        "Build beautiful JavaScript projects from scratch and add them to your portfolio",
        "Practice Vanilla JavaScript and HTML5, CSS3",
        "Canvas"
      ],
      "course_content": {
        "Before We Start": [
          "How to Install Visual Studio Code"
        ],
        "CSS and JavaScript - Useful Lessons": [
          "Why You Should Watch This Section",
          "Box-shadow",
          "Justify-content",
          "How to Connect Fonts",
          "Arrow Functions"
        ],
        "Project - Weather Application": [
          "Weather - INTRO",
          "Weather - HTML",
          "Weather - CSS - Part 1",
          "Weather - CSS - Part 2",
          "Weather - JS - API Connection",
          "Weather - JS - Weather Details - Part 1",
          "Weather - JS - Weather Details - Part 2",
          "Weather - JS - 5-Day Forecast - Part 1",
          "Weather - JS - 5-Day Forecast - Part 2",
          "Weather - JS - Weather Icons",
          "Weather - JS - City Suggestions - Part 1",
          "Weather - JS - City Suggestions - Part 2"
        ],
        "Project - PIANO": [
          "Piano - INTRO",
          "Piano - HTML",
          "Piano - CSS - Part 1",
          "Piano - CSS - Part 2",
          "Piano - JS - Piano Keys Creation",
          "Piano - JS - Adding Sounds",
          "Piano - JS - Radio Buttons",
          "Piano - JS - Keyboard",
          "Piano - JS - Code Optimization",
          "Piano - JS - AUTOPLAY - Part 1",
          "Piano - JS - AUTOPLAY - Part 2"
        ],
        "Project: Slider": [
          "Slider - HTML and CSS",
          "Slider - JS"
        ],
        "Canvas": [
          "What Is Canvas?",
          "Project Folder",
          "Line",
          "Rectangle",
          "Applying Styles",
          "Arc",
          "Project: Panda - INTRO",
          "Project: Panda",
          "globalCompositeOperation",
          "Save and Restore Canvas"
        ],
        "Project: PAINT": [
          "Paint - INTRO",
          "Paint - HTML",
          "Paint - CSS",
          "Paint - JS - Part 1",
          "Paint - JS - Part 2",
          "Paint - JS - Part 3",
          "Paint - JS - Part 4"
        ],
        "IMPORTANT": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "This course is NOT for absolute beginners!",
        "Solid basic knowledge of HTML, CSS and JavaScript.",
        "Be able to create JS functions, arrays, objects, etc."
      ],
      "description": "*** PRACTICAL COURSE***\n\n\nATTENTION: You should have solid basic knowledge of HTML, CSS and JavaScript. If you are an absolute beginner, we would suggest first taking our another course The Result-Oriented Web Developer Course – BOOTCAMP 2024 where we explain HTML5, CSS3 and JavaScript from scratch.\n\n\nThree big reasons WHY this JavaScript course is a perfect fit for YOU:\n1. This is a project-based course that will help enrich your portfolio and practice modern JavaScript. This course will challenge you and help grow your JavaScript skills because every project is explained in detail, with supportive visuals where necessary.\n2. It is 100% up-to-date and it will always be! We place great importance on having all our courses 100% current. And this JavaScript course will be growing gradually - more and more new projects will be added to.\n3. We respond to every question from our students. Why? Because the success of our students is Priority #1.\n\n\nNo frameworks or anything like that will be used! With this course you will practice Vanilla JavaScript. Being confident in JavaScript is the key to success in learning React, Angular, Vue.js, etc. JavaScript is a fundamental skill!\n\n\nIn this course, you will build and learn:\n1. Virtual Piano\n2. Slider\n3. Weather App\n4. Canvas\n5. Panda\n6. Paint\n+ More Projects to Come\n\n\nLet’s build your portfolio together and solidify your JavaScript skills!\nSee you in the course!",
      "target_audience": [
        "Want to learn how to build JavaScript web projects on their own",
        "Want to enrich their portfolio and solidify the JavaScript skills"
      ]
    },
    {
      "title": "Web Development for Beginners: HTML, CSS & JavaScript",
      "url": "https://www.udemy.com/course/web-development-for-beginners-project-base/",
      "bio": "Learn to build responsive websites from scratch using HTML, CSS, and JavaScript – No prior coding needed!",
      "objectives": [
        "Creating and structuring HTML files",
        "Using headings, paragraphs, lists, links, and images",
        "Working with forms, input elements, and advanced form validation",
        "Using tables, multimedia elements, and iframes",
        "Understanding semantic elements for better SEO and accessibility",
        "Building a personal profile page and a blog layout",
        "Applying styles using CSS selectors",
        "Managing colors, backgrounds, fonts, and text styling",
        "Mastering the Box Model (margin, padding, border)",
        "Positioning elements (static, relative, absolute, fixed)",
        "Using Flexbox and Grid for modern layouts",
        "Creating animations and transitions",
        "Designing responsive websites with media queries",
        "Building a responsive landing page",
        "Understanding variables, data types, and operators",
        "Using strings, arrays, and objects",
        "Implementing user interactions with alerts, prompts, and console",
        "Writing functions and basic calculations",
        "Applying conditionals, loops, and logical operators",
        "Manipulating the DOM and handling events",
        "Creating a simple calculator, to-do list, and form validation",
        "Building small projects like a color changer and keyboard event mini-project",
        "Structuring a real-world web project from scratch",
        "Designing and styling a navigation bar, sidebar, and footer",
        "Adding dynamic JavaScript functionality",
        "Working with animations and interactive UI elements",
        "Creating a complete, responsive portfolio website"
      ],
      "course_content": {
        "Getting Started: Course Overview and Introduction": [
          "Introduction"
        ],
        "Mastering HTML: Building the Structure of Webpages": [
          "Creating Your First HTML File: Setting Up the Basics",
          "Understanding Headings and Paragraphs: Organizing Content",
          "Mastering HTML Attributes: Customizing Your Elements",
          "Block vs. Inline Elements: Structuring Your Page Layout",
          "Creating Lists in HTML: Ordered, Unordered, and Definition Lists",
          "Linking and Embedding Images: Enhancing Content with Multimedia",
          "Building Forms and Input Fields: Collecting User Data",
          "Creating a Personal Profile Page: Putting It All Together",
          "Homework Challenge: Practice Your HTML Skills",
          "Working with Tables: Displaying Data in a Structured Format",
          "Designing a Signup Form: User Registration Made Easy",
          "Integrating Multimedia: Audio and Video Elements in HTML",
          "Using Iframes: Embedding External Content Seamlessly",
          "Understanding Semantic Elements: Writing Clean and SEO-Friendly HTML",
          "Building a Blog Layout: Applying Your HTML Knowledge",
          "Simple Form Validation: Ensuring User Input Accuracy",
          "Advanced Form Validation: Enhancing User Experience",
          "HTML Meta Tags and SEO Basics: Boosting Your Site's Visibility",
          "Progress Bars and Meters: Visualizing Data with HTML"
        ],
        "Styling with CSS: Designing Beautiful and Responsive Websites": [
          "Introduction to CSS: Bringing Your Webpages to Life",
          "2_css selectors",
          "Border Styles in CSS: Creating Attractive Layouts",
          "Colors and Backgrounds: Enhancing Visual Appeal",
          "CSS BackGrounds",
          "Font and Text Styling: Improving Readability and Design",
          "CSS Text",
          "The Box Model: Margin, Padding, and Border Explained",
          "Positioning Elements: Static, Relative, Absolute, and Fixed",
          "Flexbox Layout: Building Modern Responsive Designs",
          "8_Basic Grid Layout",
          "Grid Layout Basics: Structuring Complex Web Pages",
          "CSS Layout OverFlow",
          "Advanced Grid Examples: Professional Page Layouts",
          "CSS Transitions: Adding Smooth Animation Effects",
          "CSS Animations: Bringing Your Website to Life",
          "Responsive Design with Media Queries: Mobile-Friendly Websites",
          "Building a Responsive Landing Page: Applying CSS Techniques"
        ],
        "JavaScript Essentials: Adding Interactivity and Functionality": [
          "Getting Started with JavaScript: Introduction and Setup",
          "Working with Variables: Storing and Managing Data",
          "Understanding Data Types: Strings, Numbers, and Booleans",
          "Operators and Basic Calculations: Performing Mathematical Operations",
          "String Concatenation: Combining Text Dynamically",
          "User Interaction: Using Alerts, Prompts, and Console Logs",
          "Functions in JavaScript: Reusable Code Blocks",
          "Building a Simple Calculator: Applying Functions and Operations",
          "Conditional Statements: If, Else If, and Else Explained",
          "Multiple Conditions: Nested If Statements and Switch Cases",
          "Logical Operators: Combining Conditions Efficiently",
          "Using Loops: Automating Repetitive Tasks",
          "Checking Even Numbers: Practical Use of Loops and Conditions",
          "Arrays in JavaScript: Storing Multiple Values",
          "Array Functions: Manipulating Data with Built-In Methods",
          "Looping Through Arrays: Efficient Data Processing",
          "Working with Objects: Key-Value Pair Data Structure",
          "Building a Simple To-Do List: Putting Objects and Arrays Together",
          "DOM Manipulation: Accessing and Modifying HTML Elements",
          "Event Handling: Making Your Page Interactive",
          "Mouse Events: Click, Hover, and More",
          "Keyboard Events: Capturing User Input",
          "Mini Project: Interactive Keyboard Events",
          "Form Validation with JavaScript: Ensuring Accurate User Input",
          "Color Changer Project: Dynamic Styling with JavaScript"
        ],
        "Creating a Digital Clock: Real-Time Web Application": [
          "Structuring the Digital Clock with HTML and CSS",
          "Bringing the Digital Clock to Life with JavaScript"
        ],
        "Building a Calculator: Hands-On JavaScript Project": [
          "Creating the Calculator Layout with HTML",
          "Styling the Calculator with CSS",
          "Making the Calculator Functional with JavaScript"
        ],
        "Portfolio Website: Putting It All Together": [
          "Creating the Project Structure: Planning Your Portfolio",
          "Building the Navigation Bar and Sidebar: HTML Layout",
          "Styling the Navigation Bar and Sidebar: Consistent Design",
          "About Me Section: Introducing Yourself Professionally",
          "Styling the Navbar and Sidebar",
          "Building the Projects Section",
          "Creating the Footer Structure",
          "Enhancing the About Me Section",
          "Styling Progress Bars and Elements",
          "Designing the Projects and Contact Form",
          "Final Touches for the Footer",
          "Adding Interactivity with JavaScript",
          "Animating Skills Section with JavaScript",
          "Finalizing and Polishing the Project"
        ]
      },
      "requirements": [
        "No prior knowledge required, This course is designed for complete beginners and covers everything from the ground up."
      ],
      "description": "Do you want to learn how to create stunning, responsive websites from scratch? Have you always been curious about how websites work but didn't know where to start? You're in the right place! This course is designed to take you from a complete beginner to a confident web developer.\nWeb development is one of the most in-demand skills today. Whether you want to start a new career, enhance your current skill set, or simply build your own personal projects, learning HTML, CSS, and JavaScript is the perfect place to begin. And the best part? You don’t need any prior coding knowledge!\nWhat You'll Learn:\nHTML: Create and structure your own web pages using headings, paragraphs, lists, links, images, tables, and forms. You'll even learn how to build a personal profile page and a blog layout!\nCSS: Style your web pages with colors, backgrounds, fonts, and text styling. Learn about the Box Model, Flexbox, and Grid to create modern layouts. We’ll also dive into animations, transitions, and responsive design so your websites look great on any device.\nJavaScript: Make your websites interactive! You'll learn how to use variables, functions, conditionals, loops, and events. By the end of this section, you’ll be able to build small projects like a calculator, to-do list, and even add dynamic functionality to your portfolio project.\nHands-On Project:\nBuild a complete, responsive portfolio website from scratch! This project will showcase everything you've learned and help you create an impressive online presence.\nWho Is This Course For?\nWhether you're a complete beginner, a student, an aspiring web developer, or someone looking to switch careers, this course is designed for you. No prior knowledge is needed – just a computer and internet access!\nWhy Enroll?\nClear, step-by-step explanations\nPractical examples and real-world projects\nNo fluff – just hands-on learning to get you coding quickly!\nEnroll now and start your journey to becoming a web developer today!",
      "target_audience": [
        "Complete Beginners – If you have no prior experience with coding or web development, this course is perfect for you.",
        "Aspiring Web Developers – Anyone looking to start a career in web development and learn the foundational skills of HTML, CSS, and JavaScript.",
        "Students and Hobbyists – Those who want to build their own websites, personal projects, or learn a valuable skill in their free time.",
        "Freelancers and Entrepreneurs – Individuals who want to create and manage their own websites or start offering web development services.",
        "Career Changers – People looking to switch careers to tech and want a comprehensive, beginner-friendly introduction to web development.",
        "Anyone Interested in Learning How Websites Work – Whether you’re curious about how websites are built or want to understand the basics of web design and development."
      ]
    },
    {
      "title": "Build Real World Development Projects Using Angular",
      "url": "https://www.udemy.com/course/real-world-development-projects-using-angular/",
      "bio": "Build Real World Angular Development Projects Practically",
      "objectives": [
        "Master the essential Angular concepts, Troubleshoot common runtime errors",
        "Use the deep understanding of the Angular fundamentals to quickly establish yourself as a frontend developer",
        "Understand how Angular works and how it interacts with Backends",
        "Develop modern, complex, responsive and scalable web applications with Angular",
        "Fully understand the architecture behind an Angular application and how to use it",
        "Build real-time apps that not only work great but also look awesome!"
      ],
      "course_content": {
        "Project-1: Image Sharing & Social Network with Angular and Firebase": [
          "Introduction to the Project - Image Sharing & Social Network with Angular",
          "Initializing Angular Project",
          "Creating Topbar Component",
          "Adding Angular Material",
          "Creating Login Component",
          "Creating Create Account Component",
          "Angular Forms and Form Binding",
          "Displaying Error Messages",
          "Angular Services and HTTP Client Module",
          "Adding Login Logic",
          "Configuring Redirects after Login",
          "Using Local Storage to Save User Data",
          "Adding Template to Posts Component",
          "Configuring AngularFire",
          "Uploading Images to Firebase.",
          "Creating Posts",
          "Logic for Like Button",
          "Logic for Comment Button",
          "Download The Project Files"
        ],
        "Project-2: Online Code Compiler Platform using MEAN Stack": [
          "Introduction to the Project - Online Code Compiler Platform",
          "Initializing Angular Project",
          "Creating Topbar Component.",
          "Adding Angular Material",
          "Template of Login Form",
          "Template of Create Account Form",
          "Angular Forms",
          "Displaying Error Messages",
          "Initializing Node.js Application",
          "Creating User Model",
          "Creating User Route",
          "API Logic of Login",
          "Connecting to Atlas Database",
          "Sending HTTP Calls to the Server",
          "Redirects After Login",
          "Template of Home Page",
          "Creating Fiddle Endpoints",
          "Creating Coding Page",
          "Adding Code Execution Endpoint",
          "Creating Fiddle Service",
          "Adding Methods of Coding Component",
          "Download The Project Files"
        ],
        "Project-3: StackOverflow Clone with Angular and JSON Server": [
          "Introduction to the Project - Stack Overflow Clone",
          "Initialising Angular Project",
          "Creating Topbar Component",
          "Adding Angular Material",
          "Creating Login Page",
          "Creating Create Account Page",
          "Angular Form Bindings",
          "Angular Form Error Messages",
          "Angular Services and Mock API",
          "Adding Logic for Login",
          "Login Edge Cases",
          "Template of Home page",
          "Post Questions",
          "Fetching Questions List",
          "Solutions Page Template",
          "Posting Answers Part-1",
          "Posting Answers Part-2",
          "Fetching Answers",
          "Upvoting and Downvoting",
          "Download The Project Files"
        ],
        "Project-4: Task Management App with Angular and JSON Server": [
          "Introduction to the Project",
          "Initialising Angular Project",
          "Creating Topbar Component",
          "Initilasing Angular Material",
          "Creating Boards Component",
          "Mat Dialog for Add Board",
          "Routing in Angular",
          "Angular Services and Local Storage",
          "Add Board Functionality and Template Binding",
          "Template of View Board Component",
          "Template of Add Card Dialogbox",
          "Adding Create Card Logic Part 1",
          "Adding Create Card Logic Part 2",
          "View Cards Template Binding",
          "Adding Edit Card Logic",
          "Download The Project Files"
        ],
        "Project-5: Trivia App with Global Leaderboard and Angular": [
          "Introduction to the Project",
          "Initializing Angular Project",
          "Installing Angular Material",
          "Creating Topbar Component",
          "Creating Home Page",
          "Creating Trivia Page",
          "Angular Services and HTTP Module",
          "Template Binding of Trivia Page",
          "Logic for Answering the Questions",
          "Logic for Timer",
          "Sending Scores to JSON Server Part 1",
          "Sending Scores to JSON Server Part 2",
          "Displaying Data on the Leaderboard",
          "Download The Project Files"
        ],
        "Project-6: Blogging Platform with RichText Editor in Angular": [
          "Introduction to the Project",
          "Initializing Angular Project",
          "Installing Angular Material",
          "Template of Home Page",
          "Template of Create Blog Page",
          "NgModel in Create Blog",
          "Create Blog Service",
          "Home Page Template Binding",
          "Creating View Blog Component",
          "Template Binding of View Blog Component",
          "Adding Comment Logic",
          "Download The Project Files"
        ],
        "Project-7: MMDb: IMDb Clone with Angular and TheMoviesDB API": [
          "Introduction to the Project - MMDb: IMDb Clone with Angular",
          "Initialising Angular Project",
          "Creating The Topbar Component",
          "Creating The Home Page",
          "Introduction to TMDb API",
          "Angular Services",
          "Template Binding of Home Page",
          "HTTP Call for Search Movies",
          "Writing the Logic for Search Movies",
          "Creating Movie Details Page Part 1",
          "Creating Movie Details Page Part 2",
          "HTTP Call to Fetch Movie Details",
          "Template Binding of Movie Details Page",
          "HTTP Call to Fetch Movie Details",
          "Template Binding of Movie Details Page",
          "Download The Project Files"
        ],
        "Project-8: RecipeLib: Search and Explore Recipes in Angular": [
          "Introduction to the Project",
          "Initialising Angular Project",
          "Creating Home Page Part - 1",
          "Creating Home Page Part - 2",
          "Creating Search Results Page",
          "Linking Home Page and Results Page",
          "Spoonacular API",
          "Angular Services and HTTP Module",
          "Template Binding Results Page",
          "Template of Recipe Details Page",
          "HTTP Call for Getting Recipe Details",
          "Template Binding of Recipe Details Page",
          "Download The Project Files"
        ]
      },
      "requirements": [
        "Basic Knowledge of Angular"
      ],
      "description": "Angular puts the developer experience at the forefront.\nJavaScript is known to introduce some of the most bizarre behavior known to developers. To alleviate headaches Angular provides full support for TypeScript, which offers type safety in our programs.\nTypeScript existed for 4 years before even Angular became a framework, and the creators of Angular recognized the necessity for type safety in large enterprise apps to boost productivity and diminish bugs in production code.\nSo they opted to be one of the earliest adopters in the JavaScript ecosystem.\nIn my view this was the right move. TypeScript has seen widespread adoption and is a favorite among the community. In the most recent State of JavaScript Survey, 93% of responders were satisfied with TypeScript, so it appears Angular made the right call.\nMaintaining a large enterprise application can be a nightmare without a proper setup. Before writing application logic, a strong foundation must be available to allow code reuse and scalability.\nThis is why we use frameworks like Angular.\nAngular introduces a set of features that encourage developers to adopt the best design pattern practices in your app. Some examples are singletons, dependency injection, and factory functions. These are design patterns that we can take advantage of right out of the box.\nAngular is a framework developed by Google. The words \"complacent\" or \"stagnant\" are not the type of words that are associated with a company like Google.\nYou can expect Google to properly maintain its framework with the latest and best practices in mind. In fact, the lead developers have pledged to release major versions every 6 months. It's like having Christmas twice a year!",
      "target_audience": [
        "Beginners in Angular"
      ]
    },
    {
      "title": "NestJs - Build Modern APIs in NestJs with Unit Testing",
      "url": "https://www.udemy.com/course/nestjs-build-modern-apis-in-nestjs-with-mongodb-postgres/",
      "bio": "Build Modern API with Nest Js with MongoDB & Postgres, including Authentication, Typescript, TypeORM, Unit & e2e testing",
      "objectives": [
        "Develop and full featured API with NestJs",
        "Best practices of Authentication & Authorization",
        "Data Validation & Error Handling using Pipes",
        "How to implement pagination & search",
        "How to generate coordinates of address with GeoCoder",
        "Uploading images on AWS S3 Bucket",
        "How to use Passport for authentication",
        "How to Protect Routes from unauthorized user",
        "How to build a custom decorator",
        "How to build a custom guard",
        "Using TypeORM for database interaction",
        "Persisting data with databases like MongoDB & Postgres",
        "Understand Database relationships",
        "Writing Unit Tests for complete API",
        "Writing e2e Tests",
        "How to deploy API on Heroku"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "DEMO of API",
          "What is Nest.js & Why we need it?",
          "How to Follow the Course & Code?"
        ],
        "Setting up Environment": [
          "Installing all required tools",
          "Install MongoDB on MacOS",
          "Install MongoDB on Windows"
        ],
        "Setup / Overview of Nest.js": [
          "Installing Nest CLI & Creating app",
          "Understanding the folder structure",
          "Nest.js Modules",
          "Nest.js Controllers",
          "Nest.js Service & Providers",
          "Connecting to MongoDB with mongoose"
        ],
        "Let’s start Restaurant API with Nest": [
          "Creating Restaurant Schema",
          "Get all Restaurants",
          "Create a new Restaurant",
          "What is DTO?",
          "Creating a Restaurant DTO",
          "Get Restaurant by ID",
          "Update Restaurant by ID",
          "Delete Restaurant"
        ],
        "Adding Search & Pagination to API": [
          "Adding Search",
          "Adding Pagination"
        ],
        "Validation, Pipes & Error Handling": [
          "What are Pipes?",
          "Using Validation Pipe Globally",
          "Adding Validation Rules in Update DTO",
          "Invalid Mongoose ID Error"
        ],
        "Generating Restaurant Location": [
          "What is GeoCoder",
          "Generating Coordinates & Address",
          "Saving Location in Restaurants"
        ],
        "Upload Restaurant Images to AWS S3": [
          "Create Bucket on S3",
          "Getting files through File Intercepter",
          "Uploading images to S3",
          "Saving Images in Restaurant",
          "Delete Restaurant Images"
        ],
        "Authentication with Passport JWT": [
          "Generating Auth Module",
          "Creating User Schema",
          "Sign up DTO with Validators",
          "User Sign up",
          "Hash user password while Sign up",
          "Handle Duplicate Email Error",
          "Login User",
          "Setting Up JWT & Passport",
          "Sign JWT token on Login"
        ],
        "Protecting Routes with Guards & Custom Decorators": [
          "Setting Up JWT Strategy",
          "Using AuthGuard to Protect Routes",
          "Current User Decorator",
          "Saving Current User in Restaurant",
          "Creating User Roles Guard",
          "Roles Decorator",
          "Authorize Restaurant Ownership"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript, TypeScript, NodeJs",
        "Basic knowledge of MongoDB, Postgres",
        "Knowledge of API's is plus, but not required"
      ],
      "description": "If you want to build a powerful API in the modern backend framework Nest Js or if you want to learn how to unit test API then welcome to this Ultimate NestJs course.\n\n\nNest Js is a Node.js framework for building efficient, reliable, and scalable Node.js server-side applications. NestJs is a complete framework that will help us to perform everything whether it is authentication or testing a complete API, NestJs provides us with everything that we want. The architecture of NestJs is unmatchable.\n\n\nThroughout this course, we will use TypeScript which will level up our development. Typescript will help us to write neat and clean code. We will be able to find our errors and bug right on the spot.\n\n\nNestJs provides us with a lot of flexibility by providing a lot of modules, when it comes to testing, NestJs provides us with Testing Module that makes Unit testing fun. Connecting to a database whether it is Relational (SQL, POSTGRES, etc) or NoSQL (MongoDB) is just fun and can be done in one line of code.\n\n\nReally NestJs has made life a lot easier when it comes to building backend applications. The API built with this amazing framework is highly testable, scalable, loosely coupled, and easily maintainable applications.\n\n\n===   Super Fiendly Support   ===\nIf you ever get stuck in any problem, I'm here to unstuck you. I always respond as fast as I can. Because I know there’s nothing worse than getting stuck into problems, especially programming problems. So, I am always here to support you.\n\n\nBelow are some points that we will cover in this course:\n\n\nWe will discuss what is NestJs and its CLI\nBuild a complete restaurant API\nUse MongoDB to store our data\nAdd Pagination and Search in our API\nBest practices for Error handling & Validations with PIPES\nGenerate the coordinates of the restaurant address\nUploading multiple images of the restaurant to AWS S3 Bucket\nAdd Jwt Authentication with Passport\nAuthorization of Roles with Guards\nBuild a CRUD Library API with Postgres & TypeORM\nUnit Testing of complete API\ne2e Testing to API\nDeploying API on Heroku\n\n\n\n\nInterested in learning this amazing NestJs framework for building your next backend API? Then Enroll now and I will see you in the course. Happy Coding!!!",
      "target_audience": [
        "Anyone who want to learn how to build API in NestJs",
        "Anyone with basic knowledge of Javascript & Typescript, wants to build API",
        "Anyone who want to learn backend development"
      ]
    },
    {
      "title": "MSK TypeScript Bootcamp",
      "url": "https://www.udemy.com/course/msk-typescript-bootcamp-level-1/",
      "bio": "Get started with TypeScript and start using Type annotations in your projects",
      "objectives": [
        "Learn about the problem with JavaScript",
        "Learn the advantages of using TypeScript",
        "Deep dive into primitive & special types",
        "Learn about literal, array & object types",
        "Master union, interface & tuple types",
        "Discover function types & type aliases",
        "Understand type assertions & inference",
        "Hands-on coding with lab experiments.",
        "Download all code snippets & resources",
        "A certificate of completion"
      ],
      "course_content": {
        "Bootcamp Introduction & Guidelines": [
          "Benefits of using TypeScript in your project",
          "18 benefits of adding TypeScript to your project",
          "Bootcamp instructions & guidelines",
          "Pre requisites for the bootcamp",
          "Creating your personal library of code snippets",
          "The \"Car\", \"Bike\" and \"Plane\" examples",
          "Join our web dev community!",
          "Let's begin the TS journey",
          "The Full Interview Kit"
        ],
        "The Problem with JavaScript": [
          "Introduction",
          "What's wrong with JavaScript ?",
          "Lab Experiment: JavaScript Runtime Querk!"
        ],
        "Local machine setup": [
          "Introduction",
          "Bootstrap project setup",
          "VS Code extensions",
          "The TypeScript online playground",
          "Exploring TS Compiler options / flags",
          "Lab Experiment: TS Compilation",
          "Lab Experiment: Stopping TS Compilation",
          "TypeScript & it's Compiler Quiz"
        ],
        "Primitive Type annotations": [
          "Introduction",
          "Primitive Types Walkthrough",
          "Array Type",
          "Union Types",
          "Type aliases",
          "Lab Experiment: Annotating basic types",
          "The \"Function\" Type",
          "Interfaces",
          "Object types",
          "Lab Experiment: Interface type and object"
        ],
        "Interface VS Type alias": [
          "Introduction",
          "Renaming primitives",
          "Field addition",
          "Extensibility"
        ],
        "Special Type annotations": [
          "Introduction",
          "Special Type | \"any\"",
          "Special Type | \"unknown\"",
          "Special Type | \"void\"",
          "Special Type | \"never\""
        ],
        "Dive into Literal Types": [
          "Introduction",
          "Literal Types walkthrough",
          "Literal Inference",
          "Example | Union combination",
          "Example | Non literal combination"
        ],
        "Understanding Tuple types": [
          "Introduction",
          "Annotating Tuple types",
          "Using tuple for API responses",
          "Tuples with Interfaces",
          "Specifying optional properties",
          "Read only tuples",
          "Array assertion inference",
          "Rest parameter elements",
          "Lab Experiment: Tuple annotation"
        ],
        "Few Important concepts": [
          "Introduction",
          "Type assertions",
          "Non null assertion",
          "Impossible coersions"
        ],
        "The Finish Line": [
          "Congratulations! You did it."
        ]
      },
      "requirements": [
        "No prior knowledge of TypeScripe is needed",
        "Very basic JavaScript knowledge is good to have",
        "Interest to explore TypeScript and its features",
        "You will learn everything from scratch"
      ],
      "description": "TypeScript is a superset of JavaScript developed at Microsoft by Anders Hejlsberg ( designer of C# ) in the year 2010 and open-sourced in 2012. TypeScript adds a handful of new features to JavaScript and takes it to the next level in modern web development.\n\n\nThere are a lot of advantages if you add TypeScript to your JavaScript-based projects like:\nYou can catch bugs errors during the development phase itself rather than runtime.\nDebugging is much easier & you will have bug-free production code and feel safe.\nWith static type-checking, it becomes easier for you to spot errors and edge cases.\nSaves a lot of developer's time in fixing unidentifiable runtime bugs.\nTypeScript adds advanced features like generics, modules & namespaces.\nYour projects will be easily understandable by other developers.\nYour project will have excellent developer experience ( DX ) and team velocity.\nHelps you write less code than JavaScript & improves readability.\nSource code documentation will be much better.\nTypeScript code is easier to refactor and reliable. Hence easier to maintain.\nSince JavaScript is a subset of TypeScript, you can use all JavaScript libraries.\nYou can incrementally upgrade your JavaScript files on the go.\nTypeScript is a powerful tool for large applications\n\n\nAfter completing MSK TypeScript Bootcamp, you will be able to:\nUnderstand the problem with JavaScript for large scale applications.\nAdd TypeScript to your JavaScript projects with the compiler configuration.\nInclude TypeScript and start adding type annotations in your JavaScript projects.\nFully understand all the types supported by TypeScript in depth.\nFeel confident in your front-end interview and talk about TypeScript.\nDownload all the code snippets and create your personal reference notes.\n\n\nThis Bootcamp features hands-on coding lab experiments which are both fun and useful. They will help you understand concepts and play around with TypeScript features. You will have the opportunity to keep those examples for your reference as we advance ourselves to learn more TypeScript features in this series of upcoming Bootcamps.\n\n\nYour journey to become a master of TypeScript begins here.\nLet's get started...",
      "target_audience": [
        "Anyone interested to learn TypeScript and upskill themselves in career.",
        "Anyone preparing for frontend interviews where TypeScript is needed.",
        "Beginner JavaScript developers who want to upgrade to TypeScript.",
        "No paid softwares are needed in this bootcamp. Editor and extensions are free.",
        "A computer with access to the internet needed ( Mac / Windows or Linux )",
        "I will teach you pretty much everything from scratch. So don't worry."
      ]
    },
    {
      "title": "Shiny for Python Ultimate: Web Development with Python",
      "url": "https://www.udemy.com/course/shiny-for-python-ultimate/",
      "bio": "Learn to Develop Interactive Web Applications with Python, and how to Deploy it for Free",
      "objectives": [
        "learn to develop web projects with Python",
        "deploy your web application via shinylive",
        "deploy your web application via GitHub-Pages",
        "all necessary ingredients like User Interface, widgets"
      ],
      "course_content": {
        "Introduction & Setup": [
          "What is Shiny? (101)",
          "Course Scope (101)",
          "Self Presentation (101)",
          "System Setup (101)",
          "Get Material &Local Environment (Coding)"
        ],
        "Shiny for Python": [
          "High-Level App Structure (101)",
          "Our first app (Coding)",
          "How to run the webserver (Coding)",
          "Layout (101)",
          "Control Widgets (101)",
          "Control Widgets (Coding)",
          "Reactivity (101)",
          "Reactivity (Coding)"
        ],
        "1st App: Most popular languages": [
          "App Overview (101)",
          "Data Preparation (Coding)",
          "Frontend (Coding)",
          "Backend (Coding)"
        ],
        "2nd App: Climate Change": [
          "App Overview (101)",
          "1. App Setup (Coding)",
          "2. Data Preparation (Coding)",
          "3. Frontend: App Setup (Coding)",
          "4. Frontend: Layout with Rows and Columns",
          "5. Frontend: Adding Static Content (Coding)",
          "6. Frontend: Image with a Link (Coding)",
          "7. Frontend: Linking Static Content (Coding)",
          "8. Backend: Adding the world map (Coding)",
          "9. Backend: Map Plotting Function (Coding)",
          "10. Backend: Temperature Plot (Coding)",
          "11. Backend: Implement a Progress Bar (Coding)",
          "12. Backend: Implement Color Map (Coding)"
        ],
        "Deployment": [
          "Deployment Options (101)",
          "shinylive.io and GitHub Gist (101+Coding)",
          "WebAssembly (101)",
          "GitHub Pages (101)",
          "GitHub Pages (Coding)",
          "Posit Connect (101)",
          "Pitfalls"
        ],
        "Additional Information": [
          "Closing Remarks",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "basic Python knowledge"
      ],
      "description": "With Shiny for Python you can create dynamic and interactive web applications using only Python! This comprehensive course is designed specifically for beginners who want to dive into the world of web development using Python as their main tool.\nThe course will cover everything from the basics of web development (covering user input, creating outputs) with the Python package Shiny for Python to advanced topics such as interactive maps or progress bars. You will also learn how to deploy your web applications via different options.\nThroughout the course, you'll work on real-world projects that will give you hands-on experience and help you put your new skills into practice. Whether you're looking to start a new career in web development or simply want to build your own personal projects, this course is the perfect starting point.\nWith expert instructors, small exercises, and practical projects, this online course is the ultimate guide to building web applications with Python. Sign up today and take the first step towards becoming a skilled Python web developer!\n\n\nContent\nUnderstand how to develop a web application with Shiny\nApp Structure\nLayout\nControl Widgets\nReactivity\nDevelop an app on Popular Programming Languages\nfetching user input\ncreate an interactive app\nDevelop an app on Climate Change\nincl. progress bar\ninteractive map\nstatic content like icons\nstyling the app\nadding images\nLearn about different deployment options, e.g.\nshinylive and GitHub Gist\nWebAssembly\nGitHub Pages\nPosit Connect\nshinyapps",
      "target_audience": [
        "Python developers who want to develop web projects"
      ]
    },
    {
      "title": "Learn to Build HTML Responsive Real-world Modern Websites",
      "url": "https://www.udemy.com/course/learn-to-build-html-responsive-real-world-modern-websites/",
      "bio": "Learn to code HTML5 modern and web design by building a professional websites! Publish your website like a Professional",
      "objectives": [
        "Become a modern and confident HTML developer, no prior knowledge needed!",
        "Learn to quickly apply CHatGPT AI skills for your website development",
        "Design and build a stunning real-world project for your portfolio from scratch",
        "A web design framework with easy-to-use rules and guidelines to design eye-catching websites",
        "How to make websites work on every possible mobile device (responsive design)",
        "You will learn quickly prompt engineering skills to make real-world websites",
        "Learn to Publish your website on production servers using FTP app",
        "Learn Using Generative AI tools A Hands On",
        "Participate on GenAI Coding Exercises to test your skills"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction to Getting Started",
          "Course Curriculum",
          "How to get Pre - Requisites",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "Add ChatGPT AI skills for your Course Learning",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course",
          "Learn Using Generative AI tools A Hands On"
        ],
        "HTML Setting up local Environment": [
          "Introduction HTML",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "Overview of a Webpage",
          "Structure of a Full HTML Webpage",
          "First Hello World! Webpage",
          "Summary"
        ],
        "HTML Basic": [
          "Introduction",
          "Heading tags",
          "Paragraph",
          "Formatting Text",
          "List Items Unordered",
          "List Items Ordered",
          "Classes",
          "IDs",
          "Comments",
          "Summary",
          "Prepare List Items"
        ],
        "HTML Intermediate": [
          "Introduction",
          "Images",
          "Forms",
          "Form Actions",
          "Br tag",
          "Marquee",
          "Text area",
          "Tables",
          "Links",
          "Navbar / Menu",
          "HTML Entities",
          "Div tag",
          "Google Maps",
          "Summary"
        ],
        "HTML Advanced": [
          "Introduction",
          "HTML5 Audio",
          "HTML5 Video",
          "Progress Bar",
          "Drag & Drop",
          "Canvas",
          "Iframes",
          "Input Types",
          "Input Attributes",
          "YouTube Video Linking",
          "Creating Responsive Page",
          "Summary"
        ],
        "HTML Expert": [
          "Introduction",
          "Registration Form",
          "Login Form",
          "AboutUs Form",
          "Contact Us Form",
          "Footer Form",
          "Integrate All Together",
          "Coding Exercise",
          "Solution for Coding Exercise",
          "Summary"
        ],
        "Publish Your Website for Live": [
          "Introduction",
          "Installing Free FTP Solution (FileZilla)",
          "Setting Up FTP (File Transfer Protocol)",
          "Publish Website to Hosting Server",
          "Summary"
        ],
        "HTML Website Project": [
          "Introduction",
          "Challenge – HTML 5 Clock Face with Numbers",
          "Project Overview",
          "Conclusion on Project",
          "Summary"
        ]
      },
      "requirements": [
        "No coding or design experience necessary for this course",
        "Any computer works — Windows, Linux or macOS",
        "You don’t need to buy any software — we will use the best free code editor in the world"
      ],
      "description": "Unlock the power of responsive web design with \"Learn to Build HTML Responsive Real-world Modern Websites.\" This hands-on course is designed for beginners who want to learn how to create beautiful, mobile-friendly websites using HTML and modern web design techniques. Whether you're a budding web developer or looking to refresh your skills, this course covers everything you need to build responsive websites that look great on any device.\n\n\nLearn Using Generative AI tools A Hands On lecture to take you AI experience\n\n\nYou’ll start by mastering the basics of HTML, understanding how to structure web pages with elements like headings, paragraphs, links, and images. As you progress, you'll learn how to use modern HTML5 elements and attributes, as well as CSS for styling. The course then dives into the essentials of responsive design, including media queries, flexible grids, and responsive images, to ensure your website adapts seamlessly across different screen sizes.\n\n\nWith practical, real-world projects and challenges, you’ll gain hands-on experience creating and styling websites. You’ll learn how to build navigation menus, forms, and layout structures that function flawlessly on both desktop and mobile. Additionally, you’ll explore best practices for accessibility and performance optimization.\n\n\nBy the end of the course, you’ll be confident in your ability to design and develop responsive, real-world websites. Whether you're creating personal projects, client websites, or launching your web development career, this course provides the skills you need to succeed.\n\n\nJoin today and start building modern, responsive websites with HTML!",
      "target_audience": [
        "Web Designers who want to expand their skill set into HTML5",
        "Students with some knowledge about HTML, who want to create a great website",
        "Complete beginners who want to learn how to build a professional, HTML responsive website",
        "Anyone who wants to learn to build Modern websites",
        "Anyone who wants to apply ChatGPT AI skills on development",
        "Anyone who wants to Become a freelancer on web development"
      ]
    },
    {
      "title": "The Ultimate Node JS Course 2025: Express, MongoDB, REST API",
      "url": "https://www.udemy.com/course/the-ultimate-nodejs-course-2025-express-mongodb-rest-apis/",
      "bio": "Learn to build Fast, Real world & Secure RESTful APIs with Express, MongoDB, Socket, Payment, Deployment & more.",
      "objectives": [
        "Learn NodeJS from absolute scratch",
        "Build real-world REST APIs using Express",
        "Connect backend to MongoDB using Mongoose",
        "Handle user login/signup with JWT Auth",
        "OAuth like Sign-in with Google/Facebook",
        "Add Payment gateways - Paypal & Razorpay",
        "Sending Emails from backend with Amazon SES",
        "Build Real-time chat features using Socket IO",
        "Pagination & Infinite Query for large data",
        "Handling & logging Errors in File & Database",
        "Use Postman to test your APIs",
        "Deploy your backend apps on the internet"
      ],
      "course_content": {
        "Introduction of Node JS": [
          "Course Introduction",
          "What is Node JS?",
          "History of Node JS",
          "How Node JS works?",
          "Installing Node JS",
          "Writing first Node Code",
          "Make VS Code COOL [Optional]",
          "Quiz Number 01",
          "Summary of Section 01"
        ],
        "Node JS Basics - Modules": [
          "What are Modules in Node js?",
          "Creating own module",
          "Accessing Module in other Modules",
          "Exercise - For own module",
          "Using Path Module",
          "Getting Operating System details",
          "File System or fs module",
          "Creating Server using Http Module",
          "How to handle different routes",
          "Summary of Section 02"
        ],
        "Mastering Node Package Manager": [
          "Introduction of NPM",
          "Create Package.json File",
          "Installing Package in Project",
          "Uninstalling Packages",
          "Install Package as Developer Dependency",
          "Outdated Packages & Updating them",
          "Remove unused Packages from Project",
          "Summary of Section 03"
        ],
        "Project 01 - Building REST APIs": [
          "API vs REST API",
          "Planning API List for Project 01",
          "Setup a new Application",
          "Build server using Express.js",
          "Exercise - For Creating Express Server",
          "Creating API for Getting all todos list",
          "Setup the NodeMon globally",
          "Environment Variables [ENV]",
          "Route Parameters & Query Parameters",
          "Get Single Todo by ID",
          "Create POST API for Adding new todo",
          "Validating user Data with Status Code",
          "Sending Status Code",
          "res.send vs res.json",
          "Update single Todo with PUT Request",
          "Exercise - Delete Specific Todo",
          "Summary of Section 04"
        ],
        "Advanced Concepts in Express": [
          "Introduction of Middleware",
          "Creating Custom Middleware",
          "Built-in Middleware",
          "Sharing Static Files from Server",
          "Useful Third-Party middlewares",
          "How to Code according to Environment",
          ".env file and dotenv package",
          "Different Settings for different ENV",
          "Template Engines in Node Application",
          "Cleaning up the Code App Structure",
          "Summary of Section 05"
        ],
        "Advanced JavaScript [Optional]": [
          "Asynchronous vs Synchronous",
          "Callbacks in JavaScript",
          "Solving Problem using Callback",
          "Callback Hell",
          "Promise in JavaScript",
          "Replacing Callbacks with Promises",
          "Async-await in JavaScript",
          "Summary of Section 06"
        ],
        "Introduction of MongoDB": [
          "Why we need Database",
          "Introduction of Database",
          "Installing MongoDB in Windows",
          "Install MongoDB in Mac",
          "Connect MongoDB with Node app",
          "Importance of Schema",
          "Defining Schema for Document",
          "Creating Models",
          "Saving a new Data",
          "Query the data",
          "Comparison Operators in MongoDB",
          "Logical Operators",
          "Regular Expression in MongoDB",
          "Count and estimate document count",
          "Pagination & Infinite Query",
          "Update the Data",
          "Update Operators in MongoDB",
          "Delete the Data",
          "Exercise 01 - Configure MongoDB",
          "Exercise 02 - For Storing Data",
          "Exercise 03 - For Fetching Data",
          "Exercise 04 - Updating & Removing Tasks",
          "Summary of Section 07"
        ],
        "MongoDB Advanced": [
          "Built-in Validators",
          "Custom Validators",
          "Async Validators",
          "Useful SchemaTypes Options",
          "Relationship between models",
          "Hybrid approach for Relationship",
          "Applying Reference Approach",
          "How to extract data from Reference [Populate]",
          "Applying Embed Approach",
          "Applying Hybrid Approach",
          "Indexes in MongoDB",
          "How indexes works in MongoDB",
          "Summary of Section 08"
        ],
        "Project 02 - Start Building Major E-commerce Project": [
          "Introduction of Project 02 & Planning",
          "Creating a new Server",
          "Connecting to Database",
          "Exercise - Creating User Model",
          "Creating the new User",
          "Hashing the Password for security",
          "User input validation using Joi",
          "How authentication works",
          "Generate the JWT token for user",
          "Setting Expiry of Token",
          "Secure the Security key in Environment",
          "Exercise - Create Login route",
          "How to Authenticate User? logged in or not",
          "OAuth in Details",
          "OAuth in Node Application - Sign-in with Google",
          "OAuth with JWT",
          "Sign-in with Facebook using OAuth",
          "Simplifying the Code",
          "Summary of this section"
        ],
        "Creating Product APIs": [
          "Creating the Category Model",
          "Create a new Category API with Image upload",
          "Set file name & filter in multer",
          "Getting all categories API",
          "Sharing Static Images from Server",
          "Exercise - Defining the Products Model",
          "Role Based Authorization",
          "Custom Role Based Authorization",
          "Handling Multiple Images of Products",
          "Create a new Products",
          "Getting all Products Data",
          "Pagination or Infinite Query",
          "Sending Products by Category",
          "Sending Products by Search",
          "Exercise - Getting Single Product Data",
          "Exercise - Deleting the Product",
          "Extra - Searching Product by Title & Description",
          "Summary of this section"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript is helpful (not advanced)",
        "No prior backend or Node.js knowledge required - we'll start from scratch",
        "Willingness to learn and build real projects step by step"
      ],
      "description": "Do you want to become a backend developer or full stack developer using Node JS - which is one of the most in-demand skills in 2025? Then you are at the Right Place.\nSo whether you're a complete beginner to NodeJs or already know some basic concepts of JavaScript then this course will help you go from absolute zero to building fast, scalable backend application using Node.js, Express, MongoDB, JWT, Socket IO and much more.\n\n\nWhat you will Learn from this Course?\nUnderstand how Node.js works under the hood\nLearn Core concepts of Node.js like modules, built-in modules\nBuild powerful REST APIs using Express\nConnect and query MongoDB database with Mongoose\nHandle user authentication using JWT tokens\nOAuth features like Sign-in with google & Facebook\nReset Password by sending emails using Amazon SES\nIntegrate payment gateways (like Paypal & Razorpay both)\nCreate real-time features using Socket IO (one to one chat, group chat)\nDeploy your node apps to Render\n\n\nNow you might ask, Which applications you will create during this course?\nThroughout the course, you will build exciting real-world project backend such as:\nTodo App Backend - For learning basics of Express & CRUD operations of MongoDB\nE-commerce Backend - Add signup/login with JWT and hashing, Add payment integration and order flow [Advanced]\nSocial Media Backend - Reset Password, Followers & Following, Real-Time Chatting using WebSockets [Advanced]\nSome Small Demo Backend - For learning express, mongoDB & mongoose\n\n\nUnlike many courses that only cover theory or basic CRUD apps, this course focuses on project-based learning, real-world scenarios and modern tools.\nYou will build backend apps that include:\nREST APIs used in real-world\nExpress and mongoDB\nJWT-based authentication systems\nPayment gateway integration (Paypal,  Razorpay)\nReal-time chatting features using Socket IO\nAll concepts is explained in simple and easy language. So it will help you even if you are complete beginner.\nAlso I want to specify, we are not going to create frontend in this course. Because it is not the scope of this course. But I will give you some frontend ready code for testing authentication, payment and chat features.\n\n\nSo Who This Course is for? (Is this course for you?)\nBeginners who want to learn NodeJS from scratch\nFrontend developers looking to become full-stack developer\nStudents who are looking for practical backend skills\nAnyone who wants to build & deploy real-world backend applications\nNo prior backend experience is needed - you will learn everything step-by-step.\nEach project is designed to teach a specific skill or tool. So by the end, you will have a full backend portfolio.\n\n\nTools, libraries and technologies you'll master:\nNodeJS\nExpress.js\nMongoDB and Mongoose\nREST API principles\nSocket IO for WebSockets\nJSON Web Tokens (JWT)\nPaypal & Razorpay for payments\nAmazon SES for Emails\nMulter for uploading files\nPostman for API testing\nRender for Deploying Backend Applications\n\n\nThis course follows a project-based, step-by-step approach:\nEvery topic is broken down into beginner-friendly lessons\nVisual diagrams and simple analogies are used throughout\nProjects are built alongside explanations - not after\nThis course is taught in simple English which is making it ideal for learners from non-technical or non-native backgrounds too.\n\n\nOverall, backend development is one of the most valuable and high-paying tech skills today - and NodeJS is at the heart of it.\nSo whether you want to land your first job, build your dream app, or become a full-stack developer, this course is your step-by-step roadmap.\nJoin now and start building real-world & powerful NodeJS apps from scratch :)",
      "target_audience": [
        "Anyone who want to learn backend development with Node.js",
        "Beginners who want to start coding backend from scratch",
        "Frontend developers looking to become full-stack",
        "Students who are looking for practical backend skills",
        "Anyone interested in building projects with Express, MongoDB and Node.js",
        "People who prefer learning in simple and easy language"
      ]
    },
    {
      "title": "Google Home Development: From Beginner to Intermediate",
      "url": "https://www.udemy.com/course/google-home-development-from-beginner-to-intermediate/",
      "bio": "The most comprehensive and complete Google Home course. Build & deploy voice activated applications.",
      "objectives": [
        "Understand and learn about conversational interfaces and agents",
        "Build Google Home Apps with little or zero coding using API ai",
        "Understand the Architecture of a Google Home App",
        "Deploying a Google Home App on the Google Actions Developer Account",
        "Understand and use Node js for building basic Google Home Apps",
        "Create your own APIs with Amazon Web Services",
        "Be able to Build a Word Game with API ai",
        "Be able to Build a Weather App with Yahoo API",
        "Be able to Build a Pokemon Go Simulation with POKE API",
        "Deploy Google Home Apps on cloud platforms such as AWS, Glitch, and API ai"
      ],
      "course_content": {
        "Introduction": [
          "What is Google Home?",
          "Google Home Demonstration",
          "Understanding Google Home Concepts",
          "Practice Problem Set#1",
          "About Node JS in the Course"
        ],
        "Build your first Hello World Application on Google Home": [
          "Introduction to Hello World",
          "Tools needed for this Project",
          "Walkthrough of the Dialogflow Interface",
          "Setting up our Agent and Entities",
          "Creating Intents",
          "Creating our first Integration to Google Actions",
          "Understanding Google Actions",
          "Setting up your physical Google Home Device (Optional)",
          "Testing \"Hello World\" in Google Actions Simulator",
          "Testing \"Hello World\" on the Google Home",
          "Practice Problem Set#2"
        ],
        "Build a MadLib Word Game on Google Home": [
          "Introduction to MadLib Word Game",
          "Setting up our Agent and Entities",
          "Creating Intents",
          "Testing \"MabLib Word Game\" on Simulator and Google Home",
          "Practice Problem Set#3"
        ],
        "Build a Star Wars Character Library on Google Home": [
          "Introduction to Star Wars Character Library",
          "Tools Needed for this Project",
          "Setting up Entities and Intents",
          "Lambda Function: Setting up an IAM on Amazon Web Services",
          "Lambda Function: Create the function for the development",
          "Lambda Function: Star Wars API Development Code",
          "Lambda Function: Test Development Code",
          "Lambda Function: Test Development Code Part#2",
          "AWS: API Creation to read Lambda Function",
          "Dialogflow Testing",
          "Testing \"Star Wars Library\" on Simulator and Google Home",
          "Practice Problem Set#4"
        ],
        "Build a Game of Thrones App on Google Home": [
          "Introduction to Game of Thrones App",
          "Create Entities and Intents",
          "Create Entities and Intents Part#2",
          "Main Development of Game of Thrones App",
          "Testing Development of Game of Thrones",
          "Testing \"Game of Thrones\" on Google Action Simulator",
          "Practice Problem Set#5"
        ],
        "Build your own Weather App for Google Home": [
          "Introduction to the Weather App",
          "Creating Intents",
          "Importing Files into Glitch for Server Development",
          "Weather Development Code",
          "Testing JSON within DialogFlow",
          "Testing \"Weather app\" on Google Action Simulator",
          "Practice Problem Set#6"
        ],
        "Build a Pokemon Go Battle Simulation on Google Home": [
          "Introduction to the Pokemon Go Battle Simulation",
          "AWS: Lambda Setup for Pokemon Go",
          "AWS: How the app will work",
          "AWS: Developing Pokemon Go Part#1",
          "AWS: Developing Pokemon Go - Parsing API Part#2",
          "AWS: Developing Pokemon Go - Finalize responses Part#3",
          "Debugging the Battle Response",
          "Create an Amazon API and testing Dialogflow Fulfillment",
          "Testing \"Pokemon Go Battle\" on Google Action Simulator",
          "Practice Problem Set#7"
        ]
      },
      "requirements": [
        "You should have access to a Chrome or Safari Browser",
        "Main Tools for the Course: Google Home (optional), Dialogflow, AWS Lambda, AWS API Gateway, Glitch",
        "You should have a Gmail account to access Google Actions, Google Home Device is optional.",
        "You should have preliminary or zero understanding with JavaScript",
        "You should have preliminary or zero understanding with NodeJS",
        "You should have preliminary or zero understanding with creating APIs"
      ],
      "description": "Update: Join over 11,000 students in the Techustler Course Series. You don’t want to miss this opportunity in learning practical knowledge in Tech.\nHave you ever wondered how Google Home Apps are made?\nWhy are Google and Amazon investing in voice technology?\nA better question is why haven't you built an Google Home App yet.\nIf you ever wanted to understand the space of Voice Apps or build them yourself, then take my course \"Google Home Development: From Beginner to Intermediate\". I designed it in a practical way so that when you finish the content you can immediately put it into use with your Google Home or online counterpart.\nNow, why should you build Google Home Apps?\nThe biggest industries in technology are surrounded by AI, Bots, and Voice technology. Voice technology I believe will be the new 21st century user interface that will not only understand basic commands, but will be so smart to understand anything you tell it. This is why Amazon and Google have made big bets; with Alexa alone planing to generate close to $11 billion dollars by 2020. Apple's version of Google Home called \"HomePods\" is also coming to the market by the end of 2017. Now, Google's version has come to the market is quickly taking market share from Amazon. Google understands data and knows this is where the market is heading. Now is the best time to learn these skills before the mainstream starts developing applications. We all know the story about apps for the smartphones, this is the same thing.\nThis course contains over 55 lectures and 4 hrs of content. It's designed for beginners to play with new platforms in the voice space. You’ll learn the tools needed to build Google Home Apps, how to create a conversation, be able to access APIs for data driven apps, create APIs through Amazon API Gateway.\nCourse Structure\nThe course follows a familiar structure where in each video I will teach the concepts followed by a challenge or practice question. If your goal is to become a better developer, you should understand node.js, server side development and how to access certain APIs to build better Google Home Apps. The course does not go deep into understanding Node.js but you will understand the architecture and ability to publish apps for Google Home.\nEnvironment Setup\nThis course aims to simulate a live in-person course as much as possible. After you finish each lecture, you should practice and try the solution on your own. You learn the best by practicing and doing.\nProjects\nAt the end of each section, you will be asked to complete a practice problem which you can then share with your network or on the Udemy network.\nTestimonials from other Techustler Courses and the Instructor\n“Great set of videos Nick! I really liked the format of the videos with you in the corner of the screen showing us how to use the website. Cool songs you use at the beginning of each video. It really gives off the vibe that your course is hip and up-to-date with modern times. You do a great job of keeping of with the times. Stay modern, but classy at the same time Nick!” - Penelope\n“Nicholas, very good course on bots! I especially enjoyed that you provided us the opportunity to build bots in a hands-on fashion. Your course sections are very organized and I didn't have to guess to know what I was getting myself into. It is clear you are very knowledgeable as an instructor and have a real connection to your course material. I look forward to taking another course with you!” - Rahul\n\"First of all I want to say thank you for such a nice and informative course. I have enjoyed it from first lesson till last one. Definitely can say one of the best courses for beginners as you learn how to use a lot of useful tools. Nick keep it up!\" - Andriy Herasymenko\n\"Thank you so much Nicholas! The bot course was very informative and helpful for my learning. Keep up the good work!\" - Christine\n\"It was a highly positive experience working alongside Nick at DigaBlue and with the work ethic he has, I am certain that he will produce great results in his future endeavors.\" - Saif\n\"I am glad to take this course. Anyone interested in a great introduction and exercises about chat bots this is a course to start. The instructor take you to every stage of the basic creation on your first Chat Bot and then apply advanced skills.\" - Miguel Rivera\n\"This is a really good intro course to building simple but useful bots. Nick breaks each lesson up thoughtfully and into parts that are easy to follow and implement straight away. With modern api's to make bots from simple to highly sophisticated, this course it great for learning all the moving parts. I feel more confident in designing, building and marketing a bot myself now!\" - Jason\nWhat is the target audience?\nThis course is designed for people with little or no experience in javascript which is needed to make Google Home skills. By the end of the course, you’ll have valuable skills that will help you be creative and resourceful in your pursuit of building products (hopefully in the voice space :)\nNext Steps\nNow it's time to become a Techustler and join me in registering for the course. I can’t wait to have you on board!",
      "target_audience": [
        "First-time Google Home developers wanting to learn required steps involved in creating a Google Home App",
        "Understanding how to use Node JS"
      ]
    },
    {
      "title": "Create a Business or Personal Website with Wordpress",
      "url": "https://www.udemy.com/course/create-a-business-or-personal-website-with-wordpress2018/",
      "bio": "Learn to Build a WordPress Website from Scratch on your Local computer or a Shared Hosting Sever without Code.",
      "objectives": [
        "Create a good website for business | personal",
        "Install Wordpress in Shared hosting environment",
        "Install Wordpress on your local computer",
        "Register a domain name",
        "Get a hosting package",
        "Install and customize a wordpress theme",
        "Install and use plugins",
        "Add image gallery to a website",
        "Add a contact form to a webpage",
        "Add google map of your location to a website",
        "Add a slider with images to your website",
        "Change font properties for your website",
        "Create a logo",
        "Add Video to webpage",
        "Add social media icons to your website",
        "Create web pages"
      ],
      "course_content": {
        "Installing Wordpress": [
          "Introduction",
          "Installing Wordpress locally with Bitnami",
          "How to access wordpress locally",
          "Using Bitnami Manager",
          "Shared Hosting and Domain Name",
          "Getting Domain Name and Hosting",
          "How to change hostgator password",
          "Installing Wordpress on shared hosting",
          "How to login |logout of Wordpress",
          "How to change WordPress Password",
          "Post WordPress installation emails"
        ],
        "Creating a website with no c ode": [
          "The Website we will make",
          "WordPress Theme",
          "Changing Wordpress Theme",
          "WordPress Plugins",
          "How to create a logo",
          "Adding Logo to website",
          "Getting Images for a slider",
          "Adding images to slider",
          "Introduction to Widgets",
          "Exploring Widgets",
          "Adding a gallery to website",
          "Adding social media icons to website",
          "Adding video to webpage",
          "Editing Permalinks",
          "Creating blank webpages",
          "Creating a menu",
          "Adding content to pages part 1",
          "Adding content to pages part 2",
          "Adding contact form and google map",
          "Changing font properties",
          "Adding links",
          "Thank You"
        ]
      },
      "requirements": [
        "You will need to pay for hosting if you want the world to see your website.",
        "You will need to pay for a domain name if you want the world to visit your website.",
        "If you only want to practice on your computer then no need to pay for hosting and domain name.",
        "No Computer Coding required.",
        "No prior experience required."
      ],
      "description": "In  this course you will learn  how to create a good looking and functional website  from scratch using WordPress without knowing how to code. The course gives you the option of creating a website on a remote shared hosting computer that the whole world can visit or on you own computer where you can show  your creativity to friends and family.\nWhy pay hundreds or even thousands of dollars or pounds to a professional web developer to create a  website for you when you can learn to do it yourself in a fun way and maybe even create websites for others yourself.\nThis course is for beginners if you are an expert in WordPress this course is not for you.\nWhat you will learn includes:\nHow to install WordPress on your own computer\nHow to signup for a shared hosting account\nHow to register a domain name\nHow to install WordPress on a shared hosting remote server (powerful computer that is on 24/7)\nHow to install and customise a theme\nHow to install and use plugins\nHow to add a slider with images  to website\nHow to add video to website\nHow to add image gallery to website\nHow to create webpages\nHow to add a functional contact form to website\nHow to add google map to show your location\nHow to create a logo\nHow to add social media icons to website\nHow to change font properties\nBy the end of this course, you will have a good looking WordPress website and would learnt some useful skills along the way.",
      "target_audience": [
        "Anyone who wants to learn to create websites themselves.",
        "Anyone who wants to create websites without learning how to code.",
        "Anyone who wants to learn Wordpress"
      ]
    },
    {
      "title": "Learn Step by Step CakePHP 4 Beginners to Advance Tutorial",
      "url": "https://www.udemy.com/course/learn-cakephp-4x-framework-beginners-to-advance-tutorial-step-by-step/",
      "bio": "Complete Guide for the CakePHP 4 Framework Development Using MySQL Step by Step from scratch",
      "objectives": [
        "Complete Course of CakePHP 4 Framework development from Beginners to Advance level",
        "Understanding complete architecture to handle CakePHP 4 Framework with MySQL.",
        "Course provides the best skill to make Standalone Web Developer for CakePHP Framework.",
        "CakePHP with Easy and Detailed with theory & video sessions",
        "CakePHP Advance topics are well structures to learn in easy way.",
        "CakePHP advance sessions over Cells, Auth, Components, Migrations, Seeders, Bake Console Commands and many more easily explained"
      ],
      "course_content": {},
      "requirements": [
        "Beginner concept of PHP",
        "Little concept about MVC Pattern",
        "MySQL basics to handle database"
      ],
      "description": "We will learn the complete idea to develop a Learn Step by Step CakePHP 4 Beginners to Advance Tutorial. No Experience in CakePHP programming required, you can learn from scratch. Learn practical skills of Development in CakePHP 4 with mysql database driver.\nBegin your journey of CakePHP 4 Development with MySQL database driver here and create a CRUD based Admin Panel from it.\nIf you have just decided to learn Complete CakePHP 4 then you have made the right choice, so take a breath. Development in CakePHP is very easy to learn which means that you will be through the basics and on to writing standard code in a very short time.\nThis course is a step by step guide through the CakePHP 4 development with MySQL programming language.\n\n\nUnderstanding complete architecture to handle CakePHP 4 Framework with MySQL.\nCakePHP Framework development each concept is easily explained in details.\nCovered each topics in well prepared theory with video session.\nVideo lectures are well structured to get complete idea about CakePHP Framework development guide.\nLearn Bake Console commands inside this course with all steps in detailed concept.\nCourse brings the capability to handle CakePHP projects as well as to develop new projects in CakePHP.\nCovered all basics to advance topics in detail.\nBeginners to advance topics with full video sessions.\nCovered advance topics like ORM, Auth, Migrations, Seeders, Bake Console etc in easy way.\nCourse provides the best skill to make Standalone Web Developer for CakePHP Framework.\nAll these topics we'll cover in detail with live coding standards of CakePHP Framework.\nThis course is for every level. For beginners, it will be very perfect to enroll and learn development in very easy steps with detailed concept.",
      "target_audience": [
        "Beginner CakePHP Framework developers",
        "PHP Framework lovers",
        "CakePHP Beginners/Expert level student curious to learn web development"
      ]
    },
    {
      "title": "Learn Servlets and JSP: Basics in a few hours",
      "url": "https://www.udemy.com/course/learn-servlets-basics-in-a-few-hours/",
      "bio": "A practical approach to learning Servlet and JSP concepts",
      "objectives": [
        "21,000+ students enrolled in this course.",
        "Over 7 hours of engaging content covering both Servlets and JSPs",
        "Course meant for beginners and has a lot to offer to the experienced as well",
        "Master Servlets(deep dive) in just a few hours. Definitely worth the time invested.",
        "Interactive course with enjoyable Lab Practicals and Quizes to do for you",
        "How to use a Servlet",
        "Lifecycle of a servlet( and relation with Tomcat container)",
        "Session Management Concepts",
        "Advanced concepts like Filters",
        "Attributes and Listeners"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Core Java",
        "Elementary HTML"
      ],
      "description": "Learn Servlets in 3-4 hours.\nLearn JSPs in a short time\nFocus on only the fundamentals (usually asked in interviews).\nApproach is more on practicals and lab sessions (theory is there to understand concepts).\nThis course is ideal for beginners (students and less experienced professionals) as well as experienced ones.\nAsk any queries related to course on the forum and get answered asap.\nLearn HTTP concepts like Server and Client, methods like GET and POST.\nLearn concepts like Servlet Lifecycle , Servlet Container.\nKnow HttpServlet (which makes your java program a servlet)\nLearn Servlet Api fundamentals like HttpRequest, HttpResponse , HttpConfig and HttpContext.\nLearn all Elements of JSPs (including Scriptlet, Directives, Expression, Declaration, EL and Action tags)\nCourse apt for students as well as professionals.\nCourse apt for students/professionals who want to get OCWCD (Oracle Certified Web Component Developer).\nArrived and Uploaded : Advanced concepts in Servlets like Session Management and Http Session.\nArrived and Uploaded : Understanding Listeners and their different types.\nArrived and Uploaded :  Understanding Filters and their pre/post processing capabilities.\nComing soon : Advanced concepts in Servlets like Session Management and Http Session.\nComing soon : Understanding Listeners and their different types.\nComing soon : Understanding Filters and their pre/post processing capabilities.Coming soon : Advanced concepts in Servlets like Session Management and Http Session.\nComing soon : Understanding Listeners and their different types.\nComing soon : Understanding Filters and their pre/post processing capabilities.\nComing soon : Advanced concepts in Servlets like Session Management and Http Session.\nComing soon : Understanding Listeners and their different types.\nComing soon : Understanding Filters and their pre/post processing capabilities.\nComing soon : Advanced concepts in Servlets like Session Management and Http Session.\nComing soon : Understanding Listeners and their different types.\nComing soon : Understanding Filters and their pre/post processing capabilities.",
      "target_audience": [
        "Beginner students who want to create enterprise web applications.",
        "Programmers with little experience in developing J2EE/JEE applications",
        "Experienced Java professionals"
      ]
    },
    {
      "title": "React Node SEO Website With Contact Form for Beginners",
      "url": "https://www.udemy.com/course/react-node-cloudinary-sendgrid/",
      "bio": "Build a Local Business site with multiple pages and contact form with images upload. Extremely fast with SSR for SEO.",
      "objectives": [
        "Learn to build extremely fast websites using React with NodeJs",
        "Learn images upload with Cloudinary",
        "Learn how to send emails using Sendgrid",
        "Learn to make static pages of your React website SEO friendly",
        "Learn to deploy Node Js API to heroku",
        "Learn to deploy react app to heroku",
        "Easily build a fully functioning website in under 3 hours"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript"
      ],
      "description": "Building real website using react node should not be hard. In this course you will learn to build fullstack react node website with SEO and contact form, a perfect website for local business or any portfolio site.\nYou will also learn how to use npm libraries like cloudinary and sendgrid to build real world project. Even though this course is short, you will get a taste of full stack javascript with node express in the backend api and react in the frontend.\n\n\nUPDATE:\nNew section added - Deploying Node Js API and React App to Heroku\nDo you want to Build Extremely Fast Website with React and Node that is mostly suitable for Local Businesses.\nDo you want to Build a Website where user can have a Contact/Feedback Form?\nDo you want to Build a Website where users can Upload Single/Multiple Images?\nDo you want to Build a Website with Multiple Pages?\nDo you want to Build a Website with Static Content?\nDo you want to Build a ReactJs powered Website that is also SEO friendly?\nDo you want to use Cloudinary for storing images in the cloud?\nDo you want to use Sendgrid for sending emails?\nDo you want to build a Website that is easy to build and style using Bootstrap4?\nThen this is a perfect course for you.\nLearn to Build a fully functioning, lightning fast, SEO friendly React NodeJs Powered Website in under 3 hours.",
      "target_audience": [
        "Anyone looking to build a fully functioning, extremely fast React websites with NodeJs",
        "Anyone want to learn how to use Cloudinary for uploading single or multiple images",
        "Anyone want to learn how to use Sendgrid for sending Emails",
        "Anyone looking forward to get started building web apps with React and NodeJs",
        "Anyone looking to build high performance SEO friendly websites mostly suitable for Local Business"
      ]
    },
    {
      "title": "Learning Firebase",
      "url": "https://www.udemy.com/course/learning-firebase/",
      "bio": "Harness the power of Firebase to build interactive web applications faster than you ever imagined",
      "objectives": [
        "Explore the Firebase administrative dashboard and dive into the development of a real-time link sharing app",
        "Add user accounts to your Firebase app and grant access to them with ease",
        "Grasp the different ways to structure your Firebase data to be scalable and performant",
        "Add validation and permission logic to your app and make it secure using the Firebase Security and Rules editor",
        "Make your app more real-time by utilizing Firebase’s latency and presence mechanisms",
        "Sort, query, limit, and present the data in your Firebase app in a systematic way",
        "Use the Firebase command line tools to configure and deploy your application for wider reachability"
      ],
      "course_content": {},
      "requirements": [
        "If you have a basic understanding of jQuery and web browser developer tools, you’re good to go!",
        "The video course is organized in a way that ensures that the viewer can get the satisfaction of applying what they learn immediately while catching on practical and useful techniques for building robust Firebase applications. Each video will have a heavy emphasis on trying code out in a generic way using the browser’s developer tools console and applying it in a specific way to build an actual application."
      ],
      "description": "As the web evolves, more and more complexity is moving to the front-end. A new trend called no-backend seeks to shy away from the traditional server-side web development in favor of utilizing cloud-based backend technologies like Firebase, allowing developers to focus on important business logic rather than boilerplate backend code.\nThe web moves fast but with Firebase you can move faster by unlocking the power of real-time communication without the burden of server-side development. It will have you questioning everything you've been told about what web development is supposed to be and unlock a productivity gain you only get a few times in your career.\nLearning Firebase will teach you how to develop fully featured real-time applications using Firebase in the friendliest and most intuitive way possible, by walking through examples using the Firebase dashboard and API.\nFrom the word go you will start to craft a sophisticated real-time link sharing application as a means of applying Firebase concepts exactly as they would be for any other viable application. You will be introduced to the amazing real-time data browser, which you will use extensively throughout the course, as you go hands on with the most important features of Firebase. As you move ahead you'll learn how to create, read, update, and delete data. You'll also become familiar with adding and managing user accounts, securing your data, and unlocking its full potential. You'll apply the knowledge gained to your own application to solidify the concepts and be inspired to explore topics beyond the scope of this course.\nBy the end of the course, you will have created a full-blown real-time app and be rest assured that it will be the first of many to come!\nAbout The Author\nMark Nutter is a Minneapolis-based software engineer and the father of two lovely girls. He has been developing software for the web for 10 years and has extensive experience with single-page frontend JavaScript development, having launched and maintained countless heavily trafficked JavaScript applications for his clients, employers, and his own start-up companies. He authored an Angular wrapper for Firebase and has given popular talks about the productivity boost enjoyed by combining Firebase with modern JavaScript frameworks. He is always looking for ways to combine new technologies to accelerate the development of cool and useful software.",
      "target_audience": [
        "This video course is for anyone with basic JavaScript, HTML, and CSS experience who wishes to learn how to add real-time functionality to their apps with Firebase."
      ]
    },
    {
      "title": "WordPress Landing Page Design (from Basic To Advanced)",
      "url": "https://www.udemy.com/course/wordpress-landing-page-design/",
      "bio": "Learn How To Create An Effective Landing Page For High Conversion Using WordPress!",
      "objectives": [
        "Create basic landing page (aka squeeze page) using free plugin.",
        "Create advanced landing page with high conversion rate."
      ],
      "course_content": {},
      "requirements": [
        "You need to have a wordpress website.",
        "You need to know how to login to your wordpress website."
      ],
      "description": "This course is specially designed by KC Tan who is a WordPress Instructor for the past 8 years. An effective landing page can help to build your subscribers list and also sell your products. If you do not want to invest money in monthly subscription software like leadpages or instapages, then WordPress is the ideal solution for you to design your landing page!\n\nThe highlights of this course covers:\n- What you must have on an effective landing page.\n- Which WordPress plugin to use for landing page design.\n- How to craft an effective headline.\n- How to create powerful call to actions!\n- Step by step to create your first basic landing page using wordpress.\n- Step by step to create your first advanced landing page using wordpress.\n- Learn what are the top three channels to drive traffic to your new landing page!\n\n\nONE-TIME ENROLLMENT FOR LIFETIME LEARNING!\nThis course will be regularly updated with fresh content to bring you the most up-to-date knowledge and information.\nOnce you are enrolled as a student, you will receive all future updates and new content additions automatically at no extra cost.\nYes! You get lifetime updates – and it's free. That's lots of real money saved!\nIf you are ready, just click on the \"Add to Cart/Buy Now\" button on this page and I will see you inside!",
      "target_audience": [
        "Anyone who wants to create a landing page using wordpress.",
        "Anyone who wants to get subscribers to their mailing list."
      ]
    },
    {
      "title": "Joomla 3 Template Design",
      "url": "https://www.udemy.com/course/joomla-3-template-design/",
      "bio": "Our Joomla 3 template class shows you how to use Joomla and the Bootstrap framework to create beautiful designs.",
      "objectives": [
        "By the end of the class, you'll be able to create your own Joomla 3 template using Boostrap"
      ],
      "course_content": {
        "Introduction": [
          "Overview",
          "Introduction to the Course",
          "What You'll Need for this Course (PC)",
          "What You'll Need for this Course (Mac)"
        ],
        "Responsive": [
          "Thinking Responsively",
          "Introduction to Bootstrap"
        ],
        "Setup": [
          "Setting up Bootstrap",
          "Creating the index.html",
          "Using Web Development Tools",
          "Adding Layout to the index.html",
          "Adding Site Content For Testing",
          "Adding CSS to the Design"
        ],
        "Menus": [
          "The Horizontal Menu",
          "The Sub-Menu",
          "Making the Menus Responsive",
          "The Vertical Menu"
        ],
        "Content": [
          "Tabbed Content",
          "Buttons",
          "Typography",
          "Icons",
          "The Carousel",
          "Thumbnails",
          "Tables"
        ],
        "Template": [
          "The index.php file Part 1",
          "The index.php file Part 2",
          "The templatedetails.xml File",
          "Creating the Template Installation Package",
          "Installing and Configuring the Template"
        ],
        "Modules": [
          "Adding the Joomla Menu",
          "Creating Conditional Module Positions",
          "Creating Collapsing Module Positions",
          "Using Module Class Suffixes"
        ],
        "LESS": [
          "Understanding Media Queries",
          "Overview of LESS",
          "Using LESS",
          "Crunch Compile LESS"
        ],
        "Conclusion": [
          "Template Parameters Part 1",
          "Template Parameters Part 2",
          "Template Overrides Part 1",
          "Template Overrides Part 2",
          "Favicon and Finish!"
        ]
      },
      "requirements": [
        "You must have a basic understanding of Joomla and be comfortable with the Joomla administrator before taking this class. Take our Joomla 3 Beginner class if you don't feel ready to create your own template: https://www.udemy.com/joomla-3/"
      ],
      "description": "Our Joomla 3 template class shows you how to use Joomla and the Bootstrap framework to create beautiful designs.\nCreating a fantastic look and feel for your Joomla site is pretty important. You can buy templates, or even download and use free ones. However, if you really want a unique look, you need to create your own template.\nThis class is split into two parts. In the first part, we have over 20 videos that introduce you to Bootstrap. In the second part, we show you to apply your Bootstrap design to Joomla, using advanced features such as LESS and media queries.",
      "target_audience": [
        "This class is for people who want to be able to customize Joomla templates or create their own from scratch."
      ]
    },
    {
      "title": "Projects in Django and Python",
      "url": "https://www.udemy.com/course/projects-in-django-and-python/",
      "bio": "Learn Web Programming in Django and Python Building Projects and Websites",
      "objectives": [
        "Master Python Syntax and Concepts",
        "Master DJnago and web programming concepts",
        "Create Web Applications using Python and Django"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Enviroment Setup"
        ],
        "Simple Blog": [
          "Simple Blog - Project introduction",
          "Simple Blog - Views",
          "Simple Blog - Adding HTML",
          "Simple Blog - Final Wrap Up"
        ],
        "Simple Store - Building an E commerce site in Django": [
          "Simple Store Project Introduction",
          "Simple Store - Creating the Views",
          "Simple Store - HTML",
          "Simple Store Adding features",
          "Simple Store - Implement Checkout",
          "Simple Store Project Wrapup"
        ],
        "Simple Survey Site": [
          "Simple Survey Project Introduction",
          "Simple Survey Data Structure",
          "Simple Survey HTML",
          "Simple Survey Extended Views",
          "Simple Survey - Building the Admin panel",
          "Simple Survey - Adding more views to panel",
          "Simple Survey Final Wrap Up"
        ],
        "Message Board": [
          "Message Board - Introduction to project",
          "Message Board Adding Templates",
          "Message Board - Adding More features",
          "Message Board Hooking Up the Views",
          "Message Board Deleting and Updating messages",
          "Message Board Project Wrap"
        ],
        "Image Share": [
          "Image Share - Building an Image Sharing Site",
          "Image Share Project Wrap Up"
        ],
        "Summary": [
          "Course Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Student should know basic Python Syntax",
        "Student should know HTML",
        "Basic knowledge of Web Programming"
      ],
      "description": "Python is arguably the easiest language to start real programming and Django is the most popular web framework for Python. Together they form a deadly combination which helps you build smart web applications quickly and elegantly. Its ease of use and quick development turnaround has made these technologies a darling of Silicon Valley Entrepreneurs.\nOur content team has weaved together a course which will not only help you master Python and Django concepts but will add real world practical expertise to your knowledge. You will learn the mechanism and tricks to get your ideas to life while working on diverse projects such as E commerce sites , Message Boards, Image Gallery Site, Survey Site and Blogging App.\nOur course is one of its kind and its completely unique offering is aimed towards working professionals and beginners alike. So get started and have fun learning these amazing technologies.",
      "target_audience": [
        "Students who want to learn both Python and Django will find the course extremly useful",
        "Python developers who want to gets started on Web Programming",
        "Web Developers who want to use python in their projects"
      ]
    },
    {
      "title": "How to create HTML Forms",
      "url": "https://www.udemy.com/course/how-to-create-html-forms/",
      "bio": "Learn how to create forms using HTML common HTML input tags and source code included",
      "objectives": [
        "create HTML forms from scratch",
        "add new HTML5 attributes and types",
        "Make HTML web forms for your website"
      ],
      "course_content": {},
      "requirements": [
        "Desire to learn",
        "computer access"
      ],
      "description": "A webform, web form or HTML form on a web page allows a user to enter data and interact with the website.  Its an essential way to send data to a server for processing.\nHTML forms are everywhere, over 99% of websites use HTML elements within their code.\nWeb users can fill out the forms using checkboxes, radio buttons, or text fields.\nSource Code is included - create your own HTML Forms with HTML5 Inputs\nBasics of input types for forms\nHTML tags and how to write attributes to customize form inputs\nHTML email and text tags whats new with HTML5\nCourse covers how to create a simple HTML form with input type and new HTML5 Input types that you can use to create HTML Forms.\nThis course is designed to help you better understand the different elements that are used to create forms.   By the end of the course you will have the knowledge to create HTML forms.\nSource Code is included\nStep by Step learning\nregular updates\nInstructor with over 15 years of real world web development experience.\nNew HTML5 Form types\nhow to add attributes\nI am here to help you learn to web forms and ready to answer any questions you may have.\n\nWant to know more, what are you waiting for take the first step. Join now to start learning  to build your own website forms today.",
      "target_audience": [
        "Anyone who wants to create websites",
        "web developers"
      ]
    },
    {
      "title": "Full Stack Web Development Megacourse: Beginner to Expert",
      "url": "https://www.udemy.com/course/full-stack-web-development-megacourse-beginner-to-expert/",
      "bio": "Master Web Development from Scratch - Front-End, Back-End, Databases, and Real-World Projects!",
      "objectives": [
        "Fundamental concepts of HTML, CSS, SQL, and Python to advanced full-stack web development techniques.",
        "Hands-on experience with front-end development using HTML and CSS frameworks.",
        "Mastery of back-end development with SQL and Python, including database management.",
        "Best practices for debugging, optimizing, and deploying web applications.",
        "Building dynamic user interfaces and single-page applications.",
        "Using Flask for back-end development and creating robust RESTful APIs.",
        "Implementing secure authentication and session management.",
        "Practical projects to reinforce your learning and build your portfolio.",
        "Techniques for managing and manipulating data with NumPy and Pandas.",
        "Approaches to developing scalable and maintainable code using object-oriented programming principles."
      ],
      "course_content": {
        "Welcome": [
          "Introduction"
        ],
        "HTML/CSS Course": [
          "Welcome to the Course"
        ],
        "HTML": [
          "Course Overview",
          "Course Tools",
          "Structure of HTML Document",
          "Start Sloth Site",
          "Links",
          "Images",
          "Create Header",
          "Block vs Inline Elements (Divs & Spans)",
          "Create Sloths Section and Footer",
          "Create Contact Page",
          "Forms",
          "Create Form in Contact Page",
          "Tables",
          "Create Table in Contact Page"
        ],
        "CSS": [
          "CSS Intro",
          "Classes and IDs",
          "Box Model",
          "Flexbox",
          "Fonts",
          "Style Logo and Title Text",
          "Style Navbar",
          "Style Banner and Sloths",
          "Style Footer",
          "Prepare Contact Page For Styling",
          "Style Form on Contact Page",
          "Style Table on Contact Page"
        ],
        "Introduction to CSS Advanced": [
          "Introduction to the Course"
        ],
        "CSS Layouts": [
          "Normal Flow Pt. 1",
          "Normal Flow Pt. 2",
          "Normal Flow Pt. 3",
          "Normal Flow Pt. 4",
          "Floats",
          "Positioning Pt. 1",
          "Positioning Pt. 2",
          "Positioning Pt. 3",
          "Multiple- Column Layout Pt. 1",
          "Multiple- Column Layout Pt. 2",
          "Media Queries Pt. 1",
          "Media Queries Pt. 2",
          "Project: Putting Layouts into Practice Pt. 1",
          "Project: Putting Layouts into Practice Pt. 2",
          "Project: Putting Layouts into Practice Pt. 3",
          "Project: Side by Side Boxes Pt. 1",
          "Project: Side by Side Boxes Pt. 2",
          "Project: Product Thumbs Pt. 1",
          "Project: Product Thumbs Pt. 2",
          "Project: Thumbnail Hovers",
          "Project: Modals",
          "Project: Create Thumbs",
          "Project: Contacts"
        ],
        "Flexbox": [
          "Properties and Concepts Pt. 1",
          "Properties and Concepts Pt. 2",
          "Flexbox Layouts: Froggy",
          "Flexbox Alignment: Froggy",
          "Project: Putting Flexbox into Practice Pt. 1",
          "Project: Putting Flexbox into Practice Pt. 2",
          "Project: Putting Flexbox into Practice Pt. 3",
          "Project: Putting Flexbox into Practice Pt. 4"
        ],
        "Grids": [
          "Properties and Concepts Pt. 1",
          "Properties and Concepts Pt. 2",
          "Grid Boxes",
          "Media Queries and Grid Boxes",
          "Grid Layouts: Advanced",
          "Grid Layouts: Masonry Grid Pt. 1",
          "Grid Layouts: Masonry Grid Pt. 2",
          "Holy Grail",
          "Project: Putting Grid into Practice Pt. 1",
          "Project: Putting Grid into Practice Pt. 2",
          "Project: Putting Grid into Practice Pt. 3",
          "Project: Putting Grid into Practice Pt. 4",
          "Project: Putting Grid into Practice Pt. 5",
          "Project: Putting Grid into Practice Pt. 6"
        ],
        "Bootstrap": [
          "Introduction to Bootstrap",
          "Bootstrap Basics Pt. 1",
          "Bootstrap Basics Pt. 2",
          "Bootstrap Basics Pt. 3",
          "Working with Columns",
          "Components",
          "Project: Putting Bootstrap into Practice Pt. 1",
          "Project: Putting Bootstrap into Practice Pt. 2",
          "Project: Putting Bootstrap into Practice Pt. 3",
          "Project: Putting Bootstrap into Practice Pt. 4"
        ],
        "Further Study: SASS": [
          "Introduction to SASS",
          "Using SASS and Compilers: Visual Studio Code",
          "Using SASS and Compilers: Scout",
          "SASS Styles",
          "SASS Styles: Variables",
          "SASS Styles: Nesting",
          "SASS Styles: Mixing",
          "SASS Styles: Comments",
          "Project: Putting Everything into Practice Pt. 1",
          "Project: Putting Everything into Practice Pt. 2",
          "Project: Putting Everything into Practice Pt. 3",
          "Project: Putting Everything into Practice Pt. 4",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic understanding of computer operations.",
        "Curiosity and enthusiasm for web development.",
        "No prior programming experience required."
      ],
      "description": "Learn full stack web development!\nDevelop like a pro!\n\n\nIn today's digital age, web development skills are indispensable. This comprehensive Full Stack Megacourse is designed to take you from a beginner to an expert in web development. Covering everything from the basics of HTML and CSS to advanced SQL and Python programming, this course is your gateway to mastering full-stack web development.\nBy the end of this course, you'll have an understanding of front-end and back-end development, preparing you to create dynamic and responsive web applications. You'll be proficient in using modern tools and frameworks, and you'll be ready to tackle real-world web development challenges with confidence.\n\n\nDuring this course, you will learn:\n\n\nHTML fundamentals, attributes, text elements, formatting, lists, images, and navigation menus.\nCSS basics, selectors, typography, color models, background properties, tables, and advanced styling techniques.\nPractical projects including portfolio, weather app, and NFT project to reinforce learning.\nSQL attributes, data types, operators, keys, constraints, and common rules.\nComprehensive SQL commands, expressions, and advanced SQL programming.\nBasics of Python programming, including variables, data types, conditional statements, loops, and functions.\nIntermediate and advanced topics in object-oriented programming (OOP), file handling, and data structures.\nIntegration of Python with databases, web development using Flask, and project-based learning.\nUsing frameworks like Flask for back-end development and integrating it with front-end technologies.\nDeployment strategies and best practices for maintaining and optimizing web applications.\nAlgorithms design and analysis, recursion, complexity analysis, and sorting techniques.\nIntroduction to data analysis and visualization using NumPy and Pandas libraries.\nReal-world projects and exercises to build and deploy web applications using Python.\n\n\nAfter taking this course you will be able to:\n\n\nDevelop fully functional and aesthetically pleasing websites from scratch.\nImplement complex web application features using front-end and back-end technologies.\nManage databases effectively and integrate them seamlessly with web applications.\nDebug, optimize, and deploy web applications with confidence.\nApply best practices in web development.\n\n\nBecome a full-stack web developer with our Complete Full Stack Megacourse.\n\nStart building your future today!",
      "target_audience": [
        "Aspiring web developers and programmers who want to start their journey in full-stack web development.",
        "Students and professionals looking to upgrade their technical skills and knowledge in web development.",
        "Individuals interested in understanding the complete lifecycle of web application development from scratch."
      ]
    },
    {
      "title": "NodeJS Projects Bootcamp 2025: Learn by Doing",
      "url": "https://www.udemy.com/course/nodejs-projects-bootcamp-learn-by-doing/",
      "bio": "Master Node.js by building full-featured backend projects step-by-step using Express, MongoDB, REST APIs, and more.",
      "objectives": [
        "Build scalable backend applications using Node.js, Express, and MongoDB with real-world project experience.",
        "Design and develop RESTful APIs to handle CRUD operations and user authentication securely",
        "Structure and organize Node.js project folders using industry best practices for clean, maintainable code",
        "Use Postman to test APIs, debug endpoints, and simulate real-world client-server interactions."
      ],
      "course_content": {
        "WELCOME! PROJECTS YOU'LL BUILD IN THIS COURSE": [
          "Welcome! Projects You'll Build in This Course"
        ],
        "VANILLA NODEJS CRASH COURSE - OPTIONAL": [
          "Watch on Youtube (Optional)",
          "Welcome",
          "What is Nodejs ?",
          "Installing Nodejs",
          "Your first Nodejs Code",
          "The REPL",
          "Module System - CommonJS",
          "ES6 Module",
          "Path Module",
          "FS module-Synchronously",
          "FS-Asynchronously",
          "CommandLine Interface",
          "Servers Explained in a simple way",
          "HTTP Servers Deep Dive",
          "Basic HTTP Server",
          "Server with Routing",
          "Server that sends JSON Data",
          "The End"
        ],
        "MASTERING EXPRESS JS - OPTIONAL - JUST ADDED": [
          "What is Express JS ?",
          "Difference Between Express JS and NodeJS",
          "How to create Express Project",
          "How to Create Express Server-Understanding Request and Response",
          "Understanding Routing",
          "Practice Project-Mini Express Store",
          "Understanding Route Parameters",
          "Understanding Query Strings",
          "What is JSON ?",
          "Sending JSON as Response",
          "How to Make Post Request",
          "What is a Middleware ?",
          "Middleware next() function explained",
          "Error Handling with next() function",
          "Types of middlewares",
          "Types of middlewares Code Examples",
          "Practice Project - Express Middleware",
          "What is Express Router?",
          "Express App Without Express Router",
          "Express App With Express Routing",
          "What is static Files?",
          "Serving Static Files Code example",
          "Practice Project - Static Files"
        ],
        "EJS (EMBEDDED JAVASCRIPT) : TEMPLATE ENGINE CRASH-COURSE - OPTIONAL": [
          "Introduction",
          "EJS Overview",
          "Serving Static Assets",
          "Working with Variables",
          "EJS Conditionals",
          "Loops",
          "Working with Forms",
          "Layouts and Partials"
        ],
        "EXPRESS MIDDLEWARE PRACTICE PROJECT - JUST ADDED": [
          "Express Middleware Practice Project"
        ],
        "API PROJECT : BUILD TASK MANAGER API - JUST ADDED": [
          "Project Overview",
          "Tools needed for API Development",
          "Getting MongoDB Connection String",
          "Creating Book API Server",
          "Book Modeling",
          "Saving Book into Database",
          "Connecting to Database",
          "Get Single Book and Delete Book",
          "Updating Book",
          "Refactoring-Express Router"
        ],
        "API PROJECT: BUILD SPOTIFY CLONE API": [
          "Project overview & Features",
          "Data Structure Overview",
          "Application Data Flow",
          "Server Creation and Connecting to Database",
          "Data Modeling",
          "User Registration Controller",
          "User Router",
          "Using Postman for making request",
          "Error Handling",
          "Hashing user password",
          "Login Controller",
          "Token Generation",
          "Auth Middleware",
          "User Profile Controller",
          "Configure Cloudinary for file upload",
          "Update User Profile Controller",
          "Configure multer for file upload",
          "Updaing user profile picture using postman",
          "Improved protected Middleware",
          "Creating Artists",
          "IsAdmin Middleware",
          "Fetching all artists with filtering and pagination",
          "Get An Artist By ID",
          "Update Artist",
          "Postman Environments Configurations",
          "Delete Artists and it's associated songs and albums",
          "Get Top Artists",
          "Get Artist Top Songs",
          "Dummy Controllers and routes for albums",
          "Create Album",
          "Fetch all albums",
          "Populate artist ID",
          "Get Album By ID",
          "Update Album",
          "Delete Album",
          "Songs Controllers and Routes Setup",
          "Creating of songs",
          "Fetching all songs",
          "Get Song By ID",
          "Update Song Part 1",
          "Update Song Part 2",
          "Delete Song",
          "Get New Releases and top songs",
          "Playlist controllers and routes setup",
          "Creating playlists",
          "Playlists with filtering and pagination",
          "Get user's playlists",
          "Get playlist by ID",
          "Update playlist details",
          "Delete a playlist",
          "Add Sons To Playlist",
          "Remove song from playlist",
          "Add collaborator to playlist",
          "Remove collaborator from playlist",
          "Get featured playlists (high follower count)",
          "Like/Unlike a song",
          "Follow/Unfollow an artist",
          "Increasing-Decreasing song likes count",
          "Follow/Unfollow a playlist and finishing user profile",
          "Congratulations"
        ],
        "API PROJECT : BUILD YOUTUBE CLONE API": [
          "Project Overview",
          "Data Modeling Overview",
          "Folder Structure and Server creation",
          "Central place for config",
          "How to get Cloudinary API Key",
          "Connect to mongodb",
          "User Model",
          "Video Data modelling",
          "Subscription Model",
          "Playlist Model",
          "Notification model",
          "Liked model",
          "Comment model",
          "Channel Analytics Model",
          "Custom API Error Class",
          "API Response Utility Function",
          "Async Handler utility function",
          "Cloudinary for media upload utility functions",
          "Multer configurations",
          "Dummy Controllers and Routes",
          "User controllers setups",
          "Dummy user routes",
          "User Registering controller",
          "Making Request to Register User",
          "Fixed User registration Error",
          "Hash User Password",
          "Login User Controller",
          "Understanding Refresh and Access Tokens",
          "Access and Fresh Tokens methods",
          "Generating Access and Refresh Tokens after login",
          "Exploring how cookies with tokens are sent to user",
          "Logout Controller",
          "Protecting Routes using VerifyJWT Middleware",
          "Trying Refresh Token Controller",
          "Postman Environments",
          "Update User Password",
          "Handling Errors and Not Found Middlewares",
          "Get current user's profile",
          "Update User Account",
          "Fixed Auth Middleware Bugs",
          "Update user's avatar",
          "Update user's cover image",
          "Channel dummy controllers and routes setups",
          "Get channel profile information",
          "Update channel profile information and cover image",
          "Update channel profile information and cover image Continue",
          "Video Dummy Controllers and routes Setups",
          "Update channel notification preferences",
          "Upload and publish a new video",
          "Understanding Mongodb aggregation queries",
          "Get all videos with filtering, sorting, and pagination",
          "Get video details by ID and increment view count",
          "Update video details and thumbnail",
          "Delete a video and its associated files",
          "Toggle Video Publish Status(publish/unpublished)",
          "Generate sharing links for a video",
          "Notifications Dummy controllers and Routes",
          "Internal utility function to create a",
          "Get user notifications with pagination and filtering",
          "Mark a single notification as read",
          "Mark all user's notifications as read",
          "Delete a specific notification",
          "Playlists dummy routes and controllers setup",
          "Playlists dummy routes and controllers setup",
          "Add a video to a playlist",
          "Get user's playlists with videos info",
          "Get detailed information about a specific playlist",
          "Remove a video from a playlist",
          "Update playlist details",
          "Delete a playlist",
          "Comment Dummy Routes and comments setups",
          "Toggle like & unlike on a video",
          "Toggle like & unlike on a comment",
          "Implementing views and Likes count",
          "Get all Liked videos By Authenticated user",
          "Get all users who liked a specific video",
          "Get all users who liked a specific comment",
          "Dummy Routes and Controllers Setup",
          "Add a new comment or reply to a video",
          "Add a new comment or reply to a video Continues",
          "Get all comments for a video with pagination",
          "Update an existing comment",
          "Delete a comment and all its replies",
          "Get all replies for a specific comment",
          "Get overview of channel analytics including total views, subscribers...",
          "83.Get overview of channel analytics including total views, subscribers continue",
          "Internal utility function to update channel analytics",
          "Internal utility function to update channel analytics Continues"
        ],
        "FULLSTACK PROJECT : BUILD EMAIL-BASED OTP LOGIN": [
          "Live Demo and Folder structure",
          "Rendering of pages",
          "Send OTP",
          "Verify OTP and Logout"
        ],
        "FULLSTACK PROJECT: BUILD EMAIL REMINDER": [
          "Live Demo and Project structure",
          "Application configuration setup",
          "Conecting to mongodb",
          "Rendering of pages",
          "Configured Nodemailer for email sending",
          "Creating Reminders",
          "Displayig all reminders",
          "Automatic Email Deliver using Node Cron"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript (variables, functions, loops) is recommended.",
        "Willingness to apply your foundational Node.js knowledge in real-world project scenarios."
      ],
      "description": "Are you ready to take your backend development skills to the next level? This Node.js Project Bootcamp is designed to help you learn Node.js by building real-world applications from scratch. Whether you’re a beginner or have some experience with JavaScript, this hands-on course will guide you step-by-step through creating powerful backend projects using Express, MongoDB, and RESTful APIs.\nInstead of just learning theory, you’ll jump straight into building practical projects that mirror real industry workflows. You’ll learn how to set up a Node.js server, create and manage routes with Express, connect to MongoDB databases using Mongoose, and handle user authentication, data validation, and error handling. Each project focuses on real-world challenges and best practices, giving you the confidence to build scalable and maintainable backend applications.\nBy the end of this course, you’ll have multiple fully functional projects to showcase in your portfolio, along with a deep understanding of asynchronous programming, middleware, API design, and data storage. Whether you want to become a backend developer, build your own apps, or prepare for technical interviews, this course is your practical path to mastering Node.js.\nJoin now and start building real apps that work perfectly in the real world!",
      "target_audience": [
        "Beginner Node.js developers who want to build real-world backend projects using Express and MongoDB.",
        "JavaScript learners looking to apply their skills by building full-featured backend applications",
        "Frontend developers ready to transition into fullstack development by learning backend with Node.js.",
        "Students and self-taught programmers who understand the basics of Node.js and want project-based learning.",
        "Anyone who learns best by doing, rather than just watching tutorials or reading documentation.",
        "Tech enthusiasts and hobbyists who want to understand how backend servers and APIs work in practice.",
        "Anyone preparing for job interviews or looking to build a backend portfolio with real-world apps.",
        "Developers who know basic Node.js and want to practice with hands-on, guided projects."
      ]
    },
    {
      "title": "Learn Asp Net C#, MySQL and JavaScript for web developers",
      "url": "https://www.udemy.com/course/learn-asp-net-c-mysql-and-javascript-for-web-developers/",
      "bio": "Developers complete course for web design, development, coding and database",
      "objectives": [
        "Applying Object Oriented Programming concepts",
        "Get a job as a junior web developer for Dynamic applications",
        "Create your own stunning, layouts for awesome websites",
        "Start working and solve on real world problem statements",
        "Master client-end design using JavaScript, back-end development C# aspnet coding with MySQL",
        "Apply MySQL database queries for your business intelligence queries",
        "Create fully function web apps using Microsoft C# language and games",
        "Prepare dynamic stunning reports for your business requirements.",
        "learn what is Generative AI for future learning",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Master the essential technologies for building dynamic and scalable web applications with the \"Learn ASP.NET C#, MySQL, and JavaScript for Web Developers\" course. This course is perfect for aspiring web developers who want to gain hands-on experience in both front-end and back-end development, equipping you with the skills to build complete web solutions.\n\n\nYou’ll start with ASP.NET and C#, learning how to build powerful server-side applications. Dive into the Web architecture to organize your code, manage user input, and implement business logic. Gain experience with C# to handle server-side functionality such as authentication, form processing, and data validation.\n\n\nNext, you’ll explore MySQL, one of the most popular relational database management systems. Learn how to create databases, design tables, and perform complex queries using SQL. You'll master MySQL integration with ASP.NET applications, allowing your web applications to interact with databases efficiently for data storage and retrieval.\n\n\nOn the front-end, you’ll learn JavaScript to create dynamic, interactive web pages. Master DOM manipulation, event handling, and asynchronous JavaScript with AJAX to update web content without reloading the page. You'll also get hands-on with modern front-end practices to improve user engagement.\n\n\nThroughout the course, you'll build real-world projects, including e-commerce sites, blogs, and content management systems, integrating ASP.NET C#, MySQL, and JavaScript into a cohesive full-stack solution.\n\n\nEnroll today and take your web development skills to the next level with ASP.NET, C#, MySQL, and JavaScript!",
      "target_audience": [
        "Beginner C# coding, MySQL and JavaScript developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to create Data Science career",
        "Anyone who wants to become a Freelancer on Web Applications",
        "Anyone who wants to start their own business on Microsoft tools",
        "Anyone who wants to become a Full stack web developer on .Net technologies"
      ]
    },
    {
      "title": "React Master Class - Learn By Coding Components",
      "url": "https://www.udemy.com/course/reactjs-beyond-the-basics/",
      "bio": "Learn React step by step from basics to advanced by building UI components in simple and intuitive way + includes hooks",
      "objectives": [
        "Understand how setState works",
        "Understand common design patterns for building reusable components",
        "Better practices and learning's from the field",
        "Understand functional components and stateful components",
        "Understand how React works internally and code a basic version of React like library",
        "Build reusable React components of medium to high complexity.",
        "Build your own state management libary",
        "Understand Server Side Rendering"
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic knowledge of JavaScript and ES6."
      ],
      "description": "Treat this offer as a \"One Time Investment\" to all future updates.\n\n\nThis course will take you from React Novice to React intermediate (advanced, or Expert level, with practice).  We will covering some fundamentals in the beginning but move on to applications and the cool stuff.\nIn this course we will also code a reusable DataTable component from scratch, implement drag and drop without using any third-party library, create JSON based dynamic forms and much more.\nYou will learn many fundamental aspects of React Component design and also learn how to take this approach to build any UI component that you wish.  Once you successfully complete the course you will have learned how to build a pretty advanced React component that contains the following features.\n[ x ] React fundamentals\n[ x ] Component in depth\n[ x ] Hooks\n[ x ] Understanding Virtual DOM and diffing\n[ x ] Context API\n[ x ] Learn to build dynamic form component using JSON.\n[ x ] Customizing components using props\n[ x ] Learn to add drag and drop feature without using third party library.\n[ x ] Bind data to a table layout\n[ x ] Searching on any columns\n[ x ] Pagination, with custom pagination view\n[ x ] Drag and reorder table columns\n[ x ] In-place editing\n[ x ] Custom cell renderer\n[ x ] Attach the dynamic form to the DataTable.\n[ x ] React Common Patterns\n[ x ] State Management\n[ x ] Server Side Rendering(SSR)  and more\nPlanned overall agenda for the course:\nSection 1 -\nFundamentals of React\nIntroduction\nFundamentals of React\nJSX in depth\nComponent based design\nFragment\nFunctional Component\nStateful Component\nEvent Handling\nConditional\nState Management\nLife Cycle\nError Handling\nSection 2 -\nAdvanced React\nType checking with PropTypes\nRefs and the DOM\nUncontrolled Components\nHigher Order Components (HOC)\nRender Props\nPerformance Optimization\nContext API\nPortals\nIntegrating with other JavaScript\nSection 3 - Building a simple CRUD app with React\nSection 4 - New React Features\nSection 5 - Context API Demo\nSection 6 - Building a simple Modal Component\nSection 7 - Building a Tagging Component\nSection 8 - Building a Calendar Component\nSection 9 - Building a DataTable Component\nSection 10 - React Drag and Drop Tutorial\n\n\nWe will minimize the use of third party libraries/frameworks and will only include them when absolutely required.\n\n\nNOTE:    Most of the components developed in this training, is kept simple so that even a beginner could understand.  To make it work in production scenarios, this has to be thoroughly tested and adapted as needed.\n\n\nEnjoy Programming!!\n(Everyone can code!)",
      "target_audience": [
        "Anyone who is tired of building a todo application and want to learn how to create a reusable medium complexity component and application should find this course interesting."
      ]
    },
    {
      "title": "Create a Simple Blog CMS in PHP and MYSQL",
      "url": "https://www.udemy.com/course/create-a-simple-blog-cms-in-php-and-mysql/",
      "bio": "Learn to create a blog with commenting system in php and mysql",
      "objectives": [
        "Use Bootstrap templates to build UI of the CMS",
        "Create a Commenting System",
        "Perform Database Operations Confidently",
        "Build a Login/Logout System",
        "Make Pages Private by using Sessions"
      ],
      "course_content": {},
      "requirements": [
        "Basics of PHP",
        "Basics of HTML , CSS and Bootstrap",
        "Need to Install Xampp(to Execute PHP code on localhost)",
        "Text Editor(Notepad++) to(Write and Edit PHP Code Files)"
      ],
      "description": "In this course we will create a complete Blog with the admin panel to manage content. The course is designed for anyone even the php beginners.\nWe will start by creating the user interface of the project by using bootstrap free templates then we will start to make it dynamic and database driven. You will learn the following main features :\nUse Bootstrap templates to build UI of the CMS\nCreate a Commenting System\nPerform Database Operations Confidently\nBuild a Login/Logout System\nCreate an Admin Panel to Manage Content on the Blog CMS\nMake Pages Private by using Sessions",
      "target_audience": [
        "Anyone who is fairly new to PHP Developement",
        "Anyone who wants to learn Practically"
      ]
    },
    {
      "title": "Learn Docker For Absolute Beginners",
      "url": "https://www.udemy.com/course/learn-docker-for-absolute-beginners/",
      "bio": "How To Get Started With Docker For Absolute Beginners",
      "objectives": [
        "Learn the basics of Docker.",
        "Learn the benefits of using Docker",
        "Understand the difference between Docker vs virtual machine",
        "Understand the layered file system of docker images",
        "Learn how to create docker containers and images",
        "Gain the skills to build development environments with your code running in containers."
      ],
      "course_content": {},
      "requirements": [
        "Windows or Mac or Linux machine",
        "Internet Connection",
        "Understand terminal or command prompt basics.",
        "Interest to learn Docker"
      ],
      "description": "Are you just starting out with Docker? Awesome. This course starts out assuming you're new to containers and have no prior experience with Docker.\nThis course is aimed at absolute beginners who would like to learn how to get started with Docker as quickly as possible. With 5+ years of experience as a software engineer, you can count on me to explain what is worth knowing in a simple and practical way that is easy to understand. When you watch me show you commands, you will feel comfortable trying them and confident in your understanding of Docker!\nThis is one of the few Docker courses fully step by step, and I will happily assist you every step of the way as you familiarize yourself with the absolute basics Docker!\n\n\nHere are some of the many cool things you'll learn in this course:\nInstalling Docker on Mac/Windows/Linux\nUnderstand the concepts behind Docker\nUnderstand the difference between Virtual Machines and Docker containers\nLearn the benefits of using Docker\nUnderstand what containers and images are.\nCreate and run docker containers and images.\nBuild/Publish your own custom application images\nUnderstand the basics of running docker containers\nUnderstand and practice various docker commands.\nUnderstand the layered file system of docker images and containers.\nAnd so much more...\nI am grateful for the students who have taken the time to provide us with such positive reviews!\nThank you for reading this and we hope to see you introducing yourself in the course soon!\nI wish you the very best of luck with your studies and I hope that we shall have some fun together in this course!",
      "target_audience": [
        "Anyone interested in learning Docker"
      ]
    },
    {
      "title": "DotNetNuke Development Made Easy For ASP.NET Developers!",
      "url": "https://www.udemy.com/course/dotnetnuke-development-made-easy/",
      "bio": "Build Powerful DNN Sites With Modules, Web API and Scheduled Tasks. DNN 9 Updated!",
      "objectives": [
        "Install and Configure DNN on IIS or a host",
        "Create DNN Modules in MVC & Web Forms",
        "Create DNN Web API",
        "Create DNN Scheduled Tasks",
        "Install DNN Modules on DNN websites"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing and Configuring DNN"
        ],
        "DNN Module Basics": [
          "Creating a Module in DNN website",
          "Creating a Module in Visual Studio and uploading it to DNN"
        ],
        "DNN Module Development - Using MVC": [
          "GitHub Repositry for this Section",
          "Models",
          "Controllers",
          "Views",
          "Creating a new item page",
          "Data Separation and Notifications",
          "Roles and Users"
        ],
        "DNN Module Development - Using Web Forms": [
          "The structure of the Module project in VS - Web Forms",
          "Creating the Data Access Layer",
          "Working with the Module",
          "Adding Update and Delete for the Module",
          "The structure of the Module project in VS - MVC"
        ],
        "DNN Module Development Advanced Topics": [
          "Data Management",
          "Notifications and Emails",
          "Integrating with DNN Search API",
          "Adding users",
          "Uploading files via Modules"
        ],
        "DNN Web API & Scheduled Tasks": [
          "Creating Web API",
          "Creating Scheduled Tasks"
        ],
        "Innovation Seed": [
          "Innovation Seed"
        ],
        "Bonus Section": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "C# or VB",
        "Have VS 2013 or later installed",
        "Have a web host or an access to IIS to install the website"
      ],
      "description": "Hello there!, thanks for stopping by. This course is about DotNetNuke development (DNN website development). In this course, you will learn in details how to create a DNN Module and how to create a Data Access Layer (DAL) to save and retrieve data. Also, you will learn how to add Web API to your site so you can allow data exchange. Also, creating Scheduled Tasks inside the DNN so you can create a recurring tasks.\nThis course will have captions so you can understand the talking well. Also, if you want a translation for your language please let me know and I will try to provide a decent one.",
      "target_audience": [
        "Anyone who want to learn about DNN Module Development",
        "Anyone who want to learn about DNN Web API Development",
        "Anyone who want to learn about DNN Tasks Development"
      ]
    },
    {
      "title": "Master Flutter and Dart: Build iOS & Android Apps (2025)",
      "url": "https://www.udemy.com/course/beginner-to-advanced-mobile-app-development-flutter-2024/",
      "bio": "Learn Flutter Framework, Dart, Firebase, State Management, and API Integration to Build High-Performance Mobile Apps",
      "objectives": [
        "Develop Proficiency in Flutter and Dart: Gain a solid understanding of Flutter framework and Dart programming language to build robust mobile applications.",
        "Create Interactive User Interfaces: Learn how to design and implement user-friendly and interactive UIs using Flutter's rich widget library.",
        "Manage State Efficiently: Master state management techniques to handle data and state changes effectively within your Flutter applications.",
        "Deploy Production-Ready Apps: Acquire the skills to test, debug, and deploy your Flutter apps on both Android and iOS platforms.",
        "Integrate Firebase for Backend Services: Utilize Firebase for authentication, databases, and storage.",
        "Implement Efficient Navigation: Master routing and navigation in Flutter apps.",
        "Utilize Third-Party Packages: Extend app functionality with popular third-party packages.",
        "Handle Network Operations: Manage network requests, JSON parsing, and connectivity.",
        "Use Local Storage Solutions: Implement persistent data storage with shared preferences, SQLite, and Hive.",
        "Implement Animation and Motion: Create engaging apps with Flutter’s animation APIs."
      ],
      "course_content": {
        "Introducing the Latest Updates From Flutter & Dart [2025 Updates]": [
          "Flutter 3.27 Update",
          "Dart 3.6 Update"
        ],
        "Getting Started with Flutter Development": [
          "Welcome to Flutter: What is Flutter and Why Should You Learn It?",
          "Setting Up Your System: Installing Flutter SDK",
          "Understanding the Basics: How Flutter Projects Are Organized",
          "Let’s Build Together: Creating Your First Timer App - Setup",
          "Adding Features to Your Timer: Making Your App Functional",
          "Taking It Up a Notch: Improving Your Timer App",
          "Final Touches: Completing Your First Flutter App"
        ],
        "Learning Dart Programming from Scratch": [
          "Dart Language Essentials: What You’ll Learn in This Section",
          "Introduction to Dart: What Makes Dart Perfect for Flutter?",
          "Introduction to Dart Language Quiz",
          "Keeping Code Clean: Understanding Encapsulation in Dart",
          "Understanding Dart Encapsulation",
          "Code That Adapts: Exploring Inheritance and Abstraction",
          "Quiz for Inheritance, Abstraction, and Overriding in Dart",
          "Reusing Code Made Easy: Using Mixins in Dart",
          "Utilizing Mixins in Dart Quiz",
          "Say Goodbye to Bugs: Null Safety in Dart Explained",
          "Ensuring Null Safety in Dart Quiz",
          "Loops and Flow Control: Making Decisions in Your Code",
          "Loops In Dart",
          "A Practical Project: Building a BMI Calculator",
          "Developing a BMI Calculator App Quiz",
          "Adding Features: Making Your BMI Calculator Functional",
          "BMI Calculator: Initial Setup",
          "Enhancing the BMI Calculator: Improving User Experience",
          "BMI Calculator: Implementing Features",
          "Wrapping Up: Finalizing Your BMI Calculator App",
          "BMI Calculator: Finalizing the App Quiz"
        ],
        "Building and Managing User Interfaces in Flutter": [
          "Flutter Widgets Explained: The Building Blocks of Your UI",
          "Working with Flutter Widgets Quiz",
          "Organizing Your UI: How the Widget Tree Works",
          "Widget Tree Quiz",
          "Creating Cool Features: Building a Carousel Slider",
          "Implementing a Carousel Slider: Getting Started Quiz",
          "Adding More to Your Carousel: Taking Your Slider Further",
          "Carousel Slider Quiz",
          "Lists Made Easy: How to Work with ListView in Flutter",
          "A Quiz to Create and Manage Lists",
          "Making Lists Fast and Smooth: Optimizing ListView Performance",
          "Implementation Quiz"
        ],
        "Integrating Device Hardware and Firebase in Flutter": [
          "Why Firebase? Exploring Backend Services in Flutter",
          "Device Hardware Access and Firebase Introduction Quiz",
          "Keeping Your App Safe: Securing Devices from Unknown Apps",
          "Securing Devices from Unknown Apps Quiz",
          "Getting Permissions Right: Setting Up Camera Access in Flutter",
          "Camera Permissions Quiz",
          "Capturing Moments: Taking Photos with Firebase Integration",
          "Capturing Photos Quiz",
          "Perfecting Photo Capture: Completing the Feature in Flutter",
          "Completing Photo Capture Quiz",
          "Lights, Camera, Action: Recording Videos in Your Flutter App",
          "Quiz for video recording"
        ],
        "State Management and Data Persistence in Flutter": [
          "What Is State Management? Making Your App Smarter",
          "Introduction to State Management Quiz",
          "Provider and Consumer: Effortless State Management in Flutter",
          "Producer and Consumer Patterns Quiz",
          "Storing Data with SQLite: Saving User Information Locally",
          "Working with SQLite in Flutter Quiz",
          "Introduction to SQLite: Understanding Database Basics",
          "Introduction to SQLite Database",
          "Copying Asset Database in Flutter: Simplifying Data Setup",
          "DataBase Quiz",
          "Building a To-Do App with SQLite: Step-by-Step Guide",
          "(Quiz) To-Do App with SQLite"
        ],
        "Creating Ecommerce App using Bloc": [
          "Module introduction",
          "Foundation Plan for Ecommerce app",
          "Splash Screen",
          "Splash Screen State management",
          "Creating app constants and common widgets",
          "Understanding Get API and MVVM",
          "Create immutable models with freezed",
          "Getting started with API repository",
          "Display Error and Loading animations",
          "Adding states, events and Bloc to Home Screen",
          "Updating the product listing card in home screen",
          "Adding pagination to load products",
          "Getting started with Bottom Navigation"
        ],
        "Screen navigations using Auto Route in Flutter": [
          "Module Introduction",
          "Getting started with Auto Route",
          "Starting with product description screen",
          "Completing the product description screen",
          "Understanding other api types like post, put and delete",
          "Adding introduction screens for better user onboarding in your flutter app"
        ],
        "Capstone Project": [
          "Capstone Overview: What You’ll Create – A Weather App",
          "Designing a Splash Screen: Making a Great First Impression",
          "Setting Up APIs: Fetching Weather Data for Your App",
          "Developing the Home Screen: Displaying Weather Updates",
          "Handling Errors in Your App: Making It Foolproof",
          "Adding Authentication: Securing Your App with Firebase",
          "Forecast Details: Displaying Weather Data with Style",
          "Creating Graphs: Visualizing Data Using Flutter Charts",
          "Forecast Screen Design: Building a User-Friendly Interface",
          "Using Location Data: How to Access the User’s Location",
          "Finalizing the Project: Polishing and Deploying Your Weather App"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge: Familiarity with basic programming concepts is recommended.",
        "Computer and Internet Access: A computer (Windows, macOS, or Linux) with internet access for downloading Flutter and Dart SDKs.",
        "Development Environment: Ability to install and configure software (e.g., IDEs like Visual Studio Code or Android Studio).",
        "Desire to Learn: Enthusiasm and willingness to learn mobile app development with Flutter."
      ],
      "description": "Master Flutter and Dart: Build iOS & Android Apps with Firebase, APIs, and Stunning UIs\nLearn the complete process of Flutter app development and create professional-grade iOS and Android applications. This course is packed with hands-on projects, including a BMI calculator, a To-Do app, and a feature-rich weather forecasting app. Whether you're new to coding or an experienced developer, you'll master the Flutter framework, Dart programming language, and the essential tools to excel in mobile app development.\nThis comprehensive course focuses on real-world techniques to build high-performance apps, covering topics like state management, Firebase integration, REST API handling, animations, and UI/UX design. By the end, you’ll know how to create, optimize, and deploy apps on the Google Play Store and Apple App Store.\nWhat You’ll Learn\nFlutter and Dart Basics: Learn the foundations of Flutter development, including Dart syntax, Flutter widgets, and project structuring.\nCreating Beautiful UIs: Design stunning, responsive interfaces using Flutter’s widget library, advanced layouts, and animations.\nState Management: Implement efficient state handling with Provider, Bloc, and setState.\nFirebase Integration: Use Firebase for authentication, real-time databases, cloud storage, and analytics.\nREST API Handling: Fetch and manage data from APIs, handle JSON parsing, and manage network errors gracefully.\nLocal Storage Solutions: Implement persistent data using SQLite, Hive, and shared preferences for offline functionality.\nAdvanced Navigation: Master routing, deep linking, and seamless navigation with AutoRoute and bottom navigation bars.\nAnimations and Motion: Create engaging apps with Flutter animations, transitions, and dynamic visual effects.\nWhy Choose This Course?\nBuild portfolio-ready apps like a BMI calculator, To-Do app, and weather app with APIs and Firebase integration.\nGain expertise in Flutter app optimization, ensuring fast, reliable performance.\nLearn how to publish production-ready apps on the Google Play Store and Apple App Store.\nThis course is ideal for aspiring developers and professionals looking to advance their skills in Flutter and Dart. With real-world projects and hands-on practice, you’ll be ready to excel in mobile app development and stand out in the competitive tech industry",
      "target_audience": [
        "This course is ideal for aspiring app developers, software engineers, and tech enthusiasts who want to learn how to build mobile applications using Flutter. Whether you're a beginner with no prior experience or an experienced developer looking to expand your skill set, this course will guide you through the fundamentals to advanced concepts of Flutter app development."
      ]
    },
    {
      "title": "Introduction to HTML5 Canvas basics of drawing",
      "url": "https://www.udemy.com/course/introduction-to-html5-canvas-basics-of-drawing/",
      "bio": "Beginners Guide to working with JavaScript and HTML5 canvas",
      "objectives": [
        "draw using HTML5 canvas",
        "use JavaScript to interact with canvas element"
      ],
      "course_content": {
        "HTML5 Canvas": [
          "Learn HTML5 course intro",
          "Introduction to course and resources",
          "Setup source code review HTML CSS JavaScript",
          "HTML5 Canvas element intro",
          "JavaScript DOM document Object Model explained",
          "Canvas HTML5 options setup and connnection info",
          "Canvas draw using JavaScript",
          "Canvas Height and Widths explained",
          "CANVAS strokes",
          "HTML5 canvas drawing paths",
          "Canvas Circles and Arcs",
          "HTML5 Canvas Text",
          "Working with colors options alpha",
          "Source Code for Text and path drawing",
          "Syntax for drawimage",
          "working with Canvas images",
          "Load images from DOM"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Learning Resource Collection"
        ]
      },
      "requirements": [
        "basic HTML and JavaScript",
        "desire to learn",
        "computer"
      ],
      "description": "Learn to draw on your webpages using the HTML5 canvas element. Using JavaScript allows you to create amazing creations right on your web pages.\nThe course instructor has over 15 years of industry experience as a web developer. Having worked on hundreds of projects. Learn real world skills to enhance what you can do with your web pages.\nThis course is perfect for beginners who want to learn more about using some of the really awesome features available in HTML5. We teach you how to work with canvas and draw on it.\nStep by step coding instruction, everything is included in this course to get you going quickly.\nLearn how to\nAdd canvas in HTML\nconnect Canvas to JavaScript\nDraw on the canvas\nHeight Width of Canvas\nGrid positioning\nCanvas Strokes\nDrawing Paths for custom shapes\nDrawing Arcs and circles\nColor options for drawing\nWorking with images\nDOM Document Object Model\nand a whole lot more....\nSource files, top resource links and more are included to get you started quickly.",
      "target_audience": [
        "web developers",
        "webmasters",
        "anyone who wants to learn to use HTML5 Canvas"
      ]
    },
    {
      "title": "Learn JavaScript from Scratch: The Ultimate Beginners Course",
      "url": "https://www.udemy.com/course/learn-javascript-from-scratch-basics-beginner-course/",
      "bio": "Learn modern JavaScript programming fundamentals with practical hands-on training.",
      "objectives": [
        "JavaScript coding basics",
        "VS Code & Extensions",
        "Common Console Errors - Syntax, Type",
        "How GitHub works",
        "Single/Multi-Line Coding",
        "Execution Context Object",
        "How to work with Variables",
        "How to work with Operators",
        "String Manipulation",
        "Number Manipulation",
        "Boolean Logic & Control Flow",
        "Truthy/Falsy values and Equality Operators",
        "If/Else Statements, nesting if/else"
      ],
      "course_content": {
        "Introduction": [
          "JavaScript Course Introduction",
          "JavaScript Marketplace",
          "JavaScript Job Opportunities"
        ],
        "Intro to JS, history, and Environment": [
          "Intro To JavaScript & Environment",
          "VS Code & Extensions",
          "Browser Dev tools & JS Console",
          "Common Console Errors - Syntax, Type, Reference",
          "Intro to Terminal",
          "Crash course on GitHub",
          "Online Resources (W3schools, MDN Web Docs, Stack Overflow)",
          "Coding Challenge: Hello World in JS",
          "Coding Challenge Solution"
        ],
        "Coding Basics": [
          "Execution Context Object",
          "Single/Multi Line Coding",
          "Variable",
          "Hoisting",
          "Declaration, Assignment",
          "Operators",
          "Operator Precedence",
          "Coding Challenge",
          "Coding Challenge Solution"
        ],
        "Primitive Data Types": [
          "Primitive Data Types",
          "String Manipulation",
          "Numbers",
          "Numbers Manipulation",
          "Symbol",
          "Null and Undefined",
          "Boolean Logic & Control Flow",
          "Truthy/Falsy values and Equality Operators",
          "If/Else Statements, nesting if/else",
          "Ternary Operators",
          "Switch Statements",
          "Code Challenge",
          "Code Challenge Solution"
        ],
        "Advanced Data Types": [
          "Advanced Data Types Intro",
          "Arrays and Length",
          "Basic Array Methods",
          "Objects and Properties",
          "Object Methods",
          "Code Challenge",
          "Code Challenge Solution"
        ],
        "Loops": [
          "For and for in Loop",
          "While Loop",
          "Break and Continue",
          "Code Challenge",
          "Code Challenge Solution"
        ],
        "Beginner Function Syntax": [
          "Function Declarations",
          "Function Expressions",
          "Arrow Functions",
          "IIFE",
          "Scope",
          "Closure",
          "Callbacks",
          "Code Challenge",
          "Code Challenge Solution"
        ],
        "Advanced Function Syntax": [
          "Advanced Function Syntax",
          "Map Method",
          "Filter Method",
          "Reduce Method",
          "Sort Method",
          "Spread Operator"
        ]
      },
      "requirements": [
        "Basic computer skills"
      ],
      "description": "Welcome to the - Learn JavaScript from Scratch: The Ultimate Beginners Course\nThis practical, hands-on course was created for newbies – that's to say, people with no prior training or knowledge with JavaScript or Web Development.\nIn this practical, hands-on class you're going to learn how to use JavaScript and go from beginner to expert!\nEven if you already have some experience, or want to learn about the advanced features of JavaScript, this course is for you!\nIn this class you’ll learn:\nJavaScript coding basics\nVS Code & Extensions\nCommon Console Errors - Syntax, Type, Reference\nHow GitHub works\nSingle/Multi-Line Coding\nExecution Context Object\nHow to work with Variables\nHow to work with Operators\nString Manipulation\nNumber Manipulation\nBoolean Logic & Control Flow\nTruthy/Falsy values and Equality Operators\nIf/Else Statements, nesting if/else\nBlending practical work with solid theoretical training, we take you from the basics of JavaScript through to mastery.\nWhile the theory is important, we understand that it can also be dry and uninspiring. For this reason, this course is packed with examples that you can follow step by step.\nThis class gives you foundational training on JavaScript so you can increase your coding skills and start pursuing a career in a field that is increasingly in demand as the global reliance on technology grows.\nJavaScript is a programming language used to make web pages interactive. It is what gives a page life—the interactive elements and animation that engage a user. If you've ever used a search box on a home page, checked a live baseball score on a news site, or watched a video, it has likely been produced by JavaScript.\nWhat makes JavaScript great is that it's not necessary to know how to write it to use it in your web code. You can find plenty of prewritten JavaScripts for free online. To use such scripts, all you need to know is how to paste the supplied code into the right places on your web page.\nDespite the easy access to prewritten scripts, many coders prefer knowing how to do it themselves. Because it is an interpreted language, no special program is required to create usable code. A plain text editor like Notepad for Windows is all you need to write JavaScript. That said, Markdown Editor might make the process easier, particularly as the lines of code add up.",
      "target_audience": [
        "Beginner students that want to learn about JavaScript"
      ]
    },
    {
      "title": "Next-Gen Adobe Commerce / Magento AI-Enhanced Development",
      "url": "https://www.udemy.com/course/next-gen-adobe-commerce-magento-ai-enhanced-development/",
      "bio": "AI-Powered Techniques for Next-Level Adobe Commerce/Magento E-Commerce and Web Development + 6 Months FREE JetBrains IDE",
      "objectives": [
        "From Basic to Advanced Customizations: Leverage AI assistance using the JetBrains AI Tool in PHPStorm for comprehensive customization techniques",
        "Enhanced AI Problem-Solving: Master advanced problem-solving techniques in Adobe Commerce / Magento with AI",
        "Code Explanations for Faster Learning: Utilize AI to get detailed explanations of code, speeding up your learning process",
        "AI-Driven Code Creation and Refactoring: Create and refactor Adobe Commerce / Magento code with AI support",
        "Automate Repetitive Tasks: Use AI to automate repetitive tasks, allowing you to focus on crucial development",
        "Diagnose and Resolve Issues: Employ AI to diagnose and resolve issues in your Adobe Commerce / Magento store",
        "Generate Effective Commit Messages: Let AI help you generate clear and effective commit messages",
        "Quickly Write Comprehensive README Files: Use AI to draft detailed README files swiftly",
        "Modify Checkout Forms with AI: Adjust checkout forms in Adobe Commerce / Magento with AI assistance",
        "Customize Layouts and Templates: Learn to modify Adobe Commerce / Magento layouts and templates",
        "Create and Use Product Attributes: Develop new product attributes and implement them using install scripts/patches",
        "Refactor LayoutProcessor: Understand plugin explanations and refactor LayoutProcessor with AI",
        "AI-Powered Refactoring Techniques: Explore effective refactoring techniques with AI guidance",
        "Best Practices with AI: Learn best practices in Adobe Commerce / Magento development, powered by AI insights"
      ],
      "course_content": {
        "Introduction to AI-Powered E-Commerce Development": [
          "Welcome to the Course",
          "Meet Your Instructor",
          "Course Prerequisites",
          "Exploring AI Tools and the Adobe Commerce / Magento",
          "AI's Role in Enhancing Developer Productivity and Transforming the Workflow",
          "How to Claim Your 6-Month FREE JetBrains IDE License and Exclusive Offers"
        ],
        "AI-Enhanced Theme Customization": [
          "Creating a New Custom Theme",
          "Updating the Shop Logo",
          "Removing Copyright Notices",
          "Customizing Footer Links",
          "Crafting Home Page Content",
          "Solving Product Listing Page Error"
        ],
        "Customizing Welcome Text in the Header": [
          "Personalizing Guest Welcome Text",
          "Optimizing Block Extensions",
          "Enhancing Header Customizations",
          "Documenting with README.md"
        ],
        "Implementing a Cookie Banner": [
          "Building a Cookie Banner",
          "Improving Cookie Banner Code",
          "Cookie Banner Adjustment with Privacy Policy"
        ],
        "Integrate AI-Powered Customer Support Service Chat": [
          "Adding Customer Service Chat with a Custom AI Chatbot",
          "Refactor the Customer Support Chat Extension",
          "Adjust the Customer Chat Support Extension with Admin Configuration Options",
          "Refactor the ConfigProvider"
        ],
        "Adjusting Layered Navigation and Product Listing Layouts": [
          "Customizing Product Listing Layouts",
          "Streamlining Custom Page Layouts"
        ],
        "Enhancing Sticky Layered Navigation": [
          "Creating Sticky Navigation",
          "Refining the Sticky Navigation Style"
        ],
        "Visual Enhancements for Product Stock Status": [
          "Enhancing Stock Status Display",
          "Animating Stock Status Indicators",
          "Generating Commit Messages with AI",
          "Settings for AI-Generated Commit Messages"
        ],
        "Adding a Custom Product Details Tab and Displaying Logos": [
          "Adding Custom Product Tabs",
          "Creating and Using Custom Attributes",
          "Integrating The Custom Product Attribute Into The New Product Tab",
          "Fixing Image Display Issues",
          "Refactoring Product Tab Extensions",
          "Managing the Missing Attributes"
        ],
        "Simplifying Checkout Forms": [
          "Simplifying Address Forms",
          "Improving LayoutProcessor Code",
          "AI-Powered Plugin Explanations",
          "Simplifying Code with ArrayManager"
        ]
      },
      "requirements": [
        "Basic Knowledge of Web Development",
        "Familiarity with Adobe Commerce / Magento",
        "Basic Understanding of AI and Machine Learning Concepts"
      ],
      "description": "Ready to transform your Adobe Commerce / Magento development workflow? My comprehensive course, \"Next-Gen Adobe Commerce (Magento): AI-Enhanced Development\" is designed to help developers like you harness the power of AI for a wide range of customizations, from basic to advanced level.\n\nWhat This Course Offers:\nStructured into ten modules, this course will guide you through how JetBrains AI Assistant Tool integrated into your JetBrains IDE can simplify various development tasks in Adobe Commerce / Magento projects, such as:\n\nCode Creation and Refactoring\nDocumentation\nShop Setup\nCode management\nAnd more ...\nYou’ll discover how AI can assist in problem-solving, providing valuable insights and guidance throughout your development process. By mastering these AI-enhanced techniques, you’ll confidently tackle complex challenges, making your workflow more efficient and innovative.\n\nNot only will you gain practical knowledge of the JetBrains AI Assistant Tool, but you’ll also explore emerging trends and best practices in AI-driven development. Hands-on experience with the AI and strategies will significantly boost your productivity and adaptability in Adobe Commerce / Magento e-commerce web development.\n\nExclusive Offer for You:\n\n- 6 Months FREE Access to top JetBrains IDEs - industry-leading tools for developers like:\n\nPhpStorm – Perfect for PHP and Adobe Commerce / Magento development.\nWebStorm – The ultimate IDE for modern JavaScript and front-end development.\nIntelliJ IDEA – Ideal for Java and Kotlin developers.\nPyCharm – The go-to IDE for Python development\nMore IDEs from JetBrains ...\n- Automatic 40% Discount on your selected IDE subscription after this free 6 months period — keep the savings rolling!\n- JetBrains AI Assistant: Experience the future of coding with a 7-day JetBrains AI Assistant trial, integrated into your selected JetBrains IDE. Plus, I’m working on even more exciting discounts and offers for my students — stay tuned!\n\nI'm so confident that this course will be valuable to you and boost your productivity that I'm offering a 30-day FULL money-back guarantee! It's a risk-free opportunity with everything to gain\n\nStart your development journey with one of these powerful JetBrains IDEs and supercharge your productivity with Adobe Commerce / Magento projects with the power of AI.",
      "target_audience": [
        "Web Developers - Individuals with a background in web development who are looking to expand their skill set into Adobe Commerce / Magento and are interested in leveraging AI tools to enhance their workflow and productivity.",
        "E-Commerce Professionals - Professionals working in the e-commerce industry who want to gain deeper insights into Adobe Commerce / Magento development and learn how AI can streamline various development tasks and improve the efficiency of their online stores.",
        "AI Enthusiasts - Developers and technologists with an interest in artificial intelligence who wish to explore practical applications of AI in the field of e-commerce development, specifically within the Adobe Commerce / Magento ecosystem.",
        "Tech-Savvy Entrepreneurs - Entrepreneurs and business owners who are tech-savvy and want to understand how AI-enhanced e-commerce development can benefit their business, allowing them to make informed decisions when hiring developers or managing development projects."
      ]
    },
    {
      "title": "Cloud Computing with AWS Amazon Web Services",
      "url": "https://www.udemy.com/course/cloud-computing-with-aws-amazon-web-services/",
      "bio": "Learn all AWS cloud services from scratch- S3, EBS, EFS, Kinesis, IAM, Cognito, RDS, Redshift, Elasticache, Lambda, EC2",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over Amazon Cloud- Amazon Web Services.",
        "Having command over all the options, services and tools available.",
        "You could develop Mobile, Web, IoT, AI, and other applications.",
        "Learn to create an Object Storage, Alexa ChatBOT, DevOps Toolchain, etc"
      ],
      "course_content": {
        "Introduction": [
          "Creating an AWS account",
          "Exploring Amazon Web Services",
          "AWS CLI: Installation and Configuring with IAM user credentials",
          "AWS CLI: Command Reference"
        ],
        "Quicksight": [
          "Getting Started with Quicksight",
          "Importing dataset and understanding group and values",
          "Creating Treemap and Customizing charts",
          "Data Preparation- Editing Dataset before creating Charts",
          "Create a Calculated Field using Functions- ceil and concat",
          "More calculated fields",
          "Creating Filters and Excluded list",
          "Map Chart and Conditional Formatting",
          "Pivot table"
        ],
        "Compute": [
          "Learning- Amazon Elastic Compute Cloud (EC2)",
          "Creating an EC2 instance",
          "Launching an EC2 instance",
          "Learning- Amazon Elastic Beanstalk",
          "PRACTICAL- Beanstalk",
          "Learning- Amazon Lambda",
          "PRACTICAL- Batch",
          "Learning- Elastic Container Service",
          "PRACTICAL- ECS",
          "PRACTICAL- EKS",
          "VPC (Virtual Private Cloud)",
          "Lightsail"
        ],
        "Storage": [
          "Learning- Amazon Simple Storage Service (S3)",
          "S3 Practical",
          "Learning- Amazon Glacier",
          "Glacier Practical",
          "Learning- Amazon Elastic Block Store (EBS)",
          "Learning- Amazon Elastic File System (EFS)",
          "EFS Practical",
          "AWS Storage Gateway",
          "Storage Gateway Practical"
        ],
        "Database": [
          "Database Introduction",
          "LEARNING- Amazon DynamoDB",
          "LEARNING Amazon ElastiCache",
          "ElastiCache Practical",
          "LEARNING- Amazon Relational Database Service (RDS)",
          "RDS Practical",
          "LEARNING Amazon Redshift",
          "Redshift Practical"
        ],
        "Analytics": [
          "LEARNING- Amazon Elastic MapReduce (EMR)",
          "LEARNING- Amazon Kinesis"
        ],
        "Build a Solution": [
          "Launch a Virtual Machine",
          "Build a Web App",
          "Build using Virtual Servers",
          "Connect an IoT device",
          "Start a development project",
          "Register a domain",
          "Deploy a Serverless Microservice",
          "Create a backend for your mobile app"
        ],
        "VPC and Cost Management": [
          "VPC",
          "Cost Management"
        ],
        "Amazon DeepComposer": [
          "overview- deep composer",
          "Getting started with Music Studio",
          "Using GAN to generate other instruments"
        ],
        "AWS Lambda": [
          "What is AWS Lambda (Optional Reading)"
        ]
      },
      "requirements": [
        "No prerequisites at all. You just need a little experience of doing GOOGLE search only ! But if u are aware of some cloud based or web development tools and technologies, it is helpful."
      ],
      "description": "In this course, we would explore Amazon Cloud- Amazon Web Services. Learn all the available services under catalog, and what we can do with each service provided with platform and Infrastructure categories. AWS is currently the market leader with its wide range of cloud services spanning in almost each domain of Information technology, be it Database or Analytics, Cyber security or Game development. You can do almost anything related to technology with cloud computing. It allows you to easily scale your resources when there is a sudden surge in traffic or demand, in manner that you don't need to provision everything manually keeping costs as low as possible. AWS can save a lot of time when you are building some solutions, or running an existing project.\nThis course covers wide range of AWS services, and you will be learning each of them one by one.\nS3, Glacier, EBS, EFS, Storage Gateway (Cloud Storage)\nEC2, Beanstalk, Lambda, Container, Lightsail, VPC (Compute)\nDynamoDB, Elasticache, RDS, Redshift (Cloud Database)\nKinesis, EMR (Cloud Analytics)\nMobile Hub, AppSync, DeviceFarm, Pinpoint (Mobile)\nIAM, Cognito, CloudWatch (Access Management)\nGamelift, Sumerian\nAmazon MQ, SNS, SQS, SWS and Step Functions\nMigration Hub, Snowball\nArtifact, Cloud HSM, Directory Service, Guard duty, Inspector, WAF and Shield, Single sign on, etc\nWe will be learning each of them in some depth building practical demonstration, and certain projects on topics like Lambda, IAM, API Gateway, etc. At later parts we would develop and deploy our test applications on AWS.",
      "target_audience": [
        "Anyone who just wants to learn and test Amazon Web Services Platform or any developer willing to develop his/her application over Amazon Cloud- Amazon Web Services."
      ]
    },
    {
      "title": "Building a Full-stack Multilingual Blog with Next.js 13.4",
      "url": "https://www.udemy.com/course/nextjs13-fullstack-blog-seo-internationalization/",
      "bio": "Learn how to build a full-stack, multilingual and high performant blog website with Next.js 13.4 and Directus.",
      "objectives": [
        "How to Build Modern UI with NextJS and Tailwind CSS",
        "Latest Features of NextJS 13 such as 'App Directory', 'Server Components', 'Server Actions' etc.",
        "How to Build Roboust and Scalable Applications with NextJS 13",
        "How to Build Your Own Headless CMS with Directus",
        "How to Integrate NextJS with Headless CMS",
        "How to Create Multilingual Applications with NextJS 13",
        "How to Get Full SEO Scrore with Metadata API of NextJS13",
        "How to Deploy NextJS with Vercel",
        "How to Deploy Directus with Railway"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome to the Course!",
          "Project Overview",
          "Why Next.js?",
          "Why Directus?",
          "Course Outline",
          "How to Take the Course?",
          "Prerequisites: Git, Node.js and VS Code."
        ],
        "Building UI with Next.js and Tailwind CSS": [
          "Let's Create a Next.js Project",
          "Project Clean-up",
          "Key Concept: File-based Routing",
          "Nested Routes and Navigating Between Pages",
          "Key Concept: Layouts",
          "Navigation Component",
          "Creating Site Configuration",
          "Footer Component",
          "Social Links Component",
          "Creating Dummy Data and Types",
          "Homepage Layout",
          "Post Card Component",
          "Post Content Component",
          "Different Layouts of Post Card Component",
          "Post List Component",
          "Calculating Reading Time and Relative Date",
          "Reversed Layout for Post Card Component",
          "CTA Card Component",
          "Key Concept: Responsivity with Tailwind CSS",
          "Let’s Make the Homepage Responsive",
          "Key Concept: Dynamic Routes",
          "How to Generate Static Params",
          "Building Category Page",
          "Fixing Bug: Z-index of Navigation",
          "Dynamic Route for Post Page",
          "How to Return 404 for Post Page",
          "Post Hero Component",
          "Layout of Post Page",
          "Social Share Component",
          "Let's Create First Enviroment Variable",
          "Post Body Component",
          "Finishing Touches"
        ],
        "Building CMS with Directus": [
          "Key Concept: What is Directus",
          "3 Ways to Create Directus Project",
          "Deploying Directus with Railway",
          "Creating AWS Account for S3 Storage",
          "Connecting AWS and Directus",
          "Quick Intro about Directus CMS",
          "Creating 'Posts' Collection",
          "Creating 'Categories' Collection",
          "Key Concept: Relational Data",
          "Creating Relations Between Tables",
          "Creating Categories in Directus",
          "Let’s Create our First Blog Post",
          "Key Concept: APIs and CRUD Operations",
          "Securing Data with Directus"
        ],
        "Integrating Next.js and Directus": [
          "Installing Directus JS SDK",
          "Fetching Homepage Data",
          "Fixing Image 'src' Error",
          "Optimising Images on the Fly with Directus",
          "Fetching Category Page Data",
          "Generating Static Params for Category Pages",
          "Generating Static Params for Post Page",
          "Fetching Post Page Data",
          "Parsing Post Body",
          "Styling Post Body",
          "Parsing Images as Next Image",
          "Server Actions for Subscribers Form",
          "Revalidate Data and Reset Form",
          "Fixing Typescript Error"
        ],
        "Internationalization (Multi-lingual Website)": [
          "Key Concept: Internationalization",
          "Internationalization Configuration",
          "Creating Localised Routes",
          "Key Concept: Middleware",
          "Redirecting User with Middleware",
          "Creating Dictionaries",
          "Creating 'getDictinoary' Function",
          "Building Localised UI",
          "Creating Localised Data for Categories in Directus",
          "Creating Localised Data for Posts in Directus",
          "Fetching Localised Data - Homepage",
          "Fetching Localised Data - Categories",
          "Fetching Localised Data - Post Page",
          "Creating Language Switcher Component"
        ],
        "How to Get Full Green SEO Score with Next.js 13": [
          "Key Concept: Metadata API",
          "File-based Metadata: Adding Favicon and OG Image",
          "Static Metadata: Titles and Description for Homepage",
          "Dynamic Metadata: Different Description for Different Locales",
          "Dynamic Metadata: Titles and Descriptions for Category Page",
          "Title Templates, Default and Absolute Values",
          "Dynamic Metadata: Titles and Descriptions for Post Page",
          "Opengraph Metadata",
          "Canonical and Alternate URLs",
          "Schema Markup for Articles with JSON",
          "Dynamic OG Image Generation for Post Page",
          "Dynamic OG Image Generation for Category Page",
          "Creating Robots.txt File",
          "Localised Sitemaps",
          "Google Analytics Integration",
          "Fixing Server Actions Error",
          "Transforming CTA Card into a Client Component",
          "Fixing CORS Error",
          "Google Search Console Integration"
        ],
        "Deploying the Project": [
          "Let’s Try to Build Our App",
          "Creating Github Repo for our Project",
          "Deploying Next.js with Vercel",
          "Search Console and Sitemap",
          "Checking Page Speed Score",
          "Fixing LCP Problem",
          "On-demand Revalidation - 1",
          "On-demand Revalidation - 2"
        ]
      },
      "requirements": [
        "No prior NextJS knowledge is required. You will learn everything from scratch.",
        "React knowledge is recommended. You should at least have an idea about React.",
        "Javascript knowledge is strongly recommended. This is not a begginer course for new comers to Javascript world."
      ],
      "description": "Are you looking to build a modern, full-stack blog with the latest technologies? Look no further than this comprehensive Udemy course, which will guide you through the process of building a professional-grade blog using Next.js, Directus CMS, and Tailwind CSS.\nOver the course of 108 lectures, you will learn how to build a responsive, performant blog with dynamic routing and localisation, complete with search engine optimisation, social media integration, and Google Analytics. You will also learn how to set up a Directus CMS instance and populate it with content, as well as how to deploy your project using Vercel.\nThe course begins with an overview of the project and why these technologies were chosen, followed by instructions on how to set up your development environment. You will then dive into building the UI using Next.js and Tailwind CSS, starting with file-based routing and layouts, before moving on to more complex features like dynamic routing and generating static params.\nOnce the UI is in place, the focus shifts to integrating with Directus CMS. You will learn how to set up a Directus instance and create tables and relations for your blog content. You will then use Directus JS SDK to fetch data from Directus and generate metadata for your blog pages, including titles, descriptions, and OG images.\nThroughout the course, you will be introduced to key concepts such as APIs, CRUD operations, middleware, and responsive design. You will also learn how to optimise your images on the fly using Directus, as well as how to create localised routes and data for internationalisation.\nBy the end of the course, you will have a fully functional blog with a polished UI, dynamic routing, localisation, and SEO optimisation. You will also have the skills to set up and manage a Directus CMS instance, as well as the knowledge to deploy your project to the web.\nThis course is perfect for beginner-level developers who are looking to expand their skills and build a real-world project. It assumes a basic knowledge of HTML, CSS, and JavaScript. Whether you are looking to build your own blog or simply want to learn the latest web development technologies, this course has everything you need to succeed.\nEnroll now and start building your own full-stack blog today!",
      "target_audience": [
        "Beginner React Developers / Learners",
        "Beginner Javascript Developers / Learners",
        "Beginner Nextjs Developers / Learners",
        "Experienced Developers who wants to learn advaced use cases such as Internationalization or Metadata API"
      ]
    },
    {
      "title": "Learn PHP Programming for Absolute Beginners",
      "url": "https://www.udemy.com/course/learn-php-programming-for-absolute-beginners/",
      "bio": "Learn Fundamental of PHP as per the Current Industry Demands.",
      "objectives": [
        "You will acquire knowledge of basic Functions, Arrays and many more..",
        "You will be able to create your basic PHP website"
      ],
      "course_content": {
        "Introduction to PHP": [
          "Introduction",
          "Getting XAMPP Brackets and Starting Server",
          "First PHP Script",
          "Variable in PHP",
          "If, If else, If else if and Swith",
          "While, Do while, For and Foreach"
        ],
        "Object Oriented Features": [
          "Functions in PHP",
          "Require, Includes and some String Functions",
          "Classes Overview",
          "Scoping Rules and the Global Keyword",
          "Static Properties"
        ],
        "Arrays and Variable": [
          "Arrays in PHP",
          "$_SERVER Variables in PHP",
          "$_GET in PHP",
          "$_POST in PHP",
          "$_REQUEST in PHP"
        ],
        "MySQL Database Insight": [
          "Using PHPMyAdmin",
          "Sample Database",
          "MySQL Connection",
          "MySQL Queries"
        ]
      },
      "requirements": [
        "Knowledge of Basic HTML Tags",
        "Knowledge of some Scripting Language Preferred, but Not Necessary."
      ],
      "description": "PHP is an object oriented general purpose language suitable for a wide variety of tasks. In this course, we'll learn how to use PHP as a server-side scripting language for use in web development.\nThe course consists of four units:\nUnit 1: covers basic syntax, variables, and language features such as loops and decision constructs. We'll also learn how to download and install PHP as a part of the XAMPP distribution so it can be used in the context of a web server running on your local computer.\nUnit 2: PHP's object oriented features will be learned, along with basic function syntax and scoping rules. We'll also talk about some useful string functions.\nUnit 3: Associative arrays will be discussed in Unit 3. Arrays are the key to understanding the mechanism of sending and receiving data via the request mechanism in PHP. We'll learn how to work with data via REQUEST, GET, and POST, and we'll also cover some important server variables exposed by PHP.\nUnit 4: teaches how to integrate MySQL databases with PHP. The concentration here is on the PHP communication with MySQL using the mysqli class in an object oriented style. If you need a refresher on the MySQL, Checkout out MySQL course.\nI hope you enjoy the course, and I look forward to working with you!",
      "target_audience": [
        "Any Fresher Wants to Learn Basic PHP",
        "Expert who Needs to Brush up PHP Skills"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/php-graphic-techniques-captcha-watermark-crop-thumbnail/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Learn the Basics of Programming for Marketers",
      "url": "https://www.udemy.com/course/basic-programming-for-marketers/",
      "bio": "Learn how the web works, how to use tools like Terminal, Git & GitHub, and how to install and use Open Source Libraries!",
      "objectives": [
        "Talk about how web tech works on a high level",
        "Navigate their computer using the terminal",
        "Run Python scripts on their computer",
        "Add libraries and other functionality to their system",
        "Share and download other people's code using Git and Github"
      ],
      "course_content": {},
      "requirements": [
        "Nothing! Just come as you are."
      ],
      "description": "Start becoming a technical marketer right now.\n\nStart writing and interacting with other people's code on your computer\nStart sharing code with other marketers or your company using Git and Github\nStart talking about web technology on the same level of developers\nThis course is going to cover a variety of basic areas that are core to you becoming a technical marketer. If you want to start hacking together clever solutions to problems or start talking more intelligently about technology, this is your launch point. This is your foundation to keep learning on your own and through other technical marketing courses.\n\nIn this course, you will:\nLearn how web tech works so you can talk about it more intelligently with developers\nLearn how apps, software, and programs are built\nLearn how a site like Facebook works on the backend\nLearn how to navigate your computer using text entry in the Terminal\nLearn how to access common programming languages like Python\nLearn how to add new libraries and functionality to your system\nLearn how to share and download code using Git and Github\nLearn to be a more technical marketer\nAs a bonus, you'll also receive a free copy of our eBook, \"Become a Technical Marketer\"\nOnce enrolled, you will have access to this course for the rest of your life. You will always be able to come back to this class to review material or to learn new material. Try this course for yourself and see how quickly and easily you can develop some basic programming skills and understanding.",
      "target_audience": [
        "This course is meant for programming newcomers, or students who have done some programming through sites like Codecademy but never done it on their own system."
      ]
    },
    {
      "title": "XML Mastery: Unleashing the Power of Data Markup",
      "url": "https://www.udemy.com/course/xml-novice-to-ninja/",
      "bio": "Unlock the power of XML covering everything from basic markup to advanced parsing and integration techniques.",
      "objectives": [
        "Fundamentals of XML: Understand the structure, syntax, and benefits of XML as a markup language.",
        "XML Architecture: Explore the architecture of XML documents and how they are processed.",
        "Document Type Definitions (DTD): Learn to create DTDs to define the structure and validity of XML documents.",
        "Extensible Stylesheet Language (XSL): Master the creation and application of XSL for transforming XML documents.",
        "Document Object Model (DOM): Gain proficiency in using DOM for programmatic manipulation of XML documents.",
        "XML Schema Definition (XSD): Understand the role of XSD in validating and defining the structure of XML documents.",
        "XML Parsing Techniques: Explore various parsing methods including DOM, SAX, and StAX for extracting data from XML documents.",
        "Integration with Java: Learn how to parse XML documents and integrate XML data into Java applications.",
        "Web Development with XML: Discover how XML is used in web development, including HTML integration and AJAX principles.",
        "Advanced Concepts: Dive into advanced topics such as XPath, XLink, JAXB, and XML-based web services."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of computers and the internet",
        "Basic knowledge about software and their terms",
        "A passion to learn and interest in IT",
        "A desire to expand your knowledge about coding and IT in general"
      ],
      "description": "Welcome to our comprehensive course on XML (eXtensible Markup Language) and its various applications in modern technology! XML has become a cornerstone in data representation and exchange across diverse industries, making it an essential skill for anyone involved in software development, web development, data management, and more. In this course, we will take you on a journey from the basics of XML to advanced techniques and applications, equipping you with the knowledge and hands-on experience needed to excel in this field.\nThroughout this course, you will explore XML from its fundamental concepts to its practical implementation in real-world scenarios. You will learn about XML's structure, syntax, and its role in facilitating information sharing and interoperability between different systems. We will cover various XML-related technologies such as Document Type Definitions (DTDs), XML Schema Definition (XSD), XSLT (eXtensible Stylesheet Language Transformations), and XML parsing techniques using DOM (Document Object Model) and SAX (Simple API for XML).\nFurthermore, this course will not only focus on the theoretical aspects of XML but also provide hands-on experience through practical exercises and projects. You will work on creating XML documents, defining schemas, transforming XML data using XSLT, parsing XML in different programming languages such as Java and Android, and integrating XML with web development technologies like HTML, CSS, and JavaScript.\nWhether you're a beginner looking to understand the basics of XML or a seasoned developer seeking to enhance your XML skills and leverage its power in your projects, this course is designed to cater to your learning needs. By the end of this course, you will have a solid understanding of XML fundamentals, proficiency in XML-related technologies, and the confidence to apply XML effectively in your projects and professional endeavors. Join us on this exciting journey into the world of XML!\nSection 1: XML Hands-on!\nIn this foundational section, students dive into the world of XML and Markup Language, understanding their core concepts and architecture. They begin with an exploration of XML's role in facilitating information sharing and its benefits in various applications. Through practical examples, students learn how XML is used in specialized domains like chemical markup language. Additionally, they explore fundamental concepts such as comments, processing instructions, and the classification of character data between XML tags. With hands-on exercises, students create simple XML documents and gain proficiency in styling XML presentations using style sheets.\nSection 2: XML DTDs Training\nBuilding upon their understanding of XML, students delve into Document Type Definitions (DTDs) in this section. They learn about the structure and components of DTDs, including elements, attributes, and entities. Through both internal and external DTD examples, students grasp the importance of DTDs in defining the structure and constraints of XML documents. They also explore validation techniques to ensure the integrity and compliance of XML documents with defined DTDs.\nSection 3: Android Web Service Parsing XML API\nThis section focuses on practical XML parsing techniques within the context of Android app development. Students learn to parse XML data from remote sources using both DOM and SAX parsers, enabling dynamic data retrieval and display. They also gain insights into multithreading concepts for efficient data download and processing. By implementing XML parsing in Android applications, students enhance their skills in building responsive and data-driven mobile apps.\nSection 4: Web Development with XML\nIn this section, students explore XML's role in modern web development. They learn about XML's format, structure, and schema, and how it complements HTML and CSS in web design. Through hands-on exercises, students practice parsing XML data using DOM and SAX parsers, understanding their advantages and use cases. They also delve into advanced topics such as XSLT transformations and JAXB for XML data binding, equipping them with essential skills for building robust web applications.\nSection 5: XML and Java - XML and Java Application Training\nThis section bridges the gap between XML and Java programming, emphasizing their integration in building enterprise-grade applications. Students learn core Java concepts and object-oriented programming principles, essential for developing Java-based XML applications. They explore XML's role in Java technologies such as Servlets, AJAX, and Hibernate, gaining practical experience in implementing XML solutions within Java-based frameworks. By the end of this section, students possess a comprehensive understanding of XML's application in Java development and its significance in building scalable and efficient software solutions.\nSection 6: XSD (XML Schema Definition) Beginners Training\nIn the final section, students focus on XML Schema Definition (XSD), a crucial aspect of XML document validation. They learn about XSD data types, schema validation techniques, and the role of XSD in ensuring XML document integrity. Through practical examples and exercises, students gain proficiency in defining and validating XML schemas, enabling them to create well-structured and compliant XML documents. Additionally, they explore advanced topics such as XSL transformations and JAXB implementations, further expanding their XML skills and expertise.",
      "target_audience": [
        "Beginner Programmers: Those new to programming and looking to understand XML fundamentals and its integration with Java.",
        "Web Developers: Professionals aiming to enhance their skills in web development, particularly in XML-related technologies.",
        "Java Developers: Individuals seeking to expand their knowledge of XML parsing and integration with Java applications.",
        "Software Engineers: Those interested in mastering XML parsing techniques and leveraging XML in software development projects.",
        "Students: Computer science students or enthusiasts looking to explore XML and its applications in depth for academic or practical purposes."
      ]
    },
    {
      "title": "Complete Angular course for 2020",
      "url": "https://www.udemy.com/course/complete-angular-developer-course/",
      "bio": "Modern and latest Angular 9 with typescript and RxJS",
      "objectives": [
        "Complete knowledge of Angular framework",
        "Typescript",
        "RxJs",
        "Build 10 different applications",
        "In depth about Angular like components, modules, services, routing, route protection etc"
      ],
      "course_content": {},
      "requirements": [
        "Basics of JS only (Typescript is included)"
      ],
      "description": "Welcome to complete Angular developer course.\nThis is a fresh course totally designed on latest Angular in 2020. Angular is already a complex and big framework. To understand it, you don’t just need best coding practices but also best teaching practices, so that you finish the course.\n\n\nAngular is a javascript based framework that is powerful and is used at majority of corporate world. Having deep understanding of framework will not only increase your chances of getting hired but also increase your chances to get salary hike.\nIn this course, we will start from absolute scratch. We will install required tools to get started with Angular. After installing them, we will move towards creating few initial app, we will move towards creating app from scratch. We will delete everything and will recreate entire Angular app. This will give insight about every file and structure.\nAfter that we will take projects to understand Angular terms like 2 way binding, dependency injection, Reactive forms etc.\n\n\nThis course also includes Typescript as this can be a small challenge to get started with Angular. Enough is covered that you will not get a speed-braker in this entire course. RxJS is also included in this course. An entire section on RxJS will clear your concepts and you will be able to use it in Angular projects.\nFinally, we will move towards creating Apps that use Authentications. This will help us to understand route protection too. After that we will handle Multiple API end points. At the end we will create an app inspired by Instagram, where we will use everything from the course. Routes, authentication, handling API, Firebase and more. This app can be worked more and can be used a refined portfolio application.\n\n\nI am really excited to get started with this fresh Angular course with you!\nCatch you inside the course!",
      "target_audience": [
        "Beginners in web development",
        "Students interested in learning Angular (without worrying about complex jargons)"
      ]
    },
    {
      "title": "Complete jQuery Course: Learn From Beginner To Advanced",
      "url": "https://www.udemy.com/course/complete-jquery-course-learn-from-beginner-to-advanced/",
      "bio": "Learn the jQuery Course Beginner To Advanced and Fast and Easily with This Comprehensive jQuery Guide.",
      "objectives": [
        "jQuery Syntax",
        "jQuery Event Methods",
        "Animate with jQuery",
        "Callback Functions",
        "Get and Set CSS Classes",
        "jQuery Event Methods",
        "jQuery Checkbox Radio Button Validation",
        "jQuery Toggle Classes",
        "Filtering",
        "jQuery - AJAX GET and POST Methods",
        "Ajax with Global Events"
      ],
      "course_content": {
        "Introduction": [
          "Install JQuery",
          "jQuery Syntax",
          "jQuery Selectors",
          "jQuery Event Methods",
          "jQuery Event Listeners",
          "Form Event Triggers jQuery",
          "jQuery Checkbox Radio Button Validation",
          "jQuery Toggle Classes"
        ],
        "jQuery Effects": [
          "Fading Methods",
          "Hide and Show",
          "Sliding Methods",
          "Animate with jQuery",
          "Stop Method",
          "Callback Functions",
          "Method Chaining"
        ],
        "jQuery HTML": [
          "Get Content and Attributes",
          "Set Content and Attributes",
          "Add Elements",
          "Remove Elements/Content",
          "Get and Set CSS Classes",
          "CSS Method",
          "Dimension Methods"
        ],
        "jQuery Traversing": [
          "Methods for Traversal",
          "Ancestors",
          "Descendants",
          "Siblings Method",
          "Filtering"
        ],
        "jQuery AJAX": [
          "jQuery AJAX load",
          "jQuery - AJAX GET and POST Methods",
          "Ajax with Global Events",
          "Ajax with Local Events"
        ],
        "jQuery Misc": [
          "NoConflict Method"
        ]
      },
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Welcome to the \"Complete jQuery Course: Learn From Beginner To Advanced,\" your comprehensive guide to mastering one of the most popular and powerful JavaScript libraries for web development. Whether you're new to web development or seeking to enhance your skills, this course is meticulously designed to take you on a transformative journey from beginner to advanced proficiency in jQuery.\n\n\njQuery has revolutionized the way developers write JavaScript, simplifying common tasks such as HTML manipulation, event handling, and animation. This course is tailored to provide you with a deep understanding of jQuery, empowering you to build dynamic and interactive web applications with ease.\n\n\nCourse Outline:\nInstall jQuery\njQuery Syntax\njQuery Selectors\njQuery Event Methods\nhide() and show()\nFading Methods\nSliding Methods\nAnimate with jQuery\nstop() Method\nCallback Functions\nMethod Chaining\nGet Content and Attributes\nSet Content and Attributes\nAdd Elements\nRemove Elements/Content\nGet and Set CSS Classes\nCSS Method\nDimension Methods\nMethods for Traversal\nAncestors\nDescendants\nSiblings Method\nFiltering\njQuery Event Listeners\nForm event triggers jQuery\njQuery Checkbox Radio Button Validation\njQuery Toggle Classes\njQuery AJAX load\njQuery - AJAX GET and POST Methods\nnoConflict() Method\nAjax with Global Events\nAjax with Local Events\n\n\nEmbark on your journey to master jQuery! Enroll now in the \"Complete jQuery Course: Learn From Beginner To Advanced\" and acquire the skills needed to build dynamic and interactive web applications. Whether you're a beginner or have some experience in web development, this course equips you with the knowledge and skills to become proficient in jQuery. Don't miss this opportunity to elevate your web development skills with jQuery!",
      "target_audience": [
        "Anyone Who Want to Learn jQuery"
      ]
    },
    {
      "title": "Yii2 Complete Restful API guide",
      "url": "https://www.udemy.com/course/yii2-complete-restful-api-guide/",
      "bio": "Learn how to build professional RESTful APIs with Yii2, PHP, and Postman as a client",
      "objectives": [
        "Build stateful and stateless API",
        "Build web services with Yii2",
        "Work with JSON data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is API",
          "What makes a good API",
          "What is Rest API",
          "Summary"
        ],
        "Setting up tools to develop restful API with Yii2": [
          "Setting up your local server - XAMPP",
          "Setting up your composer",
          "Setting up your IDE",
          "Setting up postman"
        ],
        "Setting up framework to local server": [
          "Download compressed yii2 framework",
          "Install yii2 using composer",
          "Accessing yii2 framework from local server"
        ],
        "Understand yii2 architecture and file structures": [
          "Introduction to MVC",
          "Understand yii2 structure",
          "Controller",
          "View",
          "Model"
        ],
        "Folders and router Restructuring": [
          "Enabling pretty URL",
          "Setup .htaccess to enable proper routing"
        ],
        "API Folders and Structures": [
          "Introduction and Creating basic API folders",
          "Creating your API default files",
          "Pointing your api to vendor and configuring your aliases",
          "API Config file",
          "Creating API module or version using Gii",
          "Folders restructure to have two main directories",
          "Removing web from browser address using .htccess",
          "Setting project baseUrl"
        ],
        "Routing with parameters": [
          "Customising original URL",
          "Retrieving parameters from URL",
          "Remove parameter title from URL",
          "Restricting the data type"
        ],
        "Input and Response Formatting": [
          "Disable Csrf validation",
          "Enabling JSON input",
          "Posting and retrieving json input",
          "Modify response"
        ],
        "Database": [
          "Creating database and connect app to database",
          "Creating tables"
        ],
        "Gii": [
          "Generating models",
          "Generating controller",
          "Moving generated files to API",
          "Correcting namespaces"
        ]
      },
      "requirements": [
        "Should have PHP and Yii2 basic knowledge",
        "JSON knowledge will be an added advantage"
      ],
      "description": "This course will teach you how to Build and design your own web project with Yii2 framework, to consume services and APIs online.\nIn this course, you will learn the step-by-step processes to get started with API development with Yii2 for general consumption. You will learn how to use HTTP protocol to consume the resources your web services is meant to provide.\nAre you a frontend developer, do you have a mobile product idea, do you want to create your own startup or you just want to build a technology but you need an API? This is course for you.\n\n\nWhat are you going to learn?\nUnderstand API and how it works better\nLearn, what is HTTP and how it works\nYou will learn how to use postman to test API\nHow to properly install Yii2 framework\nHow to correctly structure your API project\nYou will understand how and when Gii comes to play\nHow to properly configure your response for consumption\nHow to send request to API and how to consume it\nHow to authenticate access to your API using different options\nHow to version your API if your update is not backward compatible\nAnd many more.\n\nDon't wait, and enroll today to take another step toward web services mastery!\nLooking forward to having you in my course!",
      "target_audience": [
        "Yii developer that wants to build restful API with Yii2 framework",
        "This course is for all PHP lovers"
      ]
    },
    {
      "title": "Learn to Deploy Containers on AWS in 2022",
      "url": "https://www.udemy.com/course/learn-to-deploy-containers-on-aws-in-2021/",
      "bio": "Choosing the right AWS service to deploy your containerized applications",
      "objectives": [
        "How to deploy containerized applications on AWS",
        "How to pick the right service for your use-case",
        "Understanding pros and cons of new AWS services for containerized applications",
        "Hands-on experience on every service discussed in the course"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "AWS Amplify: Deploying containerized web apps": [
          "Introduction",
          "Using Amplify CLI to deploy containers",
          "Why is it important to understand first?",
          "Evolution of containers and serverless functions - (A Refresher)",
          "Containers Vs. AWS Lambda Functions",
          "Where to deploy containers on AWS?",
          "Resources",
          "Web API Concerns",
          "AWS Networking (Refresher)",
          "Approach 01 - Using Amazon ECS, Fargate and ALB to serve container workloads",
          "Approach 02 - Using Amazon ECS, Fargate, CloudMap, Cognito and API Gateway",
          "How to install and configure AWS Amplify CLI?",
          "Initializing an Amplify project",
          "Configuring the project to use containers",
          "Adding Dockerfile and docker-compose file",
          "Express.js API with TypeScript",
          "How to install Docker?",
          "Dockerizing the Express API",
          "Deploying to AWS with Amplify",
          "AWS Resources Walkthrough",
          "A Note on the Operational Costs",
          "Section wrap up"
        ],
        "AWS App Runner: Deploying containers at low cost": [
          "Introduction",
          "AWS App Runner features",
          "More about App Runner Service",
          "App Runner Pricing",
          "Auto Scaling in App Runner",
          "Demo: AWS App Runner Console Walkthrough",
          "Clone the repo",
          "Demo: AWS App Runner with CDK"
        ],
        "Additional Content": [
          "AWS VPC: A Crash Course",
          "AWS CDK: A Crash Course"
        ]
      },
      "requirements": [
        "Basic understanding about cloud computing"
      ],
      "description": "This is the era of serverless containers and serverless functions. Many businesses have already embraced public cloud platforms like AWS to deploy their production applications that are built on serverless architectures. Therefore, as developers, we must be familiar with the deployment aspects of containers and functions to serverless cloud architectures.\nIn this course, you will receive hands-on experience on how to deploy container workloads to the AWS cloud platform.\nWe will also discuss how to use AWS Amplify CLI to simplify the container deployment process while learning ins and outs of the architectures that the containers get deployed to. You will learn how to configure the network architecture to securely deploy containers and how to expose your containers to the outside world using Load Balancers and API Gateways.\nAfter the introduction section, you will two main approaches to deploying containers with Amazon ECS at scale.\nApproach 01 - How to use Amazon ECS, AWS Fargate, and Application Load Balancer for container workload management\nApproach 02 - How to use Amazon ECS, AWS Fargate, API Gateway, and Cloud Map for container workload management\nYou will also understand the basics of,\nService discovery\nContainer auto-scaling and load balancing\nVirtual network setup\nSecurity considerations\nNext, we will also discuss the AWS App Runner service which was recently released by AWS. It helps us to deploy containers at a low cost preventing the compute cost for idle containers. In this section, we will learn both theories and practicals about AWS App Runner.\nI have also included an Additional Content section which includes crash courses from my YouTube channel. These videos help you to understand Virtual Private Cloud (VPC), Cloud Development Kit(CDK) which we commonly use when working with containers.\nHope you'll enjoy this course. Let me know if you have any concerns.\nHappy Learning!\n- Manoj",
      "target_audience": [
        "Developers who are interested in deploying containers on AWS cloud platform"
      ]
    },
    {
      "title": "Create an Image Upload Web App with Python and Django",
      "url": "https://www.udemy.com/course/create-an-image-upload-web-app-with-python-and-django/",
      "bio": "Practical Step by Step Image Upload Web App with Python and Django",
      "objectives": [
        "Setup Python and Django Development Environment",
        "Create Django project",
        "Create a Django app",
        "Create a model",
        "Create routes",
        "Create view functions",
        "Create templates",
        "Using pillow to interact with images"
      ],
      "course_content": {
        "Setting up a Python and Django development environment": [
          "Introduction",
          "Installing Python on Windows",
          "Installing Homebrew for Mac",
          "Installing Xcode Tools for Mac",
          "Installing Python 3 on macs",
          "Installing Atom on Windows",
          "Installing Atom on Macs",
          "Create a virtual environment on Windows",
          "Create a virtual environment on a mac",
          "Activate a virtual environment on Windows",
          "Activating virtual environment on a mac",
          "Update pip",
          "Install Django",
          "Create a superuser account"
        ],
        "Creating the Image Upload App": [
          "What we will create",
          "Create a django project",
          "Start Django development server",
          "Creating a Django app",
          "Installing Pillow",
          "Creating a Model",
          "Interacting with Models from admin page",
          "Defining URL Routes",
          "Creating Views",
          "Django Templates",
          "Populating Templates",
          "Running Your App",
          "source code",
          "Thank You"
        ]
      },
      "requirements": [
        "Python Required (The installation is covered in the course)",
        "Django Required (The installation is covered in the course)",
        "Pillow Required (The installation is covered in the course)"
      ],
      "description": "What is Python?\nPython is a popular programming language.\nIt is used for:\nweb development (server-side),\nsoftware development,\nmathematics,\nsystem scripting.\nWhat can Python do?\nPython can be used on a server to create web applications.\nPython can be used alongside software to create workflows.\nPython can connect to database systems. It can also read and modify files.\nPython can be used to handle big data and perform complex mathematics.\nPython can be used for rapid prototyping, or for production-ready software development.\nDjango is a high-level Python Web framework that encourages rapid development and clean, pragmatic design.\nIn this course we are going to create an image upload web application from scratch step by step using Python and Django.\nWe will be using a Python package called pillow which will let us interact with images in Django.\nThis is not a Python and Django beginners course so having some working knowledge of Python and Django as well as HTML and CSS will help you better understand what is going on as we build the project.\nWe will begin by setting up a Python and Django Development environment for Windows and MacOS and the proceed with creating a Django project and Django App. This will be followed by creating a model for our app which will create a database and table in the default Django SQlite3 database to store our images and text fields .   We will create a Django super user account  and you will learn how to interact with a model from the administrative interface of Django. We will  also create routes for our app and templates.\nThe course is approximately two hours , has two sections and 27 lectures .\nTopics covered includes:\nSetup Python and Django Development Environment\nCreate Django project\nCreate a Django app\nCreate a model\nCreate routes\nCreate view functions\nCreate templates",
      "target_audience": [
        "Fairy new beginners to Python and Django"
      ]
    },
    {
      "title": "The Complete Firebase & JavaScript Beginner's Friendly Guide",
      "url": "https://www.udemy.com/course/javascript-firebase-build-full-stack-web-apps-faster/",
      "bio": "Build A Complete CRUD Web App using Firebase Firestore and JavaScript start to finish from scratch! (CSS Flexbox)",
      "objectives": [
        "Be able to build any full-stack web app you want to advance your junior developer career.",
        "Create feature-rich, scalable, and secure web applications without the need for extensive backend development for your business or startup.",
        "Learn the latest version of Firebase 10 to stay current with technology trends and be a more attractive candidate for job opportunities and freelance projects.",
        "Master HTML, CSS & JavaScript including ES6, DOM manipulation, events, functions, promise (async/await), error handling and much more.",
        "Master No-SQL database queries using Cloud Firestore.",
        "Craft any type of professional looking real world user interface using CSS Flexbox to enhance your web designing skills."
      ],
      "course_content": {
        "Getting Started": [
          "Create A Brand New Firebase 9/10 Project",
          "Setting Up Firebase 9/10 Via CDN",
          "Setting Up Firebase 9/10 Via NPM"
        ],
        "Firestore Database CRUD Queries": [
          "Getting Started With Firestore Database",
          "Add Data To Cloud Firestore 9/10 Using addDoc()",
          "setDoc() - Add Data To Cloud Firestore Using setDoc() Method",
          "setDoc() - Update Data To Cloud Firestore",
          "updateDoc() - Update Data To Cloud Firestore",
          "updateDoc() - Delete Document Field Cloud Firestore",
          "deleteDoc() - Delete A Document",
          "Get Document Data By ID From A Collection Using getDoc()",
          "Get All Documents Data From A Collection Using getDocs()"
        ],
        "Build A Simple CRUD App": [
          "What You Will Be Building By The End Of This Module",
          "Setting Up The Project Structure",
          "Create Two Column Base Layout Using CSS Flexbox",
          "Create A Header",
          "Create A Custom Pop-up Modal Window",
          "Design Add Contact Form",
          "Open & Close Add Contact Modal Window",
          "Form Validation 1 - Check Required Fields",
          "Form Validation 2 - Email, Age & Phone Validation",
          "Add Firebase To The Project",
          "Add User Data To The Cloud Firestore Database",
          "Get Contacts Data From Cloud Firestore",
          "Design Contacts List Item",
          "Display Contacts Data As List",
          "Update Live Changes When Adding Data",
          "Show Contacts Data On Detail View",
          "Edit Contact",
          "Delete Contact",
          "Make Responsive Contacts App",
          "Download A Complete Source Code"
        ],
        "Bonus": [
          "Firebase JavaScript Cheatsheet PDF"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS",
        "No Firebase experience needed - I'll teach you everything you need to know",
        "No JavaScript experience required",
        "Time and commitment",
        "I'll walk you through with easy to follow step-by-step instructions from scratch"
      ],
      "description": "Welcome to The Complete Firebase 9/10 & JavaScript ES6 Beginner's Friendly Guide, the only course you need to learn and code to become a full-stack web developer. With 5K students and a 4.7 average, my latest Firebase & JavaScript beginner's course is currently one of the HIGHEST-RATED Firebase courses on Udemy.\n\n\nWith almost 5 hours of HD video content, this Firebase & JavaScript course is the most up-to-date Firebase course available online. Even if you've no experience with Firebase, this course will take you from beginner to pro!\n\n\nWhy take this course?\n\nThe course is taught by the instructor at SoftAuthor, a Canadian-based software training & development company.\n\nIn this 2024 course, you'll be learning the latest tools and techniques used at big companies such as Google, Instacart, Alibaba, and The New York Times.\n\nThis course is thoughtfully structured with a beginner-friendly approach in all aspects to make it simple and easy to follow by building a professional-looking real-world full-stack web app with me.\n\nThe curriculum was carefully developed over 1 year, with comprehensive student feedback.\n\n\nThe course is constantly updated with new content, projects, and modules determined by you, the students!\n\n\nI'll take you step-by-step through engaging and fun video tutorials that are rich in content!\n\n\nThroughout this fully practical course, we cover a massive amount of tools and technologies, including:\n\n\nJavaScript\n\nVariables\nArrow Functions\nJS Array\nJS Object\nJS For Loop\nReusable Form Validation\nEmpty Check\nEmail Validation\nCharacter Length Validation\nJavaScript Events\nDOM Manipulation\nPromise (Async/Await)\nError Handling\nES6 Modules\nString Interpolation\nHigher Order Functions (forEach)\nDynamic HTML\nDynamic CSS\nControl Flow\nRegex (Regular Expression)\n\n\nFirebase\n\nCreate A Firebase Project\nAdd Firebase SDK To The Web App (CDN)\nAdd Firebase SDK To The Web App (NPM)\nAdd Data To The Firestore Database using addDoc()/setDoc()\nUpdate Data To The Firestore Database using updateDoc()/setDoc()\nDelete Data To The Firestore Database using updateDoc()/deleteDoc()\nGet Data By ID From The Firestore Database using getDoc()\nGet Real-Time Data Updates Using onSnapshot()\n\n\nCSS Flexbox\n\nCreate A Two Column Layout\nCreate A Reusable Header Element\nResponsive Web Layout\n\n\nBy the end of this course, you will be fluently coding in JavaScript and utilizing Firebase as a back-end server to build your own full-stack web apps faster, like a pro!\n\nYou'll also build a portfolio of a complete full-stack web app that you can show off to any potential employer.\n\n\nREMEMBER… I'm so confident that you'll love this course that's why all eligible courses purchased on Udemy can be refunded within 30 days, provided the request meets the guidelines in their refund policy. (please refer to the Udemy Refund Policy for more)\n\n\nDon't just take my word for it, check out what existing students have to say about the course:\n\n\n\"The instructor's explanations were clear, concise, and engaging, making complex topics easy to understand. Overall, it exceeded my expectations, and I'm grateful for the knowledge gained. A definite 5-star rating!\" - Jennifer I.\n\n\n\"The Firebase & JavaScript course exceeded my expectations in every way. The instructor, Raja Tamil, demonstrated a deep understanding of the subject matter and presented the content in a clear and concise manner. I highly recommend this course to anyone looking to master Firebase and JavaScript for building dynamic web apps.\" - Sriram S\n\n\"It's been thrilling to learn from the tutor\" - David M G.\n\n\n\"Amazing explanation by the tutor. I highly recommend for firebase and JavaScript developer to learn in-depth!!\"  - Manish Kumar V.\n\n\"Very clear and easy to follow, best tutorial. One of the videos had the cursor out of focus, but overall the course has really helped me understand Java Script this far.\"  - Walusiku J. M.\n\nSo it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\n\n\nI will be here to support you throughout this journey, so if you ever have any questions, suggestions, or feedback, please do not hesitate to contact me!\n\n\nSo what are you waiting for? Click the buy now button and join one of the highest-rated Firebase courses.",
      "target_audience": [
        "If you want to learn Firebase & JavaScript through building a fun and real world project, then take this course",
        "Junior developers who want to learn the latest version of Firebase 9/10",
        "If you're a front-end developer, take this course to build full-stack web apps without the need for extensive back-end development",
        "Students who want enhance their portfolio and skills to attract more job opportunities.",
        "If you want to take ONE COURSE and learn everything you need to know about full-stack web development, take this course"
      ]
    },
    {
      "title": "Learn tRPC, NextJs & Prisma by building an ultimate blog app",
      "url": "https://www.udemy.com/course/learn-trpc-nextjs-prisma/",
      "bio": "Build a Professional Blog App with NextJs, Tailwind, tRPC, Prisma, and NextAuth",
      "objectives": [
        "Building a ultimate blog app using NextJs, Tailwind, TypeScript, tRPC, Prisma, and NextAuth",
        "How to create a ultimate blog app with NextJs and Tailwind",
        "The ins and outs of tRPC and Prisma",
        "Adding authentication with NextAuth",
        "Typing up the app with TypeScript",
        "Posting articles, liking/commenting/sharing/bookmarking",
        "Updating profiles and avatars",
        "Adding support for multiple tags",
        "Updating featured blog images from Unsplash API",
        "Following, unfollowing, commenting, and bookmarking",
        "Adding suggestions for users to see",
        "Thinking in React & Tailwind CSS",
        "t3 Stack"
      ],
      "course_content": {
        "Introduction": [
          "Trailer",
          "Introduction",
          "Pro tip before you start watching the course"
        ],
        "Initialising the app and building the layout": [
          "Initialising the app using create t3-app and understanding the folder structure",
          "Installing useful VS Code extensions and running the app",
          "Understanding the layout and building the header",
          "Building the main section",
          "Main Section - Building Search + Tags Section",
          "Main Section - Part 2",
          "Building the Sidebar",
          "Sidebar Part 2"
        ],
        "Authentication": [
          "Understanding NextAuth and getting api keys from google cloud console",
          "Running a local PostgreSQL instance using Supabase",
          "Facing problems with setting up local instance ?",
          "Implementing auth flow using NextAuth",
          "Logout Functionality"
        ],
        "Let's build the write modal (popup)": [
          "Creating Modal Component and uplifting the state using Context",
          "Building the form using react-hook-form and validating it using zod"
        ],
        "Understand the data": [
          "I want to congratulate you!",
          "Let's undertstand the entity relationship diagram",
          "Creating the prisma schema",
          "Using a remote serverless Database and seeding the db",
          "Seed Script and GitHub Link"
        ],
        "Creating and fetching posts": [
          "tRPC create post route",
          "tRPC fetch all posts",
          "Building the post page",
          "tRPC fetching a single post"
        ],
        "Like functionality": [
          "Building the like/comment button like medium",
          "tRPC Like feature",
          "tRPC dislike functionality and revalidating the data"
        ],
        "Bookmarking functionality": [
          "building the bookmarking functionality"
        ],
        "Commenting functionality": [
          "Steps to be taken to build commenting functionality",
          "Building an animated sidebar for comments",
          "Create comment mutation tRPC"
        ],
        "User related stuff": [
          "Fetch user reading list aka bookmarks",
          "Save username on sign up using NextAuth ?",
          "Redirecting user to author page",
          "Fetching and invalidating comments on a post",
          "Building user profile page UI",
          "Fetching user posts and rendering them on the user page",
          "Uploading avatar functionality (using Supabase)"
        ]
      },
      "requirements": [
        "Some basic knowledge of HTML, CSS, JavaScript, and web development concepts before taking the course.",
        "Familiarity with React/NextJs and NodeJs"
      ],
      "description": "Are you tired of building basic websites that don't showcase your true potential as a developer?\n\nAre you ready to take on a new challenge and build a professional-grade ultimate blog app that truly showcases your skills?\n\nIf you're nodding your head in agreement, then \"Learn tRPC, NextJs & Prisma by Building an Ultimate Blog App\" is the course for you!\n\nIn this course, I will guide you through the process of creating a dynamic, feature-rich blog app from scratch using modern technologies such as NextJs, Tailwind, tRPC, Prisma, and NextAuth. You'll get the opportunity to implement features such as posting articles, updating profiles and avatars, adding support for multiple tags, updating featured blog images from Unsplash, following, unfollowing, commenting, bookmarking, liking, unliking, filtering by tags, and adding suggestions.\n\nWith a focus on hands-on, practical learning, you'll get the chance to put your skills to the test and build an app that you can be proud of and showcase in your portfolio. Whether you're a beginner or an intermediate developer, this course has something for you to learn and improve your skills.\n\nSo don't let this opportunity pass you by.\n\nEnroll in my course now and start building an ultimate blog app that truly showcases your skills and sets you apart from the competition.\n\nI will be with you every step of the way, providing the guidance and support you need to build this app.\n\nDon't wait any longer to take your development skills to the next level.\n\nSign up now, and let's get started!",
      "target_audience": [
        "For those who want to learn and explore",
        "NextJs, Tailwind, tRPC, and Prisma galore",
        "TypeScript to add a touch of class",
        "Building a ultimate blog app, no longer a hassle",
        "Whether you're a beginner or a pro",
        "This course has something for you to know",
        "So join us and let's build a blog app that's great",
        "With skills that will surely elevate."
      ]
    },
    {
      "title": "PHP : Zero to Hero",
      "url": "https://www.udemy.com/course/php-from-zero-to-e-commerce-with-paypal-api/",
      "bio": "HTML, CSS, Java Script, MySQL and PHP, E-Commerce,JQuery and AJAX, JSON, Web API, PayPal API, OOP and Publishing",
      "objectives": [
        "Use HTML to make web pages",
        "CSS to format web pages",
        "JavaScript to add interactivity to web pages",
        "MySQL database to store data",
        "SQL to manipulate data",
        "PHP to make server side proceesing",
        "Connect PHP to database",
        "Build e-commerce web site",
        "Implement PayPal payment gateway in web site"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Install WAMP and Netbeans",
          "Create and Run your first web site"
        ],
        "HTML": [
          "Introduction to HTML",
          "Your first HTML page",
          "Nested Tag",
          "Ordered and Unordered List",
          "Table",
          "Image",
          "Hyper Link",
          "Div",
          "HTML Form – Part 1",
          "HTML Form – Part 2",
          "HTML Form – Part 3",
          "Video",
          "YouTube Video",
          "HTML Quiz"
        ],
        "CSS": [
          "Introduction to CSS",
          "Inline, Internal and External",
          "Class and ID",
          "Bootstrap – Part 1",
          "Bootstrap – Part 2",
          "Bootstrap – Part 3",
          "Bootstrap – Part 4",
          "Bootstrap – Part 5",
          "Template",
          "CSS Quiz"
        ],
        "Java Script": [
          "Introduction to Java Script",
          "Your first Java Script page",
          "Variable",
          "Conditions",
          "Loop",
          "Functions",
          "Events",
          "DOM - 1",
          "DOM – 2",
          "DOM-3",
          "Timer using setTimeOut",
          "Timer using setInterval",
          "Comment Page",
          "Java Script Quiz"
        ],
        "Database using MySQL": [
          "Introduction to Database",
          "Database and Tables",
          "Add Auto Increment attribute",
          "SQL – Insert",
          "SQL – Update",
          "SQL – Delete",
          "SQL – Select",
          "SQL – Aggregate Functions",
          "SQL – Sub Query",
          "SQL – Join",
          "Import / Export database",
          "Database Quiz"
        ],
        "PHP": [
          "Introduction to PHP",
          "Variables",
          "Conditions",
          "Loop",
          "Cumulative Array",
          "Associative Array",
          "Data Transfer using Get",
          "Data Transfer using Post – 1",
          "Data Transfer using Post – 2",
          "Session",
          "Cookie",
          "PHP and MySQL – 1",
          "PHP and MySQL – 2",
          "PHP and MySQL – 3",
          "PHP and MySQL – 4"
        ],
        "E-Commerce Project": [
          "Use the template",
          "Include Header and Footer",
          "Edit Header and Footer",
          "Login and Signup UI",
          "Signup Implantation",
          "Signup Validation",
          "Login Implantation",
          "Session Implantation",
          "Menu UI – Part 1",
          "Menu UI – Part 2",
          "Menu Implementation – Part 1",
          "Menu Implementation – Part 2",
          "Menu Implementation – Part 3",
          "Menu Implementation – Part 4",
          "Menu Implementation – Part 5",
          "Menu Implementation – Part 6",
          "Menu Implementation – Part 7",
          "Order Implementation – Part 1",
          "Order Implementation – Part 2",
          "Order Implementation – Part 3",
          "Show Bill – Part 1",
          "Show Bill – Part 2",
          "PayPal – Part 1",
          "PayPal – Part 2",
          "Project Quiz"
        ],
        "Bonus Videos": [
          "Source Code"
        ],
        "Web API and JSON": [
          "Introduction to JSON and Web API",
          "JSON Encoding",
          "JSON Decoding",
          "Call Web API – Books Info",
          "Call Web API – Weather Data"
        ],
        "JQuery and AJAX": [
          "Introduction to AJAX and jQuery",
          "JQuery First Example",
          "JQuery and Web Contents",
          "AJAX – Post",
          "AJAX – Get",
          "Chat Example - 1",
          "Chat Example - 2",
          "Chat Example - 3",
          "Chat Example - 4"
        ]
      },
      "requirements": [
        "The ability to use web",
        "Basics of programming is prefered"
      ],
      "description": "Hello every one !!!\nThis course is designed to go through the required steps to build complete E-commerce web site from scratch and then go to next level of advanced techniques in PHP\nIt's not required to have previous knowledge about web site development, this course start from zero knowledge about web development\nIt has been divided into six parts :\n1- HTML\n2-CSS\n3- Java Script\n4- Database\n5- PHP\n6- Build E-Commerce web site from login page to payment using paypal\n7- Web API and JSON\n8- jQuery and AJAX\n9- OOP and Three layer design pattern\n10- Publishing web site\n11- Extra Videos\nYou can select any part if you already have a knowledge about specific part\nPHP : Zero to Hero - Part 1\nIn this part, I'm going to teach basics of HTML which include\n1- Paragraphs and headers\n2- Tables, Images and Links\nPHP : Zero to Hero - Part 2\nIn this part, I'm going to teach basics of CSS which include\n1- Inline, internal and external\n2- ID and Class\n3- Bootstrap\n4- Templates\n3- Div, list and Form\n4- Videos and Youtube\nPHP : Zero to Hero - Part 3\nIn this part, I'm going to teach basics of Java scripts which include\n1- Variables, Conditions and Loop\n2- Functions and Events\n3- DOM\n4- Time out and Interval\nPHP : Zero to Hero - Part 4\nIn this part, I'm going to teach basics of MySQL database which include\n1- Database, Tables and Joins\n2- SQL statement\n3- Aggregate Functions and Sub Query\n4- Import and Export database\nPHP : Zero to Hero - Part 5\nIn this part, I'm going to teach basics of PHP which include\n1- PHP basics\n2- Get, Post, Session and Cookie\n3- PHP and MySQL\nPHP : Zero to Hero - Part 6\nIn this part, I'm going to teach how to build web store from scratch and PayPal functionality for the payment process and you can find the source code in the Bonus section\nPHP : Zero to Hero - Part 7\n\nIn this part, I'm going to teach you about Web API and JSON and implement weather condition example for live web API\nPHP : Zero to Hero - Part 8\nIn this part, I'm going to teach you about jQuery and AJAX and implement group chat as an example for using AJAX and jQuery\nPHP : Zero to Hero - Part 9\nIn this part, I'm going to teach you about OOP concepts using PHP and how you can create three layers design pattern using OOP and PHP\nPHP : Zero to Hero - Part 10\nIn this part, I'm going to teach you the process of publishing your web site on live web server\nPHP : Zero to Hero - Extra Videos\n\nIn this part, I'm going to add many videos in many topics related to PHP in gradual way\nI will be happy to help you, so please send my any question you have\nI hope to be one of my 14000+ students around the world\nEnjoy",
      "target_audience": [
        "This course is meant for IT Students, developers or any interested person in Web sapp development who are looking to develop an interactive web apps"
      ]
    },
    {
      "title": "Learn how to create Variables in Modern JavaScript",
      "url": "https://www.udemy.com/course/learn-how-to-create-variables-in-modern-javascript/",
      "bio": "Mastering the Art of Variable Creation: A Journey into Modern JavaScript Fundamentals",
      "objectives": [
        "I will teach you how to create variables in JavaScript",
        "27 minute of Video",
        "Students will learn how to assign values to variaStudents will learn how to declare variables ibles, update their content, and perform operations on variables.",
        "Students will learn how to assign values to variables, update their content, and perform operations on variables."
      ],
      "course_content": {
        "Coding Basic and how to create Variables in JavaScript": [
          "Introduction",
          "Code Editor"
        ],
        "Variable and Code Structure": [
          "Hello World",
          "Code Structure",
          "Use Strict Mode",
          "Variables",
          "Use alert to show a message.",
          "Creating and Modifying Variable",
          "Create a script to show message using alert function."
        ]
      },
      "requirements": [
        "The user should know how to save a file and how to operate an editor"
      ],
      "description": "Welcome to the exciting world of JavaScript coding!  In this dynamic tutorial, embark on a journey that demystifies the fundamentals of JavaScript, exploring the power of variables and constants.\nDive into the core of programming as we guide you through the creation of variables, providing you with the essential tools to harness data within your code. Understand the significance of constants and how they bring stability to your programs, ensuring a robust foundation for your JavaScript projects.\nElevate your learning experience with a state-of-the-art code editor, empowering you to practice and experiment in a hands-on environment. The interactive code editor is your playground, where you'll craft and refine your skills with ease.\nUncover the secrets of code structure as we demystify the syntax that underlies the language. This course is designed not only to teach you the ropes of JavaScript but to ignite your passion for coding.\nJoin us on this exhilarating journey as we equip you with the knowledge and confidence to thrive in the vast realm of JavaScript development. Enrol now and let your coding adventure begin!\nDiscover the art of problem-solving as you weave through real-world scenarios, honing your skills to create efficient, elegant solutions. Unleash your coding potential—enrol now and sculpt your future in the vibrant world of JavaScript!",
      "target_audience": [
        "Beginners JavaScript developers"
      ]
    },
    {
      "title": "Flutter 3 with Flutter Projects on Dart Programming Language",
      "url": "https://www.udemy.com/course/flutter-with-flutter-projects-on-dart-programming-language/",
      "bio": "Flutter Dart course from scratch. Learn Flutter and Dart sdk with Flutter advanced projects for flutter app development",
      "objectives": [
        "Flutter transforms the app development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded apps from a single codebase.",
        "Flutter code compiles to ARM or Intel machine code as well as JavaScript, for fast performance on any device.",
        "Flutter is supported and used by Google, trusted by well-known brands around the world, and maintained by a community of global developers.",
        "Flutter is powered by Dart, a language optimized for fast apps on any platform",
        "Flutter Basics and Structers",
        "Basic Widgets",
        "List Types in Flutter",
        "Functions",
        "Navigation Operations",
        "Input Widgets",
        "Book List Application",
        "Functional Programming",
        "Student Grade Calculator(App)",
        "Build beautiful, fast and native-quality apps with Flutter",
        "Build a portfolio of beautiful Flutter apps to impress any recruiter",
        "Understand all the fundamental concepts of Flutter development",
        "Become proficient in one of the fastest growing technologies"
      ],
      "course_content": {
        "Introduction to Flutter 3 with Flutter Projects on Dart Programming Language": [
          "What is Flutter?",
          "FQA about Flutter and Dart Programming Language",
          "Why Flutter?",
          "Flutter Project File",
          "Flutter App's Anatomy",
          "Flutter Versions",
          "Quiz"
        ],
        "Environment Setups": [
          "Prequisties for Flutter Setup",
          "Dart SDK Installation",
          "Installation of Required Editor",
          "Git and Flutter SDK Setup",
          "Android Studio and SDK Installation",
          "First Flutter Project in Android Studio",
          "First Flutter Project in VSCode",
          "Flutter App on Real Device",
          "Mac Setup-Install Flutter SDK",
          "Mac Setup-Install Android Studio",
          "Mac Setup-Install The Android Emulator",
          "Mac Setup-Install Xcode and Command Line Tools",
          "quiz"
        ],
        "Flutter Basics": [
          "Creating Projects with Commands",
          "Creating Project with VS Code",
          "Using MaterialApp Widget",
          "Using Scaffold Widget",
          "Using FloatingActionButton",
          "Using Container Widget",
          "Container Margin and Padding Properties",
          "Box Decoration",
          "Row and Column Widget Basic Features",
          "Using Expanded and Flexible Widget",
          "Chapter Again",
          "Chapter Again 2",
          "quiz"
        ],
        "Basics Widgets in Flutter": [
          "Create Our Widget",
          "Hot Reload and Hot Restart in Flutter",
          "Stateful Widgets",
          "Build Context",
          "Adding Images and Image Types",
          "Using FadeinImage, IntrinsicHeight, and PlaceHolder",
          "Basic Button Types",
          "Dropdown Button",
          "Popup Menu Button",
          "Basic Blog Structure (App)",
          "quiz"
        ],
        "List Types in Flutter": [
          "Card ListTile Divider for lists",
          "Using Listview",
          "ItemBuilder and SeperatorBuilder",
          "EasyLoading Package Usage",
          "AlertDialog and Buttonbar",
          "Layout Problems and Solutions",
          "Using Gridview",
          "BoxDecoration and DecorationImage",
          "Display with Gesture Detector Capturing",
          "CustomScrollView and SliverAppBar",
          "Using SliverList",
          "Using Builder for SilverList",
          "Using SliverGrid",
          "quiz"
        ],
        "Navigation Operations": [
          "Navigation Operations",
          "Using Navigator push",
          "Using Navigator pop",
          "Using WillPopScope",
          "Using PushReplacement and CanPop, MaybePop",
          "Defining Named Route",
          "Using OnGenerated Route",
          "Submitting Data to New Pages",
          "Using Constructors for Submitting Data",
          "PopUntil and PushNamedRemoveUntil",
          "quiz"
        ],
        "Book List Application": [
          "Application Introduction",
          "Creating the Data Source",
          "Create List",
          "Creating the Detail Page",
          "Using Palette Generator",
          "Using onGenerate",
          "quiz"
        ],
        "Input Widgets": [
          "Textfield Widget",
          "Using Controller",
          "Using TextFormField and Validator",
          "Registering the Form and Using GlobalKey",
          "Using GlobalKey",
          "Checkbox Slider Radio and Switch",
          "Dropdownbuttom ve DropDownMenuItem",
          "Date and Time Selection",
          "Using Stepper Widget",
          "Stepper Widget-2",
          "Easy Todo List (App)",
          "quiz"
        ],
        "Student Grade Calculator(App)": [
          "Application Introduction",
          "Using Google Fonts and Basic App Structure",
          "Using TextFormField for Application",
          "Creating the Average Widget",
          "Create DropdownButton",
          "Dropdown-2",
          "Calculation of the Average and the Lesson Model Class",
          "Listing of Courses and Dismissible Button",
          "Using Callback Functions"
        ],
        "Design Processes in Flutter": [
          "Using Custom Font",
          "Using Drawer and Inkwell",
          "Using Bottom Navigation Bar",
          "Bottom Navigation Bar and Switching Pages",
          "UI State with ExpansionTile and PageStorageKey",
          "Using Pageview",
          "Using Tabbar and Tabbarview"
        ]
      },
      "requirements": [
        "Computer with access to the internet.",
        "Willingness and Motivation to successfully complete the training",
        "Desire to learn Flutter",
        "Have 10GB of free space on your hard drive.",
        "Watching the lecture videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Flutter, dart, flutter dart, flutter and dart, flutter firebase, dart programming, flutter advanced, flutter project, dart language, dart programing language\nWelcome to the “ Flutter 3 with Flutter Projects on Dart Programming Language ” course.\nFlutter Dart course from scratch. Learn Flutter and Dart sdk with Flutter advanced projects for flutter app development\n\n\nFlutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language. Flutter can integrate with existing iOS and Android code bases. It's free and open-source.\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter was originally launched with support for iOS and Android. Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web. Flutter runs with Dart, a programming language developed by Google. Dart is a strongly-typed, object-oriented language with a familiar C-style syntax. Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms. On the web, Dart is compiled to JavaScript code that can run on the browser.On the web, dart flutter is compiled to JavaScript code that can run on the browser. Flutter web is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the flutter firebase Engine, written in C++, which provides low-level rendering support.\nFlutter is an open-source UI software development kit created by Google. It is used to develop cross platform applications for Android, iOS, Linux, macOS, Windows, Google Fuchsia, and the web from a single codebase\nI prepared this Flutter Programming course assuming you have no prior programming background.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited\nLearning Dart and Flutter SDK from scratch; Build high-performance native apps that can run on Android and IOS\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build Flutter, we will have prepared a strong foundation for Flutter applications.\nThis course is for beginners. Before taking this course, You know any language. In our course, the basics of Flutter is dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject.\nDuring our course, you will be informed about the basics of Flutter in detail and how to solve problems.\nThis course was crafted to benefit absolutely any level of developer. We will start from scratch and learn how to create a development environment for Flutter\nDuring the course, I made sure to explain all the topics that may seem complicated to you in as simple and detailed as possible. I have used some diagrams to help you understand better.\nThe powerful features and capabilities of Flutter allow you to create complex, customizable, modern, responsive and user friendly web applications.\nAfter taking this course you’ll be able to fully take advantage of all features for Flutter\nIn this course, Develop modern, complex, responsive and scalable web applications with Dart for flutter\n\n\nOur course based on learning by making practice.\n\n\nWhat is Google Flutter?\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter was originally launched with support for iOS and Android. Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web. Flutter runs with Dart, a programming language developed by Google. Dart is a strongly-typed, object-oriented language with a familiar C-style syntax. Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms. On the web, Dart is compiled to JavaScript code that can run on the browser. Flutter is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the Flutter Engine, written in C++, which provides low-level rendering support with Google’s Skia; and the platform-specific Embedder, which talks directly to the operating system.\n\n\nWhy did Google create Flutter?\nFlutter, first known as “Sky”, was announced in 2015 with Android support only. It was created to provide a better mobile experience for users and developers, taking the best parts of the web development experience, and bringing them to mobile. Its main goals were high-performance and portability across multiple platforms. While other cross-platform solutions such as React Native and Xamarin were already popular, they could not deliver the same fidelity and performance as apps built with the native iOS and Android SDKs. Flutter changed that by making it possible to create beautiful, performant apps across multiple platforms with a single codebase.\n\n\nIs Flutter in demand?\nFlutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018. Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy. Over a hundred thousand Flutter apps have already been published on the App Store and Play Store. After overtaking React Native in Google Search trends, Flutter is now the fastest growing software project on GitHub. By choosing Flutter, companies can deliver mobile apps in record-time as they no longer have to build separate apps to support iOS and Android. This makes Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly.\n\n\nIs Flutter a programming language?\nFlutter is not a language, rather an SDK just like Android SDK. For android development Java/Kotlin are the programming languages, for cross-platform development using flutter, DART is the official programming language.\n\n\nIs Flutter a frontend or backend?\nFlutter is a popular frontend development framework from Google that enables developers to build beautiful frontends for any screen. Flutter is designed to streamline cross-platform app development while maintaining a consistent user experience.\n\n\nWhich language is used for Flutter?\nFlutter apps are written in the Dart language and make use of many of the language's more advanced features. While writing and debugging an application, Flutter runs in the Dart virtual machine, which features a just-in-time execution engine.\n\n\nIs Flutter a framework?\nFlutter is an open source framework by Google for building beautiful, natively compiled, multi-platform applications from a single codebase.\n\n\nWhat is Dart and why does Flutter use it?\nFlutter uses Dart as Dart allows Flutter to avoid the need for a separate declarative layout language like JSX and XML. The layout of Dart is declarative and programmatic and it makes it easy for developers to read and visualize it very easily and effortlessly.\n\n\nIs Flutter written in Dart?\nFlutter apps are written in the Dart language and make use of many of the language's more advanced features. While writing and debugging an application, Flutter runs in the Dart virtual machine, which features a just-in-time execution engine.\n\n\nWhat applications use Flutter?\nThere are social networking apps for creating and sharing content, dating, and connecting people through events and real-life activities that use Flutter. Alibaba made a shopping app called Xianyu, which has more than 50MM downloads and more than 10MM active users every day. Nubank is the largest independent digital bank outside Asia, and its mobile apps are built with Flutter. Another shopping app is HuYu, which rewards users with gift cards and vouchers for sharing shopping receipts. You can also find music apps for recording and learning to read music. The Hamilton Musical and the famous Abby Road Studios created apps with Flutter. There are apps for sports, finance, fitness, education, animal adoption, mapped gas stations to compare prices, and a travel app. A Google Ads app helps mobile app customers track their ads. Users can view statistics, update bids and budgets, and get real-time notifications.\n\n\nGoogle Flutter provides higher quality for multi-platform development.\nFlutter apps use a single codebase, allowing faster time-to-market.\nFlutter allows you to build beautiful apps easily.\nFlutter widgets make it easy to build beautiful UIs.\nThe Dart programming language is very productive.\nFlutter delivers an excellent developer experience with hot reload.\nFlutter is open source.\nFlutter comes with a mature ecosystem.\nFlutter’s unique advantages make it a very strong UI framework on mobile, web, and desktop.\n\n\nStep-by-Step Way, Simple and Easy With Exercises\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Vue updates its system, and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\n· Seeing clearly\n· Hearing clearly\n· Moving through the course without distractions\n\nYou'll also get:\nLifetime Access to The Cours\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\nDive in now into;\n\" Flutter with Flutter Projects on Dart Programming Language \" course.\nFlutter Dart course from scratch. Learn Flutter and Dart sdk with Flutter advanced projects for flutter app development\n\n\nWe offer full support, answering any questions.\n\nSee you on the other side!",
      "target_audience": [
        "Anyone who has never programmed before and want to learn Dart and build iOS and Android apps.",
        "Anyone who know how to code, but are new to mobile development, then take this course to build apps with just one codebase.",
        "Anyone who want to build native-quality iOS and Android apps with Flutter.",
        "Anyone who have tried Flutter before, but want to get a comprehensive curriculum that covers all the important aspects of Flutter development",
        "Anyone who wants to deploy to multiple devices from a single codebase: mobile, web, desktop, and embedded devices."
      ]
    },
    {
      "title": "JavaScript Foundations: The Ultimate Beginner’s Guide",
      "url": "https://www.udemy.com/course/learn-javacript/",
      "bio": "JavaScript 101: Mastering the Basics of Syntax, Variables, Files and Much More",
      "objectives": [
        "This course will give you a solid understanding of JavaScrip",
        "You will learn about JavaScript comparators, strings, variables, loops and more!",
        "Build a foundation of JavaScript syntax and learn how to use values, variables, and files.",
        "Learn standard input, standard output, the module system, and the file system.",
        "Learn how to write and run JavaScript on the server.",
        "Much more!"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML knowledge. No prior knowledge of JavaScript is needed"
      ],
      "description": "Embark on your JavaScript journey with this beginner-friendly course designed to introduce you to the very basics of the JavaScript programming language. Perfect for those with little to no prior coding experience, this course focuses on building a strong foundation in JavaScript syntax and core concepts.\nYou’ll start by learning how to use values, variables, and data types—essential building blocks of any JavaScript program. From there, you’ll explore how to work with files and understand the role JavaScript plays in modern web development. This hands-on course is structured to help you gain practical skills that can be immediately applied to real-world scenarios.\nThroughout the course, you’ll write your own JavaScript code, reinforcing your understanding through interactive examples and exercises. By the end, you’ll have a solid grasp of the basics, giving you the confidence to explore more advanced topics in JavaScript or other programming languages.\nWhether you’re aiming to build dynamic websites, dive into app development, or simply expand your skill set, this course is the perfect starting point. Take the first step in your programming journey and unlock the potential of JavaScript—one of the most popular and versatile languages in the world!\nBy the end of this course you'll be able to build your next project using JavaScript.",
      "target_audience": [
        "Anyone wanting to learn JavaScript",
        "Beginner Web Developers or Programmers"
      ]
    },
    {
      "title": "Learning 200 jQuery Functions with 800 Examples",
      "url": "https://www.udemy.com/course/jquery-foundation/",
      "bio": "Building Strong Foundation to Resize your Knowledge",
      "objectives": [
        "Learn how to use jQuery to work with the DOM, use events, effects and animations, AJAX, JSON",
        "Learn how to create interactive AJAX forms.",
        "By the completion of this course, you will be able to build complete interactive web applications using the jQuery.",
        "Learn complete code and structure with UI and Style.css which adds to the foundation of the course",
        "Become awesome jQuery Specialist",
        "Learn and understand In-depth functions of JQuery",
        "On successful completion of this course, you will be able to build complex interactive web applications using the jQuery"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript",
        "Computer with Internet connection",
        "Read, write and understand English :)"
      ],
      "description": "Last updated: June 30, 2015.\nBy the completion of this course, you will be able to build complete interactive web applications using the jQuery.\nWhy you should learn JQuery?\nUsed by most of most visited websites, jQuery is the most popular JavaScript library in use today.\njQuery is the world's most used JavaScript library to create rich web applications that just feel natural to use.\njQuery is free, open source software. The modular approach to the jQuery library allows the creation of powerful dynamic web pages and web applications.\njQuery's syntax is designed to make it easier to navigate a document, select DOM elements, create animations, handle events and develop Ajax applications.\njQuery also provides capabilities for developers to create plug-ins on top of the JavaScript library. This enables developers to create abstractions for interaction and animation, advanced effects and high-level, theme-able widgets.\nWhats inside this course jQuery?\nIn this comprehensive course on jQuery, you'll learn how to use jQuery to work with the DOM, use events, effects and animations, AJAX, JSON and to create interactive AJAX forms. We start from scratch. We will introduce jQuery to you. We will show how to install and download jQuery. We will talk about different benefits of jQuery. Gradually, we will be making some demo apps with the help of jQuery.\nTake this course now, and learn jQuery in easy steps.\nLast updated:June 30, 2015.",
      "target_audience": [
        "Web Developers",
        "Web Designers",
        "Application Programmers, Designers and Developers",
        "Mobile Apps Developers",
        "Beginners who want to learn jQuery from basics to advanced",
        "Anyone who wants to make their jQuery foundation strong"
      ]
    },
    {
      "title": "Advanced NextJS WooCommerce With REST API And TailwindCSS",
      "url": "https://www.udemy.com/course/advanced-nextjs-woocommerce-with-rest-api-and-tailwindcss/",
      "bio": "Learn to Build A React WooCommerce Theme With REST API And TailwindCSS",
      "objectives": [
        "Building Nextjs Application",
        "Decoupled Application With WordPress And WooCommerce",
        "Building A Headless CMS",
        "WooCommerce REST API",
        "Setting Up And Using TailwindCSS"
      ],
      "course_content": {
        "Introduction": [
          "Setup Nextjs Project",
          "Setup Tailwind CSS with SASS"
        ],
        "Header and Footer": [
          "Header Footer REST API",
          "Using getStaticProps and axios to Fetch Data from WordPress",
          "Add Dynamic Site Title, Tagline, Logo",
          "Add Header Menus",
          "Add SVG Icons",
          "Add Footer Widgets",
          "Footer Menus and Social Icons"
        ],
        "WooCommerce Products": [
          "Setup WooCommerce Auth Key , Fetch WooCommerce Products",
          "Display Products: Title",
          "Create a Next.js Image Component",
          "Adding Product Image",
          "Adding Product Price",
          "Fixing dangerouslySetInnerHTML Warnings"
        ]
      },
      "requirements": [
        "Basic Understanding Of WordPress and WooCommerce"
      ],
      "description": "In this course, you will learn\nHow to create a react application with the next.js framework.\nThe backend will be in WordPress using WooCommerce Plugin.\nThe data will be fetched using REST API.\nFor CSS we will use TailwindCSS and we will also learn how to customize it as per our needs.\nWe will build:\nHeader\nFooter\nProduct Page\nAdd To Cart.\nAll the data will be dynamic fetched from WordPress.\nPages will also be cached and fresh data will also be updated on a regular basis. So that the data is never stale.\nWe will display all the products with their images, price, and discounts with add to cart feature.\nWe will take advantage of Next.js Image optimization, and Incremental Static Regeneration.\nIncremental Static (Re)generation and automatic creation of New Static post pages without having to re-build next.js the application.\nGutenberg styles support\nREST API endpoints.\nOnce you complete this course. You can avail the next part of the course - Advanced NextJS WooCommerce REST API, TailwindCSS - Part-2\nIt's available under my courses.\n\n\nWordPress Rest API is one of the many great features WordPress offers. It enables developers to create fascinating plugins and themes and allows them to power third-party applications with WordPress CMS.\nThe content management system is also developed to manage the web site’s content in modern web applications. This can add an extra workload for the developers. With so many possibilities that Rest API offers, one can also think of using WordPress with React as a headless CMS for their JavaScript-based web application(s).",
      "target_audience": [
        "Beginners, Advanced, Developers"
      ]
    },
    {
      "title": "Magento 2 - Basics of Magento development",
      "url": "https://www.udemy.com/course/magento-2-basics-of-magento-development/",
      "bio": "Learn Basics of Magento development | Understand Magento Admin and basics of Module creation and customisation technique",
      "objectives": [
        "Basics of Magento Development",
        "Understanding Magento Admin",
        "Basics of Module Creation",
        "Basics of Customisation Techniques"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "Course Introduction - What we are going to cover"
        ],
        "Magento Installation": [
          "Get Magento using composer",
          "Magento Installation"
        ],
        "Basics of Admin Management": [
          "Basic Configurations",
          "Store Management",
          "Product Management",
          "Sale Management",
          "Reporting in Magento 2"
        ],
        "Magento Basics - Technical POV": [
          "File and Folder Structure",
          "Application Initialization",
          "Module Creation"
        ],
        "Customisation Techniques": [
          "Argument Replacement",
          "Virtual Type"
        ]
      },
      "requirements": [
        "Basics of PHP programming"
      ],
      "description": "** Disclaimer ** -\nWe do NOT do Live Training. Magento(Adobe Commerce) is a registered trademark. We are NOT associated with Adobe Commerce directly in any capacity.\nMagento(Adobe Commerce) software and Adobe Commerce GUI are proprietary Adobe software. Neither Udemy nor we are authorised to provide Adobe commerce or cloud Access. You can officially get Magento Access to practice on  system from Magneto's Open Source repository.\n** End of Disclaimer **\n\n\nWhat Will I Learn?\n\nYou will be learning basics of Magento 2 and managing Magento from admin panel. This course will also provide comprehensive details around Magento installation, Components(Module) creation and basics of customization.\nCourse content is as follows:\n\nHow to use the composer[PHP's dependency Management] in Magento\nHow to Installing Magento via composer and use setup wizard to start your eCommerce store\nPerform basic store configuration\nUnderstand Basics operations that one can perform in Admin panel/console\nCreate new product and manage products\nPlace an order on Magento system and manage sales order in admin panel\nUnderstand the admin reporting in Magento 2\nUnderstand Magento's File and Folder Structure\nApplication Initialisation\nCreate a module in Magento to perform customisation\nTaking this course will make you feel more confident to perform basics operations and customisations via custom modules. This course will also serve as the first step towards your journey to achieve Magento(Adobe Commerce) certifications.",
      "target_audience": [
        "Anyone who wants to learn Magento",
        "This course can be your first step towards Magento certification"
      ]
    },
    {
      "title": "MongoDB Tutorial for Beginners",
      "url": "https://www.udemy.com/course/mongodb-tutorial-for-beginners/",
      "bio": "Learn MongoDB in simple and easy steps using this beginner's tutorial containing basic to advanced knowledge",
      "objectives": [
        "Install MongoDB",
        "Run MongoDB Locally",
        "Learn how to use Documents and Collections",
        "Understand terminal commands for managing the database",
        "Be able to execute CRUD (create, read, update, delete) functions within mongo shell"
      ],
      "course_content": {
        "Introduction": [
          "Installing MongoDB",
          "Set Environment Variables and Install MongoDB GUI Tool"
        ],
        "Install MongoDB on Ubuntu Linux": [
          "How To Install MongoDB on Ubuntu Linux"
        ],
        "MongoDB CRUD Operations": [
          "Create and Drop Database",
          "Create and Drop Collection",
          "Insert Documents",
          "Query Document",
          "AND OR Conditions",
          "Update Document",
          "Delete Document"
        ],
        "Dive in to MongoDB": [
          "MongoDB Projection",
          "Using Sort, Skip, and Limit",
          "MongoDB Indexing",
          "MongoDB Aggregation",
          "BackUp and Restore"
        ]
      },
      "requirements": [
        "basic understanding of database",
        "How to access your Terminal window"
      ],
      "description": "MongoDB is one of the most used, open-source document database, and NoSQL database. MongoDB is developed by 10gen. It is written in c++ and it is a document-oriented database. It uses BSON format.\nThis tutorial will provide you good understanding on MongoDB concepts and provide you the hands on skills to be a MongoDB expert.\nThis tutorial is intended for students and new developers who are wants to learn MongoDB Database in easy to understand steps. This tutorial will provide you MongoDB concepts which will help you to get started with MongoDB quickly. After finishing this course you will Lay the foundation of NoSql databases from where you can take yourself at higher level of expertise.\n\n\nIn this Tutorial we will learn. How to install MongoDB, How to create new collections that store documents, You'll learn about the most common and used MongoDB shell commands to manage your documents. We will cover the different types of data that can be stored.You will gain confidence in how to preform CRUD operations i.e. Create, Read, Update and Delete data. Then the course will dive into much deeper MongoDB concepts like Projection, Using Sort, Skip, and Limit, Indexing, Aggregation, BackUp and Restore.\nSo let's get started !!!!!",
      "target_audience": [
        "Software Professionals who are willing to learn MongoDB Database",
        "This course is intended for those not already familiar with NoSQL or MongoDB"
      ]
    },
    {
      "title": "MERN Stack : React ,Redux ,Node ,Mongo - Pizza Delivery App",
      "url": "https://www.udemy.com/course/mern-stack-react-redux-node-mongo-pizza-delivery-app/",
      "bio": "Build a Complete MERN Pizza Delivery application from scratch with React , Node , Express",
      "objectives": [
        "Advanced Topics in React",
        "Redux",
        "Redux Thunk",
        "Performing Asynchronus operations with redux-thunk",
        "Managing State with Redux",
        "Cart Functionality",
        "Common Payment Gateway Integration",
        "User Authentication",
        "Filtering Items in Redux State",
        "Deploying Application to HEROKU"
      ],
      "course_content": {
        "Front End / React Setup": [
          "Promo",
          "React Setup",
          "Navbar",
          "Working with static data - part1",
          "Working with static data - part2",
          "Pizza Description Modal"
        ],
        "Backend / Node Setup": [
          "Node + Express Sever Setup",
          "Mongo DB Connection",
          "Adding static JSON data in Mongo DB",
          "Pizza Model"
        ],
        "Working with Redux , Actions , Reducers , Store": [
          "Setup Actions and Reducers",
          "Setup Redux Store",
          "Get all pizzas - Backend",
          "Bring State to Homepage"
        ],
        "Cart Functionality": [
          "Adding Pizzas to Cart",
          "Cart screen design",
          "Updating Pizza Quantity",
          "Delete From Cart",
          "Calculate Sub Total"
        ],
        "User Authentication": [
          "Register Screen Design",
          "User Registration Actions and Reducers",
          "Creating User Model",
          "User Registration Backend",
          "User Login - Design",
          "User Login",
          "Success , Error , Loading components"
        ],
        "Payment Gateway Integration - Stripe": [
          "Payment Demo",
          "Stripe - Front End",
          "Stripe - Actions and Reducers",
          "Stripe Backend"
        ],
        "Working with Orders": [
          "Order Model",
          "Save Orders in Database",
          "Get user orders",
          "Orders screen"
        ],
        "Filtering Pizzas": [
          "Filter Component Design",
          "Filter Component Logic"
        ],
        "Admin Panel": [
          "Admin Screen Demo",
          "Admin Screen Design",
          "Pizzas List Screen",
          "Add Pizza Screen Design",
          "Add Pizza Logic",
          "Update Pizza - Actions and Reducers",
          "Update Pizza - FrontEnd Logic",
          "Update Pizza - Backend Logic",
          "Delete Pizza",
          "Orders List",
          "Deliver Order",
          "Users List"
        ],
        "Deployment": [
          "Final CSS",
          "Pushing To Github",
          "Pushing To HEROKU"
        ]
      },
      "requirements": [
        "Javascript Basics",
        "React Basics",
        "Node Basics"
      ],
      "description": "This is a Full Stack (MERN) Pizza Delivery Application developed using React and React for Front End , Redux-Thunk for Asynchronous operations,\nNode JS for Runtime environment , Express JS for Backend Routing and Mongo DB for Database\nIn this course we will implement the following features in the Pizza Delivery Application.\nWorking with Redux and Redux-Thunk\nAdd to cart Feature\nUpdate Quantity in cart\nDelete Products from cart\nUser Authentication\nCommon Payment Gateway Integration\nPaying amount with stripe\nPlacing Orders\nStore orders in database\nRetrieve Orders to user profile\nUser Dashboard\nAdmin Dashboard\nManage Users , Products , Orders in Admin Panel\nProtected routes for admin panel\nPushing Application to GITHUB.\nVersion Control using GIT\nBy the end of the courses you will know how to work with redux states ,reducers, Middelwares including the payment gateway.\n24/7 Q/A Support.\nMERN is one of several variations of the MEAN stack (MongoDB Express Angular Node), where the traditional Angular.js frontend framework is replaced with React.js. Other variants include MEVN (MongoDB, Express, Vue, Node), and really any frontend JavaScript framework can work.\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework, and Node.js the popular and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.",
      "target_audience": [
        "React Developers",
        "MERN Stack Developers",
        "JavaScript Developers",
        "Node Developers"
      ]
    },
    {
      "title": "Mastering Gemini AI: Google's Versatile Language Model",
      "url": "https://www.udemy.com/course/mastering-bard-ai-googles-versatile-language-model/",
      "bio": "Explore AI, Multilingual Support, Content Creation, & Coding",
      "objectives": [
        "Grasp fundamental concepts of Bard AI, Google's AI and language model technologies",
        "Differentiate Bard AI's features from other models like GPT-3 and GPT-4",
        "Apply Bard AI in content creation, enhancing efficiency and creativity",
        "Utilize Bard AI for multilingual support in global communication tasks.",
        "Implement Bard AI in customer service for improved user interaction.",
        "Leverage Bard AI's capabilities in educational and tutoring applications.",
        "Conduct in-depth competitor analysis using Bard AI's advanced research tools.",
        "Develop programming skills with Bard AI's code snippet generation and error identification.",
        "Understand Bard AI's role in performance improvement and coding standards.",
        "Explore future developments and the evolving role of Bard AI in technology and society."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome to Bard AI",
          "Brief Explanation of Bard",
          "Why Google Create Bard",
          "The first Prompt in Bard"
        ],
        "Understanding Bard AI": [
          "Definition of AI and Language Model",
          "How Bard AI works",
          "Unique Features and Capabilities",
          "Chatgpt vs Bard Response"
        ],
        "The Features of Bard AI": [
          "Text Generation and Completion",
          "Contextual Understanding and Relevance",
          "Language Translation and Multilingual Support",
          "Question Answering and Problem-Solving Abilities",
          "Integration with Various Applications and Platforms",
          "Adaptive Learning and Personalization"
        ],
        "The Applications of Bard AI": [
          "Content Creation and Editing",
          "Customer Service and Support",
          "Education and Tutoring",
          "Research and Analysis",
          "Target Audience",
          "Competitor Analysis",
          "Gaming and Entertainment"
        ],
        "Comparisons with Other Language Models": [
          "Bard AI vs. GPT-3 and GPT-4",
          "Unique Selling Points of Bard AI",
          "Areas for Improvement and Development"
        ],
        "How Bard Helpful for Programmers": [
          "Code snippets",
          "Error identifications",
          "Performance improvement",
          "Tutorial guidance",
          "Documentation Assistance",
          "Coding Standers"
        ],
        "Future Prospects and Developments": [
          "Ongoing Research and Updates",
          "The Future Role of Bard AI in Society and Technology"
        ],
        "Conclusion": [
          "Recap of Key Points",
          "The Significance of Bard AI in Modern Technology",
          "Final Thoughts"
        ],
        "BONUS Section - Don't Miss Out": [
          "BONUS Section - Don't Miss Out"
        ]
      },
      "requirements": [
        "Basic understanding of AI and language models.",
        "Interest in AI technology and its applications.",
        "Access to a computer and internet for course materials.",
        "No advanced technical skills required, suitable for beginners.",
        "Willingness to learn and explore new AI concepts.",
        "Basic programming knowledge beneficial but not mandatory."
      ],
      "description": "Dive into the world of artificial intelligence with \"Mastering Bard AI: Google's Versatile Language Model\". This comprehensive course is designed to unravel the intricacies of Bard AI, Google's pioneering language model that stands at the forefront of AI technology. Spanning over seven insightful sections, the course offers a deep dive into Bard AI's capabilities, setting a foundation with an introduction to AI and language models, followed by an in-depth exploration of Bard AI's unique features.\nDiscover the revolutionary aspects of text generation, contextual understanding, and multilingual support that Bard AI offers. These features not only enhance the efficiency of content creation but also pave the way for innovative applications in customer service, education, and more. The course meticulously compares Bard AI with other leading models like GPT-3 and GPT-4, highlighting its unique selling points and potential areas for development.\nA crucial section of the course is dedicated to programmers, where you'll learn how Bard AI can assist in coding practices, from generating code snippets to identifying errors and improving performance. The course also projects the future prospects of Bard AI, envisioning its role in advancing society and technology.\nBy the end of this course, you'll have a comprehensive understanding of Bard AI, equipped with the knowledge to apply its features in various sectors effectively. Whether you're a programmer, content creator, or simply an AI enthusiast, this course is your gateway to mastering one of the most versatile language models in the AI landscape. Join us to embark on this enlightening journey into the world of Bard AI.",
      "target_audience": [
        "AI Enthusiasts: Individuals fascinated by artificial intelligence and eager to understand the latest advancements in AI language models.",
        "Content Creators: Bloggers, writers, and digital content creators looking to leverage AI for enhancing content quality and creativity.",
        "Programmers and Developers: Professionals in software development seeking to integrate AI capabilities into their coding practices and applications.",
        "Students in Technology Fields: University students or lifelong learners in computer science, AI, or related fields interested in cutting-edge AI technologies.",
        "Business Professionals: Managers and entrepreneurs aiming to understand AI's impact in business, especially in customer service and product development.",
        "Educators and Tutors: Academic professionals looking to incorporate AI tools into teaching methodologies and educational content creation."
      ]
    },
    {
      "title": "Go Full Stack: Java, Spring Boot, Angular & Typescript",
      "url": "https://www.udemy.com/course/learn-how-to-create-a-spring-boot-restful-java-application/",
      "bio": "Build Your First Java Full Stack Application & Spring Boot & Spring Security & MySQL & Docker & Angular & Typescript",
      "objectives": [
        "Build a Full Stack Application that will manage users",
        "Understand how to structure a Spring Boot Application in different modules",
        "Learn to code by creating an application in a step-by-step manner",
        "Get an introduction to Spring Data JPA",
        "Analyse Spring Security concepts",
        "Implement custom Spring Security authentication mechanism",
        "Build both back-end and front-end projects in one course",
        "Work with Angular",
        "Learn to work with MDBootstrap framework (for building the UI project)",
        "Get to work with Typescript - superset of Javascript",
        "Create a graphical user interface using Java Swing",
        "Define several Swing related components and understand how to work with them",
        "Learn to build desktop apps in Java"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "REST Architecture Principles",
          "Install Java JDK",
          "Setup Maven",
          "Configure Spring Tool Suite IDE",
          "Install Postman"
        ],
        "[Back-end REST API] - Create a Spring Boot RESTful Java application": [
          "Create a Spring Boot project using Spring Initializer",
          "Add spring-boot-starter-web dependency",
          "Create initial package structure",
          "Initial implementation for Find All Users API",
          "Create random list of users",
          "Use Postman to invoke Find All Users API",
          "Initial implementation for Find User By Id API",
          "Introduce ResponseEntity",
          "Implement Add User API",
          "Create the Delete User API",
          "Implement Update User API"
        ],
        "Introduction to Spring Data JPA": [
          "Introduce Spring Data JPA and H2 Database",
          "Update User model class to an entity",
          "Change Find All Users API",
          "Modify Add User API",
          "Improve Delete User API",
          "Modify Find User By Id API",
          "Improve Update User API",
          "Create mechanism to store users in database on application startup"
        ],
        "Spring Security basics and bonus features": [
          "Introduce Spring Boot Starter Security",
          "Implement customizable basic security",
          "Add PasswordEncoder mechanism",
          "Add username and password fields to our User model class",
          "Encode passwords for users created on application startup",
          "Encode passwords for users created under Add and Update User APIs",
          "Introduce pagination for Find All Users API",
          "Implement custom search for an user, based on different criteria",
          "Migrate from H2 In Memory Database to MySQL Database",
          "Run under Docker Environment",
          "Prepare the server for UI interaction",
          "Source code of the back-end application"
        ],
        "Front-End REST API - Angular 10, MDBootstrap and Typescript": [
          "Install Node.js",
          "Configure Angular CLI",
          "Setup Visual Studio Code IDE",
          "Create and configure the Angular project",
          "Implement an authentication mechanism",
          "Add Login Component",
          "Find All Users UI Components",
          "Adding main UI cards",
          "Add new user support",
          "Find User By Id",
          "Implement a filter process",
          "Find By Criteria",
          "Support for editing and deleting users",
          "Delete User in UI",
          "Update existing user",
          "Source code of the front-end application"
        ],
        "[Bonus] Build a contact form [back-end to front-end] with GMAIL integration": [
          "Introduction",
          "Setup Angular Project",
          "Configure MDBootstrap",
          "Generate Contact Component",
          "Typescript Business Logic",
          "Build the HTML form",
          "Setup Spring Boot Server",
          "Create Email Infrastructure",
          "GMAIL Security",
          "Create the Email Service",
          "Add CORS Filtering",
          "Small updates and final test",
          "Source Code for bonus section"
        ],
        "Bonus - Java Collections - Fast Interview Preparation": [
          "Introduction",
          "Collection<E> interface",
          "List<E> interface and implementations",
          "List<E> examples",
          "Set<E> interface and implementations",
          "Set<E> examples",
          "Map<K, V> interface and implementations",
          "Map<K, V> examples"
        ],
        "Final words": [
          "Thank you"
        ]
      },
      "requirements": [
        "Basic understanding of Java, Spring, Angular and Typescript",
        "Willing to build a step by step Full Stack system from scratch"
      ],
      "description": "Hello there,\n\n\nAs part of this course you will build 2 big complete systems as from scratch (entire flow presented) - as a step-by-step guide\n============================\nSystem 1: Full Stack (back-end to front-end) REST based app - Spring Boot, Angular\n\n\nCourse structure:\nSection 1:\nshort introduction about me\ndetailed explanation of the prerequisites for this course (Java JDK 1.8, Maven, Spring Tool Suite, Postman)\n\n\nSection 2:\ncreate the initial project structure for a Spring Boot RESTful Java Application\nwill learn how to include dependencies under our Maven based project\nunderstand the correct way to structure an application based on its components\ncreate a REST API to handle 5 main operations (CREATE, READ, UPDATE, SEARCH, DELETE) by working with User as the conceptual resource\nwork with Postman in order to create collection and invoke REST APIs\n\n\nSection 3:\noffers an introduction to Spring Data JPA and H2 In Memory Database support\nwill learn how to migrate a simple User model class to an Entity concept that will be handled by H2 Database\nunderstand the step-by-step process to migrate all operations for the the User RESTful resource to Spring Data JPA storage\nlearn the correct way to refactor code in stages\n\n\nSection 4:\nintroduces Spring Security basic concepts\nadd a custom Spring Security implementation to handle basic authentication and access to resources\nlearn how to encode passwords in Spring Boot\n\n\nintroduce Spring Data JPA pagination support for Find All Users API\nimplement a mechanism to provide an alternative search for Find User based on specific criteria\nMigrate from H2 In Memory Database to MySQL Database\n\n\nMove application to run under Docker environment\n\n\nSection 5:\ncreate an Angular 10 based application as the front-end section for our course\n\n\ntransform the course to a Full Stack application\n\n\nimplement Authorization Mechanism\n\n\ninclude Login and Users components\n\n\nadd support of working with Angular Guards\n\n\ninclude different UI components as part of integrating MDBootstrap UI framework\n\n\ncreate Angular services and main infrastructure of communicating with the Spring Boot back-end application\n\n\n============================\nSystem 2: Build a fully functional contact form (back-end to front-end) + GMAIL integration\n\n\nCourse structure:\nEven if you are new to this topic, or have some experience in the vast Web Development world, I will guide you on this step by step process of building this system.\nSo...what will we build?\nWe will create a complete and responsive contact form that will be capable of sending emails by using the GMAIL service integration support\nWhat technologies/frameworks will we use for Front-end integration?\nWe will use Angular 10, Typescript and MDBootstrap Framework\nWhat technologies/frameworks will we use for the Back-end integration?\n\nWill work with Spring Boot, Spring Boot Mail Integration, and configure a testing GMAIL account that we can use for testing\nWhat is the outcome of following this class you might ask?\nYou will understand the basic principles of working on a Full Stack Web Application (understand how the communication is made between a front-end app to a back-end server) - by following a real working example -> Building a contact form for a website\n============================\nBonus:\nAdded a new section related to Java Collections Framework - Fast Interview Preparation\n============================\n\n\nEnjoy",
      "target_audience": [
        "Students that want to build a fully functional full stack application",
        "Any person that has a passion for programming"
      ]
    },
    {
      "title": "Learn SignalR: Make a Full Featured Chat App From Scratch",
      "url": "https://www.udemy.com/course/learn-signalr-make-a-full-featured-chat-app-from-scratch/",
      "bio": "Learn creating real time web applications with SignalR from zero to hero with full featured chat app from scratch",
      "objectives": [
        "Build an enterprise level real-time chat application from scratch",
        "Understand the importance and the challenges for real-time web functionality",
        "Understanding the difference between real-time web and standard HTTP protocol communication"
      ],
      "course_content": {},
      "requirements": [
        "C#, ASP.Net and JavaScript programming languages - basic skills",
        "Visual Studio 2012 or above will be needed to write code shown in this course",
        "A PC which is connected to a network, be it your home WiFi"
      ],
      "description": "The purpose of this course is to give you the fundamental knowledge of real-time web and how to implement it using Microsoft's suspiciously easy to use library Signal R and probably to make you fall in love with it.\nWhy take this course?\nYou should take this course if you're a professional(or student) with some coding experience in the past but lack understanding of what is real-time web and why it is so important to have in your app. You will learn how to implement a real-time web functionality in your app using Microsoft's library SignalR.\nSections 1, 2 and 3 contain very useful information about HTTP protocol inner workings and the difference from TCP Socket connections and anybody can benefit from them - regardless whether they're familiar with C#.Net or not.\nPractice beats theory\nA lot of courses tend to pile up theory ahead of the real code, this course is going take a minimum theory first approach.\nYou will learn essentials of real-time web and will start implementing it in your application in under 20 minutes.\nWe value your time\nYour time is precious, so instead of repeating one thing in 4 different ways, we will keep it straight to the point - all videos tend to include only the information that you are going to benefit from - no small talk.\nOpen Source Project\nAll source code shown in this course is also made available as a Git repository through GitHub. Students can create their own branches, and push changes back for community benefit.",
      "target_audience": [
        "Take this course if you want to build real-time web apps with SignalR",
        "Real-time web is used in almost every modern app and using SignalR is the fastest way to add real-time web to new or already existing apps",
        "This course also covers the basics of TCP socket communications vs standard HTTP communication, but it focuses on building an application using ASP.NET, so this course might not be suitable for students who do not use the .NET framework."
      ]
    },
    {
      "title": "Advanced MERN Stack Authentication",
      "url": "https://www.udemy.com/course/advanced-mern-stack-authentication/",
      "bio": "Learn MERN Stack Authentication and Authorization like it is done in the real world.",
      "objectives": [
        "MERN Stack Authentication and Authorization",
        "User Registration and Login",
        "Password Reset Via Email",
        "Sending Automated Email",
        "User Management",
        "Assign User Roles",
        "Google OAuth Login"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of MERN Stack"
      ],
      "description": "Welcome to Mern Stack Authentication Course.\n\n\nWhat is Authentication?\nIn simple terms, authentication is the process of verifying who a user is, while authorization is the process of verifying what they have access to.\n\n\nIn this course, we are going to cover MERN Stack Authentication as it is done in the real world.\n\n\nWhat we will cover.\n- MERN Stack Authentication and Authorization\n-  Build Frontend pages with React and SCSS\n-  Setup Routing with React Router V6\n- Build API endpoints with Express\n- User Registration and Login\n- Password Reset Via Email\n- Sending Automated Email\n- User Management\n- Assign User Roles\n- Google OAuth Login\n- User profile management\n- Change password\n- Working with Cookies\n- Working with JWT (JSON web token)\n- Auth Middleware\n- Profile Update\n-  Protect routes to only be accessed by logged-in users\n- Error handling\n- Working with Cookies\n- Pushing projects to Github\n- Deploy Backend to Render\n- Deploy Frontend to Vercel\n\n\nCourse requirement\nDevelopers who got basic React and MERN Stack knowledge and want to learn in-depth MERN Stack authentication.\n\n\nNOTE:\nThis is not an introduction to React course, you are expected to know React before taking this course.\nHowever, I try to explain the ReactJS concepts used in every section.\nThis is not an introduction to MERN Stack course, you are expected to know MERN Stack before taking this course.\nHowever, I will explain everything I do while building the project.",
      "target_audience": [
        "Students who want gain an indepth knowledge of MERN Stack Authentication"
      ]
    },
    {
      "title": "Learn Javascript Based Loader For Your Web App in 59 min",
      "url": "https://www.udemy.com/course/learn-how-to-build-awesome-js-loaders/",
      "bio": "Slow App? No Issues! Design Awesome Loaders",
      "objectives": [
        "Able to Create own Multi-Player Game.",
        "Able to Build their own website and webapps",
        "Learn How to create loaders",
        "Learn how to use them in your web app efficiently"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Loaders",
          "Loaders and Progress Indicator in Javascript UI - Part 1",
          "Loaders and Progress Indicator in JavaScript UI - Part 2",
          "Loaders and Progress Indicator in JavaScript UI - Part 3",
          "Loaders and Progress Indicator in JavaScript UI - Part 4",
          "Loaders and Progress Indicator in JavaScript UI - Part 5",
          "Loaders and Progress Indicator in JavaScript UI - Part 6",
          "Loaders and Progress Indicator in JavaScript UI - Part 7"
        ]
      },
      "requirements": [
        "Basic fundamentals of how to use computer and english language"
      ],
      "description": "Tired of waiting for your heavy app to load? Yes, you can design some great loaders to keep your users occupied. It can be images, animations, games? Oh yes, mini-games too. So join us for this Course and learn to create your own awesome loaders.\nNowadays most of the web programming is done with Javascript and a lot of code comes and sits on the client-side when the user accesses their Apps. In that case, your user waits for the files to load either from CDN or any other source and it causes slowness. Sometimes these lead times to load can be critical to acquire users or lose them.\nLoaders provide a solution to these challenges by allowing your user to interact and be engaged in the time all libraries are loading and thus resulting in better user retention and a more professional look sometimes.\nJoin in this to-the-point course to learn about loaders and how you can create and put your own loaded on your website.\n\nIn this course, you'll learn\n\n- Learn how to create loaders in less than 59 Mins\n- Learn how to use them in your web app efficiently\n- Know what to avoid while creating a loader",
      "target_audience": [
        "Students",
        "Developer",
        "Anyone who wants to learn code",
        "Software Enthusiast/ Hobbyist",
        "Senior Developer",
        "Software Architect/Solution Architect"
      ]
    },
    {
      "title": "Next-Gen Web Development: JavaScript & AI Essentials",
      "url": "https://www.udemy.com/course/next-gen-web-development-javascript-ai-essentials/",
      "bio": "Explore JavaScript Fundamentals, AI Application, Asynchronous Techniques, and API Integration",
      "objectives": [
        "Understand JavaScript's role and applications in web development.",
        "Master basic to advanced JavaScript programming concepts.",
        "Implement AI technologies to enhance JavaScript applications.",
        "Develop skills in asynchronous JavaScript for better user experiences.",
        "Gain proficiency in DOM manipulation and event handling.",
        "Learn error handling and debugging techniques in JavaScript.",
        "Utilize modern JavaScript features like ES6, classes, and modules.",
        "Integrate and manage third-party APIs in JavaScript applications.",
        "Apply performance optimization techniques for JavaScript code.",
        "Complete a real-world project combining JavaScript and AI technologies."
      ],
      "course_content": {
        "Introduction to JavaScript": [
          "Introduction",
          "History and Evolution",
          "Overview of JavaScript in Web Development"
        ],
        "Generative AI Introduction": [
          "Basics of Generative AI",
          "Role of Ai in Building JavaScript Applications",
          "Overview of AI Tools"
        ],
        "Setting Up the Environment": [
          "Tools and Editors",
          "Browser Console Basics"
        ],
        "JavaScript Syntax and Fundamentals": [
          "Variables and Data Types",
          "Operators",
          "Syntax Rules",
          "Control Structures (if, else, switch, loops)",
          "Functions (Definition, Expressions, Scope, Closure)",
          "Arrays and Objects (Methods)",
          "ES6 Features"
        ],
        "DOM Manipulation and Event Handling": [
          "Document Object Model (DOM) Overview",
          "Selecting and Manipulating Elements",
          "Basic Event Handling",
          "Advanced DOM Manipulation (Dynamic Element Creation, Event Bubbling, Delegation)"
        ],
        "Asynchronous JavaScript": [
          "Event Loop and Concurrency Mode",
          "Callbacks, Promises, and Async/Await",
          "AJAX, XMLHttpRequest, and Fetch API"
        ],
        "Error Handling, Testing, and Debugging": [
          "Console Methods",
          "Try-Catch-Finally Blocks",
          "Debugging Tools and Techniques",
          "Unit Testing Frameworks (Jest, Mocha)"
        ],
        "Advanced JavaScript Concepts": [
          "Higher-Order Functions and IIFEs",
          "Object Constructors, Prototypes, and ES6 Classes",
          "Inheritance, Polymorphism, and Encapsulation",
          "JavaScript Design Patterns (Module, Revealing Module, Singleton)"
        ],
        "Working with APIs and JSON": [
          "Making HTTP Requests and Handling Responses",
          "Integrating with Third-party APIs"
        ],
        "Performance and Optimization": [
          "Understanding the JavaScript Engine and Runtime",
          "Memory Management and Leak Prevention"
        ]
      },
      "requirements": [
        "Basic computer literacy and internet navigation skills.",
        "A modern web browser and a code editor installed.",
        "No prior programming experience required, ideal for beginners.",
        "Curiosity and enthusiasm to learn about web development and AI."
      ],
      "description": "Embark on a transformative learning journey with our course, \"JavaScript Mastery with AI Integration: Future-Proof Your Coding Skills\". This comprehensive course is meticulously designed for beginners and intermediate developers aiming to master JavaScript while integrating Generative AI technologies into their projects. Starting with the basics, you'll gain a robust understanding of JavaScript's role in web development, its syntax, and fundamental programming constructs.\nDive deep into the Document Object Model (DOM), learn how to manipulate it and handle events to create responsive interfaces. Our modules on asynchronous JavaScript will equip you with the skills to manage the event loop, promises, and async/await for smoother browser behaviors.\nExplore the critical aspects of error handling, testing, and debugging to ensure your code is robust and production-ready. Advanced topics covered include higher-order functions, design patterns, and the latest ES6 features, empowering you to write clean and maintainable code.\nYou'll also learn how to effectively work with APIs, manage application performance, and utilize modern JavaScript frameworks and tools. The course culminates in a practical project where you'll apply AI tools to enhance your JavaScript applications, setting you apart in the tech industry.\nJoin us to not only elevate your coding skills but also stay ahead in the ever-evolving landscape of web development and artificial intelligence. Whether you're looking to start a career in web development or upgrade your programming toolkit, this course offers all the knowledge you need to succeed.",
      "target_audience": [
        "Beginners interested in learning JavaScript and web development.",
        "Developers looking to integrate AI into their web projects.",
        "Students and hobbyists curious about programming and AI applications.",
        "Professionals seeking to enhance their JavaScript skills with AI.",
        "Entrepreneurs aiming to build AI-enhanced web applications.",
        "Educators and trainers looking for comprehensive JavaScript content."
      ]
    },
    {
      "title": "PHP Object Oriented - 100% Practical + Web Project",
      "url": "https://www.udemy.com/course/php-oop-100-practical-course/",
      "bio": "Learn Object Oriented Programming in PHP",
      "objectives": [
        "OOP PHP Skills"
      ],
      "course_content": {},
      "requirements": [
        "Basic PHP"
      ],
      "description": "Learn from zero the meaning and use of:\n- Classes\n- Interfaces\n- Traits\nBeside the general purpose concepts, dive deep in concepts like:\n- Inheritance\n- Polymorphism\n- Accessors (public, private, static)\n- Constructors\n- Overwrite\n- Predefined functions\n- Magic methods,\n- Nested classes\n- Abstract classes\n...and many other concepts. Then, create a login class as way to sum up the concepts.\nProject:\nAs a way to say \"thank you for following the course\" I added a project that can be described as follows.\nDevelop new skills in a practical manner, by doing a project together with me, using a in-demand database like Mongo. Actually, knowing both SQL (Relational Databases - MySQL, Sql Server, etc ) and No-SQL(Mongo, Redis, etc) is essential for every developer.\nLearn working with Mongo Database, Compass visualizer of Mongo Database and PHP by building an OOP website starting from scratch and continuing up to a finished e-commerce website.\nWe will add functionalities like : Shopping Cart, CMS (Content Management System), Ajax Calls, Insert JPEG's into Database, Login Logic Database Calls, Database Connections,  etc.\nThis course is mainly oriented on back-end side of things and less focused on looks and design that you can configure your own way.\nI choose always the less complicated way of dealing with code when solving some issues because firstly this is a learning course and secondly, if you understand the basics of solving in one way, you'll be able to find better solutions as well. But always, basics first!\nEven if is all about PHP OOP and Mongo DB, I am explaining every line of Javascript code as well. I don't like leaving things unexplained.",
      "target_audience": [
        "PHP learners",
        "PHP beginners"
      ]
    },
    {
      "title": "WordPress Plugin Development using Boilerplate",
      "url": "https://www.udemy.com/course/wordpress-plugin-development-using-boilerplate/",
      "bio": "Learn professional WordPress Plugin development in project based course. Learn how to do it the faster, smarter, easier!",
      "objectives": [
        "Create, save and retrieve custom fields using metaboxes",
        "Create Plugin options settings page with sections and tabs",
        "Different field types like color field, textareas, select fields, checkboxes, multiselect, posts dropdown, media fields and many more",
        "Custom Post Type: Loop, Single template, Archive Template, Permalinks, Taxonomies",
        "Register, configure, output and style Shortcodes",
        "Widgets creation, configuration, Saving and Display",
        "Add different field types to Settings Page, Widgets, Metaboxes",
        "Make plugin translation ready, .POT and .PO files creation and test",
        "How to make extendable plugins",
        "Sanitization, escaping and other best practices for developing secure plugins",
        "Cleanup at Uninstall",
        "Basic Key Concepts"
      ],
      "course_content": {},
      "requirements": [
        "Html, CSS",
        "PHP Basics"
      ],
      "description": "Learn the necessary skills to become a Plugin Developer for a CMS that powers more than 30% of the entire internet.\nWhether you want to:\nbuild plugins for your client,\nfor WordPress plugin repository or\npremium plugins that you want to sell on marketplaces,\nThis most up-to-date course created after release of WordPress 5.0 will give you the necessary skills to create professional plugins that are secure, fast and following Best Practices.\n\n\nIn this project-based WordPress plugin development course, we shall base our plugin on WordPress Plugin Boilerplate. Plugin Boilerplate is meant to be a starting point for plugin development and is defined as “A standardized, organized, object-oriented foundation for building high-quality WordPress plugins.”\n\n\nWith over 100 video lectures and more than 12+ hours of video content, you will learn:\nthe key concepts in WordPress plugin development world to bring the beginner developers up-to-the-speed and giving refresher to seasoned developers\nwhat is plugin boilerplates, how it is structured and what are the points to consider while using online plugin generator\nHow to register Custom Post Types for customized functionality for your plugin\nHow to load single and archive templates to give your CPT unique required look\nHow to create, save and retrieve custom fields using metaboxes\nHow to speed setup metaboxes and custom fields using helper frameworks\nBest practices to efficiently deal with WordPress Settings API to create Plugin options settings page giving the ability to configure your plugin\nMethods to add sections and fields in settings page to organize your plugin settings and save them after sanitization\nHow to create plugin admin menu, action links, and how to add different field types like color field, textareas, select fields, checkboxes, multiselect, posts dropdown, media fields and many more to offer a range of customization for setting plugin options.\nHow to create re-usable piece of codes for plugin users by registering Shortcodes and also learning about different variation of shortcodes with special regard to shortcode attributes.\nBest Practices for enqueuing CSS and JS for shortcodes and how to alter shortcode output using custom post type loop\nHow to use Widgets API to create widgets for the plugin\nIn-depth understanding of how firm(), widget() and update() methods work\nUsing helper classes to create widgets securely and with speed\nHow to avoid naming collisions for functions, classes, constants and variables\nCreate .pot, .po and .mo files to make plugin translation ready\nUsing custom apply_filter to allow overrides and additions\ndo_action to make plugin extendible\nSteps to cleanup at Uninstall\nSubmitting plugins to Wordpress repo\n... and much, much more!\nFor the price of dinner out with your friends, you have the power to learn a high demand skill that have a lot of jobs in freelancing world.\n\n\nEnroll today and enjoy:\nLifetime access to the course and all future updates\nOver 12 hours of high quality, up to date video lectures\nExercise files for every stage of plugin development project\nLinks to all important resources\nAccess to the student-only discussion forum\n30 day, no questions asked, money back guarantee",
      "target_audience": [
        "Who want to learn how to develop WordPress plugins faster and easier. You will learn necessary techniques to develop clean, secure and professional WordPress plugins. WordPress powers nearly 30% of the website of WWW and learning to create plugins can open new career opportunities.",
        "Become WordPress Plugin Developer",
        "Pursue a career in WordPress",
        "Generate extra money by developing and selling WordPress plugins",
        "Learn how to create professional plugins",
        "Know how to avoid pitfalls and errors in plugin development process",
        "Follow best practices for plugin development",
        "Develop secure plugins faster"
      ]
    },
    {
      "title": "WordPress Complete Course 2023 -Master WordPress Easily[New]",
      "url": "https://www.udemy.com/course/wordpress-course-with-elementor-woocommerce/",
      "bio": "WordPress + Elementor + WooCommerce All In one guide |Complete WordPress Course Beginner To Pro",
      "objectives": [
        "Create all kinds of commercial websites, using WordPress, to sell to clients",
        "Create blog, Ecommerce, Business website using wordpress",
        "You will able to build unique responsive dynamic interactive website using WordPress",
        "All about wordpress",
        "Great content for newbie wordpress developers"
      ],
      "course_content": {},
      "requirements": [
        "A working computer, either Windows or Mac or Linux for learning WordPress.",
        "A modern browser like Chrome, Firefox, or Safari needed for learning wordpress",
        "You can develop website with wordpress without writing single line of code",
        "Internet access for many of the lessons."
      ],
      "description": "Have you ever tried to build your website but failed? Do you want to develop your own website but have no money to pay developers? willing to make money by designing websites?\nIf yes I have a solution for you I have created an awesome course for you!!\n\nThe WordPress 2023 Course is designed for beginners who don't know anything about developing a website.\nIn WordPress 2023  Course you will learn everything required to develop your own responsive dynamic and interactive website from scratch.\nThis is a complete WordPress Website Development Course.\nIt is a complete package for everyone who wants to learn WordPress.\n\nWith WordPress powering more than 70% of all CMS websites in the world. There's never been a better time to build an income and a business around it.\n\nIn the course, you will learn\nWordPress Basics\nElementor\nWooCommerce [Your eCommerce website using WordPress]\nWordPress Expert Level Knowledge\nWebsite Security\nBuild a Blogging website using WordPress\nStart today learn WordPress and develop a website for yourself or your business or for your friend's business or for clients. WordPress is a high demanding skill and easy to learn via this online course.\nYou're here because you want to master WordPress, right?\nGood idea. You're in the right place. And, can do it without learning any programming or coding.\nWordPress 2023  Course comes with 30-day question-asked money-back guarantee.\nWhat are you waiting for?? enroll now\nIn case you feel my course is not valuable for your money you can ask for a refund.\n\n\nWordPress 2023 Course is risk-FREE Enroll now I will see you in class",
      "target_audience": [
        "Anyone can learn wordpress. You just need to have basic understanding of internet to learn wordpress"
      ]
    },
    {
      "title": "Build Responsive Real World Websites with HTML5 and CSS3",
      "url": "https://www.udemy.com/course/build-3-real-world-websites-using-html5-css3-js-bootstrap4/",
      "bio": "Convert 3 Modern Photoshop Designs into 3 Stunning responsive websites using HTML5 CSS3, jQuery and Bootstrap 4",
      "objectives": [
        "After this course you will have 3 stunning websites to add to your portfolio",
        "how to use Adobe Photoshop to export your elements from the PSD file",
        "Write Clean reusable code that you can use in any new website",
        "How to Use CSS Preprocessors like SASS & LESS",
        "Use bootstrap 4 components like navbar , cards , dropdowns and more",
        "How to Deal with different libraries and plugins like( animate .css – owl slider – scroll reveal - jQuery UI and more)",
        "how to implement any advanced animations and effects with CSS3 and jQuery",
        "Debugging plus fixing warnings and errors, optimizing your website speed and performance",
        "How to run different tests to your websites",
        "Deliver a full working responsive website to your clients or to your company",
        "learn how to use a very important Project Management tool called Trello",
        "you will be confident in your skills as a front-end Developer / designer",
        "you will be ready to start your front-end developer career easily"
      ],
      "course_content": {
        "Course Introduction": [
          "Why this course and Course plan",
          "Editor"
        ],
        "Adobe photoshop essentials": [
          "section intro",
          "Program Quick look + Common used tools",
          "Selection Tools + Crop Tool",
          "Color Picker + Type Tool + Hand Tool + Zoom Tool",
          "Layers + Exporting"
        ],
        "Bootstrap 4": [
          "Bootstrap 4 - Intro",
          "Bootstrap 4 - Grid system",
          "Bootstrap 4 - Components part 1",
          "Bootstrap 4 - Components part 2",
          "Bootstrap 4 - Utility (helper) classes"
        ],
        "SCSS and LESS": [
          "SCSS and LESS - Intro",
          "SCSS and LESS - Differences",
          "SCSS and LESS - Getting Started",
          "SCSSa and LESS - Features of a Preproccessor",
          "SCSS and LESS - Features part 2 (Mixins + Nesting)",
          "SCSS and LESS - Features part 3 ( Extend )",
          "SCSS and LESS - Features part 4 ( Import )",
          "SCSS and LESS - Wrap up"
        ],
        "Trello the project manger": [
          "Trello - Intro",
          "Trello - Creating our project sturcture files tasks"
        ],
        "OpenCharity-Website": [
          "OpenCharity-Overview",
          "Prepare-Files",
          "Linking Files + Implementing Style sheet",
          "Navbar - part 1",
          "Navbar - part 2",
          "Header - part 1",
          "Header - part 2",
          "Get-involved-section",
          "Mission-section",
          "Members-section",
          "Event-section",
          "Blog-section",
          "Contact-section + Footer",
          "Enhancements",
          "Testing",
          "Recap"
        ],
        "404-penguins page": [
          "404-Overview",
          "404 - Prepare-Files",
          "404 - Start Code",
          "404 - Recap"
        ],
        "Merkury-Website": [
          "Merkury-Overview",
          "Prepare-Files",
          "Linking-Files",
          "Navbar - Part 1",
          "Navbar - Part 2",
          "Header",
          "Services - Section",
          "Features - Section",
          "Drag+Drop-Section - Part 1",
          "Drag+Drop-Section - Part 2",
          "Template - Section",
          "Pricing - Section",
          "join - Section + Footer",
          "Enhancements",
          "Testing",
          "Recap",
          "Important Tips"
        ]
      },
      "requirements": [
        "A Text Editor (Free Resources Provided)",
        "Basic HTML and CSS knowledge is nice to have",
        "any image exporting tool like Adobe Photoshop"
      ],
      "description": "Launch a new career in web development By the end of this course by learning HTML, CSS, jQuery, Bootstrap 4 , Preprocessors like LESS and SASS , How to export your elements from your PSD file , use Trello as Project Manger . All you need is a computer, a bit of time, a lot of determination, and a teacher you trust .\nOur plan will be like this we will start by introducing you to the technologies in this course like (Adobe Photoshop , Bootstrap 4 , less , Sass and more ) ,\nthen we will code our first awesome website in this course ..\nafter that we will take a break by coding a fabulous 404 penguins-page page not found ..\nand finally we will move to the advanced website in this course which is the Merkury website ..\nAfter this course you will have 3 stunning websites to add to your portfolio\nAnd you will be confident in your skills as a front-end Developer / designer ..\nand ready to start your front-end developer career easily ..\nThis course is for anyone who wants to learn front-end development regardless of your current level ..\nAll that matters is that you are comfortable with HTML & CSS .. that’s it\nJoin me now .. and i will see you inside",
      "target_audience": [
        "Beginner ,Intermediate and Advanced Front-end Developers",
        "anyone who wants to Master CSS",
        "anyone prefers to use an advanced animations in his websites",
        "any front-end developer who wants to gain more experience in bootstrap 4 , management tool (TRELLO) , CSS Preprocessors SASS & LESS ,Adobe Photoshop and more"
      ]
    },
    {
      "title": "Bootstrap 4 for Beginners Build a modern Responsive website",
      "url": "https://www.udemy.com/course/bootstrap-4-for-beginners/",
      "bio": "Bootstrap 4 for Beginners Build a modern Responsive website with bootstrap The Complete Course of Bootstrap websites",
      "objectives": [
        "Building Mobile Friendly Responsive Websites",
        "Responsive Website Design",
        "Learn how to design responsive web pages",
        "Become a Professional Web Developer and get hired",
        "Design Modern Responsive Websites"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Bootstrap 4 typography",
          "What is grid System",
          "What is Bootstrap Grid System?",
          "What is color & Tables in bootstrap 4",
          "What is bootstrap 4 Jumbotron ?",
          "What is bootstrap 4 Jumbotron ?",
          "what are buttons in bootstrap ?",
          "what is group button in bootstrap 4 ?",
          "What is group button ?",
          "what is pagination bootstrap 4 ?",
          "what is bootstrap 4 container ?",
          "What is Bootstrap 4 Navbar ?",
          "what is bootstrap 4 drop down header ?",
          "what is input from bootstrap 4 ?",
          "what is bootstrap 4 utilities ?",
          "what is tooltip bootstrap ?",
          "Bootstrap 4 Website Project ?",
          "Bootstrap website Quiz",
          "What is Bootstrap in website design?"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge"
      ],
      "description": "Bootstrap 4 for Beginners Build a modern Responsive website\nBootstrap can help you design your smart mobile-friendly Website  according to your requirements in this course of bootstrap you about to learn all steps how to use jumbotron in bootstrap what is tooltip in bootstrap 4 how can use colors for web design and development Bootstrap 4 for Beginners Build a modern Responsive website with bootstrap The Complete Course of Bootstrap website.\nBootstrap 4 for Beginners\nBootstrap 4 for Beginners Build a modern Responsive website with bootstrap\nThe Complete Course of Bootstrap can help you design your smart mobile-friendly Website  according to your requirements in this course of bootstrap you about to learn all steps how to use jumbotron in bootstrap what is tooltip in bootstrap 4 how can use colors and group colors bootstrap and smart way to learn website in bootstrap and some good Bootstrap\nMaster Bootstrap 4: Build a Modern Responsive Website from Scratch\nAre you ready to create stunning, responsive websites effortlessly? Welcome to \"Bootstrap 4 for Beginners: Build a Modern Responsive Website.\" This course is perfect for aspiring web developers, designers, and anyone eager to learn the power of Bootstrap 4.\nLearn to design and develop modern, fully responsive websites that look great on all devices—desktops, tablets, and smartphones. With hands-on projects, you’ll master Bootstrap's grid system, typography, utilities, components, and customizations.\nNo prior experience? No problem! This beginner-friendly course takes you step-by-step, explaining key concepts with real-world examples.\nBy the end, you’ll confidently build professional-grade websites and gain skills that employers value. Enroll today and take your web development journey to the next level with Bootstrap 4!\nKeywords: Bootstrap 4, responsive website, web development, beginner-friendly course, grid system, HTML, CSS, website design, modern websites, learn Bootstrap, front-end development.\nBootstrap is an open-source toolkit for developing with HTML, CSS, and JS. Quickly prototype your ideas or build you require apps with the responsive grid system, extensive prebuilt components and powerfully built on JQuery.\nBootstrap\nHow to use the container in bootstrap the main role of the bootstrap the best dropdown and utilities and the bootstrap navbar how can use and manage the bootstrap 4 navabar\nBootstrap includes HTML and CSS based design templates for typography, forms, buttons, tables, navigation, modals, image carousels and many other, as well as optional JavaScript plugins and Bootstrap also gives you the ability to easily create responsive designs Bootstrap\nBootstrap includes HTML and CSS based design templates for typography, forms, buttons, tables, navigation, modals, image carousels and many other, as well as optional JavaScript plugins and Bootstrap also gives you the ability to easily create responsive designs",
      "target_audience": [
        "Basic and Intermediate Students"
      ]
    },
    {
      "title": "Bootstrap Bootcamp - Responsive web development- 8 projects",
      "url": "https://www.udemy.com/course/bootstrap-bootcamp-with-projects/",
      "bio": "Learn Bootstrap and responsive web development",
      "objectives": [
        "By the end of this course you will have 8 projects to present in your resume",
        "you will learn to apply your knowledge and create front end websites",
        "You will learn about responsive web development",
        "You will learn to solve your challenges",
        "You will never face any problem in front end responsive web development in Bootstrap",
        "Master Bootstrap with projects"
      ],
      "course_content": {},
      "requirements": [
        "Basics of HTML would be great, before you join in",
        "CSS is not required much as we will learn a lots of CSS on the go",
        "Your favourite text editor (we will cover that in a lecture)"
      ],
      "description": "Bootstrap Bootcamp - Building 8 Projects\nIf you are coming from HTML knowledge and are looking to get some confidence in building projects OR you want to learn responsive web development, then you have landed on right page. In this course we will learn about responsive web development and will create 8 projects that you can use in your profile too.\nWhen any student starts learning HTML, although he gets the concept but still needs confidence in creating a full website. On top of that, creating a mobile website is not easy to do. In order to create a responsive design, that behaves according to screen sizes, is a tough task especially for a new web developer. With Bootstrap framework, it becomes much more easy to create web pages that are automatically responsive but of course, up to a limit. Beyond that limit we have to manually write responsive CSS to solve minor issues.\nLearning Bootstrap is an essential skill in present era as every web page, hybrid app and even CMS use Bootstrap to make front end of their web pages. You can further take your knowledge in converting your site templates to CMS templates. Even most of the wordpress templates comes as Bootstrap templates at front end.\nThis course will teach you to understand Bootstrap directly from it’s documentation. Further we will apply that knowledge in create 8 different and professional projects. These are not any toy projects, these can be used in any professional website.\nAll exercise files are already included with the course. Although we recommend to code along with us but in case, you got some mis match, then refer to these exercise files.\nTake a look at free video and check the projects that we will create in this course. This help further help you to make a decision for this course.\nCatch you inside the course !",
      "target_audience": [
        "Beginners, interested in web development",
        "interested in responsive web development",
        "Front end web development",
        "get trained as a freelancer web development",
        "Apply for Front end development with Projects in resume"
      ]
    },
    {
      "title": "Starting with Apache Wicket (version 9.x+)",
      "url": "https://www.udemy.com/course/starting-with-apache-wicket-version-9x/",
      "bio": "Get started with Apache Wicket in 2023 with forms, components, MongoDB, GridFS and backed by SpringBoot",
      "objectives": [
        "How to make a basic Apache Wicket project setup",
        "Manage Apache Wicket + Spring Boot integration",
        "Explore Apache Wicket basic concepts",
        "Develop a basic Todo App using Wicket",
        "Connecting to the database using Spring Data integration (MongoDB)",
        "Using Apache Wicket components",
        "Use HTML/CSS templates together with Apache Wicket related tag attributes",
        "Understand how to design applications with Apache Wicket in the background"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic ToDo application: step-by-step guide - part 1": [
          "Application overview - basic setup and dependencies",
          "Single page app - overview",
          "Single page app - layouts"
        ],
        "Storing data in MongoDB": [
          "Why using MongoDB?",
          "Project configuration for supporting MongoDB",
          "Creating basic MongoDB code infrastructure",
          "MongoDB implementation summary"
        ],
        "Basic ToDo application: step-by-step guide - part 2": [
          "Single page app - items view - part 1",
          "Single page app - items view - part 2",
          "Adding Todo items - part 1",
          "Adding Todo items - part 2",
          "Adding Todo items - part 3",
          "Updating items on the screen - part 1",
          "Updating items on the screen - part 2",
          "Removing Todo items",
          "What we are not doing - overview",
          "Selecting / deselecting all items",
          "Single Page application created"
        ],
        "Quiz": [
          "Knowledge review"
        ],
        "Working with MS Excel exports": [
          "MS Excel usage overview",
          "Dependencies needed",
          "Building a backend code for creating MS Excel file part 1",
          "Adding a export button to the screen",
          "Connect the backed Excel export implementation with our button",
          "Applying a simple styling for our Excel file",
          "What we are not doing - overview",
          "Hiding/disabling download button when no items available"
        ],
        "Implementing PDF reporting": [
          "PDF usage overview",
          "Building backend for creating PDF file part1",
          "Adding HTML template (blueprint) for PDF",
          "Implementing button for download PDF",
          "What we are not doing - overview",
          "Various PDF formatting",
          "Adding images to PDF",
          "Adding barcode to PDF",
          "PDF reporting from Wicket application overview"
        ]
      },
      "requirements": [
        "Basic Java and web development knowledge",
        "Basic Spring / SpringBoot framework knowledge",
        "Basic Web development knowledge of HTML / CSS"
      ],
      "description": "Welcome to the ‘Starting with Apache Wicket’ course. With this course, you are going to add value to your existing JAVA and Apache Wicket 9+ (with SpringBoot) knowledge by getting familiar with several techniques for solving specifically selected areas of JAVA web application development.\nWe will focus on several topics often useful in corporate JAVA development but not exclusively. SpringBoot is being used here as an underlying framework, but solutions presented here are not specific to this platform and can be reused e.g. with recent Quarkus support, etc.\nThe primary idea of this course is to help new or existing Apache Wicket developers to adopt certain knowledge in an easy way. The solutions presented are being used for several years in production-grade Wicket applications and the libraries used are well-known for stability and active development. This will protect the value invested into adopting some libraries or projects.\n\n\nWhat you'll learn\nStart building real apps with Apache Wicket and SpringBoot\nBecome a master in fullstack development using Apache Wicket\nLearning-by-doing method of building real application and practice your knowledge immediately\nUse ajax client/server communication using Java only\nIntegrate 3rd party libraries into your Apache Wicket app\nAdd a new value to your existing SpringBoot development knowledge/skills\n\n\nTopics covered by this course:\nDuring a course, we create a basic Apache Wicket single-page application and each lecture will add a new enhancement to it. Eventually, we create a single application with many different features. The main topics include:\n\n\ncreating a full-featured single-page application using Apache Wicket\nexport application data in MS Excel format with formatting and some other features\nexport application data in PDF format with formatting, embedded images or bar-codes\nincluding MongoDB as persistent data storage\nusing GridFS as an attachment/file uploads data storage (PREPARING)\nAn important part of this course is to realize 'what we don't need to do' when using Apache Wicket. Simplification can be huge and the old saying that 'the best code is the code you don't have to write' is proven here.\n\n\nGitHub repository:\nThe source code is available through the link attached to the last lecture in this course. You can clone the repo and use the code snippets we are building in this course.\n\n\nSummary:\n‘Starting with Apache Wicket’ course is targeted at individuals or small/medium teams of professional Java developers that want to be productive and competitive in this large market. Techniques presented here can be reused easily in application development of many kinds.",
      "target_audience": [
        "'Starting with Apache Wicket' is targeted for individuals or small/medium teams of professional Java developers that want to be productive and competitive in this large market area. You will see that Apache Wicket can help you to quickly create an applications, that you can maintain easily for decades."
      ]
    },
    {
      "title": "JavaScript Interview Questions & Answers",
      "url": "https://www.udemy.com/course/javascript-interview-questions-answers/",
      "bio": "Most commonly asked JavaScript interview questions and answers. Apply confidently for a Web / Full Stack Developer jobs.",
      "objectives": [
        "Commonly asked Interview Questions & Answers on JavaScript",
        "Prepare for Web Developer / JavaScript Programmer job interviews",
        "Free Downloadable booklet of JavaScript Interview Questions & Answers",
        "Become a Web Developer / Software Engineer / Web Programmer",
        "Prepare for Front End Engineer jobs",
        "Prepare for Full Stack Developer (MERN, MEAN) interviews"
      ],
      "course_content": {
        "Part 1 - JavaScript Interview Questions & Answers": [
          "Part 1 - JavaScript Interview Questions & Answers"
        ],
        "Part 2 - JavaScript Interview Questions & Answers": [
          "Part 2 - JavaScript Interview Questions & Answers"
        ],
        "Part 3 - JavaScript Interview Questions & Answers": [
          "Part 3 - JavaScript Interview Questions & Answers"
        ],
        "Part 4 - JavaScript Interview Questions & Answers": [
          "Part 4 - JavaScript Interview Questions & Answers"
        ],
        "Part 5 - JavaScript Interview Questions & Answers": [
          "Part 5 - JavaScript Interview Questions & Answers"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the JavaScript Interview Questions & Answers course by Uplatz.\n\n\nUplatz brings you this training on the most commonly asked interview questions and answers on JavaScript.\nBy learning and understanding deeply the popular interview questions (with answers) of JavaScript, you can confidently apply for Web Developer / JavaScript Programmer / Full Stack or Frond End Engineer / Web Designer roles.\nThis course explains the solutions to common questions asked in typical JavaScript Programmer and Web Developer interviews and comes with a freely downloadable booklet on the same.\nJavaScript interview questions tutorial will help you crack the job interviews which can be a turning point in your career!\n\n\nBackground\nJavaScript is a lightweight, interpreted programming language with object-oriented capabilities that allows you to build interactivity into otherwise static HTML pages. The general-purpose core of the language has been embedded in Netscape, Internet Explorer, and other web browsers.\nJavaScript was created by Brendan Eich in 1995 to give web pages a little more pep than the <blink> tag could provide. Today it has far more powerful uses and companies like Google and Facebook use JavaScript to build complex, desktop-like web applications. With the launch of Node.js, It has also become one of the most popular languages for building server-side software. Today, even the web isn’t big enough to contain JavaScript’s versatility. I believe that you are already aware of these facts and this has made you land on this JavaScript Interview Questions article.\nSo, if you are planning to start your career in JavaScript and you wish to know the skills related to it, now is the right time to dive in, when the technology is in its blossoming state. JavaScript Interview Questions will provide you with in-depth knowledge and help you prepare for your interviews.\n\n\nWhy JavaScript\nThe numbers speak for themselves. According to the US Bureau of Labor Statistics, web developer jobs are targeted to grow by 40% in 2012-2022, which is much higher than any other stream. This is backed by many major publications and professional bodies listing JavaScript in their Top 10 Programming languages for 2019-2020.\nSo, if you’re getting interviewed for any kind of web development position, or for Android / iPhone app developer positions, you’ve got to brush up your JavaScript skills.\nAccording to stackoverflow survey of 2019,\nJavaScript is the number 1 programming language!\nJavaScript (67.8%)\nHTML/CSS 63.5%\nSQL 54.4%\nPython 41.7%\nJava 41.1%\nBash/Shell/PowerShell 36.6%\nC# 31.0%\nPHP 26.4%\nC++ 23.5%\nTypeScript 21.2%\nC 20.6%\nRuby 8.4%\nGo 8.2%\n....\n\n\nTips for JavaScript interviews\nSome quick tips & tricks to crack JavaScript Developer interviews are:\n1) Understand the JS functions\n2) Understand bind, apply and call\n3) Understand JavaScript scope well (Closures also)\n4) Understand 'this' keyword (global, function and object scopes)\n5) Understand objects (Object.freeze, Object.seal)\n6) Understand Prototypical Inheritance\n7) Understand the callbacks and promises well\n8) Understand the regular expressions well\n9) Understand Map, Reduce and Filter well\n10) Understand Error handling patterns\n11) Other things to know (Hoisting, Event Bubbling)",
      "target_audience": [
        "Anyone aspiring to become a Web Developer / Front End Engineer",
        "JavaScript Developers",
        "Full Stack Developers and Web Developers",
        "Frond-end Software Engineers and Programmers",
        "Application Developers",
        "Mobile App Developers",
        "JavaScript Developers - React & Angular",
        "Full-stack JavaScript Developers",
        "Working Professionals wishing to switch their jobs & roles for better prospects",
        "Technical Architects",
        "Newbies and Beginners"
      ]
    },
    {
      "title": "Building a Search Engine",
      "url": "https://www.udemy.com/course/building-a-search-engine/",
      "bio": "All algorithms and secrets reveled",
      "objectives": [
        "Cover all algorithms used in Search Engines",
        "Introduce you to Big Data technologies and explain how to use them to build a Search Engine",
        "Couse contents are updated regularly.",
        "Reveles all secret spam fighting techniques used by GOOGLE"
      ],
      "course_content": {
        "Introduction to Building a Search Engine": [
          "What you will learn?",
          "Prerequisites"
        ],
        "Getting started with Search Engine": [
          "What is a Search Engine?",
          "Features of a good search engines",
          "Brief history of Search Engines",
          "Difference between Search Engine and Web Directory",
          "What is a Metasearch Engine?",
          "What is Social Search?",
          "What is Filter Bubble?",
          "Open source search engines",
          "How Search Engines work?",
          "Basic questions"
        ],
        "Web Crawler": [
          "Introduction to Web Crawler",
          "HTTP 301 vs HTTP 302 Redirects",
          "DNS Caching",
          "Multithreading vs Asynchronous Crawling",
          "Data Compression and Caching",
          "Webgraph",
          "robots.txt and sitemap.xml",
          "Crawling policy",
          "Crawler Identification",
          "Crawling the deep web",
          "Spider traps",
          "Popular libraries",
          "Open source web crawlers",
          "Crawler questions"
        ],
        "Parser": [
          "What is a Parser?",
          "What to Parse and What not to Parse?",
          "Spam fighting",
          "Open source parsers"
        ],
        "Indexing": [
          "What is Indexing?",
          "Index design factors",
          "Inverted indices",
          "The forward index",
          "Sharding",
          "Index questions"
        ],
        "Text Processing": [
          "Text Analysis and Query Processing"
        ],
        "Getting deep into Search Engines": [
          "PageRank",
          "Query Clustring",
          "Spell checking",
          "Spell checker",
          "Questions"
        ],
        "Search Engine Storage": [
          "Parallel Computing vs Distributed Computing",
          "Memcached",
          "Google Big Table",
          "Google File System and MapReduce",
          "Apache Solr",
          "Storage questions"
        ],
        "Search Engine Optimization": [
          "Introduction to SEO",
          "White hat versus black hat techniques",
          "On-Page SEO, TIPS and TRICKS",
          "Off-Page SEO, TIPS and TRICKS"
        ],
        "Apache Solr": [
          "How does solr work?",
          "Configuring and launching Solr",
          "Solr Cloud and Multiple schema.xml",
          "Solr complete reference"
        ]
      },
      "requirements": [
        "Internet",
        "OS X, Windows or Ubuntu"
      ],
      "description": "With \"Developing a Search Engine\", you will learn everything about Search Engines, even if you've never build one before!\nThe full course has several video lectures, divided into several chapters. Each chapter will give you a new level of knowledge in Search Engine development. We'll start from the basics of Search Engine development to more advanced and the most popular algorithms used now a days.\n\"Building a Search Engine\" will give you a new perspective on how the Internet works and after you completed the course you will be able to create your own Search Engine with the latest technology and algorithms. Hope you enjoy!\nNOTE: In order to keep you up to date in the world of Search Engine Development all the chapters will be updated regularly with new lectures, projects, quizzes and any changes in future versions of all the programming languages covered on the course.\nWhy Learn Search Engine Development?\nThe internet is the fastest and largest platform ever created for humans to learn, communicate, share, or create businesses of any kind, and all of this in just 15 years! It is estimated that in the next 2 or 3 years more than 80%%%% of the companies around the world will become internet dependent which will cause a huge demand for Search Engine developer in this market. As the World Wide Web grows Search Engines needs to upgraded proportionally.\nLearning Search Engine Development will give you the opportunity to start ahead of other competitors by giving you the knowledge of the most recent web technologies and how to better apply them on your future projects. Knowing Search Engine Development will give you the ability to control and create anything on the web.\nHow this course will help you to get a Job?\nAt present the fastest growing technology in the Internet is Search Engines. Google makes thousands of changes every year and employees larger number of engineers who can make their Search Engine more efficient as the structure of the web is becoming larger and complicated. Other companies are employing Search Engine experts to optimize their websites to appear on top results in Search Engines.\nI promise you would have never had such kind of learning experience.\nWelcome to \"Building a Search Engine\"",
      "target_audience": [
        "Needs to know basics of Networking",
        "Needs to know basics of Web Development",
        "Should be familier with atleast one programming language"
      ]
    },
    {
      "title": "Python Web Programming",
      "url": "https://www.udemy.com/course/python-web-programming/",
      "bio": "Access and parse the web with Python",
      "objectives": [
        "Access and parse the web with Python.",
        "Manage a database.",
        "Manage remote server",
        "Run code via a VPS",
        "Create a basic website with Python"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Python Programming Review": [
          "Section Introduction",
          "Object Oriented Programming Part 1",
          "Object Oriented Programming Part 2",
          "Modules",
          "Modules Part 2",
          "Section Conclusion"
        ],
        "Basic Database (SQLite) with Python": [
          "Section Introduction",
          "SQLite Intro",
          "Creating Database And Table",
          "Inserting Data",
          "Inserting Dynamic Data",
          "Reading Data",
          "Limit, Update, and Delete",
          "Section Conclusion"
        ],
        "Using Python with the Internet": [
          "Section Introduction",
          "urllib module",
          "urllib.requests",
          "urllib headers",
          "xml intro",
          "parsing xml",
          "Section Conclusion"
        ],
        "Working with HTML": [
          "Section Introduction",
          "Web Page Structure",
          "Web Page Structure 2",
          "Nav bar",
          "HTML’s body",
          "Comments, footers, and divs",
          "Parsing Paragraph Data",
          "Section Conclusion"
        ],
        "Intro to Web Server Programming": [
          "Section Introduction",
          "Creating a VPS",
          "Interacting with our VPS",
          "FileZilla",
          "PySFTP",
          "Section Conclusion"
        ],
        "MySQL database with Python": [
          "Section Introduction",
          "MySQL basics",
          "MySQL Part2",
          "Database Connection",
          "Inserting into Database",
          "Adding logic to insert",
          "Nohup",
          "Crontab",
          "Section Conclusion"
        ],
        "Python's Flask Web development Framework": [
          "Section Introduction",
          "Flask setup",
          "Flask backend setup",
          "Basic Website",
          "Templates and Errors",
          "Variables and Logic",
          "Bootstrap incorporation",
          "More on Bootstrap",
          "Adding more pages to our site",
          "Extending Templates",
          "Additional Information"
        ],
        "Course Conclusion": [
          "Course Conclusion"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "The basics of Python 3",
        "Up to $5 for a Digital Ocean VPS. VPS cost can be per hour, at an average of $5 a month, so the cost of the server can actually be much less than this."
      ],
      "description": "Imagine powering up your tablet and browsing a site you built. Or discovering the skills necessary to launch a career in web programming. Or imagine, after years of thinking about it, finally crossing “become code literate” off your bucket list. The Stone River eLearning course Python Web Programming will ease you through the big, vast world of Python web programming. Over the course of 7 hours, you'll be introduced to all the innovative concepts and foundational principles necessary to master web programming with Python. So whether you're an upstart programmer, an aspiring web developer, or someone just looking to gain a deeper understanding of python web programming, with this course you'll acquire the understanding and the confidence to conquer all things Python.\nThree Reasons to Learn Web Programming With Python\nIt's easy and quick to learn: Forget strict syntax rules and endless strings of coding, Python was designed with simplicity in mind. And you'll be busy coding before you know it. Why? Because Python requires less time, less code and less concepts than all other programming languages.\nIt's a stepping stone: New to object-oriented coding, or programming all together? Get your feet wet with the most versatile coding language on the market. Python Web Programming teaches you sound foundational skills that are easily transferable to other, more tedious languages.\nIt's a money maker: The demand for Python web programmers is booming. In fact, it's the most popular coding language in the world. Used by giants like Google, Pinterest and Instagram, it's is the only language you'll need to begin a career in Python web programming, design your own games, software, websites and work with Big Data. And that's just for starters.\nHow is this course different?\nWe understand. There are other Python courses, but Python Web Programming dives deep into all aspects of web programming with Python. We pull back the curtain on web programming with Python—giving you an unparalleled understanding of the art and science behind it, but we don't stop there. You'll graduate with the all the tools necessary to build vibrant, sustainable web based programs.\nYou see, this course was created as a labor of love. In fact, it's delivered with a level of quality and expertise you'd expect from an elite university ---not an online course.\nWhat are the requirements?\nA computer\nPC, Mac or Linux Operating Systems\nWhat am I going to get from this course?\nOver 60 lectures and 6 + hours of content!\nAcquire an in-depth understanding of Python web programming.\nGet hands on experience working with Python files and building programs",
      "target_audience": [
        "Programmers with basic Python knowledge",
        "Anyone interested in web development",
        "Those interested in Python databases",
        "Aspiring web developers",
        "Those looking to learn more than the basics of Python programming",
        "Do not take the course if you have never used Python before"
      ]
    },
    {
      "title": "JavaScript Exercise Countdown Timer",
      "url": "https://www.udemy.com/course/javascript-exercise-practice/",
      "bio": "Explore how to apply JavaScript to create a countdown timer - Practice exercise for JavaScript",
      "objectives": [
        "Create interactive JavaScript Countdown timer",
        "Use JavaScript Date object and apply Logic"
      ],
      "course_content": {
        "Introduction to JavaScript coding exercise": [
          "Introduction JavaScript Countdown Timer Exercise",
          "Setup HTML page elements",
          "Some CSS Styling for Countdown",
          "Source Code HTML and CSS",
          "JavaScript Countdown Variables",
          "Source Code JavaScript",
          "Event Listeners JavaScript",
          "Source Code JavaScript",
          "Starting the Clock JavaScript",
          "Source Code JavaScript",
          "JavaScript Date Get Time Remaining",
          "Update HTML elements JavaScript",
          "Source Code JavaScript",
          "Save Timer to LocalStorage",
          "JavaScript Exercise Code Review",
          "Project Source Code"
        ],
        "Bonus Section Coding Examples and Questions and Answers Responses": [
          "How to add all numbers from an array for loop",
          "Source Code example Array loop of contents",
          "JavaScript Dynamic Image Gallery",
          "template literals",
          "Supplementary Documents Collection"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge",
        "HTML and CSS experience",
        "Desire to learn JavaScript"
      ],
      "description": "JavaScript Practice Exercise - Learn to apply JavaScript to build a countdown timer from scratch!\nCourse demonstrates how to use JavaScript within a practice exercise, applying JavaScript to connect to HTML elements and user interactions.  Let the user select a date and JavaScript will return and output the amount of time left until that date is reached.   The countdown is displayed within the HTML elements, using JavaScript to manipulate the element content.  Scope of this course is to help outline the steps in logic to build with JavaScript code.  Planning and where to start to build.\nPrefect course for beginners to learn JavaScript!!! Step by step learning with all steps included.  Fun and exciting way to learn and practice JavaScript. by applying what is presented in the lessons and building your own version of the applications.  Make it even better, style it and try out JavaScript.\n\nBeginner JavaScript knowledge is required as the course covers only JavaScript relevant to the building of the countdown timer.  Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\n\nhow to setup your HTML elements and CSS basic stlying\nadd event listeners for user interactions to invoke JavaScript functions\nUse JavaScript Date Method calculate the date difference\nManipulate and update HTML elements using JavaScript\nStore values in the browser local Storage for seamless loading of content\nAll this is included and a whole lot more.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building your own version of the countdown timer today!!!!",
      "target_audience": [
        "Anyone who wants to learn an practice JavaScript",
        "Web developers",
        "Beginners to JavaScript",
        "Anyone who wants to learn more about using JavaScript"
      ]
    },
    {
      "title": "Data Structures in JavaScript",
      "url": "https://www.udemy.com/course/data-structures-in-javascript/",
      "bio": "Learn to implement popular Data Structures in JavaScript. Learn real world programming and get Job ready",
      "objectives": [
        "Learn professional programming in JavaScript",
        "Learn to implement important DataStructures like Stacks, Queues, Hash tables and Graphs",
        "Learn to be a better programmer by wisely choosing your data structures while building your next software",
        "Master core concepts behind the Data Structures"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction to Javascript and Data Structures": [
          "Introduction and Overview",
          "Programming Practices",
          "Introduction to Data Structures"
        ],
        "Arrays": [
          "Understanding Arrays",
          "Implementation of Arrays in Javascript",
          "Array Implementation in JavaScript",
          "Two dimensional Arrays"
        ],
        "Lists": [
          "Understanding and Implementation of Lists"
        ],
        "Stacks": [
          "Understanding Stacks and Operations",
          "Implementation of Stack using JavaScript",
          "Palindrome Example",
          "Factorial Example",
          "Base Conversion"
        ],
        "Queues": [
          "Understanding Queues",
          "Queues Implementation",
          "Priority Queues"
        ],
        "Linked List": [
          "Understanding Linked List",
          "Linked List Implementation",
          "Understanding Double Linked List",
          "Implementation of Doubly Linked List",
          "Output for Double Linked List",
          "Implementation of Circular Linked List"
        ],
        "Dictionaries": [
          "Dictionaries and its implementation in JS"
        ],
        "Sets": [
          "Understanding Sets",
          "Analysing the output of set",
          "Intersection and Union of sets",
          "Analysing advanced set operations"
        ],
        "Hashing": [
          "Hashing",
          "Implementation of Hashing",
          "Better Hash Functionality",
          "Output for better hash function",
          "Hashing Integer keys"
        ]
      },
      "requirements": [
        "Basic programming knowledge is required to complete the course."
      ],
      "description": "Become a master at data structures with this easy course on Data Structures in JavaScript!\nData structures are important when it comes to doing anything related to computers. With the huge role that data plays in today’s world, data structures allow a structured format to saving and retrieving data.\nData structures are often designed to be efficient in terms of storing and retrieving data in an easy and efficient manner. The faster the data is retrieved determines the success of the structure.\nAll programming languages have different built-in data structure commands that allow them to store data in a more efficient manner, such as objects, arrays, etc. Each language writes its own structure properties and features. JavaScript, one of the most popular programming languages has its own set of built-in data structure commands, which allow it to work extremely well with large amounts of data.\nIn this course, you’ll learn exactly how! This course breaks down data structures in JavaScript into small and easy to understand concepts, where you will cover a number of different commands that are built-in within the JavaScript Programming Language.\nThis hands-on informative course will help you get ready for learning amazing data structure skills as well as help you learn how to actually store and structure your data at the end of this course. The course will start with a detailed introduction into data structures, including their significance and some important programming practices, before it delves into data structures such as Arrays, Stacks, Linked Lists, Queues, Hash Tables and Trees Graphs.\nThe course also covers a detailed introduction to sorting and searching algorithms, as well as the different benefits of data structures.\nAt the end of this course, you will have not only mastered the different functions of data structures in JavaScript but also how the data structures actually work from scratch in this functional and comprehensive Data Structures in JavaScript tutorial.\nEnroll now and we’ll see you on the other side!",
      "target_audience": [
        "Anyone who wants to learn Data Structures will find this course very useful."
      ]
    },
    {
      "title": "Tyton's Ultimate Wordpress Training Academy",
      "url": "https://www.udemy.com/course/tytons-ultimate-wordpress-training-academy/",
      "bio": "Learn How to Create Wordpress Websites with NO CODE!",
      "objectives": [
        "Install Wordpress on a Server via FTP",
        "Install a Wordpress on a Server via Softlicous",
        "Install a Wordpress theme",
        "Customize a Wordpress Theme",
        "Install a Wordpress plugin",
        "Optimize Wordpress for speed",
        "Optimize Wordpress for SEO (search engine optmization)",
        "Create an E-commerce store with wordpress",
        "Start a web design agency with Wordpress",
        "Migrate Wordpress websites",
        "Create a full websites from start to finish"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Knowledge",
        "Using an Internet Browser"
      ],
      "description": "If you are looking to learn a full spectrum of information about Wordpress then this course is for you. Tyton's Ultimate Wordpress Academy is the most extensive Wordpress course that gets hands on with the popular CMS software. This course is perfect for beginners looking to become more familiar with Wordpress or experts who want to extend their knowledge and ability.\nIn this course, we will go over Wordpress Hosting, Setting up and customizing Wordpress websites and setting up an e-commerce website using Wordpress.\nBy the end of this course, you will be able to create stunning Wordpress websites for your small business or to even create your very own web design agency where you can make a great living from your home.",
      "target_audience": [
        "Anyone looking to become more skilled in Wordpress",
        "Non-coders looking to create websites in Wordpress",
        "Developers who want to learn how to customize Wordpress",
        "Small Business owners who run their website on Wordpress",
        "Entrepreneurs looking to create an online business",
        "Anyone looking to start a web design agency"
      ]
    },
    {
      "title": "Learn PDO By Creating A CRUD Website (PHP & MySQL)",
      "url": "https://www.udemy.com/course/learn-pdo-by-creating-a-crud-website/",
      "bio": "In this course, you'll learn how to connect to a database and perform various CRUD operations in PHP using PDO in MySQ",
      "objectives": [
        "CRUD (Create, Read, Update, Delete) Operations on Database",
        "PDO (PHP Data Objects)",
        "Implement Live Search using JavaScript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction To Course",
          "What is PDO?",
          "The PDO Process",
          "Create A Local Server",
          "Create A Database In MySQL"
        ],
        "PHP Data Objects": [
          "Connect To Database",
          "Insert Into Database",
          "View Data From Database",
          "Delete Data From Database",
          "Count The Number of Rows Affected",
          "Update Data In Database",
          "Search In The Database"
        ],
        "The Project": [
          "The Final Project (HTML)",
          "The Final Project (CSS)",
          "The Final Project (PHP)",
          "Implement Live Search",
          "What Next?"
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS"
      ],
      "description": "In this course, you will learn how to use PDO (PHP Data Objects) in PHP to perform operations on a database securely. We will be using the MySQL database in this class. But you can use other supported databases and almost all the code will be the same.\nWe will be using an Object-oriented approach to write the PHP code. So, you will even learn how to create a class, instantiate it and call the methods on the object.\nAt last, I will develop a web page where all the knowledge you have acquired during the course will be used to create a complete CRUD web page. As a bonus lecture, I will also show you how to code the Live Search mechanism in your webpage where you can perform operations on the database without reloading the page.\n\nFor taking this course, it is would be great if you have the following prerequisites:\nBasic knowledge of HTML and CSS\nAlthough there are these prerequisites, I will explain each and every line of code that we are going to write. So, even if you are a complete beginner, you can join in. Just follow along and you will learn a lot.\nAfter completing this course, you will be able to perform Insert, Delete, Update and Select operations on your database. This will help you in creating backend applications.\nSome examples where you can use this knowledge are:\nCreating a to-do application\nCreating a blog\nCreating a simple registration system\nCreating contact form\nAnd more…\nI will you all the best. Keep learning and happy coding.",
      "target_audience": [
        "Beginner Web Developers",
        "Beginner PHP Developers"
      ]
    },
    {
      "title": "Python/Django App- Create & Deploy a Computer Vision Model",
      "url": "https://www.udemy.com/course/full-stack-model-creation-and-deployment-in-python-django/",
      "bio": "Full Stack Computer Vision web app using python and Django, Transfer Learning, CNN, Keras, html, CSS, JavaScript, Ajax.",
      "objectives": [
        "Creating a full stack computer vision model using Transfer Learning in Python. The course will include details on how to create a computer vision model in python, and how to host it on server using Django.",
        "How to save and deploy any python ML/DL model you have created using Django.",
        "How to deploy a model in Production, Client Side(html, CSS) and Server side(Python) programming. All open source and free to use technologies.",
        "Learn Django and Integrating a python code with the Django Framework.",
        "How to create a user interface(UI) for your python code or ML/DL model that can take input from user, pass the input to your ML/DL model and renders back the results to UI.",
        "How to utilize transfer learning for feature extraction thus helping train new models without the need of a powerful GPU.",
        "Re-usability : how to quickly retrain the model that you create on new set of images.",
        "How to create an end to end computer vision project."
      ],
      "course_content": {},
      "requirements": [
        "Python (I did included some python basics as a refresher)",
        "Knowledge of Deep learning good to have but not a must. I did included detailed lectures explaining CNN architecture and transfer learning, along with code.",
        "Zeal to learn."
      ],
      "description": "This Course has been designed for the developers who are able to train ML/DL models, but they struggle when it comes to saving the model for future use or when it comes to deploying the model through a full stack portal.\nThis course will teach you how to train and create computer vision model from scratch, how to utilize transfer learning for feature extraction, how to save those models using pickle,  and how to deploy the models using Django framework.",
      "target_audience": [
        "One who wants to create full stack portal with client side(html, css, javascript) and server side(Python) functionality.",
        "One who wants to save his trained ML/DL model in python for future predictions.",
        "One who knows how to create a ML/DL model in python but don't know how to deploy it.",
        "One who wants to host his model as Web Server.",
        "Students who want to create a project. The models can be retrained on new set image really quickly and projects like KYC or any other image classification projects can be created end to end.",
        "One who wants to code practical implementation using open source libraries like tensorflow and Keras."
      ]
    },
    {
      "title": "Code & Grow Rich: Earn More As An Entrepreneur Or Developer",
      "url": "https://www.udemy.com/course/code-grow-rich-earn-more-as-an-entrepreneur-or-developer/",
      "bio": "Make More Money as an Entrepreneur, Web & Mobile App Developer, Software Engineer, Startup Junkie, or Programmer",
      "objectives": [
        "accelerate and amplify the precision in which you bring startup ideas to life by interweaving technology and entrepreneurship",
        "earn more money as an entrepreneur, mobile app developer, web developer, software consultant, startup junkie, hacker, video game developer, software engineer, or career changer",
        "learn how to create and monetize software",
        "attract, acquire, and retain clients that are willing to pay you top-dollar",
        "learn how to build both \"fast-twitch\" and \"minimally invasive\" income streams",
        "manage clients more efficiently and make more money per project",
        "turn these clients into even bigger cash-cows by weaving them into your own automated referral system",
        "merge complementary, recurring, and passive income streams to make money while you sleep",
        "scale your software creations and sell out to the big players",
        "earn significantly more per hour as a software consultant",
        "earn even more money by teaching web and mobile app development to the masses",
        "land your dream job and secure the absolute best compensation package",
        "add more value in your existing job by mastering core aspects of technology and business",
        "future-proof your earnings by understanding where technology is headed",
        "make some serious coin by translating growth hacking skills to actual dollars",
        "manage the cyber-security needs for multiple organizations as an ethical hacking technopreneur"
      ],
      "course_content": {},
      "requirements": [
        "no prior experience is necessary for this course, only a genuine interest in technology and entrepreneurship",
        "no coding experience is required"
      ],
      "description": "----------------------------------------------------------------------------------------------------------------\n\n*Feb 16th 2016*\nOver 3100 student enrollments within the first four days of course launch!\nNow with over 57 hours of video content and 500+ pages of curated resources!\n11 discrete income producing trajectories!\nOver 100 real-world mock interactions (phone calls and email templates)!\n\nCode & Grow Rich is a comprehensive course that empowers both non-technical entrepreneurs and software developers with the skills to succeed in today's techno-centric business world.\n\n-----------------------------------------------------------------------------------------------------------------\nCode & Grow Rich will teach you how to meld technology and entrepreneurship to increase your earnings- IT WON'T TEACH YOU HOW TO CODE.\nThis course DOES NOT OFFER a 50,000-foot overview of archaic and disjointed pseudo-business-tomfoolery already covered ad nauseam by YouTube and Google.\nThis course ALSO DOESN'T promote any get-rich-quick type of theology for the short-sighted or lazy-minded hucksters.\nCode & Grow Rich is a role-up-your sleeves, ACTIONABLE, and HYPER-RELEVANT framework which will enable you to effectively navigate today's entrepreneurial climate using technology as the building blocks for all of your ventures.\nHERE ARE THE OVERRIDING COURSE GOALS:\nAssist you in Accelerating and Amplifying the Precision in which you bring startup ideas to life by seamlessly interweaving technology and entrepreneurship\nAssist you in maximizing your earnings Per Every Minute of Work by melding technology and entrepreneurship\nAssist you in maximizing your earnings Per Every Unit of Effort by melding technology and entrepreneurship\n\nProvide you with Multiple Earning Trajectories\n\n\nIf you are brand-spanking new to the world of entrepreneurship and technology- no es un problemo- we'll get you up to speed with over 200+ income producing tactics.\nIn another vein, If you are an experienced programmer that is dissatisfied working for the man in a 9-5 capacity, then you've likewise lucked out.\nThis course is uber-targeted to help you create multiple forms of Sustainable, Recurring, & Minimally Invasive Passive Income through the confluence of technology and business.\nLastly, If you are an experienced serial entrepreneur, we'll show you how to utilize technology for your next startup idea and instruct you, in fine detail, how to efficiently scale your ideas from conception to virality.\nModule 1: Zero-To-Viral Techno-Centric Startup Multiplier Foundation\nThis section is designed to teach you to THINK and EXECUTE like a technopreneur. The foundation lectures will show you how to:\nDesign a customized business trajectory based on your specific goals as a startup maven.\n\nUnderstand how technology, relationships, and entrepreneurship dovetail together to impact your future earnings.\nOptimize and objectively evaluate your communication style, level of emotional independence, and even the words that you use when interacting with prospects, clients, partners, contractors, and co-workers.\nLearn how to successfully integrate, apply, and adapt core business and user growth strategies to bring your startup, software, and mobile applications to life.\nModule 2: Build Your Own Techno-Centric Software Startup\n\nThis Section Extends and Applies What We Learned In The First Section of the Zero-Viral Module - Develop & Monetize Your Own Software: Web Apps, Enterprise Software, SaaS Software, Embedded Apps, Mobile Apps, Cloud Software, and Video Games.\n\nFor those looking to create, market, sell, and monetize your own software and mobile applications, we'll give you a step-by-step process in how to do so.\n\nSpecifically we’ll cover:\nMobile Applications\nWeb applications\nSoftware as service applications\nEnterprise applications\nEmbedded applications\nCloud Software\nVideo Games\n\nModule 3: Client Acquisition & Management | Building An Integrated Client Management Agency (this module is ginormous)\n\nLooking to land better clients, larger clients, or more clients as a solo-practitioner?\n\nLooking to reduce the time and effort it takes to manage each account?\nLooking to drastically increase your compensation for each and every project you work on?\nLooking to potentially scale up your one-man operation to become a full-service, integrated software development agency?\nLooking to increase your value by integrating more proficiencies into your client management mix?\nThis course will give you ALL the tools and know-how to identify, attract, acquire, manage, retain, and scale your client management operation.\nModule 4: Creating \"Fast-Twitch\" / Minimally Invasive Income Streams\nMinimally Invasive Recurring Income are earnings that require a minimal amount of monthly upkeep but keep going like the Energizer Bunny.\nWe'll guide you on integrating more technologies, more platforms, and more strategy to help you stabilize and grow your earnings as a technopreneur.\nYou’ll be able to create over 15+ passive/complementary income streams that technopreneurs can exploit right now to complement their earnings.\n\nModule 5: Generate An Absurdly High Income As A Software Consultant\n\nYou'll earn more as a software consultant by:\nTargeting the ideal clients and projects\nPositioning and differentiating yourself as the singular go-to industry expert\nPilfering full-time positions\n\nModule 6: Make Even More Money As An Ethical/White-Hat Hacker (Cyber Security Expert)\nCyber-Security Expert | White-Hat Hacker\n\nFor the unconventional problem solvers out there we’ll show you the optimal ethical hacker and quality assurance paths to higher earnings.\n\nEarn more by:\nIdentifying and pitching the right cyber security and prospects\nHow to sell vulnerabilities, cryptography, or create your own or security software\nFocus on the optimal pain points and facts to get you more deals\nHow to sell yourself without having a world of experience\nThe best tools to utilize to automate your security audits\n\nModule 7: Create Additional Sources of Income by Integrating Software and Hardware\nLearn to apply and monetize your coding skills with Arduino and Raspberry Pi platforms.\nEarn more by:\nQuickly getting up to speed with Arduino & Raspberry Pi basics.\nLearning which products make money, and which tend to fail.\nUncovering the most profitable niches to attack.\nIdentifying, qualifying, and negotiating with a hardware manufacturer.\nDiscovering key differences between Raspberry Pi & Arduino money making trajectories.\n\n\nModule 8: Successfully Maneuver Your Way to Your IDEAL Full-Time Job & Maximize Your Compensation Package - Sell out to \"The-Man\" with a smile\nFor those intrapreneurs that are more comfortable sticking with full-time employment, we'll show you how to increase your compensation and value by merging techno-centric proficiencies and platforms into your current role.\nIf you are fed up with your current job, and are looking to upgrade to a new, higher paying position, we'll assist you in hacking the job search process and show you how to best position yourself for the top-paying roles.\nWe’ll provide you with a full array of negotiating strategies to maximize your aggregate compensation package. Remember, you will also have the freedom to continue working 9-5 while you utilize techniques from this course to generate additional passive income- you don’t need to quit your job in order to implement our strategies. How to position yourself as an integrated problem solver.\nHow to best align your online assets (portfolio, blog, case studies) to maximize your perceived value. How to refine the way you interact and communicate to demonstrate even more value. The right way to ask for a raise.\n\nModule 9: Generate Side Income by becoming a PASSIVE Technology Instructor\n\nMake More Money As A Technology Instructor. In one of the funner parts of this course we'll show you how to generate even more PASSIVE income by creating and selling your own technology courses online and in the real world. Some technology instructors that upload their little classes to the interwebs make over a million bucks a year- we'll show you how. We'll even show you how to transition your courses into a full-fledged coding school.\n\nYou’ll earn more money by learning:\n\nWhich platforms to launch your course on\nWhich instructors make the most coin and why\nWhat niches are the most profitable\nTiming your course launch\nUsing kickstarter, facebook, adwords, twitter, bloggers, and journalists to ignite pre-launch virality\nOptimal pricing strategies for your courses\nHow to grow an audience and upsell students\nThe 4 tenets of an extraordinary learning experience\nHow to best create disruptive educational value\nCritical student data to track\nPerpetual vs. discrete student growth tactics\nThe best equipment to use when creating your courses\nPartnerships, bundling, & co-creating courses\n\n\nModule 10: Blend Coding, Creativity, and Marketing Savvy to become a Growth Hacker - Use Growth Hacking Techniques to Quickly Scale Your Ideas\nFor those with an affinity towards technology & marketing - we'll show you how to land high paying gigs as a much sought-after growth hacker.\nYou’ll earn more as a growth hacker by understanding:\nWhy a growth hacking skillset is in such high demand\nGrowth hacking misconceptions\nHow to best interweave creativity, marketing, data, and technology\nHow to use growth hacking techniques to scale your startup\nHow to use growth hacking strategies to expedite product virality\nHow to use growth hacking to increase industry buzz\nThe 5-Stages & 8-Steps to growth hacking success\nHow to create growth hacks of your own\nHow to micro-test to validate your hacks\nHow growth hacking in practice (Dropbox, AirBnB, Linkedin, Slack) can create a massive user base\nHow to land or poach growth hacking gigs\nHow to best interact as a growth hacker\n\nModule 11: Insulating Yourself From Obsolescence | Investing in Your Future\n\nWe'll give you both the tools and understanding to best arm and protect you from changes in technology. You’ll be able to position yourself for maximum future earnings as technology continues to evolve. You'll learn:\nWhich technologies and platforms are trending now\nWhat is the world of technology evolving towards\nHow and where to bet on your future\nHow user-focus will continue to drive growth\n\n========================================================================\nHow this course will help you to achieve your goals:\nHeavy emphasis on ACTIONABLE INITIATIVES to go along with the conceptual learning. Not a lot of pie-in-the-sky philosophy, you will be able to put your learning into IMMEDIATE MOTION.\nYOU'll ALSO BE LEARNING FASTER:\nThis course will have extremely limited anecdotal fodder. I will not drown you in long-winded, irrelevant narrative.\nCourse information is presented through distinct learning tracks. These tracks are based on your specific starting point and goals as a developer or agency. You will be able to efficiently ingest the information that you find most important for your future.\nCritical information in both lectures and sections are delivered and summarized in speed-learning \"hack\" sections. Hack sections will allow you to bypass the granular details if you are absolutely pressed for time.\n\n========================================================================\n\nWho Should Take This Course?\n\nCode & Grow Rich provides the most value for these eight audiences, before wasting any time and money by purchasing this course, make sure you fall within at least one of these categories:\n1) Both Non-Technical Entrepreneurs & Techno-Savvy Startup Junkies\n\nBoth new and experienced ENTREPRENEURS, STARTUP JUNKIES, & NON-TECHNICAL INDIVIDUALS, who want to fully understand how to best harness and integrate technology to make a killing developing and scaling their own businesses.\nFor entrepreneurs, you’ll be provided with both a complete technical foundation as well as the optimal trajectory to successfully create and scale ALL of your future business ideas. You won’t just understand more about software, you will ACTIVELY BE ABLE to FRAME technology as the centerpiece of your next startup launches.\nIf you are an entrepreneur that absolutely refuses to ever touch a line of code, we’ll show you the best ways to nurture your ideas by utilizing automated software development tools or by partnering up with current software developers.\n2) Both Newbie Coders & Experienced Programmers\nThis course infuses programmers with ENTREPRENEURIAL KNOW-HOW and an ACTIONABLE GAME-PLAN to dominate any business niche or grow a client-management software agency- programmers will learn how to weave technical concepts together with marketing, sales, growth-hacking, psychology, effective communication, and strategy to out-pace, out-smart, and out-maneuver the competition to turn their techno-centric ideas into profitable businesses.\nBrand new Coders and experienced SOFTWARE PROGRAMMERS / WEB & MOBILE APP DEVELOPERS / SOFTWARE ENGINEERS / FREELANCE DEVELOPERS who want to better utilize their technological curiosity and expertise to make Minimally Invasive Passive Income (income which only requires a limited amount of hand-holding and upkeep) will be shown the blueprint to do so.\n3) 9-5 Workers Looking For More | Career Enhancers & Intrapreneurs | Career Switchers\n\nIf you feel under-appreciated, under-utilized, micro-managed, under-paid or just plain unfulfilled in your 9-5 work, this course will empower you to “level-up” and land a better, more lucrative and fulfilling technology focused position.\nIf you are not sold on your current career and are looking to explore new paths centered around technology and software, this course will provide you with a hands-on foundation to successfully transition to almost ANY techno-centric field.\nIf you are looking to add more value to your existing position or company by adding proficiencies with new platforms, technologies, this course will enable you to do so.\n4) Current Students\nIf you are a technically oriented computer science, information technology, or business administration student looking to find an effective way to pay off your student loans WHILE STILL IN SCHOOL, we’ll show you how to do so.\nIf you are a non-technical or business major- liberal arts, philosophy, architecture (it doesn’t really matter) we will show you how to break into the startup world and launch your own businesses without any preexisting technical expertise.\nIf you are dreaming of becoming the next Evan Spiegel or Mark Zuckerberg then you’ll find this course immensely relevant.\n\n5) Underachievers That Have Failed To Launch | Full-Time Netflix/Game of Throne’s Addicts.\n\nIf you are:\n35 years-old and still living in your parents’ basement (lights out at 10:30 PM)\nCleaning up monkey dung at the town zoo\nSpending more time playing Grand Theft Auto & Halo than sleeping\n\n\n6) Introverts or The Socially Challenged\n\nIf you've ever been described as shy or a nerd/geek and fear that entrepreneurship is just not for you, we'll show you how to best break out of that shell so you can get transacting. This course includes over 100 mock phone and email interactions to guide you on the best ways to develop relationships with your peers, clients, co-workers, and partners.\n7) The Highly Motivated That Lack The Raw Business Ideas/Concepts\n\nEven if you don't have any new business ideas whatsoever we’ll provide you with over a dozen techno-centric concepts that are just waiting to be brought to life.\n8) Parents (makes a ridiculously good gift for the entrepreneur or developer in your family)\n\nIf jr. or jr. miss is still wavering about a career choice or if the thought of your child saddling themselves with massive college loans is unappealing, this course is the perfect opportunity to invest in something that will actually have a practical impact on your child’s financial future.\n\n========================================================================\n\nSo, sign up now, and I'll see you on the inside!",
      "target_audience": [
        "entrepreneurs",
        "mobile app developers",
        "web developers",
        "startup founders",
        "non-technical individuals that want a blue-print for profiting through technology",
        "software engineers",
        "computer science students",
        "video game developers",
        "non-technical co-founders who want to scale a startup",
        "software developers",
        "computer programmers",
        "software architects",
        "intrapreneurs that want to learn how to better weave technology into their current role",
        "web designers",
        "career switchers who are looking to explore how technology and entrepreneurship can be used to replace their 9-5 jobs",
        "marketers",
        "growth hackers",
        "traditional or online teachers / instructors",
        "engineers and software developers",
        "user experience designers (UX designers) & user interface designers (UI designers)",
        "information technology professionals and managers",
        "database administrators and database architects",
        "information security analysts",
        "hackers",
        "computer systems analysts",
        "website content developers and website conversion experts",
        "content management system (CMS) developers and enterprise resource planning (ERP) experts",
        "data scrapers",
        "data miners",
        "data analysts",
        "cyber-security experts"
      ]
    },
    {
      "title": "Learn Ruby on Rails 7",
      "url": "https://www.udemy.com/course/learn-ruby-on-rails-7/",
      "bio": "Build five different web applications in the latest and most powerful version of Rails yet!",
      "objectives": [
        "Learn How to Create Applications using Ruby on Rails",
        "Leverage the Power of Turbo Streams to Make Dynamic Web Applications",
        "Learn How To Create CRUD actions in Ruby on Rails on the Fly",
        "Learn How to Create Various Associations in Ruby on Rails",
        "Learn How to Implement and Create Beautiful Rails Applications with Tailwind CSS",
        "Implement a full Models-Views-Controller structure for your site"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Rails Application Structure",
          "Model View Controller",
          "Generating Model",
          "Creating the Index Action",
          "Creating the Root Page",
          "Index Action",
          "Introduction to Rails Console",
          "Show Action",
          "URL Helpers",
          "New Action",
          "Create Action",
          "Edit Action",
          "Edit Action Template",
          "Update Action",
          "Delete Action",
          "Set Articles ID",
          "Resources and Routes",
          "Article Partial",
          "Edit Link Path",
          "Active Record Validations",
          "Creating Comments",
          "Adding Styling Through Simple CSS",
          "Comments Partial",
          "Recreating Blog Application with a Scaffold Generator"
        ],
        "Rails Appointment Booking Application": [
          "Introduction",
          "Generating New Appointment Application",
          "Creating Room Model and Controller",
          "Creating Room Index",
          "Creating Room Show Page",
          "Create Room New Action Page",
          "Creating Action",
          "Editing a Room",
          "Updating a Room",
          "Destroying a Room",
          "Updating the Index Page",
          "Creating Booking Model",
          "Creating Booking Index Page",
          "Creating Booking Show Page",
          "Creating Bookings New Page",
          "Creating a New Booking",
          "Editing Bookings",
          "Updating Bookings",
          "Deleting Booking",
          "Refactoring Views",
          "Adding Devise for Authentication",
          "Adding User IDs to Bookings",
          "Authenticating Users",
          "Adding Hidden fields to forms",
          "Adding Devise Links",
          "Adding Finishing Touches"
        ],
        "Notebook Application": [
          "Introduction",
          "Generating New Notebook Application",
          "Installing Devise",
          "Creating Model and Installing Action Text",
          "Creating Notes Controller",
          "Creating Notes Index Action",
          "Creating Notes Show Page",
          "Creating Notes New Page",
          "Creating A New Note",
          "Editing A Note",
          "Updating A Note",
          "Destroy A Note",
          "Cleaning Up the Interface",
          "Adding Simple CSS",
          "Assocating Notes with Devise",
          "Using the Build Action",
          "Adding Devise Links"
        ],
        "Introduction To Hotwire": [
          "Introduction to Hotwire (Turbo Frames and Turbo Streams)",
          "Creating the Scaffold",
          "First Turbo Frame",
          "Lecture 73: Create Turbo Stream",
          "Clearing the Form",
          "Update Action",
          "Link To Show Page",
          "Delete Action with Turbo Stream"
        ],
        "Chat Application With Turbo Stream": [
          "Creating Chat Application",
          "Installing Tailwind CSS",
          "Installing Devise and Generating Scaffold",
          "Broadcast Action",
          "Generating Message Scaffold",
          "Updating Controllers",
          "Updating Message Form",
          "Broadcasting Messages"
        ],
        "Bonus Episodes": [
          "Uploading Files with Active Storage in Ruby on Rails"
        ]
      },
      "requirements": [
        "You will need to know Ruby"
      ],
      "description": "Ruby on Rails 7 is the latest and greatest version of Rails yet! In this course, we will learn the basics of Ruby on Rails and gradually move towards more complex topics. We will build 5 applications through this course, and by the end of the course, you will understand the fundamentals of Rails and how to use the latest features (i.e. Hotwire) in Rails.\nFirst, we will create a Blog web application. Users would be able to create an article, and they would also be able to make comments.\nNext, we will create an appointment booking application. Here, users would be able to create rooms and create booking appointments for each room. We will also learn how to authenticate users using Devise.\nFor the following application, we would create a note-taking application. We would use default Ruby on Rails features to create a powerful note-taking application.\nWe will then refactor our notebook application. Using Turbo Streams and Turbo Frames, we will make a more dynamic and powerful note-taking application without the inclusion of any additional javascript.\nFinally, we would create a real-time chat application. Here, users would be able to visit different chatrooms and have other conversations in each chatroom.",
      "target_audience": [
        "This course is targeted at absolute beginners and those who are interested in learning Ruby on Rails",
        "No prior Ruby on Rails Knowledge is required"
      ]
    },
    {
      "title": "JavaScript, jQuery and Ajax",
      "url": "https://www.udemy.com/course/ajax-calls-the-simplest-way/",
      "bio": "Learn JavaScript, jQuery and AJAX basics filters and calls to send data to your MYSQL server with no need to refresh",
      "objectives": [
        "Learn JavaScript Basics",
        "Sending Data through AJAX to the server",
        "Learn jQuery basics",
        "Create jQuery events",
        "Create AJAX filters",
        "Create jQuery animations and effects",
        "Add Events from Database into FullCalendar jQuery Plugin automatically",
        "Append data to web page with no refresh",
        "Use JavaScript for form validations",
        "Use bootstrap classes for forms and tables"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with databases and PHP",
        "Download notepad++ or Sublime text 2",
        "Download wampserver"
      ],
      "description": "JavaScript is an awesome client side language that allow a communication between a website and web application with users.\nIn this course, you will learn JavaScript basics, and how to make interactive web pages.\nThen, we will learn jQuery basics, and how to use jQuery plugins like fullcalendar\nAt the final section, this course teach junior web developers, or programming enthusiasts, how to send data through jQuery and AJAX, to server and make change in data, with no need to refresh the page.\n\nTo start this course, you should download wampserver, and sublime text 2, or you can use your preferred editor.\nWe are not going to learn how AJAX works using XML requests and responses. Our main goal is to send data with no page reload or refresh.\nIf you want to add interactivity and simplicity, to your web application, using AJAX, and reduce your bandwidth consumption, this course might be for you.\nAt the end, you will learn how to create AJAX filters, to get data according to specific criteria.",
      "target_audience": [
        "This jQuery course is meant to be for newbies in jQuery and AJAX",
        "This course is for Beginners in JavaScript",
        "If you know how to send data through ajax and append them, don't take this course",
        "This course is for web developers who need a quick refresher of jQuery and AJAX",
        "This course is for students who wants to make search filters like eCommerce websites",
        "If you don't know how to work dynamically with fullCalendar Plugin, this course might be for you"
      ]
    },
    {
      "title": "Projects in Enterprise Java",
      "url": "https://www.udemy.com/course/projects-in-enterprise-java/",
      "bio": "Learn to build real world apps in Enterprise Java using Spring, Spring Boot, Hibernate, Struct and much more",
      "objectives": [
        "Learn to build real wolrd Enterprise Java apps",
        "Learn core concepts of technologies such as Spring, Spring Boot, Hibernate and Struts",
        "Learn to think like a professional software developer"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of core Java is required for completing the course"
      ],
      "description": "Java Enterprise isn’t one of the easiest platforms to work with, especially when it comes with a number of different confusing paradigms and jargons – JDBC, JTA, JAX, MVC, Hibernate, etc. to name a few. Add other technologies such as MySQL and Struts, you’re bound to leave someone more confused than what they started with.\nCommon courses often leave user with the basics, such as creating a simple application and you are okay. You can follow along with the instructor and finish the project and then replicate it, but the moment you are asked to modify the application for real-world use and you won’t know what to do? How to fix the errors or even what the pop up error means?\nThis is why we have designed this comprehensive course. The main aim of this Java EE tutorial is to help you gain real world practical application of Java Enterprise. This course will show you exactly how to deviate from the theory to actual learning how to start building your own applications. Using a project-based approach, you’ll not only follow the instructor, but you’ll also learn why, how in addition to simply what.\nBefore we delve into the course details further, let’s take a quick look at what Java Enterprise actually is. Java Enterprise is a set of specifications that extend the Java SE platform and allows developers to build scalable applications that can handle transactions, security, concurrency, and so on.\nNow, let’s take a look at what you’ll learn in this course. This course will focus on Java EE by building 5 different projects that will help you breakdown the Java EE platform and also understand exactly how you will build applications using it.\nAs the course progresses, you’ll learn from the different errors that pop up, what they mean and how to resolve them. You’ll also learn other technologies such as Spring Boot, Hibernate, Spring Data, Boiler Plate Codes, Serverlets, JDBC libraries, MySQL databases, Struts, and so much more. The five projects will help you understand exactly how to configure the platform and also write boiler plate codes to help you design the projects.\nThe 5 projects that you’ll cover in this course:\nProject 1: Voting System – In this project, you’ll work with the Spring Boot, Spring Data and Hibernate, also learn how to write very little boiler plate code.\nProject 2: Complaint Manager – This project will show you how to configure Spring MVC and will go over the important boiler plate codes that you need.\nProject 3: Job Portal – In this project, everything will be low-level and the major focus will be on servlets and JSPs.\nProject 4: Social Network – In this project we will be using the Struts framework and how to utilize the Struts code.\nProject 5: Task Manager – This project will include the Vaadin framework that works well with large applications.\nSo, what are you waiting for? Enroll now and let’s get started on your next Java Application!",
      "target_audience": [
        "Anyone who wants to master enterprise java technologies such as Spring, Spring Boot, Struts and Java Core will find this course very useful"
      ]
    },
    {
      "title": "Object Oriented PHP & Ajax Bootcamp",
      "url": "https://www.udemy.com/course/php-ajax-bootcamp/",
      "bio": "Learn Ajax from beginner to advanced level, We will build Crud application & Ajax images gallery application",
      "objectives": [
        "Object Oriented Programming",
        "Ajax From Basic to Advanced",
        "JSON From Scratch",
        "Ajax CRUD Application",
        "Ajax Images Gallery Application",
        "Pagination"
      ],
      "course_content": {
        "Tools": [
          "Download Tools",
          "Download Resource Files"
        ],
        "Object Oriented Programming Basics": [
          "Section Intro",
          "What is object oriented programming ?",
          "What is a class & how to define a class ?",
          "What is $this keyword ?",
          "Access level modifiers",
          "What is Inheritance ?",
          "Construct & Destruct methods",
          "Static methods & static properties",
          "Files autoloading"
        ],
        "PDO Basics": [
          "Section Intro",
          "Create database connection using PDO",
          "Insert data into database",
          "Fetch data from database",
          "Update & Delete records"
        ],
        "JSON Basics": [
          "Section Intro",
          "What is JSON",
          "Define JSON string in JavaScript file",
          "Create multiple JSON objects",
          "JSON data types",
          "Convert JavaScript object to JSON string",
          "Define JSON string in JSON file",
          "Use JSON in PHP"
        ],
        "AJAX Basics": [
          "Section Intro",
          "JavaScript Basics",
          "JavaScript Template String",
          "JavaScript Arrow Function",
          "What is AJAX ?",
          "Download jQuery library",
          "jQuery ajax methods",
          "Send ajax request using post method",
          "What is callback ?",
          "Store request data in the database",
          "Errors Handling",
          "Send ajax request using get method",
          "Send Ajax to JSON API",
          "Send ajax request using jQuery method",
          "Send http get request to JSON API using jQuery ajax method",
          "jQuery serialize method",
          "Submit form using another way"
        ],
        "[Project Part 01] Create PHP Classes": [
          "Section Intro",
          "Create database connection",
          "Improve connection code",
          "Grab values from HTML forms",
          "Create CRUD Method",
          "Create row count method",
          "Create method for to fetch single row",
          "Create method for to fetch all rows"
        ],
        "[Project Part 02] Submit Register & Login Form": [
          "Section Intro",
          "Project starter file review",
          "Set up register & login form",
          "Register & login form optimization",
          "Add event listener",
          "Form validations create a function for required rule",
          "Value Not be Integer",
          "Check String Minimum Length",
          "Check Email Field is Empty or Not ?",
          "Email Valid Format",
          "Check Email Availability in Database",
          "Perform Asynchronous Operations using JavaScript Callbacks",
          "Perform Asynchronous Operations using Promises",
          "Password Validations",
          "Submit Signup Form",
          "Redirect User to Login Form & Show Success Message",
          "Add Event Listener For Login",
          "Login Form Validations",
          "Send Ajax Request For Login"
        ],
        "[Project Part 03] CRUD Application": [
          "Crud Application Demo",
          "Create Dashboard File",
          "User Logout",
          "Show Model on Edit Button",
          "Add Event Listener For Book Form",
          "Book Form Validations",
          "Price Must Be Greater Than Zero/0",
          "Add Book",
          "Rest Form & Display Success Message",
          "Show Books",
          "Solve Edit Link Issue",
          "Show Edit Data in Form",
          "Solve Add Book Link Issue",
          "Update Book Record",
          "Delete a Book Record",
          "Display Total Books & Total Amount",
          "Add Space Between Table & Success Message"
        ],
        "Ajax Images Gallery Project": [
          "Gallery Application Demo",
          "Prepare Gallery file",
          "Add Event Listener For Upload Image Form",
          "Send Ajax Request For Upload Image",
          "Image Extension Validation",
          "Store all Upload Images in a Folder",
          "Store Image Names in Database",
          "Fetch Images From Database",
          "Display Dynamic Images",
          "Delete Image From Database & Directory",
          "Final Code Modifications"
        ],
        "Pagination": [
          "Section Intro",
          "Display Specific Records Per Page",
          "Count all Rows of Logged in User",
          "Show Pagination Links",
          "Style Up Pagination Links",
          "Make Pagination Links Functional",
          "Display limited Pagination Links",
          "Make Prev & Next Link Functional",
          "Set Active Class on Links",
          "Add First & Last Links",
          "Show Pagination links if we have grater than 3 records"
        ]
      },
      "requirements": [
        "PHP Basics are required"
      ],
      "description": "Welcome to the \" PHP AJAX BOOTCAMP \" course. The first question that comes to mind what is AJAX? AJAX stands for Asynchronous JavaScript And XML, using AJAX we can read data from an API when the page has loaded, and we can update the backend without page reloading. And we can send data to the backend without page reloading. So these are the cool features of AJAX. So in this course, we will learn everything about AJAX and Object-Oriented Programming, once we learn the basics of AJAX and Object-Oriented Programing afterward we will create a modern-looking project using AJAX and Object-Oriented Programming. In the project, we will have authentication and books store application besides that we will have a gallery project as well, in the gallery application, we upload images with AJAX, and after we access images from the database.\nWhy should I take the course?\nBecause in this course you will learn Object-Oriented Programming from scratch, and after we will create a project with Object-Oriented Programming as well besides that you will also learn modern CSS.\nSupport:\nIf you have any issue regarding the course you can ask the question in the QA section.\nObject oriented programming\nPDO Basics\nJSON Basics\nAJAX Basics\nCRUD Application using AJAX & PHP\nAJAX images gallery application using AJAX & PHP",
      "target_audience": [
        "Who's want to learn AJAX"
      ]
    },
    {
      "title": "Java Web Services and REST API with Spring & Spring Boot",
      "url": "https://www.udemy.com/course/complete-java-web-service-bootcamp-from-beginner-to-pro/",
      "bio": "Build Java Web Services & REST API - with Spring & Spring Boot. Learn REST API & Web Services",
      "objectives": [
        "Be able to develop and use Web services in advanced online web applications",
        "Become an expert in RESTful APIs",
        "Be able to use SoapUI for API testing",
        "Fetch data from MySQL databases using web services",
        "Spring MVC REST"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Theory before Code",
          "What is a Web Service?",
          "What is RESTful API?",
          "Spring & Spring boot Framework",
          "Basic Theory Quiz"
        ],
        "Into the Code": [
          "Install Java SDK",
          "Install IDE",
          "Xampp",
          "Start.Spring.io",
          "Your first Web Service",
          "Time to Code"
        ],
        "Adding Parameters": [
          "Add your first Parameter",
          "Download and Install SoapUI",
          "Add paramters the smart way",
          "Multiple Parameters and object oriented approach",
          "Use SoapUI with @PathParam"
        ],
        "MySQL + HTTP methods (GET, PUT, POST and DELETE)": [
          "HTTP methods Theory",
          "Setup MySql database",
          "Create Schema",
          "Table correction(Add missing Primary Key)",
          "Create Person classes part 1",
          "Create Person classes part 2",
          "Insert Person using Web Service",
          "Fetch users from MySQL",
          "Make it work"
        ],
        "Web Service and Web Application (Optional)": [
          "introduction to Web application",
          "Install Node.js - npm and angular cli",
          "Getting into the Project + Bootstrap",
          "Fetch Persons part 1",
          "Fetch Persons part 2",
          "Fetch Persons part 3",
          "Create User",
          "You did it! + Source Code"
        ]
      },
      "requirements": [
        "No prior knowledge",
        "Computer",
        "Internet"
      ],
      "description": "Looking to enhance your Java programming skills with web services and REST API development? Then look no further than our \"Java Web Services and REST API with Spring Boot\" course!\nThis course is perfect for intermediate to advanced Java developers who want to learn how to build modern web services and REST APIs using Spring Boot. We'll start by introducing you to the fundamentals of web services and REST APIs, as well as the Spring Boot framework. You'll learn how to create REST endpoints, handle HTTP requests and responses, and work with data in the form of JSON.\nAlong the way, you'll work on several real-world projects that will allow you to apply your knowledge in a practical way. You'll create a simple CRUD (Create, Read, Update, Delete) web service, implement user authentication and authorization, and even build a complete e-commerce REST API from scratch.\nOur instructors are experienced Java developers who have worked on countless web service and REST API projects. They will guide you through the process, providing you with the knowledge and expertise you need to build your own powerful REST APIs using Spring Boot.\nSo whether you're a Java developer looking to expand your skill set or a programmer looking to learn about web services and REST API development, this course is for you. By the end of the course, you'll be able to confidently create and deploy REST APIs using Spring Boot, making you a valuable asset to any team!",
      "target_audience": [
        "Java developers",
        "Junior developers",
        "programmers",
        "Web developers"
      ]
    },
    {
      "title": "Master Full Stack Web Development With Games and Application",
      "url": "https://www.udemy.com/course/master-full-stack-web-development-with-games-and-application/",
      "bio": "Learn HTML, CSS, JavaScript, Python, Node.js, MongoDB & Build Real-World Web Apps and Interactive Games From Scratch",
      "objectives": [
        "Frontend development with HTML5, CSS3, and JavaScript",
        "Responsive design techniques and modern layout systems",
        "Backend development using Python and Node.js",
        "Database management with MongoDB",
        "RESTful API creation and integration",
        "Building and deploying interactive web-based games",
        "Building and deploying interactive web-based application"
      ],
      "course_content": {},
      "requirements": [
        "No experience required"
      ],
      "description": "Are you ready to build dynamic, interactive, and powerful web applications from scratch?\nThis comprehensive Udemy course will transform you into a highly skilled Full Stack Web Developer, covering everything from fundamental front-end design to robust back-end systems and database management. Whether you're a complete beginner or looking to solidify your existing knowledge, you'll gain the confidence to create professional-grade web applications and even dive into exciting web-based games!\nWhat You'll Learn:\nI. Front-End Development: Crafting Engaging User Experiences\nHTML5: Master the foundational language of the web, structuring content with semantic tags and building accessible web pages.\nCSS3: Design stunning and responsive user interfaces. Learn advanced techniques like Flexbox, Grid, transitions, transforms, and animations to bring your designs to life.\nJavaScript: Become a JavaScript expert! Understand core concepts like data types, control flow, functions, objects, and asynchronous programming (callbacks, Promises, async/await). You'll master DOM manipulation for interactive elements and learn how to work with Web APIs.\n\n\nII. Back-End Development: Building Powerful Server-Side Logic\nPython: Get started with Python for back-end development. Learn its fundamentals and how to use it to create server-side applications. (Specifically, this course will introduce Python as a versatile language for backend logic, which can then be expanded upon with frameworks like Django or Flask in future learning.)\nNode.js : Dive into the world of server-side JavaScript. Build robust RESTful APIs, handle requests and responses, implement routing, and manage middleware with Express.js.\nMongoDB: Master NoSQL database management. Learn to store, retrieve, update, and delete data, and integrate MongoDB seamlessly with your Node.js applications.\n\n\nIII. Beyond Traditional Web Apps: Building Web-Based Games & Applications\nInteractive Web Games: Apply your HTML, CSS, and JavaScript skills to develop engaging web-based games, understanding game logic and user interaction.\nPractical Project: Build a variety of real-world applications throughout the course, solidifying your knowledge through hands-on projects.\nBy the end of this course, you will be able to:\nConfidently build responsive and visually appealing user interfaces using HTML, CSS, and JavaScript.\nDevelop powerful and scalable back-end APIs with Node.js and Express.js.\nManage and interact with databases using MongoDB.\nIntegrate front-end and back-end components to create complete full stack applications.\nDevelop engaging web-based games and interactive applications.\nPossess a strong portfolio of projects to showcase your skills to potential employers.\nWho is this course for?\nAnyone eager to learn front-end and back-end web development and build their own web applications and games.\nEnroll now and start your journey to becoming a proficient Full Stack Web Developer!This course is meticulously designed with clear explanations, step-by-step guidance, and engaging exercises to ensure you grasp every concept. By the end, you'll not only have a strong theoretical understanding but also a robust portfolio of projects that demonstrate your ability to build, deploy, and maintain modern full-stack applications, ready to launch your career as a professional Full Stack Web Developer.\nGenerate Audio Overview",
      "target_audience": [
        "Anyone eager to learn front-end and back-end web development and build their own web applications and games."
      ]
    },
    {
      "title": "C# Restful API on Web API .Net Core with MsSQL & EF Core",
      "url": "https://www.udemy.com/course/c-restful-api-on-web-api-net-core-with-mssql-ef-core/",
      "bio": "C# RestFul Web API on .Net Core Web API with using Postman and in Real Project with MsSQL and Entity Framework Core(EF)",
      "objectives": [
        "What is the Web API",
        "Web API as the name suggests, is an API over the web which can be accessed using HTTP protocol. It is a concept and not a technology.",
        "A REST API is an application programming interface (API ) that conforms to the constraints of REST architectural and allows for interaction with RESTful",
        "We can build Web API using different technologies such as Java, .NET etc.",
        "SOAP and Restful Concepts",
        "Difference between SOAP and RestFUL",
        "Usage of RESTful API in ASP NET Core 3.1",
        "Apply the Web API concepts using C#",
        "Apply the Web API concepts using C#",
        "How to make a professional project with EF Core on MsSQL",
        "How to make a professional project with Entity Framework Core on MsSQL",
        "How to make a professional project with Entity Framework Core on MsSQL",
        "Using of Postman",
        "How to consume API using HTTPClient",
        "How to consume API using HTTPClient",
        "How to consume each subject on real WPF projects on .Net Core",
        "How to consume each subject on real Web projects on .Net Core",
        "Understand how to use the code-first approach with using Entity Framework Core",
        "Create real-world projects using Web API Core and Entity Framework Core",
        "How to Handled errors and exceptions in your apps",
        "How to use coding techniques to make efficient development",
        "By the end of this course you will be in a position to build any professional WPF Core application with all details using .Net Core and Entity Framework Core",
        "Using Object-oriented programming (OOP) is a computer programming paradigm where a software application is developed by modeling real world objects into softwar"
      ],
      "course_content": {
        "Introduction to the Web API Course": [
          "Intro to the Web API Course",
          "FAQ about Restful API and Web API"
        ],
        "Set Up Visual Studio": [
          "How To Install Visual Studio 2019 On Windows?",
          "How To Install Visual Studio On Mac?",
          "How To Install Visual Studio 2022 On Windows?"
        ],
        "Introduction to Web API": [
          "What is Web API",
          "Web API Concepts Rest and SOAP",
          "EF Core Code- first approach",
          "EF Core Crud Operations",
          "Quiz Restful api"
        ],
        "HTTP": [
          "What is HTTP",
          "HTTP status Codes",
          "HTTP Methods",
          "C# Web API Using Postman",
          "C# Web API Core Get Method",
          "C# Web API Core Get Method Part 2",
          "C# Web API Core Post Method",
          "C# Web API Core Put Method",
          "C# Web API Core Delete Method",
          "Quiz Web API, HTTP",
          "Quiz HTTP"
        ],
        "MVC Core Project to Consume API": [
          "Create MVC Core Project",
          "MVC Core Get Departments with Consume Web API Core- Get Method",
          "MVC Core Get persons and salaries with Consume API- Get Method",
          "MVC Core Add Department and Person with consume API- Post Method",
          "MVC Core Update Department with Consume API- Put Method",
          "MVC Core Update Person with Consume API- Put Method",
          "MVC Core Delete Salary with Consume API- Delete Method",
          "MVC Core File Operations with Consume API",
          "C# Web API Core CORS and SOP concepts"
        ],
        "Login authentication": [
          "C# Web API Core Login with Facebook",
          "C# Web API Core Login with Google"
        ],
        "Consume Different API to Get Global News": [
          "C# Web API Core Get Global News from News API"
        ],
        "Consume API with WPF Core Project": [
          "Create WPF Project and Design Views",
          "C# WPF Core Get Department with Consume API",
          "C# WPF Core Add Department with Consume API",
          "C# WPF Core Update Department with Consume API",
          "C# WPF Core Delete Department with Consume API"
        ],
        "End Of the c# restful api Course": [
          "What We have Learned in C# RESTFUL API on Web API .Net Core"
        ],
        "Extra": [
          "C# Restful API on Web API .Net Core with MsSQL & EF Core"
        ]
      },
      "requirements": [
        "Desire to learn C#, MS SQL Web API Core",
        "Desire to learn Web API .Net Core",
        "Desire to learn .Net Core 3.1 back-end with Web API, Entity Framework Core and MsSQL Server",
        "Desire to learn create and consume RestFul Web API structure on .Net Core",
        "A Windows for installing all the free software and tools needed to practice",
        "Basic C# Knowledge",
        "Visual Studio 2019",
        "SQL Server Management Studio",
        "No Prior Database OR SQL experience is required.",
        "Desire to learn EF Core for SQL",
        "Desire to learn Making Professional Project",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "C# RestFul Web API on .Net Core Web API with using Postman and in Real Project with MsSQL and Entity Framework Core(EF Core)\n\nHello,\nWelcome to C# RESTFUL API on Web API .Net Core with MsSQL & EF Core.\nC# RestFul Web API on .Net Core Web API with using Postman and in Real Project with MsSQL and Entity Framework Core(EF Core)\nFinally, our Web API course is ready for you. A lot of students want an API course to use API projects on .Net Core.\nBefore starting, I want to explain that this course is a part of big training. I can tell this part is the most important part that we will use in following training in an online ticket project, a web project,  and in all mobile versions as well made in Xamarin, Flutter, Java Android, Angular, Node.js, React Native, and Vue Native. For developers who have no knowledge about the API, I preferred to explain the basics of the API in this section basically. However, in the following sections, we will learn to use JSON web tokens and we will apply JSON Web Token in more complex projects.\nThis course will give you everything that you will need to start Web API project’s on .Net Core. Before starting this course, you should know that you need to have basic C# knowledge. With this course, you will learn API concepts with .Net core and you will make more practice on C# programming. And as you know with C# programming you may use Xamarin Forms to build cross-platform mobile apps or design a new video game in Unity.\nWe will start our training with answers to what the Web API is. Then we will examine the most useful concepts as Rest and SOAP. We will learn the differences between SOAP and RESTFul.\nIn .Net core programming, EF core is very important to make crud SQL operations. In this course, you will learn to use EF Core with code first approach on a project that you can use in any project.\nAfter EF core, you will meet HTTP concepts or you will get more information about HTTP Concepts. For example, you will learn the meaning of HTTP status code that you may always see in any project like 404 status code as not found. In this course, you can find all necessary information about the crud operation of API with HTTP methods as Get. Post, Put, Delete, or Patch.\nPostman is one of the most popular software testing tools which is used for API testing. With the help of this tool, developers can easily create, test, share, and document APIs. And in my opinion, if you work on APIs, the postman is the best app for you. This means in this course you can also learn using Postman.\nIn most training trainers prefer to show API results only with the postman. But in this course, you will also learn to consume an API. This explanation may be too complicated for you. Simply, in this course first, we will create an API project as Back-End. After that, we will create another project in which we will consume our source as Front-End. As you know .net framework works only on windows platforms but .net core is a cross-platform framework which means with .Net core you may use the other platforms. This means you can share your API with any projects on any platform.\nIn this training, you can also learn to use any API to consume like news API to get global news to your project. And in any project, you may see that login with Facebook or Google. This means you can learn facebook or google authentication. Also, we will learn to consume API projects in a WPF core project.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on the Udemy platform where it has over 1500+ hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nWhat is C#?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its .NET initiative. The .NET framework and .NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL. C# is open-source and was designed to be simple yet modern, flexible yet powerful, and versatile yet easy to learn and program with. Many programming languages in the past were designed for specific purposes. C# was developed with business and enterprise needs in mind. By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages. That includes generics, var types, dynamic programming, asynchronous programming, pattern matching, advanced debugging, and exception handling, to name a few.\nWhat are the advantages of C# over C++?\nThanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C, an older but widely used language, and C++ became the de-facto language for building applications for Windows as well as infrastructure and low-level applications. Visual Basic was for business applications. What C# does is combine the rapid development capabilities of VB with the power of C++. C# also has many new data types, type-safety, to ensure you do not unknowingly reuse initialized variables. It uses a simplified syntax, a huge improvement over the complex coding often required in C++. C# also removes memory management issues thanks to . NET’s garbage collection scheme. You do not have to reference items for garbage collection; the system can reclaim that memory as required. Finally, you can use C# to interoperate with other languages on the .NET platform, a huge benefit in terms of system interoperability.\nWhy use encapsulation in C#?\nEncapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members so that they are treated as a single object. It is a means to prevent the user of a given class from manipulating program objects in ways that were not intended by the designer or developer. Encapsulation hides how a program operates without affecting how it works while still allowing users to service requests for functionality and add or modify internal data or methods to meet changing needs. For example, suppose you have an object called “Patient” that contains patient-related data. In that case, you can use encapsulation to provision patient-specific data to those who need it without exposing all patient data. In addition to information hiding, you can use encapsulation in C# to improve your code's reusability, and it also makes it easier to perform unit testing.\nWhat is C# used for?\nC# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications and game development. In web application development, you can build dynamic websites and apps using .NET or another open-source platform of your choice. Also, since Microsoft created C# for Microsoft, C# is a popular language for building Windows applications. There are rich resources and a vibrant C# community that can support and documentation for applications and programs specific to Microsoft platform architectures, making it easier than ever to develop applications in this space. Finally, C# is a popular language to use in game-building, especially with Unity, a game engine that runs on C++ and C#.\nWhat is a constructor? What is a destructor?\nTo understand constructors and destructors, we need to understand methods. A method is a block of code that contains a series of statements. Programs run by executing methods. A constructor is a special method of a class that is automatically called whenever an instance of a given class is created. A constructor contains the instructions that execute when an object is created. Developers use it to assign specific initial values to the data members of the same class. In C#, you will get a compile-time error if you try to read from an uninitialized variable. You must first initialize your variables by giving them an initial value, which is what the constructor does. On the other hand, destructors are methods used to destroy instances of a class when they are no longer needed. Destructors are called implicitly by the garbage collector in .NET, and as a developer, you have no control regarding when to call the destructor.\nHow do I learn C#?\nAs is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on. There are many resources available for all of the above, including real-time compiler applications that will show you the output of your code as you type it. However, it is best to plan ahead, and you should have an outline of what you need to learn before beginning your journey. The first thing to learn about is what C# is, how and where it is used, and why it was developed. From there, you can learn about data types, variables, keywords, and functions. Once you’ve grasped the basics, you can move on to learning about conditional tests and operators, functions, arguments, object orientation, arrays, strings, classes, methods, structs, debugging, and exception handling.\nWhat is SQL Server?\nSQL Server is a relational database management system or RDBMS created and developed by Microsoft. Designed to store and retrieve data for other software applications using the client-server model-- these applications connect to SQL Server through a network or the Internet with multiple applications using the same data. One SQL Server instance can also manage one or more relational databases. Relational databases store data in tables that can relate to each other. For example, data for business customers get stored in one table relating to another table that stores orders. Applications that connect to Microsoft SQL Server retrieve, store, and delete data using Structured Query Language (SQL). SQL Server is available for Windows and Linux.\nWhat is SQL Server Management Studio?\nSQL Server Management Studio is desktop software designed to connect to Microsoft relational database management systems, including Microsoft SQL Server, Azure SQL Database, and Azure Synapse Analytics. SQL Server Management Studio is an integrated database development tool that database architects, database developers, and software engineers can use to access, configure, manage, administer, and develop databases on any one of these database systems. It simplifies database management by providing graphical design tools and rich script editors that allow database developers to visualize an entire database or multiple databases from a single application. SQL Server Management Studio only runs on the Microsoft Windows operating system but can connect to database instances running on either Windows or Linux.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel our seasoned developers' expertise.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and it is easy to understand for beginners.\nThis course starts with the very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practice. I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the C# and SQL. You will have valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now.\nC# RESTFUL API on Web API .Net Core with MsSQL & EF Core course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to improve their C# , MS SQL & API Core programming skills",
        "Anyone who wants to Create Web API Projects",
        "Anyone who wants to share him self’s sources with Web API Projects",
        "Anyone who wants to learn Entity Framework Core",
        "Anyone who wants to learn REST API Development",
        "Anyone who wants to learn REST API Development",
        "Anyone who wants to learn consuming any API project",
        "Anyone who wants to learn consuming any API to the any WPF project with .Net Core",
        "Anyone who wants to learn consuming any API to the any WPF project with .Net Core",
        "Anyone who wants to learn SOP and CORS Concepts.",
        "People who wants to learn Rest and SOAP Concept’s",
        "People who wants to learn EF Core",
        "People who wants to learn EF Core and restful api on web api",
        "C# developers who want to get started with Web API in ASPNET Core"
      ]
    },
    {
      "title": "Latest C# ASP.NET Core MVC+ Projects + Web API + Exercises",
      "url": "https://www.udemy.com/course/h-asp-core/",
      "bio": "ASP.NET Core is not difficult! My Projects of easy steps are more than sufficient for a quick and practical transition!",
      "objectives": [
        "IN NUTSHELL: SEE CHAPTER ZERO BELOW. It contains all the projects! The projects will give you a reason to buy this course for learning ASPNET Core!",
        "Project 1 - Find a Doctor Project",
        "Project 2- LAN based Classroom Voting Project",
        "Project 3 - Youtube Downloader Project with youtube-dl",
        "Project 4 - Billing, Inventory and Shopping with BarCodes, Project 5 - Location Tracking Project, Project 6 - IOT based Switching",
        "Modular design with Areas, ViewImports, Layouts, Partial Views and Razor Components",
        "Identity and Role based Authentication and Policy based Authorization, Authentication with AJAX Requests.",
        "AJAX communication with ASPNET Core, Minor project on EBook style Admin panel, Ajax based inline, in-place edit, update and cancel of tabular data",
        "A project \"Find a Doctor\" is completed as the course progresses. This project covers all the common scenarios that a web developer has to deal with. . .",
        "Identity, Two/Multi Factor Authentication, Docker, Middleware, Migrations, WebApi"
      ],
      "course_content": {
        "Ch Zero - List of Projects Covered": [
          "\"Find a Doctor\" Project",
          "LAN based Classroom Voting Project",
          "Billing, Inventory and Shopping with BarCodes",
          "Location Tracking Project",
          "Internet Of Things IOT based Switching (WebApi)",
          "Realtime Auction with SignalR, WebApi and pure Javascript",
          "Realtime ESP32 IOT Switching with Azure PubSub Web Service",
          "Cinema Ticket Booking Application",
          "Authentication and Login with a USB Doggle",
          "Handwriting to Text with Azure AI Vision API",
          "Project on Journal of Life Events",
          "Audio Extraction from a Video with ffmpeg",
          "OTP based Login and Tic-tac-toe with AI Agent and Semantic Kernel"
        ],
        "Chapter First - ASP.NET Core Quick Start in 70 minutes": [
          "Getting Started",
          "Displaying Data on a Page",
          "Master Pages and Layout",
          "Posting a Form of one Textbox",
          "INSERTING data to a Database",
          "Display and DELETE a Record",
          "OTP based Authentication and Authorization"
        ],
        "Ch 1 - Razor Pages": [
          "Introduction to Razor Pages",
          "Middleware Configuration",
          "Integrating CSS, JS and _Layout",
          "Inter Page Navigation and Linking of Razor Pages with Tag Helpers"
        ],
        "Exercises on Ch1 - Razor Pages": [
          "Ex1 (Razor Pages)",
          "Ex2 (Razor Pages)",
          "Ex3 (Razor Pages)",
          "Ex4 (Razor Pages)",
          "Ex5 (Razor Pages)",
          "Ex6 (Middleware)",
          "Ex7 (Middleware)",
          "Ex8 (Integration and Layout)",
          "Ex9 (Layout and Inter-page linking)"
        ],
        "Find a Doctor Project - Step 1": [
          "Implementation Walkthrough"
        ],
        "Ch1A - ASPNET Core Application Startup (can skip for later)": [
          "Development, Staging and Production Environments",
          "Kestrel, IIS, IISHttpServer and HTTP sys",
          "The launchSettings json File",
          "Logging in ASPNET Core",
          "Storing and Reading Configuration Key Value Data",
          "Using Options Pattern to Read Configuration",
          "About the UseDeveloperExceptionPage Middleware",
          "Writing a Custom Exception Page"
        ],
        "Ch2 - Basic Event Handling in Razor Pages": [
          "How to handle a click event",
          "Creating an HTML FORM with Razor Pages",
          "How to handle a FORM submit event",
          "Example on Data Display and FORM Update",
          "How to handle Server Side Validation"
        ],
        "Exercises on Ch2 - Basic Event Handling in Razor Pages": [
          "Ex1 (Click Event)",
          "Ex2 (Click Event)",
          "Ex3 (Click Event)",
          "Ex4 (Click Event)",
          "Ex5 (FORM Submit)",
          "Ex6 (FORM Submit)",
          "Ex7 (Login Form)",
          "Ex8 (2 Forms on the same page)",
          "Ex9 (OTP based verification form)"
        ],
        "Find a Doctor Project - Step 2": [
          "Implementation Walkthrough"
        ],
        "Ch3 - Database Connectivity - I": [
          "Various Database Options and the initial Setup",
          "Getting Started with Database INSERT of Form data",
          "Strategy to handle a DbUpdateException",
          "Composite Primary Keys and Search by PK",
          "Displaying Data and OnGetAsync",
          "Deleting Records",
          "Editing and Updating Records",
          "Checkbox in a Razor Form",
          "Radiobuttonlist in a Razor Form"
        ]
      },
      "requirements": [
        "Some programming experience with C#",
        "Knowledge of html, css, javascript basics",
        "General understanding of databases, RDBMS",
        "[optional]Familiarity with any web based platform like classic ASP DOTNET, MVC or with PHP",
        "Knowledge of .NET Core is NOT a pre-requisite"
      ],
      "description": "ABOUT ME\nI am a programmer/developer of more than 30 years' experience, in C++, Win32 API , Java, Android apps, C# Desktop applications on security, C# ASP.NET classic, C# ASP.NET MVC , and now I am busy with ASP.NET Core and Raspberry PicoW C++.\n\n\nABOUT THIS COURSE\n(CAN BE USED AS A REFERENCE BOOK)\nSOURCE CODE PROVIDED FOR ALL PROGRAMS, EXERCISE SOLUTIONS AND PROJECT\nThis is a beginner's course in ASP.NET Core.\nProjects covered (see the linked videos):\n1. Find a Doctor\n2. LAN based classroom voting project\n3. Billing, Inventory and Shopping with bar codes\n4. Location Tracking Project\n5. IOT based switching\n6. Realtime Auction with SignalR, WebApi and Javascript\n7. Realtime ESP32 IOT Switching with Azure PubSub Web Service\n8. Cinema Ticket Booking Application\n9. Authentication and Login with a USB Doggle\n10. Handwriting to Text with Azure AI Vision API\n☞Ch1 - RAZOR PAGES\nBeginner's Introduction to Razor Pages\nThis is the simplest introduction to Razor Pages - why you need them, what they are, and how page events and data could be handled with them. See the linked video for a primer information.\nIntegrating CSS and JS Files with Razor Pages\nThis is a quick and complete explanation of how to integrate your razor pages to a  framework such as bootstrap, and how to add and manage your custom CSS, JS and image files in your application. We explain various files such as the _ViewStart file, the _Layout file, and the special directory wwwroot. The concept is similar to that of master pages in the classic ASP.NET. The article also contains a linked video that you can watch for a clearer understanding of how we have integrated bootstrap to a simplest ASP.NET Core application.\nInter Page Navigation and Linking of Razor Pages with Anchor Tag Helpers\nTag helpers provide a standard way of generating html tags in razor pages. They are interpreted on server side. They are of the same syntax as html tags, so a web-designer can style and script them as he does any other html tag. Razor pages are not enabled for tag helpers by default. In this tutorial we learn how to enable a razor page for tag helpers, and we also learn a walkthrough on using the most common \"anchor tag helper\" to navigate from one razor page to another.\n\n\n☞EXERCISES ON Ch1 - RAZOR PAGES\nExercise 1.\nCreate an application consisting of a razor page called Index - but without its backing csharp file. The razor page should print your name.\nExercise 2.\nDisplay your name thus: Add a string variable called strName to the page in Ex 1. Set the variable to your name. Then display the variable strName.\nExercise 3.\nCreate an application consisting of a razor page called Index - but without its backing csharp file. Create two int variables i and j. Set i to 7 and j to 2. Display their sum using razor syntax.\nExercise 4.\nAdd a function called, say, GetName to the razor page in the first exercise. The function has a return type of String and returns your name. Now display your name by calling the above function.\nExercise 5.\nCreate an application consisting of a razor page called Index and its backing csharp file. Create two int properties i and j in the backing class. Set i to 7 and j to 2. Display their sum using razor syntax.\nExercise 6.\nWithout using razor pages, write a simple ASP.NET Core application that writes a \"Hello World!\" message to the response stream when an HTTP GET request is made to the home page of your website.\nExercise 7.\nWithout using razor pages, write a simple ASP.NET Core application that sends a FORM consisting of an input textbox and a submit when an HTTP GET request is made to the home page of your website. The application should handle the posted data and respond by sending back the upper case equivalent of the input typed by the user.\nExercise 8.\nCreate an application with a layout file [full head, body html tags] that shows the current system time in a h1 tag. The file connects to a CSS file called \"mycss.css\", which is placed in a wwwroot directory, and has a class for a p tag that sets its text color to red. Create a razor page called index that shows your name in a \"p\" tag. This page should merge into the layout file. Run the app to verify that your name appears in red.\nExercise 9.\nMany CSS frameworks like bootstrap are available on the internet. Find any framework of your choice and create a layout file [full head, body, html, etc.,] by linking its CSS/JS files. Then create two pages - Index and Products. Each page has the same two buttons called \"Home\" and \"Products\". When Home is clicked the user should be taken to the Index page, and when Products is clicked the user should be taken to the Products page.\n\n\n☞FIND A DOCTOR PROJECT - STEP 1\nThis is now an implementation of the concepts learnt so far, where we start with a new project and add three razor pages - Index, Login and Register. Layout and viewstart files use the CSS/JS based bootstrap library to provide \"color\" to the pages. Tag helpers are used for inter page navigation.\n\n\n☞Ch1A - ASPNET CORE APPLICATION STARTUP (can skip for later)\nEnvironments in ASP.NET Core\nThis tutorial explains about the various environments like Development, Staging and Production. We also explain how to set them by various methods and how to conditionally check for environments and perform settings.\nKestrel, IIS, IISHttpServer and HTTP.sys\nAn ASP.NET Core application cannot directly accept requests from the internet. For this it needs a server that can face the internet and help it communicate with the calling client on the other side. This means that some sort of coupling is required with a server software. This tutorial discusses various possibilities. Discussion of the launchSettings file is reserved for the next tutorial.\nThe launchSettings.json File and launch Profiles\nWe learn about the finer details of launchSettings.json file. This file contains various launch profiles to start an application in various modes - such as InProcess, OutOfProcess and direct Kestrel. Visual Studio uses this file to populate a dropdown toolbar so that the application can be started in various modes at the click of a button. This allows for easier debugging and testing of an application.\nLogging in ASP.NET Core\nLogging helps in troubleshooting, it helps in audit, it helps in getting signals of an imminent application crash. This topic explains the terminology of a log message, and also explains how to configure an application for logging, and also how to observe a sequence of log messages.\nStoring and Reading Configuration Key Value Data\nWe have seen in the previous tutorials that appSettings json file can be used to configure log levels. But this is not the only use of this file - it can, as well, be used to store custom key value data that can be read anywhere in your application. It turns out that log levels are just one of the possible values - there is a lot more that can be done. In this tutorial we shall learn how to store some rudimentary data and then read it back on a razor page.\nUsing Options Pattern to Read Configuration\nIn the previous tutorial we read various properties of an appSettings configuration file. But there is a better method for reading complex properties - such as \"Address\" - that we read in the previous tutorial. This is done through the options pattern. Let us now read City and ISDCode of the Address property by using the options pattern.\nWhat and Why of the UseDeveloperExceptionPage Middleware\nWe shall create an app using visual studio 2022, running .NET 6. The application will artificially throw an un-handled exception. Then we shall verify that if the application is running under development, then asp.net core automatically provides a safety net to handle this exception, and provides a detailed information about the error. But if the same application is  in, say, production, then there is no developer exception page, and the application crashes midway, with no response sent.\nWriting a Custom Exception Page and the UseExceptionHandler middleware\nThis tutorial continues our previous tutorial where we learnt that if an application is running under development environment, then ASP.NET Core provides a UseDeveloperExceptionPage middleware that catches un-handled exceptions and provides a detailed information about the snapshot state of the application. But that feature is not recommended for production environment - a developer should provide a custom page to filter out the information that finally reaches the display. Let's learn how!\n\n\n☞Ch2 - BASIC EVENT HANDLING IN RAZOR PAGES\nHow to handle a click event in Razor Pages\nAn anchor tag helper can be used to specify the name of the click event handler. For this the attribute \"asp-page-handler\" is set equal to the name of the function in the backing class. Read through this tutorial to understand the whole idea. A video is also attached for a first-hand explanation. The tutorial concludes with a walkthrough that demonstrates how a click event can be handled on the server side.\nCreating an HTML FORM with Razor Pages\nThis is an introduction to the most common UI Elements that can be used on a FORM. The article starts with a quick introduction to an html form of only one textbox, and then shows how to translate it to a razor form. Then a checkbox, a radiobuttonlist, and a dropdown are successively added one by one to build a full blown razor form. Data is not posted, a topic reserved for the next tutorials.\nHow to handle a FORM submit event\nA form submit is triggerred by a submit button inside FORM tags. If the method is POST, which is most often the case, then the recommended handler is OnPostAsync. The method should be asynchronous because FORM data is invariably processed through database INSERT and UPDATE queries, which must be done asynchronously. The submitted data can be extracted through the two-way BindProperty. See the linked video for a better understanding.\nProgram Example on Data Display and FORM Update\n(LEVEL IS BEGINNERS) Suppose there is a model called StudentData with properties ID, Name, School and Marks. Also suppose we already have a collection of StudentData records with the first three properties already filled, and Marks is NULL. Write an Index page to display the data of the students in a table of 5 columns. The fifth column contains a link button called Edit. When the link is clicked, the user should be taken to a page called Edit. The Edit page contains a form where Name and Marks can only be edited. Update the collection when the form is submited and redirect the user to the index page to show the updated record.\nHow to handle Server Side Validation\nThis article starts with a brief primer on server side validations and why they should be done. A simple model of just one property is used to explain the whole process - starting from setting the validation error messages to finally inserting validation tags to render the errors. We explain how \"asp-validation-for\" attributes can be used to display validation errors, and that too, respectively, for each property and at a location just adjacent to its FORM element(see the screenshot below), and also how the ASP.NET Core engine takes care of almost 99% of your work. We also explain how to, optionally, display a gist of all validation errors using the \"asp-validation-summary\" attribute.\n\n\n☞EXERCISES ON Ch2 - Basic Event Handling in Razor Pages\nExercise 1.\nCreate an ASP.NET Core application that has a razor page called Index, and that shows an anchor \"Click Me!\". When the anchor is clicked the anchor should disappear and it should be replaced by the message \"I am clicked\". Write the entire code in the Index.cshtml razor page - no backing class is to be used.\nExercise 2.\nThe first exercise can also be solved by sending an arbitrary querystring parameter when the anchor link is clicked. The \"Request\" can be tested for the presence of that parameter in a conditional \"if\" statement, and accordingly render the message or the anchor. You might have to google about how to send query string parameters with an anchor tag helper. Then you can google about how to read query string parameters in a razor page.\nExercise 3.\nInstead of following the approach in Ex. 2 above, another alternative to sending a query string through an anchor tag helper is to send a query string by using an overload of \"RedirectToPage\". Implement this scheme by redirection from the click event handler.\nExercise 4.\nSolve Ex. 1 without using the addTagHelpers directive.\nExercise 5.\nCreate a FORM of two inputs that, respectively, accept two numbers - say, i and j. The submit event should be handled by the backing class and the sum returned through a query string parameter. Display the sum on the same FORM.\nExercise 6.\nCreate a FORM of two inputs that, respectively, accept two numbers - say, i and j. Display the sum on the same FORM but without using a query string.\nExercise 7.\nCreate a login form of two inputs - UserName and Password. Show a message \"Login succeeded\" if the user enters UserName as \"u\", and Password as \"p\". Otherwise show the message \"Invalid credentials\". The message should appear somewhere on the same form.\nExercise 8.\nCreate a razor page of two forms on the same page. Each form has one input textbox and a submit button. The first form has a textbox for first name, whereas the second form has a textbox for last name. Initially only the first form is visible. When the user submits the form, the first form hides away and the second form becomes visible. When the user submits the second form, it too is hidden and a message showing the full name should appear instead. Hint: on the basis of what you have learnt so far, you might have to use an input of type=\"hidden\".\n\n\n☞FIND A DOCTOR PROJECT - Step 2\nEvent handlers for Login and Registration buttons are connected now. Two model classes RegistrationInfo and LoginInfo are added to connect the registration and login forms to the respective OnPostAsync handlers. We verify that FORM data is indeed being received, and server side validation and validation summary are functional. We are now at the point of database connectivity where we shall register the user.\n\n\n☞Ch3 - DATABASE CONNECTIVITY - I\nGetting Started with Database Connectivity\nHere is a to-the-point tutorial on how database connectivity works in ASP.NET Core. A 3-step roadmap is laid for running your first query to a database of your choice. The tutorial concludes with an example walkthrough on adding nuget packages for a sqlite database. The actual database connectivity is done in later tutorials.\nGetting Started with Database INSERT of Form data\nA form of only one input textbox is POSTed and the data is inserted into a sqlite database. This is a six step walkthrough that starts from creating a model, followed by a DAL based on the DbContext class. We also explain how an application is configured for dependency injection of the DbContext, and also, how the DbContext is extracted from the constructor of a PageModel class, and ultimately used to run a database query.\nStrategy to handle a DbUpdateException\nSaveChanges can fail if a constraint fails, if a connection error occurs or if any generic error occurs. So it should always be wrapped in a try-catch handler to gracefully handle the DbUpdateException. But how to inform the user about such a failure? One way is to use the built-in server side validation to artificially push the error as a validation failure.\nSpecifying Primary Key (s) and the DbSet.Find() method\nThis is a brief explanation of how to specify single primary key on a model through attributes - but this approach fails when multiple columns are to be set as the primary key. We explain that such a composite primary key has to be set through the DbContext. Finally, we explain how to query a record on the basis of its primary key.\nDisplaying Data and OnGetAsync\nThis tutorial continues from where we left the tutorial on INSERT query (see the link below for a recap). The code we discussed there has been extended to display the inserted data. In the first part of this tutorial we explain the minimal three basic things that must be done to display data on a razor page. Then we incorporate those additions into the index page and its backing class to show the whole idea in action.\nDeleting Records from a Database with EF Core\nWe start by explaining the general scheme for deleting a record from a table. A foreach loop adds an anchor link to each record. The primary key (id) of each record is set as an attribute of each respective anchor link, and each anchor link also binds to a handler function in the backing class. When such a link is clicked the handler receives that id as a parameter and a C# code carries on the deletion.\nEditing Records on the same Razor Page with EF Core\nThis tutorial discusses the most desired scenario where data entry form and the already existing records are shown on the same page. Each record has an edit link adjacent to it. When this link is clicked, the record appears in the same data-entry form, so that the user can make changes and submit it. See the image below for a quick understanding of the problem being addressed here. This tutorial also explains a general scheme for editing with EF Core.\nCRUD with a Checkbox in a Razor Form\nThis tutorial extends the one-textbox FORM that we have implemented for CRUD operations in the previous tutorial (see link below). Now we add a checkbox to that form and observe how easy is it to make an addition to a project that is already CRUD-ready!\nCRUD with a Radiobuttonlist in a Razor Form\nThis tutorial extends the FORM that we have implemented in the previous tutorial (see link below). Now we add a radiobuttonlist to that form and observe how easy is it to make an addition to a project that is already CRUD-ready! The radiobuttonlist is backed by a hard-coded C# enumeration. We also explain how to specify the conversion from an enum to an INT data-type on the database side.\n\n\n☞EXERCISES ON Ch3 - Database Connectivity - I\nExercise 1.\nWrite down all the steps needed for the initial setup for connecting to a Sqlite database.\nExercise 2.\nCreate a model - called, say, MyModel - that has a primary key property of string datatype - called CountryID - and another property of string type - called DisplayName. Both the properties should be marked as required. Create a form (complete with inputs, submit and validation spans) that helps you save records of type \"MyModel\" to a table of sqlite database. Your code should gracefully handle a DbUpdateException. Test your project by adding a few records, and also verify that duplicate CountryID cannot be saved to the database. Note: Primary key of string datatype must be marked as DatabaseGeneratedOption.None, otherwise it will not work because the default is DatabaseGeneratedOption.Identity.\nExercise 3.\nCreate a form of one textarea and a submit button. This form is to be used for bulk insert of records of type \"MyModel\" [see previous exercise] to a table of sqlite database. This is how the form will be used: a user will type rows of records in a semi-colon separated format, for example Brazil may be typed as BZ;Brazil, where \"BZ\" is CountryID and \"Brazil\" is the DisplayName. When the form is posted, the rows should be read in a loop and each record extracted, and inserted into the database. Finally, a summary of the number of records succeeded and that failed should be shown somewhere on the same form.\nExercise 4 [checkbox insert and display]\nCreate a razor page that has a FORM of two inputs - first a textbox for the name of a player and second a checkbox \"Plays Chess\". When the form is submitted, the data is stored in a table. The same razor page should separately display the lists of chess players and non-chess players. We suggest that a three column layout be created using suitable CSS. The left column should show non-chess players, the middle column should show the data entry FORM and the right column should the chess players. Note: You will need to use the \".Where\" LINQ for filtering chess players.\nExercise 5 [toggle transfer between lists]\nExtend the above exercise thus: Add an anchor link (called, say, \"move to non-chess players\") adjacent to each record of chess players. When this anchor is clicked the chess playing status of the player should be toggled so that the same player gets \"transferred\" to the list of non-chess players. Similarly add an anchor link adjacent to each record of non-chess players. Run the project and verify that \"transfers\" actually happen.\nExercise 6 [seed random data]\nCreate a model class having three properties - ID [auto int PK], FirstName, LastName and DateOfBirth - the last one being of the DateTime datatype. Configure your project for sqlite database connectivity. The Index razor page should have an anchor link called \"Insert 10 random Records\" and connected to a function \"SeedData\". Just below the anchor link, the data is displayed in an html table of four columns - ID, First Name, Last Name and Date Of Birth. Run the project to verify that each click adds 10 random records to the table. Note: you can use the Random class to generate random ASCII text.\nExercise 7 [pagination]\nAdd paging to the previous exercise by adding \"Next\", \"Prev\" anchors below the table. Take a page size of, say, 7. \"Prev\" link should be disabled on the first page, whereas the \"Next\" should be disabled on the last page. Use suitable CSS to disable an anchor link.\nExercise 8 [sorting]\nAdd sorting to the previous exercise by replacing the Date of Birth heading with an anchor link. When the anchor is clicked repeatedly, the sort order changes from ascending to descending, and vice versa. Test it thus: First run the project to verify that paging works and the sort order is the default order as seen from the sequence of ID. Now move to the next page and click the Date Of Birth heading. The table should now reset to the first page, but the list should display as sorted. Now click on the Next link [and then back and forth] to verify that the remaining records can be seen in the same sorted order.\n\n\n☞FIND A DOCTOR PROJECT - Step 3\nThe project has now been configured for database connectivity through Sqlite. The Registration module is fully functional - a user can register as a doctor or a patient - and a database INSERT entry is now working. EMail ID is the primary key. If a record already exists then a DbUpdateException is handled and failure is shown through a validation summary. If the registration is successful, the user is redirected to the login page. If he logs in with wrong email/password then he is asked to ammend and retry. But if he logs in with an email that isn't registered yet, then he is asked to register himself. Next we learn how to consolidate the code through ViewImports.\n\n\n☞Ch4 - MODULARITY\n_ViewImports file and the do's and don'ts\n_ViewImports.cshtml is shared by all the razor pages in its peer directory, and in the sub-directories below it. It is like an include file, and it is used to type a list of common directives that would otherwise have to be typed in each of the razor pages. A razor page takes into account the entire hierarchy of _ViewImports files above it.\nRazor Components in the Context of Razor Pages Apps\nRazor components are stand-alone, embeddable units that replace themselves with pure HTML, CSS and JS markup. They can accept parameters from the host page. We discuss below how they differ from partial pages, and we also discuss the structure of a component page, and also how to use the <component> tag to easily embed a component into a razor page.\n\n\n☞EXERCISES ON Ch4 - Modularity\nExercise 1 [print name, razor components]\nWrite a razor component that has a function called \"GetName\" that returns your name as a string. The razor component displays your name by calling this function. Embed this component in your index.cshtml razor page to display your name.\nExercise 2 [count chars in a string, razor components]\nWrite a razor component that takes two parameters - HostName and CharToCount. The first parameter is the name of a website - like microsoft - without the prefix \"https://\" and the suffix \".com\", and the second parameter is a character, such as 'A'. Your razor component will send a hit to https://{HostName}.com and download the page as a string, and count the number of {CharToCount} in that string and display the characters counted. Use this razor component in a razor page that has a form that accepts HostName and CharToCount as inputs from the user. When the user submits the form, these inputs should be passed to the razor component to display the number of characters found. Hint: use an HttpClient request in \"OnInitializedAsync\" to download the string and count the chars. You might want to review the tutorial L02 - Razor Components where makeSquare function has been discussed along with passing parameters.\nExercise 3 [general purpose table component]\nWrite a razor component called Table.razor that accepts three parameters - a string array String[] for its heading row, a String[][] array for the remaining rows to display the data, and a third parameter for css class to be applied to the table. So this is a flexible table that can be re-used in any project. Use this component in a razor page to render a table of three columns - ID, Name and Phone. The data can be of, say, two records. Also pass a css class as a parameter so that the table gets a pleasant look.\nExercise 4 [click event in a razor component]\nA razor component can handle and process a click event if it is written as a blazor component. Refer the attached blog link and the linked youtube video to see the basic steps needed for this integration. After that write a component that displays a new quote, each time its button is clicked. Use a String array to hold a few quotations so that a user can click and cycle through them.\n\n\n☞FIND A DOCTOR PROJECT - Step 4\nIn this step we tidy the Index.cshtml, Register.cshtml and Login.cshtml razor pages by moving various common directives (like addTagHelper) and namespaces to a viewimports file. This practice will now be followed throughout the remaining project. Now we are ready to write the home page of doctors.\n\n\n☞Ch 5 - AREAS AND PARTIAL VIEWS\nConcept of Areas and an Authorization Scheme\nThis is a comprehensive discussion on the need for \"areas\", and how to practically create \"areas\", and how, un-like classic MVC, routing occurs out-of-the-box when razor pages are used. We also discuss how tag helpers help us create proper anchor links to pages inside areas. In the end we present a practical login and authorization scheme for projects that use areas.\nPartial Views from a Practical Perspective\nSo this article starts by explaining the various aspects of a partial view from a practical, day-to-day perspective. We have totally removed those parts that are either redundant or too complicated to be of any use for a practical developer. Then we take a small 3-step walkthrough that shows how to create a partial view, and how to consume it in a razor page. We also explain how a conditional menu can be conveniently implemented using the ideas of partial views. Partial Views + Razor Components can add to the confusion of a developer, so we finally conclude with a comparison with razor components.\n\n\n☞EXERCISES ON Ch5 - Areas and Partial Views\nExercise 1 [simple partial]\nCreate an application that has a razor page called Index. Now add a partial page called _MyPartial that displays your name in an h1 tag. Use this partial in the Index page to display your name. The helper directives should be placed in a view imports file.\nExercise 2 [navigation to area]\nCreate an application that has a razor page called index containing an anchor link. Add an Area called Albums. Inside this area there is an Index razor page that displays a welcome message in, say, an h1 tag. When the beforementioned anchor link is clicked, the user should navigate to the index page of the Albums area.\n\n\n☞FIND A DOCTOR PROJECT - Step 5\nTwo \"Areas\" are added - Doctor and Patient. The pages relevant to a doctor shall stay in the former, whereas of a patient in the latter. Home pages have been added for both. Partial pages for _Header, _Menu and _Footer have also been added for the doctor's area, and similarly partial pages for _Header and _Footer are added for the patient's area. This is what happens now: when a user logs in, then depending on the UserType he is redirected to his \"Area\". Next let us learn about Authentication and Authorization so that the users of a specific \"Role\" can only access the pages.\n\n\n☞Ch6 - STATE MANAGEMENT\nReading, Writing and Deleting Cookies in ASP.NET Core\nWe start this walkthrough with a small introduction to the concept of a cookie, and then we explain the various ASP.NET Core snippets to (a) create a cookie, (b) read a cookie and (c) delete a cookie. And lastly, we create a fully functional application for creating and deleting cookies. You can run the application to see the whole concept in action! We strongly recommend that you watch the linked video for finer details.\nCookie Consent Banner with ITrackingConsentFeature\nThis is a walkthrough on how to obtain user consent for usage of cookies on an asp.net core website. This project uses the ITrackingConsentFeature interface to determine if the user has already given his consent, and also to obtain the correct cookie string as per the http format. The readymade functions of this interface make it extremely easy for a developer to obtain a user's consent.\nHow to use Session for State Management\nThis article explains behind-the-scenes mechanism by which \"Session\" is implemented in ASP.NET Core. We also enumerate the four extension methods that ASP.NET Core provides for reading and writing session variables. After that we present a walkthrough where existence of a Session key is checked to conditionally show a login link, or to show her user-name along with a log-off link that clears the user-name from the Session cache.\nSerializing DateTime into Session\nThere is no built-in method for storing DateTime into a session variable in ASP.NET Core. However, the Microsoft MSDN docs suggest that developers can create their own extension methods on ISession, and they have provided code for one such pair of Set<T> and Get<T> methods that use json serialization to store any serializable type as a string. We have copy-pasted their code, and used it to create a small walkthrough that demonstrates how a DateTime instance can be stored in a session variable.\nWhen and how to use TempData\nTempData can be used to pass data from one razor page to another. Although QueryString and Session variables can be used to achieve the same objective, yet TempData provides a briefer and cleaner way, and most importantly, it is built into the ASP.NET framework. The most attractive feature of TempData is that the data is automatically cleared away after a first read/extract operation - whenever it takes place. The tutorial ends with a walkthrough where TempData is saved in one page and used for showing a message on a second page. The message appears only once.\n\n\n☞Ch 7 - AUTHENTICATION AND AUTHORIZATION\nConfiguring Role based Authorization\nThis is an explanation of how an \"Area\" based ASP.NET Core project can be configured for role and policy based authorization. Authorization can be applied to the entire \"Area\" directory. We also explain how to specify the login and access denied pages.\nSignIn, ReturnUrl and LocalRedirect\nThis article starts with an explanation of \"SignIn\", and then explains the various steps for a signin process. Finally, we discuss what is a returnUrl, and what is LocalRedirect, and when should it be used.\nDisplaying User Info on each Page he visits\nThis is a snippet on showing \"You are logged as ...\" on every page that an authenticated and authorized user visits. The code can be inserted in a razor page or in a partial page.\nSignOutAsync with Tag Helpers\nFollowing is a brief scheme on signing out a logged-in user. A function for sign-out is written in the same file as for the login code. Then this function is called from the click of some anchor link and \"SignOutAsync\" called to kill the login cookie. Finally, a redirection is done to the login page.\n\n\n☞FIND A DOCTOR PROJECT - Step 6\nPolicy based authorization has now been applied. A logged-in doctor ONLY can view the pages of the \"doctor\" area, and similarly, a logged-in patient only can view pages of his area. RememberMe is also functional now - such a user is directly taken to the home page of his area. Email of a logged in user is now shown on each page he visits. Code for sign-out has also been added. With this the project is now fully functional for login, registration and the sign-out modules. We leave it as an exercise for the student to add a \"Change Password\" module.\n\n\n☞Ch7A - IDENTITY IN ASPNET CORE (can skip for later)\nCollecting the Pre-requisites for Identity based Authentication\nWe shall create an identity based project from scratch. Although, visual studio provides a scaffolding for all the various modules, but personally I find all that very difficult to integrate with my own projects and my own css files. That's the motivation for starting from scratch. It will be a series of tutorials. In this first tutorial, I shall add nuget packages, followed by an IdentityDbContext, and finally run a migration to create the database on local sql server.\nAdding a Login Page to an Identity based Authentication Project\nThis tutorial shall continue from the previous tutorial where we have made a basic initialization, and we have also created a database to hold the data of our users. In this tutorial we shall make additional configuration to specify our login and access denied pages. We shall also add a restricted (or protected page) and verify that when an un-authenticated user tries to access it, then he is automatically redirected to the login page.\nAdding a Registration Page to an Identity based Authentication Project\nThe problem with the built-in registration page provided by ASP.NET Core Identity API is that it contains a lot of tags and bootstrap attributes that make it time consuming to integrate it into a project that doesn't use bootstrap or jQuery. The objective of this article is to explain how to create a neat and simple registration page that can be styled with any css and javascript of choice. We use a simple html table to create a form, but we will not use any css and client side validation because that can always be done with the web designer teams.\nAccount Verification in an Identity based Authentication Project\nRecall from the previous tutorial that in our program.cs file we have set SignIn.RequireConfirmedAccount = true. This prevents immediate login to a newly registered user. The user is compulsorily required to verify his account through an email or SMS sent to his phone. For this, a link containing a specially generated confirmation token is sent to him. When the user clicks this link then this token is verified on the server side, and the user is informed of the confirmation status.\nResending an Account Verification EMail in Identity based Authentication\nAs soon as a new user registers on a website, an account verification email or an sms is immediately sent to him. But it is possible that a user never receives the email, or perhaps he is unable to locate the email that he might have received a few days back. Such a user would ask for the confirmation link to be sent again. This means that we need a mechanism for resending an email to a user. This tutorial explains the steps needed to generate and resend the link to that user.\nForgot Password functionality in Identity based Authentication\nVery often a user is unable to remember the password that he created for a website. In such circumstances, the forgot password link comes to his rescue - it is one of the most important links on a login form. And, in this tutorial we shall implement the functionality for a forgot password link. Let's proceed!\nReset Password functionality in Identity based Authentication\nWe have seen in the previous tutorial that when a user fills the forgot password form, then he is emailed a link to the reset password page. The link contains a password reset code. Now, in this tutorial we shall add a page for reset password.\nClaim based Authorization with Identity\nIn its simplest terms, a claim is a name-value pair used to verify authorization. For example, you may be authorized to access a page if a claim of name \"my_role\" and of value \"admin\" is attached to your identity. In this tutorial we learn how to configure a project for claim based authorization, and how to add claim based authorization to a page.\nLayout Pages and LoginPartial for Identity\nIt is a good idea to show the user name of a logged user in the header of each page of a website. And, if the user is not logged in, then the login and register buttons can be shown instead. The best way to implement it is to use partial views in combination with layout pages. This tutorial explains the steps for this.\nSign out functionality in Identity based Authentication\nA sign out link allows a logged user to log out of your website. It is usually shown in the header of a page and close to the name of the logged in user. In this tutorial we shall learn how to implement this functionality.\nAccount Lockout Functionality in Identity\nYou must have seen on various websites that a user account gets locked if the user makes about three unsuccessful login attempts. The exact same functionality is supported by the Identity API also - and it is possible to configure the number of failed attempts before an account gets locked. If a lockout timespan is specified, then the account remains locked for that specific duration. The default value is 5 minutes, but it can be set to any value. The number of failed attempts and the clock are reset when a user performs a successful login.\nEnabling 2-factor Authentication in Identity\nTwo factor authentication gives additional security to a login process. But this type of authentication has to be specifically enabled by a user. For this he clicks a button to receive an authentication code or token. This token is provided by the asp.net core app. After that he installs an authenticator app from Microsoft, or from Google or from IOS Play Stores. Then he has to enter that authentication code into the authenticator app and receive a code from that app. This code is then entered into the asp.net core application, and the two factor authentication gets enabled. In this tutorial we shall add a razor page to enable two factor authentication.\nLogin with 2-Factor Authentication\nConsider a user who has enabled 2-factor authentication as explained in the previous tutorial. Such a user is required to authenticate twice before he can access the pages of a website. The first authentication is through the common login page, and then immediately after that he is redirected to a second login page where he has to enter a validation code obtained from his Google, Microsoft or IOS authenticator app. The purpose of this tutorial is to complete the second login page - also called 2-factor login page.\nDisabling 2-Factor Authentication\nThe purpose of this tutorial is to add the functionality that allows a user to disable his 2-factor authentication. For this we shall have to modify the _LoginPartial page so that the disable 2-factor authentication link is shown to him.\nCreating a Google OAuth App for Authentication\nSocial media based authentication requires us to create an oauth app on a social media platform such as google, facebook, twitter, github. This app provides us a client id and a client secret key for use in various classes that provide social media integration. In this tutorial we have a walkthrough for creating an oauth app on the google cloud console. Steps for other social media are similar - so you can take them as an exercise.\nSocial Media based Authentication, Remember Me and Signout\nSocial media based login provides a neat and user-friendly means of logging into your website. Users are more likely to trust this method because of the level of security provided by various social media platforms. It helps us simplify the sign-in process by delegating many complexities to social media platforms. In this tutorial we present a project that requires a user to login with his google account. Once he logs in, then he is shown his email-id, name and profile picture. We also explain persistence of cookie, i.e., how the user can be remembered, and also the signout scheme.\n\n\n☞FIND A DOCTOR PROJECT - Step 7\nNow we start completing a doctor's profile. Three modules are done - (1) first the doctor's name, phone and photo upload, (2) second the fees he charges, and (3) a dropdown of specializations. A partial view is added for specializations because specializations will be used from the patient side also, during the search of doctors.\n\n\n☞Ch9 - AJAX COMMUNICATION\nAjax based POST of a Razor Page\nHow to POST an ASP.NET Core Razor FORM through an Ajax Request. We discuss a practical approach that is to-the-point and easy to understand. The given code is ready to copy-paste!\nHow to POST data with AJAX Independently\nAnti-forgery token is NOT available outside of <form> tags. This article, alongwith the appended  video, explains how to use IAntiforgery service to solve this limitation, and POST data, especially as an AJAX request, when a full-fledged form is not possible?\nBare minimum code for a parameterized AJAX GET Request to a C# function\nThe following project has a textbox with a send button. The click event fires an AJAX GET request and sends a string parameter to an ASP.NET Core application, which responds by converting the parameter to its uppercase equivalent. The client side script has been written using pure javascript.\nAdmin Panel with Content on the Right\nThis project is about creating an Admin Panel that would be suitable for a reporting project or an EBook that shows a table of links on the left and the corresponding content on the right side. The content is obtained by an Ajax call to an ASP.NET Core application. Source code for all the three files has been given and explained below.\nAuthentication and Authorization with AJAX Requests\nIn brief: Just two additions are required to implement AJAX based authorization in your existing ASP.NET Core application - first is on the javascript side - where the response code should be tested, and second on the server side where User.IsInRole has to be tested. The concept is explained in the text that follows, and a working example is described in the appended youtube video!\nInline, In-place Edit, Update, Cancel of records without a page refresh\nSimplest explanation of AJAX based Edit, Update, Cancel operations on a row of an HTML table. An ASP.NET Core POST handler receives the updated values that can be processed for an update to a database.\nMaster Slave Cascading Dropdowns with Ajax\nIn nutshell: The selection change event of the master dropdown is used to send the \"id\" of the selected item to the server, which sends back a collection of items for the slave dropdown. A javascript based Ajax GET request is used for this communication with the server.\n\n\n☞FIND A DOCTOR PROJECT - Step 8\nCascading dropdowns and ajax are used for completing the fourth module of a doctor's profile where the state and city of the clinic address have to be specified. For this we have added a partial view _ClinicAreaPIN to render the cascading dropdowns. A partial view has been added because a patient will also need these dropdowns during his search for a doctor. A JSON based database is used to store the State-City data.\n\n\n☞CORS HANDLING with ASPNET CORE (can skip for later)\nHow Cross Origin requests (CORS) fail - example with ajax javascript\nWe shall run two ASPNET Core apps concurrently - the first exposes a web API, whereas the other shows a web page containing two links - the first of these links causes a direct call to the web API, and the second fires an ajax based call through javascript. A direct call is not a cross-origin (CORS) call because its destination is visible in the browser, but a call that occurs through an invocation of XMLHttpRequest or fetch API is a cross-origin (CORS) call. We shall verify that a click on the first link succeeds, but the second link fails because a browser blocks cross-origin calls.\nWhy cross-origin requests (CORS) fail and why they succeed?\nIn the previous tutorial, we demonstrated how a browser blocks cross-origin calls. So you must surely be wondering why cross-origin requests to CDN-hosted CSS files and fonts succeed. What's behind that success? Why do browsers permit some requests and block others? In this tutorial, we examine the reasons behind this. It will help us allow cross-origin requests in our ASPNET Core apps!\nEnabling CORS with a Policy\nAn ASPNET Core application can permit cross-origin requests by adding \"Access-Control-Allow-Origin\" header to the HTTP response. Cross-origin requests are not allowed by default; they must be allowed explicitly. One way of doing it is by defining a suitable policy in the application pipeline. In this tutorial, we learn the steps required for this. We shall also learn how to define multiple policies so that each end-point can serve requests to its own set of origins.\nEnabling CORS for Specific CSS or JS Files\nStatic files are NOT accessible cross-origin if we call UseStaticFiles before UseCors. But if we reverse the order, every static file becomes accessible to permitted origins. So we have an all-or-none type of situation. CORS can either be disabled for every static file or disabled for none. This tutorial explains how to enable CORS for just a small subset of files, as done by the various CDN networks.\nPrimer on CORS Preflight Requests\nBrowsers consider some cross-origin requests as unsafe. For example, an HTTP PUT request is considered unsafe. A browser first queries the server if it accepts that type of verb or request or headers by sending an HTTP OPTIONS request, which is called a preflight request. In this tutorial, we learn some concepts regarding preflight requests.\nConfiguring CORS Preflight Policy\nIn this tutorial, we learn how to set a CORS policy that will respond to a pre-flight OPTIONS request. This policy will specify the list of acceptable request headers, a list of acceptable HTTP methods and a duration value for the Access-Control-Max-Age header.\nCredential Cookies with Cross-Origin Requests\nBy default, a browser doesn't send authentication cookies with cross-origin requests. It sends cookies only if the javascript code sets a property called \"credentials\" to true or \"include.\" But that's not the whole story. The server-side code must also set an \"AllowCredentials\" cross-origin policy so that it can respond with a header called \"Access-Control-Allow-Credentials.\" If the browser doesn't receive this header, it logs a cross-origin failure even if the origin is white-listed on the server. Thus, it is a matter of writing the javascript code correctly, and configuring the cross-origin policy that signals the browser that cross-origin cookies are allowed. This polocy will not work if wild-cards are used in the \"WithOrigins\" function, or \"AllowAnyOrigin\" function has been used.\nPractical Verification of Credential Cookies\nIn this tutorial, we have two applications - the first is an ASPNET Core application that implements a CORS policy to accept cookies from the second application. The second application makes a javascript request to the first application and sends a cookie. The first application then reads the cookie and echoes back the contents of that cookie, which are presented by the browser through a javascript alert box. The source code of both the projects is provided in the attached downloads.\n\n\n☞Ch 10 - UNDERSTANDING LINQ QUERIES\nSingleOrDefault, Find, FirstOrDefault, Single and First\nThis is an explanation of SingleOrDefault, FirstOrDefault and Find methods from a practical point of view. We have explained when to use which one and how to use. We have also explained how Single is different from First, and how Single is different from SingleOrDefault, and also how First is different from FirstOrDefault.\nWhere, Include and ToList\nThis is an explanation of Where, Include and the ToList methods from a practical point of view. We have explained when to use which one and how to use. We have also explained how a SQL JOIN can be performed by using the \"Include\" function of EF Core.\nHow to Sort Records\nA result set can be sorted in ascending as well as descending order. It is even possible to perform a chained sorting by using \"ThenBy\" and \"ThenByDescending\" methods. Finally we discuss whether \"OrderBy\" should be before or after \"Where\".\nDirect Execution of SQL Queries and Stored Procedures\nEF Core translates your LINQ expressions into SQL language queries. However, sometimes it is easier, convenient and faster (as determined by testing) to run queries directly on a database. This tutorial explains how to run SELECT, UPDATE, INSERT, DELETE and execute Stored Procedures and obtain the resultset directly.\n\n\n☞FIND A DOCTOR PROJECT - Step 9\nPartial pages for _Consultation and _Consultations are added for creating/editing a consultation and viewing all the consultations. Then razor pages for Consultation are added to both the doctor and patient. The home pages of doctor and patient are also updated to show all the consultations.\nThe patient profile module is also completed now.\n\n\n☞Ch 11 - DATABASE CONNECTIVITY - III\nStatus of the App_Data folder in ASP.NET Core and what is the way forward?\nLooking for the \"protected\" App_Data folder in ASP.NET Core? The news is that it doesn't have that status anymore. It is no longer a \"Special\" folder. However, a workaround exists, and I demonstrate it in this tutorial. This tutorial explains how to read the contents of a notepad file (located in a \"protected\" folder of any random name). The contents are read from within the application, and displayed. Later we verify that the same notepad file cannot be accessed from the browser. This concept can easily be extended to use XML as a database, a topic we shall explore in some future posts.\nHow to use XML as a database in ASP.NET Core\nThis is the simplest example of reading and updating a record. For simplicity, the record consists of just one property called Name. An input textbox is used to display the \"Name\" and the same textbox is used to post the updated value. Reading and writing is done with the built-in XMLSerializer class.\nRepository Pattern and Dependency Injection with XML as Database\nThis is a walkthrough on how to make calls to an XML database via repository pattern and dependency injection. We also give a brief introduction to the repository pattern and dependency injection, and also explain the associated benefits.\nMySQL Database Connectivity in an ASP.NET Core Razor Page Project\nThese are the minimal steps for connecting to a MySQL database server with EF Core. A simple application of one textbox form has been used to demonstrate how records can be inserted into a table in a MySQL database. The tables and database are created automatically by EF Core on the basis of code first approach.\nSQL Server Database Connectivity in an ASP.NET Core Razor Page Project\nThese are the minimal steps for connecting to a Microsoft SQL Server database with EF Core. A simple application of one textbox form has been used to demonstrate how records can be inserted into a table in a SQL Server database. The tables and database are created automatically by EF Core on the basis of code first approach.\n\n\n☞Ch11A - EF CORE BEST PRACTICES AND PERFORMANCE\nSet a SQL Server Project\nIn this tutorial we shall set a project to use SQL Server as our database. You can obtain this project from the downloads attached to this video. But still I recommend that you go through this tutorial to ensure that everything is setup correctly on your specific machine. You might have to substitute your own connection string.\nIdentify Slow Commands with Logging and Tags\nEF Core provides logs that help us determine the time taken by a specific query to finish. The logs also display the actual SQL query that was executed on the database end. This means that we have a very transparent way of knowing the actual command in SQL syntax, and also about the time it took for completion. Hence we can diagnose queries that execute too slow - possibly because an index was missing on the database. In this tutorial we also examine how to use tags with logs.\nComparison of Select, Projection, Tracking and Execution in Database\nWe shall use various methods to calulate the sum of prices of all the records in the items table. We will also take note of the times taken. Usually the best results are obtained if tracking is disabled for readonly queries and if SELECT is limited to just the columns needed and, if possible, by allowing the calculations to take place in the database. But keep in mind that each query has its own circumstances. So NEVER ASSUME RESULTS. TEST, TEST and TEST is the best way to determine the optimal query in each case.\nLazy Loading and the n+1 problem\nLazy loading is a great O/RM pattern that AUTOMATICALLY loads dependent (child) data when it is first accessed. The delayed loading is both an advantage and a disadvantage. This tutorial explains both these aspects and the associated pitfalls. EF Core doesn't enable lazy loading by default.\nBuffering and Streaming of Resultset\nA query can first store the entire resultset into memory, and then use a foreach loop to process each item. Alternatively, it can stream each result into a foreach loop one by one. We examine both these possibilities in this tutorial.\nRaw SQL with FromSqlRaw for Efficiency\nSuppose your database team have already provided you an optimized query in SQL syntax. Or let's say you have a legacy, old setup that makes it compulsory to run a query in raw SQL syntax. In such cases you can use the FromSqlRaw extension to make that call.\nStored Procedures and Secure Parameterization to Prevent SQL Injection attacks\nRaw SQL queries and Stored Procedures can be executed with the FromSqlRaw extension. It is very common that these queries and procedures require parameters on the basis of values provided by a user. User-provided parameters are often a source of sql injection attacks. In this tutorial we learn how to pass parameters in a safe manner.\nBatching in EF Core and Planning your Bulk Updates\nEF Core uses batching to execute bulk updates in a single trip to the database. You can always fine-tune your code by carefully sequencing your statements so that ef core can batch them up. In the second part of this article we have a walkthrough to analyze a piece of code that triggers various trips to the database server, and we explain how that same code can be simplified and optimized to one single trip.\n\n\n☞Ch12 - DOCKER CONTAINERIZATION (can skip for later)\nWhat is Docker, Dockerfile, DockerImage and Containerization?\nThis article is a beginner's introduction to the terminology associated with docker files, docker images and containers. I have kept the explanation bare simple so that it's easy to get started. I have tried to explain the most basic questions like what is a docker, what is it's use for you, and what the basic terms mean in nutshell.\nHow to Create a Docker Image with Visual Studio\nThis is a walkthrough on creating a docker image with visual studio. We start by creating a simple asp.net core project with sqlite database connectivity, and then explain how Dockerfile can be easily created, followed by a docker image. We have included database connectivity because we shall use the same project for persistence with docker volumes later on.\nHow to run a Docker Image with Docker Desktop\nThis is a walkthrough on running a docker image. We start by explaining the commands for listing the docker images on a computer. Then we explain the commands for running a docker image, and for gracefully shutting down the container. Finally, we examine that when the images are run in this manner, the data is not persisted to disk.\nHow to use Docker Volumes to Persist Data\nIn the previous tutorial we were able to run an image in a docker container. The docker container provided a RW memory for our project and also for our sqlite database file. And, we noticed that although the app was running fine, yet the data was not persisting between restarts of the container - it was not getting commited to a persistent store. Whenever we closed and restarted the app we found that the sqlite database started blank, with no data. In this tutorial we shall learn how to attach a virtual disk (or a volume) to your container so that data can persist on your hard disk, so that the data remains available on the next start of the container.\nHow to Publish a Docker Image to DockerHub Registry with Visual Studio\nThis is a walkthrough on uploading a docker image to the docker hub registry. We shall upload the same hellodocker project and then verify the uploaded image by visiting the docker hub portal.\nHow to Pull and run MS SQL Server Image in Docker Desktop\nIn this tutorial we shall learn how to pull and run the docker image of Microsoft SQL Server through the Docker Desktop program. In this same tutorial we shall establish a connection to this instance with the Visual Studio SQL Server Object Explorer.\nConnectivity to SQL Server Running in a Docker Container\nIn this tutorial we shall learn how to connect an ASP.NET Core application to a SQL Server image that is running inside a docker container.\n\n\n☞Ch13 - DATABASE MIGRATIONS\nWhat are Database Migrations, Configuring Visual Studio for Database Migration, Getting Started with your first EF Core Migration, Migration on Alterations to a Mod&a",
      "target_audience": [
        "Programmers and students willing to get started with ASP DOTNET Core"
      ]
    },
    {
      "title": "Mastering Fundamentals of Adobe Experience Manager Forms",
      "url": "https://www.udemy.com/course/aem-forms-developer-hands-on-labs/",
      "bio": "Learn to create Adaptive Forms, Editable Templates, Scripting, Rule Editor, Themes, Document of Records with Exercises",
      "objectives": [
        "Best practices to create adaptive forms",
        "Create and manage AEM form templates",
        "Create and use Themes",
        "Use XDP templates for creating digital forms",
        "Generate Document of Records",
        "Foundational AEM form topics and techniques"
      ],
      "course_content": {
        "AEM - Fundamentals and Capabilities": [
          "Introduction",
          "AEM Installation",
          "AEM Setup & Login",
          "AEM Capabilities",
          "Early Reviews - Please watch"
        ],
        "Adaptive Forms": [
          "Adaptive Forms - Introduction",
          "Adaptive Forms UI Walkthrough",
          "Create Your First Adaptive Form",
          "Create Your Second Adaptive Form"
        ],
        "Adaptive Form Templates": [
          "Adaptive Form Templates - Introduction",
          "Create Template Folder in CRXDE - Part 1",
          "Create Template Folder in CRXDE - Part 2",
          "Create Adaptive Form Template",
          "Add Structure to Adaptive Form Template",
          "Final Preparation - Adaptive Form Template"
        ],
        "Editable Templates": [
          "Create Editable Template Folder",
          "Create Editable Template",
          "Create Adaptive Form based on Editable Template"
        ],
        "Adaptive Forms & XDP Templates": [
          "XDP Templates - Understanding",
          "Create an Adpative Form via Schema",
          "Create Adaptive Form via XDP - Part 1",
          "Create Adaptive Form via XDP - Part 2",
          "Create Adaptive Form via XDP - Part 3"
        ],
        "Scripting & Rule Editor": [
          "Scripting & Rule Editor - Understanding",
          "Hide & Show a Text Field",
          "Repeat Instances of a Panel",
          "Calculate Sub-Total of Repeating Panels",
          "Set and Validate Date Fields",
          "Validate E-mail Address & Telephone Fields"
        ],
        "Themes": [
          "Themes - Understanding",
          "Customize Existing Theme & Apply",
          "Creating New Themes",
          "Working with CSS Styles in Adaptive Form"
        ],
        "Document of Record (DoR)": [
          "Document of Record - Understanding",
          "Generate And Preview DoR",
          "Use XDP From Form Model - DoR"
        ]
      },
      "requirements": [
        "AEM Jar File (6.x)",
        "Basic understanding of HTML & CSS"
      ],
      "description": "Unlock the full potential of Adobe Experience Manager (AEM) Forms with our comprehensive mastery course. Dive deep into understanding AEM Forms, mastering Adaptive Form Templates, crafting personalized Adaptive Forms, harnessing the power of XDP Templates, leveraging Scripting & Rule Editor for dynamic interactions, customizing Themes with CSS Styles, and seamlessly generating and previewing Document of Records. Whether you're a novice or an experienced user, this course equips you with the skills to create, optimize, and innovate with AEM Forms effectively.\nAEM Forms is an Adobe Experience Manager's capability allowing easy-to-use solution to create, manage, publish, and update complex digital forms while integrating with back-end processes, business rules, and data. It provides form management tools that let you manage Adaptive forms, XFA forms, PDF forms and related assets.\nAEM Forms is simple to understand and simple to adopt. The course will help you start from the basics and go all the way create and manage your own customized forms. The course covers foundational AEM Forms topics and techniques and is well designed and created for Beginners. You will learn best practices for creating AEM Forms templates and adaptive forms.\nIt includes lots of examples and hands-on labs and aims at providing students with first-hand experience with course concepts. You can follow along the course by setting up your own lab environment.\nResources you can use to practice:\nFor themes: aemforms-reference-themes-pkg-2.0.4_v6.3 zip file in Section 7\nFor Adaptive Form: SmartDoc-Adaptive Form in Section 2",
      "target_audience": [
        "Form Developers",
        "Application Developers",
        "Form Authors",
        "Form Designers"
      ]
    },
    {
      "title": "Salesforce Apex Triggers & VisualForce Controllers",
      "url": "https://www.udemy.com/course/salesforce-apex-triggers-visualforce-controllers/",
      "bio": "In just 1 Hour, you will understand the basic Salesforce Triggers pattern and start writing Triggers on your own",
      "objectives": [
        "Students will be able to write salesforce Apex Triggers and custom controller classes like an Expert ."
      ],
      "course_content": {},
      "requirements": [
        "basic knowledge of OOPS concepts or atleast basics of Salesforce CRM point & click development knowledge is required."
      ],
      "description": "Learning Salesforce Apex Triggers is not difficult anymore. I have simplified the logic behind writing a trigger and in Just 1 hour you will understand Salesforce Apex Trigger patterns and start writing triggers on your own.\nFor anyone wanting to learn Salesforce programming(Apex Triggers), whether an experienced programmer or a beginner, this course is the ideal one.\nThis course contains basic & advanced instructions of Salesforce Programming that covers basic Apex Triggers, SOQL language, Advanced Apex Triggers, VisualForce Designing with Custom Controller & Custom Controller extensions and apex code usage.\nIf Salesforce apex Triggers and VisualForce custom controller training is what you seek, then look no further! Enroll now and begin your journey as Salesforce Developer & Programmer !",
      "target_audience": [
        "For anyone wanting to learn Salesforce programming, whether an experienced programmer or a beginner, this course is the ideal one"
      ]
    },
    {
      "title": "API and Webservices - Understand and use REST APIs",
      "url": "https://www.udemy.com/course/api-and-webservices/",
      "bio": "Includes API, Web Services using REST, JSON, XML, HTTP, and Postman",
      "objectives": [
        "Learn what API/Webservices are and how they work",
        "API Endpoints",
        "Learn the main HTTP request methods - GET, POST, PUT, PATCH, HEAD, & DELETE",
        "HTTP Requests and Responses",
        "What a RESTful API is and the six guiding principles of REST",
        "The parts of an HTTP request",
        "HTTP Respones and Status Codes",
        "How to craft your own HTTP requests to an API using the Postman Application",
        "Path parameters",
        "Query parameters",
        "Learn how structure data in the JSON and XML formats",
        "Exercises on structuring data in JSON and XML"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to APIs - What is an API?",
          "Web Services",
          "API Endpoints and Calling an API demo"
        ],
        "HTTP Requests and Responses": [
          "Introduction to HTTP and HTTP Requests",
          "HTTP Request Line",
          "HTTP Headers",
          "HTTP Body",
          "The GET and HEAD Request Methods",
          "POST, PUT, and PATCH Requests",
          "DELETE Requests",
          "HTTP Responses",
          "Postman Installation and HTTP Requests Demo",
          "HTTP Response Status Code Classes",
          "HTTP Quiz"
        ],
        "REST APIs and JSON": [
          "REST APIs and the Principles of REST",
          "JSON",
          "JSON Exercise",
          "JSON Exercise Solution"
        ],
        "Query and Path Parameters": [
          "Query Parameters",
          "Path Parameters"
        ],
        "XML": [
          "Introduction to XML",
          "XML Demo",
          "XML Attributes",
          "XML Declaration Line",
          "XML Quiz",
          "XML Exercise",
          "XML Exercise Solution"
        ]
      },
      "requirements": [
        "No programming knowledge is required for this course. You will learn everything you need in the course."
      ],
      "description": "APIs and Web Services are everywhere these days and if you're in IT then it's essential you know how to work with them.\nUnfortunately, a lot of the material online about REST APIs is confusing, especially for beginners. But don’t worry, because in this course I explain all the technical terms in a way that is easy to understand. We’re going to be learning all about how APIs work and how to use them.\nIf you are a beginner, or if you have some knowledge of APIs but need a refresher, this course is for you. This course includes all the essential components of APIs that every IT professional should know. The Main Topics include REST, HTTP, JSON, & XML. This course includes demos, quizzes, and exercises to test your new skills.\n\n\nWhat you are going to learn:\nLearn exactly what an API is\nWhat API Endpoints are\nCalling the International Space Station API – follow along demo.\nIntroduction to HTTP – the main protocol used when sending data over the internet\nThe different parts of an HTTP Request – The Request Line, Headers, & Body\nCommonly used HTTP Request Methods - GET, POST, PUT, PATCH, HEAD, & DELETE\nLearn when to use each Request Method.\nLearn what idempotence means and how this relates to request methods.\nSend different types of requests to an API using Postman (free version) – follow along demo.\nLearn the structure of HTTP Responses\nUnderstand Response Status Codes\nHTTP Quiz\nLearn the JSON data format.\nLearn how to structure data in JSON by completing an exercise\nSolution to the JSON exercise\nREST APIs and the six guiding principles of REST – what makes an API RESTful\nLearn both query parameters and path parameters - includes a demo using an API called SWAPI\nLearn the XML data format\nXML follow along demo\nXML Attributes\nXML Quiz and Exercise\nSolution to the XML Exercise\nIf you're wanting to get a strong foundation in APIs then I look forward to working with you in the course!",
      "target_audience": [
        "Aspiring Developers or those who want to refresh their knowledge.",
        "Anyone who works with data"
      ]
    },
    {
      "title": "React JS and .NET Core Web API Full Stack Master Course",
      "url": "https://www.udemy.com/course/react-js-and-net-core-web-api-full-stack-master-course/",
      "bio": "learn to create a full stack web application from scratch using .NET Core Web API and React JS.",
      "objectives": [
        "learn how to create a full stack web application from scratch using .NET Core Web API for the backend, and React JS for the front end."
      ],
      "course_content": {
        "React JS, .NET Core and Microsoft SQL": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install SQL Server Management Studio",
          "Install Node JS",
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "React JS, .NET Core and Mongo DB": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install Mongo DB Compass",
          "Install Node JS",
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "React JS, .NET Core and Postgre SQL": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install PG Admin",
          "Install Node JS",
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "React JS, .NET Core and MySQL": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install MySQL Workbench",
          "Install Node JS",
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ]
      },
      "requirements": [
        "basic html, css, javascript and c#"
      ],
      "description": "The demand for a Full-Stack Web Developer is the highest compared to any technology professional. They are paid exceptionally well both in the companies and also as freelancers.\nThis is due to the fact that full-stack web developers have diverse set of skills.\nThey are good at Database Development.\nBackend Development.\nAnd also in Front End Development.\nIn this course, you will learn full stack web development with React JS for the frontend and .Net Core Web API for the backend.\nWe will build the same backend project with different databases such as Microsoft SQL Server, My SQL, Mongo DB and Postgre SQL.\nSections in this Master Course:\n1) React JS, .NET Core Web API and Microsoft SQL Server.\n2) React JS, .NET Core Web API and Mongo DB.\n3) React JS, .NET Core Web API and Postgre SQL.\n4) React JS, .NET Core Web API and My SQL.\nWith React JS, you will learn to\n* Add routing to our app.\n* Add bootstrap table with custom sorting and filtering features.\n* Add modal pop up window with drop down and date picker.\n* We will also learn how to upload an image and save it in the backend sever.\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        ".net, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "Introduction to Maps in Folium and Python",
      "url": "https://www.udemy.com/course/introduction-to-maps-in-folium-and-python/",
      "bio": "Building web map applications like a pro",
      "objectives": [
        "Web Mapping with Folium",
        "Web Mapping",
        "Python Programming",
        "Web GIS Programming",
        "Web Map Tile Services (WMTS)",
        "Data manipulation and preprocessing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Creating your first folium map": [
          "Installing Python and Jupyter Notebook",
          "Creating your first folium map"
        ],
        "Markers": [
          "Creating and Styling Markers",
          "Classifying Markers"
        ],
        "Creating a Point Map": [
          "Creating a Point Map",
          "Classifying Points"
        ],
        "Creating a Choropleth Map": [
          "Creating a Choropleth Map Part 1",
          "Creating a Choropleth Map Part 2"
        ],
        "Measuring Boundries": [
          "Measuring Boundaries Part 1",
          "Measuring Boundaries Part 2"
        ],
        "Creating Layers and BaseMaps": [
          "Creating a Layer Control"
        ],
        "Creating a Heatmap": [
          "Creating a Heatmap"
        ],
        "Sharing and Exporting our Maps": [
          "Sharing and Exporting our Maps"
        ],
        "Project Source Code": [
          "Source Code and Notebook"
        ]
      },
      "requirements": [
        "Very basic understanding of Python",
        "Little or no understanding of GIS",
        "Very basic understanding of Programming",
        "Basic understanding of Data"
      ],
      "description": "Welcome to the Introduction to Maps in Folium and Python Course. In this course we will be\nexploring the different capabilities of the folium library. Folium is a python mapping library that\nallows you to create maps rapidly with very little and easy to understand code. We will use this\nlibrary to create a variety of maps for multiple use cases. We will be exploring the most useful\nobjects that the folium library has to offer ranging from Markers, Points, Measure Controls, Tiles,\nWeb Map Tile Services, Layers and much more.\n\n\nWe will also do a bit of preprocessing with the pandas library, in order to prepare our data for\nmeeting the requirements of the maps that we will be building. By using the full capabilities of the\ntools we will be using, one can build very advanced map applications with very few lines of code.\n\n\nThis course is useful to all levels of experience from beginner to advanced professionals and is very\neasy to get started with. There are no complex installations and configurations required, as we will\nuse a single platform that includes everything we need such as jupyter notebook.\n\n\nIt is only required that you have python 3 installed and anaconda, as well as an internet connection,\nin order to download our datasets and libraries. Any operating system is applicable as long as you\nare able to run jupyter notebooks and use the python 3 compiler. This course is done on a windows\n10 machine. After you build your maps you will learn how to share them with anyone.",
      "target_audience": [
        "GIS Developers at any level",
        "Python Developers at any level",
        "Developers at any level",
        "An interest in data story telling through Maps",
        "The curious mind"
      ]
    },
    {
      "title": "Mastering ASP.NET and ADO.NET with C#",
      "url": "https://www.udemy.com/course/mastering-aspnet-and-adonet-with-c-sharp/",
      "bio": "The best course to learn ASP.NET and ADO.NET using C#",
      "objectives": [
        "Build there own Web Applications",
        "Understand about View, Session and Application state variables",
        "Perform various kinds of Authentication and Authorization techniques over Applications",
        "Learn about cookies and implement the same",
        "Have in depth knowledge of ASP.NET controls and validation controls"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Overview of ASP.NET",
          "Prerequisites",
          "About Course"
        ],
        "Getting Started with ASP.NET and Building a Simple Website": [
          "Introduction to ASP.NET",
          "Web Application in ASP.NET",
          "Web Forms in ASP.NET"
        ],
        "State Management in ASP.NET": [
          "State Management",
          "View State in ASP.NET",
          "View State",
          "Event Lifecycle in ASP.NET",
          "Page Lifecycle Events",
          "Server Controls Events in ASP.NET"
        ],
        "IIS and ASP.NET Controls": [
          "Internet Information Services",
          "Text Box Control in ASP.NET",
          "Radio Button Control in ASP.NET",
          "Checkbox Control in ASP.NET",
          "Hyperlink Control"
        ],
        "Validation Controls in ASP.NET": [
          "Validation Control",
          "Validating a Registration Form",
          "Range Validator in ASP.NET",
          "Regular Expression Validator",
          "Validation Summary in ASP.NET",
          "Navigating to another Page"
        ],
        "Page Navigation Techniques in ASP.NET": [
          "Page Navigation Techniques",
          "Response.Redirect in ASP.NET",
          "Server.Transfer in ASP.NET",
          "Preserving Form Variables",
          "Server.Execute in ASP.NET"
        ],
        "Cookies and Session: Real Time Example": [
          "Cookies in ASP.NET",
          "Real time example for cookies",
          "Session State in ASP.NET",
          "Application State",
          "Application State Continued",
          "Application State: Real Time Example"
        ],
        "Authentication and Authorization in Web Application": [
          "Application Pools in IIS",
          "Adding Application Pools in ASP.NET",
          "Anonymous Authentication",
          "Windows Authentication",
          "Forms Authentication"
        ],
        "Starting with ADO.NET": [
          "Introduction to ADO.NET",
          "Interacting with SQL server",
          "Exception Handling",
          "SQL Connection",
          "Storing Connection String",
          "SQL command"
        ],
        "Books and pdfs": [
          "Overview of asp.net",
          "Prerequisites.",
          "About the course.",
          "Introduction to asp.net",
          "Creating an asp.net Website part 2",
          "State Management in asp.net",
          "2. view state....left",
          "Event Lifecycle in asp.net",
          "Page Lifecycle Events.",
          "Server Control Eevents",
          "IIS",
          "asp.net Controls part 1",
          "asp.net controls part 2",
          "asp.net controls part 3",
          "asp.net controls part 4",
          "asp.net controls part 5",
          "asp.net controls part 6",
          "Validation Controls",
          "Compare Validator",
          "Regular Expression Validator",
          "Custom Validator",
          "Validation Summary",
          "Page Navigation Techniques",
          "Response.redirect",
          "Server.transfer",
          "Server.execute",
          "Cookies",
          "Session State",
          "Application State",
          "Real Time Example of Application State",
          "Application Pools in IIS",
          "Anonymous Authentication",
          "Windows Authentication",
          "Forms Authentication",
          "Introduction to ADO.NET",
          "SQL Connection",
          "Storing Connection String",
          "SQL Command"
        ]
      },
      "requirements": [
        "Knowledge of any .NET compatible language is a must",
        "Familiarity with .NET framework can be an added advantage but not compulsory"
      ],
      "description": "ASP.NET is a web application framework developed by Microsoft that allows developers to build dynamic web sites, web applications and XML web services. ASP.NET can be used to create anything from small, personal websites through to large, enterprise-class web applications.\nThis ASP.NET course will teach client-side Web developers with C# experience the fundamentals of Web application site implementation using Microsoft ASP.NET. This course focuses on using the Microsoft Visual Studio .NET environment and the Microsoft .NET platform to create an ASP.NET Web application that delivers dynamic content to a Web site.\nThis course covers the following concepts referring to ASP.NET:\nBuilding a simple web application\nIntroduction to Web forms\nAuthentication and Authorization\nHandling State Management using ASP.NET\nConfiguring IIS and Application Pools\nValidating a web Form\nPage Navigation Techniques and preserving form Variables\nCookies and Session",
      "target_audience": [
        "Students who wish to learn about building dynamic and interactive Web Applications can go for this course",
        "Beginners who have no knowledge and wish to learn developing Applications from scratch"
      ]
    },
    {
      "title": "Create a Live Video Chat Application Using WebRTC, PHP, JS",
      "url": "https://www.udemy.com/course/create-a-live-video-chat-application-using-webrtc-php-js/",
      "bio": "Build Live Real Time Video Chat Application using PHP, WebSockets, JavaScript and MySQL",
      "objectives": [
        "Learn about WebRTC with PHP",
        "Learn about WebRTC Connection Logic to Build a video chat",
        "Learn about Webrtc Negotiation",
        "Learn about Webrtc Signaling with PHP",
        "Learn to Send & Receive Live Video to Remote Client",
        "Lean to Build Peer to Peer Video Chat",
        "Learn to capture WebCam and Microphone from Browser using JavaScript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting up Local Web Server",
          "Creating Directory Structure"
        ],
        "Creating Base for Application": [
          "What is WebRTC",
          "Instailling Composer",
          "Ratchet/Socketo.me Documentation & Backup Files",
          "Setting up WebSocket Server"
        ],
        "Creating our User features": [
          "Creating User Table",
          "Creating Login Form",
          "Validating Login Form",
          "Creating Database Class",
          "Creating method to check if email is exists",
          "Creating method to generate password hash to store",
          "Logging User In",
          "Creating user methods"
        ],
        "Creating Live Video Chat": [
          "Displaying home page",
          "Creating Method to Display User List",
          "Rewriting the Url",
          "Creating Connect Page",
          "Display User Profile",
          "Creating Session Methods",
          "Creating Webrtc Connection Object",
          "Creating function to access webcam or microphone",
          "Creating Functions for WebSocket",
          "Accesing user class methods in chat class",
          "Fetching user data from websocket",
          "Creating function to generate client offer to send",
          "Creating function to display call to other user",
          "Displaying call popup",
          "Creating function to generate answer from remote user",
          "Displaying video chat from remote user",
          "Creating function to hangup the call",
          "Creating function to display alert popups",
          "Adding video chat to home page",
          "Adding stun server and allowing audio to receive",
          "Bonus: Detecting if User Call Got Disconnected"
        ]
      },
      "requirements": [
        "PHP experience is needed or Basic knowlage of PHP",
        "Basic JavaScript",
        "Local Web Server, (Xampp/Lampp)"
      ],
      "description": "Have you ever wanted to build a Live Video Chat Using PHP just like WhatsApp or Google meet and don’t know where ? Don’t worry this Course will guide you step by step to build your very first Video call application. Yes you can create your own one to one live Video chat system using WebRTC, PHP, MySQL and JavaScript\nIt doesn't matter if you're a beginner or an experienced programmer, just you have to know the basics of PHP, JavaScript and MySQL and HTML/CSS\nThis course will be greatly and highly beneficial to you. And by the end of this course you will be capable of creating your own Peer To Peer Live Video Chat Application Just like WhatsApp, or zoom, not only this you will also learn about websocket because we will be using websocket with PHP.\nAnd you can also add this One to one live video chat feature to your existing website or to your project where you want to add support with video chat.\nYou can highlight the project you create in this course, If anyone who sees this project in your portfolio might want to hire you because from this course you will gain skills which help you to understand the main concept used in the Real Time Communication system. So get the ULTIMATE guide to create a REAL TIME Video Application Using webRTC, PHP and Websockets.\n\n\nSupport\nBy taking this course you will get my full support. I've always loved to help my students (could be you). I’ve answered all that question that students have asked so far. I’m always in a ninja mood, if there’s a question it’ll be answered within an hour or few. By all this means if you have any errors. I'll be happy to check codes, errors.\n\n\nThis Course Covers The Following Features:\nOne to one Video Chat\nWebRTC Connection Logic\nSend Video Call Request\nReceive Video Call Request\nSignaling Server Logic\nWebRTC Negotiation\nPeer to Peer connection\nWebSocket Server / Client Logic\nClients Connections Logic\nStore Messages Logic\nDisplay call popup with Accept / Decline buttons\nDisplay Client / Remote Video\nWebsocket Tokens\nSessions\n\n\nPlease\nlook at all the lectures to see more things that are covered.",
      "target_audience": [
        "Beginner PHP developer curious about WebRTC with PHP",
        "PHP Beginner who wants to build a video chat application",
        "Beginner who wants to learn to create Live Video chat Using WebRTC, PHP and JavaScript"
      ]
    },
    {
      "title": "WordPress - Local install & Online Migration with WordPress",
      "url": "https://www.udemy.com/course/wordpress-local-install-and-two-methods-to-migrate-online/",
      "bio": "WordPress - Build WordPress sites on your home computer with Xampp, then learn to migrate your site to an online server",
      "objectives": [
        "At the end of this course students should have an understanding of the physical structure of WordPress, and understand and implement two different ways to migrate a WordPress site from a local computer or domain, to another online hosting server"
      ],
      "course_content": {
        "Start Here": [
          "Introduction",
          "Instructor Announcement",
          "Overview",
          "Xampp download",
          "Download-WordPress",
          "Local Database Creation",
          "Create a new WordPress Site",
          "Installing Plugin for transferring your WordPress Site",
          "Create a Database on your Online Hosting Server",
          "Upload Local site to the Online Hosting Server",
          "Manually Transfer your Local WordPress site to the Online Hosting Server",
          "Overview of the Manual Transfer Process"
        ],
        "How to migrate a WordPress site from online host to local host": [
          "Using a plugin",
          "How to migrate a wordpress site manually from online host to local host"
        ],
        "Bonus Section": [
          "Course Completion"
        ]
      },
      "requirements": [
        "Need to have a basic knowledge of WordPress",
        "Need to have a PC or Mac computer",
        "Need to have an interest in WordPress migration"
      ],
      "description": "In this course you will learn how to download and install the Xampp software needed to build WordPress websites offline on your home (localhost) computer. Once you have built a WordPress site you will learn how to download and install a WordPress plugin that will enable you to compress the local site, and then migrate it to an online hosting server. Occasionally with the plugin method you may run into WordPress migration problems with some host providers. This course will teach you a second method to migrate your WordPress site manually without using a plugin. This second method is a little more complex as it involves exporting and importing your databases, but it is a fail safe method that should work with all WordPress sites and hosting providers.",
      "target_audience": [
        "Anyone interested in becoming a WordPress web developer",
        "People that build WordPress websites for customers",
        "Anyone interested in exploring and experimenting with WordPress offline",
        "People that wish to migrate a WordPress site from one domain to another"
      ]
    },
    {
      "title": "Ionic 4 Firebase with Angular-Build PWA, Native Android, iOS",
      "url": "https://www.udemy.com/course/ionic-4-firebase-with-angular-build-pwa-native-android-ios/",
      "bio": "Ionic 4 Angular with Firebase and Cloud Firestore NoSQL DB. Build Real World ionic 4 with Firebase Auth and Firestore DB",
      "objectives": [
        "Build real world ionic app with angular and firebase, cloude firestore DB",
        "Single codebase, run on any platform: web, native android, ios",
        "Firebase email password authentication in ionic",
        "Firebase Google login for Web",
        "FIrebase Google login for native android, iOS",
        "CRUD operations to cloud firestore db in ionic app",
        "Build ionic app as PWA",
        "Build APK for production & release",
        "Create beautiful and precise app icon and splash screen",
        "Deploy app to native devices",
        "Serve ionic app with Nodejs Express",
        "Deep understanding of ionic UI components and it's behavior on different platform such as android, ios",
        "Various Module loading Strategy in Angular and how ionic uses it",
        "Angular concepts such as routing, modules, components, services, injectables, conditional classes and much more",
        "Powerful reactive form validation using Angular in Ionic",
        "Create keystore and sign APK"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation and Tools Used": [
          "Tools used in this course",
          "Install Nodejs and npm",
          "Install Ionic CLI and Cordova"
        ],
        "Pre-Requisite Knowledge": [
          "Promise Vs Async await"
        ],
        "Building Real World APP in Ionic with Firebase and Firestore DB": [
          "Where to find source code ?",
          "Project Setup And Running App",
          "Project Structure Overview",
          "Ionic Lab",
          "Ion Split Pane",
          "Toolbar Styling",
          "Firebase and Cloud Firestore ( NoSQL ) DB setup",
          "Configure Firebase and Firestore Library in Ionic App",
          "Responsive Login Form UI",
          "Login Form Validation Part-1",
          "Login Form Validation Part-2",
          "Login Form Validation Part-3",
          "Signup Page",
          "Firebase SIgnup/Register with Email and Password",
          "Firebase Logout",
          "Firebase Login With Email and Password",
          "Firebase Auth State",
          "Firebase Google Login Web",
          "Android Studio Setup and Set Environment Variables",
          "Run Ionic App on Real Android Device and Style Native Status Bar",
          "Firebase Google Login For Native Platform ( Android, iOS )",
          "Firebase Google Logout For Native Platform ( Android, iOS )",
          "Profile Page",
          "Fetch Product List From Firestore DB",
          "List Product UI",
          "Add Product Form UI",
          "Add Product To Firestore DB",
          "Get Product By Id From Firestore DB",
          "List Product UI Update",
          "Product Detail Page UI",
          "Update Product Form UI",
          "Update Product Firestore DB Service",
          "Delete Product From Firestore DB"
        ],
        "Producing ionic Apps as PWA and Native Android/IOS APP": [
          "Build Ionic App as PWA in Production Mode and Serve with Node.js Server",
          "Customize icon and splash screen for Native Platform (Android, iOS)",
          "Build APK in production and release mode",
          "Create Keystore, Sign APK with Keystore and Confgire SHA-1 Key to Firebase"
        ],
        "SOURCE CODE": [
          "SOURCE CODE",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Very basic understanding of HTML, CSS, JavaScript and Angular"
      ],
      "description": "Write once, run anywhere: Ionic 4 Angular with Firebase and Cloud Firestore NoSQL DB. Build Real World ionic 4 with Firebase Auth and Firestore DB\n\nWhat is Ionic Framework ?\nIonic Framework is an open source UI toolkit for building performant, high-quality mobile and desktop apps using web technologies (HTML, CSS, and JavaScript).\nIonic Framework is focused on the frontend user experience, or UI interaction of an app (controls, interactions, gestures, animations). It’s easy to learn, and integrates nicely with other libraries or frameworks, such as Angular, or can be used standalone without a frontend framework using a simple script include.\n\nWhat is Angular?\nAngular is a platform that makes it easy to build applications with the web. Angular combines declarative templates, dependency injection, end to end tooling, and integrated best practices to solve development challenges. Angular empowers developers to build applications that live on the web, mobile, or the desktop\n\nϟ About FIrebase Cloud Firestore\nCloud Firestore is a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud Platform. Like Firebase Realtime Database, it keeps your data in sync across client apps through realtime listeners and offers offline support for mobile and web so you can build responsive apps that work regardless of network latency or Internet connectivity. Cloud Firestore also offers seamless integration with other Firebase and Google Cloud Platform products, including Cloud Functions.\n\n\nAdvantages of Ionic Framework:\n♦ Cross-platform\nBuild and deploy apps that work across multiple platforms, such as native iOS, Android, desktop, and the web as a Progressive Web App - all with one code base. Write once, run anywhere.\n♦ Web Standards-based\nIonic Framework is built on top of reliable, standardized web technologies: HTML, CSS, and JavaScript, using modern Web APIs such as Custom Elements and Shadow DOM. Because of this, Ionic components have a stable API, and aren't at the whim of a single platform vendor.\n♦ Beautiful Design\nClean, simple, and functional. Ionic Framework is designed to work and display beautifully out-of-the-box across all platforms. Start with pre-designed components, typography, interactive paradigms, and a gorgeous (yet extensible) base theme.\n♦ Simplicity\nIonic Framework is built with simplicity in mind, so that creating Ionic apps is enjoyable, easy to learn, and accessible to just about anyone with web development skills.\n♦ Ionic CLI\nThe official Ionic CLI, or Command Line Interface, is a tool that quickly scaffolds Ionic apps and provides a number of helpful commands to Ionic developers. In addition to installing and updating Ionic, the CLI comes with a built-in development server, build and debugging tools, and much more .\n\n\nYou will learn the following things in the course:\n♦ Build a real-world ionic app with angular and firebase, cloud firestore DB.\n♦ Single codebase, run on any platform: web, native android, ios.\n\n♦ Firebase email password authentication in ionic.\n♦ Firebase Google login for Web.\n♦ FIrebase Google login for native android, ios.\n♦ CRUD operations to cloud firestore db in ionic app.\n♦ Build ionic app as PWA.\n♦ Build APK for production & release.\n♦ Create a beautiful and precise app icon and splash screen.\n♦ Deploy the app to native devices.\n♦ Serve ionic app with Nodejs Express.\n♦ Deep understanding of ionic UI components and its behavior on different platform such as android, ios.\n\n♦ Various Module loading Strategy in Angular and how ionic uses it.\n♦ Angular concepts such as routing, modules, components, services, injectables, conditional classes and much more.\n♦ Powerful reactive form validation using Angular in Ionic.\n\n♦ Responsive design with Ionic Grid.\n\n♦ Ionic Split Pane View.\n\n♦ Ionic Pull Down To Refresh.\n\n♦ Create keystore and sign APK\n\n♦and more",
      "target_audience": [
        "Javascript developer who want to build PWA, Native android, ios APP with just single codebase using Angular."
      ]
    },
    {
      "title": "Linode: Foundations of Web Server Security",
      "url": "https://www.udemy.com/course/linode-foundations-of-web-server-security/",
      "bio": "Cloud Service Models | IaaS | Linode Basics | TFA | SSH | Linux | Ubuntu | LAMP Stack | DBMS | Firewalls | SSL",
      "objectives": [
        "Cloud Computing Foundations",
        "Cloud Computing Service Models (IaaS, PaaS, SaaS)",
        "Linode Account Setup (TFA, SSH, LISH)",
        "Linux Foundations (Filesystem, Directory Commands, User Accounts)",
        "LAMP Stack Installation and Configuration",
        "Server Security (Network & Software Firewalls, UFW, Custom Ports)",
        "SSL Certificates (Let's Encrypt Installation)"
      ],
      "course_content": {
        "Introduction to Cloud Computing": [
          "Intro to Cloud Computing",
          "Benefits of Cloud Computing",
          "Cloud Computing Service Models"
        ],
        "Cloud Server Deployment on Linode": [
          "Linode Account Setup",
          "Exploring the Linode Cloud Manager",
          "Enabling TFA on Linode",
          "Deploying a Linode Virtual Instance",
          "Exploring the Linode Instance Dashboard",
          "Remote Server Admin via SSH",
          "Password vs SSH Key Authentication",
          "SSH Key Pair Authentication on Windows",
          "SSH Key Pair Authentication on MacOS",
          "Connecting with LISH",
          "Adding SSH Public Keys to Linode"
        ],
        "Linux Foundations": [
          "Introduction to Linux",
          "The Linux Filesystem",
          "Linux Maintenance Commands",
          "Linux Directory Commands [Part 1]",
          "Linux Directory Commands [Part 2]",
          "Ubuntu Basic Server Configuration",
          "Introduction to User Accounts",
          "Creating a Non-Root Account",
          "Securing the New User Account",
          "Disabling Root User Access and Password Authentication"
        ],
        "LAMP Stack Installation and Configuration": [
          "Installing LAMP Stack on Ubuntu via Command Line",
          "Installing LAMP Stack using Linode Marketplace",
          "Testing PHP on Apache",
          "Testing MariaDB Connection from PHP [Part 1]",
          "Testing MariaDB Connection from PHP [Part 2]",
          "Remote Server Administration using Linode GLISH"
        ],
        "Foundations of Server Security": [
          "Introduction to Server Security",
          "Introduction to Firewalls",
          "Network Firewalls",
          "Securing SSH with a Network Firewall",
          "Strict Network Firewall Policy",
          "Hosted Software Firewalls UFW"
        ],
        "Introduction to SSL Certificates": [
          "Introduction to SSL Certificates",
          "Traditional vs. Digital Certificates",
          "Types of SSL Certificates",
          "How SSL Certificates Work",
          "Obtaining a SSL Certificate",
          "Introduction to Let's Encrypt"
        ],
        "Digital Ocean Server Setup": [
          "Preparation",
          "Domain Name Server Administration",
          "Introduction to Digital Ocean",
          "Droplet Configurations",
          "Creating a Droplet",
          "Install PuTTY/Terminal and Connect",
          "Install LAMP Stack - Apache, MySQL, PHP",
          "Configure DNS on Digital Ocean",
          "Droplet Basic Configurations"
        ],
        "SSL Certificate Installation": [
          "Installing Let's Encrypt",
          "SSL Certificate Status Reports",
          "Redirect all Domain Variations to HTTPS",
          "Auto Renewal with CRON jobs"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course is designed to provide a comprehensive introduction to cloud computing and the foundations of server security. We cover a range of topics, starting from an introduction to cloud computing and cloud service models to cloud server deployment and configuration using Linode. We also explore the foundations of Linux, LAMP stack installation and configuration, server security, and SSL certificates.\n\nThe course begins with an introduction to cloud computing and the different service models available, such as Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS). This offers students a basic understanding of the different types of cloud services available along with various use cases.\n\nNext, the course delves into server deployment and configuration using Linode. Linode is a popular cloud hosting provider that offers a range of services, including virtual private servers (VPS), storage, and networking. Students will learn how to deploy and configure a virtual instance and use it to host a website or application using LAMP Stack. LAMP stands for Linux, Apache, MySQL, and PHP and is a popular stack used to build dynamic websites and web applications. Students will learn how to install and configure each component of the stack and use it to create a functional website or web application. The course will then cover Linux foundations, where we explore the Linux file system, basic commands, and user accounts.\n\nIn the following section students explore server security, including best practices for securing a server and common security threats. Students will learn about firewalls, intrusion detection and prevention systems, and how to secure sensitive data. We will demonstrate how to setup custom ports, hardware firewalls, and software firewalls using UFW.\n\nFinally, the course will cover installing and configuring SSL certificates. SSL (Secure Sockets Layer) is a standard security technology for establishing an encrypted link between a web server and a browser. Students will learn how to obtain, install, and configure an SSL certificate to secure their website or web application.\n\nThis course is well suited for anyone interested in cloud computing and server administration. By the end, student will be proficient with navigating Linode, while deploying and configuring remote instances using the latest in cloud technology. If this sounds exciting, then hit the enol button and let’s get started.",
      "target_audience": [
        "Students interested in Cloud Computing",
        "Students interested in Remote Server Deployment and Configuration",
        "Students interested in Server Security",
        "Students interested in the Foundations of Linux",
        "Students interested in LAMP Stack Installation and Configuration",
        "Students interested in how SSL Certificates Works",
        "Students interested in SSL Certificate Installation and Configuration"
      ]
    },
    {
      "title": "Learn Creative Coding with Vanilla JavaScript",
      "url": "https://www.udemy.com/course/learn-creative-coding-with-vanilla-javascript/",
      "bio": "Let's make art with code and learn object oriented programming with plain vanilla JavaScript in the process",
      "objectives": [
        "Explore creative coding with HTML, CSS and JavaScript",
        "Learn to draw with code",
        "Get deep understanding of HTML canvas drawing techniques",
        "Build a complete generative art project"
      ],
      "course_content": {
        "Learn Creative Coding with Vanilla JavaScript": [
          "Introduction & Project preview",
          "Project setup",
          "Fractals & JavaScript classes",
          "Drawing basic shapes",
          "Modifying shapes",
          "Transforming shapes",
          "Simple geometric patterns",
          "How to draw fractals",
          "Snowflake fractal",
          "Making a wide range of random shapes",
          "Particle systems and animation",
          "Drawing on multiple canvas elements",
          "Converting canvas drawings into pixels",
          "Experiments",
          "What's next?"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript is recommended"
      ],
      "description": "Discover creative coding and go from drawing a single line all the way to complex randomised fractal shapes. Then turn it into a particle system to create 'fractal rain' effect. All of that with just plain HTML, CSS and vanilla JavaScript, no frameworks and no libraries. Today we deep dive into HTML canvas drawing techniques and take it step by step to make sure we understand how everything works.\n\n\nIn Generative art the artist creates a process which is then set into motion with some degree of autonomy resulting in a completed artwork. I like to think about it as a human machine collaboration. Today we are the artists and HTML, CSS and JavaScript is the machine. Make your unique piece of art with me and practice your front end web development skills in the process. I will explain every line of code in detail as we go along.\n\n\nClass project: Fractal Rain\nSkill level: Beginner to Intermediate\nTopics:\n1) Object oriented programming - Classes, constructors, encapsulation, abstraction\n2) HTML canvas - changing state with translate, scale, rotate, drawing shapes, web animation.\n3) Deep learning with vanilla JavaScript, no frameworks, no libraries\n\n\nThis class is not for complete beginners, but if you already know at least the basics of HTML CSS and JavaScript come join me and let me show you how to make the machine help us to create something unique and beautiful. Have fun!",
      "target_audience": [
        "Beginner front end web developers curious about creative coding"
      ]
    },
    {
      "title": "Product Management Foundations",
      "url": "https://www.udemy.com/course/product-management-foundations/",
      "bio": "Case-based practical course on product management to build strong foundations in product concepts, process & frameworks",
      "objectives": [
        "Bare basics of the product management practice",
        "History of Product Management and why the practice came into existence in technology organizations",
        "Role and responsibilities of a product manager and how it varies in different stages of product lifecycle",
        "Product Manager vs Project Manager vs Product Owner, what's the difference?",
        "Product Management Process from Idea to Concept to Launch",
        "Idea validation, product planning and roadmapping",
        "Product Management Frameworks like Facebook's 3 questions, Jobs to be Done Framework, Design thinking, Goolge's design sprint, Hooked Model, etc.",
        "Product Prioritization Techniques like MoSCow, RICE by Intercom",
        "Product Metrics Models like Pirate Metrics and Google's HEART Framework",
        "Product Management Case Assignment to put Product Management learnings into practice"
      ],
      "course_content": {},
      "requirements": [
        "No pre-requisites, although a basic understanding of Software Development Lifecycle is desirable"
      ],
      "description": "Product Management is a sought after career for many software professionals. Professionals from different backgrounds aspire to take up this challenging and rewarding role to further their careers. However, there is aspiration and then there is reality. A few succeed in their career pursuits but many fail as there is a lack of structured courseware that is practical enough to bridge this skill gap.\nProduct Management Foundations is an introductory yet comprehensive course in this direction to help all aspiring and budding product managers to understand more about product management, get to know about the product management craft, and the essential skills, processes, frameworks involved in it. It is a fast track and practical course that teaches you product management as it happens on the ground, in most software product organizations.\nThe course includes a practical case assignment to put your product management learnings into action. You can get your case solution reviewed and get the necessary guidance on the same to hone your skills further.\nThe intended audience for this course are:\nProfessionals who want to get into Product Management\nAccidental Product Managers, ones who landed up in product management roles with no context whatsoever\nJunior Product Managers who want to get an overall perspective of Product Management and build their foundations\nStartup Founders & Cofounders who want to understand and implement Product management practice in their organization\nLeaders from other Organizational Practices who work with Product Managers closely and want to understand who are they\nAnyone & everyone who wants to understand about Product management",
      "target_audience": [
        "Professionals who want to get into Product Management",
        "Accidental Product Managers, ones who landed up in product management roles with no context whatsoever",
        "Junior Product Managers who want to get an overall perspective of Product Management and build their foundations",
        "Startup Founders & Cofounders who want to understand and implement Product management practice in their organization",
        "Leaders from other Organizational Practices who work with Product Managers closely and want to understand who are they",
        "Anyone & everyone who wants to understand about Product management"
      ]
    },
    {
      "title": "PHP Laravel: Build Food Ordering Ecommerce Store",
      "url": "https://www.udemy.com/course/php-laravel-2023-build-food-ordering-ecommerce-store/",
      "bio": "Build Amazing Food Ordering Ecommerce Store with PHP Laravel MySQL and Bootstrap",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Laravel UI package",
        "Learn how the MVC structure works in Laravel",
        "Integrate your own theme easily",
        "Work with Models and Eloquent the professional way",
        "Work with views and Eloquent the professional way",
        "Work with Controllers and Eloquent the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn some advanced routing ways",
        "work with Middlewares and Guards",
        "Learn to validate with Requests",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Integrate PayPal API for payment processing and online ordering",
        "Create a menu management system",
        "Create a customer ordering system"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of Laravel would help a lot"
      ],
      "description": "Learn how to build a fully-functional food ordering ecommerce store with PHP Laravel.\nIn this course, you will learn the following:\nHow to install and configure Laravel\nHow to create a database for your food ordering store\nHow to create a user registration and login system\nHow to create a food menu\nHow to add food items to the cart\nHow to checkout and process payments\nHow to implement admin features for managing food items, orders, and users\nBy the end of this course, you will have the skills and knowledge to build your own food ordering ecommerce store.\nWho is this course for?\nThis course is for anyone who wants to learn how to build a food ordering ecommerce store with PHP Laravel.\nWhat you will need\nTo take this course, you will need a computer with PHP and Laravel installed. You will also need a MySQL database.\nWhat you will get\nAccess to the course materials, including video lectures, code examples\nA supportive community of learners\nThe opportunity to build your own food ordering ecommerce store\nSign up today and start learning how to build a food ordering ecommerce store with PHP Laravel!\nHere are some additional benefits of taking this course:\nYou will learn how to use one of the most popular PHP frameworks, Laravel.\nYou will gain experience in building web applications with PHP.\nYou will learn how to implement user authentication and authorization.\nYou will learn how to create a database for your web application.\nYou will learn how to add and manage content in your web application.\nYou will learn how to process payments through a payment gateway.\nIf you are interested in learning how to build a food ordering ecommerce store, then this course is for you!",
      "target_audience": [
        "People who learned PHP Laravel and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "Vue 3 Essentials with Typescript: A Practical Guide",
      "url": "https://www.udemy.com/course/vue-admin/",
      "bio": "Vue 3, Composition API, Vuex, Typescript, Docker, c3.js charts, Upload Images, Export CSV",
      "objectives": [
        "Use Vue 3 with Typescript",
        "Dispatch events with Vuex",
        "Use Composition API",
        "Use Docker",
        "Authentication and Authorization",
        "Create charts with c3js",
        "Upload Images",
        "Export CSV files"
      ],
      "course_content": {},
      "requirements": [
        "Basic Javascript knowledge"
      ],
      "description": "Hello and welcome to this course, in this course you will learn how to create an Admin App using Vue 3 Composition API with Typescript.\nIn this tutorial you will learn:\nUse Vue with Typescript\nUse Vuex\nHow to use Composition API\nCreate classes, interfaces\nCreate public and private routes\nRestrict routes for unauthorized users\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "ASP.NET C# - Enterprise Web Systems From Novice to Expert",
      "url": "https://www.udemy.com/course/aspnet-c-enterprise-web-systems-from-novice-to-expert/",
      "bio": "Web Programming Course for Building a Real Enterprise Web Systems and Websites from Point Zero Using ASP.NET C#.",
      "objectives": [
        "Create a rich GUI for web based applications using a rich set of controls.",
        "Create secure (authentication and authorization) web applications.",
        "Deploy web applications.",
        "Understand how to analyze a database for your enterprise system or website.",
        "Understand how to create a database for your enterprise system or website.",
        "Create enterprise systems for organizations, hospitals, NGO's, Universities,...",
        "Dealing with Bootstrap library"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Web Concepts (Theoretical Background)": [
          "Web Basic Concepts",
          "What is ASP.NET ?"
        ],
        "Starting Microsoft Visual Studio": [
          "What is Microsoft Visual Studio?",
          "Visual Studio Download link",
          "Hello World Website using Microsoft Visual Studio"
        ],
        "Microsoft Visual Studio Standard Controls": [
          "Button Control",
          "Label Control",
          "TextBox Control",
          "Checkbox Control",
          "DropDownList Control",
          "RadioButton Control",
          "Hyperlink and Link Button",
          "Image and Image Button",
          "File Upload Control"
        ],
        "ASP.NET Validation Controls": [
          "Required Field Validator",
          "Range Validator",
          "Compare Validator",
          "Regular Expression Validator",
          "Validation Summary Validator",
          "Comprehensive Example - Standard Controls and Validation"
        ],
        "State Management With Session": [
          "ASP.NET Session and Login Pages - Part 1",
          "Session Management - Part 2"
        ],
        "ASP.NET Master Pages": [
          "Asp.net Master Pages"
        ],
        "Database Management": [
          "Create a Database for your site",
          "Create tables inside Database",
          "Create a Relationship Diagram for Database"
        ],
        "Data Bound Controls": [
          "Database Connection to Visual Studio",
          "GridView Control",
          "Advanced Grid View Techniques"
        ],
        "Big Advanced Project - Data Entry Web Enterprise System": [
          "Creating Database and tables",
          "Structuring the Website in Visual Studio",
          "Using Bootstrap for Front-End design",
          "Data Access and Page Data Access Files",
          "Create Login Page for Admins - Part 1",
          "Create Login Page for Admins - Part 2",
          "Creating Adding Users Page for Admins - Part 1",
          "Creating Adding Users Page for Admins - Part 2",
          "Creating Adding Users Page for Admins - Part 3",
          "Creating Adding Users Page for Admins - Part 4"
        ]
      },
      "requirements": [
        "HTML Basics",
        "Programming Basics",
        "Database Basics"
      ],
      "description": "* PLEASE READ\n\nIn this course, you will learn ASP.NET web application development from scratch . ASP.NET  is the most popular web programming language on the market today, and has been for many years.\nThis Course will give you what you want to start and end as a web developer using ASP.NET C# .\n\n\nAfter going through ASP.NET C# principles and controls using Visual Studio and Databases Management, we will start together in a practical implementation to what we learned through creating real projects and systems.\n\n\nThis Course will help you to build an Enterprise Systems(ES), ES are large-scale application software packages that support business processes, information flows, reporting, and data analytic in simple or complex organizations.\n\n\nThis Course will teach you the actual implementation of a real life projects and examples during course progress and this is critical to those who want to be a professional in web development using ASP.NET C#.\n\n\nThis Course will teach you how to master Front-End development using Bootstrap and how to integrate the bootstrap within the project in Visual Studio.\n\n\nSource code for lectures will be added by the end of this course under helping materials and codes section.\n\n\nThe following is the Enterprise Web System that we will finalize during this course :\nData Entry Web System - Advanced System including features:\nDatabase planning, Creating,back-up, restoring database, stored procedures and connection to Visual Studio.\nAdmin Panel :Login Pages, Add Users, Manage Users , Search page.\nUser Panel : Login Pages , Add Clients Data, Manage Clients Data.\n\n\nIMPORTANT : THIS IS A COMPLETE REFERENCE AND A COMPREHENSIVE COURSE FOR ASP.NET C# WEB PROGRAMMING LANGUAGE THAT WILL START FROM BEGINNER LEVEL TO ADVANCED LEVEL.\nHappy Programming !",
      "target_audience": [
        "Web developers",
        "Database developers",
        "Job aspirants"
      ]
    },
    {
      "title": "Responsive Portfolio Website HTML5, CSS3, JavaScript (2024)",
      "url": "https://www.udemy.com/course/responsive-portfolio-website-using-html5-css3-javascript-bootstrap5/",
      "bio": "Convert Figma Portfolio Template to Responsive HTML Website using HTML5, CSS3, SASS, Bootstrap5, and JavaScript",
      "objectives": [
        "Improve HTML5 and CSS3 skill",
        "Improve SCSS skill",
        "Improve Bootstrap5 skill",
        "Improve JavaScript skill",
        "How to develop responsive websites to render well on Mobile, Tablet, Laptop, and other devices",
        "How HTML5, CSS3, SCSS, Bootstrap5, and JavaScript come together",
        "How to create animations and transitions with CSS3 and JavaScript",
        "How to work with JavaScript pure instead of jQuery and jQuery plugins",
        "How to build a portfolio website using HTML5, CSS3, SCSS, Bootstrap5, and JavaScript",
        "Get acquainted with tools like Emmet plugin to improve coding speed",
        "Develop websites with dark and light mode using JavaScript"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Programming Languages and libraries that we will use",
          "The tools I will use",
          "Live server",
          "Visual studio code customization",
          "Emmet plugin to speed coding",
          "How to use Figma",
          "Shortcuts and multi line editing",
          "How to center align an element with absolute position",
          "How to create a triangle with CSS"
        ],
        "Creating a Fundamental Structure": [
          "Base HTML5 code",
          "Install and configure SASS",
          "Multiple SCSS files using the SASS partials feature",
          "CSS reset",
          "Import Google fonts",
          "Install and configure Bootstrap5",
          "Import font icon",
          "Sidebar HTML",
          "Define theme colors",
          "Sidebar CSS style code",
          "Show the correct section by clicking on the sidebar item",
          "Responsive sidebar for all devices(Mobile, Tablet, Laptop, …)"
        ],
        "Home Section": [
          "Introduction",
          "Home section HTML code",
          "Home section CSS style code",
          "Add Typed.js",
          "Meteor shower animation",
          "Home section responsive for all devices(Mobile, Tablet, Laptop, …)"
        ],
        "About Me Section": [
          "Introduction",
          "Hero section HTML code",
          "Hero section CSS style code",
          "Hero section responsive for all devices(Mobile, Tablet, Laptop, …)",
          "Languages and skills section HTML code",
          "Languages and skills section CSS style code",
          "Languages and skills section responsive for all devices(Mobile, Tablet, Laptop)",
          "Certifications section HTML code",
          "Certifications section CSS style code",
          "Certifications section responsive for all devices(Mobile, Tablet, Laptop, …)",
          "Message me button link",
          "Add fill rate"
        ],
        "Resume Section": [
          "Introduction",
          "Resume section HTML code",
          "Resume section CSS style code",
          "Resume section responsive for all devices(Mobile, Tablet, Laptop, …)"
        ],
        "Work Section": [
          "Introduction",
          "Galley HTML code",
          "Implement shuffle.js on gallery",
          "Work modal HTML code",
          "Work modal CSS style code",
          "Work modal responsive for all devices(Mobile, Tablet, Laptop, …)",
          "Work modal dynamic content using JavaScript"
        ],
        "Testimonial Section": [
          "Introduction",
          "Testimonial section HTML code",
          "Testimonial section CSS style code",
          "Testimonial section responsive for all devices(Mobile, Tablet, Laptop, …)",
          "Testimonial dynamic show feedback using JavaScript"
        ],
        "Contact Me Section": [
          "Introduction",
          "Contact section HTML code",
          "Contact section CSS style code",
          "Contact section responsive for all devices(Mobile, Tablet, Laptop, …)"
        ],
        "Light Mode": [
          "Introduction",
          "Toggle Mode Button",
          "Add Light SCSS",
          "Light Sidebar",
          "Light Home Section",
          "Light About Section",
          "Light Resume Section",
          "Light Work Section",
          "Light Testimonial Section",
          "Light Contact Section",
          "Light Sidebar Responsive"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML5, CSS3, SCSS, Bootstrap5, and JavaScript is required"
      ],
      "description": "Welcome to this Cheetah Academy training course. I hope that it will be a beneficial course for you and you will learn a lot from it and, as a result, improve your programming skills. This course aims to help people who are beginners in Front-End Web Development, do not have an acceptable portfolio to offer, or can not create a final product. In this training course, we intend to teach you the following items:\nImproving your skills and taking a few steps to be professional.\nHelping you learn the basic skills to create a valuable product.\nAssisting you in creating a good and presentable portfolio.\nIf you know the basics of HTML5, CSS3, SASS, Bootstrap5, and JavaScript, but you do not know how to use them to create a personal website, this course will help you. This course will teach you how to create a personal website using HTML5, CSS3, SASS, Bootstrap5, and JavaScript. The following is the role of each of the tools, libraries, programming languages, and frameworks:\n\n\nWhat is Figma's role in this tutorial?\nFirst, the website should be created using graphic applications such as Photoshop, Sketch, Adobe xd, and Figma. Then it will be coded by a Front-End Web Developer using languages, libraries, and web frameworks like HTML5, CSS3, SASS, Bootstrap5, JavaScript, jQuery, Vue.js, React, and Angular to become a static website. All components, colors, font sizes, margins, paddings, etc., are determined by Figma, and you must extract these values from the Figma file and convert them to code. In this course, we will turn a template implemented in Figma into a beautiful website, and you will learn how to extract photos, colors, font sizes, etc., from Figma.\n\n\nWhat is HTML5’s role in this tutorial?\nMost websites are now HTML-based, and it is the basis of today's websites and web applications. Semantic tags such as MAIN, SECTION, HEADER, FOOTER, and ASIDE have been added to the last version of this language to differentiate sections of a website, called HTML5. It had been done by the DIV tag already, and the website's page had been divided into different sections, and these DIV tags were distinguished using CLASS and ID.\n\n\nWhat is the CSS3’s role in this tutorial?\nHTML without CSS has no visual attractiveness, and you should use CSS to give a website color, glaze, and beauty. In this tutorial, we will use the third version of CSS called CSS3. In this version, many attractive features such as transition, animation, embedded fonts, and shadows have been added, by which you can make a website more attractive. This course uses CSS3 features extensively to improve your CSS3 knowledge.\n\n\nWhat is the SASS’s role in this tutorial?\nWhen we work with CSS, we can write CSS code faster using a special tool called SASS. SASS is a preprocessor for CSS and includes features such as variables, nesting, and inheritance to speed up the writing of CSS code. The browsers do not understand SASS codes, so when we write these codes, they are converted to CSS by a compiler to be understandable for the browsers. In this course, you will learn to work with SASS practically, improving your skill in SASS. Today, Front-End Web Developers should have the ability to work with a CSS preprocessor in their list skills.\n\n\nWhat is Bootstrap5’s role in this tutorial?\nWhen you create a website using HTML and CSS, you should create it responsive to make it visible properly on various devices such as mobile phones, tablets, laptops, and monitors with different dimensions. You can use media queries to do this, but an easier way is to use Bootstrap, which has a premade grid structure built in if you follow Bootstrap rules. Therefore, you will have a responsive website that displays well on different devices with different dimensions. When we recorded this tutorial, the latest version of Bootstrap was the fifth version, Bootstrap5. In this version, like the previous version, flex is used to create grids, and it has almost the same features as Bootstrap4 with minor changes. The most significant change is the removal of jQuery; in contrast, raw JavaScript has been employed.\n\n\nWhat is JavaScript’s role in this tutorial?\nThe most popular programming language globally is JavaScript, and in this course, we will utilize JavaScript. We want to improve your JavaScript skills; the more you watch and practice this course, the more you practically learn JavaScript skills. We will not use jQuery and its plugins in this course because we want you to learn raw JavaScript. As you know, JavaScript is the basis of all JavaScript libraries and frameworks such as jQuery, React, Vue.js, Angular, and Svelte, so if you want to learn any of these libraries and frameworks, you should first learn JavaScript sufficiently. We want to improve your JavaScript skills because we believe JavaScript is the heart of the Front-End!\n\n\n\n\nWhat are the features of this website?\nThis website has two dark and light modes; by clicking on a button, the website theme goes from dark to light and vice versa using JavaScript.\nMeteor shower animation is included on this website.\nExistence of a biography section to show critical skills, foreign languages, programming skills, years of experience in each field, and display other information.\nAbility to display educational background and work experience in the resume section.\nView the portfolio and details of each portfolio in the portfolio section\nDisplay customer feedback in the Testimonial section\nPersonal resume download link\nPersonal social network links",
      "target_audience": [
        "Trainee Front-End Web Developers",
        "Junior Front-End Web Developers",
        "Mid-Level Front-End Web Developers"
      ]
    },
    {
      "title": "CSS Animations: The Complete Guide",
      "url": "https://www.udemy.com/course/css-animations-the-complete-guide/",
      "bio": "Build over 20 projects & bring your websites to life with this advanced CSS animation guide for developers of any level",
      "objectives": [
        "CSS Animations",
        "The importance of accessibility and user experience in animation",
        "CSS Transitions",
        "CSS Keyframes",
        "SVG Animations",
        "JavaScript Animations",
        "Animation plugins and libraries"
      ],
      "course_content": {
        "Introduction": [
          "What will you learn?",
          "What do you need to get the most from this course?",
          "A brief history of web animation",
          "Summary"
        ],
        "The Fundamentals of CSS Animations": [
          "Introduction",
          "Transitions",
          "Easing / Timing functions",
          "Keyframes",
          "3D animation",
          "Accessibility",
          "CSS Animation Fundamentals Quiz",
          "Summary"
        ],
        "CSS Animation Projects": [
          "Introduction",
          "Menu Navigation Links",
          "Buttons",
          "Glowing Neon Buttons",
          "Video Play Button",
          "3D Button",
          "Image Card Hover",
          "Gradient Background",
          "Scroll Down Indicators",
          "UPDATE - READ FIRST - 3D Card Rotate",
          "3D Card Rotate",
          "Form Text Inputs",
          "Search Bar",
          "Loading Animations",
          "Liquid Loading Effect",
          "Clip Path - Information Cards",
          "Clip Path - Text",
          "UPDATE - READ FIRST - Parallax",
          "Parallax",
          "Summary"
        ],
        "JavaScript Animation Projects": [
          "Introduction",
          "Overlay",
          "Hamburgers",
          "Side Navigation Menu",
          "Fade-in on Scroll",
          "Mouse Move - Button Border",
          "Summary"
        ],
        "SVG Animation Projects": [
          "Introduction",
          "SVG Icons",
          "SVG Text",
          "SVG Images",
          "Summary"
        ],
        "Animation Plugins and Libraries": [
          "Introduction",
          "Hover.css",
          "Animate.css",
          "Animate On Scroll",
          "JavaScript Animation Plugins and Libraries",
          "Summary"
        ],
        "The Future and Summary": [
          "The Future of CSS Animations",
          "Congratulations!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS"
      ],
      "description": "Take your website projects to the next level and add more value as a developer. Offer skills to businesses that make you and your websites stand out from the crowd.\n\n\nLearn to build a variety of exciting CSS animations that will enhance the user’s experience and give your website development that extra edge\n\n\nThe animations that you’ll be building will be real-world examples that you can use to enhance any website.\n\n\nThis extensive CSS animations course can be followed along by all developers at any skill level, and that includes beginners. It is recommended that you have basic knowledge of HTML and CSS, but there is no need to know anything about web animations as this will all be thoroughly taught. I have not included any complicated terminology so as long as you have a basic understanding of front-end web languages, you will be able to follow along with ease.\n\n\nYou’ll get a full understanding of how to use all aspects of CSS animations such as transitions, transforms, and keyframes to animate images, text, icons, SVGs, and much more. You’ll first learn the fundamentals of CSS animations to help build simple animations, before moving towards more advanced examples.\n\n\nYou’ll be able to flex your creative muscles, whilst still producing animations that are fully accessible, and always keeping the user experience in mind. For all the animation projects that you’ll learn to build, I will provide you with the starting files which will include a basic webpage setup, but then it will be up to you to code along with me. You will be coding all the animations from scratch, expanding your development skillset along the way.\n\n\nBy the end of the course, you’ll have the expert knowledge to be able to charge more for your services as a web developer. Enrol today!",
      "target_audience": [
        "Web developers who want to produce more exciting and dynamic websites without sacrificing good accessibility or user experience"
      ]
    },
    {
      "title": "Building HTML5 Canvas projects from scratch",
      "url": "https://www.udemy.com/course/building-html5-canvas-projects-from-scratch/",
      "bio": "Learn to create several useful code projects using html5 canvas JavaScript. Learn by example as we build these projects",
      "objectives": [
        "create HTML canvas animations",
        "create canvas images output to real images",
        "update and work with canvas",
        "apply HTML5 JavaScript Jquery concepts to web projects"
      ],
      "course_content": {
        "Learn HTML5 from projects": [
          "HTML5 Canvas Projects Course intro",
          "How to use this course"
        ],
        "How to create a basic animation in HTML5 Canvas": [
          "Basic Canvas Setup for project",
          "Setting project variables",
          "How to draw the ball",
          "requestAnimationFrame and clear frame for animation",
          "create boundaries for ball change directions",
          "random color for the ball",
          "Adding cool effects to the project",
          "Bouncing Ball Project Source Code"
        ],
        "How to create an images draw on the canvas with a mouse project": [
          "Setup HTML5 Form type and Canvas",
          "Setup project variables for drawing on canvas",
          "Create addEventListeners and add functions for interaction",
          "How to get the mouse position on canvas",
          "Drawing on the canvas paths and lines",
          "Using dynamic colors and marker widths to draw on canvas",
          "Clear canvas start again",
          "Save to base64 image code create new image from canvas content",
          "Project Tweaks slider",
          "Add jquery to send AJAX",
          "Using AJAX to send image data and PHP to create images on the fly",
          "Creating images on the fly storing them to the server",
          "Code overview and summary",
          "Project Source Code",
          "Cursor style Tweak"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Learning Resource Collection"
        ]
      },
      "requirements": [
        "basic HTML and JavaScript",
        "desire to learn",
        "access to a computer"
      ],
      "description": "Best way to learn is by real examples of code, showing you how the code works together to create amazing applications from scratch.\nCanvas drawing is done using JavaScript, this course focuses on JavaScript based around HTML5 canvas interactions. Also covers some basic AJAX, PHP, JQUERY, Bootstrap.\nHTML5 canvas provides an amazing opportunity to create some really cool effects on web pages. This course will show you how to build projects from scratch, using HTML5 and JavaScript. How to use JavaScript applying it to the canvas to create animation and user generated content on the fly.\nI have over 15+ years of web development experience, and have worked on hundreds of web applications just like these. One of the best ways to learn is by example, so I've created some projects that really demonstrate core applications that can be created using html5.\nThis course is designed to help you learn and develop skills for working on real world concepts using JavaScript and HTML5. Starting from scratch, step by step explanations of what code to use and where. We demonstrate how the code gets used, in addition to the process of building something from concept to launch.\nAll of the source files are included, top resources and links are shared throughout the course. Code samples are explained step by step, and you are encouraged to work along with the course material.\nProject one canvas animation tutorial - designed to demonstrate animation in HTML5 canvas\nCovers basic concepts of how to animate in canvas\nJavaScript to use that helps with animation\nhow to draw paths on canvas using JavaScript\nhow to create arcs and circles\nAdded object effects in JavaScript - random colors and shadows\nhow to apply logic to create a continuous animation\nProject two create user generated images - learn how to draw on the HTML5 canvas and output those images.\nbasics of scoping a project from scratch\nsetup html5 field types and buttons\nlink to bootstrap and jquery\napply event listeners for user interaction\nget mouse cursor position and calculate actions\nevent triggered functions\npass base64 image data to webpage\nuse AJAX to send image data to the server\nuse PHP to generate png files from the HTML5 canvas drawing\nIn addition, I provide regular support to students. Also course upgrades and new projects will be added regularly.\nThe code in these projects is included!!! for you to be able to get a jump start on creating your own projects using Canvas.",
      "target_audience": [
        "anyone who wants to learn more about using HTML5 canvas",
        "anyone who wants to enhance their skills with canvas",
        "build real world projects using javascript and canvas",
        "learn how to make amazing projects from scratch",
        "web developers and application developers"
      ]
    },
    {
      "title": "JavaScript Tutorial",
      "url": "https://www.udemy.com/course/lets-learn-javascript-by-coding/",
      "bio": "Programming is all about practice - let's minimize explanation of theory and do more coding",
      "objectives": [
        "Read and understand JavaScript code quickly",
        "Created modern interactive websites and web applications",
        "Integrate JavaScript into existing web applications",
        "Have a good understanding of complex JavaScript areas"
      ],
      "course_content": {
        "Introduction - What We Will Learn In This Course": [
          "Introduction",
          "Getting Familiar With JavaScript"
        ],
        "JavaScript Fundamentals": [
          "Statement Identifiers in JavaScript",
          "Case-Sensitivity and Comments",
          "Data Types, Numbers, and Strings in JavaScript",
          "Booleans, Undefined, and NULL",
          "Declaring Variables in JavaScript",
          "Variables in JavaScript (part 2)",
          "Local and Global Scope in JavaScript",
          "Local and Global Variables in Scope",
          "Object Properties in JavaScript",
          "Object Methods",
          "Arrays - Part 1 (Basics)",
          "Arrays - Part 2"
        ],
        "More complex (advanced) JavaScript Areas - JSON, Jquery, Ajax": [
          "JSON Composition",
          "JSON Operations",
          "Functions - Part 1 (Basics)",
          "Functions - Part 2 (Scope)",
          "jQuery Basics",
          "jQuery DOM Methods",
          "Working With Properties in JavaScript",
          "If and Else Statements",
          "Else If and Switch Statements",
          "AJAX"
        ],
        "Properties, Statements, Loops and Strings in JavaScript": [
          "Loops in JavaScript",
          "Regular Expressions",
          "Regular Expression Methods",
          "Dates in JavaScript",
          "Date Timezones",
          "Math in JavaScript",
          "Strings in JavaScript",
          "String and indexOf Operations",
          "charAt and concat",
          "Number Operations in JavaScript",
          "toString and parseInt Methods",
          "valueOf and toFixed Methods",
          "Operators, Operations and Operands"
        ]
      },
      "requirements": [
        "Eclipse, Notepad++ or any other editor"
      ],
      "description": "In this tutorial we’re going to learn from scratch one of the most popular items in front end web development - JavaScript.\n\nJavaScript is a client-side programming language which means that the program code is sent into your computer with the rest of the web page code then, your browser reads the code and does what it says.\nThe point is after taking this course you from the complete beginner will be able to implement your own JavaScript applications and be fluent in JavaScript code written by another developers. Using JavaScript you'll be able to change things on the page, depending on user activities there.\nThis means you'll be able to work on modern interactive websites.\nThe very first topic we're going to learn is what is JavaScript how to recognize it and the places JavaScript can be implemented in the web applications.\nWe'll get down and continue learning from the simple JavaScript areas like lexical structures, Variables, Objects, Arrays, Functions, etc.\nOnce we understand JavaScript fundamentals, we'll get down to more complex topics like JSON, Jquery, and Ajax.\nWe'll then get down to the Document Object Model (DOM) in JavaScript and will cover finding elements, changing the document, attributes, layout, styling and many other items related to JavaScript document object model.\nOf course we'll also cover some of the areas related to JavaScript interaction with HTML and CSS. We will analyze JavaScript Events Handling, Events and Document Object Model nodes, Event objects, etc.\nAnd of course we will be implementing interesting code examples together and explain them in a very detailed way so that upon completion of this course you'll be able to use JavaScript to create interactivity and dynamic elements in your web applications.\nIn fact we're going to learn from scratch a number of different aspects of JavaScript.\nSo let's get started with the course!",
      "target_audience": [
        "Students who want to learn JavaScript from scratch",
        "Web developers who want to extend existing skills"
      ]
    },
    {
      "title": "Ruby on Rails for Beginners",
      "url": "https://www.udemy.com/course/ruby-on-rails-for-beginners-step-by-step/",
      "bio": "Create real world applications using this in demand Web Development framework.",
      "objectives": [
        "Understand how to write web applications in Ruby on Rails",
        "Understand Rails core \"7 methods\""
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome"
        ],
        "The Set Up": [
          "Git Overview",
          "Git Hub",
          "CMDER",
          "VS Code",
          "Create Base App",
          "Clone and Commit",
          "Configre App With Nanobox",
          "Run Nanobox"
        ],
        "Overview": [
          "Nanobox Behind The Scenes",
          "Rails Overview"
        ],
        "Rails CRUD (create, read, update, destroy)": [
          "The Seven Methods",
          "Views and Routes",
          "Data Migration",
          "The Form",
          "Parameters",
          "Reading Data",
          "Reading Data By ID",
          "Updating Data",
          "Destroy Data",
          "Linking To",
          "Redirecting",
          "Validating Data",
          "If This Else That",
          "Using A Callback",
          "Form Partial"
        ],
        "Generators": [
          "Compare Scaffold",
          "Add Remove Columns",
          "Using New Attributes"
        ],
        "Gems and Forms": [
          "Style",
          "Simple Form"
        ],
        "An App With Users": [
          "Setting The Container",
          "Scaffold Topics",
          "Adding Users",
          "User Routes",
          "Add Some Flash",
          "Navigation",
          "User Navigation",
          "Navigation Based On A Users Status",
          "Authenticate The Class"
        ],
        "Users With Custom Fields": [
          "Rolling Back",
          "Set up Users",
          "Scaffold A Template",
          "Custom User Fields",
          "Adding A Custom User Controller",
          "Navigation",
          "The Current User Method",
          "Flash"
        ],
        "Posts With Comments": [
          "Posts Scaffold",
          "A Post Needs A User",
          "Post Comments Controller",
          "Post Comment Form",
          "Showing Comments",
          "Edit And Delete"
        ],
        "Recover Password": [
          "SetUp",
          "Configuration",
          "Environment Variables"
        ]
      },
      "requirements": [
        "Basic PC computer skills",
        "A basic knowledge of the Ruby programming language"
      ],
      "description": "So maybe you tried out Ruby on Rails, but found it too hard and feel that you need a more comprehensive introduction.\nMaybe you have worked a bit with Ruby and want to further your skills with the language and learn web development with it and Rails.\nPerhaps your boss or client threw you in the deep end with a Ruby on Rails project, and you need to learn about Rails fast?\nOr maybe you just decided you would like to add Web development and Ruby on Rails to your resume to give yourself some better opportunities. If so, you are in the right place.\nThis course is going to teach you how to create web applications using Ruby on Rails. .\nWhy Ruby on Rails?\n\nRuby on Rails is a super fast and productive way to develop web applications.   It simplifies common repetitive tasks that take a long time to create in other languages.  The framework is mature because it has been built on solid foundations.  It's much easier to get a high-end product completed in Ruby on Rails than in other languages.\nBecause it's mature there is a ton of open source projects/code you can use that are extremely powerful and really give you an advantage in build solid web applications.\nPlus it uses the Ruby programming language. Ruby programming code reads like English and that makes it a lot easier to understand if you are just starting out as a programmer.  As a dynamically typed language, Ruby does not have all of those hard rules other languages do, and in many respects is similar to spoken languages. This empowers you by giving you flexibility to solve problems in a more human way than other programming languages.\nWhat is covered?\nSome of the features covered in the course include...\nGit Basics, Rails core \"7 methods\", and how they perform \"CRUD\", Rails Routing, Strong Parameters, Custom Callbacks, Custom Validation, Partials,\nBootstrap 4, Rails Generators, User Autorization, User Authentication, Content Management, Deployment, Seeding the Database, Sending/Receiving Email using a Rails Application, Configuring Sidekiq, Configuring Redis on Heroku and a private server, Installing Templates, Custom Validation Messages, Adding Assets to the Rails Pipeline, Uploading Images on your own server, Uploads to AWS, Adding a WYSIWYG - What You See Is What You Get Editor and more!\nWhy enrolling in this course is the best decision you can make.\nThis courses uses non complicated examples to do complex things.  The goal is to get you to understand exactly what you are doing and the reasons why, rather than typing in code you don't understand. No code is glossed over, as it is important for you to understand what each line is doing.\nYour instructor, Stephen Chesnowitz became a fan of Ruby and Ruby on Rails back in 2012 and dove in head first. Over the years he has worked on some pretty cool projects, and is here to share what he can and help you along your path into the world of web development using Ruby on Rails. As a result you are dealing with someone who not only knows the Ruby language and Ruby on Rails really well, but has the skills to teach things in a way that anyone can understand.\nAfter completing this course, you will have the necessary skills to be able to create your own web applications using Ruby on Rails.\nThe sooner you sign up for this course, the sooner you will have the skills and knowledge you need to increase your job or consulting opportunities.    Ruby on Rails developers are in high demand!\nYour new job or consulting opportunity awaits!\nWhy not get started today?\nClick the Signup button to sign up for the course!",
      "target_audience": [
        "Anyone wanting to learn how to create web applications using Ruby on Rails"
      ]
    },
    {
      "title": "Web Development Essentials - HTML5, CSS, Javascript",
      "url": "https://www.udemy.com/course/web-development-essentials-html5-css-javascript/",
      "bio": "Learn the basic tools that are needed in every web application development.",
      "objectives": [
        "Write valid and neat HTML code.",
        "Use and understand CSS styling.",
        "Write functional JS code",
        "Build full, working web application."
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Needed Tools",
          "A Brief History of Web Applications"
        ],
        "HTML5": [
          "HTML5 Introduction",
          "HTML Markup",
          "Page Structure",
          "Non Textual Tags",
          "Tags' Attributes",
          "Lists",
          "Tables",
          "Section Wrap Up",
          "HTML Reference Link",
          "Assignment 1 - HTML",
          "Quiz 1 - HTML"
        ],
        "HTML5 Layout": [
          "Page Layout",
          "Div",
          "Semantic Elements",
          "User Input",
          "More User Input",
          "Section Wrap Up",
          "Assignment 2 - html Layout",
          "Quiz 2 - HTML Layout"
        ],
        "CSS": [
          "CSS Introduction",
          "Styling in Style Tag and in File",
          "CSS Selectors",
          "Some Styling Rules",
          "The Box Model",
          "CSS3",
          "Section Wrap Up",
          "Assignment 3 - css",
          "Quiz 3 - CSS"
        ],
        "Javascript Basics": [
          "Introduction to Javascript",
          "How to Run JS Code",
          "JS Basics",
          "JS Functions",
          "Execution Context",
          "Variables and Functions Hoisting",
          "Section Wrap Up",
          "Assignment 4 - JS Basics",
          "Quiz 4 - JS Basics"
        ],
        "Functions and Arrays": [
          "Function Type",
          "Function Expressions",
          "Functional Programming",
          "Arrays",
          "Arrays reverse and sort",
          "Array Manipulations",
          "Helper Functions",
          "Section Wrap Up",
          "Assignment 5 - Arrays and Functions",
          "Quiz 5 - Functions and Arrays"
        ],
        "JS Objects": [
          "Creating Objects",
          "Object Literal",
          "Factory Pattern",
          "Section Wrap Up",
          "Assignment 6 - Objects"
        ],
        "Document Object Model": [
          "DOM Introduction",
          "Elements",
          "Selecting Elements",
          "Event Listeners",
          "More Listeners",
          "Tree Manipulations",
          "Section Wrap Up",
          "Assignment 7 - DOM"
        ],
        "JS Modules": [
          "Modules Introduction",
          "Functions as Modules",
          "Self Executed Functions",
          "BMI App Introduction",
          "Project Structure",
          "Main Module Code",
          "Sub Module Code"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A working computer and basic knowledge in opening and saving files.",
        "For the JS part - a basic knowledge in programming."
      ],
      "description": "TL;DR - Learn HTML, CSS, JS, they are the tools of the past, present and future.\nWeb development is a big thing nowadays, and probably would be in the next coming years. Web development is the field of writing applications that would run and accessed via the web browser. The web development field had gone (and is going every day!) through tremendous changes. From the very first days of the internet and to our present days, the web technology advances in huge steps, making state of the art technologies obsolete, creating new technologies almost on monthly basis, and attracting more and more developers, companies and industries to the web development area.\nWhat is a web development really?\nIn web development we build web applications. A web application is an application that is rendered on the browser, and accessed by the user through the browser. Simply put - when you order tickets to movie in your home town theatre, when you check your bank account balance, when you write a post on Facebook or update your resume on LinkedIn, all of these and more are examples to web applications. You open a web browser, go to a specific URL, and get a full working application. Today you can even find sophisticated applications on the web, like sound and video editing applications, drawing, recording, gaming, word processing, you name it. They're all on the web, and all are accessed via the browser.\nSo, how do I build one?\nLike any other field, web development has its own jargon and tools. Since the technology becomes more able and strong, new platforms, languages and tools arise every day. But over the years that passed and probably for the years to come, there are three essentials tools and skills that stand in the base of every web application - those are html, css and javascript.\nWhat is HTML?\nHTML (stands for HyperText Markup Language) was invented by Tim Berners-Lee in the late 1980's. It's a standard that contains data to be rendered on the browser, and directions of how to render it. The browser reads HTML document that tells it what to show and how to show it. For example, we can tell the browser to show the sentence \"Hello World\", and if we want the browser to make it bold, we'll add HTML directions (called \"markups\") that would direct the browser how to render the text. In this manner, html contains the data (What to be shown) and the meta-data (how it would be shown).\nWhat is CSS?\nHTML comes with very narrow set of abilities to style the page. For real styling we use CSS (stands for Cascading StyleSheet). CSS contain rules that control the page styling and actually can do anything - we can change font family, size, decoration, we can change background colours, images, shadows, gradients, every type of styling is possible with CSS, and more features are added all the time.\nWhat is Javascript?\nJavascript (abbreviated to JS) is a programming language that was invented in the mid 1990's and its main and primary goal was to enable simple functionality to the HTML. For example, if we built a HTML form in which the user should fill his/her name, we could use JS code to validate the input. Over the years, and really in the last decade, JS had became from a modest, inefficient and kind of \"toy\" language, to a monstrous creature that controls every last aspect of the web. Everything in the web development world is done with JS, and its popularity increases by every known matrices.\nBut hey, people really build web apps using those three tools?\nThe answer is yes and no. HTML is too complicated, css is a mess and JS code tends to be unmaintainable very quickly, so you can't really write a web app that is more than trivial and keep your sanity.\nOver the last decade tons of tools were invented to overcome those three friends' disadvantages, and modern web applications are written in variety of modern, new and shiny tools. You probably heard some buzzwords like Angular, React, Vue, Meteor, Bootstrap, Node and so on. To be a web developer you will probably have to learn one (and usually much more than one) of those tools.\nBut here is the trick - every platform, every modern tool, with no exception at all, works on the same basic tools - HTML, CSS, JS. No Exceptions, and I mean it. That means that you just can't start learning how to develop web application without them. If you try to start learning Angular for example, without any knowledge in the three basic tools, you'll get nowhere. So the conclusion is that you have to learn the basic tools and to use them as a jumpstart to other newer tools.\nAnother advantage for learning the basic triad\nEven if you somehow manage to learn reasonably enough one platform without the triad, you are not safe! As mentioned earlier - the web development world is crazy and moving fast. I mean very fast. New platforms are invented on day to day basis. New libraries, new tools. AngularJS had started in 2010, but now it is version 6 and the Angular paradigm had changed drastically during this time. Vue.js was presented in 2017, and as to the time I'm writing those lines, there is some trend to migrate to Vue.js from other platforms. And it's not the end. One just can't keep track of all the new ideas and innovations with this influx of ideas. What I'm saying is that if you don't know the basics, you'd be irrelevant the minute a new technology appears. If you knew only AngularJS, what would you do when version 3 came along, and it's different from the one you know? But since the basic triad - html, css and js - stands on the basis of every platform, when you know it you can migrate to any other new and shiny platform.\nIn the bottom line - learn html, css and js if you want to be a web developer. They are not going anywhere anytime soon.",
      "target_audience": [
        "Developers who want to enter the web development field.",
        "Everyone who is interested in web and web applications.",
        "Graphic designers who want to expand their skills."
      ]
    },
    {
      "title": "React JS for Web Development: React with Node JS, MongoDB",
      "url": "https://www.udemy.com/course/react-the-complete-2021-guide-with-nodejs-and-mongo-db/",
      "bio": "React JS for Full Stack web development, Full stack web developer with react, redux, hooks, context, Node js and MongoDB",
      "objectives": [
        "This is the full React JS course. You will learn React JS, Redux, Hooks and Context, NodeJs and Mongo DB",
        "You will learn React JS with hands-on examples",
        "Learn how to create Single Page Web Application with React JS",
        "Create reusable React Components",
        "User Inputs, Forms and Events in React",
        "Learn to create multi-page web app with react-router-dom",
        "We will learn how to perform asynchronous operations with Redux thunk",
        "Learn to consume context with Context Consumer",
        "How to manipulate context data in class-based components",
        "Learn how powerfull when we use Context and Hooks together",
        "Learn components, props, states and component life cycle methods in React JS",
        "Learn sending request to an API and fetch data",
        "Routing with React Router",
        "Manage the data of our application with the Redux library",
        "Create context with class-based component",
        "Learn how to consume context with static contextType",
        "Learn the most important hook functions like, useState, useEffect, useReducer and useContext",
        "Learn how to easily build the largest and most advanced React applications",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoD",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice.",
        "MongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows.",
        "React is a front-end library in Javascript that was developed by Facebook.",
        "The simplest definition of React is that it is a user interface library used for building UI components for the web.",
        "React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do.",
        "React encourages engineers to write code using a Functional Programming approach.",
        "Engineers create components, which are normal Javascript functions.",
        "Frameworks provide an opinionated approach to building an entire application."
      ],
      "course_content": {
        "What will we learn in this complete react js course?": [
          "What will we learn and How to get help in React js?",
          "React js Project Files",
          "FAQ about React JS, Node JS, MongoDB"
        ],
        "Let's Start to Learn React JS": [
          "Your React First App Overview",
          "Frequently Asked Questions about React, Redux, Express, Nodejs, Mongodb",
          "Let, Const and Var in 3 Minutes",
          "Install Node JS",
          "Create Your React App",
          "Why You Will Need To Create a React App?",
          "Start Creating React App",
          "Do You Want to Learn How To Stop React App?",
          "Functional Components in React JS",
          "Complete Course GitHub Repo in React JS",
          "quiz"
        ],
        "What is JSX?": [
          "Converting HTML JSX",
          "Inline Styling with JSX in React JS",
          "JavaScript Variable in JSX",
          "quiz"
        ],
        "React Props": [
          "Three Tenets of Components",
          "Simple App with React",
          "Styling App with Semantic UI",
          "Building Component with React JS",
          "Specifying The Image in React JS",
          "Duplicating The Single Component",
          "Component Nesting",
          "Props System",
          "Passing Props to Child",
          "Reusable Component Overview",
          "Props Children",
          "React JS Quiz"
        ],
        "Class - Based Components": [
          "Class - Based Components and Functional Components",
          "New React JS App Overview",
          "Getting Users Physical Location",
          "Handling Async Operation in React",
          "Transformation Functional Component to Class Based Component",
          "quiz"
        ],
        "State System in React": [
          "State Rules",
          "Initializing State In Constructor",
          "Lifecycle Method Overview",
          "Conditional Rendering",
          "quiz"
        ],
        "React Lifecycle Methods": [
          "Get to Know Lifecycle Method",
          "Refactoring App with Lifecycle Method",
          "Passing State As Props",
          "Ternary Expressions in JSX",
          "Showing Picture",
          "Styling The App",
          "React Developer Tools",
          "React JS General App Review",
          "quiz"
        ],
        "Forms": [
          "App Overview",
          "Component Design",
          "Handling Forms",
          "Styling The App",
          "Creating Event Handlers",
          "Controlled vs Uncontrolled Elements",
          "Why Controlled Elements?",
          "Understanding ‘This’ Key Word and Binding",
          "Communicating Child to Parent",
          "Invoking Callbacks In Children"
        ],
        "Asyncronous Programming with React": [
          "Fetching Data",
          "Axios vs Fetch",
          "Async Await Function",
          "Setting The State",
          "Rendering A List of Components",
          "Implementing The Key Values In List",
          "What We Have Learned From The App?",
          "quiz"
        ],
        "React Router": [
          "Initializing The Project",
          "The React Router",
          "Link and NavLink",
          "Programmatic Redirects",
          "Route Parameters",
          "React Router Switch Tag",
          "quiz"
        ]
      },
      "requirements": [
        "This course is ideal for people who have a basic knowledge of HTML, CSS, JavaScript but you don’t need to be an expert",
        "Computer with access to the internet",
        "A Windows PC, Mac or Linux Computer",
        "Es6 knowledge would be beneficial but not required",
        "Desire to learn React",
        "Desire to learn React js",
        "Desire to learn express js and Mongodb",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "Desire to learn React js with nodejs and mongodb",
        "Desire to learn React with redux, hooks and context",
        "Desire to become full stack web developer",
        "Desire to learn web development with react js, redux, hooks and context, nodejs, mongodb",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to the \"React JS for Web Development: React with Node JS, MongoDB\" course\nReact JS for Full Stack web development, Full stack web developer with react, redux, hooks, context, Node js and MongoDB\nLearn web development with the complete react JS course including redux, hooks, context, nodejs, Express js, and MongoDB\nIn this course, you will learn to develop a web application with React JS, Redux, Hooks & Context, Node JS, and Mongo DB from scratch\nReact is an essential Javascript framework for web development It is the most popular framework for developing web, mobile, and desktop app user interfaces\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from\nIf you are thinking to start to learn ReactJS, this course is the best match for you\nWe have explained React from beginner to all levels We have explained all the topics as simple as possible with examples, slides, and diagrams\nMongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows It’s schemaless nature allows greater flexibility or changing application requirements It’s one of the best databases in terms of developer productivity\nMongoDB is an document-oriented database designed to allow developers to scale their applications to meet scalability demands MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from\nWe have created a lot of projects while explaining the subjects Because we believe that applied educations are much more useful than other teaching methods\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels\nWe paid attention to explain all the topics in order Because we think that the order of presentation of the subject is as important as the content of education We have seen this shortcoming in many pieces of training we have examined and tried to explain these issues to you in the best way\nNo Previous Knowledge is needed!\nYou don’t need to have previous knowledge about React This course will take you from a beginner to a more advanced level with hands-on examples\nYou will be confident in using React JS, and if you ever get stuck, we will be there to help\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS In this course, we will be teaching React by creating various projects\n\nIn this Full React Js course, you will learn;\nHow to create Single Page Web Application with React JS\nThe most important React topics like components, props, state and component life cycle methods\nHow to send requests to an API and fetch data\nHow to create a multi-page web app with react-router-dom\nHow to manage the data of our application with the redux library\nWe will learn how to perform asynchronous operations with Redux thunk\nHow to create a context with a class-based component\nHow to consume context with ‘context consumer’\nHow to consume context with ‘static contextType’\nHow to manipulate context data in class-based components\nThe most important hook functions like useState, useEffect, useReducer, and useContext\nHow powerful when we use context and hooks together\nHow to easily build the largest and most advanced react applications\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nweb development\nfull stack web development\nfront end web development\nweb developer\nbackend web development\nwebsite development\nReact, or React js\nReact Native\nReactjs\nnodejs\nnodejs Express\nadvanced nodejs\nnodejs api\nreact nodejs\nrest api nodejs\nmongodb\nnodejs\nmongodb python\nmongodb administration\nmongodb certification\nmongodb java\nnodejs mongodb Express\npython mongodb\nReact js\nreact js complete guide\nreact js and node js\nAt the end of the course\nBy the end of the course, you will be able to build amazing React single page web applications\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer You will always have up-to-date content for this course at no extra charge\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook The simplest definition of React is that it is a user interface library used for building UI components for the web But if that was all React did, it would be little more than a template library Developers define components in React by using an HTML-like syntax called JSX These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM) These features give React components the ability to react dynamically and efficiently to changes in their state A set of simple components in React can be composed into either simple single-page applications or large, complex web applications\nWhat is React used for?\nReact is an open-source JavaScript frontend library Some developers consider it a frontend framework because it does more than standard libraries usually do The most common use of React is to build dynamic user interfaces for single-page web applications But the structure of React makes it useful for more than just creating websites JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element But JSX can be used as an interface for things other than HTML React Native uses React to build mobile applications Here, JSX becomes an interface for mobile UIs instead of HTML There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach Engineers create components, which are normal Javascript functions These functions return information to tell React what content should be displayed on the screen The real power of React comes from the ability to nest or compose these functions inside of one another This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application Libraries, on the other hand, assist in building a single aspect of an application With this in mind, React is a library It assists engineers in presenting HTML in the browser React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms React, also known as React js, saves time and effort for developers since they only need one programming language The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components\nIs React worth learning?\nYes, React is worth learning There are a couple of reasons The first one is that React is in high demand in the software development job market and has been for a few years If you learn to code in React and can do it well, you will increase your chances of finding a job This alone is another reason it is worth learning Website users no longer will settle for old-fashioned sites that won't update without a page reload React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience React has also been around a few years and has stood the test of time A large portion of websites, both small and large, use React as a frontend framework\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different But it is easy to learn if you are dedicated and determined to create frontend web applications To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning Since React is a Javascript framework, a solid grounding in Javascript will give you a head start With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different In React, web components are generated In React Native, the generated components interact with a phone's native APIs If your focus is web development, then you should learn React If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native\nWhy is React so popular?\nThere are many reasons why React is popular One reason is that Facebook developed it The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications React also solved many of the past issues that developers had with developing single-page applications (SPAs) React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs One feature that makes it better than past libraries is that React is relatively easy to use Its components are reusable, plus React's use of the virtual DOM makes it very performant React should remain popular in the future as each new release brings new features and performance improvements\nWhat is Node Js and what is it used for?\nNode Js is a server environment built for fast and easily scalable network applications It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time By using JavaScript, node Js can be put to work by many software developers familiar with JavaScript Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux) Node js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast Examples of applications that use node Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming\nWhat are the advantages of Node Js?\nNode Js is open-source, meaning it’s a free code for all developers On top of that, it also means that there is a thriving community of Node Js users and programmers that all add to the knowledge base Many are happy to share their flavor of the code with other developers, and collectively, the Node Js environment continues to be enhanced Because Node Js uses JavaScript, there is a large pool of developers that understand and can code in the environment It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training Node Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable\nWhat does it mean that Node Js is a runtime system?\nA runtime system is a platform where a software program runs It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run) Node Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required Because Node Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time It’s an efficient system, making it the preferred choice for many software and tech companies\nWhat is microservices architecture and how can Node Js be used for it?\nMicroservices architecture is a software development style or method where single-function modules originate Each has a very well-defined operation and interface and can deploy on its own In essence, it’s a way of developing modules that you can repurpose from one program or application to another When you create an application, it’s a collection of modules that have been thoroughly tested and are well-maintained The modules are typically built around different business-specific capabilities and are then loosely coupled to other modules when deployed as part of a program You can use Node Js in microservices architecture as the language of choice for one, some, or all of the microservices (or modules) The beauty of microservices is that you can use the best language for the specific microservice But where highly scalable, fast programs are needed, Node Js would be a top contender\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nReact JS for Web Development: React with Node JS, MongoDB\nWe offer full support, answering any questions\nSee you in the class!",
      "target_audience": [
        "Beginner who wants to be React developer",
        "Anyone who wants to become an React Developer",
        "Anyone who wants to build amazing React single page web applications",
        "For those who want to learn React Hooks",
        "Anyone who wants to learn React Js and its modern face Hooks & Context",
        "Students who want to learn how to build fast single page web apps",
        "For those who want to learn React Context API",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Anyone who wants to learn today's most popular front-end architectures and take their Web development skills to the next level and learn a future-oriented technology",
        "Who wants to learn React-Router, React-Portals and Redux",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who wants to learn MongoDB",
        "Anyone interested in NoSQL Schema",
        "Professionals who are willing to learn MongoDB Database",
        "Anyone looking to build a career as a NodeJS developer",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "People who want to become front end web developer",
        "People who want to become backend web developer",
        "People who want to become website developer",
        "People who want to learn fullstack web development with react js with nodejs and mongodb"
      ]
    },
    {
      "title": "Build Secure Web API For E-Commerce using ASP.NET Core",
      "url": "https://www.udemy.com/course/build-aspnet-web-api/",
      "bio": "A Complete Web API using ASP.NET, Entity Framework and SQL Server | REST API for E-Commerce Applications",
      "objectives": [
        "Build a Complete Web API using ASP .NET and C# for E-Commerce Applications",
        "Understand the Architecture of ASP. NET Web API applications",
        "Understand Domain Models and Data Transfert Object (DTO) Models",
        "Use Built-in Data Validation (with Attributes) and Custom Validation",
        "Understand Dependency Injection: Add Services to the Service Container and Request Services within the Controllers",
        "Read and Write Data in SQL Server Database using Entity Framework and Other Frameworks",
        "Understand How to Add and Use Entity Framework - Create Database Tables and Perform CRUD Operations",
        "Perform CRUD Operations Using Entity Framework and SQL Server Database",
        "Add Pagination - Search - Sort Functionalities",
        "Implement Authentication and Authorization Using Json Web Tokens (JWT)",
        "Implement Role-based Authorization Using JWT",
        "Create User Accounts",
        "Reset User Passwords",
        "Upload Images",
        "Send Emails",
        "Build Shopping Cart Summary from product string",
        "Create and Manage Orders",
        "CRUD Operations Using Dapper"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Source Code"
        ],
        "ASP.NET Web API Essentials": [
          "Project Structure",
          "Run the application",
          "API Document Name",
          "Generate and Visualize the API Documentation",
          "Add the Authorize button to Swagger UI - Part 1",
          "Add the Authorize button to Swagger UI - Part 2",
          "Create API Controller and Actions",
          "Use IActionResult",
          "Use DTO Models",
          "Data validation",
          "Custom data validation",
          "Constraint route parameters",
          "Optional parameters",
          "Read appsettings.json",
          "Dependency Injection - Use Existing Services",
          "Dependency Injection - Create a Service",
          "Middlewares - Create Inline Middleware",
          "Middlewares - Create Class Middleware",
          "Filters - Create Filter",
          "Filters - Create Attribute Filter"
        ],
        "Entity Framework": [
          "EF integration steps",
          "DTO Models vs Domain Models",
          "Install SQL Server and Find the Instance Name",
          "Create a new project",
          "Create new Database using Visual Studio",
          "Install EF packages",
          "Create and configure ApplicationDbContext",
          "Create Contact and Product Models and DbSet Properties",
          "Create Migration Files and Database Tables",
          "Delete and Create Migration Files and Database Tables",
          "Code First vs Database First Approaches"
        ],
        "CRUD Operations on Contacts": [
          "ContactsController - Read Contacts",
          "ContactsController - Create Contact",
          "ContactsController - Update Contact",
          "ContactsController - Delete Contact",
          "ContactsController - Tests using Swagger",
          "Contact DTO Model",
          "ContactsController - Subject Options for Dropdown lists",
          "EF Navigation Properties - Create and Use the Subject property",
          "EF Navigation Properties - Update Database and Include Subject property",
          "ContactsController - Add Pagination",
          "Send Emails",
          "Add EmailSender to the service container"
        ],
        "CRUD Operations on Products": [
          "ProductsController - Read Products",
          "ProductsController - ProductDto Model",
          "Serve Static Files",
          "ProductsController - Create Products",
          "ProductsController - Update Products",
          "ProductsController - Delete Products",
          "ProductsController - List of Categories",
          "ProductsController - Search Functionality",
          "ProductsController - Sort Functionality",
          "ProductsController - Pagination Functionality"
        ],
        "Authentication and Authorization": [
          "Introduction to JWT",
          "Create the Users table",
          "AccountController - Create JWT",
          "Create UserDto and UserProfileDto Models",
          "AccountController - Register Users",
          "AccountController - User Login",
          "JWT Authentication using Swagger",
          "Add User Authorization",
          "Role-based Authorization",
          "Read JWT Claims",
          "Reset Password Steps",
          "Reset Password - Create ResetPasswords table",
          "Request Password Reset",
          "AccountController - Reset Password",
          "AccountController - Get User Profile",
          "AccountController - Update User Profile",
          "AccountController - Update Password",
          "ContactsController and ProductsController - Route Protection",
          "UsersController - Read Users",
          "UsersController - Add Pagination",
          "UsersController - Read User by ID",
          "JWT Reader"
        ],
        "Shopping Cart and Orders": [
          "OrderHelper and GetProductDictionary",
          "CartDto and CartItemDto",
          "CartController - Get Cart Summary",
          "CartController - Get Payment Methods",
          "Domain Models and Database Tables",
          "Create Models - Order and OrderItem",
          "CartDto Model",
          "OrdersController - Create Orders",
          "OrdersController - Read Orders",
          "OrdersController - Add Pagination",
          "OrdersController - Read Order by ID",
          "OrdersController - Update Orders",
          "OrdersController - Delete Orders"
        ],
        "Authentication and Authorization using Identity API (.NET 9)": [
          "Introduction",
          "Project Setup",
          "Add Identity Endpoints",
          "User Authorization",
          "Enable Cors Policy",
          "Create Roles",
          "Register Custom Users",
          "Role-based Authorization",
          "Source Code"
        ],
        "Entity Framework Alternatives": [
          "SqlClient - Create Database and Table",
          "SqlClient - Create Controller and Models",
          "SqlClient - Create Products",
          "SqlClient - Read Products",
          "SqlClient - Read Product by ID",
          "SqlClient - Update Products",
          "SqlClient - Delete Products",
          "SqlClient - Source Code",
          "Dapper - Introduction and Setup",
          "Dapper - Create Models",
          "Dapper - Create Product",
          "Dapper - Read Products",
          "Dapper - Read Product by ID",
          "Dapper - Update Product",
          "Dapper - Delete Product",
          "Dapper - Source Code"
        ]
      },
      "requirements": [
        "Basic knowledge of C#"
      ],
      "description": "This course is for Beginners to ASP.NET having some knowledge of C# or similar programming languages.\nIn this course, you will learn how to build a complete Web API using ASP.NET. I will show you how to build a secure and professional backend application for E-Commerce.\nWe will use Visual Studio 2022 to connect to the SQL Server. So we don’t need to install SSMS (SQL Server Management Studio).\nIn this course, you will learn:\n- How to create an ASP.NET Web API\n- How to connect to SQL Server using Visual Studio 2022\n- How to create API Controllers\n- How to Create Endpoints and action methods\n- How to create and use Middlewares\n- How to create and use Filters\n- How to validate forms using attributes and how to add custom validation\n- How to send emails using ASP.NET and SendGrid\n- How to Implement Authentication, Authorization and Role based Authorization using Json Web Tokens (JWT)\n- How to reset user password\n- How to perform CRUD operations (Create, Read, Update and Delete) on the database using Entity Framework and other frameworks\n- How to implement pagination, search and sort functionalities\n- How to upload images to the server\nTo follow this course, you need to install the following tools\n- Visual Studio 2022\n- Microsoft SQL Server",
      "target_audience": [
        "Beginner Web developers who want a Complete Web API using C#"
      ]
    },
    {
      "title": "The Complete React Bootcamp 2023 (w/ React Hooks, Firebase)",
      "url": "https://www.udemy.com/course/the-complete-react-bootcamp-2020-w-react-hooks-firebase/",
      "bio": "Become an advanced ReactJS developer, build and deploy three production-ready apps with React, React Hooks, and NodeJS.",
      "objectives": [
        "Build and deploy responsive and production-ready React apps from scratch",
        "Setup and develop a React app with firebase (cloud functions, cloud messaging, realtime database, storage, auth)",
        "Master React Hooks and latest React syntax",
        "Master state management with React Hooks and Context API",
        "Learn and practice bleeding-edge JavaScript (ES2020)"
      ],
      "course_content": {
        "Introduction": [
          "What is This Course All About?",
          "Requirements"
        ],
        "Before We Start": [
          "Introduction",
          "Installing Git + Git Bash (Windows)",
          "Change Git Bash Appearance (Windows only)",
          "Installing Git (MacOS)",
          "Installing VSCode (Windows)",
          "Installing VSCode (MacOS)",
          "VSCode Configuration & Extensions",
          "Working With Git - Part 1",
          "Working With Git - Part 2",
          "Working With Git - Part 3",
          "Installing Node.js (Windows)",
          "Installing Node.js (MacOS)",
          "Node.js & NPM - Part 1",
          "Node.js & NPM - Part 2",
          "What are ESLint and Prettier?",
          "What are Server, JSON, REST API and GraphQL?",
          "Client Side Rendering (SPA) VS. Server Side Rendering (dynamic and static)",
          "Future notes"
        ],
        "Look Through Modern JavaScript": [
          "Introduction",
          "Var VS. Let VS. Const",
          "What is Array.map used for?",
          "What is Array.reduce used for?",
          "Function Declaration VS. Expression",
          "Arrow Functions and Default Function Arguments",
          "String Interpolation",
          "Object and Array Destructuring",
          "Spread and Rest Operators",
          "Async Code, Callstack, and Event Loop",
          "Async and Sync Code - Promises and Async Await",
          "ECMAScript Modules",
          "ECMAScript or JavaScript"
        ],
        "What is React Exactly?": [
          "What is React?",
          "Component-based Approach",
          "Functions vs. Classes",
          "React Under the Hood",
          "Boilerplates and Project Bundlers",
          "Check how good you undestand React"
        ],
        "Starting up With React (Vite) Tic Tac Toe Game": [
          "Introduction",
          "Link to Assets and Github repository",
          "Creating and configuring new project with Vite",
          "Eslint and Prettier extensions",
          "What are React components and props",
          "How to apply CSS styles. Configuring SASS",
          "React State with useState hook, React events",
          "Creating game board state",
          "Add players X and O",
          "Show next player and winner messages",
          "Showing game draw",
          "Implementing game history",
          "Adding game reset button",
          "Highlighting game winner (winning combination)",
          "Final Touch. Correcting styles, adding font, inline styling",
          "Deployment to surge",
          "Summary",
          "Extra. Adding CSS background circles."
        ],
        "Box Office Project - CRA": [
          "Box Office app overview",
          "Links to assets and repository",
          "Creating the project with Create React App",
          "Cleaning up redundant files",
          "React Router v6 introduction. Creating pages",
          "Layouts and Navigation between pages",
          "Inputs. One-way and two-way data binding",
          "Form submission. Getting shows data from TV Maze API",
          "Rendering show data from TV Maze API",
          "Fix Prettier not working",
          "Radio buttons. Add search for actors",
          "Moving search form logic to its own component",
          "Displaying cards for both shows and actors",
          "Pages with dynamic content. Creating Show page",
          "Introduction to useEffect hook",
          "Fetching TV Maze API data with useEffect",
          "Custom react hooks. Extracting and reusing hook logic",
          "Data fetching with libraries. React Query",
          "Assignment. React Query on Home page",
          "Using React Query to search data on Home page",
          "Displaying information on Show page",
          "Adding Go Back button on Show page",
          "Introduction to useReducer as alternative to useState",
          "Starred shows p1. Creating state with useReducer",
          "Starred shows p2. Extract starred shows logic in a custom hook",
          "Starred shows p3. Fetch shows from the API on Starred page",
          "Assignment. Custom hook usePersistedState on top of useState",
          "Implementing custom hook usePersistedState",
          "Introduction to Styled Components. CSS-IN-JS as alternative for styling",
          "Styling the app p1. Global styles, theme, React router active link",
          "Styling the app p2. Styled Components dynamic styles based on props",
          "Styling the app p3. FlexGrid animation and useRef hook",
          "Deployment to Github Pages",
          "PWA (Progressive Web App). Service worker",
          "Fixing base URL to correctly resolve images on Github Pages",
          "Final touch. Creating favicons",
          "Summary. Gained knowledge"
        ],
        "Firebase": [
          "What is Firebase?",
          "Overview of Firebase Services",
          "Firebase Security",
          "Firebase Pricing"
        ],
        "Chat Application Project": [
          "Project Overview",
          "Required Assets",
          "Note: node-sass",
          "Link to Github repository",
          "Chat-app Updates are Coming up",
          "Scaffolding the Project",
          "Realtime Database location",
          "ESlint Note",
          "Note: Firebase SDK",
          "Note: Rsuite",
          "(NOTE) react-router",
          "Create and Configure the Firebase Project",
          "Creating Pages - Private and Public Routes",
          "Sign-in Page - Interaction with Firebase",
          "Creating Profile Context - Context API and Global State Management",
          "Global Profile State Management With Context",
          "Start Building the Sidebar and Dashboard",
          "Responsive Sidebar Using Media Query",
          "Creating Dashboard - Part 1",
          "Creating Dashboard - Reusable and Editable Components (Part 2)",
          "Note: EditableInput",
          "Creating Dashboard - Update User Nickname (Part 3)",
          "Creating Dashboard - Link Social Media Providers (Part 4)",
          "Avatar-editor",
          "Creating Dashboard - Creating Avatar (Part 5)",
          "Creating Dashboard - Uploading the Avatar to Firebase (Part 6)",
          "Creating Dashboard - Displaying User Avatar and Names Initials (Part 7)",
          "Add Create-Room Button and Functionality",
          "Creating Chat Rooms Lists - Part 1",
          "Creating Chat Rooms List - Rooms' context (Part 2)",
          "Creating Chat Rooms List - Show rooms and use them as links (Part 3)",
          "Creating Nested Layout for Homepage",
          "Creating Chat Page Layout/Component",
          "Context API Problem and a Potential Solution",
          "Context API Problem in Practice - Creating Current Room Context",
          "Creating Initial Chat - Top Part",
          "Denormalizing Data - Creating Chat Bottom",
          "Display Last Message in Room List",
          "Working With Denormalized Data",
          "Displaying Chat Messages",
          "Display User Profile Data",
          "Adding Real-time Presence - Part 1",
          "Adding Real-time Presence - Part 2",
          "Adding Edit Room Drawer",
          "Role-based Access & Security Rules",
          "Role-based Access Management",
          "Adding Programmatical Hover With Hooks",
          "Creating IconControl Component - Likes (Part 1)",
          "Likes Functionality (Part 2)",
          "Handle Delete Operation",
          "Adding the Upload Component - Part 1",
          "Store Uploaded Files in Database - Part 2",
          "Display and Download Uploaded Files - Part 3",
          "Record and Upload Audio Messages - Part 4",
          "Display Audio and Delete File - Part 5",
          "Group Chat Feed by Dates",
          "Pagination and Control of Scrolled Position",
          "Deployment to Firebase Hosting"
        ],
        "Custom Chat Backend": [
          "Firebase Project Plan",
          "What are Serverless and Containers?",
          "Cloud Messaging - How is Everything Connected?",
          "Note: Firebase FCM",
          "Storing Device Tokens in the Database",
          "Adding Service Worker",
          "Setup Cloud Functions and Node Version Manager (NVM)",
          "Notifications Flow in our app - Types of Cloud Functions",
          "Creating FCM Cloud Function",
          "Fix Cloud Function Errors",
          "Sending and Displaying Notifications Using Cloud Functions",
          "Managing FCM Users",
          "Security rules note",
          "Final Project"
        ],
        "Key Features of React": [
          "Introduction",
          "React Portals",
          "Error Boundaries",
          "Code Splitting",
          "Conclusion"
        ]
      },
      "requirements": [
        "HTML + CSS fundamentals",
        "Basic comprehension of programming (i.e variables, loops)",
        "JavaScript basic knowledge would be a PLUS, but NOT essential",
        "NO prior experience with JS-frameworks is required"
      ],
      "description": "Created with up-to-date versions of React, React Hooks, Node.js, JavaScript, and Firebase.\n------\nWhat is this course all about?\nThis course is about React - a library that helps developers to create user interfaces on the web. But React is not limited only to user interfaces, there is much more to that.\nHave you ever wondered how Facebook, Twitter, or Netflix websites are built and why they don't feel like websites at all? React can answer all of that. In this course, we show how to create mobile-feel-like websites (Single Page Apps) where React is the foundation.\nFirst, we will guide you through the basics of web development before jumping into React. Here we will talk about the latest JavaScript, Node.JS, Git, APIs, and essential tools to make you feel as comfortable as possible at any stage of the development process.\nThen we slightly move to React with a small portion of theory. At this point, you will get to know what React is made of and how it works.\nOur first project is a Tic-Tac-Toe game. Here you will get to know React basics, hooks, and core functionality. By the end of this project, you will be able to create a simple web app that shows off your strong React basics. Here you will experience the development flow of a React app in general.\nThe second project is a movie search web-app called Box Office. With this project, we move towards more complex React use-cases and we start working with external APIs, dynamic layout, and pages combined with different approaches for styling a React app. Here we will work with more advanced and custom React Hooks. At the end of this project, we will analyze and optimize the app with React hooks to make it even more faster and reliable. We will even turn it into a Progressive Web App that works offline!\nThe final project is going to be a Chat app. It will include the following features: social media logins, account management, role-based permissions, real-time data, and lots of others. In this project, we will combine React with Firebase - a backend solution in the cloud, powered by NoSQL database. You will master global state management with Context API and sharpen your knowledge of React hooks. At the final stage, we will extend the app with a custom backend in form of serverless.\nAll of our projects will have a user-friendly and well-designed user interface that is responsive and optimized for all devices.\n\n\nIs this course exactly what are you looking for?\nIf ...\n... you are eager to learn front-end development with React from scratch ...\n... you have some experience with React, but you don't feel confident ...\n... you only started to learn web development and want to move towards modern tools and technologies ...\n... you feel that you stuck doing only HTML, CSS and some JavaScript ...\n... then this course is definitely for you!\nWhat do you need to succeed in this course?\nHTML and CSS is absolutely required\nGeneral/basic understanding of programming or JavaScript\nNo prior experience with React or JavaScript frameworks\nPassion to learn new things :)\nAfter this course, you will have:\nThree real-world React projects of different complexity that can be put into your resume\nTotal React comprehension\nExperience with popular React libraries\nKnowledge of how to create and deploy React apps\nKnowledge of custom serverless backend and Firebase\nTopics that will be covered and explained:\nReact basics (syntax, core concepts, theory)\nScaffolding templates (create-react-app, nano-react-app /w Parcel)\nStyling of React apps (CSS, SASS, UI components library, CSS-IN-JS /w Styled components)\nConditional rendering (dynamic content and styles)\nState management, local + global (/w React Hooks, Context API)\nComponents analysis and optimization (/w React hooks)\nComplex layout management\nDynamic pages with React Router\nProgressive Web Apps and service workers\nReal-time subscriptions in React\nUsing external APIs to fetch remote data\nDeployment of React apps (github pages, surge, firebase)\nServerless backend with cloud functions in node.js\nLatest and modern JavaScript (ES6 - ES2020)\nNot part of React, but included:\nGit, Node.js, APIs, ESLint and Prettier quick guides\nFirebase (/w NoSQL realtime database, cloud functions, cloud messaging, cloud storage)\nServerless cloud computing idea and concept + explanation about docker containers\n\n\nDon't just take our word for it, see what our past students had to say about this course:\n\"First of all, the course is really well done and very comprehensive. It covers important real-world concepts like optimizing your code with code splitting, memoizing, useCallback.\" - Toni S\n\"Great course content & prompt response to Q&A!\" - R L\n\"Instructors are responsive, got help quickly when I needed it.\" - Leigham Springer-sutton\n\nWhat if you stuck during the course?\nGetting stuck is the worse and inevitable. At the same time it's a common thing for a developer. We understand that and we are always ready to help you out with your questions as quickly as possible.\nWhat if you are not satisfied with this course?\nWe are so confident that you will love this course that we're offering a 30-day money-back guarantee! You can sign up today with zero risks.\nWhat are you waiting for? Enroll today!",
      "target_audience": [
        "Anyone who wants to develop scalable web-apps with React",
        "Programmers who want to increase their value as web developers",
        "People who are eager to learn how modern web-apps are working and how everything is connected",
        "Anyone who wants to develop applications like Facebook or Twitter",
        "Anyone who wants to become a freelancer or an independent web app developer"
      ]
    },
    {
      "title": "MERN Stack Online Quiz Portal Application",
      "url": "https://www.udemy.com/course/mern-stack-online-quiz-portal-application/",
      "bio": "Build real time Quiz Portal Application with React , Redux , Node",
      "objectives": [
        "Building full-stack real world applications from scratch , Working with complex MongoDB, queries, schemas, models",
        "Separate User Interfaces for Users, Admins",
        "JWT Authentication and Password Hashing",
        "Ant Design Library for UI Components,",
        "Admin can add exams with questions , options and answers",
        "Real time updates for all the crud operations in Questions and Exams Module",
        "Timer functionality for Exam Sessions , Live Result Functionality after writting the exams",
        "Storing the results into Mongo DB , Separate Reports / Analatics functionality for both Admin and User",
        "Pushing Code to GitHub , Hosting application in Heroku",
        "24/7 Q/A Support."
      ],
      "course_content": {
        "Project Demo & Resources": [
          "Promo",
          "Project Demo / Github Link"
        ],
        "Front End Setup": [
          "React App Setup",
          "Ant Introduction",
          "Custom Stylesheets"
        ],
        "Authentication UI": [
          "Login Screen",
          "Registration Screen"
        ],
        "Backend Setup": [
          "Node Express Server Setup",
          "Mongo DB Connection"
        ],
        "Authentication Backend": [
          "Register API",
          "Register API Integration",
          "Login API and Integration"
        ],
        "Authorization and Protected Routes": [
          "Authorization - 1",
          "Authorization - 2"
        ],
        "Layout": [
          "Layout Part - 1",
          "Layout Part - 2",
          "Layout Part - 3"
        ],
        "Add Exams": [
          "Add Exam UI",
          "Add Exam API",
          "Add Loader",
          "Exams List"
        ],
        "Edit and Delete Exams": [
          "Edit Exam",
          "Delete Exam"
        ],
        "Add Questions To Exams": [
          "Questions API's",
          "Add Question",
          "Questions List"
        ]
      },
      "requirements": [
        "MERN Basics"
      ],
      "description": "Hi Guys, Welcome to the course 'MERN Stack Quiz Portal Application'\nThis is a complete real world application , you might have seen lot of quiz portals online . We will also build the same thing with our favourite MERN Stack Technology.\nIn this course, you will learn the following topics\n\n\nBuilding full-stack real world applications from scratch\nWorking with complex MongoDB, queries, schemas, models\nSeparate User Interfaces for Users, Admins\nJWT Authentication and Password Hashing\nAnt Design Library for UI Components,\nRedux Toolkit,\nAdmin can add exams with questions , options and answers\nReal time updates for all the crud operations in Questions and Exams Module\nTimer functionality for Exam Sessions\nLive Result Functionality after writting the exams\nStoring the results into Mongo DB\nSeparate Reports / Analatics functionality for both Admin and User\nPushing Code to GitHub,\nHosting application in Heroku\n24/7 Q/A Support.\nMERN stands for MongoDB, Express, React, Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework and Node.js is the famous and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser designed to build scalable network applications.",
      "target_audience": [
        "MERN Stack Developers",
        "Fullstack Developers"
      ]
    },
    {
      "title": "Installing and Setting up FreeSWITCH: Basics",
      "url": "https://www.udemy.com/course/installing-and-setting-up-freeswitch-basics/",
      "bio": "Learn how to install and set up FreeSWITCH for your home office.",
      "objectives": [
        "In this course, you will learn how to create an extension number, registering your sip provider to FreeSWITCH, and implementing a simple IVR system.",
        "By the end of the course, you will be able to implement a simple PBX setup for your home office."
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills",
        "Patience with Linux"
      ],
      "description": "In this course, you will be learning how to install Ubuntu Server 12.04 and installing FreeSWITCH on top of Ubuntu. You will then be taught on the following:\nCreating an extension number\nRegistering your SIP provider\nInbound Dialplan\nOutbound Dialplan\nSimple IVR system",
      "target_audience": [
        "Anyone who has interest in VOIP"
      ]
    },
    {
      "title": "Mastering Java Development: Build 65 Hands-On Projects",
      "url": "https://www.udemy.com/course/build-java-projects/",
      "bio": "Build resume-ready applications and elevate your career prospects by mastering diverse Java concepts.",
      "objectives": [
        "Gain in-depth understanding of core & advanced features of Java",
        "Master Object-Oriented Programming concepts by using a real-world application as a case study",
        "Get real-world experience by developing an Java based Web application using technologies like JSP, Servlets",
        "Discover best practices to write clean, maintainable, and efficient Java code.",
        "Unlock career growth by mastering one of the industry's leading programming languages.",
        "Get hands-on experience in Java libraries, frameworks, and the Java ecosystem.",
        "Build portfolio-worthy projects that showcase your Java programming skills."
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge Of JAVA"
      ],
      "description": "Dive deep into the world of Java programming by immersing yourself in a hands-on, project-based course tailored to foster a strong foundation in Java development. By the end of this course, learners will have completed 65 individual projects, spanning from basic applications to intricate systems, ensuring a comprehensive grasp of Java's vast capabilities.\n\n\nReal-World Application: Building 65 projects allows you to experience the full spectrum of Java's capabilities, giving you practical experience that is invaluable in real-world development scenarios.\nHolistic Understanding: Each project is curated to expose learners to different facets of Java, ensuring that by the end of the course, learners have a well-rounded and in-depth understanding of the language.\nPortfolio Development: These projects serve as great portfolio pieces, showcasing your ability to develop in Java and helping to distinguish you in the job market or in academic pursuits.\nProblem Solving: Tackling a wide variety of projects will hone your problem-solving skills, making you adept at understanding requirements and translating them into efficient code.\nPreparation for Advanced Topics: The foundational knowledge gained here prepares learners for more advanced topics in Java, such as frameworks, design patterns, and even other languages or paradigms.\n\n\nThis Java Projects Course aims to provide learners with a deep, hands-on understanding of Java, making them competent developers ready to tackle real-world challenges. By constructing 65 unique projects, learners will not only gain knowledge but also confidence in their abilities, setting them up for success in the vast world of software development.\n\n\nProject-1: Childhood Revisited: Tic Tac Toe Game - Java, Swing, AWT\nProject-2: Advanced Digital Calculator - Java, JFrame\nProject-3: Hurdles & Paths: Maze Game - Java, JFrame\nProject-4: Comprehensive Student Management System - Java, MySQL, JDBC\nProject-5: Restaurant Billing & Menu System - Java, JFrame, MySQL\nProject-6: Servlet-Based User Management - Java, Servlet, MySQL\nProject-7: CLI Music Player Navigator - CORE Java\nProject-8: Peer-to-Peer Java Chat Application - Java, Swing, Socket\nProject-9: SpringBoot CRUD API Explorer - Java, SPRINGBOOT\nProject-10: All-In-One Gym Management Suite - Java, JFrame, MySQL\n\n\nProject-11: Multiscale Temperature Converter GUI - Java, JFrame, JSE\nProject-12: File Operations Mastery System - Java, Core Java, JSE\nProject-13: Bus Ticketing & Management System - Java, JFrame, MySQL\nProject-14: Universal Admin Monitoring Portal - Java, JSP, MySQL, JEE\nProject-15: Guess the Computer's Number Game - Java, JFrame, JSE\nProject-16: Symbol Pairing: Find the Twins Game - Java, JFrame, JSE\nProject-17: Musical Inventory Management Portal - Java, JFrame, MySQL, JEE\nProject-18: The Learning Parental Piggy Bank - Java, JFrame, MySQL\nProject-19: Centralized Food Stock Manager - Java, JFrame, MySQL, JSE\nProject-20: Personal Budget & Finance Tracker - Java, JFrame, MySQL, JSE\n\n\nProject-21: Electric Efficiency: Automate Electricity Billing with Java, Swing, JDBC, MySQL\nProject-22: Hotel Haven: Streamline Hotel Management with Java, Swing, JDBC, MySQL\nProject-23: Airborne: Elevate Airlines Management with Java, Swing, JDBC, MySQL\nProject-24: University Universe: Manage Academics Effortlessly with Java, Swing, JDBC, MySQL\nProject-25: Journey Jockey: Optimize Travel and Tourism with Java, Swing, JDBC, MySQL\nProject-26: Store Success: Enhance Store Billing Systems with Java, Swing, JDBC, MySQL\nProject-27: Bank Balance: Revolutionize Bank Management with Java, Swing, JDBC, MySQL\nProject-28: App Odyssey: Explore Application World with Java Core, Swing, AWT\nProject-29: Payroll Precision: Handle Payroll Efficiently with Java, Swing, JDBC, MySQL\nProject-30: Cab Comfort: Simplify Cab Booking Systems with Java, Swing, JDBC, MySQL\n\n\nProject-31: Playlist Paradise: Create a Java Playlist Application with SE & OOPS\nProject-32: Web Wizardry: Develop a Java Web Browser Application with SE, Maven & OpenJFX\nProject-33: Pentomino Puzzles: Master Pentominoes Game with Java SE and Swing API\nProject-34: Number Ninja: Play the Number Puzzle Game in Java SE with Swing API\nProject-35: Currency Converter Pro: Convert Currency Smoothly with Java SE, Maven, Swing\nProject-36: Bridge Battle: Challenge in the Bridge Game with Java SE, Swing & Java AWT\nProject-37: RPS Royale: Play Rock Scissor Paper Game with Java SE, Maven, Swing\nProject-38: Dungeon Delve: Embark on an Adventure in Dungeon Game with Java SE & OOPS\nProject-39: Minesweeper Marvel: Conquer Minesweeper Game with Java SE and Swing API\nProject-40: Sokoban Strategy: Solve Puzzles in Sokoban Game with Java SE and Swing API\n\n\nProject-41: SchoolPay Plus: Manage School Payments Effortlessly in JAVA-Core Java\nProject-42: Notepad Nirvana: Craft Your Notepad Clone using JAVA-Core Java\nProject-43: Snake Saga: Feed the Snake in this JAVA GUI Game-Core Java, Swing API\nProject-44: Music Melody: Create a Music Playlist Library using JAVA-Core Java, Swing API\nProject-45: Tic-Tac-Thrill: Play an Engaging Noughts and Crosses Game in JAVA-Core Java\nProject-46: Foodie Fiesta: Order Food Hassle-Free with Food Ordering System in JAVA-Core Java, Swing API\nProject-47: Download Dynamo: Manage Downloads Efficiently in Download Manager in JAVA-Core Java\nProject-48: ATM Access: Experience ATM Machine Interface using JAVA-Core Java\nProject-49: Contact Keeper: Organize Contacts Seamlessly in Contact Repository Interface using JAVA-Core Java\nProject-50: Paint Pro: Unleash Creativity with Painting Canvas Tool in JAVA Swing-Core Java\n\n\nProject-51: BST Brilliance: Visualize Binary Search Trees Interactively in JAVA-Core Java, Swing API\nProject-52: File Explorer: Navigate Files Effortlessly with File Browser Interface in JAVA Swing-Core Java\nProject-53: Time Tracker: Manage Time and Tasks Effectively in Java-Core Java\nProject-54: Email Empire: Administer Email Systems with Email Administration System in Java Core\nProject-55: Event Elevation: Elevate Event Management with Java Servlet\nProject-56: Quiz Quest: Engage in Online Quizzes with Online Quiz System - JDBC, JSP\nProject-57: E-Library Elite: Access a Wealth of Knowledge with E-Library System - Java Servlet, JDBC\nProject-58: Chat Central: Connect Seamlessly with TCP Chat Application - Java Networking, Java Swing\nProject-59: COVID Caretaker: Track COVID Information Efficiently - Java Spring Boot, JDBC\n\n\nProject-60: Blog & Beyond: Blog and Report System - Java, JSP, AJAX\nProject-61: Email Emissary: Send Emails Smoothly with Email System Web App - Java Servlet, JSP\nProject-62: Packet Pioneer: Analyze Network Packets with Network Packet Tracer Using Java - Java Swing, Maven\nProject-63: Crypto Codex: Learn Symmetric Encryption Cryptography in Java\nProject-64: Employee Excellence: Manage Employees Effectively with Employee Management System - Java, Spring Framework, Hibernate, Heroku Development\nProject-65: Ball Bounce: Enjoy Breakout Ball Game with Java, OOPs, Java AWT Swing",
      "target_audience": [
        "Beginners In JAVA"
      ]
    },
    {
      "title": "Build an AI Web App with OpenAI's GPT-3: Full SaaS Tutorial",
      "url": "https://www.udemy.com/course/gpt-3-saas/",
      "bio": "Learn to create a full stack SaaS web application using the MERN Stack and OpenAI's GPT-3 API.",
      "objectives": [
        "Understand how to use OpenAI's GPT-3 API to generate text, code, images, and other natural language processing tasks!",
        "Build a full stack SaaS web application using the MERN stack (MongoDB, Express, React, and Node js), and integrate GPT-3 AI functionality into the application.",
        "Use GPT-3 AI to add interactive, intelligent features to the web application, such as language translation, text summarization, or chatbot functionality.",
        "Learn how to deploy the full stack web application to a cloud platform (Microsoft Azure).",
        "Integrate payment processing with Stripe and implement a paid subscription model for your application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What Is Full Stack Devlopment?",
          "What is the MERN Stack?",
          "What is SaaS?",
          "What is GPT-3?",
          "GPT-3 Examples",
          "Project Requirements and Roadmap",
          "What's Next"
        ],
        "Developing our Web Application": [
          "Setting Up the Development Environment",
          "Setting up Our Backend",
          "Setting up our Database",
          "Setting up our Frontend",
          "Integrating User Authentication - Backend",
          "Integrating User Authentication - Frontend",
          "theme.js file",
          "Incorporating GPT-3 to our Application",
          "Generating AI Text - Part 1",
          "Generating AI Text - Part 2",
          "Generating AI Text - Part 3",
          "Generating AI Code",
          "Generating AI Images",
          "Pre-Stripe: User Authentication Part 2",
          "Integrating Stripe - Checkout Creation",
          "Integrating Stripe - hooks",
          "Integrating Stripe - Billing Portal",
          "What's Next",
          "Code Cleanup"
        ],
        "Deploying our Application to the Cloud": [
          "Deploying to Azure",
          "GitHub Actions Deployment YAML File",
          "Integrating Application Insights",
          "Purchasing and Linking a Domain Name to our App",
          "Best Practices for Maintaining and Updating the Application",
          "Final thoughts and Next Steps"
        ]
      },
      "requirements": [
        "No programming experience is necessary, but some programming knowledge is recommended"
      ],
      "description": "Hi there! My name is Alvin and I am the CTO of EZread, an education-based website that provides students with summaries of their textbooks using the power of GPT-3 artificial intelligence. In this course, we will be using the MERN stack (MongoDB, Express.js, React.js, and Node.js) to build a full stack SaaS web application that leverages GPT-3.\nGPT-3 (Generative Pre-trained Transformer 3) is a state-of-the-art natural language processing model developed by OpenAI. It has the ability to generate human-like text, complete tasks such as translation and summarization, and even generate code\nBy combining the power of GPT-3 with full stack development, we can create truly innovative and dynamic SaaS web applications that can improve various industries and solve real-world problems. In this course, we will explore how to utilize GPT-3 in a full stack SaaS web application, as well as learn the skills needed to build a such an application using the MERN stack and Stripe (for payment processing).\nWhether you are a beginner developer looking to get started with GPT-3 or an experienced programmer looking to add this powerful tool to your skillset, this course has something for everyone. By the end of this course, you will have a solid understanding of how to leverage GPT-3 and the MERN stack to build modern, intelligent SaaS web applications. So join me in this exciting journey and let's create something great together!",
      "target_audience": [
        "Beginner full stack developers hoping to leverage artificial intelligence to create powerful and innovative web solutions",
        "Intermediate coders with some experience in web development, but who want to learn how to utilize GPT-3 in their projects. The course will cover intermediate concepts of web development and GPT-3, including how to integrate GPT-3 into a full stack web application.",
        "Experts in web development who want to stay up to date with the latest developments in the field, including the utilization of GPT-3 in full stack web applications."
      ]
    },
    {
      "title": "Interactive Dynamic JavaScript for beginners DOM",
      "url": "https://www.udemy.com/course/javascript-dom/",
      "bio": "JavaScript can make your web pages come to life. Learn how to make your HTML and CSS code interactive and dyanmic",
      "objectives": [
        "Create interactive webpage content",
        "Apply JavaScript DOM"
      ],
      "course_content": {
        "Learn the fundamentals of JavaScript for web pages": [
          "Introduction to Dynamic Interactive JavaScript",
          "JavaScript Resources",
          "Write JavaScript",
          "JavaScript 5 primitive types",
          "Source Code",
          "Update HTML DOM WOM Browser Objects",
          "Updating HTML elements",
          "Get Multiple Elements",
          "Arrays and Objects in JavaScript",
          "Source Code",
          "Loops If Statements Operators JavaScript",
          "Source Code",
          "Get elements from HTML code Selection",
          "Source Code",
          "Get elements by Class",
          "Source Code",
          "introduction to event listeners",
          "Onclick Events Functions in JavaScript",
          "Source Code",
          "Event Listeners JavaScript",
          "Source Code"
        ],
        "Bonus Section JavaScript Coding Examples": [
          "How to add elements to a page with JavaScript",
          "Create page elements",
          "Additional Course Resources: Access to Downloads, Applied Examples"
        ]
      },
      "requirements": [
        "basic HTML",
        "Computer access",
        "Basic understanding of webpages"
      ],
      "description": "JavaScript can make your web pages come to life.  Explore how the Document Object Model works along with the fundamental core concepts of JavaScript... Together to make your webpages dynamic and interactive.\nJavaScript along with HTML and CSS are the 3 core languages of the internet.  Getting your JavaScript to work along with your HTML elements will bring your web pages to the next level.   Interaction within elements is ready to go with any element.  The browser does a lot with your HTML code and with JavaScript you can maximize that and create amazing things.\nThis course is designed for beginners who want to build a strong foundation for writing JavaScript code.  Within the course we explore how to make things happen.  How to connect HTML elements with JavaScript to create interactive content.  Update change HTML all using JavaScript.  Learn about event listeners and how they can give your website the ability to respond to user actions.  All this makes your content come to life.   Best of all every webpage is already ready to go with this, you just need to select and use it from JavaScript.\nGet links to resources used within the course\nSource code from lessons is included for you to work along with course content easily\nstep by step instruction\nlearn how to write JavaScript\nwhat the primitive types are in JavaScript and about Objects\nHow the browsers creates the DOM and more\nSee how elements can be updated and all the options you have at hand\nMore options for selecting the element you want to update\nFind out about Arrays and Objects and how they are used within JavaScript\nLearn about loops and if statements\nCreate interaction within your web content using event listeners\nFind out about functions and how they can be used to create more effective code\napply JavaScript within your code and make things happen\nTaught by an instructor with over 18 years of web development experience, ready to help you learn more about JavaScript.  This course is a great introduction to how JavaScript works with HTML.\nI'm ready to answer any questions you may have.  Start learning JavaScript today!",
      "target_audience": [
        "Web developers",
        "Anyone who has a website or creates web content",
        "Anyone who wants to learn more about JavaScript",
        "Anyone who wants to see how JavaScript can be made dyanmic"
      ]
    },
    {
      "title": "Complete React JS Web Development 2025: Beginner to Advanced",
      "url": "https://www.udemy.com/course/react-complete-with-hooks-context-reducers-redux-firebase-typescript/",
      "bio": "Complete React Guide: Hooks, Context API, Redux Toolkit, TypeScript, Firebase, CRUD, User Authentication, CI/CD & More",
      "objectives": [
        "Complete REACT JS: Beginner to Advanced",
        "Modern React with Hooks & Function Components",
        "Context API & Reducers",
        "State Management with REDUX Toolkit for Large Scale Applications",
        "Work with Async Data in Redux",
        "Routing with REACT ROUTER",
        "FIREBASE Integration for Real-time Database & Hosting",
        "CRUD with React & the Firestore Database",
        "Automated Firebase Deploys with Github",
        "TYPESCRIPT for Bug-Free Development",
        "Implementing Typescript on New and Existing React Projects"
      ],
      "course_content": {
        "React Basics": [
          "Preparing the Workspace",
          "JSX Basics",
          "List Rendering with the Map Function",
          "Coding Exercise Walkthrough",
          "Test Your Skills with List Rendering",
          "Conditional Rendering",
          "Test Your Skills with Conditional Rendering",
          "Components",
          "Show or Hide the Order Summary",
          "Props",
          "Events",
          "State",
          "React Hooks",
          "Updating State Variables",
          "Test Your Skills with Events & the useState Hook",
          "Updating the Order Details",
          "The Quantity Handler"
        ],
        "Styling in React": [
          "Presentation of the To-Dos Project",
          "SCSS Code for The Next Lesson",
          "CSS x SCSS",
          "Component Styles",
          "CSS Modules",
          "RECAP: Using CSS Modules",
          "Tips for Working with CSS Modules"
        ],
        "Context API & Reducers for State Management": [
          "State Management on Large Scale Applications",
          "Array of To-Dos for the Next Lesson",
          "Creating Dummy To-Dos and Rendering the List",
          "Setting Up The Logic to Erase and Mark To-Dos as Done",
          "Creating and Providing the To-Dos Context",
          "Using the Context from Child Components",
          "Reducers - Consolidating the State Logic",
          "Using The Reducer Function",
          "RECAP: Reducers",
          "Test Your Skills with Reducers",
          "Dispatching Actions Directly from the To-Do Component",
          "Moving the Context Logic into the Context Provider Component",
          "Merging the Reducer Into the Context",
          "RECAP: Context + Reducers",
          "HTML & CSS Code for the Add To-Do Modal",
          "The Add To-Do Modal",
          "Open & Close The Modal with State",
          "The Add To-Do Logic",
          "Adding IDs to New Todos",
          "The Filter Logic",
          "Showing The Filtered Todos",
          "Saving To-Dos in the LocalStorage"
        ],
        "React Router": [
          "Presentation of The Book List Project",
          "Getting Started with React Router",
          "Adding Links with React Router",
          "Dynamic Links and URL Params",
          "Adding Links to Individual Books",
          "Navigate to Links Programatically with useNavigate"
        ],
        "State Management with Redux Toolkit": [
          "Redux - State Management for Large Scale Applications",
          "Redux Installation and Store Setup",
          "Reading from the State with the useSelector Hook",
          "Calling the Reducer Functions With the useDispatch Hook",
          "Avoiding Breaking Errors for Non Existing Book Ids",
          "Toggle the isRead State",
          "The addBook Action",
          "The Notes Slice",
          "Filtering Notes by the Book ID",
          "Erase Notes",
          "Add Notes",
          "Erase All Book Notes"
        ],
        "Firebase: User Authentication": [
          "React and Firebase - Project Introduction",
          "Firebase Project Setup",
          "Firebase Authentication Methods",
          "Signing Up New Users",
          "Handling Signup Errors",
          "Signing In Existing Users",
          "The Reset Password Function",
          "Show the Homepage to Logged In Users",
          "Persisting the Login State in the Browser Session",
          "The Logout Function",
          "Adding a Loader to The Login Page"
        ],
        "Firebase: The Firestore Database": [
          "Setting Up the Firestore Database",
          "READ From the Firestore Database",
          "Using WHERE Clauses on Firebase Queries",
          "Do We Really Need Redux in This Project?",
          "Async Functions in Redux with createAsyncThunk",
          "ExtraReducers and the Builder Object",
          "UPDATE Data From The Firestore - The isRead Property",
          "Toggle isRead from the Single Book Page",
          "DELETE Documents from the Firestore",
          "CREATE Documents in the Firestore",
          "Fixing Bugs in the Add Book Flow",
          "Adding Loaders for Pending Actions",
          "Single Book Page: Fetching Books On-Demand",
          "Improving the Loading State of The Single Book Page",
          "Fetch Book Notes",
          "Delete Book Notes",
          "Add Notes",
          "Cleaning Up the Project",
          "Adjusting Security Rules in the Firestore Database of Firebase"
        ],
        "Firebase: Hosting & Deploying Your React App": [
          "Firebase Hosting",
          "Adding a Custom .com Domain to Your Firebase Project",
          "Setting Up a Github Repo",
          "Beginner GIT Tips",
          "Setting Up the Github Integration with Firebase",
          "The Importance of Branches",
          "Deploying Feature Branches with Pull Requests"
        ],
        "TypeScript: Quick Guide": [
          "What is TypeScript?",
          "Preparing the Workspace",
          "TSC: The TypeScript Compiler",
          "TypeScript Syntax",
          "Primitives Data Types & Functions",
          "Arrays",
          "Objects and Type Aliases",
          "Optional Properties",
          "Interfaces",
          "Union and Literal Types",
          "Null & Undefined",
          "The Any Type",
          "HTML Elements and Type Assertion"
        ],
        "TypeScript in Practice": [
          "Presentation of the Students Project",
          "Defining the Student Interface",
          "Outputting Name & Age of Students",
          "Writing the Logic for the Area of Focus",
          "Outputting the Students' Status",
          "The Reusable Refresh Table Function"
        ]
      },
      "requirements": [
        "A computer with access to the internet",
        "Familiarity with HTML & CSS and basic JavaScript knowledge are recommended",
        "Students are not required to have any previous knowledge on React or other frameworks, the course starts from the absolute beginning and covers all topics for React mastery"
      ],
      "description": "Welcome to the REACT JS Complete Course 2025 Edition - your gateway to becoming a React Developer in the ever-evolving world of web development!\nIn today's tech landscape, mastering React is not just a skill; it's a career advantage. This comprehensive course takes you on a journey from React novice to a seasoned expert developer, equipping you with the tools and techniques demanded by today's industry.\nWhy Choose This Course:\nIn a crowded field of React courses, ours stands out for several compelling reasons:\nFrom Zero to Mastery: We begin from the basics, making it accessible for beginners, and progress seamlessly into advanced topics, ensuring seasoned developers also gain valuable insights.\nThe Modern Approach to React: Function components & hooks.\nContext & Reducers Demystified: Complex concepts like context and reducers are made crystal clear, giving you a deep understanding of state management in React.\nRedux Toolkit for Effortless State Management: Learn how to streamline state management with Redux Toolkit, a must-know skill for any React developer.\nFirebase for Real-world Applications: Dive into Firebase to master user authentication, Firestore database integration & CRUD, and deployment, making you proficient in building real-world, scalable apps.\nTypeScript Integration: Stay ahead in the game by integrating TypeScript into your React projects, enhancing your code quality and collaboration potential.\nHow Will This Course Benefit You:\nWhether you're a beginner developer or an experienced professional seeking to upgrade your skills, this course empowers you with:\nCareer-Ready Skills: Equip yourself with the tools and knowledge required for high-demand React developer positions.\nPortfolio-Building Projects: Gain practical experience through hands-on projects, with real-time databases and custom domains.\nConfidence in Complex Concepts: Tackle advanced concepts like state management and authentication with confidence.\nIndustry Insights: Benefit from real-world insights and best practices accumulated from years of industry experience.\nWho Should Enroll:\nAspiring Developers: If you're new to React, this course provides a solid foundation.\nExperienced Developers: Seasoned devs will benefit from advanced topics and best practices.\nProfessionals Seeking Career Growth: Upgrade your skills and open doors to better job opportunities.\nDon't miss out on this chance to master React and stay ahead in your web development journey. Enroll now and join our thriving community of React experts. Let's build amazing web applications together!",
      "target_audience": [
        "Aspiring web developers looking for a React starting point. You'll go from zero to a confident React developer.",
        "Experienced developers looking to upgrade: If you're already a developer but want to enhance your skills with advanced React, this course provides advanced topics with real-world projects.",
        "Students and tech enthusiasts seeking to dive into the world of modern web development using React.",
        "Entrepreneurs and Start-up Founders looking to build web-based businesses"
      ]
    },
    {
      "title": "jQuery & React Essentials: Learn jQuery & React Basics",
      "url": "https://www.udemy.com/course/jquery-essentials/",
      "bio": "Learn the Fundamentals of jQuery and React",
      "objectives": [
        "Learn the fundamentals of jQuery & React.",
        "Learn to use the DOM, and work with an external library.",
        "Learn to use jQuery to create interactive sites.",
        "How to build real-life jQuery projects.",
        "Learn about React Libraries",
        "Learn how to set up your development environment.",
        "Learn to create new components; use props and state to pass data between components; use routes to map URLs to views; and organize projects with nested components and routes.",
        "How to start building your own browser-based projects."
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "Getting Started"
        ],
        "jQuery Project 1": [
          "The Project",
          "The Code",
          "jQuery Library",
          "Implementing Lightbox",
          "Practice"
        ],
        "Project 2: FAQ Page": [
          "Getting Started",
          "Getting into some code",
          "Click Event",
          "Natural Selection",
          "Slide Show",
          "Additional effects",
          "How jQUERY classes interact with CSS",
          "DOMs",
          "THIS",
          "Traversal",
          "Practice challenge"
        ],
        "Project 3: Todo List": [
          "The Next Project",
          "Creating Actions",
          "jQUERY variables",
          "Capture inputs",
          "Conditional statements",
          "Dynamically created events",
          "Add completed functionality",
          "Remove element",
          "Save and update the local storage"
        ],
        "Project 3: Launch Pads": [
          "Meet JSON",
          "Arrays and Objects",
          "Bootstrap",
          "Add AJAX",
          "Formatting AJAX",
          "Iterate code",
          "Append HTML to the Dom",
          "Display the data",
          "Handling failure from the server and creating filters",
          "Filtering part 1",
          "Filtering part 2",
          "Making clickable listing",
          "Conclusion: Final challenge"
        ],
        "Learn React JS": [
          "Getting started with React",
          "Pure React",
          "JSX & Babel",
          "Building with Webpack",
          "Webpack 3",
          "React components",
          "Composing components",
          "Props and state",
          "React Router",
          "Forms",
          "Build Member component",
          "Component lifecycle",
          "Create react app"
        ]
      },
      "requirements": [
        "familiar with HTML, CSS and JavaScript"
      ],
      "description": "Welcome to this 2 part course series on JQuery and React!\nIn the first part of the course we go in-depth on JQuery, where you'll learn the fundamentals of JQuery and have a good understanding of it after completion.\nThroughout this course you will build several projects to give you the ability to integrate jQuery in your own projects to add that extra level of interactivity to any site you work on.\njQuery is the most popular JavaScript library today. This course will teach you all the basic of it and how to use jQuery’s core features.\nYou’ll learn how to interact with the Document Object Model (DOM), use web developer tools, and get started with reading and understanding documentation to help you take on  your own projects.\nFor those developers that want to add more tools to their developer's tool belt, there is a bonus course on React. In this section you'll learn the basics of the React library and how to use it to create two projects: a browser-based activity counter app and a simple website for  displaying data drawn from an API.\nAs we go through the course, you'll learn how to set up  your development environment, including helpful tools such as Babel and  webpack; create new components; use props and state to pass data between  components; use routes to map URLs to views; and organize projects with nested components and routes.\nBy the end of the course, you'll  understand the essentials of React.js and be able to start building your own browser-based projects.",
      "target_audience": [
        "Developers",
        "Programmers",
        "Anyone who wants to learn jQuery or React"
      ]
    },
    {
      "title": "Creative Coding Deep Dive for Beginners",
      "url": "https://www.udemy.com/course/creative-coding-deep-dive-for-beginners/",
      "bio": "From basic shapes to beautiful animated flow fields",
      "objectives": [
        "Draw with code and create 5 unique animation projects for your creative coding portfolio",
        "Learn how to animate shapes and particle systems",
        "Explore creative coding techniques, from simple to more advanced",
        "Practice JavaScript and front-end web development on fun, memorable & visual projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Beginner projects": [
          "HTML & CSS setup",
          "JavaScript setup",
          "How to draw rectangles",
          "How to draw lines",
          "Object oriented programming",
          "Dynamic colors with HSL",
          "Randomized line art",
          "Drawing multi-segmented lines",
          "Animating lines",
          "Rainbow lightning storm effect",
          "Linear gradients",
          "Radial gradients",
          "How to fill shapes with a pattern",
          "Improve your effects with shadows",
          "Trigonometry",
          "Chaos scribbles effect"
        ],
        "Flow Fields": [
          "What is a flow field",
          "HTML canvas setup",
          "Drawing shapes on canvas",
          "Object oriented programming in JavaScript",
          "Drawing particle systems",
          "Animating particle systems",
          "Drawing lines and trails",
          "Motion patterns with trigonometry",
          "Creating a vector field",
          "How to create a flow field",
          "Flow field experiments",
          "Grid and debug mode",
          "Randomized colors",
          "Responsive design",
          "Experimenting with flow field patterns"
        ],
        "Text Flow Fields": [
          "Drawing Text",
          "Understanding pixel data",
          "Handling pixel data",
          "Converting colors into angles",
          "Flow & gradients",
          "Tips, tricks & experiments"
        ],
        "Image Flow Fields": [
          "Image flow fields explained",
          "Color manipulation tricks"
        ],
        "Bonus section": [
          "What's next?"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript is required to get the maximum value"
      ],
      "description": "Making beautiful things with code can be easy if you take it step by step. Let’s explore creative coding and discover what can be done by combining different drawing and animation techniques.\n\n\nKnowledge is power. That’s why we will use just basic programming principles—functions, arrays, and for-loops—and plain vanilla JavaScript, no frameworks and no libraries. I will explain every line of code as we create multiple animated projects. Being able to fully understand how the code works will allow us to gain complete control over the code, and we can make it do whatever we want it to.\n\n\nLet me show you how to draw a simple line, animate it, and then turn it into more and more complex effects as we add more techniques to our creative coding toolkit, one by one.\n\n\nDiscover the secrets of creative coding today. The biggest secret is that it’s actually much easier than you think to create complex, beautiful animations. You just have to take it step by step. Everything makes sense if you break the process down into individual parts.\n\n\nSection 1:\nIn the first beginner-friendly block, we will learn how to draw shapes on canvas and how to animate them, turning them into animated spirals, rainbow lightning bolts, and random scribbles.\n\n\nSections 2, 3, and 4\nIf you already understand the basics of drawing on an HTML canvas, you can skip directly to Section 2, where I start the main course project from scratch. We will create an animated flow field, experiment with it, and make it bend around text and images.\n\n\nHave fun!",
      "target_audience": [
        "Beginner JavaScript developers who want fun projects to practice and learn to code with",
        "Any programmers interested in creative coding and animation"
      ]
    },
    {
      "title": "Learn How Python Works with NoSql Database MongoDB: PyMongo",
      "url": "https://www.udemy.com/course/learn-how-python-works-with-mongodb-pymongo-in-9hrs/",
      "bio": "Learn how to integrate utilities of Python with the easy handling of big-data using MongoDB as the database.",
      "objectives": [
        "Installing and setting up the connectivity of Python with MongoDB",
        "Learn fundamental along with the basic concepts of Python",
        "Implementation of different Data Types of Python language.",
        "Get to know the installation of MongoDB and implementation of CRUD operations.",
        "Learn the various data modelling techniques, Indexing and Aggregation concept.",
        "Understand how to integration MongoDB with Python",
        "Learn connectivity of MongoDB database and collections using PyMongo tool",
        "Get to know the practical implementation of the tool by the Web-Application created by using the Django Web-Framework."
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to PyMongo",
          "Pre-requisites",
          "What You will Learn?"
        ],
        "Introduction to Python": [
          "Introduction to Python",
          "Advantages of Python and Program Execution",
          "Variables and Assignments",
          "Data Types",
          "Data Types: Numbers and Strings Part-1",
          "Data Types: Numbers and Strings Part-2",
          "Data Types: List and Dictionary Part-1",
          "Data Types: List and Dictionary Part-2",
          "Data Types: Tuples and Sets Part-1",
          "Data Types: Tuples and Sets Part-2"
        ],
        "Files, Conditionals, Loops and Functions": [
          "Files",
          "Types of Input",
          "Conditionals",
          "Loops - while loop",
          "Loops - for loop",
          "Functions",
          "Scope of Variables",
          "Arguments"
        ],
        "Classes and Exceptions": [
          "What is a Class?",
          "Inheritance",
          "Modules",
          "Polymorphism",
          "Operator Overloading",
          "Exceptions"
        ],
        "Introduction to MongoDB": [
          "Introduction to MongoDB",
          "JSON and Features",
          "Getting Started with MongoDB",
          "Databases",
          "Collections",
          "Documents",
          "Data Types in MongoDB",
          "CRUD Introduction",
          "Database Operations"
        ],
        "CRUD Operations and Data Modeling": [
          "CRUD Concept",
          "CRUD Operations Part1",
          "CRUD Operations Part 2",
          "Query Operations",
          "Data Modeling",
          "Model Relationship between Documents",
          "Model Tree Structures"
        ],
        "Indexing and Aggregation": [
          "Introduction to Indexes",
          "Types of Indexes: Part 1",
          "Types of Indexes: Part 2",
          "Types of Indexes: Part 3",
          "Types of Indexes: Part 4",
          "Indexes Properties",
          "Creating Indexes",
          "Capped Collection",
          "Aggregation introduction",
          "Aggregation Operations"
        ],
        "Introduction to PyMongo": [
          "Getting Started with PyMongo",
          "Basic Operations in PyMongo: Part 1",
          "Basic Operations in PyMongo: Part 2",
          "Basic Operations in PyMongo: Part 3",
          "Basic Operations in PyMongo: Part 4"
        ],
        "Common PyMongo and Python Patterns": [
          "Common PyMongo and Python Patterns",
          "Using Indexes in PyMongo : 1",
          "Using Indexes in PyMongo : 2",
          "Upserts in PyMongo",
          "Atomic Operations in Pymongo",
          "Bulk-Write Operations in PyMongo",
          "GridFs in PyMongo"
        ],
        "PyMongo With Web Frameworks": [
          "Introduction to Django",
          "Integration of Django and MongoDB using PyMongo",
          "Web-Application using Django and MongoDB"
        ]
      },
      "requirements": [
        "Prior knowledge with programming languages is heplful.",
        "Basic knowledge of Databases is required."
      ],
      "description": "PyMongo online Tutorial Course provides knowledge about Python and MongoDB with its integration using PyMongo tool.\nStudents, at the end of this training, will be technically competent in the basics and the fundamental concepts of Python such as Loops, Functions, Classes and Exceptions. As well as you will learn the basics of MongoDB along with the concepts of Data Modelling, Indexing and Aggregation, so that you can easily learn their integrated implementation with PyMongo. And finally in the tenth section a web-application will be created, using Python's web-framework-Django.\nThis course contains lectures as videos. Additional Exercise files and Assignments are attached with the last section of the course for your self practice. Various scripts and data for hands-on implementation has also been attached in order to provide you with more help to learn the course.\nThis course is convenient for all those individuals who want to use the ease of Python along with the big data handling capability of MongoDB in order to develop their applications and will help them in Software Development Practice. So it is useful for those who want to begin Software and Website Development with comfort and ease of use.",
      "target_audience": [
        "This course is intended for developers who will be using Python to develop their applications and having MongoDB as the database for back-end processes, Software professionals, Analytic's Professionals, and Database administrators."
      ]
    },
    {
      "title": "Core java for beginners and experts",
      "url": "https://www.udemy.com/course/javabybhanu/",
      "bio": "Core java concepts with Real Examples",
      "objectives": [
        "Once you finish all the topics of course, you would be very confident in core Java and able to answer all core Java interview questions"
      ],
      "course_content": {
        "Basic Of Java Tutorial": [
          "What is Java",
          "JDK , JRE and JVM",
          "JVM Architecture",
          "How to Download JDK And Set to Environment Variable",
          "How to Setup Eclipse for Java",
          "How to Create Java Project In Eclipse",
          "Variables and Data Types in Java"
        ],
        "Java Oops Concepts": [
          "Class in Java Video-1",
          "Class Object In Java Video-2",
          "Class Object Method In Java Video-3",
          "Class Object Method In Java Video-4",
          "Class Object Method In Java Video-5",
          "Convention Of Java Main Method Video-6",
          "Object Creation In Memory Video-7",
          "Naming Convention In Java Video-8",
          "Decision Making IF-ELSE In Java Video-9",
          "Decision Making Switch Case In Java Video-10",
          "Decision Making For Loop In Java Video-11",
          "Decision Making For Each Loop In Java Video-12",
          "Decision Making Labelled For Loop In Java Video-13",
          "Decision Making While Loop In Java Video-14",
          "Decision Making Do-While Loop In Java Video-15",
          "Decision Making Java Break In Java Video-16",
          "Decision Making Java Continue In Java Video-17",
          "Data Type In Java Video-18",
          "Return Type In Java Video-19",
          "Constructor in Java Video-20",
          "Constructor in Java Video-21",
          "Constructor in Java Video-22",
          "Constructor in Java Video-23",
          "Static Keyword in Java Video-25",
          "Constructor Overloading In Java Video-24",
          "Static Keyword in Java Video-25",
          "Static Keyword in Java Video-26",
          "This Keyword in Java Video-27",
          "InHeritance in Java Video-28",
          "Multilevel Inheritance in Java Video-29",
          "What is allowed and not allowed in Inheritance in Java video-30",
          "Aggregation in Java Video-31",
          "Method Overloading in Java Video-32",
          "Method Overriding in Java Video-33",
          "Interface in Java Video-34",
          "Interface in Java Video-35",
          "Java 8 Interface Features Video-36",
          "Java 9 Interface Features Video-37",
          "Abstract Class in Java Video-38",
          "Abstract Class vs Interface in Java Video-39",
          "Inheritance in Java Video-40",
          "Access Modifier in Java Video-41",
          "Enum In Java Video 42",
          "Enum In Java Video 43",
          "Enum In Java Video 44",
          "Type Casting in Java Video-45",
          "Type Casting in Java Video-46",
          "Type Casting in Java Video-47",
          "Type Casting in Java Video-48",
          "Final Keyword in Java Video-49",
          "Final Keyword in Java Video-50",
          "Runtime Polymorphism in java Video-51",
          "Static Binding and Dynamic Binding Video-1",
          "Static Binding and Dynamic Binding Video-2.mp4",
          "Static Binding and Dynamic Binding Video-3",
          "Java InstanceOf Operator Video-1",
          "Java InstanceOf Operator Video-2",
          "Encapsulation Definition in Java Video-1",
          "Encapsulation advantages and disadvantages In Java Video-2",
          "Encapsulation Usage In Java Video-3",
          "Encapsulation Example In Java Video-4",
          "Encapsulation Example In Java Video-5",
          "Encapsulation Example In Java Video-6",
          "what you should not do in Encapsulation in java Video-7",
          "what you should not do in Encapsulation in java Video-8",
          "Abstraction definition in Java Video-1",
          "Use of Abstraction in Java Video-2",
          "Use of Abstraction in Java Video-3",
          "Real Time Example of Abstraction in Java Video-4",
          "Real Time Example of Abstraction in Java Video-5",
          "Wrapper Class in Java Video-1",
          "Integer Wrapper Class in Java Video-2",
          "Integer Wrapper Class Video-3",
          "Integer Wrapper Class Video-4",
          "Integer Wrapper Class Video-5",
          "Double and Boolean Wrapper Class Video-6",
          "Static Block in Java"
        ],
        "Operators in java": [
          "Increment and decrement operators in java",
          "Increment and decrement operators Example-1",
          "Increment and decrement operators Example-2"
        ],
        "Oops questions and answers": [
          "Oops Questions and Answers For Interview",
          "OOPS concept interview questions part 1",
          "OOPS concept interview questions part 2"
        ],
        "Array In Java": [
          "Basic of single and Multi dimensional Array",
          "How to Sum 2D Array In Java"
        ],
        "String In Java": [
          "String in Java Lecture-1",
          "String Class Methods Lecture-1",
          "String Class Methods Lecture-2",
          "String Class Methods Lecture-3",
          "String Class Methods Lecture-4"
        ],
        "String Buffer In Java": [
          "String Buffer in Java Lecture-1",
          "String Buffer in Java Lecture-2"
        ],
        "String Builder in Java": [
          "String Builder in Java"
        ],
        "Exception Handling in Java": [
          "Exception definition in Java Video-1",
          "How Exception Happens in Java Video-2",
          "How Call Stack works In case of Exception in Java Video-3",
          "What is Need of Multiple Exception Handler Video-4",
          "How JVM Handle the Exception-5",
          "Try Catch Block in Java Video-6",
          "Hierarchy of exceptions in java Video-7",
          "Type Of Exception In Java Video-8",
          "Type Of Exception In Java With Example Video-9",
          "How Programer handals an exception Video-10",
          "How To handle Multiple Exception Video-11",
          "Nested Try Block in Java Video-12",
          "Nested Try Block and Finally in Java Video-13",
          "Finally Block in Java Video-14",
          "Throw Keyword in Java Video-15",
          "Throws Keyword in Java Video-16",
          "Custom Exception In java Video-17"
        ],
        "Collection Framework In Java": [
          "Collection Framework Hierarchy Video-1",
          "ArrayList In Java Video-2",
          "ArrayList complexity Video-3",
          "ArrayList Features Video-4",
          "How to Create Object Of ArrayList Video-5",
          "Add and Remove Method in ArrayList Video-6",
          "Read Data From ArrayList Video-7",
          "Different Ways to Read Data of ArrayList Video-8",
          "Types of Add Method in ArrayList Video-9",
          "Clear Clone Contains Method Of ArrayList Video-10",
          "ensureCapacity IndexOf IsEmpty Methods of ArralyList Video-11",
          "All Remove Methods Of ArrayList Video-12",
          "Remove If Method of ArrayList Video-13",
          "Set SubList ToArray Methods in ArrayList Video-14",
          "Store Custom Object in ArrayList Video-15",
          "Cloning Concept In Java Video-16",
          "How Cloning Works in Java Video-17",
          "How we Perform Shallow copy Cloning Video-18",
          "Shallow copy Clone Implementation Video-19",
          "Deep Copy clone Implementation Video-20",
          "How Clone Works only for Primitive Data Type Video-21",
          "Clone Method in ArrayList Video-22",
          "Anonymous Inner Class In java Video-23",
          "Sorting in Array List Video-24",
          "Comparable In Java Video-25",
          "Comparator in Java Video-26",
          "Comparator Using anonymous inner Class in Java Video-27",
          "Linked List Insertion Implementation Video-28",
          "Linked List Deletion Implementation Video-29",
          "Features of LinkedList Video-30",
          "Methods Of LinkedList Video-31",
          "Linked List Methods Video-32",
          "ListIterator vs Iterator in Linked List Video-33",
          "LinkedList Get Methods Video-34",
          "All Remove Methods of Linked List Video-35",
          "Deque and Queue Operation In Linked List Video-36",
          "Methods of Linked List Video-37",
          "Array List Vs LinkedList",
          "Queue Implementation in Java Video-38",
          "All Queue Methods in Java Video-39",
          "Stack Implementation in Java Video-40",
          "Understand Hash Code Implementation In Java Video-41",
          "What is HashCode and Equals Methods in Java Video-42",
          "Default Implementation Of HashCode in Java Video-43",
          "How HashCode Helps to Keep Unique Data Video-44",
          "Internal Working of HashMap in Java Video-45",
          "Implementing equals() and hashCode() method Video-46",
          "What Happens When you Override HashCode Or Equals alone Video-47",
          "Java ListIterator Interface",
          "HashSet Definition in Java Video-48",
          "All Constructors Of Hash Set in Java Video-49",
          "How HashSet Add Methods Works Internally Video-50",
          "Add Methods in All Set Classes Video-51",
          "Add Custom Object to Set Classes Video-52",
          "All Remove Methods Of Set Classes Video-53",
          "RetainAll Method in all Set Classes Video-54",
          "Cloning of Instance Variable In Set Classes Video-55",
          "Shallow Copy of Reference Variable In Set Classes Video-56",
          "Deep Copy of Reference Variable In Set Classes Video-57",
          "Shallow Copy of Reference Variable In Set Classes Video-58",
          "Deep Copy of Reference Variable In Set Classes Video-59",
          "Contains Methods in Set Classes video-60",
          "Store Comparable Type Data in Tree Set Video-61",
          "Store Comparator Type Data in Tree Set Video-62",
          "Hash Set Duplicate Object Data handling Video-63",
          "Tree Set Specific Important Methods Video-64",
          "HashMap Internal Implementation Video-65",
          "Object Creation in Map classes Video-66",
          "EntrySet Concept in HashMap Classes Video-67",
          "Put PutAll and PutIfAbsent Methods in Map Classes Video-68",
          "Contains Clear and Empty Methods in Map Classes Video-69",
          "All Replace Methods In HashMap classes Video-70",
          "Store Custom Objects in Map Classes Video-71",
          "Store Comparable Type Object in TreeMap Video-72",
          "Store Comparator Type Object in TreeMap Video-73",
          "Add All Type Of Object in Collection Classes Video-74",
          "TreeMap Specific Methods Video-75",
          "TreeMap Specific Methods Video-76",
          "Store Null Key in Map Classes Video-77",
          "All ComputeMethods in Map Classes Video-78",
          "CeilingEntry Method in TreeMap Video-79",
          "Write Data Using Two Threads in Map Video-80",
          "Read Map Data Using Two Threads Video-81",
          "Read and Write in Map Using four Threads Video-82",
          "How ConcurrentHashMap works in Java Video-83",
          "Queue and PriorityQueue in Collection",
          "Hash Table in Collection",
          "Sorting in Collection"
        ]
      },
      "requirements": [
        "JDK should be installed in system",
        "Eclipse IDE should be installed in system"
      ],
      "description": "I am designing Core Java course, in such a way that, anyone can understand easily without any prior knowledge of programming language. As a part of course I am adding lots of example with notes and live coding in eclipse.\nEach Topics are covered in very details. with lot of Assignments which will help you for interview. Once you finish this course, you would able to answer any questions and will get lot of confidence in Java programming.\nCore Java Includes:\n1. What is Java\n2. Features of Java\n3. JDK, JRE and JVM\n4. JVM Architecture\n5. Variables and Data Types in Java\n6. Increment and decrement operators in java\n7. Java If Statement\n8. Java if-else Statement\n9. Nested-if\n10. Switch Statement\n11. For Loop In Java\n12. For-each or Enhanced for Loop\n13. While Loop In Java\n14. Java Break Statement\n15. Java Continue\n16. Class, Object and Method\n17. Static and Non-Static Member Of Class\n18. Naming convention in Java\n19. Constructor in Java\n20. Return Type in Java\n21. Access Modifier\n22. This keyword in Java\n23. Method Overloading In Java\n24. Inheritance in Java\n25. Method overriding In Java\n26. Interface in Java\n27. Abstract Class in Java\n28. Super keyword in java\n29. Instance Initializer block\n30. Final Keyword in Java\n31. Java instanceof operator.\n32. Encapsulation in Java\n33. Static Block in Java\n34. Enum in Java\n35. Type Casting in Java\n36. Runtime polymorphism\n37. Abstraction in java\n38. Array in Java\n39. String in Java\n40. Stringbuffer in Java\n41. Stringbuilder in Java\n42. Exceptional Handling in Java\n43. Throw Keyword\n44. Throws Keyword\n45. Finally Block\n46. Collection Framework Architecture\n47. Array List\n48. Linked List\n49. Set\n50. Hash Set\n51. Linked Hash Set\n52. Tree Set\n53. Map\n54. Hash Map\n55. Linked Hash Map\n56. Tree Map.\n57. Hash Table\n58. Sorting in Collection\n59. Comparable interface\n60. Comparator interface\n61. Multithreading in Java\n62. Life cycle of a Thread\n63. Thread Scheduler in Java\n64. Thread Methods\n65. Java Thread Pool\n66. Java Thread Group\n67. Java Garbage Collection\n68. Synchronization in Java\n69. Deadlock in java\nOther topics update are in progress, Below topic will be updated soon.\nProperties file in Java\nJava I/O\nJava Programs",
      "target_audience": [
        "This course is very good for core Java learner and those who wants knows core Java"
      ]
    },
    {
      "title": "Full Stack React Native with NodeJS & ExpressJS",
      "url": "https://www.udemy.com/course/full-stack-react-native-with-nodejs-expressjs/",
      "bio": "Learn fullstack react native with redux, hooks & context, node js, express js and mongodb. Build your react projects.",
      "objectives": [
        "React Native set up virtual environment",
        "Install ReactNative dependencies for MAC and Windows",
        "Run Android and IOS simulator with React Native",
        "React Native Expo installation",
        "Run React Expo App on Mobile Device",
        "JSX syntax and expressions with React Native, Nodejs, express js",
        "ES6 syntax",
        "See the content on the simulator",
        "Styling with React-Native and flex-box rules",
        "Send an HTTP request to a remote API",
        "State ve Props systems",
        "Reusable components",
        "Reach another app on the phone from the React-Native app",
        "React Navigation Library",
        "Route Between Different Screens",
        "Data Transfer Between Different Screens with React Navigation",
        "Learn to create Hooks and Context structures",
        "Creating Hooks and Context structures with explanatory diagrams",
        "What is Context Api in and how it is used",
        "Using Context Api and Hooks together",
        "Creating Context with Class Component",
        "Access to Context with Context Type",
        "To manipulate the data in Context",
        "How to Use Multiple Context",
        "How to Create Reducer",
        "How to Use Reducer",
        "useState, useEffect, useReducer, and useContext hooks",
        "Reducer, action and dispatch concepts and much more",
        "How to use coding techniques to make efficient development with React",
        "Build fast, user-friendly web apps with React",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoD",
        "Learn the key concepts of the Express JS",
        "Express Route parameters",
        "Middleware & Static files",
        "Query Strings",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice",
        "Nodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "Node is designed around an event loop, which allows for easy management of asynchronous functions.",
        "Node Js is a server environment built for fast and easily scalable network applications.",
        "NodeJs is open-source, meaning it’s a free code for all developers.",
        "A runtime system is a platform where a software program runs.",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes",
        "Relying on existing code, Flutter is also a free and open-source framework for developers",
        "React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language dart",
        "Created by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting Android, ios",
        "Learning React Native is a great avenue through which to gain experience developing mobile apps."
      ],
      "course_content": {
        "Intro to React Native with NodeJS & ExpressJS": [
          "What will we learn in Full Stack React Native?",
          "How To Get Help in React Native?",
          "Github Complete Course Repo in React Native with Nodejs and express js",
          "FAQ about Full Stack React Native, NodeJS, Express JS"
        ],
        "React Native - Set Up For Windows": [
          "Free Tools For Windows",
          "Windows Setup for React Native",
          "React Native How to Start Emulator In Android Studio",
          "React Native: Android Emulator Setup Checklist"
        ],
        "React Native - Setup For OSX": [
          "Free Tools for IOS",
          "OSX Setup for React Native",
          "React native: Start the Emulator",
          "React Native: MAC IOS Emulator Setup Checklist"
        ],
        "React Native and Expo": [
          "React Native on Mobile Device",
          "Expo CLI Project"
        ],
        "React Native and JSX": [
          "How To Create An App with React Native",
          "See Content on Emulator",
          "Why Do We Need React and React Native?",
          "ES6 Syntax ( Let, Const, Var ) in React Native",
          "React Native First Component",
          "How To Show Component on Device in React Native",
          "How to Build Our First React App",
          "How To Connect A Component To The Root Component",
          "Import A Component To Another Component in React Native",
          "Quiz"
        ],
        "Styling For React Native": [
          "Styling with JSX",
          "Displaying of Views",
          "Header Component’s Styling in React",
          "React Props",
          "How To Reuse Code With Props System",
          "Quiz"
        ],
        "API Request With React Native": [
          "How To Show a List To The User",
          "The List Component",
          "Func Component vs Class Based Component"
        ],
        "LifeCycle Methods in React JS and React Native": [
          "When Do We Need Lifecycle Methods?",
          "LifeCycle Methods",
          "Making Request With Axios",
          "quiz"
        ],
        "State in React Native": [
          "What Is State And How To Initial State in React Native",
          "Using of State in React Native",
          "A Component’s Lifecycle With State",
          "List Component in React Native",
          "List Item Component",
          "Reusable Components",
          "Styled Component for List Items",
          "Usage of Props.Children",
          "Item Section",
          "Quiz"
        ],
        "Layout With Flexbox in React Native": [
          "Introduction to the Flexbox",
          "Section Header Component",
          "How To Show An Image",
          "Scrollable Content",
          "User Interaction with React Native",
          "Event Handlers",
          "How To Open Another App (Browser)",
          "quiz"
        ]
      },
      "requirements": [
        "No prior React and React-Native knowledge",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don't need to be an expert",
        "Basic ES6 knowledge would be beneficial but not required",
        "Desire to learn React Native",
        "Computer with access to the internet",
        "Desire to learn React native and nodejs",
        "Desire to learn React native, nodejs, express js",
        "Desire to learn React native and express",
        "Desire to learn React native, nodejs, expressjs",
        "Desire to learn React native and nodejs",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device"
      ],
      "description": "Hello there,\nWelcome to the \"Full Stack React Native with NodeJS & ExpressJS \" course.\nLearn fullstack react native with redux, hooks & context, node js, express js, and MongoDB. Build your react projects.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React is all you need to create awesome mobile apps that work on both Android and iOS.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\nLearning React Native is a great avenue through which to gain experience developing mobile apps. Udemy features top-rated React Native courses that take you through every level of the React Native framework, so that you can start writing better apps, faster.\nNode.js is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal. Node is designed around an event loop, which allows for easy management of asynchronous functions. This makes it a popular environment for modern developers working on chat and gaming apps.\nLearning Node.js is a great way to get into backend web development, or expand your fullstack development practice. With Udemy’s hands-on Node.js courses, you can learn the concepts and applications of this wildly useful JavaScript runtime.This course is for all levels. To be able to take this course, all you need is a basic understanding of JavaScript.\nIn the course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer. Besides, with the Expo app, you will be able to run your apps on your own mobile device as well.\nLater on in the course, we are going to learn the basics of React and React Navigation. JSX, 'props system' and 'state system' are going to be crystal clear for you at the end of the course. We are going to create nice-looking reusable components. You are going to be able to use these reusable components in your own future projects. You are going to go to different screens from the app with React-navigation.\nFinally, you are going to learn the latest React features \"Hooks and Context\" system. We are going to create two nice-looking app, teach you \"Hooks and Context\" in a very detailed way. You are going to learn how to use \"state\" in functional components with the \"Hooks\" system and with \"Context API\" you won't need any third-party package to manage the Application state.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser.\nNodeJS and Express is growing web server technologies. By learning Node with Express, you can improve your skills, get new job and you can build powerful, robust backend.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nWe tried to tell all complex topics in very detail on the course. We used some diagrams to tell some important topics and created a nice-looking mobile application. We showed two different ways to create a mobile app. We showed both react-native-cli and expo-cli in our course.\nAt the end of the course;\nBasics of React, React-Native, React-Navigation libraries\nHow to send an HTTP request from a mobile application\nHow to use flex-box system\nHow to create reusable components\nTo reach another app on the device from our app\nCreating your own mobile app both with react-native-cli and expo-cli\nCreating Context with Class-Based and Functional Components\nHow to Consume Context in Class-Based and Functional Components\nHow to Use Multiple Context in one single component\nHooks Functions(useState, useEffect, useReducer, useContext...)\nCreating Reducer and\nUsing Reducer is going to be clear for you.\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nReact, or React js with node js and express js\nReact native\nReact native redux\nReact native with hooks and context\nReact Native expo\nReact Native android and ios\nNodejs\nNodejs and mongodb\nadvanced nodejs\nnodejs api\nnodejs mysql\nexpress\nexpress js\nNode express js mongodb\nexpress js mongodb\nexpress js react\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and the React is easy to understand for the beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s a free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nWhat is microservices architecture and how can Node.Js be used for it?\nMicroservices architecture is a software development style or method where single-function modules originate. Each has a very well-defined operation and interface and can deploy on its own. In essence, it’s a way of developing modules that you can repurpose from one program or application to another. When you create an application, it’s a collection of modules that have been thoroughly tested and are well-maintained. The modules are typically built around different business-specific capabilities and are then loosely coupled to other modules when deployed as part of a program. You can use Node.Js in microservices architecture as the language of choice for one, some, or all of the microservices (or modules). The beauty of microservices is that you can use the best language for the specific microservice. But where highly scalable, fast programs are needed, Node.Js would be a\n\n\nIf you are wanting to learn how to; build for production, push to production, have a dev and production version, and learn how to navigate the two, this is the class for you! Seriously there is so much real-world knowledge here it should be worth way more than what it is!\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our Full Stack React Native with NodeJS & ExpressJS course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Programmers who want to learn React and React-Native",
        "Anyone who wants to learn React Hooks & Class-based Components",
        "Anyone who wants to create mobile applications with both react-native-cli and expo-cli",
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "People who are planning a career in the application world",
        "Developers who have researched React but have had trouble mastering some concepts",
        "Anyone who want to start from scratch and to move more advanced level",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who want to take their web development skills to the next level and learn a future-proof technology",
        "Anyone who wants to learn MongoDB",
        "Anyone interested in NoSQL Schema",
        "Professionals who are willing to learn MongoDB Database",
        "Anyone looking to build a career as a NodeJS or Express developer",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "People who want to learn React Native with nodejs and expressjs",
        "People who want to learn node js",
        "People who want to become mobile developer with react native, node js and express js"
      ]
    },
    {
      "title": "Configure NGINX on a Cloud Server: Digital Ocean & AWS",
      "url": "https://www.udemy.com/course/configure-nginx-on-a-cloud-server-digital-ocean-aws/",
      "bio": "Digital Ocean | NGINX | LEMP Stack | Domain Names | SSL | WordPress | AWS Foundations | Amazon EC2 | AWS Storage | ELB",
      "objectives": [
        "Understand the key features and differences between Apache and NGINX servers, and choose the right server for specific use cases.",
        "Set up and configure a Digital Ocean account, create a new droplet, and deploy a LEMP stack on Ubuntu.",
        "Install and configure a LEMP stack on Ubuntu, including setting up Nginx, MySQL, and PHP.",
        "Configure Nginx as a reverse proxy, and leverage various Nginx modules to optimize web application performance.",
        "Configure Nginx as a reverse proxy, and leverage various Nginx modules to optimize web application performance.",
        "Register a domain name, configure DNS settings, and secure web applications using SSL encryption.",
        "Install and configure WordPress on an NGINX server, including setting up the necessary database and configuring Nginx as a reverse proxy.",
        "Understand the architecture, features, and key services available on the AWS platform, including EC2, S3, and RDS.",
        "Set up and configure an AWS account, and explore various AWS tools and technologies.",
        "Create and configure EC2 instances, including setting up security groups, configuring networking, and selecting the right instance type for specific use cases.",
        "Leverage various EC2 features and understand how to optimize instance performance.",
        "Configure and manage AWS storage solutions, including EBS to support EC2 instances.",
        "Understand how to use load balancers and auto scaling groups to optimize application performance and availability.",
        "Set up and configure Route 53 to manage DNS settings.",
        "Gain practical experience through hands-on labs and exercises.",
        "Apply foundational concepts and practical skills to real-world use cases.",
        "Understand how to choose the right technology solutions to meet specific requirements."
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course provides students with a comprehensive overview of foundational concepts and practical skills required to deploy web applications using Apache and NGINX servers, configure and manage cloud servers on Digital Ocean and AWS platforms, and leverage various AWS storage solutions to support EC2 instances.\n\nThe course begins by introducing the foundational concepts of Apache and NGINX servers. Students learn about the architecture, configuration, and key features of both servers, while exploring how to deploy and configure them to host web applications. We also teach the key differences between Apache and NGINX and the best use cases for each web server technology.\n\nNext, the course covers cloud server deployment on Digital Ocean. Students learn how to set up and configure a Digital Ocean account and create a new droplet. They will also explore various tools and technologies available on the Digital Ocean platform and learn how to leverage them to build and deploy web applications.\n\nThe course then delves into LEMP stack configuration on Ubuntu. Students will learn how to install and configure LEMP stack on Ubuntu, including setting up Nginx, MySQL, and PHP. We teach how to configure Nginx as a reverse proxy and leverage various Nginx modules to optimize web application performance.\n\nNext, the course covers domain name registration and SSL encryption. Students will learn how to register a domain name, configure DNS settings, and secure web applications using SSL encryption. They will also explore various SSL certificate providers and understand how to choose the right certificate for their use case.\n\nThe course then moves on to WordPress installation and configuration on NGINX. Students will learn how to install and configure WordPress on a NGINX server, including setting up the necessary database and configuring Nginx as a reverse proxy. They will also explore various WordPress plugins and themes and understand how to customize them to meet specific requirements.\n\nFrom here, we dive into AWS foundations. Students learn about the architecture, features, and key services available on the AWS platform, including EC2 and IAM. They will also understand how to set up and configure an AWS account and explore various AWS tools and technologies.\n\nNext, the course covers Amazon EC2 foundations. Students learn to create and configure EC2 instances, including setting up security groups, configuring networking, and selecting the right instance type for specific use cases. They will also explore various EC2 features and understand how to leverage them to optimize instance performance.\n\nThe course then moves on to AWS storage solutions for EC2. Students will learn about various AWS storage solutions, including EBS, S3, and Glacier. They will understand how to configure and manage these storage solutions to support EC2 instances, and explore various use cases where different storage solutions may be appropriate.\n\nFinally, the course covers AWS Elastic Load Balancing, Auto Scaling Groups, and Route 53. Students will learn how to set up and configure load balancers and auto scaling groups, and understand how to use Route 53 to manage DNS settings. They will also explore various use cases where load balancing, auto scaling, and Route 53 may be necessary to optimize application performance and availability.\n\nOverall, this course provides students with a comprehensive overview of foundational concepts and practical skills required to deploy web applications using Apache and NGINX servers, configure and manage cloud servers on Digital Ocean and AWS platforms, and leverage various AWS storage solutions to support EC2 instances. Students will also gain practical experience through hands-on labs and exercises, and understand how to apply these concepts and skills to real-world use cases.",
      "target_audience": [
        "Web developers who want to gain practical skills in deploying and managing web servers and web applications in the cloud.",
        "IT professionals who want to expand their knowledge and skills in AWS and cloud computing, and to gain hands-on experience in deploying and managing web applications.",
        "Entrepreneurs who want to launch web-based businesses and need to understand the basics of web server deployment, management, and optimization.",
        "System administrators who want to gain practical experience in setting up and configuring web servers and applications on the cloud, using both Apache and NGINX servers.",
        "Students and professionals who are interested in pursuing careers in cloud computing and web development, and want to gain foundational knowledge and practical skills in server deployment, management, and optimization."
      ]
    },
    {
      "title": "Object Oriented php: build real world project using OOP",
      "url": "https://www.udemy.com/course/build-real-application-with-php-mysql-javascript-and-oop/",
      "bio": "Take your programming skills to the next level, learn to write reusable code with object oriented php",
      "objectives": [
        "Reusable code & OOP in real world applications",
        "Reusable Pagination class",
        "Reusable Validation class",
        "Reusable Crud class",
        "Reusable session class",
        "Database Design",
        "Class Constructors",
        "Uploading images to a server",
        "Inserting, deleting, and updating data in mysql database",
        "Write Clean Code",
        "Methods and Class Properties",
        "Write Scalable Code",
        "Write Code that's easy to maintain",
        "Write Code that's easy to understand",
        "Server Side Validation",
        "Database Normalization"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of php",
        "Basic understanding of html",
        "Basic understanding of javascript",
        "Basic Understanding of sql statements"
      ],
      "description": "Looking to improve your web development skills and your OOP skills ? struggling to find real world projects? This course is for you. In this course we'll be building a movie management system  using\nObject oriented php. You'll learn to write neat code, code that's easy to maintain and understand.  This course is for those that are hungry for knowledge and looking to become better programmers. In programming, every time you seat in front of computer and watch a tutorial, you're growing. Every little thing you do improves your skills, It helps you become a better programmer.\n\nThis course will help you become a better programmer, and if you're a programming newbie looking for a new job you'll get a new job easily because you'll stand out from the rest of the applicants because of the skills you'll get from this course. Take this course and impress hiring managers with the skills you will learn in this course. I can guarantee you that this course will have a huge positive impact in your career. It is a combination of things I've learned over the years, things that I really struggled to learn and understand, I simplify all those things for you in this course.\n\nGood in luck in your programming career :)",
      "target_audience": [
        "All levels"
      ]
    },
    {
      "title": "2D Game Development With HTML5 Canvas, JS - Tic Tac Toe Game",
      "url": "https://www.udemy.com/course/build-a-tic-tac-toe-game-with-javascript-html5-canvas-css3/",
      "bio": "Javascript for Front End Web App Development - HTML5 Canvas & CSS3 - 2D game development - create the game from scratch",
      "objectives": [
        "Create a completely dynamic Tic Tac Toe game app with Javascript, HTML5 canvas and css",
        "How to design the game logic for the game and implement it as code",
        "Improve your web app development, web game development & javascript skills",
        "Improve your logical problem solving skills",
        "Improve your front end design and development skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Algorithm of the game app": [
          "Algorithm - Part 1",
          "Algorithm - Part 2"
        ],
        "HTML5 Building Blocks of the Game": [
          "Create skeleton of the HTML5 code",
          "Meta tags of the HTML5 code",
          "Create the header and the result heading",
          "Create the game and rule sections' skeletons",
          "Create the game canvases and new game button",
          "Create the rules section's paragraphs and heading",
          "index.html file - Tic Tac Toe game"
        ],
        "Styling the Tic Tac Toe Game app - achieving the final look": [
          "Connect HTML and CSS files",
          "Set background and more on colors",
          "Set default styles and style the header",
          "Style the headings",
          "Style the canvases",
          "Style the entire game area",
          "Style the Divs that hold the canvases and rules area",
          "Style the paragraphs and <h2> headings",
          "Style the New Game button",
          "Create hover effects on the canvases and new game button",
          "style.css file - Tic Tac Toe game",
          "HTML5 & CSS practice test"
        ],
        "[OPTIONAL] Javascript Basic Concepts (related to this project)": [
          "Connecting HTML and script/JS files",
          "An introduction to variables and assigning values",
          "Mathematical operators and alerts",
          "Conditional statements - if else statement",
          "Conditional statements - Switch case",
          "Loops - For loop",
          "Arrays - 1 dimensional arrays",
          "Arrays - 2 dimensional arrays",
          "An introduction to functions (function definition and calls)",
          "Intro to DOM - getElementById and InnerText",
          "Intro to DOM - adding click events to buttons",
          "More Event listeners Part 1",
          "More Event listeners Part 2",
          "Javascript objects"
        ],
        "[OPTIONAL] HTML5 Canvas Basic Concepts (related to this project)": [
          "Step 1 & 2 - Getting the canvas and creating the drawing object",
          "Drawing a line (also explanation on canvas dimensions and pixel points)",
          "Drawing & coloring a shape with poly lines (a path)",
          "Drawing & coloring a circle and arcs"
        ],
        "Javascript code for the game - Making the game playable": [
          "Step 1 - Setting things up + onload function",
          "Step 1 cont. - Initial states - declare and assign",
          "Step 1 cont. - Initial states - assign values to arrays",
          "Step 2 - Make the new game button work",
          "Step 3 - Canvas click event",
          "Step 3 cont. - Canvas click function - retrieve canvas ids",
          "Step 4 - Draw relevant shapes on canvas",
          "Step 4 cont. - X and O draw codes",
          "Step 4 cont. - Test intermediate output",
          "Step 5 - Winner check",
          "Step 5 cont. - Display game results",
          "Error condition alerts",
          "script.js file - Tic Tac Toe game",
          "All the code files - Tic Tac Toe game",
          "Javascript & HTML5 Canvas Practice Test"
        ],
        "Conclusion & Feature ideas": [
          "New features that you can try to create for this game",
          "Conclusion & Bonus - Continue your journey!!"
        ]
      },
      "requirements": [
        "You can come to this course with absolutely no coding knowledge. I explain everything you need to create your very first web app.",
        "A PC or laptop to practice what I teach"
      ],
      "description": "Practice makes perfect. Start your journey into becoming a professional front end web developer here!\nAt DigiFisk, we like making learning fun. Our courses are interactive and fun with a ton of practical elements to it. We've decided to take it a step further with our Web app development practice series.\nOnce you learn the syntax of a programming language, the next logical step is to start creating software and apps. But that's where most students get stuck. Problem solving isn't as easy as learning a bunch of syntaxes.\nBut we aim to make it easy for you.\nWhat will you learn in this course?\nIn this course, you'll learn how to build your own Tic Tac Toe Game App from the ground up with just HTML5 canvas, Javascript and CSS  in just a couple of hours.\nYou'll learn:\n1. How to create the HTML5 structures of this game.\n2. How to make the game pretty with CSS (design, design, design!)\nand last but never the least\n3. How to make the game playable (solve problems) with logic and algorithm, i.e Javascript\nBy the end of the course, you'll be one stop closer to creating web apps and 2d web games like a pro. You could even try creating other smaller web apps and games.\nHow is this course designed?\nI've made this course as easy to understand as possible. I've structured it in such a way that each section will handle one of the 3 languages covered here.\nIntroduction: This is where I'll explain how the game works, it's various features and what we'll be using to achieve the same results.\nModule 1: Every professional developer writes algorithms before creating a software or game. We'll be writing the a step by step algorithm for our game, and I'll be explaining what we'll do in every step.\nModule 2: I'll be teaching you how to create the bare bones of the app with HTML5. The result will be a page with all the elements we need in our game, devoid any colors or design elements.\nModule 3: Here, we'll \"beautify\" our app. We'll be using CSS elements to give our game colors and styles. At the end of this module, we'll have a Tic Tac Toe web game that'll look like the final result, albeit one that is not playable yet.\nModule 4: I'll be covering some basic concepts of Javascript in this module. I'll only cover concepts that we'll need for our game's Javascript code though. If you already know the basics, you can skip this module.\n\nModule 5:  I'll be covering some basic concepts of HTML5 canvas in this module. I'll only cover concepts that we'll need for our game's Javascript/HTML5 canvas code though. If you already know the basics, you can skip this module.\nModule 6: This would be the meat of the course. We'll be delving into Javascript & HTML5 canvas code of our game in this module, and I'll teach you how to make the game playable (let the user draw on the canvas and display the game results) in here.\nFinal section: Finally, I'll give you some ideas on how to improve/enhance the game and make it your own in terms of design and functionalities.\nThis course is for you if:\n1. If you like learning by doing rather than hours of boring theoretical lectures.\n2. If you're a complete newbie to the world of web development, or just programming in general, and would like to start creating software with the help of a beginner-friendly course. You'll learn the basics of everything used in this project (HTM5, CSS3, Javascript, HTML canvas).  I'll be explaining every single line of code I'll be using in this course, so you won't feel lost.\n3. If you have the passion for programming, and know the basics of HTML5 and CSS, but you're stuck on the practical aspects of it. Turn your theoretical knowledge into practical knowledge with our course.\n4. If you want to delve into the exciting world of front end web app development, this course will take you a couple steps further in the right direction.\n5. If you're a Javascript web developer who just wants to try out a new project. Our course welcomes coders of every level, from absolute beginners, to pros.\n\nSo, what are you waiting for? Get this course today, and begin your journey into the wonderful world of web development and game development!",
      "target_audience": [
        "This course is for people who want to learn web development/web app development the fun way",
        "This course is also for people who've learned the basics and want to move on to practical programming",
        "If you love learning by creating, and don't like to listen to hours of theory, this course is for you"
      ]
    },
    {
      "title": "React Next.js Firebase Node.js MongoDB Login Register System",
      "url": "https://www.udemy.com/course/react-nextjs-firebase-nodejs-mongodb-authentication/",
      "bio": "Build Ultimate Authentication System and Use It In All Your Future Projects Without Writing It Ever Again.",
      "objectives": [
        "Learn to build production ready authentication system",
        "Leverage firebase auth (free service) to build login and register system",
        "Learn to fully secure your web pages in the server side",
        "Learn to use the best tech combination for any future projects",
        "Build separate client side app that uses NodeJs API",
        "Implement Login with Google",
        "Password Reset by Sending Email Link (if forgotten)",
        "Always Keep the User Logged In (without writing your own refresh token logic )",
        "Learn to Secure/Protect Web Pages (fully server side for complete protection)",
        "Learn to build Modern Apps using React, NextJs, NodeJs, MongoDB",
        "Learn to build SEO friendly SSR sites using NextJs",
        "Build a Boilerplate / Base Project with Rock Solid Authentication System and Use It In All Your Future Projects"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of react and nodejs"
      ],
      "description": "React Next.js Firebase Node.js MongoDB Ultimate Authentication for Production Apps\n\n\nDo you want to build a production ready authentication system for your production app\nor for all your future projects?\n\n\nThis course has everything you need to build a rock solid authentication using React Node Next.js MongoDB Firebase\n\n\nI will be using free Firebase authentication to get token and use that to get user info in server side\nthen use that information to find or create user in our own MongoDB.\n\n\nThis way you use Firebase authentication system but still use your own server with MongoDB for building\nMERN Stack / FullStack apps.\n\n\nThis is the best way to build the authentication system without writing your own complicated authentication system\nand you never have to worry about adding social login, refreshing the token, forgot and reset passwords,\nsending emails and other security issues.\n\n\nlet firebase handle all that for you...\n\n\nSo you can use this project as a base project to start any future MERN stack apps. It has separate frontend\nbuilt using React, Next.js and context and reducer hook which will give you a redux like state management.\n\n\nAnd it has totally separate API that will validate firebase token and find or create user in MongoDB.\n\n\nThere is not much code in this project, not too many files... so that you can build complex apps on top of this... or even modify the code if needed.\nIt's built in a flexible way so that you can build any projects in future, without having to write your own complicated login/register system.\n\n\nDon't waste your valuable time writing incomplete, insecure, half baked authentication system for your future projects. Learn the core concept of building secure apps and use this project as a base project for all your awesome projects starting today. Are you ready for this adventure?",
      "target_audience": [
        "React, NodeJs and JavaScript developers who wants to build great projects but do not wish to write complicated authentication system ever again",
        "Developers looking for that base starter project which has all the necessary features",
        "Developers looking for a best combination of modern tech including React, NextJs (for SSR/SEO), NodeJs and MongoDB for fast and easy API"
      ]
    },
    {
      "title": "PHP Mysql Inventory Barcode POS Web App with Dashboard",
      "url": "https://www.udemy.com/course/php-mysql-inventory-barcode-pos-web-app-with-dashboard/",
      "bio": "Inventory POS BARCODE Project With Billing by use of Bootstrap 4 Responsive AdminLTE Dashboard With PHP PHP8 MYSQL",
      "objectives": [
        "Students will learn Basics Concept of PHP programming language With fundamentals of web-Client server architecture from Theory to Practicle",
        "You will learn how to create Real time Web Based Inventory POS BARCODE Project With Admin LTE Dashboard using PHP8 programming language",
        "You will learn procedural php programming in this project and plugins , Tools , Graphs , Printing Bills And lots of things with adminLTE Dashboard",
        "You will learn procedural php programming in this project and plugins , Tools , Graphs , Printing Bills"
      ],
      "course_content": {},
      "requirements": [
        "Need Basics Knowledge of PHP MYSQL JQUERY BOOTSTRAP ETC"
      ],
      "description": "Requirements\nYou need to just a Computer or Laptop with Internet Connection and DESIRE to learn programming in PHP.\nYou have to knowledge of PHP MYSQL Bootstrap, HTML5 and CSS3 basic principles for project, You can find free course for bootstrap , HTML5 and CSS3  on UDEMY from scratch. It’s not mandatory but it could be helpful for the project Development, You Should have basic background in JavaScript, jQuery and Bootstrap grid layout.\nDescription\nWould you like to learn  Basic fundamentals of PHP with Inventory POS BARCODE System Real time Project and sell it to companies that wants to manage their inventory and billing?\nIn this course you will learn basic fundamentals of PHP with Inventory POS BARCODE System from scratch using the programming language PHP8, combining several resources that will allow you to offer useful characteristics for any company that needs to open a store or manage their sales and stock.\nThis is  REAL TIME PROJECT course where I will teach you step by step the basics fundamentals of PHP8 with creating WEB APPLICATION with PHP under the Procedure way with PDO(PHP DATA OBJECT),  when you finish it, you could sell it to your clients or it could be used as a basis to develop other complex web applications.\n\n\nPOS BARCODE SYSTEM characteristics:\nLogin Module\nUser Registration\nCategory\nProducts , Stock , Product BARCODE\nInventory management\nInvoice Billing PDF printing(FPDF)\nSales Order with different payment methods with Scanning of BARCODE\nSales report\nBest-selling products report\nStock product control\nDaily report\nMonthly report\nDate range report\nAdapted to all devices (Responsive design)\n\n\nLibraries you will learn how to use:\nAdminLTE Dashboard BOOTSTRAP 4 : Great open source template for responsive software Development.\njQuery DataTable: Used for dynamic tables creation.\nChartJS:Used for dynamic graphics and charts.\nDate Range Picker: Used for selecting date ranges.\nSelect2 Plugin: For Searcing products in sales order\nSweetalerts: Awesome alerts library.\nFPDF :PHP extension for PDF format printing.\nBARCODE LIBRARY\n\n\nAnd Many others...\nHOW’S THE COURSE?\nThe course is divided in several sections.  we will work for developing  the Inventory POS BARCODE system.\nAnd the following sections we will build, step by step from scratch, every single module that will be part of our Inventory POS BARCODE system from HTML, CSS stylesheet, JavaScript interaction and jQuery, along other plugins and server-side connection using PHP 8 with PDO(PHP DATA OBJECT) under the Procedure pattern using MySQL database.\n\n\nHOW LONG DOES IT TAKE TO COMPLETE THE COURSE?\nIt is up to you. I guess that you would take less than three weeks to complete it, but it depends on your availability and workflow.\n\n\nWHAT ARE THE MINIMUM REQUIREMENTS?\nDownload the material where you can find the resources for the first lesson in each section.\nYou should have a basic knowledge on PHP8, Mysql , Bootstrap , HTML5 and CSS3, course.",
      "target_audience": [
        "This course is for PHP Beginners ,IT Students , entrepreneurs or freelancers that want to create Web Applications with PHP and MySQL and sell it to clients or companies for software business or it can be help for PHP Developers."
      ]
    },
    {
      "title": "SFTP Server Setup and Web-Based File Transfers",
      "url": "https://www.udemy.com/course/sftp-server-setup-and-web-based-file-transfers/",
      "bio": "\"Master the Essentials of Setting Up Secure File Transfers with SFTP Using HTML and Flask\"",
      "objectives": [
        "Set Up and Configure a SFTP Server using freesshd.",
        "Develop a Flask-Based Web Application for File Uploads.",
        "Integrate HTML with Flask for Seamless File Transfers and a Modern Look.",
        "Troubleshoot and Resolve Common SFTP, Flask And Networking Issues."
      ],
      "course_content": {},
      "requirements": [
        "Basic Understanding of Python, Access to a Windows PC"
      ],
      "description": "In this course, you'll learn how to set up and manage a secure file transfer protocol (SFTP) server using SSH for encryption. Starting with the basics, we'll cover key concepts like protocols, servers, clients, and the differences between FTP and SFTP. You'll also get hands-on experience with HTML and Flask to create a user-friendly interface for uploading files. By the end of this course, you'll have the skills to securely transfer files within a local network or to a remote server, making this a vital course for anyone interested in network security or web development.\nWe will guide you step-by-step through the process of installing and configuring FreeSSHd as your server software and PuTTY as your client tool. You'll learn how to create a secure environment that safeguards your data during transfers. In addition to setting up the server, we'll delve into the coding aspects, showing you how to write and integrate Flask applications with your SFTP setup. You'll gain practical experience in troubleshooting common issues, ensuring your SFTP server operates smoothly and efficiently. Whether you’re a beginner looking to expand your skills or a professional seeking to enhance your knowledge, this course provides the essential tools and insights needed to implement secure file transfer solutions in real-world scenarios.",
      "target_audience": [
        "This course is great for anyone who wants to learn how to set up a secure file transfer server and build a simple web interface to manage it. Whether you're a developer looking to add new skills, an IT professional who needs to handle secure file transfers, or a student wanting to get some hands-on experience with web development and server setup, you'll find this course really useful and practical."
      ]
    },
    {
      "title": "Rapid Development with Flask, HTMX, TailwindCSS and AlpineJS",
      "url": "https://www.udemy.com/course/flask-htmx/",
      "bio": "Build interactive web applications with minimal JavaScript, using server-side rendering",
      "objectives": [
        "Rapidly build an RSS reader application using Flask, HTMX, TailwindCSS, and AlpineJS",
        "Use server-side rendering with HTMX to update the page dynamically",
        "Rapidly build interactive web applications with minimal JavaScript",
        "Sprinkle in-page interactivity simply using AlpineJS",
        "CSS fundamentals and how to use TailwindCSS",
        "CSS flow, flex, and grid layouts and how to apply them with TailwindCSS"
      ],
      "course_content": {
        "Introduction": [
          "Course welcome",
          "Temporary bug in Rye — issue with the next lecture",
          "Set up a modern Python project with Rye",
          "Adding our external web dependencies",
          "Build a Flask app to render a single RSS feed",
          "The CSS box model",
          "CSS flow layout positioning",
          "CSS layouts: flex and grid",
          "Creating our RSS feed template",
          "Working with a list of different feeds in Flask",
          "Media queries with TailwindCSS",
          "Colors in TailwindCSS",
          "Adding a sidebar with TailwindCSS",
          "When should you use partials vs. components?",
          "Adding dynamic pagination to our app",
          "Adding a read status to articles, and updating the page without reloading",
          "Event dispatching and handling with AlpineJS",
          "Letting users create new feeds (showing and hiding elements with AlpineJS)",
          "How to work with SVG icons in a Flask project",
          "How to create a mobile sidebar with TailwindCSS and AlpineJS",
          "How to animate a mobile sidebar with a sliding animation",
          "Course conclusion, and thank you"
        ],
        "Bonus section": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Intermediate programming knowledge required, preferably with Python",
        "Knowledge of Flask will be helpful as the course is fast-paced",
        "No CSS, TailwindCSS, or JavaScript knowledge required"
      ],
      "description": "Do you want to build interactive web applications quickly and simply?\nPython with Flask, HTMX, TailwindCSS, and AlpineJS is a complete stack of technologies to build interactive, engaging web applications without having to write (almost) any JavaScript.\nThis means you can use your existing Python knowledge without having to learn a completely new language to build your web project.\nTraditionally, building a web application without JavaScript would mean a slow and sluggish experience, with lots of page reloads at every button or link click.\nWith HTMX and AlpineJS, we can avoid almost all page reloads, and craft server-side rendered applications that feel fast, responsive, and engaging.\nThis includes things like adding pagination, hiding and showing elements, and updating page state.\nAdding TailwindCSS into the mix will help us write our CSS quickly and efficiently.\nIn the course, we build an RSS feed reader that loads data from the internet to display articles from feeds you follow. It's a great project to get familiar with these technologies, and in no time you'll be building your own interactive web applications.\nThe course contains:\nUse Flask to create a web application.\nCSS fundamentals and how to apply them with TailwindCSS.\nAvoid page reloads with HTMX by making requests to your backend and swapping parts of the page content.\nAdd in-page interactivity simply with AlpineJS using state and event dispatching.\nLearn about CSS flex and grid to create a commonly used page structure with a sidebar and main content.\n\n\nI'm sure you'll enjoy this course. See you on the inside!",
      "target_audience": [
        "Intermediate Python developers who want to quickly build their web application projects",
        "Front-end developers who want to understand how to build server-side rendered applications",
        "Developers who want to learn about web development, including HTML and CSS"
      ]
    },
    {
      "title": "Serverless Development with AWS Lambda and NodeJS",
      "url": "https://www.udemy.com/course/serverless-development-with-aws-lambda-and-nodejs/",
      "bio": "Learn to develop serverless app from ground up using AWS Lambda nd NodeJS",
      "objectives": [
        "Learn to use AWS Lambda to build serverless applications",
        "Learn to use NodeJS to build services on AWS",
        "Learn the core condepts behind serverless computing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "AWS Tour",
          "Quiz 1",
          "Serverless Programming Basic Concepts",
          "Quiz 2",
          "Hello World",
          "Quiz 3"
        ],
        "Going Further": [
          "S3 Setup",
          "Quiz 4",
          "IAM",
          "Quiz 5",
          "AWS CLI",
          "Quiz 6",
          "Proof of Concept",
          "Quiz 7",
          "S3POC Part 1",
          "Quiz 8",
          "S3POC Part 2"
        ],
        "Full Stack POC": [
          "Serverless Programming 102",
          "Quiz 9",
          "Create Endpoint",
          "Quiz 10",
          "Frontend",
          "CORS",
          "Quiz 11",
          "Deploy with S3",
          "Deploy with CloudFront",
          "Quiz 12",
          "Route 53",
          "Quiz 13",
          "ACM",
          "Quiz 14",
          "Cloud Front",
          "Quiz 15",
          "API Gatway",
          "Quiz 16",
          "Update POC",
          "Quiz 17"
        ],
        "Event Drive Programming": [
          "Event Driven Programming Part 1",
          "Quiz 18",
          "Event Driven Programming Part 2",
          "Rekognition and CLI POC",
          "Quiz 19",
          "CloudPhoto Part 1 - S3-SNS",
          "Quiz 20",
          "CloudPhoto Part 2 - IAM",
          "Quiz 21",
          "CloudPhoto Part 3 - Looking at the Data",
          "CloudPhoto Part 4 - Detect Labels",
          "Quiz 22",
          "CloudPhoto Part 5 - Detect Faces",
          "Quiz 23"
        ],
        "DynamoDB": [
          "DynamoDB Create POC Table",
          "Quiz 24",
          "UUID POC",
          "Quiz 25",
          "Dynamo Insert POC",
          "Quiz 26",
          "Dynamo Recall Single Record",
          "Quiz 27",
          "Dynamo Recall Multi Record w- Scan",
          "Quiz 28",
          "Dynamo Recall Multi Record w- Query",
          "Quiz 29"
        ],
        "PhotoCloud Project, Saving our Data": [
          "NoSQL Design Basics",
          "Quiz 30",
          "Inserting our Data",
          "Creating Environment Variables",
          "Quiz 31",
          "Testing our Data",
          "Quiz 32"
        ],
        "PhotoCloud Project, Retrieving our Data": [
          "PhotoCloud Scan Function",
          "Quiz 33",
          "ACM Setup",
          "API Gateway Setup",
          "Quiz 34"
        ],
        "PhotoCloud Project, Deploying our App": [
          "Frontend HTML",
          "CloudFront Setup"
        ]
      },
      "requirements": [
        "Basic knolwedge of JavaScript or Node will be helful in completing the course"
      ],
      "description": "Serverless development is defined as the applications and functions that can run efficiently  on servers alone. The ephemeral, event-triggered stateless compute containers which are and completely managed by the cloud provider are used by the apps to run. Already there are people being attracted to this new concept after hearing about its many benefits. They include deploying codes without hassle. Auto-scaling, zero-server management, lack of upfront provisioning, and faster set up. Highly famed Corporations such as Netflix, Reuters, Telenor, and many others have already listed themselves among its users. With so many factors, it is no surprise to see why this new technology is gaining mass popularity.\nWhat Makes this Course so Valuable?\nThere are numerous reasons as to why you should learn about Serverless including a massive demand in jobs as well as lucrative salaries which can even reach as high as $120,000 in some parts of the world.  For any beginner, this tutorial would be incredibly helpful since it will teach all that you need to know about Serverless development using AWS and Node.js from scratch. In that way, you’ll become familiar with many of the terminologies that are vital when it comes to learning Serverless. The tutor will make you understand the course in a way that will make it easy and fun for you to learn. Often time, it is challenging to find a course that will make you learn the topic with ease and also gives an awesome learning experience.\nLearn how  to build your first “Hello World” application to ensure your understanding regarding the basics of AWS Lamba along with CloudWatch. There is also a Tour of Lambda and you will receive API endpoints using other services such as S3, Rekognition and a lot more. Take a deep dive and learn the proper circumstances of opting for the use of Serverless and when to avoid it.\nThe course also has a variety of advanced concepts like memory management and behind the scenes. This course will provide you an in-depth knowledge into the topic along with learning to set up a local environment, Lambda catching, data storage, building an API server for a CRM system, build Amazon Alexa Skill with lambda, and much more!\nThe Course Includes:\n1. Introduction and Setting up an AWS account\n2. AWS Tour\n3. S3 Setup\n4. Proof of Concept\n5. Creating Endpoint and Front end\n6. Deployment with CloudFront\n7. API Gateway\n8. Building Lots of Projects and Much More!\nMaster Serverless Development Using AWS Lambda and Node.js with this Project-Focused Course Today!",
      "target_audience": [
        "Anyone who wants to build serverless application on AWS will find this course very useful"
      ]
    },
    {
      "title": "Deep dive into Windows Presentation Foundation(WPF)",
      "url": "https://www.udemy.com/course/windows-presentation-foundation/",
      "bio": "Learn WPF in-depth with real time examples.",
      "objectives": [
        "Understand about the Features of WPF, Types of WPF Application and WPF Architecture.",
        "Understand about the XAML Advantages, Features and Role Of XAML In Building RICH Windows Applications.",
        "Understand the sophisticated GUI using WPF Controls, Menu and Status Bar.",
        "Understand Event Handling and Custom Commands.",
        "Understand about the Look and Feel using Custom styles.",
        "Understand about the types of brushes, Static & Dynamic resources and Scope of Resources.",
        "Reuse UI using User Control.",
        "Explore WPF Data Binding Controls and interacting with data.",
        "Understand about the fixed and flow documents.",
        "Managing animations and media."
      ],
      "course_content": {
        "WPF Introduction": [
          "WPF Introduction"
        ],
        "First WPF Application": [
          "First WPF Application"
        ],
        "XAML Overview": [
          "XAML"
        ],
        "Layout Controls": [
          "Using Layouts Containers"
        ],
        "About Window Properties": [
          "About Window Properties"
        ],
        "Controls and Menus": [
          "Content Controls"
        ],
        "Text Controls": [
          "Text Controls"
        ],
        "Shape Controls": [
          "Shape Controls"
        ],
        "Container Controls": [
          "Container Controls"
        ],
        "Media Controls": [
          "Media Controls"
        ]
      },
      "requirements": [
        "Good knowledge of C# programming",
        "Should have at least startup experience in developing GUI applications using Winforms",
        "Knowledge of ADO .NET though is not necessary but will be an added advantage"
      ],
      "description": "WPF (Windows Presentation Foundation) is for building aesthetic applications with very advanced Look and feel features. The WPF engine is responsible for creating, displaying and manipulating user-interfaces, documents, images, movies and media in ”Rich UI Windows Applications”. It replaces Winform API which was traditionally used for developing GUI in windows based application. The architecture used for development is very much inspired from ASP.NET WebForms where design (in XAML file) is separated from code (in .cs file). This is the reason the design can be independently created in some tool like Microsoft Expression Blend and coding can be done using Visual Studio IDE.\nBestDotNetTraining’s WPF Online Training covers all aspects of WPF right from basic controls to layouts to themes to manage 3D drawing and animation which will help one to build Windows 8 and MS Word 2013 kind of Look and feel for the applications. Mr. Sandeep Soni, MCPD has ensured that all the topics are covered in maximum possible depth. Special focus is put on WPF Data binding which is the most important topic in building data centric applications.\nThis WPF training course explains every topic with relevant walkthroughs and sample programs. For each and every module we have provided the compressed form of project developed while explaining the concept in video.",
      "target_audience": [
        "Beginners to quickly start developing Windows apps with rich UI",
        "Any experienced WPF-developer who would like to refine their knowledge in the platform"
      ]
    },
    {
      "title": "Core HTML How to get online quickly HTML to HTML5",
      "url": "https://www.udemy.com/course/web-development-introduction-html-html5-course/",
      "bio": "Learn HTML all the basic fundamental building blocks to create websites. Learn HTML from scratch. HTML5 CSS explained",
      "objectives": [
        "Develop and create HTML web pages",
        "Use HTML elements to create web content",
        "Add attributes to customize HTML elements",
        "Create basic HTML web templates",
        "Create HTML5 templates",
        "Starting building blocks to become a web developer"
      ],
      "course_content": {},
      "requirements": [
        "Desire to learn HTML"
      ],
      "description": "This is the ultimate course to learn about HTML.\nLearn to create HTML and HTML5 templates - which can be the base for infinite number of new web pages.\nWe walk you through all the elements and tags used within HTML and help you understand where to apply them.  Whether you are a beginner or want to update your skills, this course is for YOU!\nWe have you covered, learn with our proven instructional style, where we don't waste your time typing on screen.  We get right to the point, showing examples and explaining what they do.  HTML has never been easier to learn, and you will be able to create and HTML webpage at the end of this lesson.\nEverything you need to learn about HTML is provided within this course.\nno wasted time watching someone type\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nHTML and HTML5 template code included\nquick response support to students\nregular discussions\nLearn how HTML5 works and it's fundamental concepts. Learn to build your own website.  Learn how to use HTML!",
      "target_audience": [
        "Anyone interested in Web development",
        "Anyone who wants to become a web developer",
        "Anyone who wants to learn more about HTML and how to use it",
        "Interest in growing your understanding of HTML"
      ]
    },
    {
      "title": "Bot Building Basics",
      "url": "https://www.udemy.com/course/bot-building-basics/",
      "bio": "Using No Code with the Microsoft Bot Framework",
      "objectives": [
        "Describe Microsoft's Bot Framework.",
        "Describe what bots are currently deployed.",
        "Leverage using the Bot Framework to develop a Question and Answer chat bot.",
        "Create a chat bot using the QnA Maker tool"
      ],
      "course_content": {
        "Introduction to Bot Building Basics": [
          "Welcome to Bot Building Basics",
          "Course Introduction",
          "Instructor introduction"
        ],
        "Getting Started with Bots": [
          "Getting Started with Bots",
          "What is a Bot",
          "Examples of Bots",
          "Places Where Bots are Found",
          "Bot Review",
          "Getting Started with Bots Check-Up"
        ],
        "Understanding Microsoft's Bot Framework": [
          "Understanding Microsoft's Bot Framework",
          "What is the Microsoft Bot Framework",
          "Creating a Microsoft Azure Account",
          "Accessing the QnA Maker",
          "Making a Q and A Bot",
          "Updating the Knowledge Base",
          "Testing the Knowlege Base",
          "Publishing the Knowledge Base",
          "Bot Framework Review"
        ],
        "Adding and Configuring Channels": [
          "Adding and Configuring Channels",
          "Registering the Bot and Configuring a Skype Channel",
          "Configuring an SMS Channel",
          "Adding and Configuring Channels Review"
        ],
        "Wrap Up": [
          "Possible Use Cases for Bots",
          "Where to get Additional Information",
          "Goodbye"
        ]
      },
      "requirements": [
        "Students should be able to use a PC at a beginner level.",
        "Students should be able to navigate the internet.",
        "We will be using aspects of Microsoft's Azure platform. Having an Azure account is not a requirement as we will go over how to set up a trial account with $200 worth of credits."
      ],
      "description": "This course will not only teach you the basics about bots, it will also show you how to make your own bot using NO CODE on the Microsoft Bot Framework.\nBots are becoming more ubiquitous to our daily internet lives.  There is hardly a place you can go online without interacting with a bot, whether you knew it or not. And there are different types of bots who do various kinds of things. From indexing web pages to finding information even to book airplane flights.\nTo this point, bots were usually created by programmers. And the cost to make them was high.  The everyday person could not use them for their purposes.  With this course, you will learn about the different types of bots, why they exist, along with what they do. All in a very easy to understand (no techspeak, I promise) format with lectures, demonstrations, and step-by-step instructions.\nWe will use the Microsoft Bot Framework to build our very own bot. And we will connect the bot to the outside world through SMS text messaging.  So, you will be able to share your bot with other people! This course will also give you some ideas and examples of other types of bots that you may wish to create afterward.\nIf you are looking to learn about bots, build a bot or see examples of bots working on the internet, then this course is for you.",
      "target_audience": [
        "This course is for people who wish to build bots.",
        "This course is for anyone who has an interest in bots.",
        "Anyone interested in the Microsoft Bot Framework",
        "Anone interested in NO-CODE solutions"
      ]
    },
    {
      "title": "Mastering Lightning Datatable in Salesforce LWC",
      "url": "https://www.udemy.com/course/mastering-lightning-datatable-in-salesforce-lwc/",
      "bio": "The only course that deep-dives into advanced features like Inline Editing, Pagination, Sorting, Validation & much more!",
      "objectives": [
        "Create a lightning datatable in LWC from scratch",
        "Add row level actions, sorting, header actions to lightning datatable",
        "Apply infinite loading, selecting rows programmatically, add dynamic row level actions",
        "Creating a custom cell type, add inline editing for the same",
        "Show static and dynamic errors, add accessibility and save records to salesforce"
      ],
      "course_content": {
        "Create a basic lightning datatable in LWC": [
          "Create a lightning datatable in LWC with static employee data",
          "General Guidelines"
        ],
        "Query contacts from salesforce and display them in datatable": [
          "Write apex controller",
          "Update JavaScript controller to fetch and display data in our datatable",
          "Deep dive into Js object structure/format to display records in our datatable"
        ],
        "Improve look and feel of lightning datatable": [
          "Format data according to data type",
          "Show row number column, hide checkbox column and add row number column offset"
        ],
        "Add row actions to lightning datatable": [
          "Add row actions"
        ],
        "Apply sorting to lightning datatable": [
          "Implement datatable properties related to sorting and define handleSort method",
          "Implement handleSort() and sortBy() method for sorting datatable records",
          "Deep dive into sortBy() method",
          "Handle undefined values while sorting our data in lightning datatable"
        ],
        "Add header actions to lightning datatable": [
          "Hide default header actions from lightning datatable",
          "Add new (custom) header actions to our lightning datatable",
          "Implement handleHeaderAction() & tick the selected option in header actions menu",
          "Update/Filter records in lightning datatable as header action is selected"
        ],
        "Select rows programmatically, add infinite loading and apply column widths mode": [
          "Apply auto column widths mode",
          "Apply fixed column widths mode",
          "Select rows initially and programmatically in lightning datatable",
          "[Optional] Deep Dive into slice() and map() functions"
        ],
        "Infinite loading in lightning datatable": [
          "Update apex controller",
          "Update getContacts() & define loadContacts() to load more records as we scroll",
          "Fix loadMore() issue by preventing multiple apex calls and adding spinner",
          "Note",
          "Simplify/Improve Code - Query contacts only if there are contacts in salesforce"
        ],
        "Apply infinite loading along with datatable filters": [
          "Update apex controller",
          "Apply \"Enable Infinite Loading\" and \"Is Loading\" lightning datatable attributes",
          "New approach to implement infinite loading along with datatable filters - Theory",
          "Ensuring infinite loading works properly with record filtering",
          "Demo, Summary and Wrap Up"
        ],
        "Dynamic row level actions and inline editing": [
          "Add dynamic row level actions",
          "Apply inline editing - code changes",
          "Inline editing - demo and code explanation"
        ]
      },
      "requirements": [
        "Basic knowledge of LWC and JavaScript. However, we'll implement everything from scratch"
      ],
      "description": "As a salesforce developer, you'll come across many instances in multiple projects where you need to show records in a table. Lightning Datatable is a reusable component provided by salesforce using which you can display records easily. Welcome to Mastering Lightning Datatable in Salesforce LWC course, where you'll learn everything about lightning datatable from scratch. It doesn't matter if you've implemented lightning datatable before in LWC or not. We'll start from the very basics i.e. implementing a working lightning datatable from scratch within 10 minutes which will show static data and will go till advanced level, including our own custom datatable cell component.\nWhile you'll find many courses/platforms that covers LWC basics, it doesn't offer a comprehensive, hands-on guide to mastering the lightning-datatable component. This course is designed to fill that exact gap.\nGet straight to the point. Stop sifting through 40-hour LWC bootcamps for the one component you need. This course is a focused, 8-hour deep dive into every feature of Lightning Datatable.\nTo give you a high level idea, starting from the very basics of datatable, we'll cover a lot of topics including but not limited to: row level actions, header actions, infinite loading, sorting, defining a custom cell type, validations and interaction with apex controller.\n\n\nCourse Features\nHD Videos\nDetailed Explanations\nAll Concepts Covered - Beginner to Advanced\nExtra Learning Resources\nCertificate of Completion\n\n\nThe course is your stepping stone in becoming an amazing salesforce developer. We'll be doing a lot of coding and lwc development in this course which is super fun starting from the very first video. It'll not only help you master lightning datatable implementation in lwc, it'll also help you to level up as a salesforce developer. We'll code a lot of JavaScript together, learn LWC concepts like: child to parent communication using events, custom attributes etc. and thereby implement some amazing functionality in lightning datatable which you might have never implemented before!\n\n\nThis course is taught by Rahul Malhotra, who is a blogger and youtuber at SFDC Stop. He has delivered various live technical sessions at International and National Salesforce Conferences and other global gatherings including ApexHours, Cactusforce 2022, TrailheaDX India 2019, Dreamforce 2018, IndiaDreamin 2018, Jaipur Developer Fest 2018 as well as other global gatherings of Salesforce.",
      "target_audience": [
        "Anyone who would like to level up their skills in LWC and Master Lightning Datatable implementation in Salesforce"
      ]
    },
    {
      "title": "Full Stack Web Development with Vue Js, NodeJS, MongoDB, JS",
      "url": "https://www.udemy.com/course/full-stack-web-development-with-vue-js-nodejs-mongodb-js/",
      "bio": "Vue and Vuejs Projects, Full Stack Web Development with Html, Css, Bootstrap, Javascript, NodeJS, MongoDB, Express Js.",
      "objectives": [
        "How to create Web Application with Vue, Vue JS.",
        "Vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "What is Vue JS?",
        "Most important Vuejs topics.",
        "How to create multi-page web app with vue-router in vue js.",
        "How to manage the data of our application with the vuex.",
        "How to easily build the largest and most advanced applications using vue and vuex.",
        "Whether you’re building a full single-page application or merely add interactivity to your existing app, Vue js has a spectrum of tools to help you.",
        "If you’re looking for a JavaScript web framework that isn’t going to drown you in complexity, take a look at Vue js.",
        "Vuejs takes what other frameworks have done before, but does it in a way that’s fresh and easy-to-use",
        "What are Javascript variables, why are they used",
        "What is Javascript Boolean Logic",
        "How to include JS File in HTML CSS Javascript",
        "What is conditional statements (if else, switch case, ternary operator), how to use in Javascript",
        "How to write Javascript Functions, what are the differences between Function Decleration and Function Expression",
        "What is Javascript loops (for loops, while loops, continue and break statements), how to use them",
        "How to create Javascript Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "How to create Javascript objects, how to update them, object methods",
        "What is DOM, how to manipulate DOM in Javascript",
        "JavaScript is a text-based computer programming language used to make dynamic web pages.",
        "What is JavaScript? JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for webdevelop",
        "What are the main uses of JavaScript? JavaScript is a text-based programming language used for client- and server-side development.",
        "React vs. Angular vs. Vue: what is the best JavaScript framework? Choosing the best JavaScript framework for your web project depends on what you are lookingfor",
        "What is JSON and what is it used for? Because of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects.",
        "With all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences.",
        "Learn Bootstrap 4 and UIs from scratch",
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap",
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Master every single Bootstrap component",
        "Learn to compile Sass in the easiest way possible using a GUI",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "Learn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element",
        "HTML & CSS",
        "Learn to create static HTML sites",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "We will learn to place pages in the easiest way by talking about all layout models in CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "You will learn to use basic tags which are used commonly",
        "You will be able to prepare lists in different formats",
        "Learn the difference in usage between block level and inline elements in HTML",
        "By learning the use of HTML table, you will be able to create different designs of your own",
        "You will be able to create commonly used user login and registration pages by learning the form structure.",
        "In the developing world, we will talk about all the details about web design compatible with different screens.",
        "As with all of our courses, you will learn by doing too many hands-on examples.",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "Bootstrap promotes a mobile-first approach to web design, offering a suite of templates and components that automatically render for use on any device.",
        "HTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML",
        "HTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML.",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.”",
        "Learning how to code HTML without also learning CSS is like learning how to read but not write.",
        "What is Cascading Style Sheets (CSS)? CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "CSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Install MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "MongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows.",
        "It’s schemaless nature allows greater flexibility or changing application requirements. It’s one of the best databases in terms of developer productivity.",
        "MongoDB is an document-oriented database designed to allow developers to scale their applications to meet scalability demands.",
        "MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster.",
        "Nodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the key concepts of the Express JS",
        "Express Route parameters",
        "Middleware & Static files",
        "Query Strings"
      ],
      "course_content": {
        "Welcome Course:": [
          "Built a Real-World Website with HTML and CSS",
          "HTML CSS Bootstrap Project Files and Course Documents",
          "General Terms",
          "How the Website Works?",
          "What Is IDE?",
          "Project Files",
          "First Webpage"
        ],
        "HTML Fundamentals": [
          "About the Section",
          "What is HTML?",
          "HTML Document Structure",
          "Text Element",
          "Lists",
          "Images",
          "Hyperlinks",
          "Container Elements",
          "What is Semantic HTML?",
          "Creating Tables with HTML",
          "Colspan & Rowspan",
          "Working With Form Elements",
          "Checkbox",
          "Input type; Radio & File",
          "Select & Option",
          "New Visual Studio Code Extensions",
          "Challenge",
          "Let’s Make the Challenges",
          "Challenge Solutions Continue",
          "Quiz"
        ],
        "CSS Fundamentals": [
          "About the Section",
          "What is CSS",
          "Styling Methods-Inline, Internal and External",
          "Let’s Do Some Styling",
          "Combining Selectors",
          "Style Operation With Class and Id Assignment",
          "Order of Priority in CSS",
          "Working with Colors",
          "Working with Colors on Code",
          "Using Border in CSS",
          "Pseudo-Class in CSS",
          "Styling Hyperlinks With Pseudo-Class",
          "Crome DevTools",
          "Important Advices for CSS",
          "Challenge 1",
          "Box Model",
          "Margin & Padding",
          "Let’s Start Using Margin & Padding",
          "Dimensioning with CSS",
          "Let’s Centre Our Page",
          "Challenge 2",
          "Types of Boxes",
          "Element Positioning with CSS",
          "Use of Fixed and Sticky",
          "Creating Shadow in CSS",
          "Challenge 3",
          "Quiz"
        ],
        "Layout on Webpage": [
          "About the Section",
          "3 Ways to Create Layout on Web Pages",
          "Float",
          "Flexbox",
          "Flexbox Overview",
          "Let’s Keep Using Flexbox",
          "Flex-Wrap",
          "Adding Flexbox to Our Project",
          "Adding Flexbox to Our Project 2",
          "Let’s Change the Page Layout with Flexbox",
          "Introduction to CSS Grid",
          "What Is CSS Grid?",
          "Let’s Continue Examining CSS Grid Features",
          "Other Grid Features",
          "Quiz"
        ],
        "Media Query and CSS Animations": [
          "Section Overview",
          "Media Query and CSS Animations Code Samples",
          "Responsive Menu Making With Media Query",
          "CSS Animations",
          "Making a Slider Menu With Transform",
          "Keyframes",
          "Animation Examples With Keyframes",
          "Quiz"
        ],
        "Portfolio Website": [
          "Portfolio Website",
          "Let’s Start Creating the Sections",
          "Let’s Start With Header Creation",
          "Home Section",
          "About Section",
          "Services Section",
          "Portfolio Section",
          "Contact Section & Footer",
          "Responsive Page Design"
        ],
        "Bootstrap 5 Fundamentals": [
          "Bootstrap 5",
          "Bootstrap Project Files",
          "How to Integrate Bootstrap Into Applications",
          "Container and Container Fluid",
          "Bootstrap 5 Typography Review",
          "Text Features",
          "Use of Colors",
          "Spacing",
          "Border",
          "Display",
          "Position Relative & Absolute",
          "Position Fixed & Sticky",
          "Sizing",
          "Buttons",
          "Using Images Classes",
          "Other Bootstrap 5 Features",
          "Quiz"
        ],
        "Bootstrap 5 Advanced": [
          "Grid",
          "Using Bootstrap Grid Structure on Different Screen Size",
          "Aligning Columns and Gutters",
          "Let's Start Using Flex with Bootstrap 5",
          "Vertical and Horizontal Alignment in Flex Structure",
          "Other Flexbox Features",
          "List Group",
          "Form Classes",
          "Let's Continue Working with Form Elements",
          "Other Input Features",
          "Creating Tables With Bootstrap 5",
          "Quiz"
        ],
        "Bootstrap Features Working With JavaScript": [
          "Bootstrap Features Working With Javascript",
          "Dropdown",
          "Modal",
          "Carousel",
          "Collapse & Accordion",
          "Quiz"
        ],
        "Bootstrap 5 Project": [
          "Project Presentation",
          "Navbar",
          "Let’s Start Creating Carousel",
          "Let’s Start Creating the Main Section",
          "Creation of Students and Questions Sections",
          "Creation of Contact and Footer Section"
        ]
      },
      "requirements": [
        "How to easily build the largest and most advanced applications using vue, vue js and vuex.",
        "Desire to learn about vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "Desire to learn Javascript and Javascript Projects.",
        "Desire to build web site with html css bootstrap.",
        "This course will take you from scratch to the advanced level.",
        "Watching the lecture videos completely, to the end and in order.",
        "Determination and patience to learn.",
        "Willingness and Motivation to successfully complete the training",
        "Desire to learn Modern Javascipt.",
        "Desire to learn javascript libraries; React, Angular, NodeJS.",
        "Desire to learn Bootstrap 4 and develop bootstrap 4 projects",
        "Desire to learn Javascript Apps",
        "No prior Bootstrap, HTML CSS knowledge needed",
        "You will be learning bootstrap from scratch",
        "Desire to learn HTML, CSS, Bootstrap",
        "Computer with access to the internet",
        "Nothing else! It’s just you, your computer and your ambition to get started today.",
        "Basic understanding of JavaScript",
        "Any device where you can watch the course such as a mobile phone, computer or tablet",
        "Determination to learn MongoDB, Mongoose, Nosql, mongodb",
        "Desire to have detailed knowledge about MongoDB",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Desire to learn full stack web development using MongoDB",
        "Desire to learn mern stack full stack web development, nodejs, express, mongodb",
        "Ability to install software on your computer",
        "Basic HTML knowledge",
        "Basic understanding of JavaScript",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device."
      ],
      "description": "Vue, vue js, vuejs, nuxt, vue.js, vue 3, nuxt js, veux, javascript, javascript projects, front end web development, nodejs, node js\nbootstrap, bootstrap 4, bootstrap project, html, css, full stack web development, full stack development, web development.\nHello,\nWelcome to the \" Full Stack Web Development with Vue Js, NodeJS, MongoDB, JS \" course.\nVue and Vuejs Projects, Full Stack Web Development with Html, Css, Bootstrap, Javascript, NodeJS, MongoDB, Express Js.\nVue (pronounced like view) is a frontend development framework for JavaScript (JS) that you can use to build web-based user interfaces. You can also use vue js to create one-page applications and handle animations, interactive elements, and graphics. Generating projects is also possible with the user-built presets, which is commonly applicable for coders working in enterprise environments. Because vuejs is based on JavaScript, you can easily integrate Vue into an existing JS project. Nodejs, node js, node, node.js, nestjs, mongodb, Mongodb, nosql, mongoose, mongodb for beginners, mongodb, nosql database, mongo,javascript, javascript projects.\nWhether you’re trying to build a full single-page application or merely add a bit of interactivity to your existing app, Vue.js has a spectrum of tools to help you get your job done, and that course can help you get up and running quickly.\nIf you’re looking for a JavaScript web framework that isn’t going to drown you in complexity, take a look at Vue.js. Vue.js takes what other frameworks have done before, but does it in a way that’s fresh and easy-to-use. Using Vue.js lets you focus your application rather than on your framework.\nJavaScript is a very important programming language for internet applications.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nJoin more than 12 million learners and train up on JavaScript on Udemy. Choose from a wide range of top-rated JavaScript courses. From back-end development to app or website building, we’ve got you covered. Our real-world experts can lead you through hands-on projects to apply your skills.\nJavaScript is a text-based computer programming language used to make dynamic web pages. A must-learn for aspiring web developers or programmers, JavaScript can be used for features like image carousels, displaying countdowns and timers, and playing media on a webpage. With JavaScript online classes, you can learn to build interactive web applications, choose the best framework, and work with other programming languages like HTML and CSS.\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload.\nMongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows. It’s schemaless nature allows greater flexibility or changing application requirements. It’s one of the best databases in terms of developer productivity.\nMongoDB is an document-oriented database designed to allow developers to scale their applications to meet scalability demands. MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster.\nLearning Node.js is a great way to get into backend web development, or expand your fullstack development practice. With Udemy’s hands-on Node.js courses, you can learn the concepts and applications of this wildly useful JavaScript runtime.\nNode.js is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal. Node is designed around an event loop, which allows for easy management of asynchronous functions. This makes it a popular environment for modern developers working on chat and gaming apps.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.\nExpress. js is a free and open-source web application framework for Node. js. It is used for designing and building web applications quickly and easily.\nExpress is a fast, assertive, essential and moderate web framework of Node.js. You can assume express as a layer built on the top of the Node.js that helps manage a server and routes. It provides a robust set of features to develop web and mobile applications.\nWhether you’re interested in mastering responsive web design, creating WordPress templates using Bootstrap, or integrating Bootstrap with HTML5, and CSS3, Oak Academy has a top-rated course to help you achieve your goals.\nBootstrap is a free frontend web development framework for creating responsive websites. Bootstrap promotes a mobile-first approach to web design, offering a suite of templates and components that automatically render for use on any device.\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML. Whether on a mobile device or a computer, every website that you browse is designed with HTML.\nHTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements.\nLearning how to code HTML without also learning CSS is like learning how to read but not write. All of your hard web development work is lost if you don’t optimize it for different screen sizes. Udemy has top-rated courses to show you how CSS helps you do just that.\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work, and is rightfully considered a cornerstone of internet technology.\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page.\n\n\nIn this course you will learn to develop web applications with Vue JS, Vuex from scratch.\nIf you are thinking to realize your dream web application, this course is for you.\nWe have explained Vue and Vuex from beginner to all levels. We have explained all the topics as simple as possible with examples, slides, and diagrams.\nWe have created a lot of projects while explaining the subjects. Because we believe that applied educations are much more useful than other teaching methods.\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels.\nIn this tutorial you will learn;\n\n\nHow to create Web Application with Vue JS.\nMost important Vue JS topics.\nHow to create multi-page web app with vue-router.\nHow to manage the data of our application with the vuex.\nHow to easily build the largest and most advanced applications using vue and vuex.\nHow you can operate on variables in javascript,\nBoolean logic in javascript,\nHow to create a conditional statement in javascript,\nHow you can perform transactions with Loops in javascript,\nHow a function is created and why it needs arguments in javascript,\nHow Arrays and Objects, which are basic data structures, are created in javascript,\nHow DOM Manipulation is done in javascript,\nYou will have learned and have the opportunity to test what you have learned with the code quizzes in our course.\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nThe logic behind MongoDB ’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nMongoDB\nMongoose\nNosql\nFull stack web development for database MongoDB\nMongoDB for beginners\nMongo DB\nNode js can generate the dynamic page content\nNode.js can create, open, read, write, delete, and close files on the server\nnode js can collect form data\nnode.js can add, delete, modify data in your database\nNodeJS\nExpress JS\nNode.JS\nBackend web development with nodejs and express framework\nBackend Web Development with Full stack Web development\n\n\nWhat is Vue JS?\nVue (pronounced like view) is a frontend development framework for JavaScript (JS) that you can use to build web-based user interfaces. You can also use it to create one-page applications and handle animations, interactive elements, and graphics. Generating projects is also possible with the user-built presets, which is commonly applicable for coders working in enterprise environments. Because it is based on JavaScript, you can easily integrate Vue into an existing JS project. Vue uses the traditional Model-View-Controller (MVC) architecture, which means that the core library of Vue.js focuses on the view layer by default. It enforces a one-way data flow between components. This also makes it easy for you to integrate with other libraries or existing projects. Vue also uses virtual DOM (Document Object Model), which makes it faster than regular DOM. Instead of re-rendering the whole page, Vue only updates the objects that you change.\nWhat is the difference between Vue and React?\nAlthough Vue has an MVC architecture, you cannot use it with a different architectural approach, which differs from the Component Based Architecture (CBA) used in React. They also differ in how they optimize data. When a component’s state changes in React, it triggers the re-render of the entire component sub-tree, starting at that component as the root. Vue automatically tracks a component’s dependencies during its render, so the system knows which components actually need to re-render when the state changes. In React, everything is in JavaScript. Vue, on the other hand, embraces web technologies like HTML, CSS, and JavaScript and allows you to build off of them. Another difference between these frameworks is how you can scale up your projects. React only offers a single template that assumes you’re building a single-page application, while Vue offers several default options for multiple purposes and build systems.\nIs Vue JS easy to learn?\nVue JS can be easy to learn. Unlike other frontend technologies, Vue doesn’t require in-depth knowledge of libraries. If you want to start learning Vue, all you need to have is basic knowledge of HTML, CSS, and JavaScript. Compared to other coding technologies, developers typically classify Vue.js as having an easy learning curve. This is due largely in part to Vue’s reputation for having an elegant programming style and patterns. Because Vue is a progressive framework, it makes it easy for you to use it to integrate into an existing project. Because of its familiar templating syntax and use of components, you may find that integrating or migrating existing projects to Vue is fairly straightforward. Vue is known for offering a vast ecosystem of tools and companion libraries, making it a simple framework that you can use to respond to the complex needs of enterprise-grade applications.\nWhat is Vuex used for?\nVuex is a state management pattern + library for Vue. js applications. It serves as a centralized store for all the components in an application, with rules ensuring that the state can only be mutated in a predictable fashion.\nWhat is difference between Vue and Vuex?\nVue is a progressive Javascript framework and Vuex is the state management tool. We can use redux or flux inside Vue, But Vuex is native to the Vue.\nWhy do I need Vuex?\nVuex is a popular way to handle a complex app's authentication in Vue. With Vuex, you're able to handle the token's availability and access controls and route blocks throughout your app. Mutations, getters, and setters assist with this task.\nHow does Vuex store work?\nIt works by having a central store for shared state, and providing methods to allow any component in your application to access that state. In essence, Vuex ensures your views remain consistent with your application data, regardless of which function triggers a change to your application data.\nWhen Should I Use It?\nVuex helps us deal with shared state management with the cost of more concepts and boilerplate. It's a trade-off between short term and long term productivity.\nIf you've never built a large-scale SPA and jump right into Vuex, it may feel verbose and daunting. That's perfectly normal- if your app is simple, you will most likely be fine without Vuex. A simple store pattern (opens new window)may be all you need. But if you are building a medium-to-large-scale SPA, chances are you have run into situations that make you think about how to better handle state outside of your Vue components, and Vuex will be the natural next step for you.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhat is AJAX and what is it used for?\nAJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications. AJAX uses XHTML for content, CSS to style the page, and JavaScript for controlling content dynamically. AJAX allows you to update a web page without reloading the page (this technique is called a “SPA” or Single Page Application), request data for the page after it has loaded, receive data after the page has loaded, and send data to the server in the background. Despite XML being part of the acronym that makes up AJAX, AJAX can send and receive data in any format, including JSON or plain text. While traditional web applications use synchronous methods to send and receive information from a web server, AJAX can use asynchronous API calls in the background without blocking activity in the browser. AJAX is a data-driven rather than a page-driven technology.\nHow can I teach myself Javascript?\nOne of the best ways to learn to write code is through an online course that teaches you how to write JavaScript with an instructor that will explain the code, what versions you should use, and why. Learning to develop a real-world application, with an instructor explaining in a step-by-step fashion, will teach you modern code techniques.\nWhat is the best IDE for Javascript?\nWith all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences. Webstorm is a popular JavaScript IDE from JetBrains. It provides fast static code analysis, integrated testing, local history, code refactoring, and debugging. While the IDE requires a paid subscription, many developers swear by it because of its compatibility with JavaScript, HTML, and CSS. Those searching for a free option might prefer VS Code. This general-purpose, open-source IDE comes with IntelliSense, Git integration, and debugging features built-in. Many third-party extensions are available to add new language and programming features, making it one of the more flexible choices. Atom is another general-purpose IDE that is popular with JavaScript developers. It is also free, open-source, and has third-party extensions to add functionality.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s a free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nWhat is microservices architecture and how can Node.Js be used for it?\nMicroservices architecture is a software development style or method where single-function modules originate. Each has a very well-defined operation and interface and can deploy on its own. In essence, it’s a way of developing modules that you can repurpose from one program or application to another. When you create an application, it’s a collection of modules that have been thoroughly tested and are well-maintained. The modules are typically built around different business-specific capabilities and are then loosely coupled to other modules when deployed as part of a program. You can use Node.Js in microservices architecture as the language of choice for one, some, or all of the microservices (or modules). The beauty of microservices is that you can use the best language for the specific microservice. But where highly scalable, fast programs are needed, Node.Js would be a top contender.\nWhat is HTML and why is it important?\nHTML stands for a hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is an HTML element and why is it important?\nHTML is designed on a modular basis, meaning every part of the web page has a specific “place.” An HTML element is a part of the page. Common HTML elements include “<p>” for a “paragraph” and “<title>” for the “title” of the page. In fact, the entirety of the HTML page is within the “<html>” element. Elements are begun and ended with tags, so a title would be written: “<title>This is the Title to the page.</title>” Organizing code this way makes it easier to reference and control. Each element may also have characteristics. For instance, the “<p>” (paragraph) tag can be aligned in a certain direction. These are the basic building blocks of HTML and what most designers should learn first.\nIs HTML a programming language?\nHTML is not considered a programming language but rather a markup or formatting language. This is an important distinction. Formatting languages merely control how things are displayed on a visual level, whereas programming languages are more dynamic; they use logic gates to determine the behavior of a program. But there is some crossover. “DHTML,” for instance, refers to Dynamic HTML. It is a type of HTML augmented by Javascript to make it easier to adjust on the fly. Because HTML, Javascript, and CSS are so frequently used together, they can often be folded together, which can contribute to some confusion regarding whether HTML is a programming language.\nIs HTML hard to learn?\nHTML is known as one of the easiest languages to learn. It’s also one of the most ubiquitous. Many individuals interested in front-end, back-end, or full-stack development will learn HTML first. While HTML is largely intended for websites as a language, it is also used in many other programs. For example, when you create an email signature, you will usually be using HTML. Emails themselves use a combination of HTML and CSS. An advantage (and an occasional double-edged sword) to HTML is that it is very forgiving. You can get some HTML wrong, and your page will still be displayed, if not exactly how you want it to be.\nWhat jobs use HTML?\nNearly any development or design job will require a cursory understanding of HTML. HTML has also evolved dramatically since it was originally developed; it is far more complex and standardized than before. Because of this, even those who have been experts in HTML during their career may need to undergo an HTML refresher periodically. Most jobs that require HTML will involve web design, web development, or layout and design. For example, someone who manages a content management system such as WordPress may not need to know any other programming languages but should still know HTML basics. Similarly, someone who formats online newsletters or an online magazine in an administrative capacity may not need to be a web designer or web developer but might need to understand the principles of HTML.\nWhat is responsive design?\nResponsive design is a new type of design intended to respond to the platform and environment that a user is on. When HTML was created, most people used PCs. Today, people can browse a website on a PC, phone, tablet, or even a game console. In the past, developers created separate sites for “desktop” and “mobile.” While it worked, it wasn't easy to maintain. Rather than creating separate sites, responsive design generates the site based on the environment it detects. This greatly reduces the amount of development and maintenance for the site. Responsive design is generally achieved with a combination of HTML, CSS, and Javascript.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat skills should I have before learning CSS?\nBefore learning CSS, you should know the basics of using a computer and how to use a text editor because that is where you will be writing CSS. You should also be familiar with web browsers for browsing the web because it will inform your use of CSS. Since you may end up using specialized tools to write CSS, you should know how to install software on your computer and create and manage files and folders on your computer so you can create a CSS project. Once you have those skills down, the next thing to learn is HTML; after all, CSS is nothing without an HTML page to apply styles. That should be the basics you need to know to get started with CSS.\n\n\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Vue updates its system, and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\n· Seeing clearly\n· Hearing clearly\n· Moving through the course without distractions\n\nYou'll also get:\nLifetime Access to The Cours\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\nDive in now into;\n\" Full Stack Web Development with Vue Js, NodeJS, MongoDB, JS\nVue and Vuejs Projects, Full Stack Web Development with Html, Css, Bootstrap, Javascript, NodeJS, MongoDB, Express Js. \"\nWe offer full support, answering any questions.\n\nSee you on the other side!",
      "target_audience": [
        "Who wants to learn Vue with Vue js applications from scratch.",
        "Who wants to learn Vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "Who wants to learn how to create websites with Vue",
        "Anyone who trying to learn JavaScript but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real apps",
        "Who wants to learn today's most popular front-end architectures and take their Web development skills to the next level and learn a future-oriented technology.",
        "Take this course if you want to gain a true and deep understanding of JavaScript",
        "If you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "Those who want to learn the basics of JavaScript, the world's most popular programming language",
        "If you want to get started with programming: JavaScript is a great first language!",
        "People who want to learn Javascript projects",
        "People who want to learn javascript libraries; react, angular, nodejs",
        "People who want to learn javascript project, react node project, node js projects",
        "If you want to learn HTML 5 and CSS 3, Bootstrap 4 the first step in web development, completely and easily, you are at the right place.",
        "If you want to learn to build beautiful responsive websites with the latest Bootstrap version, Flexbox, HTML5, and CSS3!",
        "People who are willing to make a career in the Web Development",
        "If you want to building your own website, you should enroll",
        "Anyone who want to learn html css bootstrap",
        "Anyone who develop front end web development by using bootstrap",
        "People who want to develop html, css, bootstrap 4 projects",
        "Anyone who wants to learn MongoDB",
        "Anyone interested in NoSQL Schema",
        "Developers new to backend-side",
        "Professionals who are willing to learn MongoDB Database",
        "People who want to learn mongodb, mongoose, nosql",
        "People who want to learn nosql, mongoose, nodejs mongodb",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in Express with Node",
        "Developers new to Express and Node"
      ]
    },
    {
      "title": "Build CHATBOTS with Dialogflow (V1 & V2) and NodeJS",
      "url": "https://www.udemy.com/course/bots-with-dialogflow/",
      "bio": "BASICS TO ADVANCED. Learn to build Chatbots using the all-powerful NLP platform Dialogflow (V1 &V2) and Node.JS.",
      "objectives": [
        "Understand the concepts and different components of Dialogflow - Intents, Entities, Contexts, Actions, Events with examples. Learn step by step from basics to advanced concepts in Dialogflow",
        "Understand the importance of NLP in Bot development by writing bots in NodeJS without using any NLP for skype and facebook platforms and then using NLP (Dialogflow) platform",
        "Learn to write end to end bot from scratch using Dialogflow and NodeJS for Facebook messenger, Android and web applications",
        "Learn to deploy bot web services on cloud (Heroku)",
        "Learn to build an end to end real life bot from scratch using Dialogflow and NodeJS which tells bus arrival time given a bus stop number for Facebook messenger, Android application, A HTML/JS chatbot web application. Learners can use this example as template and build more interesting and useful bots"
      ],
      "course_content": {},
      "requirements": [
        "Javascript /NodeJS"
      ],
      "description": "Whether you are a novice would be bot developer or have just started your journey in bot development, this course will smoothen your journey  by explaining you the bot development process clearly with examples using Dialogflow and NodeJS.\nThis course teaches invaluable concepts of Dialogflow that are essential for creating bots for Facebook messenger, Skype, web and Android platform.\nDifficult concepts in Dialogflow like Webhook slot filling, validation of user inputs during backend fulfillment, and concepts like Entities, Contexts, Actions, Events are explained with live examples in NodeJS for better clarity which otherwise are not well documented on Dialogflow.comEach topic is covered in top down fashion with practical, hands-on examples.\nThe later part of the course covers some advanced concepts. A real-life Bus Arrival time bot is written in Node JS using Dialogflow for Facebook messenger, as an Android app and also as a chat enabled web application. The Bus Arrival time bot chats with the user and accepts a parameter called BusStop Number and provides the user the estimated time of arrival of all the busses at that stop. The Bus Arrival Time API is provided by Singapore's Land Transport Authority. The Bot uses the API to fetch live Bus arrival timings at a bus stop. Complete source code is provided for the learners to learn how an end to end bot is created using Dialogflow and NodeJS.\nUPDATE: Examples using Dialogflow V2 has been added recently. I will keep adding more examples using Dialogflow Version 2.",
      "target_audience": [
        "Anyone who wants to learn bot development and dialogflow"
      ]
    },
    {
      "title": "How To Build A Website From Scratch + Blogging Blueprint",
      "url": "https://www.udemy.com/course/how-to-build-a-website-from-scratch-blogging-blueprint/",
      "bio": "In this comprehensive course I'll show you how to succeed online quickly, and easily...",
      "objectives": [
        "Start A Cash-Generating Website Easily",
        "Build A Stunning Website From Scratch",
        "Install & Use Wordpress Like A Pro",
        "Install Beatiful Themes & Useful Plugins To Maximize Your Success",
        "Draw An Effective \"Treasure Map\"For Long Term Profits",
        "Write Highly Effective Website Content & Blog Posts",
        "Choose A Target Market That's Right For You!",
        "Design An Optin Incentive To Capture Leads",
        "Create A Top Converting Squeeze Page To Capture Those Leads",
        "Setup An Autoresponder Account From Scratch",
        "Write A Series Of Cash Producing Emails",
        "How To Automate The Process And Make Money On Autopilot",
        "How To Place Ads On Your Website To Make Quick Profits",
        "How To Build Your Brand Using A Step-By-Step Blueprint",
        "How To Write A Monthly Newsletter That Delivers RESULTS",
        "How To Create And Syndicate Fresh Content For Your Website",
        "The ONE HOUR Website Promotion That REALLY Works!"
      ],
      "course_content": {
        "Preparation, Motivation & Mindset": [
          "What Derails Entrepreneurs",
          "Let's Talk About Motivation & Mindset",
          "Website Fundamentals Domain And Hosting",
          "Let's Quickly Create A Wordpress Site"
        ],
        "Building Your Authority Site & Success Treasure Map": [
          "A Quick Tour Of Wordpress",
          "Which Wordpress Plugins Are Really Important?",
          "Themes And Design For Wordpress",
          "Before You Write, Draw A \"Treasure Map\" For Your Site",
          "Professional Quality Images and Illustrations",
          "6 Steps Towards A Blog Post That Works"
        ],
        "Credibility, Trust & Effective Blog Posts": [
          "Why Having A Target Market Matters",
          "Why Branding and Visual Continuity Matters",
          "Let's Create Your About Me Page",
          "Other Pages Worth Adding To Your Site",
          "Formatting Beautiful Blog Posts"
        ],
        "Building Your Passive Income Stream - THE LIST": [
          "Designing An Opt-In Incentive",
          "Creating An Opt-In Incentive",
          "Creating A Squeeze Page",
          "Setting Up Your Autoresponder"
        ],
        "Website Monetization & The Master Plan": [
          "Placing Ads On Your Blog",
          "Ads Aren't The Only Way To Monetize",
          "Consider Blogging For Brands",
          "So, What Happens Next?"
        ],
        "Long Term Profits With Your Newsletter, More Traffic, And Effective Promotion": [
          "Writing A Newsletter",
          "Large Scale Email Sequences",
          "Create And Syndicate Fresh Content",
          "Formatting Posts For SEO And Signups",
          "One Hour Blog Promotion"
        ]
      },
      "requirements": [
        "No Special Skills Required",
        "No Previous Experience Required",
        "No Tech Knowledge Required!"
      ],
      "description": "LATEST UPDATE: October, 2015\nIf you've been struggling to make money online, or even if this is the first time you learn how to build an online business that generates passive income for you and your family, this comprehensive course gives you THE EDGE, and shows you step-by-step how I've built an online empire that generates a job replacing income EVERY SINGLE MONTH. If you've ever wanted to have a home business and work in your own hours, that's the best course you can take to achieve the results you're looking for. Watch behind my shoulder as I'm doing this right in-front of your eyes.",
      "target_audience": [
        "Newbies Wanting To Create A Passive Income Generating Website",
        "Advanced Marketers Wanting To Improve Their Skills",
        "Home Business Seekers Looking For A System That REALLY Works!"
      ]
    },
    {
      "title": "React and Laravel: Breaking a Monolith to Microservices",
      "url": "https://www.udemy.com/course/react-laravel-microservices/",
      "bio": "Microservices Architecture, React, Next.js, Laravel, Docker, RabbitMQ, Event Driven Microservices, Internal APIs, Redis",
      "objectives": [
        "Develop a Monolith then Break it to Microservices",
        "Event Driven Architecture with RabbitMQ",
        "Multiple Database Connections",
        "Upload PHP packages to packagist",
        "Internal API Calls",
        "Use Docker",
        "React and Next js with Typescript",
        "Redux",
        "Pay with stripe Stripe"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel Admin": [
          "Installation",
          "Docker",
          "Routes",
          "Migrations",
          "REST",
          "Custom Requests",
          "Pagination",
          "Laravel Passport",
          "Login",
          "Middlewares",
          "Register",
          "Profile",
          "Roles",
          "Foreign Keys",
          "Api Resources",
          "Products",
          "Product Routes",
          "Images",
          "Image Controller",
          "Orders",
          "Order Routes",
          "Order Total",
          "Exporting CSV",
          "Permissions",
          "Creating Permissions",
          "User Permissions",
          "Permission Controller",
          "Gates",
          "Request Gates",
          "Chart",
          "Login with Cookies"
        ],
        "React Admin": [
          "Installation",
          "Template",
          "Components",
          "Router",
          "Child Props",
          "Register Form",
          "Async Await Calls",
          "Redirecting",
          "Login",
          "Logout",
          "Users",
          "Role",
          "Link and NavLink",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Prefilling User Data",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Deleter Component",
          "Creating Products",
          "Uploading Images",
          "Image Component",
          "Updating Products",
          "Orders",
          "Order Items",
          "Export CSV",
          "Chart",
          "Profile",
          "Updating Profile",
          "Redux",
          "Connect Redux with Components",
          "Typescript Getters",
          "Permissions",
          "Login with HttpOnly Cookies"
        ],
        "Laravel Influencer": [
          "Changing the database",
          "Route Prefixes",
          "Route Namespaces",
          "Products",
          "Product Search",
          "Common Routes",
          "User Type",
          "Drop Role Id",
          "Scopes",
          "Links",
          "Checkout Links",
          "Creating Orders",
          "Transactions",
          "Stripe",
          "Completing Orders",
          "Sending Emails",
          "Events and Listeners",
          "Revenue",
          "Stats",
          "Rankings",
          "Redis",
          "Caching Products",
          "Invalidating Cache",
          "Filtering cached data",
          "Redis sorted sets",
          "Nested Routes"
        ],
        "React Influencer": [
          "Admin Changes",
          "Setup",
          "Components",
          "Routes",
          "Redux",
          "useEffect",
          "Nav Component",
          "Header Component",
          "Main Component",
          "Rankings",
          "Stats",
          "Selecting Products",
          "Generating Links"
        ],
        "Next.js Checkout": [
          "Setup",
          "Template",
          "Route Query Params",
          "Getting Data",
          "Order Total",
          "Stripe",
          "Success and Error Pages"
        ],
        "Email Microservice": [
          "Setup",
          "RabbitMQ",
          "Dispatching Jobs",
          "Moving Emails",
          "Docker"
        ],
        "Users Microservice": [
          "Setup",
          "Database",
          "User Model",
          "Moving AuthController",
          "Importing User Data",
          "Internal API Calls",
          "User Service",
          "Scope Middleware",
          "Authorization",
          "Moving Paginated Users",
          "Moving UserController",
          "Removing User Instances",
          "Filtering Users",
          "Refactor User Class"
        ],
        "Checkout Microservice": [
          "Setup",
          "Migrations",
          "Docker",
          "Importing Data",
          "Moving Controllers",
          "Upload PHP Libraries to Packagist",
          "Listening to Events",
          "Queue Listener",
          "Publishing to Different Queues"
        ],
        "Influencer Microservice": [
          "Setup",
          "Migrations",
          "Importing Data",
          "Moving Controllers",
          "Adding Events and Listeners",
          "Redis"
        ]
      },
      "requirements": [
        "Laravel knowledge",
        "Javascript knowledge"
      ],
      "description": "Learn how to create a Monolith using React and Laravel then Learn how to move from that app to Microservices.\nIn this tutorial you will learn:\nCreate a SPA with React, Next.js and Laravel\nAuthenticate using Laravel Passport\nCreate Event-Driven Microservices with RabbitMQ\nUse Docker for each Microservice\nInternal APIs\nUse Redis and Stripe\nUse Redux\nRestrict routes for unauthorized users\nUpload PHP packages to packagist\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner Laravel developers curious about Microservices Architecture"
      ]
    },
    {
      "title": "Odoo 13 Website Development",
      "url": "https://www.udemy.com/course/odoo-13-website-development/",
      "bio": "Learn Odoo Website Development From Scratch.All What you need to get started developing Odoo Website",
      "objectives": [
        "Create new Website with Odoo",
        "Technical Development on Website Odoo",
        "Odoo Website Development",
        "Create Website From Scratch with Odoo"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation Odoo And Prepare environment of Development": [
          "Installation on Ubuntu 18.04",
          "Installation on Windows",
          "Install Python 3.7 on Windows",
          "Install Pycharm IDE on Windows"
        ],
        "Create Module & Configuration Odoo with Pycharm": [
          "Create New Module",
          "Create New Project With Pycharm",
          "Configuration Pycharm with Odoo"
        ],
        "Installation And Manage Website": [
          "Installation Website",
          "Manage Website",
          "Theme Customization",
          "Edit Menu And Manage Pages",
          "Website Builder",
          "Load Translation on Website"
        ],
        "Override Website Home Page & Create First Template Qweb": [
          "Override Website Home Page",
          "Create First Template Qweb"
        ],
        "Create New Models + Form / Tree View": [
          "Create Model",
          "Create Form | Tree View"
        ],
        "Create First Route And Menu": [
          "Understand Qweb Template",
          "Create First Route",
          "Create Menu"
        ],
        "Implement CRUD on Website": [
          "Create Method",
          "Read Method",
          "Update Method",
          "Delete Method"
        ],
        "Inheritance Qweb Template And Controller": [
          "Inheritance Qweb Template",
          "Inheritance Controller"
        ],
        "Import CSS & Javascript files": [
          "Import CSS File On Website",
          "Import Javascript File On Website",
          "How to Add Font Awesome Icons"
        ]
      },
      "requirements": [
        "Basic knowledge of the Python programming language is advised",
        "Knowledge of the basics of programming"
      ],
      "description": "Odoo 13 Website Development is dedicated to IT professionals, developers and integrators who want to starting  development  Website in Odoo.\nThe Course contains video series and all code developed during training will be provided.\nThis training is starting from setting up development environment of odoo to expert level customization .We assure that developers with basic Python knowledge can take this course and build their career in Odoo development.\nIn the end of this course you will be able to easily do all these points :\nInstallation Odoo Linux / Windows\nPreparation environment of development\nCreate first module Odoo\nInstallation & Manage Website\nOverride Website Homepage\nCreate First template Qweb\nCreate new models\nCreate Form / Tree View\nCreate First Route & Menu\nImplement CRUD on Website\nInheritence Qweb Template\nInheritence Controller\nAdding Differents Types of Fields in Website\nAdding Differents Components",
      "target_audience": [
        "Developers",
        "Students"
      ]
    }
  ]
}