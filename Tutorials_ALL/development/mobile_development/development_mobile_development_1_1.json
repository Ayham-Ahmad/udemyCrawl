{
  "courses": [
    {
      "title": "Flutter & Firebase Chat App: Master Flutter and Firebase",
      "url": "https://www.udemy.com/course/flutter-20-firebase-build-a-chat-app-for-ios-android/",
      "bio": "The Ultimate Flutter and Firebase Course: Develop A Powerful Flutter and Firebase Powered Chat Application",
      "objectives": [
        "Build a complete, real-world app with Flutter, Firebase and Dart",
        "Write production-ready code following best practices and become a competent Flutter developer",
        "Write iOS & Android apps with a single codebase using Flutter and Dart",
        "Fast-track your Flutter and Firebase learning with practical tips and proven techniques"
      ],
      "course_content": {
        "Introduction": [
          "Important",
          "Introduction",
          "Application Overview",
          "Creating Flutter Project",
          "Adding Required Packages"
        ],
        "Firebase Setup": [
          "Introduction",
          "Firebase Project Creation",
          "iOS Firebase Setup",
          "Android Firebase Setup",
          "Firebase Firestore Database Structure"
        ],
        "Spalsh Page and Internal Services": [
          "Introduction",
          "Create Splash Page",
          "Explanation Splash Page",
          "Initializing Firebase Application",
          "Creating Navigation Service",
          "Creating Media Service",
          "Creating Cloud Storage Service",
          "Creating Database Service",
          "Finishing Up Splash Page"
        ],
        "Login Page": [
          "Introduction",
          "Creating Login Page",
          "Adding Page Title",
          "Adding Form Fields",
          "Adding Login Button",
          "Adding Register Page Link"
        ],
        "Implementing Firebase Authentication": [
          "Introduction",
          "Creating Authentication Provider",
          "Creating User Model",
          "Creating A User In Firebase",
          "Creating Login Function",
          "Implementing Login Functionality",
          "Listening To Firebase Auth State Changes",
          "Implementing Database Service Functions",
          "Parsing User Data",
          "Navigating to HomePage"
        ],
        "Registration Page": [
          "Introduction",
          "Creating Registration Page",
          "Creating Profile Image Field",
          "Implementing Image Picker Function",
          "Adding Form Fields",
          "Adding Register Button"
        ],
        "Implementing Registration": [
          "Introduction",
          "Creating Registration Function",
          "Writing Firebase Cloud Storage Function",
          "Writing Firestore Create User Function",
          "Implementing Registration",
          "Redirection after Registration"
        ],
        "Home Page": [
          "Introduction",
          "Implementing Bottom Navigation Bar",
          "Creating Chats Page",
          "Creating Users Page"
        ],
        "Chats Page": [
          "Introduction",
          "Creating Top Bar",
          "Creating Chat Message Model",
          "Creating Chat Model",
          "Creating Custom List View Tile With Activity- Part 1",
          "Creating Rounded Image With Status Indicator",
          "Creating Custom List View Tile With Activity- Part 2",
          "Code Refactoring",
          "Creating Chats Page Provider",
          "Adding Chats Data To Firebase Cloud Firestore",
          "Get Chats For User From Firebase",
          "Get Last Message For Chat Chats From Firestore",
          "Setting up Chats Stream From Firestore For Firebase User",
          "Working with ListView Builder and Provider",
          "Update ChatTile Function"
        ],
        "Chat Page": [
          "Introduction",
          "Creating Chat Page",
          "Adding Top Bar",
          "Creating Chat Page Provider",
          "Adding CRUD Functions To Database Service",
          "Setting up Firestore Stream For Messages",
          "Creating Send Message and Delete Chat Functions",
          "Showing Messages In List View",
          "Creating Custom List View Tile",
          "Creating Text Message Bubble Widget",
          "Creating Image Message Bubble Widget",
          "Adding Message Text Form Field",
          "Adding Send and Image Message Button",
          "Sending Text Messages In Chat Using Firebase and Firestore",
          "Sending Image Messages In Chat Using Firebase Storage",
          "Fixing Bugs",
          "Auto Scroll ListView To Last Message Sent",
          "Showing User Typing Activity"
        ]
      },
      "requirements": [
        "Familiarity with Flutter"
      ],
      "description": "Do you want to build a complete Mobile Chat Application that works on iOS and Android, powered by Flutter and Firebase? Then this is the course for you!\nWHAT WILL WE BE BUILDING?\nIn this course, we’ll use the best in Flutter and Firebase to build a complete chat application from zero to deployment called Chatify that you can release on the Google Play Store or iOS App Store.\nWHAT DOES THE APP FEATURE?\nAn Amazing Real-Time Messaging Experience\nA Chats Page just like other popular Messaging Apps\nFinding Other App Users using Full-Text Search\nMedia Sharing Between Users\nAuthentication\nRegistration\nAutomatic Login\nUsing Device Camera and Image Library for Image Uploads\nCreating Group Chats\nRealtime Status and Activity Indicators\nWHAT CONCEPTS ARE COVERED?\nFlutter 2.0\nFirebase\nProvider State Management\nUploading Media Files with Firebase Storage\nComplete CRUD Functionality in Realtime with Cloud Firestore\nAuthentication using Firebase Authentication\nTaking Pictures / Picking Images for Upload with Flutter\nWorking with Streams and Futures\nManaging State using Stateful Widgets and Provider Framework\nMedia Queries and Device Orientation for Responsive App Design\nHandling Async Data with FutureBuilders, StreamBuilders, and Async / Await Functions\nAnimations and Page Transitions\nImage Caching for Performance\nForm Validation and Error Handling\nCustom Theme, Fonts, and Widgets Creation\nTons of Practical, Straightforward and Repeatable App-Building Patterns\nAnd much more!\nWHAT ELSE DOES THIS COURSE OFFER?\n– Deep, Fine-Grained Learning – This course is jam-packed with information. I made the course that I most wanted to take and as a result, I didn't skimp on the details. You're going to cover more topics and material in greater depth than ever before.\n– 100% Real-World Practice – My goal is to get you writing code as much as possible. And not just any code–we'll be working exclusively on practical tasks that are instrumental in building your own amazing real-world apps.\n– No-Nonsense, Spot-On Explanations - Every lesson is to the point. I break down what we're making, how we'll be doing it, and what the final product will look like, all on top of helpful and illustrative descriptions to aid your understanding along the way.\nI really enjoyed making this course and I think you’ll enjoy taking it just as much.\nLooking forward to seeing you taking this course!\nWho this course is for:\nMobile and Web Developers looking to build impressive real-world, production-ready applications using Flutter and Firebase!\nFlutter Developers looking to enhance their skillset.\nDevelopers looking to delve into the world of Flutter and Firebase.",
      "target_audience": [
        "Beginner and Intermediate Flutter Developers"
      ]
    },
    {
      "title": "Apple Watch - Go From Newbie to Pro by Building 15 Apps",
      "url": "https://www.udemy.com/course/how-to-make-a-freaking-apple-watch-app-with-swift-tutorial/",
      "bio": "Learn how to develop real world Apple Watch apps with WatchKit and Swift. No prior programming experience required.",
      "objectives": [
        "Make a freaking Apple Watch App",
        "Learn the basics of Swift"
      ],
      "course_content": {},
      "requirements": [
        "You will need a Mac the at least runs the operating system Mavericks to take this class"
      ],
      "description": "The Apple Watch is out, and it's selling off the charts. It's on track to be in the hands of more than 25 million people year end. Take this course now and be one of the first to have your own apps available in this historic introductory year.\nI firmly believe that the best way to learn is by doing. So we go through everything step by step in the making of 15 different apps from scratch. From these 15 apps you will learn all the skills needed to make your own apps for the Apple Watch.\nThe best part is that no prior programming experience is required. I've been the beginner that had trouble with complex tutorials, and will never speak over your head. If you've got some programming experience already however, you'll have everything you need to dive headfirst into Apple Watch's WatchKit and Swift so that you can work to an impressive skill level.\nWe'll dive into a thorough explanation of all WatchKit SDK elements including actionable notifications, glances, general interface principles, interacting with the iPhone, and working with API's.\nWhat makes me the right teacher?\nI have 9 iOS apps in the App Store which total over 300,000+ downloads\nI teach more than 17,000 other students in my conglomerate of highly rated Udemy courses\nI use an energetic and engaging course style that involves students. I guess you could say, I'm far from a robot… and it should be entertaining :)\nI have been doing iOS development for 4+ years\nWhen I was first learning iOS development, I was often confused by wordy blog posts and tutorials. I will never talk over your head.\nI created the first Udemy Swift course and also teach the highly rated “How to Make a FREAKING iPhone App with Swift\" course.\nWho is this class for?\nPeople who want to make apps. I will not be teaching wordy or complicated computer science philosophies. I will be teaching you how to make apps that you can play with, share with friends & family, and offer to the world!\nBeginners. You don't need any programming experience to take this class. I have been the absolute beginner before and I want to help you.\nThose programmers who are new to Apple Watch. Dive in with your prior experience and move more quickly, on to become an impressive Apple Watch developer.\nEntrepreneurs who have an idea for an app. Don't pay somebody thousands to build your app. Do it yourself. Having the ability to create something you can think of is extremely powerful.\nCareer development professionals who want to earn money professionally via contract work, consulting, full-time employment, and so forth",
      "target_audience": [
        "This is a great class for people wanting to get in on Apple's latest product"
      ]
    },
    {
      "title": "Android Development NDK - Beginner's guide",
      "url": "https://www.udemy.com/course/android-development-ndk-crash-course/",
      "bio": "Android Development NDK: C++ , FFMPEG , google oboe",
      "objectives": [
        "You will learn about Android NDK development with C/C++. I will teach you about FFMPEG, Google Oboe and how to apply face filter like instagram and snapchat Apps."
      ],
      "course_content": {},
      "requirements": [
        "Basic Java and C/C++ knowledge"
      ],
      "description": "A complete  course on Android App Development using Android NDK\nIn this course, you are going to learn about android NDK development. After enrolling and watching the whole course you will able to develop android apps with C/C++. I will introduce some famous libraries in this course, like FFMPEG, Google Obeo and Banuba SDK.\nSo you can develop apps like snap chat, Instagram and tik talk filter features in your app and with the help of FFMPEG, you will be able to develop video and audio editing apps.",
      "target_audience": [
        "Junior android developers"
      ]
    },
    {
      "title": "Mastering Mobile App Design With Sketch 3",
      "url": "https://www.udemy.com/course/sketch-design/",
      "bio": "Learn how to design mobile apps with Sketch 3 for beginners",
      "objectives": [
        "Use Sketch 3 fluently",
        "Know how to do mobile app design",
        "Create designs for iOS apps and Android apps with Sketch 3"
      ],
      "course_content": {
        "Intro to Course": [
          "Intro to Course",
          "Project Resource Files"
        ],
        "Basics of Sketch": [
          "Sketch UI Overview",
          "Designing Your First App in Sketch",
          "Basics of Layers in Sketch",
          "Understanding Shapes in Sketch",
          "Masking & Proportional Scaling in Sketch",
          "Styling in Sketch Part 1",
          "Styling in Sketch Part 2",
          "Working With Images in Sketch",
          "Typography & Text in Sketch",
          "Symbols in Sketch",
          "Designing an Instagram Profile Page in Sketch",
          "How to Export Graphics in Sketch",
          "Section 1 Resource Files",
          "Exercise - Creating a Post"
        ],
        "Advancing Your Skills & Designing A Chat App": [
          "Intro to App",
          "Creating the Signup & Login Screen in Sketch",
          "Creating the Inbox in Sketch",
          "New Messages UI in Sketch",
          "Creating the Chat UI in Sketch",
          "Creating the Settings Screen in Sketch",
          "Exercise - Adding UI Screens to the Chat App"
        ],
        "Designing an App With Requirements - Globetrotter": [
          "Intro to App",
          "Creating the Login Screen in Sketch",
          "Creating the Email Signup UI in Sketch",
          "Designing the Home Screen",
          "Creating the Post Screen in Sketch",
          "Exercise - Designing More Screens for Globetrotter in Sketch"
        ]
      },
      "requirements": [
        "Must own a Mac with OSX and have the Sketch app"
      ],
      "description": "Want to learn how to design mobile apps with Sketch 3? Then this course is for you. We have thrown out all of the fluff and junk that other courses like to add in and give you the most important things you need to know to be up and working as quick as possible.\nMastering Mobile App Design With Sketch 3 will take you from absolute beginner to fluent mobile app designer.\nIn addition to learning the Sketch app you will also learn core design principles that you can take with you onto any design tool.\nYOUR INSTRUCTORS\nThis course is brought to you from Devslopes - the creator of the world's most effective programming courses. Caleb Stultz is a long term graphic and mobile designer and will be teaching this course.\n\nCOURSE LAYOUT\nYou start by learning the basics of Sketch 3. You'll then move on to designing more advanced apps.  As you build apps you also get to complete exercises so you can retain the things you just learned.\n\nLIVE HELP\nIf you ever gut stuck you can come visit our chatroom and get live help from our instructors or our 20+ live Teacher's Aides.",
      "target_audience": [
        "Course is for absolute beginners",
        "Course is for programmers who want to code and design their apps",
        "Course is for business owners, hobbyists, or anyone who wants to design mobile apps"
      ]
    },
    {
      "title": "Build Modern Android App with REST API and Ktor Server",
      "url": "https://www.udemy.com/course/build-modern-android-app-with-rest-api-and-ktor-server/",
      "bio": "Develop an Android App with Kotlin. Fetch Data from REST API deployed on your Backend Server developed with Ktor.",
      "objectives": [
        "Develop an Android Application",
        "Develop a Backend Server with Ktor",
        "Create your own REST API",
        "Design App UI using Jetpack Compose UI toolkit",
        "Clean Architecture + Use Cases",
        "Create and Configure a Backend Server",
        "Learn about Server Engines",
        "Learn about Server Modules",
        "Learn about Server Plugins",
        "Handle Server Requests and Responses",
        "Display Static Content on the Server",
        "Templating",
        "Auto-Reload Server feature",
        "How to use Postman",
        "Generate Ktor Project",
        "Create and Handle Server Endpoints",
        "Implement Serialization",
        "Custom Headers",
        "Static Pages",
        "Testing Server Endpoints",
        "Paging 3 Library with Jetpack Compose",
        "Offline Caching with Remote Mediator",
        "Work with multiple Paging Sources in Android Studio",
        "ROOM as a Local Database",
        "Dependency Injection on both Server and Android project",
        "Dependency Injection with Koin",
        "Dependency Injection with Dagger-Hilt",
        "Implement On Boarding Screens",
        "Implement Compose Navigation",
        "Implement Swipe to Refresh",
        "Search Widget - Custom UI Component with Jetpack Compose",
        "Rating Widget - Custom UI Component with Jetpack Compose",
        "Ordered List - Custom UI Component with Jetpack Compose",
        "Info Box - Custom UI Component with Jetpack Compose",
        "Testing Custom UI Components",
        "Testing Android Application (Partially)",
        "Shimmer Effect",
        "Beautiful App Design",
        "Animated Splash Screen",
        "Palette API",
        "Dynamic Layout Colors",
        "Extract Colors from an Image and Apply them into the Layout",
        "MVVM",
        "Retrofit",
        "Send HTTP Requests",
        "KotlinX Serialization",
        "Coil Image Loading Library",
        "Horizontal Pager",
        "Pager Indicators",
        "System UI Controller",
        "Both Light and Dark Theme Design",
        "Server Deployment on Heroku",
        "AND MORE..."
      ],
      "course_content": {},
      "requirements": [
        "You should be already familiar with a Jetpack Compose (Watch my To-Do course with Jetpack Compose first)",
        "You should be already familiar with a Kotlin programming language",
        "You should be already familiar with basic Android Architecture Components"
      ],
      "description": "Hello there and welcome to my course!\nThis course will be special. Why? Well because I'm going to teach you how to build not just another android application, but also a backend server, your own REST API!\nThe main purpose of that server will be to provide the data to our Android Application. You will learn how to successfully establish a quality communication between client, or in this case our Android App, and a backend server.\nFor the backend we will use ktor framework which is built primarily on Kotlin  and Coroutines! You will learn everything about that framework, how to create your own endpoints, how to work with client requests, receive query parameters, process that same request on your backend, and finally send a fully prepared response to your clients, or in this case an Android App which we are going to develop as well.\n\n\nNow, our Android Application will use the newest API's and libraries. For designing our Application layout we will use a modern UI toolkit called jetpack compose. For communicating with our backend we will use a retrofit, and paging 3 library along with remote mediator, so we can automatically store and cache that data from the server into our Local ROOM database. That way we will be able to load the data into our Application, even if we don't have an internet connection.\n\n\nAnd that's not all, I will also teach you how to test your Backend Server as well as  your Android App. We are going to test all our server endpoints, the most important parts of our Android application and few custom UI components which we are going to build using Jetpack Compose! I'm going to teach you how to create a custom UI component called Rating Widget, using Jetpack Compose, it will look amazing!\n\n\nNext you will learn how to implement a swipe to refresh functionality in your app, how to implement a palette API so you can display dynamic colors into your layout depending on the image we load into our Screen. And many other different things Bottom Line, there is a lot of work to do, so get ready, because this will be quite of a journey!\n\n\nSo what are you waiting for developers. Let's get started!",
      "target_audience": [
        "Android Developers",
        "Android Designers",
        "Mobile Developers",
        "Anyone who wants to learn how to develop Android App using the Newest and Modern technologies and API's",
        "Anyone who wants to learn how to develop Develop Android Apps with Kotlin programming language",
        "Anyone who wants to learn how to develop an Android App using the modern UI Toolkit called Jetpack Compose",
        "Anyone who wants to learn how to develop an App using a clean architecture."
      ]
    },
    {
      "title": "SwiftUI Animations - Animate anything with SwiftUI",
      "url": "https://www.udemy.com/course/swiftui_animations/",
      "bio": "A course with fun to build projects, from easy to Intermediate to advanced that look at many ways to animate in SwiftUI",
      "objectives": [
        "Students will be learn how to create stunning SwiftUI animations that they can incorporate into their apps right away"
      ],
      "course_content": {
        "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources": [
          "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources"
        ],
        "Introduction": [
          "Promotion Video"
        ],
        "What is SwiftUI? - Declarative verse Imperative Programming": [
          "Declarative verse Imperative Programming"
        ],
        "Stacks": [
          "Stacks"
        ],
        "Text and Modifiers": [
          "Text and Modifiers part 1",
          "Text and Modifiers part 2",
          "Text and Modifiers part 3"
        ],
        "TextField - State - and modifiers": [
          "TextField - State - and modifiers"
        ],
        "Image and its modifiers": [
          "Image and modifiers part 1",
          "Image and modifiers part 2"
        ],
        "Project 1 - Circle of Friends - Animating circles (Skill level - Easy)": [
          "Introduction to project 1",
          "Animating Circles Lectures"
        ],
        "Project 2 - I think that’s a record - Record Player (Skill level - Easy)": [
          "Introduction to project 2",
          "Part 1 - Add the Record box - Record - Arm",
          "Part 2 - Add the play button - Sound"
        ],
        "Project 3 - Hey You! - Hue rotation example 1 (Skill level - Easy)": [
          "Introduction to project 3",
          "Hue rotation example 1"
        ]
      },
      "requirements": [
        "Some working knowledge of the Swift language is helpful, but there are tutorial lectures that teach the parts you need to know"
      ],
      "description": "SwiftUI Animations - This is a fun to code course with many projects geared toward various skill levels. Each project is marked \"Easy\", \"Intermediate\" or \"Advanced\". Simply start coding the projects according to your skill level, and gradually move into the higher levels when ready.\nCreate smooth and engaging animations with SwiftUI. This is a fun course with many projects for any skill level...ranging from easy, to Intermediate, to advanced, that explore and use various kinds of animation. All you need is a working knowledge of the Swift language, and you’ll be right at home here.\nUsing Apple's SwiftUI, you can create beautiful animations with much less code than ever before.\nLearn the many techniques and ways of translating your ideas for animation and motion, into animations in your apps. Animations are what really set apps apart from the crowd, because they are interactive, and make the app come alive..and, they never fall to make us smile too :)\nIn this course we will be exploring the various ways we can use the power of SwiftUI to create and animate almost anything…SwiftUI is Apple’s new declarative framework, it’s fast, easy, and a-lot of fun to work with.\nThis course will show you how to animate all kinds of objects and values…Things like:\n• Hue rotation, which are colors, we’ll animate Images.\n• Make Snow with the CAEmitter class\n• Shadows\n• Opacity\n• Frames\n• Coordinates\n• Degrees\n• Gradients, backgrounds\n• Paths, and more\n• In here we’ll animate objects around different axis, and create a marching ants effect that we’ll use as a fan belt to drive gears.\n• We’ll animate a weather graph with data, and we’ll combine animations together to create a more unique effect.\n• We’re going to use the Shape protocol and paths so we can make a custom wave shape, and then animate that shape along different control points.\n• We’ll use animatableData, a built in SwiftUI property that lets us animate data in all kinds of interesting ways.\n• We’re going to use timers with some animations, these will start the animation after a specified time, and stop them as well.\n• And we’ll add sound to make the project really interactive.\n• And we’re going to use SpiteKit View to create animations with physics, things like collision, gravity, and velocity.\nThere are so many things that can be animated in SwiftUI…and when you add animation to your app, you make it come alive, and its much more engaging for the user.\nSo theres lots of fun to build projects in this course, to help spark the creative genius in you…\nLet's start creating.\nNOTE: This course assumes you have a working knowledge of the Swift Language",
      "target_audience": [
        "Beginner iOS / macOS / watchOS / tvOS developers through intermediate and advanced"
      ]
    },
    {
      "title": "Objective-C Crash Course for Swift Developers",
      "url": "https://www.udemy.com/course/objectivec/",
      "bio": "Everything you need to know about modern Objective-C to use it professionally",
      "objectives": [
        "Write code in Objective-C",
        "Convert Swift iOS Apps into Objective-C",
        "Convert Objective-C iOS Apps into Swift",
        "Build Simple Node & Express Servers and APIs",
        "Communicate between iOS apps and Servers"
      ],
      "course_content": {
        "Getting Started With Objective-C": [
          "Intro to Course",
          "Build an iOS App in Objective-C",
          "Exercise 01: Your own Objective-C app",
          "Anatomy of an Objective-C file",
          "Objective-C Properties & Instance Variables",
          "Objective-C Getters & Setters",
          "Objective-C Pointers",
          "Exercise 02: Convert this Swift App to Objective-C",
          "Objective-C Strings with NSString",
          "Objective-C Numbers",
          "Exercise 03 - Convert this app to Objective-C"
        ],
        "A Deeper Look Into Objective-C": [
          "Objective-C Conditionals & BOOL",
          "Objective-C Methods (aka Functions)",
          "Objective-C NSArray & NSMutableArray",
          "Objective-C NSDictionary & NSMutableDictionary",
          "Objective-C Loops & fast enumeration",
          "Objective-C Object Oriented Programming",
          "Exercise 04: RTFD"
        ],
        "Advanced Topics": [
          "Objective-C Weak vs strong & retain cycles",
          "Objective-C Initializers",
          "Exercise 05: Translate this Swift code into Objective-C",
          "Objective-C Nullability (Like Swift optionals)",
          "Objective-C Categories",
          "Exercise 06: Categories",
          "Swift and Objective-C Interoperability",
          "Exercise 07: Create Swift iOS Chat App (With source code & graphics)"
        ],
        "Devslope's Tutorials App": [
          "Intro to App",
          "App: Project creation & Singleton",
          "App: Creating our Node server and designing the API",
          "App: NSURLSession, Blocks and talking to the server",
          "App: Storyboards, IBOutlets and a custom UITableViewCell in Objective-C",
          "App: Table views & implementing a protocol in Objective-C",
          "App: IBOutlets & showing data in cells in Objective-C",
          "App: UIWebView, Loading HTML, CSS & Javascript & playing Youtube videos",
          "App: Source Code",
          "App: Creating a POST request from Objective-C on iOS",
          "Exercise 08: Extending our app"
        ],
        "BONUS: Javascript Primer In Preparation for Building A Server": [
          "Installing a Web IDE",
          "Javascript Resources",
          "Javascript Strings",
          "Javascript Conditionals",
          "Javascript Numbers",
          "Javascript Loops & Arrays",
          "Javascript Objects",
          "Javascript Bind"
        ],
        "BONUS: Working With Node & Express": [
          "Installing Node",
          "Installing Node (part 2) & running it",
          "Node Basics & NPM",
          "Node Module Exports",
          "NPM readline-sync",
          "Exercise 09: Node Calculator",
          "Creating a Simple Express Server",
          "Creating Express Server (Alternate version)"
        ]
      },
      "requirements": [
        "Need a Mac with OSX year 2010 or newer or PC Running OSX"
      ],
      "description": "This course is designed for iOS developers who only know Swift. In order to get a job as an iOS developer you need to know the basics of Objective-C. Also there are still a ton of libraries and tutorials all written in Objective-C.\nThis is the BEST Objective-C course out there!\nHOW THIS COURSE WORKS\nYou will watch video lectures that teach you the principles.\nYou then complete exercises to help you retain what you learn\nYou have access to free live help in the chatroom\nYou have access to the community forums so you can find answers to questions\nYou will get access to all source code and files needed to complete the course\nThere is 8.5 hours of video content for you to complete. You will spend an additional 15-20 hours working on exercises to help you retain the knowledge.\nHOW ARE MY COURSES DIFFERENT?\nAll of my courses are screencasts Youtube style - SUPER FUN\nI ALWAYS teach you the underlying principle (and not just do X,Y,Z)\nI actively personally help my students in their career goals\nI have a HUGE free chatroom where you can get help (4500+ active members)\nI have online forums where you can post code, projects, and connect with other developers\nABOUT MARK PRICE\n\"I am a veteran mobile developer having built over 57 mobile apps for iOS and Android. I owned two tech consulting companies that were highly successful. I have worked on Call of Duty and worked with other top titles and companies such as Logitech, Yellow Pages, the LDS Church, Cookie Dough Bites, and many more.\nI also spend most of my days now as a professional engineering instructor - changing the lives of students throughout the world - going from being broke to making up to 85k+ a year within 6 months.\nMy passion is helping people reveal hidden talents and guide them into the world of startups and programming. I currently am teaching iOS 9, Apple TV & tvOS, React & Flux web development, Objective-C, Swift 2, Android, Javascript, Node, and Java.\"",
      "target_audience": [
        "If you know the basics of Swift take this course",
        "If you know the basics of iOS take this course",
        "If you have never written any code in your life don't take this course"
      ]
    },
    {
      "title": "GraphQL & Apollo with Android - From Novice to Expert",
      "url": "https://www.udemy.com/course/graphql-with-android-from-novice-to-expert/",
      "bio": "Build Modern, Flexible and Extensible API's with GraphQL and Apollo and Build a Full Android App as Client",
      "objectives": [
        "Master GraphQL tool and how to use technology tools to build and consume robust API's with GraphQL",
        "Use NodeJS, Express and GraphQL to create a backend server for your Android Apps to consume",
        "Understand the whole picture of development - front and backend",
        "Build an Android Client App from Scratch with Apollo which Consumes the GraphQL API we Built",
        "Have a Strong Understand of GraphQL Syntax, Types and Data Object Relationships",
        "MongoDB and mongoose data Collections",
        "Deploy our GraphQL Project to Heroku"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course",
          "How to Get the Most out of this Course"
        ],
        "Why GraphQL - GraphQL vs REST": [
          "GraphQL - What is it? Why GraphQL?",
          "GraphQL Who Created it?",
          "GraphQL - Overview and Graph Theory",
          "Demo - GraphQL Quick Demo",
          "Course PDF Slides to Help You Learn Better",
          "Server Side Project Source Code",
          "Android Client App Project Source Code"
        ],
        "Getting Started with GraphQL, Server Side and Development Environment Setup": [
          "Section Introduction",
          "Development Tools to Install - Cmdr, VSCode and Nodejs",
          "VSCode Editor Command Cheat Sheets",
          "Understanding the basics of the IDE - Extensions, Keyboard Shortcuts",
          "Terminal (Command Line) Commands Cheat Sheet",
          "Setting up Our First Project",
          "Install NodeJS and Express",
          "Installing GraphQL and Express",
          "Creating and Understanding Schemas",
          "Creating Our Very First GraphQL Query and RootQueries",
          "The Resolve Method - Returning Data back",
          "Adding a Hobby Type and RootQuery",
          "Adding the Post Type",
          "Adding Relationship between Types",
          "Showing Users Relashionship",
          "User Type Relationship to Hobby",
          "Posts Query",
          "Hobbies Query - Adding Fields"
        ],
        "GraphQL - Core Concepts - Mutations": [
          "Introduction to Mutations in GraphQL",
          "Creating a User with Mutations",
          "Creating a Post with Mutations",
          "Creating a Hobby with Mutations",
          "Adding a Post Query",
          "Post and Hobby Queries"
        ],
        "GraphQL - Types": [
          "Understanding GraphQL Scalar Types - Part 1",
          "GraphQL - Types - Non Nullables",
          "GraphQL - Scalar Types and Object Types"
        ],
        "Connecting to an External Database - MongoDB": [
          "MongoDB and Relational Databases - Presentation",
          "Creating an mLab - MongoDB Account",
          "Installing Mongoose Package and Connecting",
          "Creating Mongoose Models - User Model"
        ],
        "GraphQL - Intermediate Concepts - Mutations": [
          "Mutation in GraphQL - Updating a User Type",
          "Mutation in GraphQL - Updating a Post and Hobby Types",
          "Mutation in GraphQL - Removing a User Type",
          "Mutation in GraphQL - Remove Mutation - Final"
        ],
        "Deploying Our Project to Heroku": [
          "Introduction to Remote Servers",
          "Deploying our Node GraphQL App to Heroku",
          "Using Prisma Playground",
          "NOTE on Apollo Codegen!"
        ],
        "Building the Android GraphQL Client App": [
          "Learning Path",
          "About Apollo and the Documentation",
          "Adding Apollo Dependencies to Android Studio",
          "Generating the JSON Schema File",
          "Android Apollo Project File Structure",
          "Setting up Apollo Project and Getting GraphQL Data",
          "Fetching More Data and Showing on the Screen",
          "Setting up Android Client's App User Interface - Row Cell",
          "RecyclerView Adapter",
          "Finalizing Our Recyclerview Adapter",
          "RecyclerView Adapter - Final",
          "Showing List of Users on Screen",
          "Creating UI for Details Screen",
          "Passing Data to Details Activity",
          "Restructuring Details View",
          "Apollo and Gradle Gotchas and FIXES!",
          "Showing Users Hobbies and Posts",
          "Creating Details RecyclerView - Part 1",
          "Setting up Details Activity Adapter",
          "Finalizing Details Screen (Activity)"
        ],
        "Building the Android GraphQL Client App - Continuation": [
          "Fixing the User Filtering Process",
          "Hide View if No Hobbies or Posts Found",
          "Setting up Add User Activity",
          "Setting up Mutation Classes",
          "Adding a User",
          "Finalizing Adding User, Hobbies and Posts"
        ]
      },
      "requirements": [
        "Basic Android Development Skills",
        "Basic Programming Skills",
        "Familiarity with Java and Android Development",
        "Basic Javascript Skills are helpful, but not entirely necessary"
      ],
      "description": "GraphQL is the new way of building scalable, reliable, and concise API's that any client can consume.\nIf you want to master GraphQL with Apollo so you can then use, in our case, the Android app as the client, then this course is for you.\nThis course will get you up and running with GraphQL quickly and teach you the core knowledge you need to deeply understand and build GraphQL APIs and deploy them remotely and incorporate Apollo middleware so you can consume the data in Android applications quickly.\nGraphQL fundamentals? Is included.\nBuilding the backend with Node, Express, MongoDB, and Apollo?  Also included.\nIntegration with Native Android App Development? You got it!\n\n\nIf you are new to GraphQL, or if maybe you've dabbled in it for a bit but still want to get a better grasp of GraphQL, then this is certainly a course you should take.\nThe course follows a linear structure for better retention.  Here's what's included ( just a gist of it):\nLearn and understand why GraphQL is the desirable way of building succinct APIs\nLearn the fundamentals of GraphQL: Scalable types and Schemas\nDeep understanding of what Graph in GraphQL means.\nSetting up the server-side code with Node and Express, and Javascript.\nSetting up MongoDB Collections\nGraphQL Queries and Mutations\nCreating relationships between your data objects\nDeploy the server-side GraphQL project to Heroku\nAnd finally, create an Android App that interfaces with our GraphQL API\nAs you can see, this course covers all you need to know to become a well-rounded developer.  You'll learn the backend and the front-end as well.\nGraphQL is a big deal.  So much that big companies, such as Facebook ( they created GraphQL ), Shopify, Fairfax, Intuit, KLM, Paypal, Pinterest, Twitter, and so many more, use it!\nI created this course with you in mind - I wanted you to get up and to run, creating your own amazing projects with the tools and technologies I cover in the course.\n\n\nBy the end of this course, you will be fluently creating GraphQL API's and tie them up with any client (be it web or Android client).  And that's when you will call yourself a true well-rounded developer.\n\n\nSee you inside.\n\n\nPaulo",
      "target_audience": [
        "Novice and advanced developers who want to learn GraphQL",
        "Android Developers who want to build Backend API's with GraphQL",
        "Beginner Developers with minimum programming knowledge who are curious about learning GraphQL"
      ]
    },
    {
      "title": "React native Expo for multiplatform mobile app development",
      "url": "https://www.udemy.com/course/react-native-expo-for-multiplatform-ios-android-mobile-app-development/",
      "bio": "Create awesome mobile app in both iOS and Android platform",
      "objectives": [
        "Build native mobile apps with JavaScript and React",
        "Build real-world native todo app using React Native",
        "Develop both iOS and Android mobile app"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Run the app on emulator",
          "Expo folder structures",
          "React Native core component and Style",
          "React Native React Hook",
          "Use TextInput field to change state",
          "List view",
          "FlatList",
          "Touchable",
          "More on spread operator"
        ],
        "Create Todo Application to know the basics": [
          "Todo Application part 1 : Basic layout and components",
          "Todo Application part 2 : Task component",
          "Todo Application part 3 : Add Input Field",
          "Todo Application part 4: Add simple validation Alert",
          "Todo Application part 5: Dismiss keyboard",
          "Todo Application part 6: Delete items",
          "Todo Application part 7: fix the off screen problem with flexBox"
        ],
        "Create Todo Application to know the navigation": [
          "Start a new project and apply global style",
          "Setup the navigation",
          "Moving between screens",
          "Configuring the header",
          "Passing data to another screen",
          "Add Drawer Navigator",
          "Add Tab Navigator",
          "Diagram summary of Drawer, Stack and Tab Navigation"
        ],
        "Expo react native redux": [
          "Simple explanatin of Redux",
          "Simple counter app to demonstrate Redux",
          "Something about arrow function",
          "Start the projection by using the navigation project",
          "Start the project and create action file",
          "Create the reducer",
          "Create the store",
          "Get the state",
          "Dispatch the ADD TASK action creator",
          "Dispatch the DELETE TASK action",
          "Dispatch the DID TASK action",
          "Create the done list",
          "Change the name of \"About\" to \"Done\""
        ],
        "Create a Simple Chat App with Firebase and React Native Gifted chat": [
          "The simple chat app introduction",
          "Init a new expo project and install the packages",
          "Add the Stack Navigator",
          "Create Login Screen",
          "Create Register Screen",
          "Add the firebase to the project",
          "Add the register function",
          "Detect the auth state change",
          "Create the signin function",
          "Create signout function",
          "Fix the two weird things in the navigation",
          "Start using React Native Gifted Chat",
          "Modify the gifted chat and send message function",
          "Fetch the messages from the firestore"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge",
        "Basic React knowledge",
        "No Java or Swift knowledge is required"
      ],
      "description": "Did you tire of learning JAVA, Swift, Kotlin different programming languages?\nWill it be much better if just learn one language and then can build for both Android and iOS?\nReact Native is what you need!!\nBut what is React Native? In a nutshell react native allows use the react library to create native\nmobile apps for Android and iOS devices.\nIt is a really good option for developers that want to create some kind of mobile app who are already comfortable with react\nIt definitely recommends that you already understand the core principles of react like functional\ncomponents state props\nWe do have a complete react course on this platform, feel free to check that out\nIn this course, you will learn some basic React and also extend this to React Native. We will build a todo app to reinforce what we learnt in the previous lectures.\n\n\nWhat you will learnt\nHow to run the app in iOS and Android emulator\nHow to use React Native components\nHow to use the useState to add dynamic content\nHow to use the TextField to change state\nThe difference between List and FlatList\nWhat is the Touchable Component?\nWhat is the TouchableWithoutFeedback\nHow to dismiss the keyboard with Keyboard component?\nCreate an todo application which used all the knowledge that we learnt.\nCreate a chat app easily with react native gifted chat and Firebase",
      "target_audience": [
        "Anyone who want to use web knowledge to build apps that can run on both iOS and Android."
      ]
    },
    {
      "title": "Flutterflow for Beginners: Easy to Follow, No BS Course.",
      "url": "https://www.udemy.com/course/learn-flutterflow-and-build-a-minimalist-social-media-app/",
      "bio": "Tired of watching video tutorials and no progress? This course won’t make you a pro, but it will get you much closer.",
      "objectives": [
        "Learn the Flutterflow fundamentals",
        "Get confident enough to start building your own projects.",
        "Learn the fundamentals of app architecture.",
        "Learn the fundamentals of data management with Firebase"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Flutterflow Dashboard"
        ],
        "Counter App": [
          "Counter App"
        ],
        "Notes App": [
          "Create Note",
          "Show Note",
          "Delete Note and Transfer Note to another Page",
          "Update Note"
        ],
        "Minimalist Social Media App": [
          "Login/Register",
          "Create Post",
          "Show Posts",
          "Like Button Feature",
          "Create \"My Posts\" Page",
          "Delete/Update Post",
          "Publish App to Web"
        ],
        "Other Courses": [
          "Build a Chat GPT Clone in Flutterflow"
        ]
      },
      "requirements": [
        "No programming experience needed."
      ],
      "description": "Dive into the world of mobile app development with our immersive FlutterFlow course, designed to transform beginners into proficient app creators using the powerful yet accessible FlutterFlow platform. This comprehensive course demystifies app development, making it an exciting journey rather than a daunting task.\n\n\nStart your journey by constructing a fully functional Counter App, where you'll learn the basics of FlutterFlow's intuitive drag-and-drop interface, understand the fundamentals of UI design, and discover how to seamlessly integrate interactive elements. This initial project sets the stage, empowering you with the confidence and skills to tackle more complex applications.\n\n\nThe course then progresses to the creation of a Notes App, where you'll explore the integration of Firebase, a leading backend-as-a-service platform. You'll gain valuable experience in implementing real-time databases for storing and retrieving data, managing user authentication, and learning about data security. This project not only solidifies your understanding of FlutterFlow but also introduces you to critical concepts in app development, such as database management and cloud services.\n\n\nBy the end of this course, you'll have two portfolio-worthy apps and a solid foundation in using FlutterFlow and Firebase, equipping you with the tools to bring your app ideas to life. Join us to unlock the door to the exciting world of app development, where your creativity knows no bounds, and the possibilities are endless.",
      "target_audience": [
        "People who want to learn how to make apps with No Code",
        "People who want to learn how to use Flutterflow.",
        "People who want to turn ideas into their MVP(Minimum Viable Product)"
      ]
    },
    {
      "title": "Python App Development Masterclass App Development Bootcamp",
      "url": "https://www.udemy.com/course/python-app-development-masterclass-app-development-bootcamp/",
      "bio": "Build Real-World Applications with Python: A Complete App Development Bootcamp for Beginners to Advanced Learners",
      "objectives": [
        "The basics of Python programming and its applications",
        "How to write clean, efficient, and maintainable Python code",
        "Object-oriented programming concepts and best practices",
        "Problem-solving and debugging techniques",
        "How to build different types of Python applications, including web apps, data analysis tools, and games"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to App Development with Python",
          "Creating Labels & Text Sizes",
          "Creating Buttons in Material Design",
          "Building Calculator app Structure",
          "Building Functionality for Calculator App-",
          "Designing Calculator with CSS",
          "Image Editor Application",
          "Image Editor Application using PILLOW",
          "Making Weather App with Python part 1",
          "Making Weather App with Python part 2",
          "Development of Web Application- Part 1",
          "Development of Web Application- Part 2",
          "Development of Web Application- Part 3",
          "SQL Expense Tracker",
          "Class Project 1",
          "Class Project 2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Join this comprehensive course and embark on a journey to master Python app development from scratch. Whether you're a complete beginner or have some programming experience, this course is designed to equip you with the skills and knowledge needed to build robust and functional applications.\nKey Features:\nComprehensive Curriculum: Dive deep into the fundamentals of Python programming, including syntax, data types, control flow, and functions. Explore object-oriented programming concepts and learn how to create reusable and modular code.\nHands-On Projects: Put your skills to the test with a variety of practical projects. Build real-world applications, such as web apps, data analysis tools, and even games, to solidify your understanding and gain confidence.\nExpert Guidance: Learn from experienced Python developers who will guide you through each step of the process, providing clear explanations and personalized feedback.\nFlexible Learning: Access the course materials at your own pace and convenience. Watch video lectures, complete interactive exercises, and participate in discussions with fellow learners.\n\n\nWhat You'll Learn:\nThe basics of Python programming and its applications\nHow to write clean, efficient, and maintainable Python code\nObject-oriented programming concepts and best practices\nHow to build different types of Python applications, including web apps, data analysis tools, and games\nProblem-solving and debugging techniques\nHow to deploy your Python applications to different platforms\nWho This Course Is For:\nAnyone with a passion for  learn Python programming and app development\nSo Don't miss this opportunity to master in Python App Development. Enroll today and start your journey towards becoming a confident.",
      "target_audience": [
        "Anyone with a passion for  learn Python programming and app development"
      ]
    },
    {
      "title": "Flutter and Dart | Flutter Dart Programming from Scratch",
      "url": "https://www.udemy.com/course/flutter-and-dart-flutter-dart-programming-from-scratch/",
      "bio": "Complete Flutter Dart with Flutter 3 projects for Android & IOS flutter app development on Dart programming language",
      "objectives": [
        "Flutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language.",
        "Flutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018.",
        "Flutter is powered by Dart programming language optimized for fast apps on any platform.",
        "Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly.",
        "Flutter can integrate with existing iOS and Android code bases. It's free and open-source.",
        "Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy.",
        "Flutter transforms the app development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded apps from a single codebase.",
        "Flutter code compiles to ARM or Intel machine code as well as JavaScript, for fast performance on any device.",
        "Flutter is supported and used by Google, trusted by well-known brands around the world, and maintained by a community of global developers.",
        "Flutter is powered by Dart, a language optimized for fast apps on any platform",
        "Dart is a client-optimized language for developing fast apps on any platform.",
        "Dart is designed for a technical envelope that is particularly suited to client development, prioritizing both development and high-quality production.",
        "Flutter and Dart with Flutter project",
        "Dart Language and Flutter Basics",
        "What is dart and Why is Dart ( Programming Language )",
        "Control and Loop Structures and Operators in dart flutter",
        "Functions in dart",
        "Collection Structures",
        "Dart Object Oriented Programming",
        "Inheritance and Polymorphism",
        "Interface and Abstract Class",
        "Functional Programming in flutter and dart",
        "Dart programming language with examples",
        "Object-Oriented programming concepts",
        "Functional programming concepts in Dart",
        "Flutter Firebase",
        "Flutter web",
        "Flutter Dart",
        "Dart Programming",
        "Flutter Basics and Structers",
        "Basic Widgets",
        "List Types in Flutter",
        "Functions",
        "Navigation Operations",
        "Input Widgets",
        "Book List Application",
        "Functional Programming",
        "Student Grade Calculator(App)",
        "Build beautiful, fast and native-quality apps with Flutter",
        "Build a portfolio of beautiful Flutter apps to impress any recruiter",
        "Understand all the fundamental concepts of Flutter development",
        "Become proficient in one of the fastest growing technologies"
      ],
      "course_content": {
        "Introduction to Flutter and Dart | Flutter Dart Programming from Scratch": [
          "What is Dart and Why is Dart Programming Language",
          "FAQ About Google Flutter and Dart Programming Language",
          "Dart SDK Installation",
          "Installation of Required Editor for Dart",
          "launch.json File Edit to Run in Debug Mode",
          "Dart and Flutter Project Files",
          "quiz"
        ],
        "Dart Basics": [
          "First Dart Application",
          "Variables and Data Types in Dart",
          "Number and Boolean Data Types in Dart Programming Language",
          "String Data Type and Interpolition Notion in Dart",
          "Final and Const Concepts in Flutter",
          "quiz"
        ],
        "Control and Loop Structures and Operators in Dart": [
          "Using If, Else and Else If in dart",
          "Temary Operator and Null Value Check",
          "Switch, Case Statements",
          "Conditional Quiz-1 in Dart",
          "Operators-1",
          "Operators-2 in dart programming",
          "Loops and For Loops",
          "While and Do While Loops in Dart Flutter",
          "Continue and Break Statements in Dart",
          "Loops Quiz-2 in Dart",
          "Getting Data from Console",
          "Getting Data from Console(Example)",
          "quiz"
        ],
        "Functions in Dart ( Flutter )": [
          "What is Function in Flutter",
          "Using Fat Arrow in Dart",
          "Optional and Named Parameters in Dart ( Flutter )",
          "quiz"
        ],
        "Collection Structures": [
          "Fixed-Lenght Lists in dart",
          "Dynamic Long Lists in Dart",
          "Methods Related to Lists",
          "Set Structure",
          "map structure in dart",
          "Collections Highlights",
          "Collection Structure Again",
          "quiz"
        ],
        "Object Oriented Programming in Dart ( Programming Language )": [
          "Class and Object Concepts",
          "Constructor Methods in Flutter ( Dart )",
          "Using Factory",
          "Private Values and Getter Setter Methods in Dart",
          "Example 1",
          "Example 2",
          "quiz"
        ],
        "Inheritance and Polymorphism in Dart": [
          "Inheritance",
          "Inheritance Example and Overriding",
          "Polymorphism and Late Binding",
          "Using Constructor Methods in Inheritance",
          "quiz"
        ],
        "Interface and Abstract Class": [
          "Abstract Class and Method",
          "Interface Concept",
          "Static Method and Variables",
          "Final and Const Concept",
          "Immutable Classes in Flutter - Dart",
          "quiz"
        ],
        "Functional Programming in dart programming": [
          "What is Lambda",
          "Higher Order Function",
          "Lexical Closure Concept",
          "Constructors of List Class",
          "Methods of List Class",
          "Constructors and Methods of Map Class",
          "quiz"
        ],
        "Exception and Generic Type Concepts": [
          "Exception Concept",
          "Throwing an Error",
          "Creating Our Exception Class",
          "Generic Types",
          "Create Generic Class",
          "quiz"
        ]
      },
      "requirements": [
        "You do not need to have any programming background while doing these.",
        "No prior dart or flutter",
        "Desire to learn dart flutter",
        "Computer with access to the internet.",
        "Willingness and Motivation to successfully complete the course about Flutter",
        "Desire to learn Flutter and Dart",
        "Have 10GB of free space on your hard drive.",
        "Watching the lecture videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition for flutter dart to get started today"
      ],
      "description": "Flutter, dart, flutter dart, flutter and dart, flutter firebase, dart programming, flutter advanced, flutter project, dart language, dart programing language\nHello there,\nWelcome to the “ Flutter and Dart | Flutter Dart Programming from Scratch ” course\nComplete Flutter Dart with Flutter 3 projects for Android & IOS flutter app development on Dart programming language\n\nFlutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language Flutter can integrate with existing iOS and Android code bases It's free and open-source\n\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase Flutter dart was originally launched with support for iOS and Android Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web Flutter runs with dart, a programming language developed by Google Dart is a strongly-typed, object-oriented language with a familiar C-style syntax Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms On the web, dart flutter is compiled to JavaScript code that can run on the browser Flutter web is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the flutter firebase Engine, written in C++, which provides low-level rendering support\nFlutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language Flutter can integrate with existing iOS and Android code bases It's free and open-source\nFlutter is an open-source UI software development kit created by Google It is used to develop cross platform applications for Android, iOS, Linux, macOS, Windows, Google Fuchsia, and the web from a single codebase\nDart is a client-optimized language for developing fast apps on any platform Its goal is to offer the most productive programming language for multi-platform development, paired with a flexible execution runtime platform for app frameworks\nLanguages are defined by their technical envelope — the choices made during development that shape the capabilities and strengths of a language Dart is designed for a technical envelope that is particularly suited to client development, prioritizing both development (sub-second stateful hot reload) and high-quality production experiences across a wide variety of compilation targets (web, mobile, and desktop)\nDart also forms the foundation of Flutter Dart provides the language and runtimes that power Flutter apps, but Dart also supports many core developer tasks like formatting, analyzing, and testing code\nThe Dart language is type safe; it uses static type checking to ensure that a variable’s value always matches the variable’s static type Sometimes, this is referred to as sound typing Although types are mandatory, type annotations are optional because of type inference The Dart typing system is also flexible, allowing the use of a dynamic type combined with runtime checks, which can be useful during experimentation or for code that needs to be especially dynamic\nWhat is Google Flutter?\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase Flutter was originally launched with support for iOS and Android Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web Flutter runs with Dart, a programming language developed by Google Dart is a strongly-typed, object-oriented language with a familiar C-style syntax Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms On the web, Dart is compiled to JavaScript code that can run on the browser Flutter is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the Flutter Engine, written in C++, which provides low-level rendering support with Google’s Skia; and the platform-specific Embedder, which talks directly to the operating system\nWhy did Google create Flutter?\nFlutter, first known as “Sky”, was announced in 2015 with Android support only It was created to provide a better mobile experience for users and developers, taking the best parts of the web development experience, and bringing them to mobile Its main goals were high-performance and portability across multiple platforms While other cross-platform solutions such as React Native and Xamarin were already popular, they could not deliver the same fidelity and performance as apps built with the native iOS and Android SDKs Flutter changed that by making it possible to create beautiful, performant apps across multiple platforms with a single codebase\nIs Flutter in demand?\nFlutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018 Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy Over a hundred thousand Flutter apps have already been published on the App Store and Play Store After overtaking React Native in Google Search trends, Flutter is now the fastest growing software project on GitHub By choosing Flutter, companies can deliver mobile apps in record-time as they no longer have to build separate apps to support iOS and Android This makes Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly\nIs Flutter a programming language?\nFlutter is not a language, rather an SDK just like Android SDK For android development Java/Kotlin are the programming languages, for cross-platform development using flutter, DART is the official programming language\nIs Flutter a frontend or backend?\nFlutter is a popular frontend development framework from Google that enables developers to build beautiful frontends for any screen Flutter is designed to streamline cross-platform app development while maintaining a consistent user experience\nWhich language is used for Flutter?\nFlutter apps are written in the Dart language and make use of many of the language's more advanced features While writing and debugging an application, Flutter runs in the Dart virtual machine, which features a just-in-time execution engine\nIs Flutter a framework?\nFlutter is an open source framework by Google for building beautiful, natively compiled, multi-platform applications from a single codebase\nWhat is Dart and why does Flutter use it?\nFlutter uses Dart as Dart allows Flutter to avoid the need for a separate declarative layout language like JSX and XML The layout of Dart is declarative and programmatic and it makes it easy for developers to read and visualize it very easily and effortlessly\nIs Flutter written in Dart?\nFlutter apps are written in the Dart language and make use of many of the language's more advanced features While writing and debugging an application, Flutter runs in the Dart virtual machine, which features a just-in-time execution engine\nWho uses Dart programming language?\nCompanies that use the Dart language include Google, Mews, Ag Flow, and Blossom to name a few People generally find that Dart is one of the languages that are easier to grasp, as it is fairly similar to many other programming languages\nWhat applications use Flutter?\nThere are social networking apps for creating and sharing content, dating, and connecting people through events and real-life activities that use Flutter Alibaba made a shopping app called Xianyu, which has more than 50MM downloads and more than 10MM active users every day Nubank is the largest independent digital bank outside Asia, and its mobile apps are built with Flutter Another shopping app is HuYu, which rewards users with gift cards and vouchers for sharing shopping receipts You can also find music apps for recording and learning to read music The Hamilton Musical and the famous Abby Road Studios created apps with Flutter There are apps for sports, finance, fitness, education, animal adoption, mapped gas stations to compare prices, and a travel app A Google Ads app helps mobile app customers track their ads Users can view statistics, update bids and budgets, and get real-time notifications\n\n\nGoogle Flutter provides higher quality for multi-platform development\nFlutter apps use a single codebase, allowing faster time-to-market\nFlutter allows you to build beautiful apps easily\nFlutter widgets make it easy to build beautiful UIs\nThe Dart programming language is very productive\nFlutter delivers an excellent developer experience with hot reload\nFlutter is open source\nFlutter comes with a mature ecosystem\nFlutter’s unique advantages make it a very strong UI framework on mobile, web, and desktop\n\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build dart flutter programming thus, we will have prepared a strong foundation for Flutter applications\nThis course is for beginners Before taking this course, You don't need to know any language In our course, the basics of dart programming is dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject\nDuring our course, you will be informed about the basics of Dart in detail and how to solve problems\nThis course was crafted to benefit absolutely any level of developer We will start flutter and dart from scratch and learn how to create a development environment for Flutter in mobile development\nDuring the course, I made sure to explain all the topics that may seem complicated to you as simple and detailed as possible I have used some diagrams to help you understand better\nThe powerful features and capabilities of fluter allow you to create complex, customizable, modern, responsive, and user-friendly web applications in mobile app marketing\nAfter taking this course you’ll be able to fully take advantage of all features for Dart in Mobile Development\nIn this course, Develop modern, complex, responsive and scalable web applications with Dart in Firebase\nOur course based on learning by making practice\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now into;\n\" Flutter and Dart | Flutter Dart Programming from Scratch \" course\nComplete Flutter Dart with Flutter 3 projects for Android & IOS flutter app development on Dart programming language\nWe offer full support, answering any questions\n\nMy students says that: Recommended for those who start Flutter from zero like me I'm a backend programmer, and I know nothing about the mobile realm Now I can build my own mobile app I'm really excited!\nFlutter & Dart\nSee you in the course!",
      "target_audience": [
        "Anyone who has never programmed before and want to learn Dart and build iOS and Android apps.",
        "Anyone who know how to code, but are new to mobile development, then take this course to build apps with just one codebase.",
        "Anyone who have tried Flutter before, but want to get a comprehensive curriculum that covers all the important aspects of Flutter development",
        "Anyone who wants to deploy to multiple devices from a single codebase: mobile, web, desktop, and embedded devices.",
        "It's perfect for complete beginners with zero experience for dart",
        "If you want to building your application with Dart and Flutter application",
        "Anyone who wants to use Flutter which is a Google SDK for building native interfaces for iOS and Android using the Dart programming language",
        "Anyone who wants to build beautiful apps easily with Flutter",
        "Anyone who wants to learn Dart programming language which is very productive.",
        "Anyone who want to build native-quality iOS and Android apps with Flutter."
      ]
    },
    {
      "title": "Using Advanced iOS Frameworks and Techniques with Swift 3",
      "url": "https://www.udemy.com/course/using-advanced-ios-frameworks/",
      "bio": "Learn and Master the Coolest iOS Frameworks and Techniques by Example",
      "objectives": [
        "leverage the power of multiple great frameworks like UIKit Dynamics or the Photos framework",
        "use Xcode live rendering to improve productivity",
        "deal with live photos",
        "access Web API's efficiently and structure and display the received data",
        "use UICollectionView to display information",
        "use UIPresentationControllers and custom transitions",
        "implement the peak and pop feature of 3D Touch",
        "add Today Extensions and Widgets to your Apps",
        "understand the concept of Protocol Oriented Programming and Value Types",
        "use the concept of Protocol Oriented Programming together with UIKit",
        "implement caching to reduce network traffic and loading times",
        "use CocoaPods to enhance projects with 3rd party framworks"
      ],
      "course_content": {},
      "requirements": [
        "You should know the basics of the Swift Programming Language and the concepts of object oriented programming"
      ],
      "description": "Learn about the coolest and most useful iOS frameworks and development techniques that will improve the quality and look of your Apps, enhance your productivity and make your customers so much happier.\nLearn and Master the Coolest iOS Frameworks And Techniques in this Comprehensive Course\nLearn by realistic examples\nUnderstand protocol oriented programming with UIKit\n3D Touch, Today Extensions and Widgets, Live Photos, and more\nBuild a sliding menu with UIKit Dynamics\nLearn to download and present data from a web API\n\n\niOS Development Techniques that will make you a Pro\n\nIn this course I am presenting to you many of the coolest iOS frameworks and development techniques that will help you create better and more beautiful Apps. All projects are created in a way that will help you directly use your new knowledge in your own projects.\nKnowing your way around important iOS frameworks can make the difference between winning or loosing in a job interview. Being able to understand the concepts that you are learning in this course will make it a lot easier for you to learn about other and new frameworks by yourself.\nContent and Overview\nYou can use this course like a dictionary for the presented iOS Frameworks and techniques. Each section is self-contained and covers either a number of different development techniques or a specific framework.\nHave a look at the different sections in the curriculum to get an idea about the frameworks and topics we are going to cover.\n\nOne demo project is going to accompany you in four sections. It is called MovieSelectr. By extending this demo App, you are going to learn how to access Web APIs, how to cache data, how to create custom transitions between ViewControllers, how to use 3D Touch, Today Extensions and a lot more.\nI designed this Swift course to be easily understandable for any iOS Developer who has an intermediate knowledge about the Swift programming language and the Xcode IDE.\nThis course comes complete with working files and code samples, you'll be able to work alongside the instructor and will receive a verifiable certificate of completion upon finishing the course.",
      "target_audience": [
        "This iOS Development course is meant for developers who know their way around the basics of Swift and the Xcode IDE and want to improve their knowledge about very cool and helpful APIs and language features that will enhance the quality of their apps. This course if probably not for you, if you are just learning the basics of iOS Development."
      ]
    },
    {
      "title": "Mastering SwiftUI Architecture: Patterns and Best Practices",
      "url": "https://www.udemy.com/course/mastering-swiftui-architecture-patterns-and-best-practices/",
      "bio": "Elevate Your iOS Development with In-Depth Insights and Practical Strategies for SwiftUI",
      "objectives": [
        "Understanding SwiftUI Architecture: Grasp the foundational principles and unique aspects of SwiftUI, differentiating it from traditional UIKit development.",
        "Limitations of MVVM in SwiftUI: Identify and address the challenges of applying the Model-View-ViewModel pattern in SwiftUI, including state management and comp",
        "Migrating from MVVM to MV: Learn how to transition from the MVVM pattern to a simpler Model-View (MV) pattern, streamlining your SwiftUI codebase.",
        "Master techniques for aggregating multiple data sources, managing state efficiently, and implementing aggregate stores in real-world scenarios.",
        "Create reusable and modular views using SwiftUI's declarative syntax, while ensuring performance optimization.",
        "Explore various validation patterns and best practices for providing real-time feedback and maintaining scalable validation logic.",
        "Understand and implement SwiftUI's navigation system, handling both simple and complex navigation flows effectively.",
        "Learn strategies for integrating UIKit components with SwiftUI, creating hybrid applications that leverage the strengths of both frameworks."
      ],
      "course_content": {},
      "requirements": [
        "A solid understanding of the Swift programming language, including syntax, control flow, and object-oriented principles.",
        "Experience using Xcode, Apple's integrated development environment (IDE), for iOS development.",
        "Basic experience with SwiftUI, including familiarity with its syntax and core concepts.",
        "Some practical experience in developing iOS applications, understanding the lifecycle of an iOS app, and basic UI design principles.",
        "An understanding of the MVVM architectural pattern, as this will help in comprehending the migration to Model-View (MV) and recognizing the limitations of MVVM in SwiftUI.",
        "A strong desire to learn advanced SwiftUI architecture concepts and best practices, and to apply these in real-world projects.",
        "A Mac computer running macOS with the latest version of Xcode installed to follow along with the hands-on exercises and examples."
      ],
      "description": "Since its introduction in 2019, the SwiftUI architecture has sparked ongoing debates. Over the past two years, I've dedicated myself to exploring various patterns and best practices aimed at simplifying the development of SwiftUI applications.\nI've gained a comprehensive understanding of SwiftUI architecture and how to utilize it in accordance with Apple's guidelines. This course is the culmination of my years of research and hands-on experience. Its aim is to assist you in mastering SwiftUI architecture and embracing best practices throughout your development journey.\n\n\nCourse Overview\nIn this course, we will cover a wide range of topics crucial for building robust SwiftUI applications. Below is a detailed outline of what you can expect to learn:\n\n\nLimitations of MVVM in SwiftUI\nModel-View-ViewModel (MVVM) is a popular design pattern in iOS development. However, it presents unique challenges when applied to SwiftUI:\n- State Management: Managing state across views can become cumbersome.\n- Complexity: ViewModels can grow large and complex.\n- Performance Issues: Improper state handling can lead to performance bottlenecks.\n\n\nWe will delve into these limitations and explore alternative approaches to streamline your SwiftUI development process.\n\n\nMigrating from MVVM to MV\nSwiftUI encourages a more straightforward approach to architecture, often favoring a Model-View (MV) pattern over MVVM. In this module, you will learn:\n- Differences between MVVM and MV: Understanding the core distinctions and when to apply each pattern.\n- Migration Strategies: Step-by-step guidance on transitioning your existing MVVM codebase to MV.\n- Best Practices: Leveraging MV to simplify your SwiftUI code.\n\n\nUnderstanding Aggregate Models/Stores\nAggregating models and stores can significantly improve data management in SwiftUI applications. Key topics include:\n- Data Aggregation Techniques: Methods for combining multiple data sources.\n- State Management: Efficiently managing state in aggregate models.\n- Practical Examples: Implementing aggregate stores in real-world scenarios.\n\n\nSwiftUI Views\nDesigning and structuring views effectively is critical in SwiftUI. This section will cover:\n- View Composition: Building reusable and modular views.\n- Declarative Syntax: Utilizing SwiftUI's declarative syntax to create intuitive and maintainable UIs.\n- Performance Optimization: Techniques to ensure your views are performant.\n\n\nValidation\nInput validation is a common requirement in applications. Here, we will explore:\n- Validation Patterns: Different approaches to input validation in SwiftUI.\n- Real-time Feedback: Providing users with immediate feedback on their input.\n- Best Practices: Ensuring validation logic is maintainable and scalable.\n\n\nNavigation\nSwiftUI's navigation system offers unique capabilities and challenges. Topics include:\n- NavigationStack: Understanding and using NavigationStack for hierarchical navigation.\n- NavigationLinks: Proper usage of NavigationLinks and managing their state.\n- Complex Navigation Flows: Handling complex navigation scenarios.\n\n\nTesting\nTesting is essential for ensuring the reliability of your applications. This module will focus on:\n- Unit Testing: Writing and running unit tests for your SwiftUI components.\n- UI Testing: Automating UI tests to verify user interactions.\n- Testing Strategies: Best practices for integrating testing into your development workflow.\n\n\nUIKit & SwiftUI Interoperability\nMany existing projects still rely on UIKit, and interoperability is often required. In this section, you will learn:\n- Bridging Techniques: How to integrate UIKit components into SwiftUI and vice versa.\n- Hybrid Applications: Strategies for developing hybrid applications that use both frameworks.\n- Real-world Examples: Practical examples of interoperability in action.\n\n\nBy the end of this course, you will have a solid understanding of SwiftUI architecture and the skills to implement best practices in your projects. Let's embark on this journey to master SwiftUI together!",
      "target_audience": [
        "Developers with experience in building iOS applications who want to deepen their understanding of SwiftUI architecture and improve their app development skills.",
        "Individuals who have a basic understanding of SwiftUI and want to learn more about advanced patterns, best practices, and how to effectively structure SwiftUI applications.",
        "Developers who are comfortable with Swift and have some experience with SwiftUI, looking to enhance their architectural skills and adopt best practices in their projects.",
        "iOS developers familiar with UIKit who are looking to transition to SwiftUI and understand how to integrate both frameworks within their projects.",
        "Freelancers working on iOS projects who need to stay current with the latest SwiftUI architectural practices to deliver high-quality applications to their clients.",
        "Students with a focus on mobile development who wish to gain practical knowledge and skills in SwiftUI architecture, preparing them for professional development roles.",
        "Passionate programmers and hobbyists who are eager to expand their knowledge of SwiftUI and learn how to build well-structured, maintainable, and scalable iOS applications."
      ]
    },
    {
      "title": "iOS Development - Create 4 Quiz Apps with Swift 3 & iOS 10",
      "url": "https://www.udemy.com/course/ios-development-create-4-quiz-apps-with-swift-3-ios-10/",
      "bio": "In this course we will develop 4 different quiz apps together and go into great detail for every step on our way",
      "objectives": [
        "Create 4 different quiz game variations",
        "Master functionality and layout for quiz apps",
        "Create plist resources for quizzes",
        "Implement audio into applications"
      ],
      "course_content": {},
      "requirements": [
        "PC running MacOS and Xcode 8",
        "Prior experience with programming will be helpful with understanding everything"
      ],
      "description": "A lot of very successful and popular games in the appstore are Quiz Games. They are addicting, relatively easy to make, even for beginners and you can make a quiz about almost anything.\n\nIn this course we’ll have a look at 4 different quiz gaming modes and learn how to implement them properly from scratch.\nWe will write all of the code together and I will explain everything along the way. We want to teach you how to build these quiz games and not just give you a template that you can reskin but have no idea of the functionality behind it.\nWe're going to start with a classic Multiple Choice Quiz, meaning a quiz where we ask a question and offer 4 different answers that the user can select.\nWe'll add a bunch of neat little features such as animations for right and wrong answers as well as an animated countdown timer.\nThe next quiz will be an Image Reveal Quiz quiz where we reveal an image step by step and the user has to guess as quickly as possible what's on that image. This will teach us how to display an image view step by step and we'll further develop what we learned earlier, by offering multiple answers.\nWe're then going to learn how to implement a different quiz mode next. One where the users cannot just select an answer but has to type one in themselves. This will also teach us how to handle custom user input. Therefore we're going to create an Emoji Riddle Game where we display something such as a movie title with emojis and the user has to guess what it is.\nFinally we're going to create a simple but addicting Right or Wrong Quiz where we have statements displayed that are either correct or incorrect and the user has to decide.\nWe're going to be able to use a lot of our newfound knowledge to build this game.\nWith all quizzes we're going to teach you how to save your high score and how to display it animated in the menu screen.\nWe'll also learn how to implement sound into the app, meaning background music as well as specific sounds for a right or wrong answer.\nWhile developing these apps we make sure to use sophisticated programming syntax, which will allow us to later on update our quizzes with monetization or ads if we like.\n\nIn more technical terms, in this course you will learn :\n\nHow to create 4 different Quiz Games\nHow to do auto layout in code\nHow to do animations by animating a countdown timer\nHow to save data in User Defaults (such as our scores)\nHow to handle User Input via keyboard\nHow to create resource property lists\nHow to create a custom AlertView that will fit the style of our application\nHow to implement sound into the app (background music, button sounds)\nAs it is the case with all of our courses, we will provide you with the project files with the entire source code after every lesson. It will be available to download along with all of the resources, such as images and sounds that we use.\nI look forward to seeing you in this course and teaching you all there is to know about quiz games.",
      "target_audience": [
        "iOS Developers wanting to create Quiz Apps",
        "Advanced beginners in iOS programming"
      ]
    },
    {
      "title": "Socket.IO Chat App in React Native for iOS/Android",
      "url": "https://www.udemy.com/course/socketio-chat-app-in-react-native-for-iosandroid/",
      "bio": "Learn how to create a realtime Socket IO Chat App with React Native and Socket IO!",
      "objectives": [
        "Create a mobile app with React Native and Expo",
        "Create a Socket IO backend in Nodejs",
        "Create a public chatroom app with Socket IO and React Native",
        "Create a private messaging app similar to Facebook Messenger",
        "How to assign usernames to users joining the app",
        "How to use Redux to manage state inside React Native",
        "How to use React Hooks inside our Chat App",
        "How to use react-navigation for navigation inside the mobile app",
        "How to use Gifted Chat UI kit to bootstrap the UI",
        "How to use Gifted Chat UI kit with Socket IO backend",
        "How to manage layout on different devices"
      ],
      "course_content": {
        "Setting up developer environment": [
          "Download and Install Nodejs",
          "Download and Install Visual Studio Code",
          "Install React Native (Expo)"
        ],
        "Starting our Socket.io backend": [
          "Initializing our Socket.io backend",
          "Listening for connection event in Socket.io backend"
        ],
        "Connecting to Socket.io from React Native": [
          "Connecting to Socket.io from React Native",
          "Removing yellow warning in React Native about Socket.io",
          "Adding TextInput and saving entered message state",
          "Sending Chat Message to Socket.IO Backend from React Native",
          "Receiving Message in React Native from Socket.io"
        ],
        "Bootstrapping UI with Gifted Chat UI Kit": [
          "Installing Gifted Chat and fixing KeyboardAvoidingView in Android",
          "Displaying received messages from Socket.io in new UI",
          "Security issues to avoid, userId mapping and some house cleaning"
        ],
        "Expanding Socket.io backend": [
          "Implementing userIds and sending full message object from Socket.io",
          "Creating Separate Message Event Handler"
        ],
        "Public Chat App with Usernames": [
          "Adding Usernames to Socket.io Backend",
          "Creating Join Screen",
          "Layout in Join Screen",
          "Last polishes on Join Screen layout (Promise!)",
          "Creating JoinChat function and joining chat with usernames!",
          "Fixing issue with unique avatars"
        ],
        "Adding Navigation": [
          "Intro to section",
          "Installing and Using react-navigation"
        ],
        "Adding Redux": [
          "Intro to Redux section",
          "Adding Redux"
        ],
        "Using Redux and react-navigation in our Chat App": [
          "Dispatching Join Event from JoinScreen.js with Redux",
          "Navigating to FriendListScreen and fixing keyboard for Android in JoinScreen",
          "Getting Users Online from Socket.io into our Redux Store",
          "Displaying Users Online in FlatList and handling disconnect event",
          "Adding User Avatar and TouchableOpacity to FriendListScreen",
          "Navigating to ChatScreen after pressing on User in FriendList",
          "Sending Private Message to Socket.io backend"
        ],
        "Implementing Private Messaging": [
          "Creating selfUser State Property",
          "Creating Conversations State Property",
          "Appending sent messages locally",
          "Sending messages across Socket.IO",
          "BONUS - coupons for other courses"
        ]
      },
      "requirements": [
        "Basic JavaScript ES6"
      ],
      "description": "Learn how to create a Chat App from scratch using the newest JavaScript-based fullstack technologies!\nYou will first learn quickly how to create a public chat room that any user can join from the mobile app, and type with all other users who have joined.\nThen we will expand on the app and create private messaging, in a similar fashion to Facebook Messenger.\nWe are going to be using technologies such as React Native, Socket.IO, Nodejs, Redux, react-navigation, and Gifted Chat UI.\nIf you have any questions during the course feel free to message me and I'll get back to you as soon as possible!",
      "target_audience": [
        "Beginner React developers curious to learn how to make a realtime socket io chat app"
      ]
    },
    {
      "title": "Swift 4 Cookbook: The Ultimate Collection of iOS Quick Fixes",
      "url": "https://www.udemy.com/course/the-swift-cookbook-of-code-snippets-hundreds-of-solutions/",
      "bio": "Get instant, proven solutions and answers to over 300 common iOS, Swift 4, and Xcode problems",
      "objectives": [
        "Find quick fixes for real-world Swift and UIKit problems",
        "Understand key techniques such as weak variables, guard, and defer",
        "Build your own library of solutions for common problems"
      ],
      "course_content": {
        "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources": [
          "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources"
        ],
        "Introduction - How to use the Cookbook": [
          "Introduction - How to use the Cookbook",
          "To help you further on your SwiftUI Journey"
        ],
        "Arrays": [
          "How do you create multi-dimensional arrays?",
          "How to count objects in a set using NSCountedSet",
          "How to enumerate items in an array",
          "How to find an item in an array using indexOf()",
          "How to join an array of strings into a single string",
          "How to loop through items in an array",
          "How to loop through an array in reverse",
          "How to shuffle an array in iOS 8 and below",
          "How to shuffle an array using GameplayKit",
          "How to sort an array using sort()",
          "How to tell if an array contains an object"
        ],
        "CALayer": [
          "How to add a border outline color to a UIView",
          "How to create keyFrame animations using CAKeyFrameAnimation",
          "How to draw color gradients using CAGradientLayer",
          "How to draw shapes using CAShapeLayer",
          "How to emit particles using CAEmitterLayer",
          "How to round the corners of a UIView"
        ],
        "Core Graphics": [
          "How to calculate the distance between two CGPoints",
          "How to calculate the Manhattan distance between two CGPoints",
          "How to compare two CGRects with equalTo()",
          "How to draw a circle using Core Graphics: addEllipse(in:)",
          "How to draw a square using Core Graphics - addRect()",
          "How to draw a text string using Core Graphics",
          "How to draw lines in Core Graphics - move(to) and addLine(to)",
          "How to find a scale from a CGAffineTransform",
          "How to find the rotation from a CGAffineTransform",
          "How to find the translation from a CGAffineTransform",
          "How to render a PDF to an image",
          "How to use Core Graphics blend modes to draw a UIImage differently"
        ],
        "Games": [
          "How to add physics to an SKSpriteNode",
          "How to add pixel-perfect physics to an SKSpriteNode",
          "How to change SKScene with a transition - presentScene()",
          "How to color an SKSpriteNode using colorBlendFactor",
          "How to create 3D audio sound using SKAudioNode",
          "How to create a SpriteKit texture atlas in Xcode",
          "How to create shapes using SKShapeNode",
          "How to emit particles using SKEmitterNode",
          "How to find a touch's location in a node using location(in-)",
          "How to generate a random number with GKRandomSource",
          "How to roll a dice using GameplayKit and GKRandomDistribution",
          "How to run SKActions in a group",
          "How to run SKActions in a sequence",
          "How to stop an SKPhysicsBody responding to physics using its dynamic property",
          "How to write text using SKLabelNode"
        ],
        "Language": [
          "Fixing \"Ambiguous reference to member when using ceil or round\"",
          "Fixing \"Class ViewController has no initializers\"",
          "How to check for valid method input using the guard keyword",
          "How to check the Swift version at compile time",
          "How to compare two tuples for equality",
          "How to convert a float to a CGFloat",
          "How to convert a float to an int",
          "How to convert a string to a double",
          "How to convert a string to a float",
          "How to convert a string to an int",
          "How to convert a string to an NSString",
          "How to convert an int to a float",
          "How to convert an int to a string",
          "How to convert an NSRange to a Swift string index",
          "How to create an Objective-C bridging header to use code in Swift",
          "How to create multi line stirng literals",
          "How to delay execution of code using the defer keyword",
          "How to find the maximum of three numbers",
          "How to find the maximum of two numbers",
          "How to find the minimum of three numbers",
          "How to find the minimum of two numbers",
          "How to fix “argument of #selector refers to instance method that is not exposed",
          "How to force your program to crash with assert()",
          "How to install a beta version of Swift",
          "How to print debug text in Swift",
          "How to unwrap an optional in Swift",
          "How to use Codable to load and save custom data types",
          "How to use compiler directives to detect the iOS simulator",
          "How to use the try/catch in Swift to handle exceptions",
          "How to use #available to check for API availability",
          "Tips for android developers switching to Swift",
          "Using stride() to loop over a range of numbers",
          "What are lazy variables?",
          "What are property observers?",
          "What are the changes in Swift 1.2",
          "What are the changes in Swift 2.0",
          "What are the changes in Swift 2.2",
          "What are the changes in Swift 3.0",
          "What does an exclamation mark mean?",
          "What does override mean?",
          "What does unowned mean?",
          "What does weak mean?",
          "What is a CGFloat?",
          "What is a closure?",
          "What is a delegate in iOS?",
          "What is a dictionary?",
          "What is a double?",
          "What is a float?",
          "What is a nib?",
          "What is a protocol?",
          "What is a selector?",
          "What is a storyboard?",
          "What is a struct?",
          "What is a tuple?",
          "What is an optional value in Swift?",
          "What is AnyObject?",
          "What is copy on write?",
          "What is the difference between let and var?",
          "What is the nil coalescing operator?",
          "What is trailing closure syntax?",
          "What is whole module optimization?",
          "What's the difference between let and var?"
        ],
        "Libraries": [
          "How to get a Cover Flow effect on iOS",
          "How to make empty UITableViews look more attractive using DZNEmptyDataSet",
          "How to parse JSON using SwiftyJSON"
        ],
        "Location": [
          "How to add a button to an MKMapView annotation",
          "How to add an MKMapView using MapKit",
          "How to detect iBeacons",
          "How to find directions using MKMapView and MKDirectionsRequest",
          "How to make an iPhone transmit an iBeacon",
          "How to request a user's location only once using requestLocation"
        ],
        "Media": [
          "CIDetectorTypeFace- How to detect faces in a UIImage",
          "How to choose a photo from the camera roll using UIImagePickerController",
          "How to convert text to speech using AVSpeechSynthesizer, and AVSpeechUtterance",
          "How to create a barcode",
          "How to create a PDF417 barcode",
          "How to create a QR code",
          "How to filter images using Core Image and CIFilter",
          "How to highlight text to speech words being read using AVSpeechSynthesizer",
          "How to make resizable images using resizableImage(withCapInsets)",
          "How to play sounds using AVAudioPlayer",
          "How to play sounds using AVAudioPlayer",
          "How to record audio using AVAudioRecorder",
          "How to record user videos using ReplayKit",
          "How to render a UIView to a UIImage",
          "How to save a UIImage to a file using UIImagePNGRepresentation",
          "How to scan a barcode",
          "How to scan a QR code",
          "How to turn on the camera flashlight to make a torch",
          "UIImageWriteToSavedPhotosAlbum()- how to write to the iOS photo album"
        ]
      },
      "requirements": [
        "You should already have some familiarity with Swift"
      ],
      "description": "If you're tired of scrolling through Stack Overflow trying to resuscitate ancient Swift 2.0 code, this is the perfect course for you: over 300 of the most common questions for Swift, iOS, and Xcode get answered right here, with all code fully updated for iOS 11 and Swift 4.\nThis is real, hands-on stuff that gets right to the point:\nHow do you use the new Codable protocol to load and save your data?\nHow can you add real-time shadows to your views?\nHow do you add section headers to table views?\nHow do you record audio using AVAudioRecorder?\nHow can you add particle effects to UIKit apps?\nHow can you make an action repeat itself?\nAll those and more are covered right here, right before your eyes.\n\nOrganized for your convenience\n\nWith such a huge library of videos to learn from, you might be wondering how fast it can really be to find solutions inside this cookbook collection. Well, let me tell you: it's fast. The whole course is organized by segments such as CALayer, SpriteKit, and UIKit, so in one click you narrow your search down to what interests you most.\nAnd from there you can either jump straight to the solution you care about – \"how can I rotate my view?\" – or just browse the category to stumble upon all-new things you haven't even tried before.\nTried and tested solutions\n\nAnyone could put together some Swift code examples and call it a cookbook, but this collection is different.\nFirst, this is the largest collection of its type in the world – with over 300 categorized solutions, this is a simply unbeatable problem-solving resource.\nSecond, this course comes with complete, downloadable source code for all solutions, so you can try them out easily.\nThird, these solutions are proven: 10,000 students have already learned Swift from me, so I know the problems they hit time and time again. This course was crafted specifically to solve all the most common problems developers hit with UIKit, SpriteKit, Swift, and more.\nBut most importantly…\n\nYou're guaranteed incredible quality. No more scrabbling around Stack Overflow trying to find fixes, no more reading through ten pages of Google search results to find what you need.\nInstead, the Swift 4 Cookbook gives you all the fixes you need to take your apps to the next level, all fully revised and updated for Swift 4 and iOS 11.",
      "target_audience": [
        "This course was designed to help developers who need quick answers to real Swift and UIKit problems."
      ]
    },
    {
      "title": "Modern Android app using Kotlin, MVVM, Dagger2, RxJava &more",
      "url": "https://www.udemy.com/course/modernandroid/",
      "bio": "Learn the latest Android technologies including Dagger2, MVVM, Kotlin, RxJava, Retrofit, Mockito and Glide",
      "objectives": [
        "Android development",
        "Mobile applications",
        "Android architecture",
        "Dagger2",
        "Kotlin",
        "RxJava",
        "MVVM",
        "Retrofit",
        "Mockito",
        "Unit Testing"
      ],
      "course_content": {
        "Introduction": [
          "What are we building",
          "How to take this course",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Android Studio"
        ],
        "MVVM Architecture": [
          "What is the MVVM Architecture",
          "Create the Project",
          "Import the Libraries",
          "Implement the ViewModel",
          "Build the Layout",
          "Implement the Adapter",
          "Implement the View"
        ],
        "Retrofit": [
          "What is Retrofit",
          "Implement Retrofit",
          "Get data from the backend",
          "Update the Layout",
          "Update the View",
          "Implement Refresh"
        ],
        "Dependency Injection": [
          "What is Dependency Injection",
          "Setup Dagger2",
          "Challenge",
          "Inject the NetworkService"
        ],
        "Unit Testing": [
          "What are Unit Tests",
          "Setup Unit Tests",
          "Test the Success Path",
          "Challenge",
          "Test the Error Path"
        ],
        "Conclusion": [
          "Conclusion",
          "Further resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Interest in Android development",
        "Mac or Windows PC",
        "Kotlin knowledge"
      ],
      "description": "Learn how to make a modern Android App with this new course on Android development in Kotlin.\nMost tutorials and how to's on Udemy show you the basics of app building, but they don't show you how to use the latest technologies and libraries.\nMost projects and jobs require you to know how to use the latest libraries. This is what this course is all about.\nThe purpose of this course is to give you a practical example of how to use these technologies, all while building a simple example app.\n\n\nWe will learn about:\nMVVM architecture using the Google recommended Android Lifecycle Extensions\nDagger2 for dependency injection\nRxJava as a reactive framework\nRetrofit and JSON for remote server communication\nGlide for seamless image loading\nUnit tests to test the application and make it stable and robust\nAnd we will build everything in Kotlin, the shiny new language that Google recommends\nIf you want to get that job as an Android Developer, you need to know how to use these technologies.\nIf you want to build an app that scales and is robust, these technologies will make your life easy in the long term.\n\n\nSign up today, and let's learn how to properly build a modern Android Application.\n\n\n30 day money back guarantee provided by Udemy\nHighly rated instructor with over 10.000 active students and growing monthly.\n\n\nStudent feedback:\n*****\n\"Great content with very responsive creator.\" - Saurabh\n\n\n*****\n\"Great course. It has a a lot of small tips and tricks it really helped me out and I'm sure I can start to use it right now in my work\" - Saidel\n\n\n*****\n\"The course was short, but sweet and to the point. In a few hours Catalin walks you through the major modern architectural patterns required to implement an Android app. Not for the raw beginner, but plenty of content for a practitioner.\" - Kevin",
      "target_audience": [
        "Intermediate Android Developers",
        "Beginner Android Developers",
        "People Interested in Mobile App development"
      ]
    },
    {
      "title": "Let's Build UBER With SwiftUI || iOS App Clone",
      "url": "https://www.udemy.com/course/uber-swift-ui/",
      "bio": "Learn how to build UBER with SwiftUI from a Meta iOS Engineer",
      "objectives": [
        "How to build a fully functioning Uber iOS App Clone with SwiftUI",
        "How to build an app with two different user flows (Passengers & Drivers)",
        "How to display nearby drivers on a map",
        "How to request rides from nearby drivers",
        "How to accept or reject ride requests as a driver"
      ],
      "course_content": {
        "Project & MapView Setup": [
          "Display User Location on Map"
        ],
        "Searching For Locations": [
          "Building the Location Search UI",
          "Searching For A Location",
          "Selecting A Location"
        ],
        "Adding Location To MapView": [
          "Getting Selected Location Coordinates",
          "Adding Selected Location To MapView",
          "Generating A Route To Destination Location",
          "MapView State Management"
        ],
        "Ride Request View Creation & Functionality": [
          "Building The Ride Request View",
          "Ride Request View Presentation Logic",
          "Bug Fix & Implementing Ride Types",
          "Pricing Data Model Implementation",
          "Populating RideRequestView with Location Data",
          "Bug Fix & Dark Mode Support"
        ],
        "User Authentication": [
          "Building The Login View",
          "Building The Registration View",
          "View Navigation & Firebase Setup",
          "Authentication View Model",
          "Registering A User",
          "Signing Out & Signing In",
          "Uploading User Data To Cloud Firestore",
          "Fetching User Data From Cloud Firestore"
        ],
        "Side Menu": [
          "Side Menu UI",
          "Side Menu Presentation Logic & Implementation",
          "Side Menu Navigation & User Injection"
        ],
        "Settings Page": [
          "Building The Settings UI",
          "Settings Navigation & Sign Out",
          "Saved Location Navigation",
          "Saved Location Search Implementation",
          "Uploading A Saved Location",
          "Settings Wrap Up"
        ],
        "Drivers": [
          "Creating A Driver Account",
          "Fetching Drivers From Firestore",
          "Displaying Drivers On Map",
          "Custom Driver Annotation",
          "Fetch Drivers Refactor"
        ],
        "Requesting A Ride": [
          "Building the Accept Trip View for Drivers",
          "Trip Data Model & ViewModel Refactor",
          "Uploading Trip To Firestore"
        ],
        "Receive Ride Requests As A Driver": [
          "Fetch Driver Ride Requests",
          "AcceptTripView Presentation Logic",
          "Cleaning up the AcceptTripView & Populating with Trip Data"
        ]
      },
      "requirements": [
        "No programming experience required! You just need a Mac computer"
      ],
      "description": "UBER SWIFTUI | iOS 16\n\nWelcome! In this course you will learn how to build a fully functioning clone of the famous Uber application. We will be building this app from the ground up with the amazing SwiftUI! Check out some of the awesome app features below\n\n\nApp Features\nDisplay current user location on a map\nDisplay nearby drivers on a MapView\nDrivers can receive ride requests and accept trips that users request\nUser Authentication with Login/Sign Up/Sign Out functionality\nCreate different user types (passengers and drivers)\nRequest rides from nearby drivers\nTwo separate user flows for passengers and drivers\nSave preferred user locations\nSearch for nearby locations with auto-complete functionality like in Apple Maps\nGet directions to a location\nDynamic map view that follows user location\nSide Menu feature\nUser profile/Settings page\nCustom built backend database with Cloud Firestore\nDarkmode support\nDifferent ride types (UberX, UberBlack, UberXL)\nCustom pricing model\n\n\nWHY TAKE THIS COURSE?\nLearning advanced development skills should be taught using real world examples. In this course you're going to learn to code from a real life, professional developer. You will learn how to code like a pro, and everything will be explained in detail along the way. This will teach you to build production ready applications, that are easily scalable and maintainable.\n\n\nWho this course is for:\nPeople who want to build advanced iOS apps!\nThose who want to create their own startup\nThose looking to get a full time job as a developer\nBusiness owners\nStudents & teenagers\nPeople who want to make money building apps\n\nWho this course is for:\nIf you have basic experience with iOS development take this course\nIf you have basic experience with iOS or mobile development then take this course",
      "target_audience": [
        "Anyone who wants to learn how to make awesome iOS Apps"
      ]
    },
    {
      "title": "Android MVVM Architecture complete course",
      "url": "https://www.udemy.com/course/androidmvvm/",
      "bio": "Learn how and when to implement MVVM, ViewModel, LiveData, Transformations, Mediators and a lot more",
      "objectives": [
        "MVVM Architecture",
        "ViewModel",
        "LiveData",
        "Transformations",
        "MediatorLiveData",
        "Patterns and anti patterns"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basics": [
          "Section overview",
          "Important message about Udemy reviews",
          "Engage on social media",
          "What is MVVM",
          "State problem",
          "ViewModel",
          "LiveData",
          "Code example",
          "App foundations",
          "Setup MVVM, ViewModel and LiveData",
          "Update UI and finish app",
          "ViewModel instantiation"
        ],
        "Advanced": [
          "Section overview",
          "ViewModel and context",
          "ViewModel and sharing data between fragments",
          "Advanced LiveData",
          "App data",
          "App foundations",
          "App functionality",
          "ViewModel and saving state",
          "Patterns and anti patterns"
        ]
      },
      "requirements": [
        "Basic Android development knowledge"
      ],
      "description": "One of the most common questions I get asked while teaching Android Development is \"What is MVVM and how do I use it?\"\nThis is a fundamental concept in Android Architectures, and this course addresses that question.\nHere we will start from scratch, and discuss what is MVVM and why use it. We will see the components that need to go into this architecture and we will see how they fit together to provide an easy way to implement a healthy application. That is, an application that is scalable, maintainable, easy to understand and easy to test.\nWe will look at MVVM, ViewModels, LiveData, contexts, Transformations, Mediators and a lot more.\nWe will implement all these concepts in practice in several Android applications, to give you a clear understanding of how to use them.\nFinally, we will also discuss best practices, patterns and anti patterns. There are a lot of gotchas around MVVM and in this course we will learn how to avoid them.\nThis course is a complete discussion around the topic of MVVM and Android Architectures. It is the architecture supported and recommended by Google.\nThere is no need to search through incomplete online tutorials or youtube videos. This course is all you need to get a deep understanding of the architecture, as well as practical knowledge of how to use it.\nSo sign up today and let's start learning to build MVVM in our apps.",
      "target_audience": [
        "Beginner Android developers",
        "Intermediate Android developers"
      ]
    },
    {
      "title": "Kotlin for Android O Development: From Beginner to Advanced",
      "url": "https://www.udemy.com/course/kotlinandroid/",
      "bio": "Learn coding and designing Android apps with Kotlin while building real app examples like Instagram and Foursquare clone",
      "objectives": [
        "By the end of our course, you will be able to create professional applications and submit them to the play store from scratch!",
        "You will also have the skills of a professional developer who can earn thousands of dollars creating applications"
      ],
      "course_content": {
        "Course Syllabus & Introduction! Welcome To Kotlin For Android O Development!": [
          "Welcome and Content Introduction"
        ],
        "Setting Up": [
          "Set Up Introduction",
          "Installing JDK",
          "Downloading Android Studio",
          "We Always Appreciate Your Positive Feedback! How To Help Serve Our Course!",
          "Android Studio Installation",
          "Creating Our First Project",
          "Android Studio Layout",
          "Working With Emulators",
          "Working With Images",
          "Writing Your First Codes",
          "How to Download Projects",
          "Download MyFirstKotlin"
        ],
        "Kotlin Basics": [
          "Kotlin Basics Introduction",
          "Migrating From Java to Kotlin",
          "Variables",
          "Variables vs Constants",
          "Integers and Doubles",
          "String and Boolean",
          "Predefine Variable Types",
          "Arrays",
          "Arrays Continued",
          "Lists",
          "Set",
          "Maps",
          "Operators",
          "If Statements",
          "Switch",
          "For Loop",
          "While Loop",
          "Download Kotlin Learning",
          "Functions",
          "Functions and Objects",
          "Classes",
          "Simpson Maker",
          "Null Safety",
          "Inheritance",
          "Download Functions & Classes",
          "Simple Calculator Design",
          "Simple Calculator Codes",
          "Download Simple Calculator"
        ],
        "Layout": [
          "Layout Introduction",
          "Layout Learning",
          "Create Constraints",
          "Adjust Constraints Manually",
          "Different Size Options",
          "Device Independent Pixel",
          "Text XML",
          "Download Layout Learning",
          "South Park Characters",
          "South Park Constraint",
          "Download South Park Characters",
          "Grid Layout",
          "Landscape vs Portrait",
          "Lanscape Variant Design",
          "Download South Park Grid"
        ],
        "Kotlin Essentials": [
          "Essentials Introduction",
          "Storing Data",
          "Editing and Removing Data",
          "Download Storing Data",
          "Adding Activities",
          "Intents",
          "Transmitting Info Between Acitivites",
          "Download Intent",
          "Timers",
          "Download Timers",
          "Runnables",
          "Download Runnables",
          "Alert Dialogues",
          "Download Alert Dialogue"
        ],
        "Game: Catch the Kenny!": [
          "Catch The Kenny Introduction",
          "Kenny Design",
          "Design Continues",
          "Increasing Score",
          "Timer",
          "Creating Array Image",
          "Kenny Animates!",
          "Stopping Kenny",
          "Download the Kenny Game"
        ],
        "ListViews: Landmark Book": [
          "Landmark Book Introduction",
          "What is ListView?",
          "Detail Activity Settings",
          "What is Array Adapter?",
          "Creating Image Array",
          "Transmit Information",
          "What is Companion Object?",
          "Download Landmark Book"
        ],
        "Database: Artbook": [
          "Artbook Introduction",
          "SQLite Database",
          "Retrieving Data",
          "Update Datas",
          "Filter Your Queries",
          "Download SQLite Kotlin",
          "ArtBook Creation",
          "Adding Menus",
          "Second Activity Design",
          "Choosing Pictures",
          "Saving Data",
          "Retrieving Data",
          "Last Touches",
          "Download Artbook"
        ],
        "Intro to Design": [
          "Design Introduction",
          "Choose Your Design Tool",
          "Sketch Layout",
          "Shapes",
          "Pencil and Texts",
          "Vectors",
          "Operations",
          "Transform",
          "Operations Continued",
          "Rotating Copies",
          "Functions"
        ],
        "9Gag Icon Design": [
          "9Gag Design Introduction",
          "9Gag Design",
          "Drawing Home Icon",
          "Explore Icon",
          "Videos Icon",
          "News Icon",
          "Profile Icon",
          "Exporting Icons"
        ]
      },
      "requirements": [
        "No prior knowledge or programming experience is needed to take our course! Jump right in!",
        "Students will need a computer and internet connection for creating Android Apps",
        "Students will need to download Android Studio (a free downloadable software) which we show you how to get in the course!"
      ],
      "description": "Do you have an idea for an application, but you just don't know where to start?\nOr maybe you have some programming experience, but you just need a little help.\nThen our Complete Kotlin Course is for you!\nWe are looking for students eager to learn about Android O & Kotlin.\n\nAnd the best part, you do not need any prior programming language or design experience to get started!\nWe teach you from scratch, step by step, how to build your very own professional Android applications, with Kotlin.\n__________________________________________________________________________\n\nWelcome To Kotlin For Android O Development: From Beginner To Advanced!\n⇉ This course is one of the Biggest & Most Comprehensive Kotlin Courses on Udemy Ever Created!\n⇉ You get Over 180+ Lectures and 15+ hours of HD content!\n⇉ Watch the promo video to see how you can become a professional Kotlin Developer with Android O today!\n__________________________________________________________________________\n⇉ Join Over 950,000+ Students Have Enrolled in our Udemy Courses!\n\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nClick the \"Take This Course Now\" button For Instant Life-Time Access!\n__________________________________________________________________________\nIn our complete course you will learn how to build an Android application from scratch!\nIn our course, you will start from the beginning by downloading Java JDK and Android Studio. Once you have those installed, you will learn by building real applications like Instagram & Foursquare Clones! We teach you step by step and if you ever have any questions, all you have to do is post in our course discussion to receive help from Atil or Joe! Not only only will you learn with more than 15 hours of HD video, but you will also learn about designing your applications in Sketch. This will give your applications a professional touch and separate your app from all of the others! We also show you step by step how to submit your new app to the Google Play Store!\nBy the time you are finished with our complete course, you will be able to create almost any kind of application that you want in Android!\nBut thats not all...\nThe benefits to our course an absolutely unlimited!\nYou will learn useful skills about topics below:\nKotlin Basics\nLayout\nDesign with Sketch\nEssentials of Kotlin\nTable Views\nSQLite\nParse\nFirebase\nAPIs\nWorking with Servers\nAWS Server Setup\nSocial Media & Networks\nContent and Overview\nYou will also learn related subjects and practice them by building applications like \"Art Book\", \"Catch The Kenny Game\", \"Real Time Currency Converter\",\"Instagram Clone\", \"Travel Map\", \"Foursquare Clone\" and much more... You will also learn both Firebase & Parse in this course, whereas most  online guides only teach you one!\n\nI will also share the final source code of all applications that we create during the course. So you will be able to compare the products when you write your own applications!\n__________________________________________________________________________\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin learning how to become a professional Android Developer!\nWhen I learn something new about Kotlin, I add it to the course -at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But it can be done!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button, top right, now...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys & Atil Samancioglu",
      "target_audience": [
        "This course is for you if you are looking to learn Androids newest programming language, Kotlin!",
        "This course is for students who want to have the freedom of creating their own amazing apps from scratch!",
        "This course is also for you if you have app experience and want to learn some more advanced concepts!",
        "This course is for you if you are a student looking to acquire app skills and earn thousands of dollars creating applications"
      ]
    },
    {
      "title": "The Complete IOS 9 & Xcode 7 Guide - Make 20 Applications",
      "url": "https://www.udemy.com/course/the-complete-ios-9-xcode-7-guide-make-20-applications/",
      "bio": "A Complete Xcode 7 and iOS 9 Course with Swift 2 & Objective-C",
      "objectives": [
        "Full understanding of Xcode 7 and all it has to offer",
        "Learn how to program for IOS 9 to create your own apps",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS 9 development",
        "Develop in Objective-C and Swift 2",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Structure"
        ],
        "Getting To Grips!": [
          "Section 1 introduction",
          "Purchasing a Developer Licence",
          "Download and Installing Xcode 7",
          "Create, Download and Install Certificates",
          "Creating an App ID",
          "Project Types, What's Best For Me?",
          "What are Classes, InfoPLists and Delegates?",
          "Using the Interface Builder",
          "Building on the IOS 9 Simulator",
          "Building to a iOS 9 Device",
          "Creating Actions and Outlets",
          "iOS 9 App 1: Creating a Hello World Application",
          "Universal Constraints",
          "End of Section 1 Quiz"
        ],
        "Understanding Functions": [
          "Objective-C Section 2 Introduction",
          "Displaying Text",
          "Text Properties",
          "Custom Fonts",
          "Dismissing the Keyboard",
          "NSTimers",
          "Display Time and Date",
          "Using If Statements",
          "iOS 9 App 2: Reaction Game",
          "Fading Objects",
          "Hiding Objects",
          "Enabling and Disabling Objects",
          "App 3: Tapping Game",
          "Creating a Random Number Generator",
          "Creating a Random Word Generator",
          "Random PList Generator",
          "iOS 9 App 4: Joke Generator",
          "End of Section 2 Quiz"
        ],
        "Creating Actions": [
          "Objective-C Section 3 Introduction",
          "UISwitches",
          "UISegmentedControls",
          "Controlling UISliders",
          "iOS 9 App 5: Temperature Calculator",
          "Detecting Shake Gestures",
          "App 6: Shake Me Game",
          "Creating URL Links",
          "Using Delayed Actions",
          "iOS 9 App 7: Calculator App",
          "End of Section 3 Quiz"
        ],
        "Getting A Good View!": [
          "Objective-C Section 4 Introduction",
          "UIViews",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Using UIPickerViews",
          "Using UIWebViews",
          "Controlling UIWebViews",
          "Activity Indicator",
          "iOS 9 App 8: Browser Application",
          "Using UIMapViews",
          "Controlling UIMapViews & Displaying Location",
          "iOS 9 App 9: Maps Application",
          "Switching Views in Storyboards",
          "Switching to a XIB View",
          "Removing The Status Bar",
          "End of Section 4 Quiz"
        ],
        "Making An App Look Good": [
          "Objective-C Section 5 Introduction",
          "Importing Files",
          "Displaying Images",
          "Displaying Retina Images",
          "Changing Images",
          "Adding Images To Buttons",
          "Displaying Images From URL'S",
          "iOS 9 App 10: Snap Game",
          "Displaying PDF'S",
          "Changing the Background Colour",
          "Creating Animations",
          "Object Styling",
          "Adding Loading Screens/Launch Images",
          "Universal Launch Screen",
          "Adding App Icons",
          "Taking Screenshots Programatically",
          "iOS 9 App 11: Camera Application",
          "End of Section 5 Quiz"
        ],
        "Coming In Loud And Clear": [
          "Objective-C Section 6 Introduction",
          "Playing Audio Files",
          "iOS 9 App 12: Soundboard Application",
          "iOS 9 App 13: YouTube Videos",
          "Vibrating the Device",
          "End of Section 6 Quiz"
        ],
        "Creating A Tab Bar Application": [
          "Objective-C Section 7 Introduction",
          "iOS 9 App 14: Tab Bar Application - Set Up Part 1",
          "iOS 9 App 14: Tab Bar Application - Customising Part 2",
          "End of Section 7 Quiz"
        ],
        "Creating A Table View Application": [
          "Objective-C Section 8 Introduction",
          "iOS 9 App 15: Table View - Populating a Table View Part 1",
          "iOS 9 App 15: Table View - Pushing to a Detail View Part 2",
          "iOS 9 App 15: Table View - Populating a Detail View Part 3",
          "iOS 9 App 15: Table View - Customising a Table View Part 4",
          "iOS 9 App 15: Table View - Adding Table View Headers Part 5",
          "End of Section 8 Quiz"
        ],
        "Saving And Loading Stuff!": [
          "Objective-C Section 9 Introduction",
          "Saving and Loading Text",
          "Saving and Loading Data"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 7"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad iOS 9 Apps but are not sure where to start? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is your course!\nThis Complete IOS 9 & Xcode 7 Guide - Make 20 Applications will give you everything your need to start your new career in IOS 9 development, The course has been structured to support Objective-C and Swift 2, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nCreate 20 Real iOS 9 Applications throughout the course from fun and simple games to powerfull utility apps using the native features of IOS 9 devices to help you understand the process of creating applications\nSell Your App to Millions of Potential Users and earn extra revenue from Ad networks and in app purchases, Making money has never been so easy!\nNot only do you get the best online IOS 9 development course online buy You also get first class responsive support by email, Twitter or on the Udemy forums, So you can rest assure you have full guidance in your new career!\nWhy Choose This iOS 9 & Xcode 7 Course?\nMany programmers learning to create there first iOS 9 application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This iOS 9 & Xcode 7 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 7 and to offer any advice needed and before you know if you will have created your first iOS 9 app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode 7, iOS 9, Interface Builder, Simulator and Project Types\nObjective-C: Full guide to creating full featured apps\nSwift 2: Get to know the new updated language\nCreate 20 real iOS 9 applications in both languages\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nFull Featured iOS 9 Apps\nSaving and Loading: From text to data\nEarning Revenue Ad Networks\nFun and Simple iOS 9 Games\nFull In App Purchase Support\nCore Data Applications\nCamera Support Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS 9 Apps"
      ]
    },
    {
      "title": "SwiftUI Navigation API: A 1-Hour Crash Course",
      "url": "https://www.udemy.com/course/swiftui-navigation-api-a-1-hour-crash-course/",
      "bio": "Efficiently navigate through your SwiftUI apps with ease using the Navigation API - Build better iOS apps with SwiftUI",
      "objectives": [
        "Understanding the basic concepts of SwiftUI Navigation API",
        "Creating and customizing NavigationStack",
        "Using NavigationLink to navigate between views",
        "Programmatic navigation in SwiftUI",
        "Implementing hierarchical navigation structures"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "Introduction to NavigationStack": [
          "Hello NavigationStack",
          "NavigationLink with Title and Destination",
          "NavigationLink Value and NavigationDestination Modifier",
          "NavigationLink and NavigationDestination for List"
        ],
        "Programmatic Navigation": [
          "Introduction to Programmatic Navigation",
          "Enum Routes for Navigation Path",
          "Implementing Global Navigation",
          "NavigationPath",
          "Pop to Root and Pop to Specific View"
        ],
        "NavigationSplitView": [
          "Introduction to NavigationSplitView",
          "SideBar and Detail Interaction",
          "SideBar Menu and Movie List as Details",
          "SideBar, Movie List and Movie Detail",
          "NavigationSplitView with NavigationStack"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "iOS developers who want to learn SwiftUI Navigation API",
        "Basic knowledge of SwiftUI fundamentals"
      ],
      "description": "SwiftUI Navigation API is an essential component of developing iOS apps, enabling users to navigate between views and pages seamlessly. This course will teach you how to master SwiftUI Navigation API and build engaging and intuitive user interfaces for your iOS apps.\nIn this one-hour course, you will learn how to implement SwiftUI Navigation API to build a dynamic and interactive app that responds to user interactions. You will begin by exploring the fundamental concepts of SwiftUI Navigation API, such as NavigationStack and NavigationLink. You will also learn how to leverage these components to create hierarchical navigation structures and implement various navigation styles.\n\n\nThe course will cover the following topics:\nUnderstanding the basic concepts of SwiftUI Navigation API\nCreating and customizing NavigationStack\nUsing NavigationLink to navigate between views\nProgrammatic navigation in SwiftUI\nImplementing hierarchical navigation structures\n\n\nBy the end of this course, you will have a solid understanding of SwiftUI Navigation API and be able to create complex navigation structures for your iOS apps. You will also be able to customize navigation styles to match your app's brand and design.\n\n\nPrerequisites:\nFamiliarity with Swift programming language\nBasic knowledge of SwiftUI fundamentals\nWho should take this course?\niOS developers who want to learn SwiftUI Navigation API\nAnyone who wants to build engaging and intuitive user interfaces for their iOS apps\nBeginners who want to get started with SwiftUI Navigation API",
      "target_audience": [
        "iOS developers who want to learn SwiftUI Navigation API",
        "Anyone who wants to build engaging and intuitive user interfaces for their iOS apps",
        "Beginners who want to get started with SwiftUI Navigation API"
      ]
    },
    {
      "title": "Flutter & Dart: SOLID Principles and Top Design Patterns",
      "url": "https://www.udemy.com/course/flutter-dart-solid-principles-and-top-design-patterns/",
      "bio": "Learn how to improve your Flutter & Dart code through mastery of S.O.L.I.D principles and the Top GoF Design Patterns.",
      "objectives": [
        "*Master* the most important and fundamental design patterns in modern Software Engineering within the *Flutter* framework using *Dart*",
        "Learn and internalize the S.O.L.I.D principles of design like seasoned *Senior Developers* do.",
        "Get a deep understanding of the WHAT, WHY, and HOW for those *Fundamental Design Patterns*.",
        "Get a full Architectural exposition (with UML) of each pattern as well as *real-world* scenarios with hands-on coding examples for each pattern.",
        "Work on and complete Dart-based assignments that will push your understanding of those patterns deeper and more fundamentally.",
        "Learn how to *identify* the *best pattern* for the given Architectural challenge."
      ],
      "course_content": {
        "Introduction": [
          "What are Design Patterns and why do we need them?",
          "The Design Patterns Covered in This course.",
          "Quick Quiz about design pattern families",
          "The WHY Of Software Architecture.",
          "Why use UML?",
          "Organized vs. Unorganized code.",
          "*OPTIONAL*: UML Refresher."
        ],
        "What makes a Great Architecture?": [
          "Hallmarks of Good Architecture.",
          "S.O.L.I.D Design Principles.",
          "SOLID *Practice Session* - Single Responsibility Principle(SRP)",
          "SOLID *Practice Session* - Open/Closed Principle (OCP)",
          "SOLID *Practice Session* - Liskov Substitution Principle (LSP)",
          "SOLID *Practice Session* - Interface Segregation Principle (ISP)",
          "SOLID *Practice Session* - Dependency Inversion Principle (DIP)",
          "SOLID Principles Quiz"
        ],
        "Singleton Design Pattern": [
          "Understanding the Singleton Pattern",
          "Architectural Considerations for Singleton Pattern",
          "Coding the Singleton Pattern in Dart",
          "Singleton Quiz",
          "Singleton Pattern Coding Exercises",
          "Coding Exercise #1 Solution",
          "Coding Exercise #2 Solution"
        ],
        "Factory Method Design Pattern": [
          "Understanding Factory Method Pattern",
          "Architectural Considerations for Factory Method Pattern",
          "Coding the Factory Method Pattern in Dart",
          "Factory Method Pattern Quiz",
          "Factory Method Pattern Coding Exercises"
        ],
        "Builder Design Pattern": [
          "Understanding Builder Design Pattern",
          "Architectural Considerations for Builder Design Pattern",
          "Coding the Builder Pattern in Dart",
          "Builder Pattern Quiz",
          "Builder Design Pattern Coding Exercises"
        ],
        "Adapter Design Pattern": [
          "Understanding the Adapter Design Pattern",
          "Architectural Considerations for the Adapter Pattern",
          "Coding the Adapter Pattern In Dart",
          "Adapter Pattern Quiz",
          "Adapter Design Pattern Coding Exercises"
        ],
        "Strategy Design Pattern": [
          "Understanding the Strategy Design Pattern",
          "Architectural Consideration for the Strategy Design Pattern",
          "Coding the Strategy Design Pattern",
          "Strategy Pattern Quiz",
          "Strategy Design Pattern Coding Exercise"
        ],
        "Observer Design Pattern": [
          "Understanding the Observer Design Pattern",
          "Architectural Consideration for the Observer Design Pattern",
          "Coding with Observer Design Pattern Part 1 - setState()",
          "Coding with Observer Design pattern Part 2 - Streams",
          "Observer Pattern Quiz",
          "Observer Design Pattern Coding Exercise"
        ],
        "State Design Pattern": [
          "Understanding the State Design Pattern",
          "Architectural Consideration for the State Design Pattern",
          "Coding the State Design Pattern",
          "State Design Pattern Coding Exercises"
        ],
        "Course Assignment - The Game of Life": [
          "About John Conway's Game Of Life Simulation",
          "A Word about the \"Game of Life\" Architecture"
        ]
      },
      "requirements": [
        "It is assumed that you know your way around Flutter and Dart. Only basic experience is required.",
        "You should be able to run the Dart code that is provided with the course. We will use Visual Studio Code as our IDE but you can use any IDE you like.",
        "Access to a computer. A Mac, Windows, or a Linux based operating system is equally fine. All the tools are OS Independent.",
        "You should have access to a mobile device but this is not strictly necessary as we will develop our code on an emulator/simulator first."
      ],
      "description": "We all want to become better software developers and be able to call ourselves \"Software Engineers\" or \"Software Architects\", but to do that you first have to master a number of design patterns.\nThis course will put you on a track to that destination.\nWe will teach you how to recognize when to use specific design patterns to build complex systems in a divide-and-conquer manner so that complexity is reduced and abstracted.\nBut rather than learning all the design patterns out there, we have curated the most important, the top fundamental GoF Design Patterns for you.\n\n\nAll of that in the context of the Flutter Framework using Dart.\n\n\nWe start with full understanding of the S.O.L.I.D Design Principles and how they in turn relate to those design patterns. We eplain everything in the context of real-wprld problems as well as specific code examples.\nAt the end of the course you will get to Architect a solution by coding John Conway's Game of Life simulation which will run on your mobile device.\n\n\nComplex software systems are plagued with three major issues:\nTimelines are stretched as requirements change.\nMultiple developers have a hard time coordinating their efforts.\nCode redundancy.\n\nThis in turn creates issues with maintenance and overall flexibility for adding new features. In general this means poorly designed systems that are hard to maintain and are not adaptable.\nOne answer to all the above problems is having a proper design and architecture. Think of a skyscraper being built. There is always a high-level blueprint. This blueprint is used to show everybody involved (from architects to supply chain to construction workers to machinery scheduling etc…) what is being worked on.\n\n\nEverybody understands and follows the same vision.\n\n\nA blueprint has a number of commonly understood elements which repeat themselves across many projects. For example all buildings need electrical wiring and plumbing, they might need elevators, and cooling systems, and underground parking lots, and of course stairs. They also usually are connected to the electrical grid and water supply as well as… roads.\nAll these common elements follow certain standards that have been improved over many many years and across many many projects. They are well understood and can be used almost like recipes.\nIn Software Engineering we also have a set of elements that repeat themselves across many projects. For example all software applications need to create objects, they need to communicate state change across those objects, they need to be able traverse over collections of those objects. In other words, if you want to be a better developer then you need to become proficient in those elements that have been time-tested. In the Software Engineering world these elements are known as “Design Patterns”\n\n\nThis course will teach students how to recognize when to use specific design patterns to build complex systems in a divide-and-conquer manner so that complexity is reduced and abstracted.\nThis will help you to design projects in an Architectural manner before any major development happens and can be used to shorten development time and reduce maintenance costs.\n\n\nDesign patterns are important because they are time-tested recipes or solutions to well-known software engineering problems. When creating software applications certain problems recur in a pretty predictable fashion so rather than ‘reinvent’ the wheel we will have an assortment of, if you will, wheels to choose from.\nWe will teach you this in a slightly different manner than you probably have been taught before. We will take a practical approach (i.e. specific examples) but the power of Design Patterns comes from their ‘concept’ and we will teach you the concept of those design patterns so that you are fully able to change them and modify them to your needs. In addition we will look at how to combine all those patterns into something greater: an architecture.\n\n\nA well designed Architecture is this magical thing where the whole is greater than the sum of its parts.\n\nThis is what we will strive to teach you.",
      "target_audience": [
        "*Flutter & Dart* developers who want to learn to Design, Architect, and ultimately develop *better code*.",
        "Developers who want to get a deep understanding of what makes GREAT *Software Architecture*."
      ]
    },
    {
      "title": "Create Your First React Native App",
      "url": "https://www.udemy.com/course/create-your-first-react-native-app/",
      "bio": "A crash course in building your first React Native app in a weekend or less!",
      "objectives": [
        "How to use the most common React Native components",
        "Install and configure third party packages",
        "Setup various types of navigation",
        "Design reusable React Native components",
        "Confidently create future React Native applications"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Javascript and some ES6 syntax",
        "Comfortable using the command line (basic usage in this course)"
      ],
      "description": "Interested in learning React Native but don’t want to spend the hours and hours searching for answers to errors you’ve never seen before, hunting down the right packages, frustratingly asking yourself why you can’t figure something so seemingly simple out, and becoming best friends with user90210 on StackOverflow?\nThis course is designed to get you up and running with React Native as quickly as possibly while introducing you to the most critical pieces of React Native development. It’s not the end-all-be-all - it’s designed to get you started fast while building a firm foundation.\nThere’s nothing like building your first app - and that’s what this course will help you accomplish.\n\nReact Native enables anyone with a computer and basic Javascript knowledge to develop native apps quickly and provide a user experience that no other Javascript based mobile solution has been able to provide before. With the likes of Facebook, Airbnb, Instagram, Tesla, and dozens more - there’s no doubt that React Native is the right solution for your mobile app.\nWe’ll cover\nScrolling lists\nDesigning and creating reusable components\nProject organization\nNavigation\nCore APIs\nInstalling third party packages\nAnd more…\nAnd we’ll do this for both iOS and Android.\nWhat if you’ve already built a React Native app?\nWell, how do you feel about it? Are you confident in the choices you made? Do you feel like you’ve got a solid foundation of knowledge and experience? If so, then this course probably isn’t for you. However, if you feel like you were hacking a lot of things together, pasting code from StackOverflow that you didn’t truly understand, then you should consider joining.",
      "target_audience": [
        "People wanting to get started with React Native and want a quick win",
        "React Native developers who want to strengthen their foundation of knowledge",
        "Anyone wanting to get started with React Native",
        "Developers looking for an alternative to their Cordova based applications"
      ]
    },
    {
      "title": "Dart and Flutter: The Complete Developer's Guide",
      "url": "https://www.udemy.com/course/dart-and-flutter-the-complete-developers-guide/",
      "bio": "Everything you need to know for building mobile apps with Flutter and Dart, including RxDart and Animations!",
      "objectives": [
        "Build beautiful multi-screen apps with Flutter",
        "Understand the different approaches for loading and maintaining data in Flutter apps",
        "Create and publish open source projects using Dart",
        "Learn how to build offline-enabled apps with incredibly efficient data loading",
        "Comprehend the best method for reading the incredible amount of Flutter documentation",
        "Store long-term data on a user's physical device using SQLite",
        "Master streams and understand reactive programming to create Flutter apps"
      ],
      "course_content": {},
      "requirements": [
        "Previous programming experience with Javascript, Java, Python, or similar is required ."
      ],
      "description": "If you're tired of spinning your wheels learning Swift or Android, this is the course for you.\n\nAnimations? You will learn it.  Architectural Patterns? Included.  Navigation? Of course!\nFlutter is a newcomer to the mobile development scene.  Strongly supported by Google, it is already viewed as an ideal platform for replacing native Swift and Android development.  Thanks to its amazing standard library of widgets, fast compile times, and amazing documentation, developers are falling in love with Flutter!\nThis course supports MacOS and Windows - develop Android and iOS apps easily!\nFlutter apps are created using the language Dart.  No problem if you're not already familiar with Dart; this course includes a lightning fast introduction to Dart at the beginning, along with hours of bonus lectures at the end of the course solely focused on Dart and its advanced features.  If you come from a background working with Java, Ruby, or Javascript, you'll feel right at home with Dart - the syntax is nearly identical, only a few core concepts need to be learned.  Dart is a strongly typed language - but don't be discouraged if you're not a fan of strong types!  I spend special time in this course to make it extra clear why developing with a strongly typed language is a breeze!\n\nOne of the greatest challenges around developing Flutter applications right now is understanding how to design and architect apps.  Flutter is still in rapid development, and the community at large is still trying to find out the best techniques.  With this in mind, special attention is paid in the course to making sure you understand the primary design patterns advocated by Google's Flutter team, including both the 'Stateful Widget' pattern and the 'BLOC' pattern.  The 'BLOC' pattern makes heavy use of Reactive Programming techniques, which you'll learn about in this course as well.  These techniques can be easily applied to other languages and frameworks as well - talk about a bonus!\nOf course, no mobile app is complete without some nice looking animations.  You'll learn how to build animations using Flutter's standard library of tools, which can be easily used to make interactions that your users will love.  You should plan to complete the course with knowledge of how to reference Flutter's standard library of widgets to assemble complex animations.\nSign up today and you will:\nUnderstand the Dart language and its primary features\nStore information for long periods of time on the user's device with offline storage\nLearn how to optimize network requests for improved performance on mobile networks\nDelight your users with complex animations\nExpose the functionality of your apps with multi-screen navigation\nSteer through the incredible amount of Flutter documentation\nMaster Reactive Programming with streams by using RxDart\nImplement advanced design patterns advocated by Google's official Flutter team\nHandle user input with form validation\nLearn to build open source Dart packages and distribute them to other developers\nI've built the course that I would have wanted to take when I was learning Flutter. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Developers looking to build quality apps with Flutter"
      ]
    },
    {
      "title": "iOS 12 Chat Application like WhatsApp and Viber",
      "url": "https://www.udemy.com/course/ios-12-chat-application-like-whatsapp-and-viber/",
      "bio": "iOS12, swift 4.2, xCode 10, whats app, chat, messenger, push notification, call, social media, ios development",
      "objectives": [
        "the course will cover many topic of iOS development.",
        "By the end pf this course you will have your own copy of whatsapp with all the functionalities"
      ],
      "course_content": {
        "Getting started": [
          "Getting the xCode"
        ],
        "Welcome View": [
          "Setting up the user interface",
          "Connecting UI with code",
          "Adding cocoapods",
          "Creating firebase project",
          "Download assets",
          "Adding Assets to project",
          "Login and Register user functions",
          "Login User function",
          "Register user function part 1"
        ],
        "Finish registration view": [
          "Finish registering user (creating profile) User interface",
          "Profile view connections",
          "Segue from Welcome view to Profile view",
          "Cancel button function in profile view",
          "Done Button functionality",
          "Register User",
          "Finish registration function",
          "Save first users to firebase",
          "Registering user",
          "Testing login function",
          "Implementing autologin",
          "Log out user",
          "Creating more users"
        ],
        "Displaying users from firebase": [
          "Users Table View Controller User interface",
          "Custom table view cell for users part 1",
          "Custom table view cell for users part 2",
          "Users Table View Controller code part 1",
          "Users Table View Controller code part 2 (Search users)",
          "Load users function part 1",
          "Load users function part 2",
          "Load users function part 3",
          "Setting Big titles for chats",
          "Search Users part 1",
          "Search Users part 2",
          "Search Users part 3",
          "Search Users part 4",
          "Search Users part 5 fix errors"
        ],
        "Profile View Controller": [
          "Profile View User Interface",
          "Profile view connections part 1",
          "Profile view connections part 2",
          "Profile view connections part 3 update block status",
          "Block user function",
          "Changing file/folder structure"
        ],
        "Recent Chats": [
          "Starting Private chat",
          "Create Recent chats part 1",
          "Create Recent chats part 2",
          "Saving first recent chat to firestore",
          "Recent chats custom cell",
          "Implementing code for custom cell part 1",
          "Implementing code for custom cell part 2",
          "Implementing code for custom cell part 3",
          "Implementing code for custom cell part 4"
        ],
        "Recent Chats view controller": [
          "Chats view controller (table view functions)",
          "Chats view controller (Loading recent chats)",
          "Chats view controller (Display first recent chat)",
          "Custom header view for group chat button",
          "Recent avatar tap function",
          "Searching recent chats",
          "Delete and Mute buttons for recent chats",
          "Delete function implementation",
          "Restarting existing chat"
        ],
        "Chat view Controller": [
          "Chat view controller part implementation",
          "Display chat view controller (and fix errors)",
          "Fixing UI for iPhone X",
          "Adding microphone button and custom back button",
          "Implementing send button and accessory button functions",
          "Displaying option menu for accessory button",
          "Updating send button UI",
          "Send Message function"
        ],
        "Outgoing message Class": [
          "Outgoing Message part 1",
          "Outgoing Message part 2",
          "Send text message",
          "Saving first text message to firestore",
          "Incoming message class (text messages)"
        ],
        "Back to chats view controller": [
          "Loading chats part 1",
          "Loading chats part 2",
          "Insert messages function",
          "Inserting initial loaded messages",
          "JSQMessages DataSource functions",
          "Timestamping messages and delivery status part 1",
          "Timestamping messages and delivery status part 2",
          "Fixing delivery status",
          "Listening for new chats",
          "Loading old chats in the background",
          "Loading earlier messages",
          "Testing load earlier message button",
          "Custom headers for chat view",
          "Setting the custom heders",
          "Setting withUser functionality for our chat",
          "Test run to check custom headers",
          "Camera class and image picker controller",
          "updating permissions in info.plist",
          "Uploading images to firebase storage part 1",
          "Uploading images to firebase storage part 2",
          "Send picture message function",
          "Sending first picture message",
          "Download Image part 1",
          "Download Image part 2",
          "Creating JSQ photo image",
          "Creating Photo Message",
          "Test run to receive first picture message"
        ]
      },
      "requirements": [
        "Computer running macOS",
        "xCode (free from AppStore)",
        "You should know your way around xCode",
        "You need to have experience in swift development"
      ],
      "description": "In iOS12 Chat App we are  going to build real world iOS application. And when I say real world, I mean you can use this App every day, communicate with friends and family!\n\nUnlike any other courses found on Udemy, I always teach full real world apps, when we finish with the course, you are going to have an app ready to post to AppStore. This iOS12 Chat Application can easily replace your native iOS chat app or WhatsApp. It will have all functions that WhatsApp provides.\nWhat our app will include:\nOne on one chat\nGroup chat\nMultimedia messages (Photo, Video, Audio, Location)\nFully end to end encryption\nPush Notifications\nCall function\nCallKit\nPushKit\nFirebase users Authentication\nFirebase storage\nFirebase firestore (new real time database from firebase)\nPhone number authentication\nCustom uicollection views\nCustom UITableviews\nOneSignal\nSinch\nGit Source control\nthe app covers many more topics its  impossible to include all of them here\n\n\nThis iOS12 Chat App is NOT beginner level course. You need to know your way around the xCode, be familiar with it, you have to have basic knowledge in Swift and application building. We are going to start from scratch and build the application together. All assets will be provided by me. I will type and explain every line of code. the course is around 35 hours long. And by the time we finish, you will learn a lot of new things even if you are experienced iOS developer.\nThe curse will teach you how to write clean code, structure your app development, so even if you get back to your code in few years, you can read and understand it clearly.\nWe are also proud to say that we have one of the best Support available on Udemy! Our Q/A Section is constantly monitored and all questions are answered within few hours, Sometimes we even chat with students in real time to help them with the issues they may face during the study.\nDon’t waste your time on low quality courses where you don't even get support of the instructor\nYour time is precious. We offer the best video courses with carefully crafted content, we are learning by coding!\n\n\nDon't just take our word for it, check out our other courses and what other students have to say about our courses!\n\n\n\"This course is so far the best course I took in UDEMY. I really learned something. Totally worth the time. Won't regret it. The instructor was responsive too and the course is new and knowledgeable.\"  J Nima\n\"A excellent Tutorial by david. Very good explanation\" Tapan Kumar Raut\n\"There is nothing on Udemy like David's courses! I cannot recommend his courses enough. Best teacher out there, very responsive as well. \" Kris\n\"I really do love the approach, the structure of the course gives you the ability to move forward smoothly, and efficiently gain as much knowledge as possible, the instructor really goes in-depth, it's incredibly comprehensive, not to forget that this is a real world project, and the advanced concepts gained here make me all confident that i'll be able to build my own apps in a very effective way. the course is well taught, and it really deserves the 5 stars, the instructor as well, he explains things in a very clear, clean way. Definitely enjoying the Course. and definitely Thumbs Up.\" Yen Loo\n\"This is one of the most complete and comprehensive iOS projects on Udemy! Everything works! No broken code! You learn Firebase, Onesignal and Backendless in one project. The instructor is always accessible, he goes for quality not quantity. I still have a way to go, but so far it has kept me completely engaged and focused! I wish there were more courses like this! I will definitely purchase another from David.\" antr8tr\n\n\nWe are so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days, No Questions Asked! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the Buy Now button and join the best iOS 12 Chat App development course and lets get started.",
      "target_audience": [
        "If you are intermediate iOS developer and want to take your skills to next level of real world app development"
      ]
    },
    {
      "title": "iOS 13 & Swift 5: Login, Sign Up & Onboarding with Firebase",
      "url": "https://www.udemy.com/course/ios-13-swift-5-login-sign-up-onboarding-with-firebase/",
      "bio": "Create a beautiful onboarding and sign up feature with Swift 5 using Firebase & Firestore",
      "objectives": [
        "How to authenticate users with Firebase",
        "How to create users with Firebase",
        "How to build an onboarding presentation with advanced animations",
        "How to log in / sign users up with Google",
        "How to use the MVVM (Model-View-ViewModel) Architecture",
        "Protocol Oriented Programming",
        "How to write reusable code with refactors and custom subclasses",
        "How to read/write information to Firebase",
        "How to build a stunning User Interface",
        "How to build a premium User Experience"
      ],
      "course_content": {
        "Login & Registration UI": [
          "Configure Project",
          "Introduction To Auto Layout",
          "Adding Text Fields",
          "Login Button & Code Refactor",
          "Finish Login UI",
          "Sign Up UI",
          "Reset Password UI"
        ],
        "Form Validation": [
          "Introduction To View Models",
          "Login Form Validation Using View Model",
          "Finishing Up Form Validation"
        ],
        "Setup Firebase": [
          "Add Firebase To Project",
          "Create Firebase User",
          "Setup Home Controller & Logging Out After Sign Up",
          "Logging User In"
        ],
        "Google Sign In": [
          "Setup Google Sign In",
          "Authentication API Code Refactor",
          "Signing In With Google"
        ],
        "Onboarding": [
          "Setup Onboarding",
          "Finish Onboarding UI",
          "Onboarding View Model",
          "Dismissing Onboarding & Onboarding Delegate Protocol",
          "User Data Model & API",
          "Onboarding Presentation Logic & API"
        ],
        "Welcome Label & Bug Fixes": [
          "Showing Welcome Label With User Data",
          "Update User Info After Authentication",
          "Google Sign In Bug Fix"
        ],
        "Reset Password & User Experience Features": [
          "Resetting Password",
          "Showing Loading Indicator To User",
          "Showing Alert Messages To User"
        ],
        "Firestore Configuration": [
          "Creating User With Firestore",
          "Fetching User With Firestore"
        ]
      },
      "requirements": [
        "Some basic knowledge of Xcode and Swift is preferred"
      ],
      "description": "What are we building?\nIn this course, you will learn how to build a user sign up, login and onboarding feature using Firestore and Swift. We will also go over how to integrate Google Sign In, and will be usingn the MVVM architecture patter. Throughout the process, you will develop high level programming, app design and app development skills.  We will be building this without the use of storyboards, fully programmatically.\n\n\nWhy take this course?\nUser authentication is a requirement for a wide range of mobile applications. This course will teach you how to build an amazing user interface with great functionality, that is also very intuitive and very easy to use. You will be also be learning some great fundamentals of programming along the way, including how to use the MVVM architecture,  creating custom subclasses, and more. You will learn how to code like a pro, writing clean, scalable and maintainable code. This can also serve as a login / signup template for your future applications. The code base is extremely easy to integrate into other applications, and covers both versions of Firebase databases (Realtime Database and Cloud Firestore). You can't go wrong with this one!\n\n\nPrior Experience?\nSome programming and basic Xcode experience is preferred. The course will move a little fast if you're a complete beginner, but you will pick things up along the way.\n\n\nWhat will you learn?\nHow to sign a user up with Google\nHow to sign a user up with email / password\nHow to log a user in with email / password\nComprehensive knowledge and understanding of Swift 5 & Xcode 11\nHow to Implement Model View ViewModel (MVVM) architecture\nHow to build a User Interface programtically with UIKit\nHow to use stack views intelligently\nAdvanced level programming and app development skills\nAdvanced level User Interface Design\nHow to communicate with Firebase Realtime Database (read/write)\nHow to communicate with Firebase Cloud Firestore (read/write)\nHow to structure data for optimum performance\nHow to parse incoming JSON data from database\nHow to use CocoaTouch classes, UIKit, UserNotifications and more\nHow to use CocoaPods and custom third party APIs\nHow to implement/use protocols\nHow to implement custom subclasses for clean and reusable code\nHow to create extensions and functions for clean and reusable code",
      "target_audience": [
        "All Levels"
      ]
    },
    {
      "title": "NativeScript + Angular: Build Native iOS, Android & Web Apps",
      "url": "https://www.udemy.com/course/nativescript-angular-build-native-ios-android-web-apps/",
      "bio": "Use one Angular + NativeScript codebase to build native iOS, Android and web apps and learn NativeScript from scratch.",
      "objectives": [
        "Build real native mobile apps for iOS and Android with web technologies and the Angular framework",
        "Share code to build a web app AND native apps from one and the same codebase",
        "Learn how to use the NativeScript ecosystem and features"
      ],
      "course_content": {},
      "requirements": [
        "Solid Angular knowledge is a must-have (How it works, dependency injection, Angular app structure)",
        "NO prior NativeScript knowledge is required"
      ],
      "description": "With Angular (2+), you can already build highly reactive and engaging web apps.\nWouldn't it be amazing to use that same tech stack and knowledge to build real native mobile apps for iOS and Android?\nNativeScript enables you to do exactly that!\nYou build a normal Angular app and manage your entire app logic via Angular + TypeScript. Combine that with NativeScript's TypeScript/ Angular modules and the strong NativeScript build system to generate Android and iOS apps which you can (and will in this course) deploy to the Apple App Store or Google Play Store.\nBut even better than that: You're also able to use that same \"Native App with Angular\" codebase to build a regular web app out of it as well.\n1 codebase, 3 kinds of apps. Pretty sweet!\nIn this course, you learn:\nWhat exactly NativeScript is and how it works\nWhich core building block a NativeScript app has\nHow to build nice user interfaces with NativeScript layouts and UI widgets\nHow to add mobile navigation (forward-backward, tabs, side drawer) in a NativeScript app\nHow to style your app with CSS (yes, the mobile app, too!)\nHow to fetch user input\nHow to handle state and data in the app (incl. storage on the device)\nHow to send data to a server and fetch it from there\nHow to implement authentication\nAND: How to do all that in a way that works in both native mobile apps as well as a web app - with one and the same codebase\nTo succeed in this course, Angular knowledge is a must-have. You need to know how Angular works, how you build and use components, what dependency injection is and how it works and how the general Angular architecture (with NgModule etc) works.\nA brief refresher on some Angular core concepts is provided but if you got zero Angular knowledge, you'll very likely not be able to follow along.\nYou absolutely DON'T have to be an expert though!\nI'd love to welcome you in the course! :-)",
      "target_audience": [
        "Web developers who want to build native mobile apps, too",
        "Developers who want to use one codebase for three kinds of apps"
      ]
    },
    {
      "title": "Master Android Application Build 3 Applications from Scratch",
      "url": "https://www.udemy.com/course/master-android-application-build-3-applications-from-scratch/",
      "bio": "Discover the Art of Android Development: Develop 3 Real-World Apps",
      "objectives": [
        "Master Material Tab Layout and create a visually appealing user interface.",
        "Build a Logo Quiz Application using static data in ArrayList Collections.",
        "Implement efficient data management and retrieval techniques.",
        "Develop a Background Music Player Application with playback controls and playlist functionality.",
        "Understand the structure of Android applications and learn to organize code effectively.",
        "Apply best practices for user input handling, navigation, and data validation",
        "Troubleshoot common issues and debug applications for optimal performance."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "1. Guess The Logo App in Android": [
          "Start the Project and Design Creation in Android Studio",
          "Creating Question Class for Guess The Logo App",
          "Fetching View inside the Main Activity of App",
          "Create Radio Button Dynamically for the App",
          "Adding Update Questions Methods for the App",
          "Now It's time to add the Quiz Logic to the App",
          "Result Activity for the Guess the Logo App",
          "Adding Logical Code for the Result Activity"
        ],
        "2. Tab Layout App in Android": [
          "Start the Design of Project",
          "Adding the Fragments for Application",
          "SetAdapter to the ViewPager for TabLayout Application"
        ],
        "3. Background Music App in Android": [
          "First Part Start the Design of the application",
          "Second It's Timer to Code the SettingsPreferences Class",
          "Working with AppController Class in Android",
          "Finally Playing the Music inside the Activities"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "No prerequisites are required for this course. Basic knowledge of Java programming and Android development concepts will be beneficial but not mandatory. The course is designed for beginners, and all necessary topics will be covered in detail."
      ],
      "description": "Are you passionate about Android app development and ready to take your skills to the next level? Look no further! Join me on an exciting journey as we explore the intricacies of building three captivating Android applications from scratch. In this course, we will dive deep into the world of Android development and unlock the secrets to creating robust, user-friendly, and engaging applications. Let's explore the structure and features of each application:\nMaterial Tab Layout Application with Fragments: In this first application, we will delve into the world of material design and implement a stunning tab layout using fragments. Material design principles emphasize a clean and modern user interface, offering users an intuitive and visually appealing experience. With the power of fragments, we can create dynamic and reusable components that enhance navigation and interaction within the application.\nLogo Quiz Application with Static Data in ArrayList Collections: In our second application, we will test our users' knowledge with an exciting logo quiz game. We'll leverage the power of ArrayList collections to store and manage static data, such as logos and corresponding answers. Through clever question presentation and user feedback, we'll create an engaging and interactive quiz experience. This application will demonstrate the importance of data handling and user interaction in building captivating Android applications.\nBackground Music Player Application in Android: Our third application focuses on multimedia and audio playback. We'll build a background music player that allows users to enjoy their favorite tunes while navigating other features of their device. We'll explore audio playback controls, manage audio resources, and ensure a seamless and uninterrupted listening experience. This application will highlight the importance of creating smooth and immersive user interfaces while incorporating multimedia functionality.\nBy building these three real-world applications, you will gain valuable insights into essential concepts and techniques of Android app development. Along the way, we'll cover topics such as UI/UX design, data handling, fragment management, user interaction, and multimedia integration. Through hands-on practice, you will develop the skills and confidence to create your own unique Android applications.\nEmbark on this educational journey and become a master of Android app development. With our step-by-step guidance and detailed explanations, you'll gain a deeper understanding of application structure, design principles, and implementation techniques. Don't miss out on the opportunity to elevate your skills and create stunning, functional, and user-friendly Android applications. Enroll now and unlock your full potential in the dynamic world of Android app development.\nBy the end of this course, you'll not only have developed three fully-functional Android applications, but you'll also have gained invaluable insights into the best practices and techniques of Android app development. Whether you're a beginner looking to kickstart your journey in app development or an experienced programmer seeking to enhance your skills, this course provides a comprehensive learning experience that caters to all levels. Join Mr. Vijay Kumar and fellow learners on this exciting adventure to master Android app development and unlock the endless possibilities of creating innovative and engaging mobile applications. Enroll now and take your Android skills to the next level!",
      "target_audience": [
        "Beginner developers looking to learn Android app development from scratch.",
        "Java programmers interested in expanding their skills to Android development.",
        "Students or professionals seeking to build real-world Android applications.",
        "Individuals with a passion for mobile app development and a desire to create their own Android apps.",
        "Entrepreneurs or business owners who want to understand the process of building Android applications.",
        "Anyone interested in exploring the world of mobile app development and learning Android best practices.",
        "Developers transitioning from other programming languages to Android development."
      ]
    },
    {
      "title": "Wordpress Rest API and Ionic 4 (Angular) App With Auth",
      "url": "https://www.udemy.com/course/wordpress-rest-api-and-ionic-3-crud/",
      "bio": "Create an application with Wordpress and Ionic 4 with Authentication",
      "objectives": [
        "Learn Wordpress Rest API",
        "Learn How to perform CRUD (Create, Read, Update, Delete) operations using Ionic 4",
        "User Authentication",
        "Rest API client Postman",
        "Build web and mobile apps using Wordpress as a backend"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction to Course",
          "About Wordpress Rest API",
          "About Ionic"
        ],
        "Getting Started with Wordpress Rest API": [
          "Wordpress Installation and Setup",
          "Wordpress Rest Routes",
          "Installing Plugins",
          "Making Authenticated Requests Using Postman",
          "Creating Custom Post Type Quote",
          "Adding a Quote Using Postman"
        ],
        "Creating Ionic 4 Application with Wordpress Rest API": [
          "Ionic Installation and Setup",
          "Creating New Project",
          "Note Regarding Lazy Loading Routes",
          "Ionic Project Strucutre",
          "Adding New Pages and Updating Tabs Menu",
          "Adding UI for Showing Quotes",
          "Creating Service",
          "Showing Quotes From the Backend",
          "Adding Skeleton Screens For Perceived Performance",
          "Working on Quote Details Page",
          "Authentication with Wordpress Rest API",
          "Sharing Auth State",
          "Creating Quote as Logged in User",
          "Fixing Quotes Page Refresh Issue",
          "Updating and Deleting Quote"
        ],
        "Course Roundup": [
          "Course Roundup"
        ]
      },
      "requirements": [
        "Basics of Wordpress, Angular"
      ],
      "description": "In this course, we'll go through the following topics,\nSet up the Wordpress on our local machine and install the JWT Authentication plugin.\nWalkthrough Wordpress REST API using Postman\nCreating custom post type in WordPress and expose its Rest endpoints\nSetup Ionic framework to use with our Wordpress Rest API\nShowing Quotes from the Wordpress Rest API custom endpoint and add details page\nAuthenticate a user using the Wordpress Rest API\nCreating new Quote as the logged-in user\nUpdating and Deleting the specific quote using the Rest API",
      "target_audience": [
        "Anyone who wants to use Wordpress as a backend to their application"
      ]
    },
    {
      "title": "Mastering Full Stack iOS Development Using SwiftUI and Vapor",
      "url": "https://www.udemy.com/course/full-stack-ios-development-using-swiftui-and-vapor/",
      "bio": "Empower Your Development Journey with Full Stack Mastery: SwiftUI, Vapor, Postgres, Authentication, and Cloud Deployment",
      "objectives": [
        "Building User Interfaces with SwiftUI",
        "Server-Side Swift Development with Vapor",
        "Integrating Vapor with Postgres",
        "Authentication and Authorization",
        "Creating Custom Swift Packages to Share Models"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Credits",
          "Prerequisites",
          "Exercise Files",
          "Agenda"
        ],
        "Full Stack Development": [
          "What is Full Stack Development?",
          "What is Vapor?",
          "Resources"
        ],
        "Getting Started with Vapor": [
          "IMPORTANT: Swift Tools Version",
          "Installing Vapor",
          "Hello Vapor",
          "Folder Structure"
        ],
        "Routing": [
          "Basic Routes and Route Parameters",
          "Strongly Typed Route Parameters",
          "Returning JSON",
          "POST Requests (JSON)",
          "Query Strings",
          "Route Groups"
        ],
        "Controllers": [
          "Understanding MVC Design Pattern",
          "Creating Controllers"
        ],
        "Middleware": [
          "What is a Middleware",
          "Creating a Basic Middleware",
          "Creating Middleware Extracting Tokens from Headers"
        ],
        "Quick Tour of Vapor with Postgres Database": [
          "What is Fluent?",
          "IMPORTANT: ElephantSQL is Shutting Down",
          "Resources: Postgres App",
          "Resources: Postgres App, BeeKeeper Studio etc",
          "Setting Up Postgres Database on ElephantSQL",
          "UPDATE: Postgres Configuration",
          "Adding Fluent Package",
          "Creating Movie Model",
          "Creating Tables Using Migration",
          "Saving Movie",
          "Get All Movies & Get Movie By Id",
          "Deleting Movie",
          "Updating Movie"
        ],
        "Grocery App - Project Setup": [
          "What we will be building?",
          "Creating Vapor Project and SwiftUI Project",
          "Adding Dependencies to the Vapor Project",
          "Setting Up Postgres Database Locally",
          "Downloading Beekeeper Studio for Database Management",
          "Resource: Downloading Beekeeper Studio Community Edition",
          "Connecting Beekeeper Studio to Local Postgres Database"
        ],
        "Grocery App - User Registration (Server Side)": [
          "Creating Users Table Through Migration",
          "Creating the User Model",
          "Implementing Register Route",
          "Testing User Registration Using Postman"
        ],
        "Grocery App - User Login (Server Side)": [
          "Understanding JWT Authentication Flow",
          "Implementing Login Route",
          "Implementing Authentication Payload",
          "Creating and Returning the JWT Token",
          "Testing User Login Using Postman"
        ]
      },
      "requirements": [
        "Basic programming knowledge: A fundamental understanding of programming concepts and syntax is beneficial. Familiarity with a programming language, preferably Swift, will be helpful in grasping the concepts covered in the course.",
        "Swift knowledge: Some familiarity with the Swift programming language is recommended. Understanding Swift syntax, data types, variables, functions, and basic concepts will enable smoother comprehension of the course material.",
        "macOS or iOS development environment: Since the course focuses on SwiftUI and Vapor, it is recommended to have access to a macOS or iOS development environment. This will allow you to practice and run the code examples provided in the course.",
        "Xcode: Familiarity with Xcode, Apple's integrated development environment (IDE) for macOS and iOS development, is beneficial. Understanding how to navigate and work with Xcode will help you follow along with the course material effectively."
      ],
      "description": "Become a proficient full stack developer with our comprehensive Udemy course! Learn SwiftUI, Vapor, and Postgres to create robust, scalable, and secure web applications. Dive deep into SwiftUI for beautiful user interfaces, explore Vapor for server-side Swift development, and integrate it with Postgres for efficient data management. Master authentication, authorization, and deployment to the cloud. Gain practical experience through engaging projects and coding exercises. Enroll now to unlock your full stack development potential and join our vibrant learning community. Let's embark on this exciting journey together!\n\n\nWhat will students learn in this course?\n- Develop proficiency in full stack development using SwiftUI, Vapor, and Postgres.\n- Understand the powerful combination of SwiftUI, Vapor, and Postgres for building web applications.\n- Learn how to set up a backend server using Vapor and handle routing and HTTP requests.\n- Gain knowledge of Vapor's middleware for request processing and data manipulation.\n- Explore the integration of Vapor with Postgres for efficient storage and retrieval of data.\n- Implement robust authentication and authorization systems using JSON Web Tokens (JWT).\n- Securely manage user sessions, handle user registration and login processes.\n- Protect web applications from common security vulnerabilities.\n- Establish seamless communication between the front-end and back-end.\n- Deploy applications to the cloud, making them accessible to users worldwide.\n- Solidify understanding through engaging projects and coding exercises.\n- Access comprehensive resources, including downloadable project files and code samples.\n- Develop the confidence to tackle real-world challenges in full stack development.\n\n\nWho is this course for?\n- Aspiring full stack developers looking to enhance their skills and knowledge.\n- Individuals interested in creating robust, scalable, and secure web applications.\n- Swift developers seeking to expand their expertise to include server-side development.\n- Those interested in learning SwiftUI, Vapor, and Postgres for full stack development.\n- Programmers who want to build modern, beautiful user interfaces using SwiftUI.\n- Developers who want to explore Vapor as a server-side Swift framework.\n- Individuals interested in integrating Vapor with Postgres for efficient data management.\n- Those looking to gain hands-on experience in implementing authentication and authorization systems.\n- Developers aiming to deploy their applications to the cloud and make them globally accessible.\n- Learners who prefer a practical approach with engaging projects and coding exercises.\n- Individuals seeking valuable resources and references for future full stack development endeavors.\n\n\nJoin our comprehensive Udemy course today and unlock your potential as a proficient full stack developer! Whether you're eager to create robust, scalable, and secure web applications or expand your Swift expertise, this course is designed to equip you with the necessary skills. Gain in-depth knowledge of SwiftUI, Vapor, and Postgres, and master the art of seamless communication between front-end and back-end. With practical projects, coding exercises, and comprehensive resources, you'll confidently tackle real-world challenges. Enroll now and become part of our vibrant learning community, ready to take your development skills to new heights. Let's embark on this exciting journey together!",
      "target_audience": [
        "The course is suitable for beginners who are new to full stack development, as well as experienced developers looking to expand their skill set.",
        "It specifically teaches the use of SwiftUI, Vapor, and Postgres.",
        "The course covers setting up a backend server, handling routing and HTTP requests, and using Vapor's middleware for request processing and data manipulation.",
        "It explores integrating Vapor with Postgres for efficient data storage and retrieval.",
        "The course also covers implementing authentication and authorization systems using JSON Web Tokens (JWT).",
        "Students will learn how to establish seamless communication between the front-end and back-end of an application."
      ]
    },
    {
      "title": "Android Developer Interview Preparation Guide",
      "url": "https://www.udemy.com/course/android-developer-interview-prep/",
      "bio": "Ace the Android Developer Coding Interview, Android System Design Interview & the Behavioral Interview [Mock Interviews]",
      "objectives": [
        "Prepare for a technical and behavioral interview for a junior/entry level position as an Android developer",
        "Practice how to answer Android technical questions",
        "Practice how to answer Java technical questions",
        "How to mentally prepare for the interview",
        "How to set yourself apart when answering technical and behavioral questions",
        "Master mock interviews and whiteboard problems",
        "Craft the best resume/CV and developer portfolio to showcase your skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "The (Mental) Game Plan",
          "DOWNLOAD - Printable Worksheets & Source Code"
        ],
        "Initial Preparations - Your Resume/CV, Portfolio, Github and Online Presence": [
          "What You'll Learn",
          "Initial Preparations - Your Resume/CV",
          "Initial Preparations - Your Portfolio and Github",
          "[ACTIVITY] - Action Steps",
          "Initial Preparations - Research and Learn More About the Company",
          "Small Vs Large Companies",
          "What Interviewers Look for in a Junior Android Developer",
          "What to Bring with you on the Interview Day",
          "What to Expect on the Interview Day",
          "[IMPORTANT] - No Experience? - Getting the Right Experience",
          "[ACTIVITY] - Action Steps",
          "[ACTIVITY] - Action Steps"
        ],
        "Understanding Big O and Writing Good Code": [
          "General Android Interview Questions Breakdown",
          "What Makes Good Code",
          "What's Big O(1) - Constant Time",
          "Big O(n) - Linear Time",
          "[QUIZ] - Big O - Time Complexity Analysis",
          "Big O(n^2) - Quadratic Time and Simplification Rules",
          "Worst-case Scenario",
          "List of Data Structures You NEED to Know",
          "Summary",
          "Resources"
        ],
        "Android Core - Specific Interview Questions": [
          "What You'll Learn",
          "General Android Interview Questions to Consider",
          "How to Answer Technical Questions",
          "MOCK INTERVIEW 1 - Activity LifeCycle Callback Methods",
          "MOCK INTERVIEW 2 - Activities setContentView() Method",
          "MOCK INTERVIEW 3 - Whiteboard Problem - FizzBuzz",
          "MOCK INTERVIEW 4 - The Android Manifest File",
          "MOCK INTERVIEW 5 - Displaying Lots of Data on Screen",
          "A Note on Mock Interviews vs the Real Interview",
          "A Note on Practicing",
          "Summary",
          "Resources"
        ],
        "Android Application Design (System Design)": [
          "What You'll Learn",
          "Application Architecture Design",
          "MOCK INTERVIEW 6 - App Design - Talk About Your Last App",
          "MOCK INTERVIEW 7 - How Would You Design a Todo Android App?",
          "A Note on Take-home Android Projects",
          "Summary",
          "Resources"
        ],
        "Java Programming Language-Specific Interview Questions": [
          "What You'll Learn",
          "Java vs Kotlin",
          "MOCK INTERVIEW 8 - Java Inheritance - Override vs Overloading Methods",
          "MOCK INTERVIEW 9 - Private Modifiers",
          "Resources"
        ],
        "Behavioral Specific Interview Questions": [
          "What You'll Learn",
          "Why Behavioral Interview Questions?",
          "Interview Tip - IMPORTANT!",
          "MOCK INTERVIEW 10 - Tell Me About Yourself?",
          "MOCK INTERVIEW 11 - What's Your Biggest Weakness?",
          "Questions to Ask the Interviewer(s)",
          "Wrap-up",
          "Resources - List of Fundamental Android Interview Questions & Answers",
          "Resources - Testing and Improving Your Coding Skills"
        ],
        "Bonus": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Be able to build a fairly complex Android App"
      ],
      "description": "Do you want to immerse yourself in the Android interview prep process so you can land your first entry-level Android developer job?\nHave you wondered how to structure your Android Interview practice, so you feel confident and well-prepared to tackle the actual Android Developer interview?\nWell, wonder no more! The Android Developer Interview Preparation Guide is here!\nAndroid development has been rapidly growing since Android was first released over a decade ago.\nThis course will give you the technical and mental confidence you need to ace your entry-level Android development job interview.\nBy the end of this course, you'll have improved your Android interviewing skills dramatically!\nIn this course, you'll learn how to ace your Android Developer interview by:\nLearning how to answer common Android and Java technical interview questions,\nPracticing mock and whiteboard interviews\nMastering how to think through any given problem and come up with the solution.\nInterviewing can be stressful, but it doesn't have to be: the key is preparation and adequate planning.\nThis course will guide you through the process of preparing for an Android technical and behavioral interview for a junior position as an Android developer.\nWe’ll go from what fundamental Android skills you need to have under your belt to understand what interviewers are looking for on the interview day: from a technical and personality standpoint, to how to answer questions like \"What's your biggest weakness?\".\nWe’ll also cover general tools and libraries android developers are generally expected to know, as well as learning methods to continue practicing and preparing for the interview.  Interactive Mock Interviews included!!\n\n\nNo experience? No problem - there's a strategy I share in the course on what to do if you have no experience.\n\n\nSections Outline:\nSection 1 – Course Introduction: Get an understanding of the course objectives, how the course is structured, and how to get the most out of this course.\nSection 2 -Initial Preparations - Your Resume, Portfolio & Online Presence: Learn how to craft an excellent resume, android app portfolio, and Github.\nSection 3 - Understanding Big O, Data Structures, and Writing Good Code - Learn the basics of Big O notation and time complexity and what constitutes good code.\nSection 4 - Android Core - Specific Android Interview Questions: Deep-dive into learning how to answer the most fundamental Android development questions and answer technical questions the right way!\nSection 5 - Android Application Design (System Design) - Understanding how to answer Android Architectural Design questions.  You'll go over a few App Design Mock Interviewers so you can see how to answer this kind of question.\nSection 6 - Java Programming Language-Specific Interview Questions: Learn how to answer specific Java Programming language questions.  You'll have a mental map on how what keywords you need to include when answering technical questions.\nSection 7 - Behavioral Specific Interview Questions & Wrap-up: Learn how to answer behavioral questions such as \"Tell me your biggest weakness\" and other common behavioral questions.\nThe course also includes several resources to help you further prep for your android interview:\nInteractive Mock Interviews!!\nQuizzes\nChallenges\nList of most popular Interview Prep online tools such as LeetCode and Pramp\nPDF documents with more Android interview questions & Answers for you to practice\nTips and advice on the Android interviewing process\nBy the end of this course, you will have all the tools you’ll need to ace your Android technical interview for a junior position as an Android developer!\n\n\n=======================================\nThis Course Also Comes With:\nLifetime Access to All Future Updates\nA responsive instructor in the Q&A Section\nLinks to interesting articles and lots of good code to base your next template onto\nUdemy Certificate of Completion Ready for Download\nA 30 Day, \"No Questions Asked\" Money Back Guarantee!\n\n\nTake this course and prepare to ace your entry-level Android developer interview and get your dream Android Development job!",
      "target_audience": [
        "Junior level Android Developers seeking employment",
        "Junior Kotlin and Java Developers seeking entry-level Android Development job"
      ]
    },
    {
      "title": "Learn Flutter GetX Course 2024",
      "url": "https://www.udemy.com/course/learn-flutter-getx/",
      "bio": "Learn GetX State Management",
      "objectives": [
        "Master GetX State Management",
        "How to deal with Getx Routing",
        "How to deal with MVC with Getx",
        "How to deal with Dependency Injection",
        "How to deal with Binding",
        "How to deal with Get Storage",
        "How to deal translation with Get Localization",
        "How to make http requests using Get Connect"
      ],
      "course_content": {
        "Introduction": [
          "Intro"
        ],
        "Getx": [
          "Getx package",
          "Installing",
          "Routing part 1",
          "Routing part 2",
          "MVC",
          "GetBuilder",
          "Getx",
          "Obx",
          "DI part 1",
          "DI part 2",
          "Binding part 1",
          "Binding part 2",
          "Binding part 3",
          "Get Storage",
          "Getx Localization",
          "Get Connect"
        ],
        "flutter sqflite with getx": [
          "Create & delete database",
          "Insert & get data from database",
          "Get data from database in a perfect way",
          "Update & delete data into database",
          "Make a simple UI",
          "Edit & update data",
          "You can now update the app and finish it"
        ],
        "News App": [
          "Create news app",
          "Change theme mode",
          "Design the app",
          "Fetch data from api _ home _",
          "Fetch data from api _ category_"
        ]
      },
      "requirements": [
        "Basics of Flutter and Dart"
      ],
      "description": "GetX is not only a state management library, but instead, it is a microframework combined with route management and dependency injection. It aims to deliver top-of-the-line development experience in an extra lightweight but powerful solution for Flutter. GetX has three basic principles on which it is built:\nPerformance: focused on minimum consumption of memory and resources\nProductivity: intuitive and efficient tool combined with simplicity and straightforward syntax that ultimately saves development time\nOrganization: decoupling business logic from view and presentation logic cannot get better than this. You do not need context to navigate between routes, nor do you need stateful widgets\nIn this course you will learn the basics of Getx\nHow to deal with getx as State management\nHow to deal with Dependency injection of getx (Get.put - Get.lazyPut - Get.find)\nHow to deal with Route management of getx\nHow to show Snack Bar\nHow to show bottom sheet\nHow to show dialog\nHow to Navigate without named routes\nHow to Navigate with named routes\nHow to use Obx\nHow to use GetXController\nHow to use GetX with Controller Type\nHow to use Simple State Manager- GetBuilder\nHow to use Getx Controller Lifecycle methods\nHow to use (Getx Localization_translation) Implement Internationalization (localization)\nGetX Service\nHow to make http Requests (to call Api)\nGet X Binding",
      "target_audience": [
        "Everyone who intrested Flutter",
        "Beginner and Junior developer who wants to master flutter",
        "Flutter developers who still need more"
      ]
    },
    {
      "title": "Convert Websites into Mobile Apps w/ [No-code] (iOS/Android)",
      "url": "https://www.udemy.com/course/convert-websites-into-mobile-apps-no-coding-course/",
      "bio": "Convert wordpress, woocommerce and custom websites to iOS and Android mobile apps without coding using Appmysite 2024.",
      "objectives": [
        "Convert any website into a mobile app without coding, using intuitive no-code tools.",
        "Incorporate analytics, push notifications, and chatbots to enhance app functionality.",
        "Understand the criteria for publishing apps on Google Play Store and Apple App Store.",
        "Establish and manage an app development agency with a focus on growth and scalability.",
        "Develop strategies to attract and retain clients using email, social media, and SEO."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Get Certificate, Free Premium Resources/Templates & Offers etc.",
          "Income & Expectations"
        ],
        "Let's Build our App": [
          "What's Inside?",
          "Setting up Playground",
          "Build Apps for Wordpress Websites",
          "Build Apps for Woocommerce Websites",
          "Build Apps for Custom Websites",
          "Build Custom Apps"
        ],
        "Advanced Features & Integrations": [
          "What's Inside?",
          "Setup and View Analytics",
          "Setup Push Notifications",
          "Integrate Chatbots to Apps",
          "Setup Social Login",
          "Enable Advertisements",
          "Team Management",
          "Merge Multiple Apps"
        ],
        "Publish on Appstores": [
          "What's Inside?",
          "Where to Publish Android Apps",
          "Where to Publish iOS Apps"
        ],
        "Let's Build App Development Agency": [
          "What's Inside?",
          "Business Model Explained",
          "Best Method to Find Freelance Clients",
          "Pitching Your First App Development Client",
          "Find Clients on Google Maps/Facebook Places",
          "Find Clients on Social Media Platforms",
          "Find Clients using Google Search",
          "Find Clients on Freelance Marketplaces"
        ],
        "Thank you + Conclusions": [
          "Thank you + Conclusions"
        ]
      },
      "requirements": [
        "No prior coding experience needed: This course is beginner-friendly and requires no previous coding knowledge.",
        "Basic computer skills: Comfort with using a computer and navigating the internet is essential.",
        "Access to a computer with internet: A reliable computer and internet connection are needed to access course materials and no-code tools.",
        "Enthusiasm to learn: A willingness to learn and explore new technologies will greatly enhance your experience."
      ],
      "description": "Launch Your Website as a Mobile App — Without Writing a Single Line of Cod\nThis course is your complete roadmap to converting any existing website — whether it’s built on WordPress, WooCommerce, Shopify, or custom HTML — into fully functional, downloadable mobile apps for both Android and iOS.\nNo coding skills? No problem. You’ll be guided step-by-step through the entire process using powerful no-code platforms that eliminate the complexity of traditional app development.\nIf you’re a small business owner, online store operator, freelancer, or complete beginner, this course equips you with the exact tools, tutorials, and real-world strategies to get your app published on the Google Play Store and Apple App Store fast — and without hiring developers.\n\n\nWhat You'll Learn\nHow to convert your existing website into a mobile app using no-code tools\nBest platforms to use for no-code app creation, including WebViewGold and AppMySite\nHow to preview and test your mobile app before publishing\nWays to customize app branding, navigation, icons, and user interface\nHow to add native app features like splash screens, push notifications, deep linking, and more\nThe full process of preparing and submitting your app to the App Store and Play Store\nCommon mistakes to avoid when building and publishing your app\nHow to monetize your mobile app with ads or in-app purchases (where applicable)\n\n\nWho This Course is For\nWebsite owners who want to expand into the mobile space\nBloggers, content creators, and online educators seeking app visibility\nShopify or WooCommerce store owners who want to increase mobile sales\nAgencies and freelancers offering mobile app conversion as a service\nEntrepreneurs launching MVPs without technical resources\nBeginners looking for a practical, fast, and affordable way to build apps\n\n\nWhy Go Mobile?\nMobile users now dominate web traffic worldwide. If your business, blog, or store doesn’t have an app presence, you're missing out on a massive user base that expects mobile-first experiences.\nApps offer faster access, push notifications, better retention, and brand credibility. And with modern no-code platforms, you can leverage all of this without ever writing a single line of code.\n\n\nCourse Structure & Highlights\nComprehensive video lectures and walkthroughs\nReal examples using WordPress, ecommerce stores, and landing pages\nDeep dive into WebView wrappers vs. native functionality\nComplete publishing guides for both Google Play and Apple App Store\nLifetime access with future updates included\nDownloadable resources, checklists, and submission templates\nProject-based teaching so you walk away with a published mobile app\n\n\nWhat You’ll Need\nAn existing responsive website (WordPress, custom, or eCommerce)\nBasic knowledge of how your website works (no tech background needed)\nA willingness to follow along and test your app before publishing\nApp Store and Google Play developer accounts for publishing (not required to start learning)\n\n\nOutcomes You Can Expect\nBy the end of the course, you will have a working mobile app version of your website ready to be published on the Play Store and App Store. You’ll have a repeatable skillset to convert future sites or offer app creation as a paid service to clients.\nThis is not just a tutorial — it’s a complete no-code launch system for turning websites into real apps, whether for business growth, brand authority, or personal projects.\n\n\nWhy This Course Is Different\nFocuses on real-world results, not just theory\nUses beginner-friendly, proven no-code tools\nIncludes publishing walkthroughs and troubleshooting advice\nHelps you launch faster and avoid common rejection issues\n\n\nEnroll Today\nIf you've been putting off launching a mobile app due to cost, complexity, or lack of coding skills — this course changes that. Take action now and transform your website into a mobile experience your users can download, access, and engage with every day.\nNo developers. No delays. Just real results.\nLet me know if you'd like a shorter version for email promotions, ad copy, or landing pages.",
      "target_audience": [
        "Entrepreneurs and Business Owners: Individuals looking to expand their business offerings by creating mobile app versions of their websites.",
        "Marketing Professionals: Marketers who want to understand the process of app creation to better manage campaigns and strategies.",
        "Designers: Creative individuals interested in the visual aspect of app development and how to translate website design into mobile interfaces.",
        "Freelancers: Those who are looking to offer app conversion services to clients as a new avenue for income.",
        "Tech Enthusiasts: Anyone with a passion for technology and innovation, eager to learn about the latest trends in app development."
      ]
    },
    {
      "title": "React Native: Mobile App Development (CLI) [2025]",
      "url": "https://www.udemy.com/course/react-native-mobile-app-development/",
      "bio": "(All Levels) - Build iOS and Android Apps: Master Hooks, Redux Toolkit, Navigation, Authentication, Payment & App Stores",
      "objectives": [
        "Learn how to use ReactJS to build react native mobile apps for iOS and Android. No ReactJS Experience Required.",
        "Explore React Native basics and advanced concepts!",
        "Develop cross-platform (iOS and Android) mobile apps and use it for your resume",
        "Explore and implement efficient state management and side effect handling using React Hooks.",
        "Implement navigation and routing functionalities within React Native applications.",
        "Acquire skills in debugging, data management with Redux Toolkit, and user authentication.",
        "Learn about deploying React Native applications to app stores.",
        "Create Applications with Payment Systems"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome to This Course & What to Expect",
          "What is React Native?",
          "Quiz - What is React Native?",
          "React Native CLI vs Expo",
          "React Native CLI vs Expo Quiz",
          "Resources for Every Lecture"
        ],
        "Getting Started on macOS": [
          "(macOS) How to Setup Local Development Environment for iOS React Native Apps",
          "(macOS) How to Setup Local Development Environment for Android React Native Apps",
          "How to Reset Caches on macOS for any Project"
        ],
        "Getting Started on Windows": [
          "(Windows) How to Setup Local Development Environment for Android",
          "Important - Please watch till the end",
          "IMPORTANT DOCUMENTATION FOR WINDOWS",
          "Transitioning Your React Native Project from Windows to macOS for iOS",
          "How to Reset Caches on Windows for any Project"
        ],
        "Creating the First App": [
          "What is a Code Editor, ESLint & Prettier? (Optional)",
          "^^^ VSCode Prettier, ESLint Setup Update (Optional)",
          "What is JSX? (Optional)",
          "JSX Quiz (Optional)",
          "Let's Create Hello World App!",
          "Hello World App - Detailed Overview",
          "Hello World App Quiz",
          "Displaying Text in React Native"
        ],
        "[Extra] Javascript Refresher (Optional)": [
          "Introduction",
          "Little Bit About JavaScript...",
          "Syntax Refresher",
          "Syntax Quiz",
          "Let & Const Variables",
          "Let & Const Quiz",
          "Arrow Functions",
          "Arrow Function Quiz",
          "Objects: Properties & Methods",
          "Objects Quiz",
          "Array & Array Methods",
          "Array & Methods Quiz",
          "Arrays, Objects & Reference Types",
          "Reference Types Quiz",
          "Spread Operator & Rest Operators",
          "Spread Operator Quiz",
          "Destructuring",
          "Destructuring Quiz",
          "Preface for APIs",
          "Async, Await & Promises - Working with APIs",
          "Async, Await Quiz",
          "Summary"
        ],
        "[Extra] Styling (Optional - Made for complete beginners)": [
          "Introduction",
          "Borders",
          "Borders Quiz",
          "Margins",
          "Margins Quiz",
          "Paddings",
          "Paddings Quiz",
          "Position: Absolute & Relative & zIndex",
          "Positioning Quiz",
          "Text Styles",
          "Text Styles Quiz",
          "Summary"
        ],
        "React & React Native Basics": [
          "Introduction",
          "What is a Component?",
          "What is a Component Quiz",
          "What are Stylesheets?",
          "Stylesheet Quiz",
          "View Component",
          "View Component Quiz",
          "What are Props & Prop Types",
          "Props Quiz",
          "Event Handling",
          "Event Handling Quiz",
          "Summary",
          "Props, Event Handling, Views & Stylesheet Assignment"
        ],
        "[Extra] Deep Dive into React Hooks (Optional - Only for React beginners)": [
          "Introduction",
          "What are React Hooks?",
          "React Hooks Quiz",
          "Getting Started with useState",
          "useState Quiz",
          "Understanding useEffect",
          "useEffect Quiz",
          "Working with refs and useRef",
          "useRef Quiz",
          "Working with useContext",
          "useContext Quiz",
          "Creating Custom Hooks",
          "Custom Hooks Quiz",
          "Summary"
        ],
        "[Extra] Deep Dive into Class Based Components (Only for React Beginners)": [
          "Introduction",
          "What is a Class Based Component?",
          "Class Based Component Quiz",
          "Working with State & Events",
          "Working with State & Events Quiz",
          "Component Lifecycle Methods in Action",
          "Class Based Component Lifecycle Methods Quiz",
          "Functional Components with Hooks VS Class Based Components with Lifecycle",
          "Functional Components & Class Based Components Quiz",
          "Function Components & Class Based Components Assignment",
          "Summary"
        ],
        "Building Basic Components": [
          "Introduction",
          "Resources for Image Component",
          "Image Component",
          "Image Quiz",
          "Text Input Component",
          "Text Input Quiz",
          "Resources for ScrollView",
          "ScrollView Component",
          "ScrollView Quiz",
          "Button Component & Form Submission",
          "Button Quiz",
          "Switch Component",
          "Switch Quiz",
          "Icons with FontAwesome",
          "Deep Dive in Flexbox",
          "Flexbox Quiz",
          "Summary",
          "Section 3 Overview Assignment"
        ]
      },
      "requirements": [
        "JavaScript or any other basic programming experience is a must"
      ],
      "description": "Unlock the power of React Native and build impressive iOS and Android apps with this comprehensive course. Whether you're a beginner or an experienced developer, this course is designed to equip you with the skills and knowledge needed to create robust mobile applications using React Native.\nIn the \"Getting Started\" section, you'll dive into the fundamentals, exploring React Native's core concepts, understanding the difference between React Native CLI and Expo, and setting up your local development environment for both iOS and Android. You'll also get acquainted with important tools like code editors, ESLint, and Prettier.\nOnce you have a solid foundation, you'll move on to the essentials of React and React Native. Learn about components, stylesheets, props, event handling, and how to create basic UI elements such as buttons, text inputs, and icons. Take a deep dive into React Hooks and gain a solid understanding of useState, useEffect, useRef, useContext, and creating custom hooks.\nTo create visually appealing and responsive interfaces, the course covers styling techniques with borders, margins, paddings, and flexbox. You'll also explore advanced topics such as debugging, data management with Redux Toolkit, user authentication, building APIs with NodeJS and Express, integrating payment systems using Stripe, and deploying your applications to app stores.\nWith hands-on assignments and a practical project, you'll gain real-world experience as you apply your newfound knowledge. Whether you're looking to enhance your skills for career advancement or create your own mobile app, this course is the ultimate resource for mastering React Native in 2024.\nEnroll now and join the learners who have already transformed their mobile app development skills with this comprehensive React Native course. Take the next step in your coding journey and unleash the potential of React Native today.",
      "target_audience": [
        "Beginner and intermediate developers eager to learn React Native for cross-platform app development.",
        "Mobile app developers looking to expand their skills to include React Native for iOS and Android.",
        "Web developers with experience in ReactJS wanting to build mobile apps using their existing knowledge.",
        "Individuals seeking to enhance their resume with hands-on experience in React Native app development.",
        "Tech enthusiasts interested in exploring the latest trends in mobile app development.",
        "Professionals looking to create high-quality mobile apps with key features like navigation and user authentication.",
        "Students or self-learners interested in gaining a comprehensive understanding of React Native and its advanced concepts.",
        "Developers aiming to deploy their React Native apps to app stores for wider distribution and user access."
      ]
    },
    {
      "title": "REST API for beginners - Retrofit and Android",
      "url": "https://www.udemy.com/course/retrofit-and-android-how-to-get-the-content-of-an-api/",
      "bio": "Learn how to build from scratch your own apps based on the GitHub API, StackOverflow API and many more with Android",
      "objectives": [
        "Execute HTTP calls, using the Retrofit android library",
        "GET the content of APIs;",
        "Visualize the content, taken from an API;",
        "Work with hundreds of APIs;",
        "Create original apps of their own, based on a server-located content;",
        "Take the authorization credentials for their applications;",
        "Work with JSON data"
      ],
      "course_content": {},
      "requirements": [
        "Please, have your Android environment ready for work!",
        "We will be using the Android studio all the time. Have it configured."
      ],
      "description": "Have you ever wondered how to GET that server-located content in your app? Do you want to learn how to retrieve and visualize JSON data? Would you want to learn how to work with the Retrofit library in Android? Then this course is for you! Here we will start with a short introduction to the basic terminology - you will get aware of what HTTP, URL, API, RETROFIT, JSON, GET/POST/PUT and DELETE are. All of the explanations I will give you are easy to understand and follow. Then we will build 2 projects from scratch, working with 2 different APIs - the GitHub API and the StackOverflow API, as we are GETting their content. At the end of each section you will know how to continue exploring the API on your own and modify the data for your needs. Then we'll go further - I'll show you tens and hundreds more APis you will be able freely to work with. We'll pass through 3 different authorization processes - with the Instagram API, with the Gmail API and the Wordnik API. After you finish the course, you'll be able to handle numerous sources, hundreds of APIs and approaches. Are you ready to start?",
      "target_audience": [
        "This course is ideal for everyone with initial knowledge in Android.",
        "The course is for everyone who want to learn hot to implement the REST concepts and visualize the content, taken from a server.",
        "It is NOT for people without any programming experience.",
        "It is NOT for people who want to learn the basics of android development."
      ]
    },
    {
      "title": "190+ Android Interview Questions",
      "url": "https://www.udemy.com/course/a-z-guide-to-android-interview-success/",
      "bio": "The ultimate Q&A course everyone interested in Android needs to pass (Android 7.0)",
      "objectives": [
        "At the end of the course you will know what, how and why things happen in Android",
        "You will be ready to successfully pass almost any theoretical test for Android",
        "You will be able to to start your career as Android developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Questions and Answers": [
          "The Android Ecosystem",
          "Android Studio (updated October, 2017)",
          "The Manifest File",
          "Gradle (updated October, 2017)",
          "Intents",
          "Activities",
          "Fragments",
          "Services",
          "Broadcast Receivers (updated October, 2017)",
          "Content Providers (updated October, 2017)",
          "Permanent Data Storage",
          "Resources",
          "Layouts",
          "Input Controls",
          "Menus, Dialogs, Settings",
          "Threads",
          "Notifications and Search Interface"
        ],
        "Bonus Section": [
          "Bonus Lecture: Learn more!"
        ]
      },
      "requirements": [
        "This course is DIFFERENT",
        "We are NOT going to WRITE code",
        "We are going to talk about the THEORY behind the code"
      ],
      "description": "Have you ever reached the moment, when on an Android developer interview they start asking you theoretical questions you can't answer? Have you wondered what theory stays behind the applications you create? Do you want all of the basic principles on one place, explained in a simple way? Then this course is for YOU! With more that 190 android interview questions, the 190+ Android Interview Questions course is first of its kind. The whole information is built is understandable way, waiting for you to take it now! Use it to examine yourselves, to build your confidence before an interview up, to get prepared for a test. It will be always handy when you need a reference to one or another theoretical concept. Tired of reading through hundreds of pages with documentation? The  190+ Android Interview Questions is there, designed for you! A junior developer? A job-seeker? A student? Do give it a try!",
      "target_audience": [
        "This course is for YOU if you are interested in Android",
        "This course is for you if you are preparing for an Android TECHNICAL INTERVIEW",
        "This course is for you if you are preparing for an Android TECHNICAL TEST",
        "This course is for you if you want to learn the Android THEORY basics"
      ]
    },
    {
      "title": "Master Ionic 3 with Ionic Native and Cordova Integrations",
      "url": "https://www.udemy.com/course/master-ionic-3-with-ionic-native-and-cordova-integrations/",
      "bio": "Supercharge your Ionic applications with everything from Push Notifications, Camera, Contacts, Fingerprint and much more",
      "objectives": [
        "Integrate a VAST amount of native device features in your Ionic applications."
      ],
      "course_content": {
        "Ionic Native": [
          "Introduction",
          "Action Sheet",
          "AdMobFree",
          "Application Availability",
          "Application Minimise",
          "Barcode Scanner",
          "Battery Status",
          "Browser Tab",
          "Camera",
          "Call Number",
          "CardIO",
          "Clipboard",
          "Contacts",
          "Date Picker",
          "Device",
          "Fingerprint AIO",
          "Flashlight",
          "Geolocation",
          "Header Color",
          "InAppBrowser",
          "IsDebug",
          "Market",
          "Network Detection",
          "OneSignal Push Notifications",
          "Pin Dialog",
          "Phonegap Local Notifications",
          "Shake",
          "Screenshot",
          "Screen Orientation",
          "Text to Speech",
          "Unique Device ID",
          "Vibration",
          "Video Player",
          "YouTube Video Player",
          "ZBar"
        ]
      },
      "requirements": [
        "A brief understanding of Ionic Framework"
      ],
      "description": "Master Ionic 3 with Ionic Native and Cordova Integrations\nSupercharge your Ionic applications with everything from Push Notifications, Camera, Contacts, Fingerprint and much more!\nHave you ever wondered how to integrate that crucial native feature in your Ionic applications? This course is exactly that. It's aimed at the developer who wants quick and easy solutions to Cordova/Ionic Native integrations in their existing Ionic applications.\nCreated and maintained by Paul Halliday, author of Learn Ionic 3 From Scratch and Master Adobe Experience Design. Every integration is using the latest Ionic 3 concepts with the latest ES6/7 syntax such as async/await.\nEach week, at least two new integrations are added to the course until each Ionic Native plugin is covered. This course pairs well with Learn Ionic 3 From Scratch and can be thought of as a library of plugin examples and discussion.",
      "target_audience": [
        "Anyone who wants to integrate native device APIs inside of their Ionic applications."
      ]
    },
    {
      "title": "React Native, Redux & Express - Full Stack React Native",
      "url": "https://www.udemy.com/course/mern-stack-react-native-redux/",
      "bio": "Learn to build full-stack apps with MERN: React Native, Redux for front-end and Node, Express, MongoDB for backend.",
      "objectives": [
        "React Native From Basics to Advanced",
        "Real world API building with Node JS, Typescript, Express, Mongodb",
        "Easy state management with Redux Toolkit",
        "Advance Animations For React Native",
        "React Query to manage API requests"
      ],
      "course_content": {
        "Environment Setup - Windows": [
          "Node JS",
          "Typescript",
          "Mongodb",
          "Postman"
        ],
        "Environment Setup - MAC": [
          "Installing Node JS",
          "Installing Typescript",
          "VS Code",
          "Open With VS Code",
          "Home brew",
          "MongoDB",
          "MongoDB Compass"
        ],
        "Typescript Basic": [
          "What is TypeScript",
          "Basic Types in JavaScript",
          "Type Inferences",
          "Basic Rules to Define Types",
          "Types for Objects and Arrays",
          "type Keyword & Optional Types",
          "Functions",
          "Interface",
          "Generic Types",
          "Any Type"
        ],
        "React Native Direct": [
          "What if I don't want to build server?"
        ],
        "API Basic": [
          "Node TS Setup",
          "package, package-lock and node_modules",
          "Basic Express Server",
          "Node TS Professional Setup",
          "The Plan",
          "Sending Data With Post Request",
          "Middleware Function",
          "There s More",
          "Setting up Mongodb",
          "New Schema & Document",
          "Types for Schema",
          "_id and __v",
          "Updating Document",
          "Updating Document Part-2",
          "Removing Document",
          "Reading Document",
          "HTTP Methods",
          "Code Refactor",
          "Code Refactor Part-2"
        ],
        "React Basic": [
          "React",
          "React Project Setup",
          "JSX",
          "Understanding from Ground",
          "Basic App",
          "Tailwind CSS Setup",
          "What & Why Tailwind CSS",
          "UI For Note Form",
          "UI For Note Items",
          "Resuable Component Part-1",
          "Resuable Component Part-2",
          "React State",
          "Understanding useState",
          "Update State From Single Place",
          "Submitting Form",
          "Fixing CORS",
          "Rendering New Notes",
          "useEffect",
          "Fetching All Notes",
          "Updating Notes",
          "Updating UI",
          "map vs map",
          "Removing Note",
          "View Note Details",
          "Hiding Note"
        ],
        "Project Setup For Real Project": [
          "Intro",
          "Project Setup",
          "The Plan",
          "DB Setup",
          "Environment Variables",
          "Variables",
          "Using Path Alias"
        ],
        "Auth - Handling New Users": [
          "User Model",
          "Creating New User",
          "Types For Req Object",
          "We Need a Validator",
          "User Validation Schema",
          "Schema Validator",
          "Status Codes",
          "Code Refactor",
          "The Tool For Email",
          "Sending First Email",
          "Email Verification Token Schema",
          "Sending Real Email",
          "Hashing Email Verification Token",
          "The Mail Template",
          "Sending Mail With Attachment",
          "Another Refactor",
          "Hashing Password",
          "Verifying Emails",
          "Postman Environment Variable",
          "Validating Token & ID",
          "Re-verification Email",
          "Forget Password Route",
          "Sending Reset Password Link",
          "Sending Link To Email",
          "Verifying Password Reset Token",
          "Validation Middleware",
          "Updating Password"
        ],
        "Reset Password UI": [
          "Creating Public Route",
          "Update Password Form",
          "Validating Token",
          "Updating Password Through UI"
        ],
        "Auth 2 - Sign in - Handling Old Users": [
          "Authentication vs Authorization",
          "Sign in",
          "Verifying User with JWT",
          "Auth Middleware",
          "Fixing Types",
          "Private Routes"
        ]
      },
      "requirements": [
        "If you're comfortable working with JavaScript and have some familiarity with web development, this course is perfect for you!"
      ],
      "description": "Looking to build robust, full-stack mobile applications with React Native and Redux in the front-end and Node, Express, MongoDB and Mailtrap in the back-end? Look no further than this ultimate MERN Stack Audio Sharing App with React Native & Redux course!\n\n\nThis course is designed for React Native beginners, but it's important to have a solid foundation in web development and JavaScript. You'll learn the basics of React, Node for API building, TypeScript, and Redux inside the course. So, if you're comfortable working with JavaScript and have some familiarity with web development, this course is perfect for you!\n\n\nOur step-by-step approach will guide you through everything you need to know, from setting up your development environment to deploying your app to the cloud. You'll start with the basics of React Native, building a foundation in the essential concepts and tools necessary for developing modern, robust applications.\n\n\nFrom there, you'll dive into Redux, a popular and powerful state management tool that simplifies the complexity of app development by managing app state in a central location. You'll learn how to use Redux to manage state in your React Native app, and explore best practices for integrating it into your workflow.\n\n\nIn the back-end, you'll learn how to build a Node API with Express and MongoDB, gaining a solid understanding of RESTful API design principles, and learning how to leverage MongoDB to store and retrieve data for your app. Also we will use Mailtrap to handle emails for authentication.\n\n\nThe course also covers TypeScript, a powerful superset of JavaScript that adds static typing and other features, providing a safer and more efficient development experience. You'll learn how to leverage TypeScript to improve the maintainability and reliability of your codebase.\n\n\nInside this course, you'll learn how to handle API requests using React Query, a powerful library that simplifies and optimizes data fetching in React.\n\n\nIn addition, you'll also build a powerful audio player that supports both Android and iOS, and streams audio from the internet. You'll learn how to leverage React Native's audio APIs to build a user-friendly audio player, complete with playback controls, metadata display, and more.\n\n\nWhether you're looking to build your own audio player, or you're interested in learning how to work with React Query, this course has everything you need to take your MERN stack development skills to the next level. So, what are you waiting for? Enroll now and start building amazing apps today!",
      "target_audience": [
        "Beginner for React Native but not in Javascript or web development"
      ]
    },
    {
      "title": "Architect Android apps with MVP, Dagger, Retrofit & RxJava",
      "url": "https://www.udemy.com/course/architect-android-apps-with-mvp-pattern-rxjava-dagger-retrofit-junit/",
      "bio": "Learn software architecture skills. Build apps with Model-View-Presenter pattern. Make apps more robust and fun.",
      "objectives": [
        "Build and architect Android apps using MVP pattern",
        "Understand dependency injection and Dagger 2",
        "Understand Gradle build system",
        "Understand unit testing and JUnit for Android apps",
        "Understand mocking objects using Mockito",
        "Understand type-safe REST API client called Retrofit",
        "Understand reactive programming and RxJava",
        "Understand the MVP UI pattern",
        "Understand how to migrate to RxJava 2",
        "Understand Lambda syntax",
        "Understand how to update to a new Android Studio version",
        "Understand what the Diff Util is",
        "Understand how to refactor code"
      ],
      "course_content": {
        "Welcome and introduction": [
          "Welcome and introduction",
          "Becoming an Online Instructor",
          "Prepare for the course"
        ],
        "The changing face of app development (moved)": [
          "Changing face of app development (moved)"
        ],
        "Model-View-Presenter (MVP) pattern": [
          "Introduction to Model-View-Presenter (MVP) pattern",
          "Introduction to MVP continued",
          "Test your knowledge: MVP pattern"
        ],
        "MVP in action-I": [
          "MVP pattern in action",
          "MVP project - overview",
          "MVP in action - dependency injection",
          "Dependency injection - introduction",
          "Dependency injection - setup Dagger 2",
          "MVP project - setup",
          "MVP project - implementation",
          "MVP project - debugging session",
          "Test your knowledge: MVP in action - I"
        ],
        "MVP in action-II": [
          "MVP in action - tools and frameworks",
          "JUnit and Mockito - setup unit testing",
          "JUnit and Mockito - unit testing continued",
          "Retrofit - introduction",
          "Retrofit - setup",
          "Retrofit - in action",
          "Reactive programming - introduction",
          "Reactive programming - introduction continued",
          "RxJava - introduction",
          "RxJava - schedulers",
          "RxJava - setup",
          "RxJava - operators",
          "Butterknife - introduction",
          "Test your knowledge: MVP in action - II"
        ],
        "Putting it all together": [
          "Putting it all together",
          "Demo app - introduction",
          "Demo app - setup MVP layers",
          "Demo app - Dagger and Retrofit setup",
          "Demo app - walkthrough",
          "Demo app - debugging session"
        ],
        "Changing Face Of App Development": [
          "Changing face of mobile app development",
          "Test your knowledge: The changing face of app development"
        ],
        "Rx Java 2 Migration Guide": [
          "RxJava 2 Intro",
          "Migrate to Android Studio 3 (Part 1)",
          "Migrate to Android Studio 3 (Part 2)",
          "Migrate Retrofit to RxJava 2",
          "Migrate the repository to RxJava 2",
          "Migrate the presenter"
        ],
        "Bonus lectures": [
          "Understanding Lambdas",
          "Major refactoring",
          "More refactoring",
          "Add a Swipe to refresh layout",
          "Add lambdas to RxJava 2",
          "Create a Diff Util",
          "Use the Diff Util"
        ],
        "Conclusion": [
          "Conclusion",
          "Thanks! (bonus lecture)"
        ]
      },
      "requirements": [
        "Basic information about software development processes",
        "Desire to learn something new and continuous improvement"
      ],
      "description": "Developing Apps is fun.....is it not? It’s really exciting to take an idea from the back of a paper napkin all the way to the App Store!\n\nIt is Not only fun but also lucrative. There are tremendous opportunities available out there for app developers and designers all over the world.\n\nAndroid offers an excellent platform for developing and delivering apps. Most of you might already be working on this platform. If so, you would know, Android platform and mobile app industry as a whole has a remarkable future ahead.\n\nSmartphones enable us to do a lot these days, from shopping our clothes, booking movie tickets, to ordering groceries and getting them delivered right to our doorsteps. It is hard to believe – but even after all these advancements – there is still a lot of paper-based work happening in the workplace and everyday lives. There are still untapped opportunities and workflows which need to move to the mobile platform. If you have a good idea – the world is your oyster. You can change the way how people live their lives by introducing a compelling app.\n\nYou may be working as a freelancer or may have a full-time job as an app developer or architect. Whether you create one app a year or multiple apps in a month - there must have been times when you got tired of looking at long strings of code tangled together into a spaghetti-like mess.\n\nThis is particularly painful if you have to inherit a legacy code base and you have to add features to it or fix bugs.\n\nMake your life easier and building apps fun...............by learning tried and tested software architectural patterns.\n\nIn this course – you will Get a detailed and behind the scenes look at Model-View-Presenter (MVP) pattern, which helps make code simple and clean. You also get familiar with other fundamental concepts like dependency injection, reactive programming, unit testing, mock objects which assist you throughout the app development lifecycle. Learn frameworks like Dagger 2, Retrofit, RxJava and RxJava 2, Junit, Mockito and others.\n\nGain valuable skills of architecting apps in a flexible and scalable manner. Advance your career and work on more cutting edge projects out there.",
      "target_audience": [
        "Mobile and Web App Developers",
        "Software Architects",
        "Tech Founders and Co-Founders (Technical or Non-Technical)"
      ]
    },
    {
      "title": "The Swift Arcade Professional iOS Development Course - UIKit",
      "url": "https://www.udemy.com/course/the-swift-arcade-professional-ios-development-course-uikit/",
      "bio": "Everything you need to transition from hobbyist to professional iOS developer",
      "objectives": [
        "How to build professional looking iOS apps programatically using UIKit",
        "Version control with Git",
        "High-level understanding of Agile",
        "Essential software engineering skills like unit testing and refactoring",
        "How to land your first professional iOS job"
      ],
      "course_content": {},
      "requirements": [
        "Mac computer",
        "Basic iOS programming knowledge"
      ],
      "description": "Joining a company and starting work as an iOS engineer can initially feel overwhelming. Techniques we used for introductory iOS app aren’t there. People seem to expect you to know everything about core Apple frameworks like UIKit.\nAnd there are just certain key practices everyone is going to expect you to be able to apply, which initially can seem really confusing, and everything can just feel overwhelming.\nNot any more.\nThis course was created to help you make the transition from iOS hobbyist to working professionally.\nWorking professionally as an iOS engineer means:\n\n\nKnowing how to build apps programmatically without storyboards\nUnderstanding the fundamentals of Auto Layout and UIKit\nBeing able to use version control and create pull requests using tools such as git\nUnderstand the basics of Agile\nBeing comfortable modern software engineering practices like unit testing and refactoring\nKnowing the design patterns and idioms professional iOS developers use when writing professional code\nThis course will not only equip you with these essential skills, you will get to apply them on real life work examples and problems, all pulled from my experiences working as a professional iOS engineer on real world jobs.\n\n\nBy the end of this course you will:\n\n\nBe able to work professionally as an iOS engineer\nHave the confidence to join any team\nPossess the skills and tools necessary to hit the ground running when you land your first professional iOS job\nAnd who am I? My name is Jonathan Rasmusson. I am a professional ex-Spotify iOS engineer who built the Spotify iMessaging app. I have authored several books on software delivery, and produce the YouTube channel The Swift Arcade. I will be your instructor for the course.\n\n\nWhat are you waiting for? Come on in, and let’s begin your journey to a high paying, rewarding career as an iOS professional today.\n\n\nWhat others are saying about this course:\n\nAn incredible course. Full of useful knowledge presented by a true iOS pro. All of Jonathan's courses are great, especially this one. I wish he had more, but Apple noticed how awesome he was and snagged him. Good for him -- the stuff he has put out is gold.\nOne of the best courses on Udemy, you will learn a lot even if you are an experienced iOS developer, I really recommend it.\nThe best iOS course out there. The stuff he teaches is super relevant and to make everything from scratch, literally without even storyboards was amazing. There were so many concepts with which I used to struggle with and he taught them with ease. I am really glad I took this course. Keep making amazing videos Jonathan. You have a follower here :)\nIf you wanna get things right? get this course. Getting things right is a huge part of your job as a professional iOS developer. There are many courses out there that teach you how develop iOS apps but they also teach you bad habits that you will need to correct in the future. So if you wanna save time and learn correctly from the start I would recommend this course to the moon and back.\nI really enjoy how the instructor has attitude to a student. Listening and watching it is just the honey on my heart. Additional the knowledge of instructor is amazing which it's multiply the experience :)\nI've purchased dozens of courses on Udemy, and Jon truly stands out as an instructor. He makes the content engaging and skillfully explains the nuances and subtle details of the implementation. His enthusiasm for the material distinguishes him as someone who is not only competent in the subject matter but also adept at teaching.\nExcellent lessons! I have fairly extensive Swift experience, but I'm learning so much to improve the quality and professionalism of my code.\nI found this course through the Swift Arcade YouTube channel. For the longest time I had been looking for a course to really show me how to develop an iOS app similarly to how you would working for a software company. Jonathan goes over things such as consistently using git to save and host your work, using vi for editing, etc. all while building a variety of features for an iOS app. While I am not a beginner at iOS development, I had some knowledge gaps to fill and I am 100% satisfied with how this course helped in filling those gaps. I am now feeling much more confident moving forward in obtaining that first iOS developer job. Big thank you to Jonathan for this iOS professional course. I'd love to see more content like this in the future.\nI'm still studying for my first iOS job and this course was great to give me a broader view of what to expect to work more professionally. Jonathan has an amazing methodology, many times throughout the course I had a question or was wondering about something he came with the explanation soon after, like he could read my mind xD Now I will try to apply all this knowledge to my personal projects, Thanks !\nJohn's explanations are great; he gives a practical approach to iOS development. Git, programmatic UIKit, practical use of several common elements and also his professional insight from years of experience in the field are all appreciated here.",
      "target_audience": [
        "Intermediate iOS developers looking for the skills necessary to work professionally as an iOS engineer"
      ]
    },
    {
      "title": "iPhone App Programming for Noobs - UPDATED iOS 9 Swift 2",
      "url": "https://www.udemy.com/course/ios-9-swift-2-xcode-7-make-an-app-programming-code-ios9-dev/",
      "bio": "The exciting class that takes you on an adventure to learn how to make iOS 9 iPhone apps, using Swift 2 and Xcode 7.",
      "objectives": [
        "You'll have apps that you've created IN the app store!",
        "You'll be up to speed with everything new in iOS 9, Swift 2, and Xcode 7",
        "You'll know how to use GPS, the camera, and the microphone in your app development",
        "You'll know how to use PARSE to make your very own social networks",
        "You'll know how to leverage game-making principles to make your own GAME apps",
        "You'll know how to integrate with major social media platforms like Facebook and Twitter",
        "You'll know how to use Bluetooth in your apps",
        "You'll know how to make money with your apps using in-app purchases and ads"
      ],
      "course_content": {
        "Your First App - It's time to make a freaking app :)": [
          "Your First App!"
        ],
        "Goals of the Class": [
          "Meet Jenna",
          "Meet Rick",
          "Goals of the Class",
          "Steve Jobs and Tips for Success"
        ],
        "What's New in iOS 9": [
          "Introduction",
          "Swift 2 and Xcode 7",
          "Search APIs in iOS 9"
        ],
        "*APP 1* Friendbook": [
          "Intro",
          "The Idea",
          "Sketch It Out",
          "Project Setup",
          "View Controller",
          "Table View in Storyboard",
          "Data Source and Delegate",
          "Fill the Table View with Friends",
          "Make the Next Screen",
          "Navigation Controller",
          "Passing of the Names",
          "All the Birthdays!",
          "Friendbook Review",
          "Outro"
        ],
        "Swift School - Learn the basics of Apple's new language": [
          "Intro",
          "What is Swift",
          "Variable and Constants",
          "Strings and Ints",
          "Comments and Print",
          "If Statements and Booleans",
          "Arrays",
          "For Loops",
          "Dictionaries",
          "Functions",
          "Optionals",
          "Classes",
          "Outro"
        ],
        "*APP 2* FriendBook Plus": [
          "Intro",
          "Sketch",
          "Add The TableView",
          "List The Friends",
          "Pass Da Info",
          "Make A Friend Class",
          "Use The Friend Class",
          "Image Views",
          "Outro",
          "Friendbook Plus Source Code"
        ],
        "*APP 3* Colorific": [
          "Intro",
          "Sketch",
          "Another Table View",
          "Adding All the Colors",
          "Segue",
          "No Color Left Behind",
          "Name Those Colors",
          "ColorLingo",
          "One Last Tip!",
          "Outro",
          "Colorific Source Code"
        ],
        "Building Your Dream App": [
          "Intro",
          "Bird's Eye View of the Dream",
          "The Idea",
          "Sketch It",
          "Build the Beta",
          "Collect Feedback",
          "Spit and Polish",
          "Submit",
          "Outro"
        ],
        "*APP 4* Do or Do Not (To-Do List)": [
          "Intro",
          "Sketch the Sketch",
          "Make a Table View",
          "First Brush with CoreData",
          "Nav Controller",
          "Alert, Alert!",
          "Stow It in the Table View",
          "Polish It",
          "Outro"
        ],
        "*APP 5* Shopping Assistant": [
          "Intro",
          "Sketch",
          "Project Setup",
          "Core Data",
          "Put on the Shoes",
          "Adding Pics",
          "Detail View Controller",
          "Pass the Shoe",
          "What You Wish For",
          "Add Your Own Thing",
          "Image Tap",
          "Bust Out the Camera!",
          "Outro"
        ]
      },
      "requirements": [
        "It's best to have a Mac computer that runs the Mavericks, Yosemite, (or El Capitan when it's released) operating systems.",
        "Non-mac owners have options that are not quite so fluid, but it is possible."
      ],
      "description": "Are you ready for an adventure?! Join Udemy's most enjoyable class and learn how to make your own freaking iPhone apps! No prior programming experience necessary.\nWe'll walk you through everything needed to create and submit your very own app idea to the app store, starting from scratch. We firmly believe in learning by doing, so we'll make 14 real world iOS 9 apps using Swift 2 and Xcode 7 together.\nWe run through every single step from installing Xcode (the program we use to make apps) down to how to make money with your apps. And we'll never talk over your head. We've experienced the harsh reality of complicated and wordy tutorials and online classes. This class is what we wish we'd had when we were first learning to make apps. It's the first class to break everything down to the level that is perfect for \"newbies\" so that you never feel lost, and can excel and learn quickly.\nSome of what we'll cover in our apps:\nGPS Navigation\nUsing the Camera\nUsing the Microphone\nIntegrating with Social Media\nIn-App Purchases\nBluetooth\nGames\nMaking Social Networks with Parse\nMore (you can look through the sections below)\nBut ultimately we are not just checking off apps. We are helping you to move toward sustainable growth and becoming a professional in iOS development. We'll help you get integrated with the iOS developer community and provide you with the resources you need to accomplish your goals.\nWhat makes us (Jenna and Rick) the right teachers?\nWe have more than 10 iOS apps in the App Store which total over 300,000+ downloads\nRick teaches more than 23,000 other students in his conglomerate of highly rated iOS development Udemy courses\nWe have personality! We like to use, *ahem*, an energetic and engaging course style\nWe have 6+ years iOS development experience\nWe were once newbies who got confused by wordy blog posts and tutorials. We'll never talk over your head.\nRick created the first Udemy Swift course and also teaches the highly rated “Apple Watch - Go From Newbie to Pro by Building 15 Apps\" course.\nWho is this class for?\nPeople who want to make apps. We will not be teaching wordy or complicated computer science philosophies. We'll cover how to make apps that you can play with, share with friends & family, and offer to the world!\nBeginners. You don't need any programming experience to take this class. We've been the absolute beginners before and want to help you.\nThose programmers who are new to iOS 9 or Swift 2. Dive in with your prior experience and move more quickly, on to become an impressive iOS developer.\nEntrepreneurs who have an idea for an app. Don't pay somebody thousands to build your app. Do it yourself. Having the ability to create something you can think of is extremely powerful.\nCareer development professionals who want to earn money professionally via contract work, consulting, full-time employment, and so forth",
      "target_audience": [
        "No prior programming experience required",
        "Those who just want to make a FREAKING iPhone app!",
        "Those who want to get into app development very quickly",
        "Those who want to go on an adventure and avoid dry, wordy, or complex teaching styles"
      ]
    },
    {
      "title": "Ionic 4 Crash Course with Heartstone API & Angular",
      "url": "https://www.udemy.com/course/ionic-4-crash-course-with-heartstone-api-angular/",
      "bio": "Create hybrid app for Android, iOS and Browser with Ionic 4 & Angular 6. Use Ionic & Cordova to build native apps.",
      "objectives": [
        "Develop a good looking, modern and real-world usable mobile applications with Ionic 4",
        "Write one code base for Android, iOS and Browser",
        "Unlock power of writing Hybrid Apps with Ionic 4.",
        "Establish yourself in field of the exciting mobile app development environment"
      ],
      "course_content": {
        "Introduction": [
          "[Promo]: Course Introduction",
          "How to get a Help",
          "Ionic Architecture",
          "Let's Install Ionic 4",
          "Github Init",
          "Folder Structure Explained",
          "Ionic Updates Note",
          "Routing Explained",
          "New Routing Explained"
        ],
        "Let's Start!": [
          "Planning Application",
          "Lifecycle Functions",
          "Ionic First Page",
          "Ionic UI Components",
          "Style Our Page",
          "Little bit of Service",
          "Integrate Heartstone API",
          "Card List Component part 1",
          "Card List Component part 2",
          "Card Listing Page",
          "Navigation To Pages",
          "Get Data From HS API",
          "Card Interface + Layout",
          "Section Assignment - Card Detail"
        ],
        "Discovering Ionic API": [
          "Inner HTML and RegExp",
          "Back Button",
          "Loader",
          "Loader Service",
          "Toast Service",
          "Improving Loading on Back and Toaster Explanation",
          "Refresher Component",
          "Alert Assigment",
          "Emulate App on IOS and Android"
        ],
        "Advanced Concepts": [
          "Search Functionality",
          "Search Functionality part 2",
          "Completing Search",
          "Search Performance Improvements",
          "Display Loader On Search",
          "Favorite Cards Introduction",
          "Ionic Storage Introduction",
          "Store cards in Storage",
          "New Store Architecture",
          "New Store Architecture part 2",
          "Unsubscribe from Card Store",
          "Favourite Card Page Assignment"
        ],
        "Firebase & Push Notifications": [
          "Firebase Setup & Intro",
          "Firebase Architecture & Implementation",
          "Firebase Android & IOS Setup",
          "Push Notification Android",
          "Push Notification IOS",
          "Out-App Notification IOS Fix",
          "Cordova Fix",
          "Splash Screen",
          "Cleaning",
          "Ending"
        ],
        "[Bonus]: Optimalisation": [
          "Async Loader",
          "Infinite Scroll",
          "Testing Scroll in App",
          "[Bonus]: Keep Learning"
        ],
        "Update to latest Ionic": [
          "Update Ionic / Angular",
          "New Routing and Tabs Explained",
          "Let's fix the links",
          "Fix Icons and Async Loader",
          "New Favorite Module",
          "Fix Favorite Card Store"
        ]
      },
      "requirements": [
        "No Ionic and Mobile Development previous knowledge is required!",
        "Fundamentals in Angular 2+ are strongly recommended",
        "Basic Javascript knowledge is required"
      ],
      "description": "Would not be great to write just one code and ship it to Android, iOs and Browsers? Well, that's what is Ionic exactly good for.\nAngular is a well known and popular framework for writing amazing web apps. If you combine Ionic and Angular you have just right recipe to create awesome mobile hybrid apps. Ionic framework gives you a power to compile your Javascript, Html and Css code into a code that can be run on iOS, Android and of course Browser.\nIs Ionic useful just for compiling your code ? Not at all. Ionic provides you with tons of UI components, modern cutting edge stylings, icons, animations, transitions and much more you can use easily out of the box. Ionic let's you focus on writing code instead of spending time crushing your head into the wall why header moved 10px.\nThere was never a better time than now to learn how to write extremely popular hybrid apps. Ionic might be just a right choice for you.\nMy name is Filip Jerga. I am a freelance software engineer and course creator here on Udemy. My previous course met with amazing feedback of 4.6+ rating and more than 1000 students.\nI will take you on a quick but a knowledge-grained tour of Ionic 4. You will learn how to create an application usable in a real life. You will not spent endless hours watching boring presentation but rather writing real code. Learning by writing is the best way.\nYou will build an application connected to Heartstone api with every playing card listed in it. We will go through basics of Ionic.\nLater, I will explain some of the UI Components. You will connect applications to Heartstone API. You will work on more useful features like search and functionality to make a card favourite. You will use amazing Ionic storage.\nIn last lectures you will learn what is a Firebase and what is it good for. Let's not forget about push notifications. You will learn how to send push notification from firebase straight to your applications and notify your users.\nYou will run application in browser and as well in emulator and real device.\nIn this course you will exactly learn:\nWhat is Ionic and what is a good for\nUnderstand Ionic Architecture\nUnderstand routing and navigation in application\nFetch data from Heartstone API\nHow to create a page and display data in your app\nYou will refresh your knowledge of Angular\nHow to use Ionic UI components.\nCreate search and favorite cards feature\nHow to use Ionic storage\nHow to work with Firebase\nHow to send push Notification\nEmulate application in Xcode and Android Studio\nHow does it sounds ? Let's find out if this course is right for you. I hope to see you in lectures.",
      "target_audience": [
        "Starting as well as experienced developers interested in Mobile Development with Ionic 4",
        "This course is for everyone willing to start creating Mobile Apps in a short time",
        "Taking this course will enable you to develop applications for iOS, Android and Browser with One Codebase!"
      ]
    },
    {
      "title": "The Complete Dart Language Guide for Google Flutter | Dart",
      "url": "https://www.udemy.com/course/the-complete-dart-language-guide-for-google-flutter-dart/",
      "bio": "Dart Programming Language with basic to advanced topics and projects. Learn Flutter Dart for Flutter App Development",
      "objectives": [
        "Flutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language.",
        "Flutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018.",
        "Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly.",
        "Dart Language and Flutter Basics",
        "What is dart and Why is Dart ( Programming Language )",
        "Control and Loop Structures and Operators in dart flutter",
        "Functions in dart",
        "Collection Structures",
        "Dart Object Oriented Programming",
        "Inheritance and Polymorphism",
        "Interface and Abstract Class",
        "Functional Programming in flutter and dart",
        "Dart programming language with examples",
        "Object-Oriented programming concepts",
        "Functional programming concepts in Dart",
        "Flutter Firebase",
        "Flutter web",
        "Flutter Dart",
        "Dart Programming",
        "Flutter can integrate with existing iOS and Android code bases. It's free and open-source.",
        "Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy."
      ],
      "course_content": {
        "Introduction to The Complete Dart Language Guide for Google Flutter | Dart": [
          "What is Dart and Why is Dart Programming Language",
          "Learn More About Google Flutter",
          "Dart SDK Installation",
          "Installation of Required Editor",
          "launch.json File Edit to Run in Debug Mode",
          "quiz"
        ],
        "Dart Basics": [
          "First Dart Application",
          "Variables and Data Types",
          "Number and Boolean Data Types",
          "String Data Type and Interpolition Notion",
          "Final and Const Concepts in Flutter",
          "quiz"
        ],
        "Control and Loop Structures and Operators in Dart": [
          "Using If, Else and Else If in dart",
          "Temary Operator and Null Value Check",
          "Switch, Case Statements",
          "Conditional Quiz-1 in Dart",
          "Operators-1",
          "Operators-2 in dart programming",
          "Loops and For Loops",
          "While and Do While Loops in Dart Flutter",
          "Continue and Break Statements in Dart",
          "Loops Quiz-2 in Dart",
          "Getting Data from Console",
          "Getting Data from Console(Example)",
          "quiz"
        ],
        "Functions in Dart ( Flutter )": [
          "What is Function in Flutter",
          "Using Fat Arrow in Dart",
          "Optional and Named Parameters in Dart ( Flutter )",
          "quiz"
        ],
        "Collection Structures": [
          "Fixed-Lenght Lists in dart",
          "Dynamic Long Lists in Dart",
          "Methods Related to Lists",
          "Set Structure",
          "map structure in dart",
          "Collections Highlights",
          "Collection Structure Again",
          "quiz"
        ],
        "Object Oriented Programming in Dart ( Programming Language )": [
          "Class and Object Concepts",
          "Constructor Methods in Flutter ( Dart )",
          "Using Factory",
          "Private Values and Getter Setter Methods in Dart",
          "Example 1",
          "Example 2",
          "quiz"
        ],
        "Inheritance and Polymorphism in Dart": [
          "Inheritance",
          "Inheritance Example and Overriding",
          "Polymorphism and Late Binding",
          "Using Constructor Methods in Inheritance",
          "quiz"
        ],
        "Interface and Abstract Class": [
          "Abstract Class and Method",
          "Interface Concept",
          "Static Method and Variables",
          "Final and Const Concept",
          "Immutable Classes in Flutter - Dart",
          "quiz"
        ],
        "Functional Programming in dart programming": [
          "What is Lambda",
          "Higher Order Function",
          "Lexical Closure Concept",
          "Constructors of List Class",
          "Methods of List Class",
          "Constructors and Methods of Map Class",
          "quiz"
        ],
        "Exception and Generic Type Concepts": [
          "Exception Concept",
          "Throwing an Error",
          "Creating Our Exception Class",
          "Generic Types",
          "Create Generic Class"
        ]
      },
      "requirements": [
        "You do not need to have any programming background while doing these.",
        "No prior dart or flutter",
        "Desire to learn dart flutter",
        "Nothing else! It’s just you, your computer and your ambition for flutter dart to get started today"
      ],
      "description": "Hello there,\nWelcome to \" The Complete Dart Language Guide for Google Flutter | Dart \" course\nDart Programming Language with basic to advanced topics and projects. Learn Flutter Dart for Flutter App Development\n\n\nI prepared the course assuming you have no prior programming background and Learn Dart ( programming language ) in depth. Includes basic to advanced topics and projects. Prepared Dart Flutter App.\n\nFlutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language. Flutter can integrate with existing iOS and Android code bases. It's free and open-source.\n\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter dart was originally launched with support for iOS and Android. Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web. Flutter runs with dart, a programming language developed by Google. Dart is a strongly-typed, object-oriented language with a familiar C-style syntax. Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms. On the web, dart flutter is compiled to JavaScript code that can run on the browser. Flutter web is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the flutter firebase Engine, written in C++, which provides low-level rendering support.\n\nLearn more about Google Flutter\nFlutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language. Flutter can integrate with existing iOS and Android code bases. It's free and open-source.\nFrequently asked questions about Flutter on Udemy\n\nWhy did Google create Flutter?\n\nFlutter, first known as “Sky”, was announced in 2015 with Android support only. It was created to provide a better mobile experience for users and developers, taking the best parts of the web development experience, and bringing them to mobile. Its main goals were high-performance and portability across multiple platforms. While other cross-platform solutions such as React Native and Xamarin were already popular, they could not deliver the same fidelity and performance as apps built with the native iOS and Android SDKs. Flutter changed that by making it possible to create beautiful, performant apps across multiple platforms with a single codebase.\n\nIs Flutter in demand?\nFlutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018. Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy. Over a hundred thousand Flutter apps have already been published on the App Store and Play Store. After overtaking React Native in Google Search trends, Flutter is now the fastest growing software project on GitHub. By choosing Flutter, companies can deliver mobile apps in record time as they no longer have to build separate apps to support iOS and Android. This makes Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly.\n\nWhat applications use Flutter?\nThere are social networking apps for creating and sharing content, dating, and connecting people through events and real-life activities that use Flutter. Alibaba made a shopping app called Xianyu, which has more than 50MM downloads and more than 10MM active users every day. Nubank is the largest independent digital bank outside Asia, and its mobile apps are built with Flutter. Another shopping app is HuYu, which rewards users with gift cards and vouchers for sharing shopping receipts. You can also find music apps for recording and learning to read music. The Hamilton Musical and the famous Abby Road Studios created apps with Flutter. There are apps for sports, finance, fitness, education, animal adoption, mapped gas stations to compare prices, and a travel app. A Google Ads app helps mobile app customers track their ads.\n\n\nGoogle Flutter provides higher quality for multi-platform development.\nFlutter apps use a single codebase, allowing faster time-to-market.\nFlutter allows you to build beautiful apps easily.\nFlutter widgets make it easy to build beautiful UIs.\nThe Dart programming language is very productive.\nFlutter delivers an excellent developer experience with hot reload.\nFlutter is open source.\nFlutter comes with a mature ecosystem.\nFlutter’s unique advantages make it a very strong UI framework on mobile, web, and desktop.\n\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build dart flutter programming thus, we will have prepared a strong foundation for Flutter applications.\nThis course is for beginners. Before taking this course, You don't need to know any language. In our course, the basics of dart programming is dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject.\nDuring our course, you will be informed about the basics of Dart in detail and how to solve problems.\nThis course was crafted to benefit absolutely any level of developer. We will start flutter and dart from scratch and learn how to create a development environment for Flutter in mobile development.\nDuring the course, I made sure to explain all the topics that may seem complicated to you as simple and detailed as possible. I have used some diagrams to help you understand better.\nThe powerful features and capabilities of fluter allow you to create complex, customizable, modern, responsive, and user-friendly web applications in mobile app marketing.\nAfter taking this course you’ll be able to fully take advantage of all features for Dart in Mobile Development.\nIn this course, Develop modern, complex, responsive and scalable web applications with Dart in Firebase\nOur course based on learning by making practice.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\n\n\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now \"The Complete Dart Language Guide for Google Flutter | Dart\" course\nDart Programming Language with basic to advanced topics and projects. Learn Flutter Dart for Flutter App Development\n\n\nWe offer full support, answering any questions.\n\nMy students says that: Recommended for those who start Flutter from zero like me. I'm a backend programmer, and I know nothing about the mobile realm. Now I can build my own mobile app. I'm really excited!\n\nFlutter & Dart\nSee you in the course!",
      "target_audience": [
        "It's perfect for complete beginners with zero experience for dart",
        "If you want to building your application with Dart and Flutter application",
        "Anyone who wants to use Flutter which is a Google SDK for building native interfaces for iOS and Android using the Dart programming language",
        "Anyone who wants to build beautiful apps easily with Flutter",
        "Anyone who wants to learn Dart programming language which is very productive."
      ]
    },
    {
      "title": "Xamarin Forms MVVM With Prism",
      "url": "https://www.udemy.com/course/xamarin-prism/",
      "bio": "Create MVVM Xamarin Forms Application easily with Prism",
      "objectives": [
        "Build Xamarin Forms Application in MVVM",
        "Learn how to use Prism along with Xamarin Forms"
      ],
      "course_content": {
        "Introduction Section": [
          "Introduction lecture"
        ],
        "Introduction to Prism": [
          "Creating Prism Projects"
        ],
        "Source Code": [
          "GitHub Code Repo"
        ],
        "Prism Navigation": [
          "Navigation Basics",
          "Navigation & Pages Advanced",
          "Passing Parameters",
          "Handling Parameters"
        ],
        "Event Handling": [
          "Observing Event Changes 1",
          "Observing Event Changes 2",
          "EventToCommandBehavior"
        ],
        "UI Dialog": [
          "Display Alert",
          "Action Sheets"
        ],
        "REST API Consumption": [
          "Defining API Backend",
          "Consuming API and Viewing Results",
          "Working with ObservableCollection And REST"
        ],
        "Dependency Services": [
          "Dependency Service with Prism"
        ],
        "Messaging Center": [
          "Messaging Center"
        ],
        "Confirm Navigation": [
          "Confirm Navigation"
        ]
      },
      "requirements": [
        "Xamarin Forms Basic Knowledge"
      ],
      "description": "Hello and welcome to this course. This course is about Xamarin Forms with Prism. For sure you want to create a Xamarin Forms app with the most dynamic structure as possible. And you want to do it without too much cost or time. So here comes MVVM pattern to help you and make sure you do it with confidence and with the lowest cost as possible. And with prism, it's just adding a NuGet Package!\nSo, what is Prism? It's a well known MVVM library that has been around for a long time. And used by many people (Over a 90,000+ downloads) with xamarin forms. By using Prism, it's just a matter of understanding not doing! You will see the structure of the app are more flexible and you can add your code easily and add your views. All done! Go have some coffee or hangout with your coworkers :)\nAs a person who has been using Xamarin Forms for a long time, when you go without MVVM it's terrible and hard to maintain. From navigation to binding without  MVVM it's not the optimal solution. With MVVM, and with Prism it's like magic. Not saying that for any gain it's my recommendation to you always go with MVVM with xamarin forms even if you use any other libraries. Also, check out the enterprise application patterns using xamarin.forms which recommend using MVVM pattern to develop your mobile application.\nSo, this course will go with you throughout the different aspects that Prism and how to use them. No need for previous knowledge of MVVM or Prism. We will walk through these areas for you. For sure you can check the sample lecture which will talk about Prism and other aspects of this course you will understand what to expect from this course. Also, there is a GitHub Repository which contains all the source code of the demos in this course so you can have a reference example later on.\nSo what are you waiting for? Join us now in the Xamarin Forms Prism Course!",
      "target_audience": [
        "Xamarin Developers",
        "Anyone interested in using Prism with Xamarin",
        "Anyone who wants to do MVVM with Xamarin Forms"
      ]
    },
    {
      "title": "Android App Development: Mobile App Development & Java",
      "url": "https://www.udemy.com/course/android-app-development-mobile-app-development-java/",
      "bio": "Android App Development & Java Programming: Mobile App Development & Design, Build Android Apps, Android 5 & Lollipop",
      "objectives": [
        "Android Os Development",
        "Performance Optimization And Testing",
        "Learn Android 5 Or Lollipop",
        "Building An User Interface",
        "Put On A Material Design Theme",
        "Adding Animated Widgets",
        "Managing The Activities And Fragments",
        "Steps On Monetizing An Application:",
        "Java Programming",
        "Build A Retro Squash Game",
        "Building An Android Application",
        "Protect Android Security Architecture",
        "Intrusion Or Tamper Detection",
        "Reverse Engineering",
        "Be Hired As An Android Developer"
      ],
      "course_content": {
        "Android": [
          "Introduction",
          "Android Os And Development",
          "Android Application On X86 And Os Versions",
          "Performance Optimization And Testing"
        ],
        "Android 5 Or Lollipop": [
          "The Revolutionary Operating System",
          "Adding Animated Widgets",
          "Building An User Interface",
          "Put On A Material Design Theme",
          "Managing The Activities And Fragments",
          "Steps On Monetizing An Application"
        ],
        "Applications For The Intel Platform": [
          "General Gui Design Methods",
          "An Application With Complex Activities"
        ],
        "Java": [
          "The Absolute Fundamental Programming",
          "Take A Look At Java",
          "Syntax And Decisions In Java",
          "Retro Squash Game"
        ],
        "Building An Android Application": [
          "Tools To Develop Android Application",
          "Protect Android Security Architecture",
          "Intrusion Or Tamper Detection",
          "Reverse Engineering",
          "Supporting Various Devices"
        ],
        "Get Hired As An Android Developer": [
          "Topics To Be Covered As A Junior Developer",
          "Topics To Be Covered As A Senior Developer"
        ],
        "Bonus: Audio Section": [
          "Section 1 Audio",
          "Section 2 Audio",
          "Section 3 Audio",
          "Section 4 Audio",
          "Section 5 Audio",
          "Section 6 Audio",
          "Quiz Section 1"
        ]
      },
      "requirements": [
        "No Prior Knowledge Or Work Is Necessary To Take This Course.",
        "Pen And Paper For Precious Notes"
      ],
      "description": "Android app development is difficult on its own, but understanding Java and learning coding makes it easier to develop your killer app idea. Many apps, games or even softwares are developed by new programmers, while on the other hands, some apps needs millions in budget. But if you can’t build applications, you’re missing great opportunities and other programmers will grab them.\nWhat if you could change that?\nMy complete Android App Development course will show you the exact techniques and strategies you need to build Android apps, create a user interface, learn Java programming and be hired as an Android developer.\nFor less than a movie ticket, you will get over 4 hours of video lectures and the freedom to ask me any questions regarding the course as you go through it. :)\nWhat Is In This Course?\nYour Android Development Will Never Be The Same.\nExcept if you’re already an excellent app developer, do performance optimization, manage activities and fragments, protect Android security architecture, know intrusion and tamper detection and do reverse engineering, you are going to lose more opportunities to create awesome applications and miss career advancements that other people will gladly take.\nAs what Sundar Pichai, an Indian American business executive says “Android is one of the most open systems I've ever seen. What makes Android great is it's literally designed from the ground up to be customized in a very powerful way.”\nThis is offered with a 30 days money back guarantee. You can try it with no financial risk.\nIn This Android Development Training, You'll Learn:\nAndroid OS Development\nPerformance Optimization And Testing\nLearn Android 5 Or Lollipop\nBuilding An User Interface\nPut On A Material Design Theme\nAdding Animated Widgets\nManaging The Activities And Fragments\nSteps On Monetizing An Application:\nJava Programming\nBuild A Retro Squash Game\nBuilding An Android Application\nProtect Android Security Architecture\nIntrusion Or Tamper Detection\nReverse Engineering\nBe Hired As An Android Developer\n-----------------------------------------------------------------------------------------------------\nIs This For You?\nDo you want to be great at Android development?\nAre you afraid of not developing good applications?\nDo you think you will feel proud developing great applications?\nThen this course will definitely help you.\nThis course is essential to all app developer, Android developer, Entrepreneurs, Designer, Programmer and anyone looking to become great at Android Development.\nI will show you precisely what to do to solve these situations with simple and easy techniques that anyone can apply.\n------------------------------------------------------------------------------------------------------\nWhy To Have Strong Android Development Skills?\nLet Me Show You Why To Have Strong Android Development Skills:\n1. You will build Android apps.\n2. You will create an user interface.\n3. You will learn Java programming.\n4. You will be hired as an Android developer.\nThank you so much for taking the time to check out my course. You can be sure you're going to absolutely love it, and I can't wait to share my knowledge and experience with you inside it!\nWhy wait any longer?\nClick the green \"Buy Now\" button, and take my course 100% risk free now!",
      "target_audience": [
        "All Graphic Artists, Sketch Artist, Character Designers, Art Lovers",
        "Anyone Looking To Become Great At App Development.",
        "This Is Not For People Looking For A Quick Or Lazy Way Of Creating Apps"
      ]
    },
    {
      "title": "Blockchain Programming in iOS Using Swift",
      "url": "https://www.udemy.com/course/blockchain-programming-in-ios-using-swift/",
      "bio": "Learn the Most Disruptive Invention Since The Internet",
      "objectives": [
        "Understanding of the Blockchain technology",
        "Ability to create the Blockchain in iOS Using Swift"
      ],
      "course_content": {
        "Welcome to Blockchain Programming in iOS": [
          "Introduction",
          "What you should know",
          "Exercise Files"
        ],
        "Understanding Blockchain Technology": [
          "What is Cryptocurrency?",
          "What is Centralized Ledger?",
          "What is Distributed Ledger?",
          "Public/Private Keys",
          "What is Mining?",
          "The Longest Chain"
        ],
        "Implementing Blockchain Core Engine": [
          "Developing Blockchain Models",
          "Generating Key for Blocks",
          "Initializing the Blockchain",
          "Proof of Work",
          "Adding Block to the Blockchain"
        ],
        "Smart Contracts": [
          "Understanding Smart Contracts",
          "Implementing Smart Contract"
        ],
        "Implementing Blockchain Web API (Updated for Vapor 3)": [
          "Prerequisites",
          "Setting Up a Server Side Swift Project Using Vapor",
          "Setting Up Controller and Services",
          "Returning the Blockchain",
          "Mining a Block"
        ],
        "Decentralizing Blockchain (Updated for Vapor 3)": [
          "Registering Nodes",
          "Mining on Nodes",
          "Resolving Conflicts"
        ],
        "Conclusion": [
          "Whats Next",
          "Bonus Lecture"
        ],
        "Practical Blockchain Real World Example - Driving Record History": [
          "Understanding the Scenario",
          "Setting Up Project",
          "Updating Transaction Model to Reflect Driving Record",
          "Adding Driving Records to the Blockchain",
          "Implementing Smart Contracts for Driving Records",
          "BONUS - Retrieve Blocks by Driver License Number",
          "BONUS - Displaying Blockchain Data on a Web Page"
        ]
      },
      "requirements": [
        "Intermediate Level Knowledge of Swift Language",
        "Knowledge of iOS Framework"
      ],
      "description": "Are you interested in learning about Blockchain technology?\nBlockchain technology is the backbone of the Bitcoin cryptocurrency but it can be used in many other disciplines. Blockchain technology is going to disrupt a lot of different industries including finance, merchandising, retail, identity and more.\nMy name is Mohammad Azam and I am the creator of many popular online courses including Mastering MapKit in iOS Using Swift and Creating Stickers and iMessages Applications in iOS 10 Using Swift 3, Mastering Micro Services Using JPA, Mastering Server Side Swift Using Vapor, Mastering ARKit for iOS, Mastering Core ML for iOS and more.\nI have created over 2 dozens apps and some of my apps were even featured by Apple on the App Store. I have worked with fortune 500 companies as a lead iOS developer and helped them grow their business ten folds.\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 4 hours. In fact if you think that the course fell short on delivering topics then we will give you your MONEY BACK.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nBuy this course today and this is what you’ll get.\nI will teach you the concepts as well as the implementation of Blockchain in iOS framework using Swift language. I will start with the very basics explaining all the required details related to the Blockchain technology.\nThe course is accompanied with all the code sample files.\n\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and make sure that every questions is answered.\nCan you believe you get all this (and more) for just $195?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nWhy learn Blockchain?\nBlockchain is a revolutionary technology which is going to change a lot of different aspects of our life including finance, retail, merchandising etc.\nBlockchain technology allows iOS developers to use their existing skills to create amazing decentralized iOS applications.\nWho is this for?\nThis course is for anyone who wants to take their skills to the next level. Blockchain technology is a new technology and it can help to create decentralized applications. Blockchain technology can also help you to earn higher salary since now you know how to write a complete apps which are decentralized.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the iOS community with a large following. I do a lot of speaking engagements in which I spread knowledge and education.\nIf you are not satisfied with the course then I offer a 100% REFUND. I am confident that you will enjoy the course and you will utilize the knowledge you learned in this course in your future applications.\nWhat are the requirements?\nA Mac Computer\nXcode 9.3 or above\nBasic understanding of the Swift language and the iOS SDK - I'll teach you everything you need to know about Blockchain.\n\n\nWhat am I going to get from this course?\nLearn the concepts behind Blockchain technology.\nImplement Blockchain Web API\nTake your existing iOS skills to the next level\nBecome a professional app developer, take freelance gigs and work from anywhere in the world\nBored with the same old, same old? Apply for a new job in a software company as an iOS developer\nCredits:\n- A big thanks to Taha Farooq for his constant support in creating this course.",
      "target_audience": [
        "Anyone who wants to learn more about the Blockchain technology",
        "Anyone who wants to implement the Blockchain technology in iOS"
      ]
    },
    {
      "title": "Complete React Native bootcamp - Build 18 iOS & Android app",
      "url": "https://www.udemy.com/course/complete-react-native-bootcamp/",
      "bio": "Includes Redux, firebase and lots of projects",
      "objectives": [
        "Complete React Native app development",
        "Learn to build 20 project from basic to advance",
        "Learn Redux state management in react native app",
        "Learn about API, CAMERA, SOUND and other mobile features",
        "Learn about local storage in mobile apps",
        "Learn about Firebase - An online real time database"
      ],
      "course_content": {
        "React Native Introduction": [
          "Introduction to React Native",
          "Expo vs Non Expo installation",
          "Tools that we will need",
          "Our first React Native App",
          "Running App on Android, iPhone and real device"
        ],
        "Non Expo path of building Apps": [
          "Creating a project with react native cli",
          "Running an application on Android and iOS"
        ],
        "Getting started with React native": [
          "Exploring file structure",
          "Rewriting application",
          "introduction to styling in React native",
          "What is a component",
          "Creating a dumb component",
          "Props and Smart components"
        ],
        "Exploring components": [
          "Loading images into the app",
          "Styling basics in react native",
          "Introduction to flexbox",
          "More on flexbox for mobile",
          "Introduction to states and constructor",
          "Managing state and fun app"
        ],
        "Touchable and creating an app": [
          "Buttons in react native",
          "Touchables in react native",
          "Background changer app"
        ],
        "Dice Roller App": [
          "Getting app assets",
          "Design custom button",
          "Getting a Random Number",
          "getting Random images"
        ],
        "Currency Converter app and Ejecting from Expo": [
          "Handling Notches",
          "Creating input and Result Views",
          "Creating all the buttons",
          "Adding working logic",
          "Handling keyboards events in React native",
          "Ejecting expo app to Android and iOS app"
        ],
        "Third party components and TIC TAC TOE": [
          "Third party components",
          "Exploring Native Base",
          "Can you debug in React Native",
          "Loading Custom Fonts and Resolve Errors",
          "Adding TODOs and TIC TAC TOE",
          "Flipping Cross and Zeros",
          "Writing more functions",
          "Writing winning logic for TIC TAC TOE",
          "Design part of TIC TAC TOE"
        ],
        "Sound and Spanish number app": [
          "Exploring Expo docs",
          "Getting assets for playing sound",
          "Understand the play method",
          "Creating a button for sound",
          "Finishing Audio app"
        ],
        "Scratch and win Game app": [
          "Bug in default app and fix",
          "Define the function for game",
          "Getting functions for ready",
          "Getting the design part and fixes",
          "Dimensions and Assignment"
        ]
      },
      "requirements": [
        "Basics of Javascript is required like loops, function, arrays, arrow function etc.",
        "This course is NOT dependent on reactjs",
        "A decent laptop/desktop that can open code editor like VSCode",
        "No high end system is required as you can run all apps in your real mobile phone"
      ],
      "description": "Let’s start the discussion with some most obvious questions:\n\nWhat is prerequisite for this course?\nBefore starting this course, we assume that you are comfortable with javascript. Things like loops, functions, array and arrow functions are clear to you.\n\nIs react native related to reactJS?\nThis course was designed in a way that student can start directly with this course. There is no need for reactJS for this course. But if you do have reactjs knowledge, that’s great.\n\n\nDo I need high end laptop/desktop for this course?\nThis is one great thing with react native. Throughout this course, we will be working with VSCode and you can run apps in mobile phone (real device). Don’t worry, process is covered in the course.\n\n\nIs redux included?\nYes, of course. and includes firebase, Camera API, sound etc too.\n\n\nWhat apps we will be creating in this course?\nSo many apps.\nDiceRoller, CurrencyConverter, TicToeToe, Scratch and win, Photo clicker, Employee App, User API, Authentication, Message Board, Chat app, Contact App etc.\n\n\nWhat is react native?\nReact native is a project by Facebook (open source), used to design Android and iOS apps with single code apps. One more amazing thing about react native is hot reloading which makes app development time faster.\nWorking with react native is super fun. This course is 1 stop solution to learn react native.\n\n\nHere are some kind words by our students:\ni really loved the approach in which the instructor taught i,e to go with the documentation. He actually teaches you how to learn new things. i just loved the course.\n— Surabhi Nirgudwar\nThis course is one of the best course have ever done. The tutor is also the best tutor have ever encounter. I love how he was able to carry everybody along, i understood everything in this course and i look forward in doing more course from you.\n— Deborah\nvery straight forward, covers everything (including minor details), easy to follow and understand\n— Cara\n\n\nCatch you inside the course!",
      "target_audience": [
        "Beginners in mobile app development",
        "Beginner in Android development",
        "Beginners in iOS development",
        "Students who are looking for a 1 stop solution for mobile development using react native"
      ]
    },
    {
      "title": "Become an iOS/Android Game Developer with Unity 2017",
      "url": "https://www.udemy.com/course/iosgamedev/",
      "bio": "Re-create the most popular apps and publish them to the App Store / Play Store.",
      "objectives": [
        "Build apps and publish them to the market."
      ],
      "course_content": {},
      "requirements": [
        "Have a PC that can run Unity.",
        "iOS or Android Device."
      ],
      "description": "In this course we will take a look at the two most popular mobile games and re create them using Unity and C#.\nThe games we will be recreating:\nCut The Rope ( This is our introductory game, we will recreate it mostly by using the built in Unity components, so that you get a bit more comfortable with the engine.)\nFlappy Bird ( We will learn how Rigid bodies behave and how to create the illusion of an endless runner. )\nColor Switch ( We apply all that we have learned so far to create our final game, and get it published to both iOS and Android.)\nWe will then deploy these games to our Android device, as well as our iOS device using xCode.\nYou will learn why xCode is very important when it comes to developing for the App Store.\nLearn how to earn money with free games using Advertisements ( Video Ads ).\nFinally we will show you how to publish these games to the App Store and/or Play Store.",
      "target_audience": [
        "Anyone who wants to learn how to develop apps for iOS/Android and publish said apps to the App Store and/or Play Store."
      ]
    },
    {
      "title": "Learn Ionic 3 From Scratch",
      "url": "https://www.udemy.com/course/learn-ionic-3-from-scratch/",
      "bio": "Create Cross Platform Mobile Applications with Ionic 3, Angular 4, TypeScript and Firebase.",
      "objectives": [
        "Create a mobile application that interfaces with the GitHub API.",
        "Create a real time chat application with Ionic 3 and Firebase",
        "Create an application prototype with Adobe Experience Design",
        "Have a UX driven approach to application development.",
        "Understand the intricacies of Ionic 3 and Angular 4, and use them to make powerful cross platform mobile applications.",
        "Integrate a variety of Ionic Native plugins with your mobile applications."
      ],
      "course_content": {},
      "requirements": [
        "An understanding of JavaScript",
        "A brief understanding of Angular and TypeScript would be beneficial, but not ultimately required."
      ],
      "description": "With over 10 hours of content and more to come, this course is the ultimate learning resource for Ionic 3.\n\n\"Learn Ionic 3 From Scratch by Paul Halliday is a course that guides you from a beginner to expert in Ionic 3. If you have seen any of Paul Halliday's work before, you know that he is committed to providing up-to-date, thorough video content with a clear cut approach.\"\n\nYou may have seen other courses on the market that are available to purchase already, yet haven't been updated to Ionic 3 or taking advantage of the latest Angular concepts or features. Paul releases daily videos on his YouTube channel and his commitment to the course content is the same. By purchasing this course, you're investing in your mobile development future as you can be confident that it will be updated as time goes on.\nThis course is community oriented and the discussion tab can be used to showcase your progress, suggest content ideas, ask for help, and much more.\nApplications Built\nWithin the \"Learn Ionic 3 From Scratch\" course, you will be making the Github Profile Searcher from scratch. Prior to interacting with any API, we create our mock data and TypeScript interfaces for a strongly typed approach to development.\nWe then look at making 'Beep', the social chat application from UX design all the way to full implementation*. As you follow the course, we design the application in Adobe Experience Design and then look at implementing the various features to a production standard within our project.\nWe use Firebase for our real-time database and authentication, as well as the latest release candidate which includes the modularisation of AngularFire2 into different packages.\n\nBy the end of this course, you'll be able to make cross platform mobile applications using Angular 4, TypeScript and Ionic 3. This means that you'll be able to:\n\nCreate high performance mobile applications using web technologies (HTML5 and JavaScript).\nHave a strong portfolio of applications* and understanding of Ionic 3, TypeScript and  Angular 4.\nMaster the Ionic 3 CLI with a section dedicated to it's usage.\nUse Ionic Native and Cordova to hook into native device features*.\nTheme your Ionic applications with bespoke styles, and understand common accessibility patterns.\nMaster Ionic 3 navigation patterns with lifecycle hooks.\nIncrease performance of your Ionic 3 applications with lazy loading.\nAnd much more.\n* Feature is under development as the course continues to grow.\nAbout Paul\nPaul Halliday is a Durham based tech entrepreneur that specialises in cross platform HTML5 mobile development. He graduated with a first class honours in BSc Computer Science from the University of Sunderland. He's also a Progress Telerik Developer Expert and a Google Accredited Mobile Site Professional.",
      "target_audience": [
        "Anyone who wants to make cross platform mobile applications using the latest web technologies."
      ]
    },
    {
      "title": "Flutter Riverpod Essential Course (English)",
      "url": "https://www.udemy.com/course/flutter-riverpod-essential-course-english/",
      "bio": "Learn and practice the concepts of state management with Riverpod, the Flutter state management solution.",
      "objectives": [
        "Managing Dart Data Classes with Dart Data Class Generator and Freezed",
        "All providers offered by Riverpod",
        "AsyncValue Details",
        "Provider Lifecycle",
        "Provider Scoping",
        "Riverpod Lint & Provider Observer",
        "Pagination with Riverpod (numbered pagination, infinite scroll)",
        "Go Router with Riverpod",
        "Master Riverpod by creating three apps (Todo, Weather, and Firebase Authentication) 10 times using different state shapes such as AsyncValue"
      ],
      "course_content": {
        "Introduction": [
          "Tutorial Background and Target Audience",
          "Tutorial Structure",
          "Tools"
        ],
        "Riverpod Overview": [
          "What is Riverpod?",
          "Preparing to use Riverpod"
        ],
        "Dart Data Class Generator Extension and Freezed Package": [
          "Dart Data Class Generator - Introduction",
          "Dart Data Class Generator - Generate from JSON",
          "Dart Data Class Generator - UI",
          "Freezed 3.0 official release",
          "Freezed - Introduction",
          "Freezed - Basics",
          "Freezed - with json_serializable",
          "Freezed - UI (Hotel List)"
        ],
        "All Providers": [
          "Major changes in riverpod version 2.6.1 upgrade",
          "Provider - Overview",
          "Provider - App Skeleton",
          "Provider - Basic",
          "Provider - autoDispose",
          "Provider - family, autoDispose.family",
          "Provider - object parameter",
          "Provider - Flutter Riverpod Snippets",
          "Provider - riverpod generator 1",
          "Provider - riverpod generator 2",
          "StateProvider - Overview, App Skeleton, Basic",
          "StateProvider - computed state with Provider",
          "StateProvider - autoDispose",
          "StateProvider - family, autoDispose.family",
          "FutureProvider - Overview",
          "FutureProvider - userListProvider, UserListPage",
          "FutureProvider - userDetailProvider, UserDetailPage, code generation",
          "FutureProvider - keepAlive",
          "FutureProvider - UserListPage, invalidate",
          "FutureProvider - UserDetailPage, FamilyDisposePage",
          "StreamProvider",
          "StateNotifierProvider - Overview, todosProvider",
          "StateNotifierProvider - UI",
          "ChangeNotifierProvider",
          "Urgent Notice (boredapi url has changed)",
          "NotifierProvider - counterProvider",
          "NotifierProvider - counterProvider(autoDispose, family)",
          "NotifierProvider - state shapes, activity model",
          "NotifierProvider - EnumActivityState, enumActivityProvider",
          "NotifierProvider - EnumActivityPage",
          "NotifierProvider - EnumActivity, listen, invalidate, provider rebuild",
          "NotifierProvider - SealedActivityState, sealedActivityProvider",
          "NotifierProvider - SealedActivityPage",
          "NotifierProvider - enumAsyncActivityProvider",
          "NotifierProvider - sealedAsyncActivityProvider",
          "Urgent Notice (boredapi url has changed)",
          "AsyncNotifierProvider - Overview, App Skeleton, counterProvider, CounterPage",
          "AsyncNotifierProvider - guard static method, code generation",
          "AsyncNotifierProvider - asyncActivityProvider, AsyncActivityPage",
          "AsyncNotifierProvider - extension, skipError",
          "StreamNotifierProvider - TimerState, timerProvider",
          "StreamNotifierProvider - TimerPage"
        ],
        "AsyncValue Details": [
          "Overview 1 - Important properties",
          "Overview 2 - Important methods",
          "Test Scenario",
          "weatherFirstProvider, WeatherFirstPage",
          "WeatherFirstPage, ref.invalidate",
          "cityProvider, weatherSecondProvider, WeatherSecondPage"
        ],
        "Provider Lifecycles": [
          "Overview",
          "App Skeleton",
          "Lifecycle of autoDispose provider",
          "Lifecycle of keepAlive provider",
          "Customized Cache - Sync Operation",
          "Urgent Notice (dummyjson's product information has changed)",
          "Product model, providers",
          "ProductsPage, ProductPage",
          "Customized Cache - Async Operation",
          "Lifecycle of cascade providers"
        ],
        "Scopes": [
          "Overview",
          "Optimize Rebuilds - 1",
          "Optimize Rebuilds - 2",
          "Optimize Rebuilds - 3",
          "Initialization of Sync Provider for Async APIs",
          "ProviderScope and Overlay - 1",
          "ProviderScope and Overlay - 2",
          "Subtree Scoping - 1",
          "Subtree Scoping - 2",
          "Subtree Scoping - 3"
        ],
        "Riverpod Lint": [
          "Riverpod Lint"
        ],
        "Provider Observer": [
          "Overview",
          "Observing all providers"
        ],
        "Pagination with Riverpod": [
          "Numbered Pagination: Overview, App Skeleton",
          "Notice (dummyjson's product information has changed)",
          "Numbered Pagination: Product model, ProductRepository",
          "Numbered Pagination: productsProvider, productProvider",
          "Numbered Pagination: ProductsPage",
          "Numbered Pagination: ProductsPage caching",
          "Numbered Pagination: Product Page",
          "Source code changes with the infinite_scroll_pagination package 5.0 upgrade",
          "Infinite Scroll: Overview, App Skeleton",
          "Infinite Scroll: Products Page"
        ]
      },
      "requirements": [
        "Some experience with Flutter is required",
        "Knowledge of Provider or Bloc is not required, but it will help you understand the lesson"
      ],
      "description": "In the Flutter Riverpod Essential course, you'll get a deep dive into Riverpod, which is currently the fastest growing Flutter state management solution.\n\n\nIf you want a deep understanding of Flutter Riverpod and want to practice all the concepts, this is the course for you.\n\n\nWhen creating the course, I took care to ensure that there is a balance between theory and practice.\n\n\nWe believe that repetition is the most important way to learn, so for each new concept, we'll build a small app to test the concept, and then we'll work through hands-on apps like the TODO, Weather, and Firebase Authentication apps to bring the concepts together. In particular, we'll practice repeatedly using different state forms when building the TODO, Weather, and Firebase Authentication apps.\n\n\nLet's take a quick look at everything we've covered in this course.\n\n\n- Managing Dart Data Classes based on Dart Data Class Generator and Freezed\n- All Providers: Provider, StateProvider, FutureProvider, StreamProvider, StateNotifierProvider, ChangeNotifierProvider, NotifierProvider, AsyncNotifierProvider, StreamNotifierProvider\n- All Provider modifiers: no modifier, autoDispose, family, autoDispose + family\n- Examples of using the various properties and methods provided by the AsyncValue and AsyncValueX extension\n- Provider Lifecycle: Provider State Caching Customization using the Provider lifecycle method, etc.\n- Various Provider Scoping use cases - Performance Optimization, etc.\n- Learn, with examples, about Riverpod Lint, a package designed to help developers avoid common mistakes and streamline repetitive tasks related to Riverpod.\n- Implementing numbered pagination and infinite scroll with Riverpod\n- Riverpod + GoRouter Usage Example\n- TODO App (implemented 5 times): 1. Sync Todo App, 2. Async Todo App utilizing enum-based state, 3. Async Todo App utilizing sealed class-based state, 4. Async Todo App utilizing AsyncValue as state, 5. AsyncValue + Hive (data persistence).\nWeather App (implemented 4 times): 1. utilizing AsyncValue as state, 2. utilizing sealed class-based state, 3. utilizing enum-based state, 4. AsyncValue + Geolocator\n- Firebase Authentication App: Signup, Signin, Signout, VerifyEmail, ForgetPassword, ChangePassword",
      "target_audience": [
        "Flutter developers who want a deeper understanding of Riverpod, one of the Flutter State Management Solutions",
        "Flutter developers who want to learn more about Flutter Riverpod's many use cases."
      ]
    },
    {
      "title": "Flutter & Dart - The Complete Guide [2025 Edition]",
      "url": "https://www.udemy.com/course/learn-flutter-dart-to-build-ios-android-apps/",
      "bio": "A Complete Guide to the Flutter SDK & Flutter Framework for building native iOS and Android apps",
      "objectives": [
        "Learn Flutter and Dart from the ground up, step-by-step",
        "Build engaging native mobile apps for both Android and iOS",
        "Use features like Google Maps, the device camera, authentication and much more!",
        "Learn how to upload images and how to send manual and automated push notifications",
        "Learn all the basics without stopping after them: Dive deeply into Flutter & Dart and become an advanced developer"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To This Course!",
          "What Is Flutter?",
          "Flutter uses Dart!",
          "One Codebase, Multiple Platforms",
          "Flutter Setup - Overview",
          "Windows Setup",
          "macOS Setup",
          "Project Creation & Setting Up a Code Editor for Flutter Development",
          "Course Setup",
          "Running a First Flutter App",
          "Understanding Material Design",
          "About This Course",
          "Course Resources (Code Snapshots, Community & Slides)"
        ],
        "Flutter & Dart Basics I - Getting a Solid Foundation [ROLL DICE APP]": [
          "Module Introduction",
          "Analyzing A New Flutter Project",
          "From Dart To Machine Code",
          "How Programming Languages Work",
          "Starting From Scratch: Understanding Functions",
          "Importing Features From Packages",
          "How Flutter Apps Start",
          "Knowledge Check: Flutter & Dart Basics",
          "Understanding Widgets",
          "Using a First Widget & Passing Values to Functions",
          "Positional & Named Arguments",
          "Deep Dive: Position & Named Arguments",
          "Combining Multiple Widgets",
          "Understanding \"const\" Values",
          "Flutter & Code Formatting",
          "Building More Complex Widget Trees",
          "Understanding Value Types",
          "Configuring Widgets & Understanding Objects",
          "Working with \"Configuration Objects\" (Non-Widget Objects)",
          "Generics, Lists & Adding Gradient Colors",
          "How To Configure Widgets & Objects",
          "Practice: Styling Text",
          "Onwards to Custom Widgets: Why Do You Need Them?",
          "Understanding Classes",
          "Building Custom Widgets",
          "Working with Constructor Functions",
          "Splitting Code Across Files",
          "Practice: Create a Custom Widget",
          "Introducing Variables",
          "Variables & Types - Combining Two Key Concepts",
          "\"final\" & \"const\" - Special Kinds Of \"Variables\"",
          "Instance Variables (Properties) & Configurable Widgets",
          "Practice: Reusable Widgets & Constructor Functions",
          "Displaying Images & Using Multiple Constructor Functions",
          "Adding Buttons & Using Functions As Values",
          "Styling Buttons & Working with Padding",
          "How NOT To Build Interactive Widgets",
          "Introducing Stateful Widgets",
          "Generating Random Numbers",
          "Module Summary"
        ],
        "Flutter & Dart Basics II - Fundamentals Deep Dive [QUIZ APP]": [
          "Module Introduction",
          "A Challenge For You!",
          "Challenge Solution 1/2 - Creating a Widget",
          "Challenge Solution 2/2 - Working with More Widgets",
          "Adding Icons to Buttons",
          "Adding Transparency to Widgets",
          "Repetition & Exercise: Adding a Stateful Widget",
          "Rendering Content Conditionally",
          "Accepting & Passing Functions as Values",
          "The \"initState\" Method",
          "Deep Dive: Flutter's (Stateful) Widget Lifecycle",
          "Using Ternary Expressions & Comparison Operators",
          "Understanding \"if\" Statements",
          "Using \"if\" Statements In Lists",
          "if Statements & Comparison Operators",
          "Adding a Data Model & Dummy Data",
          "Configuring a Column",
          "Creating a Reusable, Custom Styled Button",
          "Accessing List Elements & Object Properties",
          "Mapping Lists & Using the Spread Operator",
          "Alignment, Margin & Padding",
          "Mutating Values in Memory",
          "Managing The Questions Index As State",
          "More on Button Styling",
          "Using Third-Party Packages & Adding Google Fonts",
          "Passing Data via Functions Across Widgets",
          "More Conditions",
          "Getting Started with the Results Screen",
          "Passing Data to the Results Screen",
          "Introducing Maps & \"for\" Loops",
          "Using \"for\" Loops In Lists",
          "Note: A Typo In The Next Lecture",
          "Accessing Map Values & Using \"Type Casting\"",
          "Combining Columns & Rows",
          "Expanded To The Rescue!",
          "Filtering & Analyzing Lists",
          "Making Content Scrollable with SingleChildScrollView",
          "Time to Practice: Flutter Basics",
          "Beyond the Basics: Optional, Important Dart Features",
          "Module Summary"
        ],
        "Debugging Flutter Apps": [
          "Module Introduction",
          "The Starting Project & A Problem",
          "Understanding Error Messages",
          "Debugging Apps & Using \"Debug Mode\"",
          "Working with the Flutter DevTools",
          "Running the App on Real iOS or Android Devices"
        ],
        "Adding Interactivity, More Widgets & Theming [EXPENSE TRACKER APP]": [
          "Module Introduction",
          "Starting Setup & Repetition Time!",
          "Adding an Expense Data Model with a Unique ID & Exploring Initializer Lists",
          "Introducing Enums",
          "Creating Dummy Data",
          "Efficiently Rendering Long Lists with ListView",
          "Using Lists Inside Of Lists",
          "Creating a Custom List Item with the Card & Spacer Widgets",
          "Using Icons & Formatting Dates",
          "Setting an AppBar with a Title & Actions",
          "Adding a Modal Sheet & Understanding Context",
          "Handling User (Text) Input with the TextField Widget",
          "Getting User Input on Every Keystroke",
          "Letting Flutter do the Work with TextEditingController",
          "Time to Practice: Adding a New Input",
          "Exercise Solution",
          "Closing The Modal Manually",
          "Showing a Date Picker",
          "Working with \"Futures\" for Handling Data from the Future",
          "Adding a Dropdown Button",
          "Combining Conditions with AND and OR Operators",
          "Validating User Input & Showing an Error Dialog",
          "Saving New Expenses",
          "Creating a Fullscreen Modal",
          "Using the Dismissible Widget for Dismissing List Items",
          "Showing & Managing \"Snackbars\"",
          "Flutter & Material 3",
          "Getting Started with Theming",
          "Setting & Using a Color Scheme",
          "Setting Text Themes",
          "Using Theme Data in Widgets",
          "Important: Adding Dark Mode",
          "Adding Dark Mode",
          "Using Another Kind of Loop (for-in)",
          "Adding Alternative Constructor Functions & Filtering Lists",
          "Adding Chart Widgets",
          "Module Summary"
        ],
        "Building Responsive & Adaptive User Interfaces [EXPENSE TRACKER APP]": [
          "Module Introduction",
          "What is \"Responsiveness\"?",
          "Locking the Device Orientiation",
          "Updating the UI based on the Available Space",
          "Understanding Size Constraints",
          "Handling to Screen Overlays like the Soft Keyboard",
          "Understanding \"Safe Areas\"",
          "Using the LayoutBuilder Widget",
          "Building Adaptive Widgets",
          "Module Summary"
        ],
        "Flutter & Dart Internals [TODO APP]": [
          "Module Introduction",
          "Three Trees: Widget Tree, Element Tree & Render Tree",
          "How The UI Is Updated",
          "Refactor & Extract Widgets To Avoid Unnecessary Builds",
          "Understanding Keys - Setup",
          "Which Problem Do Keys Solve?",
          "Understanding & Using Keys",
          "Mutating Values in Memory & Making Sense of var, final & const",
          "Module Summary"
        ],
        "Building Multi-Screen Apps & Navigating Between Screens [MEALS APP]": [
          "Module Introduction",
          "Project Setup",
          "Using a GridView",
          "Widgets vs Screens",
          "Displaying Category Items on a Screen",
          "Making any Widget Tappable with InkWell",
          "Adding Meals Data",
          "Loading Meals Data Into a Screen",
          "Adding Cross-Screen Navigation",
          "Passing Data to the Target Screen",
          "Introducing the Stack Widget",
          "Improving the MealItem Widget",
          "Adding Navigation to the MealDetails Screen",
          "Improving the MealDetails Screen",
          "Adding Tab-based Navigation",
          "Passing Functions Through Multiple Layers of Widgets (for State Management)",
          "Managing App-wide State & Data",
          "Adding a Side Drawer",
          "Closing the Drawer Manually",
          "Adding a Filter Item",
          "Replacing Screens (Instead of Pushing)",
          "Adding More Filter Options",
          "Replacing WillPopScope with PopScope",
          "Returning Data When Leaving a Screen",
          "Reading & Using Returned Data",
          "Applying Filters",
          "An Alternative Navigation Pattern: Using Named Routes",
          "Module Summary"
        ],
        "Managing App-wide State [MEALS APP]": [
          "Module Introduction",
          "What's The Problem?",
          "Installing the Solution: Riverpod",
          "How State Management with Riverpod Works",
          "Creating a Provider",
          "Using a Provider",
          "Creating a More Complex Provider with StateNotifier",
          "Using the FavoritesProvider",
          "Triggering a Notifier Method",
          "Getting Started with Another Provider",
          "Combining Local & Provider-managed State",
          "Outsourcing State Into The Provider",
          "Connecting Multiple Providers With Each Other (Dependent Providers)",
          "Swapping The \"Favorite Button\" Based On Provider State",
          "Module Summary",
          "\"riverpod\" vs \"provider\" - There are many Alternatives!"
        ],
        "Adding Animations [MEALS APP]": [
          "Module Introduction",
          "Setup & Understanding Explicit vs Implicit Animations",
          "Explicit Animations: Adding an Animation Controller",
          "Explicit Animations: Playing the Animation with AnimatedBuilder",
          "Finetuning Explicit Animations",
          "Getting Started with Implicit Animations",
          "Configuring Implicit Animations",
          "Adding Multi-Screen Transitions",
          "Module Summary"
        ]
      },
      "requirements": [
        "Basic programming language will help but is not a must-have",
        "You can use either Windows, macOS or Linux for Android app development - iOS apps can only be built on macOS though",
        "NO prior iOS or Android development experience is required",
        "NO prior Flutter or Dart experience is required - this course starts at zero!"
      ],
      "description": "May 2023: This course was completely updated (re-recorded from the ground up) and is now better than ever!\n-\nDiscover the power of Flutter and Dart to create stunning, high-performance mobile apps for iOS and Android with the most comprehensive and bestselling Flutter course! With over 30 hours of comprehensive content, this course is the ultimate resource for anyone who wants to build beautiful, responsive, and feature-rich applications from scratch.\nLearn from a Bestselling Udemy Instructor: Maximilian Schwarzmüller\nI'm Maximilian Schwarzmüller, a bestselling, top-rated online course instructor with a vast variety of courses on web and mobile development. I'm excited to be your guide throughout this journey. My goal with this course is to teach you Flutter from the ground up, step-by-step and in a highly practice-oriented way!\nUnlock Your Potential in Mobile App Development\nThis Flutter & Dart course is designed for absolute beginners with no prior programming experience, as well as for those with existing iOS, Android or other development skills. Through video lessons and hands-on projects, you'll learn the ins and outs of Flutter and Dart!\nThroughout the course you'll build multiple demo apps - ranging from simple to more complex - and, by the end of the course, you'll be able to build your own iOS and Android apps with Flutter.\nWhy Choose Flutter?\nDeveloped by Google, Flutter is a framework that allows you to learn one language (Dart) and build beautiful native mobile apps in no time\nWrite code only once and ship your apps both to the Apple App Store and Google Play\nUse the rich widget suite Flutter provides to add common UI elements or build your own custom widgets\nWhat You'll Learn:\nDetailed setup instructions for both macOS and Windows\nA thorough introduction to Flutter, Dart, and the concept behind widgets\nAn overview of the built-in widgets and how to add your own\nDebugging tips & tricks\nPage navigation with tabs, side drawers, and stack-based navigation\nState management solutions\nHandling and validating user input\nConnecting your Flutter app to backend servers by sending HTTP requests\nUser authentication\nAdding Google Maps\nUsing native device features like the camera\nAdding beautiful animations & page transitions\nImage upload\nPush notifications - manual approach and automated\nAnd much more!\nCourse Highlights:\nOn-Demand, Video-Based Learning: An immersive experience with practical examples and demo apps to help you develop your skills at your own pace\nLifetime Access: Revisit topics and refresh your knowledge anytime\nRegularly Updated: The course has been updated multiple times in the past to ensure it stays up-to-date with the latest industry standards\nNo Experience Necessary\nThis course is designed to be accessible to everyone, regardless of their programming background. Whether you're a complete beginner or an experienced developer looking to expand your skillset, I will guide you through each step of the process, ensuring you gain a deep understanding of the fundamentals and advanced concepts.\nPrerequisites:\nBasic programming language knowledge will help but is not required\nNo prior knowledge of Flutter or Dart is needed\nNo iOS (Swift/ObjectiveC) or Android (Java/Kotlin) development experience required\nTake the First Step Towards Your Mobile App Development Career\nWith the skyrocketing demand for skilled mobile app developers in today's job market, there has never been a better time to jump into the world of Flutter & Dart. By the end of this course, you'll be fully equipped to design, develop, and deploy stunning iOS and Android apps, setting yourself up for a successful career in mobile app development.\nDon't let this opportunity pass you by! Enroll in \"Flutter & Dart - The Complete Guide\" today and start building amazing apps for the iOS and Android platforms!",
      "target_audience": [
        "Beginner and experienced developers who are interested in diving into mobile app development using one language for both platforms",
        "Experienced iOS or Android developers who want to build cross-platform (iOS + Android) apps with one single programming language"
      ]
    },
    {
      "title": "Kotlin Android Development Masterclass",
      "url": "https://www.udemy.com/course/kotlin-android-developer-masterclass/",
      "bio": "Learn Kotlin, Android Development, Android Studio & IntelliJ IDEA from Scratch. Build Android Apps using Kotlin",
      "objectives": [
        "Build sophisticated Android Apps using Kotlin",
        "Quckily Master Kotlin Programming language",
        "Become a confident Kotlin and Android Developer who is hireable",
        "FULL SUPPORT - Your answers will be answered promptly!"
      ],
      "course_content": {
        "Getting Started": [
          "What You'll Get from this Course",
          "How's The Course Structured",
          "Where Should You Start"
        ],
        "Development Setup - Windows PC, MAC and Linux Ubuntu": [
          "Introduction",
          "Install Java JDK - Windows PC",
          "Install IntelliJ IDEA - Windows PC",
          "Install Android Studio - Windows PC",
          "Install IntelliJ IDEA - MAC",
          "Install Java - Linux Ubuntu",
          "Install Android IntelliJ - Linux Ubuntu",
          "Installing Android Studio - Linux Ubuntu",
          "How to Import Kotlin Code/Resources into IntelliJ",
          "Kotlin Source Code - Github"
        ],
        "WATCH THIS - UPDATE Development Tools": [
          "IntelliJ Updates",
          "Update to Kotlin 1.2"
        ],
        "Introduction to Kotlin Programming Language": [
          "Write a Hello World program in Kotlin",
          "Kotlin - How to Make Comments in Your Code",
          "Kotlin Variables",
          "Kotlin Variable type String",
          "Kotlin Variable type Int",
          "Kotlin - Variable type - Double",
          "Kotlin Variable type Boolean",
          "Kotlin - Variable type - Float",
          "Kotlin Char Variable Types",
          "Kotlin - Difference between Var and Val Keywords",
          "Kotlin - How to Read Input with readLine Method - App - Store Coversation",
          "Code/Resource Files"
        ],
        "Kotlin - Operations and Operators": [
          "Kotlin - Adding Numbers",
          "Kotlin - Subtraction",
          "Kotlin - Multiplying Numbers",
          "Kotlin - Division",
          "Kotlin - Remainder",
          "Incrementing and Decrementing",
          "How to Convert Between Data Types",
          "Code/Resource Files"
        ],
        "Kotlin Language - Decision Making - If, else, switch..": [
          "Conditional operators (<,>, ==, !=, <=, >=)",
          "If-else Statements and Conditional operators",
          "Logical Operators (AND, OR, NOT)",
          "When Expression",
          "For Loop",
          "While Loop",
          "Do while Loop",
          "App - How Many Siblings?",
          "Code/Resource Files"
        ],
        "Introduction to Classes and Objects - Object Oriented Programming in Kotlin": [
          "Functions With Parameters",
          "Functions Return Types",
          "Functions - No return Type, No parameters",
          "Variable Scope",
          "Introduction to Object Oriented Programming - OOP - What's a Class?",
          "Let's Create our First Class",
          "Setters and Getters",
          "Inheritance - Introduction",
          "Inheritance",
          "Overloading Constructors",
          "Controlling Access to fields (Instance Variables - Properties)",
          "Kotlin - Class Extension",
          "Nested Classes",
          "Inner Classes",
          "Companion Object in Kotlin",
          "Overloading Operators + Challenge",
          "Code/Resource Files"
        ],
        "Advanced OOP In Kotlin": [
          "Interface Classes",
          "Abstract Classes",
          "Generic Classes",
          "Enums in Kotlin",
          "Code/Resource Files"
        ],
        "Introduction to Arrays and Advanced Data Structures - Collections and More": [
          "What's an Array - Creating Arrays in Kotlin",
          "Create Arrays and Iterate Through",
          "Arrays - Part 2",
          "Array Lists",
          "Hashmaps",
          "MapOf, Arrayof, MutableList",
          "Code/Resource Files"
        ],
        "Kotlin - Introduction to I/O - Write, Read File - Storage": [
          "Writing to Files (Text Files)",
          "writing to File with User Input and Appending Characters",
          "Reading from Text Files",
          "App - Writing a Reader-Write App",
          "Code/Resource Files"
        ]
      },
      "requirements": [
        "No programming experience is required",
        "Drive for learning android app development and Kotlin programming"
      ],
      "description": "Kotlin Programming Language and Android are the best combinations for building robust mobile applications.\nAre you Looking to boost your income as an Android Developer? Maybe you have a lot of app ideas but don't know where to start? Or are you seeking a career in Android Development and Kotlin Programming that will finally give you the freedom and flexibility you have been looking for?\nBuild a strong foundation in Android Development, Android Studio, IntelliJ IDEA, and object-oriented Kotlin Programming with this tutorial and complete course.\nBuild Android apps from scratch using Android Studio, IntelliJ IDEA, and Kotlin Programming language\nUpload your apps to Google Play and reach Millions of Android users\nContent and Overview\nThis course will take you from knowing nothing about Android O app development to a complete Android developer in 5 weeks. You will learn the following:\nIntelliJ IDEA and build User Interface (Set up and walkthrough)\nAndroid Studio and build User Interface (Set up and walkthrough)\nFundamentals of Kotlin Programming used to build Android apps.\nInputs, Buttons and Reactive (Tap) Interfaces\nAndroid Building blocks\nVariables, Arrays, Loops, ArrayLists, ListView\nNavigate between screens\nPassing information between screens\nLearn how professional android apps developers think and work\nLearn how to design android apps\nBuild several amazing apps - Hands-on\nPublish your apps on Google Play\nBuild Sound Box app\nAnd Learn much more by Building Real World Apps ...\nWHY ANDROID?\nAndroid is known to be one of the most versatile and most used mobile operating systems in the world. This is the age of mobile devices, and Android is at the top of the \"food\" chain.\nDID YOU KNOW? Android is the primary operating system for over 90 tablets, 6 E-Readers, and 300 smartphones. There are over 1,460,800 apps in the Google Play store &they’re growing at an astounding pace! Every day about 1.5 million Android devices are activated all around the world. About 60% of the apps available at the Google play store are absolutely free!\nWhy learn android development? Learning android development is fun. By the year 2018, there will be about 4 billion android users, hence doubling the current market. It is safe to say that android development skills are the most sought out by employers and development agencies.  If you have android development skills, you will not be short on job opportunities.\nI am confident that this course will take you from not knowing much about Android development with Kotlin to building top-notch apps in as little as 5 weeks!\nI teach this course, so the concepts and topics you'll learn will be ingrained in your memory because you will actually understand the ins and outs of android development and Kotlin Programming language.  You will be learning by doing - hands-on learning approach.\nAlso, once you purchase the course, it's yours to keep forever - you'll have LIFETIME ACCESS.  You can always refer back to any section that you want to revise.\nNo Prior Experience is Required! This course is designed specifically for people with ZERO prior experience in programming and has never even programmed a single thing before. It doesn’t matter if you have absolutely no idea about the basics (that is why I am here!), I will teach you everything you need to know about developing and programming in just 5 weeks. All you need is loads of passion, a hint of dedication, an internet connection, and a laptop or PC. It’s that easy!!\nWhat do I learn from this course?\nYou will be able to learn android app development and Kotlin programming in just 5 weeks.\nYou will be able to create engaging, real-world Android apps.\nYou'll learn by building real apps.\nYou'll learn how to design top-notch apps\nThere's more!  You will learn how to work with APIs, web services, and advanced databases. Upload your android apps to Google Play and reach millions of android users and EARN MONEY by monetizing your applications and allowing advertisements to run on them!\nWhy choose this course?\nIf you do a quick google search, you'll find that Android OS runs on more mobile devices than any other mobile Operating System in the World!  And the good news is, the trend is growing!  This means your Android/Kotlin skills will always serve you well, as more companies will be needing Android Developers to build apps.\nCan you see the potential of making a perfect living by becoming an Android Developer?\nAlso, I will be here for you every step of the way - guiding you through the entire android and Kotlin journey.  I have over 80,000 students from over 200 countries who learned to program from me and my courses. So, I've had a lot of experience teaching.\nGive yourself the competitive advantage by learning  Android and Kotlin Today!\nIf you know Android and Kotlin, you'll always be competitive in the market.  You will be at the top of the food chain!\nEnroll now.",
      "target_audience": [
        "Recommended for people with no programming or app development experience",
        "Beginners and intermediate programmers alike will benefit from this course",
        "Entrepreneurs who want to learn app development and save money on development & outsourcing",
        "If you want to change your current career to Android/Kotlin Development this is for you",
        "Get Hands-On Android And Kotlin Development Skills"
      ]
    },
    {
      "title": "iOS iPhone App Development - Complete Course",
      "url": "https://www.udemy.com/course/iphone-developer-course/",
      "bio": "Become an iPhone / iOS App Developer",
      "objectives": [
        "iPhone App Development",
        "Swift Programming",
        "Mobile Development Design Thinking",
        "iPad App Development"
      ],
      "course_content": {
        "iPhone Development Basics": [
          "Intro",
          "XCode",
          "iOS Simulator",
          "Interface Builder",
          "Understanding XCode",
          "Accessing UI Outlets",
          "Reminder about Reviews",
          "Buttons",
          "Views",
          "Image Views",
          "Speedingup the Videos",
          "Switch",
          "Text Fields",
          "End of Section"
        ],
        "Swift Basics": [
          "Intro",
          "Print and Comments",
          "Variables and Primitives",
          "Operators",
          "Break",
          "Control Flow",
          "Collections",
          "Dice Generator",
          "End of Section"
        ],
        "Intermediate UI": [
          "Intro",
          "Outlets and Constraints",
          "Stack Views",
          "Hard Coding Outlets",
          "Segmented Controls",
          "Break",
          "View Controller, Segue, and Data",
          "Date Picker View",
          "Picker View",
          "Sliders",
          "End of Section"
        ],
        "Login UI": [
          "Intro",
          "Browsing the Reference",
          "Starting a New App",
          "Three Main Components",
          "Segmented Control",
          "Text Fields",
          "Outlets in Code",
          "Break",
          "Login or Register",
          "Login Function",
          "Register Function",
          "Revealing the Password",
          "Constraints",
          "User Notification",
          "End of Section"
        ],
        "Advanced Swift": [
          "Intro",
          "Functions",
          "Classes and Objects",
          "Convenience Init",
          "Structs",
          "Inheritance",
          "Extending a Class",
          "Break",
          "Optionals and Null Safety",
          "Protocols and Delegates",
          "Singletons",
          "Enums",
          "Closures",
          "Class Methods",
          "End of Section"
        ],
        "Advanced UI": [
          "Intro",
          "Scroll Views",
          "Scroll View Delegates",
          "Table Views",
          "Table Views Methods",
          "Table Views Custom Cell",
          "Break",
          "Reusable UIViews",
          "Collection Views",
          "Deleting Cells in Collection Views",
          "Alert Dialogues",
          "End of Section"
        ],
        "To-do App": [
          "Intro",
          "Exploring the App",
          "New App and the UI",
          "Item Class",
          "App Data",
          "Table View Items",
          "Adding Items Statically",
          "Table Header View",
          "Text Field Delegate Method",
          "Select an Item",
          "Break",
          "Deleting an Item",
          "No Duplicates",
          "Refactoring the Code",
          "Sections in Table View",
          "Animating the Transfer",
          "Updating the Code for the Sections",
          "End of Section"
        ],
        "Touches, Graphics, and Animation": [
          "Intro",
          "Touches Began and Ended",
          "Touches Moved",
          "Gestures",
          "Gestures in Code",
          "Transformations",
          "Gestures and Transform",
          "Break",
          "Animation Blocks",
          "View Effects",
          "IBDesignable",
          "View Transitions",
          "End of Section"
        ],
        "Memory Game": [
          "Intro",
          "Explore the Final App",
          "New App and Interface",
          "Outlets and Functions",
          "Tile Class",
          "Making the Tiles",
          "Collection View",
          "Grid Layout",
          "Selecting a Tile",
          "Three States of a Tile",
          "Basic Game Logic",
          "Comparing Two Tiles",
          "Break",
          "Timer",
          "Resetting the Game",
          "Winning the Game",
          "Animating the Tiles",
          "Game Mode",
          "End of Section"
        ],
        "Maps and Location": [
          "Intro",
          "Maps",
          "Annotations",
          "Custom Annotations",
          "Annotations Interaction",
          "Break",
          "User Location",
          "Location on the Map",
          "Reverse Geocoding",
          "End of Section"
        ]
      },
      "requirements": [
        "MUST have access to a Mac Computer",
        "Basic Understanding of using computers"
      ],
      "description": "Welcome to this complete iPhone App Development course. In over six months, this course has been designed in a way that would be the only course you need to take to become an iPhone/iPad (iOS) developer. We brought the best learning approaches for iOS development from many years of practice in app development and teaching iOS app development. This course begins with the most fundamental matters, introduces you to the iOS platform and the Swift programming language, and then gradually begins to deals with more advanced topics such as cloud servers, concurrency, device hardware, networking, or debugging.\nAll of this content has been divided into 18 separate sections. Each section covers one vital area in its entirety and prepares you to tackle various kinds of challenges in app development. Here is the list of the 18 sections in a short summary:\niOS Basics\nSwift Basics\nIntermediate UI\nLogin UI (Sample App UI Design Practice)\nAdvanced Swift\nAdvanced UI\nTo-do App (Developing a List Taking App from Group Up)\nTouches, Graphics, and Animation\nMemory Game\nMaps and Location\nTesting and Debugging\nMedia and Device\nConcurrency\nPersistent Data\nTo-do List Persistent (Adding Data Persistency to our To-do App)\nNetworking and Web\nFirebase\nShared To-Do List (Porting our App to the Firebase Cloud)\nThe combination of all these sections will give you a complete and thorough understanding of iPhone application development. So, with a lot of work and a lot of exciting time ahead of us, let's now get started.",
      "target_audience": [
        "Beginner App Developers",
        "Entrepreneurs who Want to Make their own Apps",
        "Intermediate iPhone Developers"
      ]
    },
    {
      "title": "Build the original Instagram with React Native & Firebase",
      "url": "https://www.udemy.com/course/build-instagram-react-native/",
      "bio": "React Native User Authorisation & Database with Firebase",
      "objectives": [
        "Make an app ready to be published onto app stores",
        "Understand how you use Firebase with React Native",
        "Upload photos in React Native to Firebase Storage",
        "Build apps that require user authorisation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Register & Setup": [
          "Register for Firebase and setup project",
          "Create React Native app on the command line"
        ],
        "Connect Firebase To App & Login Code Examples": [
          "Connect Firebase project to React Native app",
          "Intro to Firebase Authentication",
          "Using email and password to register user",
          "Check if user is logged in & how to log user out.",
          "Using Facebook login (Including Facebook app setup)",
          "Using email and password login with TextInput"
        ],
        "Firebase Database": [
          "Intro to Firebase Database",
          "How to set, update and delete data in Firebase",
          "Fetching and retrieving data from the Firebase database",
          "How to use Firebase security rules",
          "Structuring your Firebase database"
        ],
        "Firebase Storage": [
          "Intro to Firebase storage",
          "Quick overview of Firebase storage security rules"
        ],
        "Start Building The Photo Feed App": [
          "Setup and create app from the command line",
          "Adding base components to each screen",
          "Starting to setup the feed screen",
          "Adding a FlatList to the feed screen",
          "Adding some styling to the FlatList",
          "Create Firebase project and connect to our app",
          "Structure database for project",
          "Begin to make calls to the database to fetch information",
          "Update our FlatList to user data from our database"
        ],
        "Add Security & Authentication to Photo Feed App": [
          "Adding security rules part one",
          "Adding security rules part two",
          "Check if user is logged into the app"
        ],
        "Begin to create Photo Feed app UI": [
          "Make sure user is logged in whilst creating profile interface",
          "Building out the profile screen UI",
          "Creating our profile modal screen & adding back button",
          "Adjust comments screen & add button to open comment screen",
          "Building Upload screen - Part One",
          "Building Upload Screen - Part Two",
          "Upload function changes",
          "Building Upload Screen - Part Three"
        ],
        "Continue to create Photo Feed App": [
          "Add caption input area to upload screen",
          "Adjust upload photo function to get uploaded image url.",
          "Create function to process photo and add to feed",
          "Update FlatList to display uploaded photos",
          "Create component to show list of photos across different screens"
        ],
        "Adding a comments section to each photo": [
          "Building comments screen part one",
          "Fetch comments from Firebase",
          "Add post comment form to the screen",
          "Create function to post comments to the database"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript"
      ],
      "description": "In this course you we cover all the steps from creating an app in the command line all the way through to build an app very similar to the original Instagram.\nWe will start by quickly looking at how to use Firebase User Authorisation. Using email and password or Facebook login.\nFrom here we will then cover the Firebase realtime database and look at how to set, update and delete data.\nNext we look at fetching data from the database and look into the Firebase security rules and how to structure your firebase database, before we look into firebase storage.\nNow it is time to start building a real app with these techniques. We will build an app based on the idea of the original Instagram, the next sections of the course will cover each step to create this app.\nAt Rusty Courses we regularly  update our courses with new & updated content to keep things fresh.\nEnroll now and get started on your journey to build mobile app for both Android and iOS today!",
      "target_audience": [
        "Anyone interested in learning how to create apps for iOS and Android",
        "Beginner React Native developers looking to add user login to apps",
        "Beginner React Native developers who need to use the Firebase database"
      ]
    },
    {
      "title": "Android Development with Kotlin",
      "url": "https://www.udemy.com/course/android-development-with-kotlin/",
      "bio": "Android Application Performance Optimization",
      "objectives": [
        "Students learn essential Kotlin concepts for Android development, covering variables, data types, and control flow.",
        "Mastery of OOP principles, including class creation, inheritance, and interfaces, empowers students to build scalable and organized Android apps.",
        "Hands-on experience in Android Studio guides students in creating visually appealing user interfaces with elements like TextViews, EditText, and Buttons.",
        "Skills in SQLite databases enable effective data management—CRUD operations—for Android app development.",
        "Students gain expertise in networking, mastering HTTP requests, JSON handling, and API integration, culminating in practical application for seamless data inter"
      ],
      "course_content": {
        "Introduction": [
          "How's the Course Structured",
          "Where should you start"
        ],
        "Installation & Setup": [
          "Installation & Setup"
        ],
        "Kotlin Basics": [
          "Kotlin Basics"
        ],
        "Conditional Statements and Loops": [
          "Conditional Statements _ Loops (Part-1)",
          "Conditional Statements _ Loops Continued (Part-2)",
          "Random Number Generator App ~ Application",
          "Quiz Time",
          "Quiz Solution"
        ],
        "Object-Oriented Programming in Kotlin": [
          "Introduction to OOP",
          "Examples (Part-1)",
          "Examples (Part-2)",
          "OOP Task",
          "OOP Task Solution"
        ],
        "Arrays and File Handling": [
          "Arrays _ File Handling",
          "Arrays _ File Handling (Part-2)",
          "App Solution"
        ],
        "Android Studio Basics": [
          "Android Studio Basics",
          "Whats my name ~ Application"
        ],
        "User Interface Design": [
          "Android Toast Messages",
          "How much you weigh on Different Planets ~ Application",
          "Images and changing Background color",
          "Layouts - Linear Layout style"
        ],
        "Activity and Fragment Lifecycle": [
          "Lifecycles _ Views",
          "To Do App-Listview ~ Application",
          "Animals Bio App (Part-1) ~ Application",
          "Animals Bio App (Part-2) ~ Application",
          "Animals Bio App (Part-3) ~ Application"
        ],
        "Data Persistence in Android": [
          "Introduction to Data Persistence in Android",
          "Chores App (Splash Activity)",
          "Layout Design",
          "Data & Model",
          "Adapter & Activity",
          "Activity Final"
        ]
      },
      "requirements": [
        "A fundamental understanding of programming concepts is recommended. Familiarity with variables, control flow, and basic algorithms will facilitate a smoother learning experience.",
        "Students should have access to a computer with sufficient resources to run Android Studio and IntelliJ IDEA. The course covers installations for Windows, MAC, and Linux Ubuntu.",
        "A stable internet connection is necessary for downloading software updates, accessing online resources, and integrating external libraries during the course.",
        "Android development requires dedication. Students are encouraged to stay motivated, commit time to practice, and engage actively in the course materials and projects.",
        "Prior to the course, participants should install IntelliJ IDEA and Android Studio as outlined in the curriculum. Basic proficiency in navigating these development environments is beneficial.",
        "While not mandatory, familiarity with Java can be advantageous as Kotlin is interoperable with Java, and understanding Java concepts can enhance comprehension."
      ],
      "description": "Unlock the full potential of Android app development with our immersive course, 'Android Development with Kotlin.' Tailored for both beginners and intermediate developers, this Course is a comprehensive exploration of the Kotlin programming language within the dynamic landscape of Android development.\nDive into the foundations of Kotlin, mastering variables, control flow, and functions. Navigate Android Studio with ease, building a strong understanding of UI design principles, layouts, and themes. Delve into advanced topics such as object-oriented programming, database handling, networking, and API integration.\n\nCourse Structure\n\n\nInstallation and Setup\nInstall IntelliJ IDEA - Windows PC\nInstall Android Studio - Windows PC\nInstall IntelliJ IDEA - MAC\nInstall Android IntelliJ - Linux Ubuntu\nInstalling Android Studio - Linux Ubuntu\nHow to Import Kotlin Code/Resources into IntelliJ\nKotlin Source Code - GitHub\nIntelliJ Updates\nUpdate to Kotlin 1.2\n\n\nKotlin Basics\nKotlin - How to Make Comments in Your Code\nKotlin Variable type Int\nKotlin - Variable type - Double\nKotlin Variable type Boolean\nKotlin - Variable type - Float\nKotlin Char Variable Types\nKotlin - Difference between Var and Val Keywords\nKotlin - How to Read Input with readLine Method - App - Store Conversation\nKotlin - Subtraction\nKotlin - Multiplying Numbers\nKotlin - Division\nKotlin - Remainder\nIncrementing and Decrementing\nHow to Convert Between Data Types\n\n\n\n\nConditional Statements and Loops\nConditional operators (<,>, ==, !=, <=, >=)\nIf-else Statements and Conditional operators\nLogical Operators (AND, OR, NOT)\nWhen Expression\nFor Loop\nWhile Loop\nDo while Loop\nApp - How Many Siblings?\nFunctions With Parameters\nFunctions Return Types\nFunctions - No return Type, No parameters\nVariable Scope\n\n\nObject-Oriented Programming in Kotlin\nIntroduction to Object-Oriented Programming - OOP - What's a Class?\nLet's Create our First Class\nSetters and Getters\nInheritance - Introduction\nInheritance\nOverloading Constructors\nControlling Access to fields (Instance Variables - Properties)\nKotlin - Class Extension\nNested Classes\nInner Classes\nOverloading Operators + Challenge\nInterface Classes\nAbstract Classes\nGeneric Classes\nEnums in Kotlin\n\n\nArrays and File Handling\nWhat's an Array - Creating Arrays in Kotlin\nCreate Arrays and Iterate Through\nArrays - Part 2\nArray Lists\nHashmaps\nMapOf, Arrayof, MutableList\nWriting to Files (Text Files)\nWriting to File with User Input and Appending Characters\nReading from Text Files\nApp - Writing a Reader-Write App\n\n\n\n\nAndroid Studio Basics\nInstalling the Android Studio and Setup Kotlin and Run First App\nAndroid Studio Quick Tour\nAndroid Studio Tour - File Structure, Manifest, Strings\nApp - What's My Name\nTextViews, EditText, and Buttons - Enter Name and Show name\nEnter Name and Show - Final\nString.xml, Manifest and Android Studio File\n\n\nUser Interface Design\nAndroid Toast and Context Class\nApp - How Much Do You Weigh on Different Planets?\nAdding Images to Our Apps - Why we Use Kotlin Extensions Plugin, ImageViews, ImageFilter\nAdding Images to Our Apps - App - App - Random Background Colors\nLayouts - LinearLayout\nStyles and Themes in Android\n\n\nActivity and Fragment Lifecycle\nContext in Android and Toast Class\nWhat's an Activity?\nActivity lifecycle\nNavigating from One Activity to Another\nPassing Data between Activities\nPassing data back to the first Activity\nApp - Animals Bio\nIntroduction to Listviews - Demo\nHow do Listviews Work? - Adapters and Listviews\nRecyclerView and it’s working\nAdding Event Listeners to Each Row\n\n\n\n\nData Persistence in Android\nIntroduction to Databases in Android - Kotlin - SQLite\nApp - Chores - Demo\nApp - Chores - User Interface\nApp - Chores - Database handler Class\nApp - Chores - Add and Retrieve a Chore\nApp - Chores - Finalize CRUD Functions\nApp - Chores - Saving User Input to Database\nApp - Chores - Custom Listrow - User Interface\nApp - Chores - Recycler Adapter\nApp - Chores - Showing Chores on Recycler Adapter\nApp - Chores - Adding Toolbar Add Button\nApp - Chores - Create Custom Popup\nApp - Chores - Saving Chore From Popup\nApp - Chores - Deleting Chore\nApp - Chores - Final Touches\n\n\nNetworking and API Integration\nIntroduction to HTTP Request and JSON and Networking in Android\nWhat's an Android Library?\nVolley String Request\nVolley JSON ArrayRequest\nVolley JSON ObjectRequest\nApp - Recipe Finder - Demo\nApp - Recipe Finder - User Interface\nApp - Recipe Finder - RecyclerAdapter\nApp - Recipe Finder - Parsing Recipes\nApp - Recipe Finder - Show Recipes on RecyclerView\n\n\nFirebase Integration\nFirebase - Introduction to Cloud-Based Services - Setup\nFirebase - Read Values from the Firebase Database\nFirebase - Save Objects and Use Push\nFirebase - Login User With Email and Password\nFirebase - Create Account\nWhatsApp Clone Chat App - Demo\nWhatsApp Clone Chat App - Setup UI\nWhatsApp Clone Chat App - Login\nWhatsApp Clone Chat App - Create Account UI\nWhatsApp Clone Chat App - Login Users Code\nWhatsApp Clone Chat App - Check User - Login\nWhatsApp Clone Chat App - TabLayout ViewPager\nWhatsApp Clone Chat App - Settings Screen Setup\nWhatsApp Clone Chat App - Settings Activity\nWhatsApp Clone Chat App - Status Activity\nWhatsApp Clone Chat App - Settings Get Image\nWhatsApp Clone Chat App - Save Images to Firebase\nWhatsApp Clone Chat App - Showing all Users\nWhatsApp Clone Chat App - Chat Activity\nWhatsApp Clone Chat App - Setup Chat Activity\nWhatsApp Clone Chat App - Sending and Showing Chats\nWhatsApp Clone Chat App - Final Product\n\n\nCreating Apps\nDeveloper Portfolio App - Demo\nTheme and Colors - Branding\nUser Interface Setup\nUI and TabLayout\nFinalizing User Interface and Creating Fragments\nSetup PagerAdapter Class\nWiring it all Up\nFinal Touches and Product\nApp Demo\nIntro to Motivational App\nUser Interface Setup\nVolley Library Setup and App Controller\nFetching Data from the Remote API\nSetup Data Classes\nSetup Fragments and Viewpager Class\nFix Previous Error!\nFinal Product - Motivational App\n\n\nAdvanced Topics\nIntroduction to Drawing on Screen\nDrawing Circles\nDrawing Images - Bitmaps\nCustom TextViews\nIntro to Breathe App\nUser Interface Setup\nSetup Animation Library\nSetup Shared Preferences - Saving data on Device\nFinalizing the App\nFinal Product - Breathe App\n\n\n\n\n\n\nWith hands-on projects and real-world applications, this course goes beyond the basics, ensuring a deep understanding of Android development principles. Learn to create seamless user interfaces, implement efficient data persistence with SQLite, and integrate external APIs for dynamic app functionalities.\n\nJoin us on this comprehensive journey to becoming a proficient Android developer.",
      "target_audience": [
        "Beginner Programmers: This course is designed for individuals with little to no programming experience who aspire to enter the world of Android app development. The curriculum starts with foundational Kotlin programming concepts, making it accessible for beginners.",
        "Aspiring Android Developers: It caters to individuals with a keen interest in Android app development using Kotlin. The comprehensive content covers everything from basic programming to advanced topics, providing a holistic learning experience.",
        "Students and Enthusiasts: Whether enrolled in a formal educational program or learning independently, students and tech enthusiasts looking to specialize in Android development will find this course beneficial.",
        "Programmers Transitioning to Kotlin: For those already familiar with programming in other languages, especially Java, this course serves as a practical transition to Kotlin, the modern language of choice for Android development.",
        "Professionals Seeking Skill Enhancement: Professionals in related fields who wish to enhance their skill set by acquiring Android development skills will find the course valuable, providing practical knowledge applicable in the industry.",
        "Anyone Interested in App Development: Individuals with a general interest in mobile app development, specifically for the Android platform, will gain valuable insights and hands-on experience to kickstart their app development journey."
      ]
    },
    {
      "title": "Flutter BLoC - From Zero to Hero Complete Course",
      "url": "https://www.udemy.com/course/bloc-from-zero-to-hero/",
      "bio": "Understand, Learn & Practice the most robust Flutter state management - BLoC Library",
      "objectives": [
        "BLoC Core Concepts - cubits, blocs, events, methods",
        "Flutter BLoC Concepts - BlocProvider, BlocBuilder, BlocListener",
        "BLoC Architecture - Presentation, Business Logic & Data Layers",
        "BLoC Testing - Learn how to test your cubits & blocs",
        "BLoC Access - Learn how to access cubits/blocs globally & locally",
        "Bloc-to-bloc communication - Learn how two or more blocs/cubits can interact between each other",
        "BuildContext In-Depth - Complete Tutorial on Flutter BuildContexts",
        "Possible errors, problems and how to fix them",
        "Storing app data to local storage by using Hydrated_Bloc Package",
        "Debugging blocs/cubits"
      ],
      "course_content": {
        "Why BLoC as a state management?": [
          "Why BLoC?"
        ],
        "BLoC Core Concepts": [
          "BLoC Core Concepts - cubits, blocs, events, methods, streams"
        ],
        "Flutter BLoC Concepts": [
          "Flutter BLoC Concepts"
        ],
        "BLoC Architecture": [
          "BLoC Architecture"
        ],
        "BLoC Testing": [
          "BLoC Testing"
        ],
        "BLoC Access & Navigation (Local, Route & Global Access)": [
          "BLoC Access & Navigation (Local, Route & Global Access)"
        ],
        "Bloc-to-bloc Communication": [
          "Bloc-to-bloc Communication"
        ],
        "Build Context In-Depth (Flutter & BLoC)": [
          "Build Context In-Depth"
        ],
        "BLoC 6.1.0 Update": [
          "BLoC 6.1.0"
        ],
        "Comparing 2 Objects in Dart, Equatable Package, State not updating issue": [
          "State not updating issue and how to fix it"
        ]
      },
      "requirements": [
        "Small understanding on how Flutter works"
      ],
      "description": "Hello, everyone!\nBy following this BLoC - From Zero to Hero course, you will successfully learn the BLoC State Management solution, so if you have doubts in understanding or practicing all of its concepts, I really recommend checking it out right here!\nBefore you check it out though, I would like to tell you that this series is designed with both the theoretical and most importantly, practical (coding) parts of every discussed topic. All of the project files can be found on my github page.\nAlso, the series was carefully monitored by the amazing creator of bloc_library, Felix Angelov.\nOn the other hand, without without the slightest restraint I feel like my series is the best bloc_library playlist on the entire internet.\nDon't take my word for it, try it by yourself!\nA briefing of everything that's been covered in this playlist, so you know what to expect:\nWhy BLoC? In this video I explained why I chose bloc_library for both the state management solution and the architectural structure of my apps\nBLoC Core Concepts - In this tutorial I got really in-depth in explaining streams, and the concepts of blocs & cubits.\nFlutter BLoc Concepts - Here, I discussed each and every single one of bloc_library's concept like BlocProvider, BlocBuilder, BlocListener and many many more. These concepts are obviously explained and tested in every tutorial, since they are the base of bloc_library.\nBLoC Architecture - In this tutorial I made a short introduction on what I believe it's the best architecture to follow in order to structure and scale your code over time! This video has no code inside my github page, since I'm planning on using it extensively on my follow-up tutorial series on building real world apps!\nBLoC Testing - Testing is one of the most important pillars of programming, oftenly omitted by developers. In this video I'll explain what are the basics of testing a bloc-built small application.\nBLoC Access & Navigation - In this tutorial I got really in-depth on what are the routing options on which you can successfully provide a cubit/bloc to the widget tree.\nBloc-to-bloc Communication - Here I wanted all my viewers to understand how important it is to know how to make 2 blocs/cubit communicate one with another.\nBuildContext In-Depth - This tutorial is not really related to the bloc_library, but since build contexts are used everywhere inside a flutter app, I realised that most of people didn't understand how they really work. This video is also useful as it spreads out the knowledge gained from tutorial number 3 and 6.\nBloc 6.1.0 - During my tutorial series, a new version of bloc_library got released, containing some important changes like context.watch, context.read and context.select. All of these are covered in this video, as always, with intuitive examples.\nBloc State not Updating - In this video, I explained why most of the new developers encounter this popular issue of a state of a bloc/cubit not updating.\nMaintaining State with Hydrated_Bloc - In this tutorial I got really in-depth about how you can store the state of multiple blocs/cubits on the app's internal storage on your device. This is a key concept in developing a successful Flutter app, having bloc_library as the state management feature.\nDebugging Blocs/Cubits, Naming Conventions and other tips and tricks is the last video of this series, covering other important topics found inside the flutter_bloc library.\nThank you and hopefully you are as excited as I am!\nWCKD",
      "target_audience": [
        "Flutter Beginner curious on what is the most robust state-management solution",
        "Flutter Developer who wants to learn about BLoC State Management really in-depth",
        "Flutter Developer who wants to refresh their knowledge with BLoC"
      ]
    },
    {
      "title": "Integrate Payment In Xamarin Forms",
      "url": "https://www.udemy.com/course/integrate-payment-in-xamarin-forms/",
      "bio": "Learn How to Integrate the Payment Gateway In Xamarin Forms",
      "objectives": [
        "At the end of this you'll be able to integrate the Payment Gateway in any kinda xamarin forms application.",
        "Understand the Payment Gateway and it's working",
        "How to chose Payment Gateway for your business and mobile apps",
        "Which Payment Gateway Is Best",
        "Setup the Payment gateway Account",
        "Integrate SDK's of Payment Gateway In Xamarin Forms",
        "Utilize Payment Gateway in Xamarin Forms",
        "Get the Payment On the Merchant Account",
        "Sand Box Vs Live Payment",
        "Advantages of Payment Gateway"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Payment Gateway": [
          "What is Payment Gateway",
          "Which Gateway is Best"
        ],
        "Set Up Payment Gateway In Xamarin Forms": [
          "Create A New Project",
          "Setup account for Payment Gateway",
          "Configure Libraries and SDK’s inside the Xamarin Forms App"
        ],
        "Implement Gateway In Xamarin Forms": [
          "Utilize payment Gateway in Xamarin Forms",
          "Get Secrets for the Payment Gateway"
        ],
        "Deployment On A Device": [
          "Test payment Gateway on Device",
          "Test Payment Gateway with Multiple Cards"
        ],
        "Real Time Implementation": [
          "Real Time Implementation of payment gateway in Mobile Apps"
        ],
        "Advantages of Payment Gateways": [
          "Advantages of Payment Gateways",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "The student's must have a laptop / PC and familiar with the Xamarin Forms or Mobile Apps."
      ],
      "description": "The main focus of this course is only on the Xamarin Forms. So if you're a good C# programmer or if you have a basic knowledge of XAML and you want to integrate the payment gateway in any kind of Xamarin Forms application then this is the right course for you.\nIn this course you will learn how to Integrate the Payment Gateway in Xamarin Forms application . You will learn how to set up the merchant as well as payment gateway account. You'll also learn how to integrate the SDK's of Payment Gateway inside the Xamarin Forms . You can get all SDK's free of cost and utilize inside your Xamarin Forms application. Also one interesting thing is that you can't get any Payment Gateway Course inside the Xamarin Forms on the internet because this is the first course on Payment gateway inside the Xamarin Forms.\nBuild a strong foundation in Payment Gateway Inside Xamarin Forms with this tutorial .\nWhat is Payment Gateway\nHow Payment Gateway Works\nWhich Gateway is Best\nSetup Merchant Account for Payment Gateway\nConfigure Libraries and SDK’s inside the Xamarin Forms App\nUtilize payment Gateway in Xamarin Forms\nGet Secrets and Token for the Payment Gateway\nTest payment Gateway on Device\nTest Payment Gateway with Multiple Credit and Debit cards\nReal Time Implementation of payment gateway in Mobile Apps\nSand box vs Live Payment\nAdvantages of Payment Gateways\nA valuable Skill at Your Fingertips  Learning the Xamarin Forms Payment Integration put a powerful and attractive business functionality in your mobile apps. Xamarin is open source, easy to learn,  has excellent Microsoft and Xamarin support, and is the best  Cross Platform Tool for Desktop and Mobile Applications.\nJobs in Mobile development are plentiful, and being able to learn the real time application with a professional look and integration with Payment Gateway will give you a strong background to more easily pick up other challenging apps etc.\nContent and Overview  Suitable for C# programmers, Xamarin  Developers , XAML Developers and software engineers. Through this course , you’ll learn how to integrate the Payment gateway and establish a strong understanding of the concept behind Xamarin Forms and Payment Gateway.\nYou 'll also understand how to Set up the merchant account and configure SDK's inside your application..\nWhat am I going to get from this course?\nLearn Xamarin Forms from a Microsoft (MVP), Xamarin MVP from your own desk.\nIntegrate Payment Gateway in Xamarin Forms Application with me.\nSuitable for beginner , intermediate and expert programmers, xamarin developers, C# developers and ideal for users who learn faster when shown.\nVisual training method,with Hands on Lab Practice and coding .\nBreaks even the most complex scenarios down into simplistic steps.\nI'll provide you the simplest and easy way to reduce your expenses in the development of mobile applications.\nAlso you'll be able to access all kinda SDK's free of Cost.",
      "target_audience": [
        "Everyone who has some basic knowledge of XAML and c# and willing to start career in Xamarin Forms and want to Integrate the Payment Gateway in Xamarin Forms Applications."
      ]
    },
    {
      "title": "MVI architecture for Android with XML layouts",
      "url": "https://www.udemy.com/course/androidmvi-xml/",
      "bio": "Learn MVI - Model View Intent - Architecture with XML layouts. We use MVVM, Coroutines, Retrofit, Glide and Kotlin",
      "objectives": [
        "Android Architectures",
        "MVI Architecture",
        "MVVM Architecture",
        "Android development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Android Architectures",
          "Why MVI",
          "MVI Architecture"
        ],
        "MVI": [
          "Project introduction",
          "Dependencies",
          "Create project and add dependencies",
          "Setup Retrofit",
          "Intent and State",
          "ViewModel",
          "Layouts",
          "RecyclerView Adapter",
          "Putting it all together",
          "Running the app"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Android development knowledge"
      ],
      "description": "In this course we discuss the MVI - Model View Intent - architecture for Android development.\nThe MVI Architecture is the newest iteration in the MVX types or architectures for Android, and brings with it a few different benefits. Most importantly, user interaction traceability, system state predictability and ultimately, improved scalability and testability.\nAs an Android developer, it's important to stay up to date with the latest developments.\nThis architecture has distinct advantages and disadvantages that are important to know when deciding whether to implement it in your application. In addition, it’s important to be able to discuss it in an Android interview, where you might be judged on whether or you have heard of it.\nIn this course, we will go through a theoretical description of Android architectures in general, such as MVC - Model View Controller, MVP - Model View Presenter and MVVM - Model View ViewModel. Finally we will see what the new MVI Architecture brings to the table.\nWe will also implement the knowledge we learned in a practical application. We will build an app that retrieves a list of animals from a backend api, and displays it in a list in the application. The application will showcase how to use the MVI architecture in a simple case, so that it’s easier to understand.\nThis is also an excellent project course for someone who wants to sharpen their Android development skills.\nSo sign up today and let's learn about the MVI architecture as it applies to Android development.",
      "target_audience": [
        "Beginner Android developers",
        "Advanced Android developers"
      ]
    },
    {
      "title": "Realtime apps with Swift & Firebase acquire impressive skill",
      "url": "https://www.udemy.com/course/firebase/",
      "bio": "Build a chat app that works in real time using Firebase and Swift, be the best developer impress your boss and friends",
      "objectives": [
        "Explore the Firebase administrative dashboard and dive into the development of a real-time link sharing app",
        "Develop iOS apps with realtime data transfer",
        "Add user accounts to your Firebase app and grant access to them with ease",
        "Grasp the different ways to structure your Firebase data to be scalable and performant"
      ],
      "course_content": {},
      "requirements": [
        "A Mac running Yosemite or latest version of Mac Os",
        "Xcode 6 or latest",
        "Basic knowledge of iOS"
      ],
      "description": "*** The next bonus section... is up to you!!! Enrol now and help us decide ***\n*** added BONUS section selected by the students \"Security & Rules on Firebase\" ****\n*** added BONUS section \"Displaying online and offline users with different Avatars\" ****\n*** added BONUS section \"How to add and use JSQMessageVIewController pod, make your app look like the iMessage iPhone app\" ****\n\n\nWhy do our courses have fewer students than most courses on Udemy - because we do NOT try to mislead our new students.\n100% real and paid students - We do not believe in the practice used by many instructor on Udemy that offer their courses on blackheads sites to inflate their numbers, our students are real, they participate on the course, help each other other .\n100% real reviews - We have never bought any review from other sites like fiverr or similar, which is another very common technique among instructors on Udemy.\nWhat to look for when buying a course on Udemy:\nLook for the questions on the course during the free preview, the time it took for it to receive an answer, the quality of the answer, how happy the student was with the answer.\nLook for the instructor profile on LinkedIn, and other places.\nTake a tour in the course. Get to know your future instructor before making a decision. After all, it's your future on the line!\nI am sure you will make the right choice so I will see you inside!\nAs applications get more and more complex, clients demand faster interaction. They want to receive a post, a notice, an event as soon as it happens. They want to know if a friend is online or offline in a chat application as soon as the other party changes their status. They want to know these things as soon as they happen, in other words, in Real-Time.\nImplementing real time systems can be very costly, complicated, and time consuming. This is where Firebase comes into play to save the day.\nFirebase starts with a FREE tier that can be used even in your commercial applications. It also comes with a very simple to use API that can be use for iOS (including Swift), Android, and JavaScript so you don't have to worry about compatibility. It also comes with a very easy to use dashboard web interface.\nYou will learn:\nproper and elegant error handling in Swift\nproper and elegant code refactoring in Swift\nproper and elegant use of enum in Swift\nproper and elegant use of inheritance in Swift\nhow to import the JSQMessageViewController and use it to send and receive messages\nhow to make or app look like just like the iMessage from iPhone, including sound\nFirebase Security and Rules\nThe qualifications I have that I believe will help me teach you?\nI have received my first certification in programming in 1987 when I was only 10 years old in an apple II\nI have been a professional developer for over 20 years\nI am an active member on StackOverflow, and I am always helping members on the site. Helping people is the passion that brought me to create this course.\nI currently rank as top 10% for Swift Help in StackOverflow\nI currently rank as top 20 % for iOS Help in StackOverflow\nI am dedicating a lot of time to this course so you can be sure you will have plenty of support in your journey.\nWhat will you get from this course?\nHow to Authenticate to Firebase using email and password\nHow to read and write data in real time to and from Firebase\nDevelop iOS apps with real time data transfer\nLearn the complex concepts of Swift necessary to build a real app\nHow to integrate Firebase in your Swift iOS App\nOver 31 lectures and 4 hours of content!\nExplore the Firebase administrative dashboard and dive into the development of a real-time link sharing app\nDevelop iOS apps with real-time data transfer\nAdd user accounts to your Firebase app and grant access to them with ease\nGrasp the different ways to structure your Firebase data to be scalable and maintain performance\nWho is the target audience?\nThis video course is for anyone with basic iOS experience who wishes to learn how to add real-time functionality to their apps with Firebase\nWhat are the requirements?\nA Mac running Yosemite or latest version of Mac Os\nXcode 6 or latest\nBasic knowledge of iOS",
      "target_audience": [
        "This video course is for anyone with basic iOS experience who wishes to learn how to add real-time functionality to their apps with Firebase"
      ]
    },
    {
      "title": "The Complete iOS Developer - Create Real Apps in Swift",
      "url": "https://www.udemy.com/course/the-complete-ios-11-developer-course/",
      "bio": "Learn iOS Coding with Swift from a pro! Includes, Starter, Bronze, Silver and Gold Editions!",
      "objectives": [
        "Develop any iOS 11 app you can think of!",
        "Build revenue generating apps and games to earn passive income!",
        "Have a wide range of apps published on the app store (source code included!)",
        "Work with Google Firebase and Web services (RESTful API calls)",
        "Free introduction to Sketch Design for app mockups"
      ],
      "course_content": {
        "Introduction to iOS 11": [
          "Introduction",
          "How to Get the Most from This Course",
          "What this Course Is and Isn't"
        ],
        "Setting Up to Code for iOS 11": [
          "Introduction to Set Up for iOS 11",
          "How to Set Up Xcode 9 - Swift 4 and the iOS 11 Simulators",
          "How to Install iOS 11 Beta on your iPhone or iPad"
        ],
        "Starter Level iOS 11 - Learn Basic Swift 4": [
          "Basic Swift 4 Introduction",
          "How to Use a Playground in Swift 4",
          "Variables in Swift 4",
          "Collections - Arrays in Swift 4",
          "Collections - Sets in Swift 4",
          "Collections - Dictionaries in Swift 4",
          "Logic in Swift 4 - If Else and Switch Case",
          "Round and Round - Loops in Swift 4",
          "Functions in Swift 4",
          "Optionals in Swift 4",
          "Classes and Objects in Swift 4",
          "Inheritance in Swift 4",
          "Summary of Basic Swift 4"
        ],
        "Starter Level iOS 11 - An Astronomical Screen Torch App!": [
          "Introduction to Your First iOS 11 App",
          "Astronomy Screen Torch - Storyboards",
          "Astronomy Screen Torch - View Controller Code",
          "Astronomy Screen Torch - Buttons and Outlets",
          "Astronomy Screen Torch - Storyboard Element Positioning",
          "Astronomy Screen Torch - Assignment",
          "Astronomy Screen Torch - Solution",
          "Summary of Your First iOS App"
        ],
        "Starter Level iOS 11 - A Snazzy Temperature Converter App": [
          "Introduction to Temperature Converter",
          "Making the Main Screen of Temperature Converter",
          "Connecting Main Screen to Code",
          "Writing the Main App Logic",
          "Temperature Converter App Homework",
          "Temperature Converter App Solution",
          "Summary of Temperature Converter App"
        ],
        "Something Fun! What's Your App Idea?": [
          "Introduction to Designing a Simple App",
          "What do People NEED or REALLY Want?",
          "Get Your Idea Down on Good Ol Fashioned Paper!"
        ],
        "Bronze Level iOS 11 - A Calculator App": [
          "Introduction to Calculator App",
          "Making the Calculator Screen - Images, Image Sets and Buttons",
          "Making the Calculator Screen - Stacks and Constraints",
          "Making the Calculator Screen - Copy Copy Copy!",
          "Connecting Graphics to Code - The Easy Way!",
          "Storing Things With Enums",
          "Writing the Main Logic of Our Calculator App",
          "Writing the Main Logic of Our Calculator App - Part 2",
          "Calculator - Homework",
          "Calculator - Solution",
          "Summary of Calculator"
        ],
        "Bronze Level iOS 11 - Tabbed Apps and Back to the Future!": [
          "Introduction to Back to the Future",
          "Tabbed Apps - Explained!",
          "Back to the Future Layout - Tab Bars and Icons!",
          "Back to the Future Layout - Storyboards",
          "Back to the Future Code - Showing the Current Date",
          "Back to the Future - Showing a Ticking Clock",
          "Starting to Time Travel - Laying out the Design",
          "Continuing Time Travel - The Code Behind it All",
          "Throwing in Some Basic Animations and Your First Experience of Async Programming",
          "Back to the Future - Homework",
          "Back to the Future - Solution",
          "Summary of Back to the Future App!"
        ],
        "Become an App Entrepreneur - Starting a Startup - Part 1": [
          "Introduction to Startups",
          "How to Start a Startup",
          "Team and Execution",
          "Before the Startup",
          "Building Your Product - Talking to Users",
          "Summary of Startup Lectures"
        ],
        "Silver Level iOS 11 - Scrolling Lists and Greek Gods App!": [
          "Greek Gods - Introduction",
          "What is a Scrolling List? Explained with Lego!",
          "Creating Greek Gods - Storyboards and Table Views",
          "Greek Gods - Reuse Identifiers, Highlighting Cell Sections and Data",
          "Table View and View Controller Navigation",
          "Passing Data Between Table Views and View Controllers",
          "Creating the God Detail Screen - Image Views",
          "Greek Gods - Homework and Solution in One!",
          "Greek Gods - Summary and Source Code"
        ]
      },
      "requirements": [
        "You will need a Mac running the latest macOS to create iOS apps"
      ],
      "description": "The Complete iOS Developer has just one goal - to turn you into the best developer, freelancer and entrepreneur that you can possibly be! This course will show you how to code properly whilst developing your own app ideas and turning those into monetisable products. You will also learn what it takes to create an app startup from industry veterans. On completion of this course you will be a well rounded iOS developer with limitless options in an increasing technology dependent world.\n-------- STARTER, BRONZE, SILVER AND GOLD EDITIONS INCLUDED IN THIS COURSE!-------\nA quick preview of everything you'll get:\nUnderstand the app creation process, from graphic design to coding\nGet a project based approach to make sure you never get bored!\nCalculator apps to understand basic code\nConverter apps to get a bit more complex\nMaking GPS map apps to understand location\nMaking ticking clock apps to understand timers\nTranscription apps via Siri services\nRESTful API and JSON apps (web services and data retrieval)\nFirebase apps (Google cloud database)\nWhatsApp clones with realtime data delivery\nFancy animations to WOW users\nCreating compelling apps\nHow to start your own startup from idea. From financing to selling.\nAnd tonnes more!\nRealistic options for you to pursue following this course\nSix figure salaried developer\nFreelancer earning between $60 - $120 per hour\nSuccessful startup founder with unlimited earning potential\nOther students on this course have been sending me wonderful messages about how it helped them:\n\" Hi Grant, I managed to land the fabled 6 figure developer job yesterday thanks to your course. In the interview they asked me complicated questions and luckily you'd explained the majority of those during the course. Thanks so much! \"\nWhy you should learn from me\nI started out life as a dance instructor knowing nothing about programming! Looking back on the dozens of app projects I've worked on, it's hard for even me to believe I could make it this far with Fortune 500 companies paying me as a consultant!\n\nThe fact that I didn't start out as a programmer means that I actually remember what it's like to be a beginner. I remember teachers throwing useless jargon at me and you know what? It sucked! That's why I try my utmost to explain everything int his course in plain English. I want to make the learning experience easy for you!\nThe final reason why you should take this course\nIn Silicon valley, venture capitalists talk about return on investment a lot. A good return, averaged over all their assets, is something like 10%. Imagine if you could have a return over 1,000% percent?\nWell that's what you get when you invest the price of a few coffees in this course. Your knowledge will be immeasurably increased and you'll have the keys to a new career as a valued iOS 11 app developer or maybe even the owner of a successful startup!\n\n\nYou are your biggest asset. Invest in yourself and take this course today!",
      "target_audience": [
        "Beginners to programming in general or iOS programming should take this course",
        "Suitable for anyone wanting to become a professional programmer",
        "Suitable for hobby programmers"
      ]
    },
    {
      "title": "Beginners guide to Android App Development (Step by Step)",
      "url": "https://www.udemy.com/course/a-beginners-guide-to-android-app-development/",
      "bio": "Learn the Basics of Developing an Android App and Build your very own Bluetooth Chat Application from Scratch.",
      "objectives": [
        "Android installation and setup for Android development",
        "Concept of Layout and Views in Android development",
        "Different ways to store your data on an Android device",
        "Lists and Fragments in Android development",
        "Trigger an Android notification",
        "Build from scratch your very own Bluetooth Chat App to send and receive messages for Android"
      ],
      "course_content": {},
      "requirements": [
        "Good understanding of Java (particularly OOPs and Threads)"
      ],
      "description": "Welcome to our course \"A beginners guide to Android App Development (step by step)\".\nA Beginner's Guide to Android App Development\nLooking to launch your own app on Google Play Store but don't know where to begin?\nThen here's your chance to learn the basics and build your skills in Android development. Before you read further, it is an essential prerequisite for a student to have a good understanding of Java (OOPs and Threads, in particular)\nThe Android development course is a collection of Android Application Development tutorial videos. You will first get started with the software installation, cover basics like Layouts and Views, and gradually move on to more advanced topics. And then finally, you get to build your very own Bluetooth Chat Application right from scratch.\nTake your first step and we will guide you into this amazing, ever-evolving world of Android.\nMore lectures will be uploaded soon.\n\nAnd\n\nAndroid development - Career\nYou can make a very competitive income, and build a very satisfying career as an Android developer. Android is still the most used mobile operating system in the world, and the demand for skilled Android developers remains very high.\nIt is worth learning Android development in 2020?\nBy learning Android development, you open yourself up to many career opportunities such as freelancing, becoming an indie developer, or working for high profile companies like Google, Amazon, and Facebook. The demand for native Android developers is still very high, and learning Android development has never been easier thanks to increases in online learning materials.\n\nWho's teaching you in this course?\nI am a Computer Science graduate highly rated instructor with a rating of 4.3 and more than 200k students on Udemy, I have been part of the corporate circle since my college days. In my early days, I was part of a startup team delivering production grid android apps. Currently, I am a lead developer at EdYoda. I’m responsible for the entire front-end development & integration with the back-end. React, Python, Django is my areas of expertise. I have been delivering corporate training for Android, React, Javascript, Python & Django. I have an eye for detail & that makes me suited for delivering a finished product. I’m a fitness freak & working out is the favorite thing to do in my spare time.\n\nI want everyone to enjoy the learning process and I have shared my knowledge that will be helpful for Android developers.\n\nEnroll now!! see you in class.\n\n\nHappy learning!\nTeam Edyoda",
      "target_audience": [
        "Beginners who are new to Mobile Development",
        "Freshers who want to learn Android Development"
      ]
    },
    {
      "title": "Android Material Design",
      "url": "https://www.udemy.com/course/android-material-design/",
      "bio": "Introduction, Implementation and Mastering. All in one!",
      "objectives": [
        "Implementing Material Design Feature at the end of this course will be a piece of cake for students",
        "The concept of this awesome feature provided for Android App Development will be crystal clear."
      ],
      "course_content": {
        "Android Material Design Colors and Themes": [
          "Introduction",
          "Diving into Material Design Themes and Colors",
          "Material Design Themes and Compatibility with Pre-Lollipop Devices",
          "Set up XML Compatiblity for all android devices",
          "Maintaining Compatibility by JAVA codes for Android Application",
          "Color Palette Description for Android Material Design",
          "Android Material Design Color Standards by Google for Android App Development",
          "Choosing from Color Palette for our Android Application",
          "Colors and Themes Quiz"
        ],
        "Material Design Toolbar": [
          "Getting started with Material Design Toolbar",
          "Toolbar as Standalone Toolbar",
          "Setting compatibility for Standalone Toolbar for all Andro",
          "Material Design Toolbar: Pop-up Menu and Menu Icons",
          "Customizing Android Material Design Toolbar",
          "Using Android Material Design Toolbar as Action Bar",
          "Using Contextual Menu in Android Material Design Toolbar : Part1",
          "Using Contextual Menu in Android Material Design Toolbar: Part 2",
          "Material Design Toolbar Quiz"
        ],
        "Basic Components": [
          "Exploring Basic Components in Android Material Design",
          "Getting Familiar with Android Snackbar",
          "Implementing Snackbar in our Android App",
          "Getting Familiar with Floating Action Button",
          "Using Floating Action Button in our Application",
          "Exploring the Importance of Coordinator Layout",
          "Basic Component Quiz"
        ],
        "Android Material Design Animation": [
          "Android Material Animation: Explode, Slide, Circular Reveal, Shared Element",
          "Ripple Effect Animation: Touch Feedback",
          "Implementing Shared Element Transition",
          "Let's Checkout Circular Reveal Animation",
          "Explode Animation Activity Transition: The Most Appealing Transition",
          "Implementing Slide Activity Transition",
          "Fade Animation Activity Transition",
          "Activity Transition Overlap",
          "Android Material Design Animation Quiz"
        ],
        "Android Material Design Support Library": [
          "Android Floating Label for Edit Text by using TextInputLayout",
          "Validation for Floating Labels of Edit Text: TextInputLayout",
          "Introduction to AppBarLayout and Collapsing ToolBar Layout",
          "Implementing AppBarLayout",
          "Implementing CollapsingToolBarLayout",
          "Android Support Library Quiz"
        ],
        "NavigationView Android Material Design Support Library": [
          "Introduction to Navigation View",
          "Implementing Simple Menu Items",
          "Implementing Grouped Menu items with Header"
        ],
        "RecyclerView and CardView": [
          "Introduction to RecyclerView",
          "Implementing RecyclerView - 1",
          "Implementing RecyclerView - 2",
          "Operations on List Items in RecyclerView | Add and Delete Operations"
        ],
        "What Next?": [
          "Congratulations on Finishing the Course"
        ]
      },
      "requirements": [
        "Set up Android Studio in your pc.",
        "How to run Android Application in the emulator, genymotion or on your android device."
      ],
      "description": "Material design is a comprehensive guide for visual, motion, and interaction design across platforms and devices. This course talks about all the important material design specifications, colors, design guidelines, and also using material widgets along with material themes and concepts.\n\nCurious about Android Material Design? This is the your final stop where you will get information regarding material design specifications and the related widgets being used with material design themes. The best part of this course is that you will learn to make several complete android demo apps from scratch - two major apps and several small apps - based on material design guidelines. Enhance your application user interface designing skills by implementing all new materialistic features introduced in Android Lollipop 5.0.\nStyling of Android Application is very important and one of the most critical feature in designing the app. To make this difficult task easy, I have come up with this course of Android Material Design, which begins with the basics of the material design and proceeds with covering some really complicated and most interesting stuffs like Android Material Design Animation. We will also dive into the material design support library and implement it in our demo applications.\n\nThe topics we will be covering includes:\n1. Material Design Themes and Colors\nColor Palette\nMaterial Design Themes\nMaintaining Backward Compatibility\nExploring Tinting of Widgets\n2. Material Design Toolbar\nPopup Menu or Overflow Menu\nContextual Menu\nToolbar Theme Customisation\n3. Basic components of Android Material Design\nFloating Action Button\nSnackbar\nCoordinator Layout\n4. Android Material Design Animation\nRipple Effect: Touch Feedback\nSlide Activity Transition\nShared Element Transition\nExplode Activity Transition\nFade Transition\nActivity Transition Overlaps\n5. EditText with Floating Label\nImplementing Floating Hints\nValidation of TextFields\nValidation Error Resolution\n6. AppbarLayout and CollapsingToolbarLayout\nUsing AppBarLayout with Scroll Flags\nHow to collapse Image along with CollapsingToolbarLayout\nExploring various pin modes\n7. RecyclerView and CardView\nImplementing RecyclerView in various orientations\nUsing CardView to create list items\nAdding and Deleting an Item from RecyclerView\nRecyclerView Animation\nGrid, Staggered Grid Implementations\n8. Navigation Drawer using NavigationView\nInflate menu items in the Navigation Drawer using NavigationView\nAdding dividers between the menu items\nGrouping the menu items under one category\nBy the end of this series, you will be mastering the implementation of this features in your android app.",
      "target_audience": [
        "Students should have basic knowledge of Android Application Development.",
        "What are the basic components of an Android Application and the basic Hello World Program."
      ]
    },
    {
      "title": "The Complete Android App Development Masterclass: Build Apps",
      "url": "https://www.udemy.com/course/androidappcourse/",
      "bio": "Create Real World Applications using Java and Become A Professional Android App Developer From Scratch Today!",
      "objectives": [
        "Complete Android App Development",
        "Java Language",
        "Designing Modern User Interfaces",
        "Working with Databases in Android",
        "Activities and Fragments",
        "Notifications",
        "Content Providers",
        "YouTube and Google Maps APIs",
        "Version Control with Git",
        "Publishing",
        "Practical Android App Development by Creating 4 Real World Applications"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Become A Professional Android App Developer Today!",
          "Welcome To Our Complete Android App Developer Course!",
          "Course Contents",
          "Setup the Environment",
          "Create Your First Application - Part 1",
          "Create Your First Application - Part 2",
          "Challenge"
        ],
        "Java Core": [
          "Variables and Arithmetic Operators",
          "Relational and Logical Operators - Conditional Statements",
          "Loops",
          "Challenge (Create a Game)",
          "Simple Arrays",
          "Object Oriented Programming - Part 1",
          "Object Oriented Programming - Part 2",
          "Object Oriented Programming - Part 3",
          "OOP Challenge",
          "Collections",
          "Static Keyword - Inner classes",
          "Interfaces and Abstract classes",
          "Concurrency - Exceptions",
          "Singleton Pattern",
          "Challenge - Part 1",
          "Challenge - Part 2"
        ],
        "User Interface": [
          "User Interface Basics - Part 1",
          "User Interface Basics - Part 2",
          "User Interface Basics - Part 3",
          "Layouts",
          "Images",
          "ListView and Spinner",
          "Different XML Files - Part 1",
          "Different XML Files - Part 2",
          "Material Design",
          "Snackbar and CardView",
          "RecyclerView - Part 1",
          "RecyclerView - Part 2",
          "RecyclerView (Part 3) - Glide",
          "Fonts",
          "Challenge - Part 1",
          "Challenge - Part 2"
        ],
        "First Sample Application": [
          "Create App's First Page - Intents",
          "Create Books RecyclerView",
          "Expandable CardView",
          "Book Activity",
          "Create Utils Class",
          "Add Books to Different Lists",
          "Create a Delete Button",
          "Show Your Website in a WebView",
          "Animations - Up Button",
          "Persist Data with Shared Preferences and Gson",
          "Finish Rewriting Utils Class"
        ],
        "Activities and Fragments": [
          "Activities",
          "Activity LifeCycle - Bundle - SaveInstanceState",
          "Send Messages - Capture Images - Permissions",
          "Handle Permissions Correctly",
          "Alarm Action - Calendar",
          "Fragments",
          "Callback Interfaces",
          "Challenge - Gym Application (Part 1)",
          "Challenge - Gym Application (Part 2)",
          "Challenge - Gym Application (Part 3)",
          "Challenge - Gym Application (Part 4)"
        ],
        "Shortcuts and Debugging": [
          "Shortcuts in Android Studio",
          "Exceptions - Logging - Basic Debugging"
        ],
        "Handling Background Tasks": [
          "Threading and AsyncTask",
          "Started Services",
          "Bound Services",
          "Job Scheduler",
          "Work Manager"
        ],
        "Networking in Android": [
          "Create a News Reader Application - Part 1",
          "Create a News Reader Application - Part 2",
          "Create a News Reader Application - Part 3",
          "Networking with Volley",
          "Retrofit Basics - Part 1",
          "Retrofit Basics - Part 2",
          "Create a RESTful API with Spring Framework"
        ],
        "Second Sample Application": [
          "Section Introduction",
          "Create Navigation Drawer",
          "BottomNavigationView - Shared Preferences",
          "Sort Items in Main Fragment",
          "Grocery Item Activity",
          "Handle Rating",
          "Add Review - Finish GroceryItemActivity",
          "Search Activity",
          "Handle Categories",
          "First Cart Fragment",
          "Second and Third Cart's Fragments",
          "Upload Orders with Retrofit - Payment Result",
          "Track User's Behaviour",
          "Finalize the Application"
        ],
        "Database": [
          "Basic SQL Commands - Part 1",
          "Basic SQL Commands - Part 2",
          "Basic SQL Commands - Part 3",
          "Basic SQL Commands - Part 4",
          "Basic SQL Commands - Part 5",
          "SQL Commands Challenge",
          "Cursors - More Database Operations",
          "SQLite Database Challenge",
          "Room Database (Part 1)",
          "Room Database (Part 2)",
          "Composition - Abstraction and Data Converters in Room Database",
          "Relationships in Room Database",
          "SQLiteOpenHelper - Cursors",
          "Room Database Challenge - Part 1",
          "Room Database Challenge - Part 2"
        ]
      },
      "requirements": [
        "An average computer with Internet connection"
      ],
      "description": "So you want to learn how to build your own Android Apps from scratch...\nFrom the comfort of your own home...\nThat can help you earn thousands of dollars each and every month...\nThen you've come to the right place!\nWelcome To The Complete Android App Development Masterclass: Build 4 Apps\n⇉ Join 950,000+ Students Who Have Enrolled in Our Udemy Courses!\n⇉ 10,000+ Five Star Reviews Show Students Who Enrolling Are Getting Real Results!\n⇉ You Get Over 30+ hours and 100+ Lectures of FULL HD content!\n⇉ Watch the Promo Video to see how you can Get Started Today!\n_________________________________________________________________________\nHere are all of the benefits to enrolling in our complete Android App course today\n-We've designed this course to include everything you need to know about Android App Development in 2020 and beyond..\n-We've also designed this course so that you can learn everything you need to start building your own Android Apps in less than 8 weeks..\n-Our previous android app course had more than 950,000 students -- so we've made this course bigger, better, with more apps and even more affordable\n-Don't have any previous experience with Android App Development? No problem. We take you from beginner to advanced and show you how to get build real world android apps from scratch - you don't need any prior experience to enroll in our course.\nBut thats not all...\nWe believe the best way to learn in by DOING. That is why we have you build 4 real world applications right along side of us in this course! These hands on projects will allow you to not only learn by watching, but by DOING as well.\nHere are some of the projects you will create in our complete after effects cc master class\nFirst you will build a sample application (add in more about these and the other projects)\nHere are all of the Useful Skills you will learn in our complete course:\nJava Language\nDesigning reach User Interfaces\nDebugging android applications\nYouTube and Google Maps APIs\nDatabases\nContent Providers\nNetworking in Android\nHandling Background Tasks\nNotifications\nVersion control with Git and GitHub\nTips for Publishing\nSo much more\n_________________________________________________________________________\nWith the right mindset, understanding, and application, you will instantly begin learning how to become a professional android app developer from scratch.\nWhen we learn something new - we add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\n_________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But it can be done!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n_________________________________________________________________________\nIt's time to take action! This course will not remain this price forever!\nEnroll Today!\nEvery hour you delay is costing you money...\nSee you in the course!\nSincerely,\nMeisam & Joe",
      "target_audience": [
        "Beginner developers who want to learn Android App Development professionally",
        "Intermediate Developers who want to complete their knowledge",
        "Expert developers who want to update their knowledge and have a reference"
      ]
    },
    {
      "title": "Flutter Shop App | State Management BLoC | Backend",
      "url": "https://www.udemy.com/course/course-selling-online-app-using-flutter-for-ios-and-android/",
      "bio": "iOS and Android Flutter Online Store for Course Selling",
      "objectives": [
        "How to build a mobile app step by step using Flutter for iOS and Android",
        "Connect your app with Firebase and Laravel Backend",
        "Learn to build API for you app",
        "Learn to use BLoC state management",
        "Learn to use Cubit for state management as well",
        "Learn to use Stripe payment",
        "Build an e-commerce app step by step"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "How to use the backend api": [
          "Learn to use the backend api"
        ],
        "Basic project and state management": [
          "Create the project and up and running",
          "Understand the project and state management"
        ],
        "Understanding BLoC state management": [
          "Create bloc app states and events",
          "Create blocs for app and understand the mechanism",
          "Dependency inject and use blocs",
          "Importance of BlocBuilder widget",
          "More about bloc and next part"
        ],
        "Welcome screen and build ui with state management": [
          "Welcome screen and stack widget ui part 1",
          "Welcome screen and column layout ui part 2",
          "Welcome screen and work on the next button ui part 3",
          "Welcome screen and reusable widget ui part 4",
          "Welcome screen and show dots indicator ui part 5",
          "Welcome screen page view and dots indicator ui part 6",
          "Welcome screen and work size indicator part 7",
          "Welcome screen and show image ui part 8",
          "Welcome screen and page swipe button click ui part 8",
          "MultiBlocProviders part 1",
          "MultiBlocProviders and heroTag part 2",
          "MultiBlocProvider and lazy bloc loading part 3",
          "MultiBlocProviders and routing with pushNamedAndRemoveUntil part 4"
        ],
        "Sign in screen and business logic": [
          "Sign in screen and app bar part 1",
          "Sign in screen and social icon buttons part 2",
          "Sign in screen and reusable buttons part 3",
          "Sign in screen and reusable text part 4",
          "Sign in screen and text field part 5",
          "Sign in screen and text field part 6",
          "Sign in screen and text field part 7",
          "Sign in screen and text field part 8",
          "Sign in screen forgot link part 9",
          "Sign in screen and login and registration button part 10"
        ],
        "Refactor section and take care some of the UI issues": [
          "Refactor code part 1",
          "Refactor code part 2",
          "Refactor code part 3"
        ],
        "Sign in BLoC section. Incorporate BLoC in the UI": [
          "Sign in bloc and states part 1",
          "Sign in bloc and events part 2",
          "Sign in bloc and create blocs part 3",
          "Sign in bloc and understand event handler part 4",
          "Sign in bloc and understand emit function part 5",
          "Sign in bloc and event handler part 6"
        ],
        "Sign in controller and manage context and api call": [
          "Sign in controller and get bloc context and state part 1",
          "Sign in controller and install plugin and firebase auth part 2",
          "Sign in controller and firebase auth part 3",
          "Sign in controller and firebase project creating part 4",
          "Sign in controller and iOS settings part 5",
          "Sign in controller and text field value part 6",
          "Sign in controller and passing function to widgets part 7",
          "Sign in controller and test with data part 8",
          "Sign in controller and try on Android part 9",
          "Sign in controller and toast widget part 10",
          "Sign in controller and separate BlocProviders part 11"
        ],
        "Register section": [
          "Register screen and route part 1",
          "Register screen and do ui part 2",
          "Register screen and do ui part 3",
          "Register screen and ui app bar theme part 4.mp4",
          "Register screen and register states part 5",
          "Register screen and understand immutable classes part 6",
          "Register screen and understand copyWith method part 7",
          "Register screen and create copyWith method part 8",
          "Register screen and register blocs part 9",
          "Register screen and optional named parameter for blocs part 10",
          "Register screen and finish the blocs part 11",
          "Register screen and inject bloc part 12",
          "Register screen and deeper understanding copyWith method part 13"
        ]
      },
      "requirements": [
        "Make sure you have Flutter environment set up correctly with Android Studio or VS Code",
        "Need a little bit of Flutter experience"
      ],
      "description": "This is a online learning course app tutorial using BLoC state management. State management and routing both have been done using BLoC.\nIt consists for Laravel backend with Firebase for basic social media login. Most of the API are built using Laravel. The backend contains multi admin( super admin panel and teachers panel). It will have part 1 & 2. Students need to buy both part separately.  In part 2, we will partially cover chatting.\nApp Features\nonboard screen with three photos\nemail login Firebase verification\nsocial media login Google, Apple and Facebook\nviewing course\nplay video course where you will see how to play and stop videos\nupload course from backend\nview multiple teachers course\nbuy course on the front end\nstep by step stripe payment\nsuper admin panel\nteacher admin panel\nchatting feature using Firebase\n\n\nThis app covers Flutter for very beginners to advanced learners. We start from very simple ui like drawing text to complex layout.\nWe also built reusable widget to reduce code amount. So at the end of this tutorial you learn how to build simple to complex reusable flutter widgets. Eventually we will master Firebase chatting and building API and interact with the servers with three ways.\n\n\nState Management\nWe used BLoC to manage state and as well for routing.\nBackend\nWe used Laravel framework for building backend and API. Backend has multi user privileges. It means there are super admins and sub admins. Teachers accounts are sub admin. Super admin can observe and assign roles to the teachers or the sub admins.\nFirebase\nFirebase is used for email login and third party login like Google, Facebook and Apple.\nVersion\nPHP >= 7.4\nLaravel > 8.8\nFlutter > 3.3",
      "target_audience": [
        "Beginners to Advanced Flutter Learners"
      ]
    },
    {
      "title": "Full Stack Xamarin with C# for Beginners to Build Apps",
      "url": "https://www.udemy.com/course/full-stack-xamarin-with-c-for-beginners-to-build-apps/",
      "bio": "Build native mobile apps with Xamarin for Android, iOS and Windows. Learn Xamarin.Forms, improve your Xamarin skills",
      "objectives": [
        "Whether you’re interested in learning Xamarin Forms, Xamarin Classic, or Azure Mobile Services, OAK has a course to help you create cross-platform mobile apps",
        "The Xamarin Mobile Platform lets you write code once in C# and then compile that code to run natively on Android, iOS, and Windows.",
        "This course also has excellent combo of Web APIs with ASP .Net. I've even made my own REST API and consumed it in my cross-platform Xamarin Forms application.",
        "Fundamentals of C# (C sharp programming)",
        "Fundamentals of C# (C sharp programming) and .NET Framework",
        "Learn C#(c sharp programming) by coding",
        "Installation of Visual Studio",
        "Work with classes, structs, arrays, xamarin forms",
        "Debug C#(C sharp programming) applications",
        "Build Native Cross-Platform Apps with Xamarin",
        "Build Native Cross-Platform Apps with Xamarin Forms",
        "Use free tools and platforms for Xamarin and Visual Studio",
        "Use Xamarin Forms Previewer",
        "This course also has an excellent combo of Web APIs with ASP Net.",
        "I've even made my own REST API and consumed it in my cross-platform Xamarin Forms application.",
        "Xamarin, xamarin forms, xamarin android ios app development",
        "Thanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C",
        "C# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft.",
        "Encapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members .",
        "C# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications",
        "As is true for many skills, you can learn C# by taking Oak Academy courses, reading documentation, and practicing coding hands-on.",
        "If you know xamarin, xamarin android, uwp, xamarin c#, xamarin native, c#xamarin, xamarin forms, cross platform it will be a huge advantage for you."
      ],
      "course_content": {
        "What You Will Learn in this Xamarin with C# course?": [
          "No experience on C#? Don`t Worry!",
          "C# .NET Framework",
          "Project Files and Course Documents",
          "FAQ About Xamarin and C# ( c sharp programming)"
        ],
        "Set Up Visual Studio": [
          "Development Environments",
          "How To Install Visual Studion On Windows?",
          "How To Install Visual Studion On Mac?",
          "How To Install Visual Studio 2022 On Windows?"
        ],
        "Console Environment": [
          "What is Console App?",
          "Functions Used in Console Environment to Write and Read",
          "Read & Readline"
        ],
        "Variables in C#": [
          "What Is Variables in C# ?",
          "Type Conversions in Variables"
        ],
        "Windows Form": [
          "Introduction to Windows Form",
          "Review Necessary Windows",
          "Review Form Properties in c# for beginners"
        ],
        "Review Objects in Toolbox": [
          "Using MessageBox",
          "Button",
          "Textbox",
          "Groupbox",
          "Radiobutton c sharp",
          "Label in c#",
          "Checbox",
          "Combobox in c sharp programming",
          "Datetimepicker in c sharp for beginners",
          "Switch and Data Transfer Between Forms"
        ],
        "Operators in c sharp from scratch": [
          "Using Operators"
        ],
        "Before Starting Know-How": [
          "Using Comment Line",
          "Using Region",
          "Naming Conventions in oak academy c#",
          "Using Breakpoint",
          "Keyboard Shortcuts in Visual Studio"
        ],
        "Condition Controls": [
          "If -Else Statement",
          "Switch Case Statement"
        ],
        "Loops": [
          "While DoWhile",
          "For Loop",
          "Jump Statements"
        ]
      },
      "requirements": [
        "No prior knowledge of C# and xamarin is required",
        "A computer for installing all the free software (xamarin, xamarin forms, c# (c sharp programming) and tools needed to practice",
        "Free software and tools used during the full stack xamarin with c# course",
        "Desire to build app with xamarin and c#",
        "Desire to learn C# and Xamarin",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device",
        "Having visual studio 2019 xamarin",
        "If you know C# Object Oriented Programming, it will be a huge advantage for Xamarin",
        "Microsoft Windows 7, 8, 10 or Apple Mac OS X 10.12 and later versions for Xamarin Android",
        "Desire to learn xamarin xamarin android uwp xamarin c# xamarin native c# xamarin",
        "Determination to learn and patience for complete xamarin forms cross platform visual studio 2019 xamarin c# oak academy mobile app xamarin ios"
      ],
      "description": "Hello,\nWelcome to Full Stack Xamarin with C# for Beginners to Build Apps course\nBuild native mobile apps with Xamarin for Android, iOS and Windows Learn Xamarin Forms, improve your C# Xamarin skills\nDo you want to learn C# but have no experience at all\n\nThis Full Stack Xamarin with C# for Beginners to Build Apps course is the perfect place for you to start In this course, we designed C# NET course to give you everything you need to become productive with C#\nCode with C# today!\nAfter learning about C#, you will be able to make easily your own applications with Xamarin\nThe best course is right in front of your eyes This is the most complete course that teaches you how to build Native Cross-Platform Apps with C# Codes\nIn this course, we will develop cross-platform apps with Xamarin Forms You do not need to learn Java, Kotlin, Objective-C, Swift, or anything of that All you need to know is C #, and you will learn it in this course\nBeing able to develop mobile apps for multiple platforms is the quickest way a developer can boost their productivity Whether you’re interested in learning Xamarin Forms, Xamarin Classic, or Azure Mobile Services, Udemy has a course to help you create cross-platform mobile apps more efficiently\nNo prior knowledge is needed!\nEnroll and master fundamentals of C# and programming with the NET framework, because you'll have lots of options waiting in front of you Either choose to build mobile apps or you can make a job transition and work as a web developer We want you to know that when you know the fundamentals well, switching to different technology stacks is easier\nThat`s why you are at a great place to start with C#\nAll my students will have a chance to learn not only the whats but also learn the whys and hows\nWhat you will learn?\nC# Programming and Features of C#\nVisual Studio IDE\nConsole Application\nVariables\nPrimitive Types and Non-Primitive Types\nFlow Control Expressions\nArrays and Lists\nError Handling and Debugging\nFunctions\nReading File\nWriting to File\nInstalling Visual Studio and Xamarin libraries\nCreating a custom Emulator\nRunning project on the Emulator\nDeveloping native mobile apps for Android, iOS, and UWP\nBuilding user interfaces with XAML and C# code\nUsing Xamarin Forms Previewer\nManaging NuGet packages\nCreating pages and navigation between them\nAdding and using elements\nDesigning with Layouts\nTableView and Cells\nDisplaying popups\nListView and data binding basic\nGetting platform-specific functions with Dependency Service\nUsing native controls with Custom Renderers\nxamarin xamarin android uwp xamarin c# xamarin native c# xamarin xamarin forms cross platform visual studio 2019 xamarin c# oak academy mobile app xamarin ios uno platform c# mobile xamarin form c# apps xamarin native ios xamarin visual studio xamarin 2019 c# app xamarin app xamarin oak academy xamarın xamarin mobile app cross platform app development xamarin course xamarin project c# mobile apps c# ios\nxamarin uwp xamarin forms xamarin android c# xamarin form c# xamarin xamarin c# c# full stack xamarin native xamarin ios full stack c# oak academy visual studio 2019 xamarin full stack xamarin c# mobile c# mobile app xamarin visual studio fullstack xamarin forms c# app xamarin beginner xamarin project android visual studio xamarin full stack mobile meanstack xamarin studio mobile app c# xamarin android app xamarin projects windows app xamarin 2019\nBy registering the course you will have lifetime access the all resources, practice videos, and will be able to ask questions about related topics whenever you want\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\nThis course starts with very basics First, you will learn how to install the tools, some terminology Then the show will start and you will learn everything with hands-on practices I'll also teach you the best practices and shortcuts\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of Xamarin and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more The good news is since the Free and popular tools are used you don’t need to buy any tool or application\nWhat is C# ?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its NET initiative The NET framework and NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL C# is open-source and was designed to be simple yet modern, flexible yet powerful and versatile yet easy to learn and program with Many programming languages in the past were designed for specific purposes C# was developed with business and enterprise needs in mind By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages That includes generics, var types\nWhat are the advantages of c# over C++ ?\nThanks to the NET framework, C# has many advantages over C++ C# is a refined and modernized version of C++ C++ was developed to bring object-orientation to C, an older but widely used language, and C++ became the de-facto language for building applications for Windows as well as infrastructure and low-level applications Visual Basic was for business applications What C# does is combine the rapid development capabilities of VB with the power of C++ C# also has many new data types, type-safety, to ensure you do not unknowingly reuse initialized variables It uses a simplified syntax, a huge improvement over the complex coding often required in C++ C# also removes memory management issues thanks to NET’s garbage collection scheme You do not have to reference items for garbage collection; the system can reclaim that memory as required\n\nWhy use encapsulation in C# ?\nEncapsulation can be used in C# to hide data and program behavior from users With encapsulation, you can group properties, methods, and other members so that they are treated as a single object It is a means to prevent the user of a given class from manipulating program objects in ways that were not intended by the designer or developer Encapsulation hides how a program operates without affecting how it works while still allowing users to service requests for functionality and add or modify internal data or methods to meet changing needs For example, suppose you have an object called “Patient” that contains patient-related data In that case, you can use encapsulation to provision patient-specific data to those who need it without exposing all patient data In addition to information hiding, you can use encapsulation in C# to improve your code's reusability\n\nWhat is C# used for?\nC# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications and game development In web application development, you can build dynamic websites and apps using NET or another open-source platform of your choice Also, since Microsoft created C# for Microsoft, C# is a popular language for building Windows applications There are rich resources and a vibrant C# community that can support and documentation for applications and programs specific to Microsoft platform architectures, making it easier than ever to develop applications in this space Finally, C# is a popular language to use in game-building, especially with Unity, a game engine that runs on C++ and C#\nWhat is a constructor? What is a destructor?\nTo understand constructors and destructors, we need to understand methods A method is a block of code that contains a series of statements Programs run by executing methods A constructor is a special method of a class that is automatically called whenever an instance of a given class is created A constructor contains the instructions that execute when an object is created Developers use it to assign specific initial values to the data members of the same class In C#, you will get a compile-time error if you try to read from an uninitialized variable You must first initialize your variables by giving them an initial value, which is what the constructor does On the other hand, destructors are methods used to destroy instances of a class when they are no longer needed Destructors are called implicitly by the garbage collector in NET\nHow do I learn C#?\nAs is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on There are many resources available for all of the above, including real-time compiler applications that will show you the output of your code as you type it However, it is best to plan ahead, and you should have an outline of what you need to learn before beginning your journey The first thing to learn about is what C# is, how and where it is used, and why it was developed From there, you can learn about data types, variables, keywords, and functions Once you’ve grasped the basics, you can move on to learning about conditional tests and operators, functions, arguments, object orientation, arrays, strings, classes, methods, structs, debugging, and exception handling\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions\nSee you in the Full Stack Xamarin with C# for Beginners to Build Apps course!",
      "target_audience": [
        "Newbies or students looking for a refresher on the basics of C# and .NET",
        "People who wants to learn C# and Xamarin",
        "People who wants to learn Visual Studio",
        "People who want to learn game development & design with xamarin with c#",
        "People who wants develop their own game ( and game development fundamentals)",
        "Anyone who wants learn to build native mobile apps with Xamarin for Android, iOS and Windows",
        "Those who wants to start learning Xamarin from scratch and move forward",
        "An absolutely amazing course it was! I've got a very good idea of how to make a real-world application with the help of Xamarin Forms.",
        "People who want to build a app with full stack xamarin with c# for beginners",
        "People who want to learn xamarin forms",
        "Passion for learning to build Native Cross-Platform Apps and uwp with C# Codes",
        "Developers who want to utilize their existing C# skills to build native mobile apps for xamarin forms",
        "People who want to learn visual studio 2019 xamarin c# oak academy mobile app xamarin ios uno platform c# mobile",
        "Anyone who want to learn programming with xamarin form c# apps xamarin native ios xamarin visual studio xamarin 2019 c# app xamarin app xamarin oak academy",
        "People who want to learn xamarın xamarin mobile app cross platform app development xamarin course xamarin project c# mobile apps c# ios",
        "Anyone who want to learn programming with xamarin uwp xamarin forms xamarin android c# xamarin form c# xamarin xamarin c# c# full stack",
        "People who want to learn xamarin native xamarin ios full stack c# oak academy visual studio 2019 xamarin full stack xamarin c# mobile c# mobile app xamarin visual studio",
        "Anyone who want to learn programming with fullstack xamarin. forms c# app xamarin beginner xamarin project android visual studio xamarin full stack mobile meanstack xamarin studio mobile app c# xamarin android app xamarin projects windows app xamarin 2019"
      ]
    },
    {
      "title": "Dive Into SpriteKit - You Design the Game",
      "url": "https://www.udemy.com/course/dive-into-spritekit/",
      "bio": "All source code updated to Swift 5 - Design and code your own games by choosing exactly what should happen!",
      "objectives": [
        "Understand the process of coding SpriteKit games"
      ],
      "course_content": {
        "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources": [
          "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources"
        ],
        "Introduction": [
          "Introduction - How to use this course - Source code and Resources here"
        ],
        "Project 1A - Race on Roads": [
          "Intro to Project 1 (A, B, C)",
          "Part 1 - Drawing a background for racing on the road",
          "Part 2 - Drawing mud on the road",
          "Part 3 - Creating the player",
          "Part 4 - Making the player move (choose an option)",
          "Part 5 - Obstacles to avoid (Choose an option)",
          "Part 6 - Collision detection",
          "Part 7 - How the player earns points (Choose an option)",
          "Part 8 - Adding music and sound effects",
          "Part 9 - Ending the game",
          "Part 10 - Fixing the bugs"
        ],
        "Project 1B - Flying Through Space": [
          "Part 1 - Drawing a background",
          "Part 2 - Flying through space dust",
          "Part 3 - Creating the player",
          "Part 4 - Making the player move (Choose an option)",
          "Part 5 - Creating the enemy (Choose an option)",
          "Part 6 - Collision detection.",
          "Part 7 - Adding a score label with SKLabelNode",
          "Part 8 - How the player earns points (Choose an option)",
          "Part 9 - Adding music and sound effects",
          "Part 10 - Ending the game",
          "Part 11 - Fixing the bugs"
        ],
        "Project 1C - Sail Through the Sea": [
          "Part 1 - Drawing a background",
          "Part 2 - Swimming through bubbles",
          "Part 3 - Creating the player",
          "Part 4 - Making the player move (Choose an option)",
          "Part 5 - Obstacles to avoid (Choose an option)",
          "Part 6 - Collision detection",
          "Part 7 - Adding a score label with SKLabelNode",
          "Part 8 - How the player earns points (Choose an option)",
          "Part 9 - Adding music and sound effects",
          "Part 10 - Ending the game",
          "Part 11 - Fixing the bugs"
        ],
        "Project 2A - Spot the odd one out": [
          "Intro to Project 2 (A, B, C)",
          "Part 1 - Starting with the background",
          "Part 2 - Making a grid of animals",
          "Part 3 - Creating levels",
          "Part 4 - When they guess correctly (Choose an option)",
          "Part 5 - When they guess wrong (Choose an option)",
          "Part 6 - Keeping score",
          "Part 7 - Adding sound effects",
          "Part 8 - Ending the game (Choose an option)",
          "Part 9 - Fixing the bugs"
        ],
        "Project 2B - Tap the light that didnt flash": [
          "Part 1 - Starting with the background",
          "Part 2 - Making a grid of lights",
          "Part 3 - Creating levels",
          "Part 4 - When they guess correctly (Choose an option)",
          "Part 5 - When they guess wrong (Choose an option)",
          "Part 6 - Keeping score",
          "Part 7 - Adding sound effects",
          "Part 8 - Ending the game (Choose an option)",
          "Part 9 - Fixing the bugs"
        ],
        "Project 2C - Tap the highest numbered ball": [
          "Part 1 - Starting with the background",
          "Part 2 - Making a grid of balls",
          "Part 3 - Create levels",
          "Part 4 - When they guess correctly (Choose an option)",
          "Part 5 - When they guess wrong (Choose an option)",
          "Part 6 - Keeping score",
          "Part 7 - Adding sound effects",
          "Part 8 - Ending the game (Choose an option)",
          "Part 9 - Fixing the bugs"
        ],
        "Project 3A - Crashy Plane": [
          "Intro to Project 3 (A, B, C)",
          "Part 1 - The player",
          "Part 2 - Controlling the plane (Choose an option)",
          "Part 3 - Drawing a parallax background",
          "Part 4 - Avoiding enemy obstacles (Choose an option)",
          "Part 5 - Collision detection",
          "Part 6 - Adding particle effects",
          "Part 7 - How to score points - (Choose an option)",
          "Part 8 - Adding sound effects",
          "Part 9 - Fixing the bugs"
        ],
        "Project 3B - Sinky Sub": [
          "Part 1 - The player",
          "Part 2 - Controlling the Sub (Choose an option)",
          "Part 3 - Drawing a parallax background",
          "Part 4 - Avoiding enemy obstacles (Choose an option)",
          "Part 5 - Collision dectection",
          "Part 6 - Adding particle effects",
          "Part 7 - How to score points - (Choose an option)",
          "Part 8 - Adding sound effects",
          "Part 9 - Fixing the bugs"
        ]
      },
      "requirements": [
        "You should already have some familiarity with Swift"
      ],
      "description": "Welcome to \"Dive Into SpriteKit\".\nNote - All source code is downloadable and updated to Swift 5 in section 2\nThere are lots of SpriteKit courses out there, but Dive Into SpriteKit is the first to introduce a new teaching approach that puts your choices right into the games you make. Here you learn how to design and code your own games by choosing exactly what should happen.This course is written and authored by the award winning Swift programmer, Paul Hudson, and these videos were made with his permission and support. You can always be guaranteed you're learning the latest and greatest Apple technologies in the Hacking with Swift tutorials.\nThis course is different in that these projects put YOU in control of the design and gameplay, because you will be making many of the choices. Sometimes the choices are small – like, what should the player look like? – and other times they are much bigger, such as “how do you want to move the player, by touch, or by using the accelerometer....or what kind of special item do you want the player to have, a smart bomb?, or a maybe a power up? Or something else?\nWhich ever choice you make, we code it together in an easy to follow format. And with the many coding choices presented, there are tons of different combinations you can give to your games, all contributing to you building a game that is uniquely yours.\nBuild games by learning from an award winning Swift programmer - Paul Hudson - who has been praised by the creator of the Swift language, Chris Lattner, for his outstanding methods of teaching.\n200+ Combinations - The course projects fan out to over 200 possible combinations as you make choices that decide how your game should look and work.\nChoose things like: Players, Enemies, Backgrounds, How the player should move, How to award and penalize the player, Obstacles to avoid, What should happen when the user is correct or wrong, What special items should the player have, How to end the game, Background music, Sound effects...and more!\nDive Into SpriteKit gives you four complete game projects for iPad, all built on top of SpriteKit – Apple's high-performance 2D games framework.\nEach lecture is recorded to be as short as possible, so you can make steady progress every few minutes and see your creation come to life.\nTo help you follow along, there’s a companion app that contains all the projects in all variations, so you can see how your own code should look.\nYou're in control - At key points the course presents various choices for you to decide what should happen next – your choices then affect how the project continues.\nThe course is easy to use, and your never lost, as each option is clearly defined in key lectures that lists the possible choices, and its location in the video. So navigating around to a particular choice couldn’t be easier.\nWork through the projects in any order you want, as they are all completely stand alone games.\nAnd because of the unique layout of this course, you can use the lectures as your own SpriteKit docs, for fast look up and retrieval of the code you need for design and gameplay.\nAlthough this course is designed to teach you SpriteKit, it is explicitly not designed to teach you Swift. If you don't already know Swift you should read the introduction to Swift over at HackingWithSwift",
      "target_audience": [
        "This course was designed to teach you how to create games using Apple's 2D Framework called SpriteKit"
      ]
    },
    {
      "title": "Complete Flutter Guide 2025: Build Android, iOS and Web apps",
      "url": "https://www.udemy.com/course/flutter-the-guide-to-build-android-ios-and-web-apps/",
      "bio": "The Complete Flutter SDK, Flutter Framework, Dart guide to develop fast, production-grade apps for Android, iOS and Web",
      "objectives": [
        "Build fast, production grade, native quality apps for Android, IOS and Web",
        "Start from scratch to understand all fundamental concepts of Flutter development",
        "Back-end with Firebase and deploy web apps to Firebase hosting for free",
        "Build beautiful, appealing and responsive flutter apps that fit every device size",
        "Become a fully-fledged flutter developer",
        "Build portfolio of beautiful flutter apps to impress any recruiters or clients",
        "Firebase Firestore(No-SQL database) , Email Authentication and Google Authentication",
        "Learn Flutter Architecture like MVVM, Bloc and MVC",
        "Learn to use Industry standard flutter state managements' like Riverpod, Bloc, Getx",
        "Master navigation Like pro using go router, navigator",
        "CI/CD using Github actions"
      ],
      "course_content": {
        "Introduction": [
          "What is Flutter?",
          "How easy is it to create an app with Flutter?",
          "How exactly Google Flutter works?",
          "How to stand out?",
          "First thing to do!"
        ],
        "Flutter Setup and Installation": [
          "Install Java (Windows)",
          "Install Git (Windows)",
          "Install Flutter (Windows)",
          "Install Android Studio for Flutter (Windows)",
          "Emulator/Physical device setup",
          "Android licenses (Windows)",
          "Firebase installation for Flutter (Windows)",
          "Firebase installation bug",
          "Desktop app Development Setup for windows (Optional)",
          "Flutter Mac complete installation",
          "Bugs",
          "Android Studio NEW UI vs Classic UI",
          "Editing errors"
        ],
        "My Dashatar app - Start with the basics to create your First Flutter App": [
          "Goals",
          "Creating Flutter app - 1",
          "Error Fix",
          "Creating Flutter app - 2",
          "Coding My Dashatar App with Flutter part 1",
          "Summary Flutter.",
          "Adding images [Coding My Dashatar App with Flutter part 2]",
          "Change Flutter Launcher Icon New method.",
          "Changing launcher Icon [Coding My Dashatar App with Flutter part 3]",
          "Opening a new page bug fix",
          "Flutter Bugs FIx",
          "Quizzzzzzz",
          "You can hire me!"
        ],
        "Ninja Challenge 1": [
          "What is the challenge?",
          "Solution to the challenge",
          "Quiz",
          "Bug Fix"
        ],
        "My Dashatar App - Understanding Flutter layouts in depth": [
          "Introduction and emulator settings",
          "Hot reload vs Hot restart",
          "Flutter List and Column widgets",
          "Rows and Columns",
          "ListView and SingleChildScrollView",
          "Flutter Wrap and Stack widgets",
          "Bug fix"
        ],
        "Dart Programming": [
          "Object oriented programming with Dart",
          "Classes, objects and \"Hello World\"",
          "Calling a variable using an object for Dart programming",
          "Return type method/function || Dart programming",
          "Constructors",
          "Invoking a function",
          "Check for even numbers",
          "Documentation for loops, lists, and decision making.",
          "Flutter Keywords: 'late' , 'const', 'final'",
          "Dart Loops and Lists",
          "Unlocking the Mysteries of Maps in Dart: A Friendly Guide",
          "Deep dive into Maps for Dart programming & Google Flutter",
          "Navigating Null Safety in Dart: A Conversational Guide",
          "Challenges set 1",
          "Challenges set 2"
        ],
        "State management - Basics": [
          "Stateful vs Stateless widgets",
          "Flutter Widgets Summary",
          "State management in action",
          "AudioPlayers package",
          "Bug Fix",
          "Playing the beats",
          "Quiz"
        ],
        "Ninja challenge 2 - Launchpad app": [
          "Flutter Bugs",
          "The problem",
          "Solution - Introduction",
          "Flutter LaunchPad decorations",
          "Adding delay and playing audio",
          "Adding sound path"
        ],
        "Layouts, Gesture and animations: Landing Page Web [ Portfolio ]": [
          "Goal of this module",
          "Tips! Break and build",
          "Creating a new Flutter project",
          "Changing Flutter app icons",
          "Flutter App icon customization",
          "Flutter web Change icon/Favicon",
          "Coding main.dart",
          "Flutter analysis.yaml || Linters",
          "Flutter const vs final",
          "Flutter mouse region widget",
          "CircleAvatar",
          "Flutter padding widget",
          "sansBold",
          "Contact details",
          "About section",
          "Third section",
          "Decorating the card for Flutter",
          "Adding more cards",
          "Contact me",
          "Flutter TextFormFields",
          "Making a stateless widget",
          "Flutter TextFormFields",
          "Exploring new properties",
          "Flutter RegExp",
          "How to validate the text in Flutter TextFormFields",
          "Integers and double",
          "Flutter Animations",
          "Practical use of Flutter AnimationController",
          "Flutter animated cards",
          "How to host your flutter web app on Firebase hosting (Easy way)",
          "Creating a project in Firebase for Flutter",
          "Further exploring Firebase",
          "Flutter SVG Image Asset",
          "Adding social media",
          "Designing the web app",
          "Async, await and functions - part 1",
          "Async, await and functions - part 2"
        ],
        "Navigation in Flutter": [
          "Flutter Navigation: First way",
          "Flutter Navigation: Second way",
          "Flutter Navigation: Third way",
          "Flutter Navigation: Routes part 1",
          "Flutter Navigation: Routes part 2",
          "Flutter go router"
        ]
      },
      "requirements": [
        "No programming or coding experience needed",
        "Windows or Mac",
        "15 GB of storage or online IDE like Flutlab"
      ],
      "description": "Welcome to the best and most industry-oriented hands-on course on Google Flutter and Dart by Coding Liquids where you’ll start from scratch and go step by step to become an industry-standard Flutter developer.\nCovering all the fundamental concepts for Flutter development, this is the most comprehensive production-grade Flutter course available online.\nWe built this course over a year, perfecting the curriculum together with the industry standards to teach you Flutter from scratch and make you into a skilled Flutter developer with a strong portfolio of beautiful Flutter apps.\nHere you’ll learn to use Flutter, Dart, and Firebase to build beautiful, high-performance production-grade apps for Android, iOS, and the web.\nBy the end of this course, you will be able to master topics like Layouts, animations, responsive handling, Streams, Future, Riverpod, Firebase, design patterns, and much more to develop apps that meet industry standards and get Google Flutter developer jobs.\nMajor companies such as BMW, Ali Baba, eBay, Tencent, Toyota, Google, and many more are using Flutter for developing their apps. The demand is high but the supply of developers is low, so this creates the perfect opportunity for you to learn about this trending topic which is Flutter!\nHaving compiled over 2000 Flutter job descriptions, we are fully aware of the qualifications needed to become a skilled and well-paid Google Flutter developer. We created this flutter course for anyone who wants to develop and release high-performance production-grade apps for Android, iOS, and the web all at once. What distinguishes this flutter course from others is its industry standards. Your flutter app may not be collaboration-friendly or may consume excessive power with the OS shutting the app down, making the app useless. However, similar disasters can be avoided with the right industry standards.\n\n\nFrom Beginner to Flutter Developer or Flutter software engineer with Just One Course\nWe know that you're here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they're doing, you'd be on YouTube.\nBy getting this course, you can rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and we're always on hand to answer student questions.\nSo by the end of the course, you'll completely understand:\n\n\nFundamental Flutter concepts e.g. Stateful vs. Stateless Widgets, Widget tree, state management, animations, JSON handling, and much more for Android, IOS, and Web\nFundamental Dart concepts e.g. lists, maps,  loops, futures, streams, mixins, classes, objects, and much more.\nHaving an in-depth understanding of Flutter Animations and Flutter Layouts.\nA hands-on approach for going through more than 150 flutter widgets e.g MaterialButton, TextEditingController, Gesture detector, URL Launcher, Dio, Drawers, and so much more.\nResponsive handling to make sure your flutter app fits almost every screen\nFlutter Navigations\nPortfolio of apps to impress recruiters and clients\nFlutter Streams & Flutter Future\nState management from basics to advanced topics like Provider & Riverpod & Hooks & Flutter multithreading\nFlutter Web free hosting on Firebase\nDomain name transfer, Flutter Firebase CLI\nFlutter Email authentication, FlutterGoogle authentication for web and mobile\nDeep dive into No-SQL database (Firestore)\nCI/CD using Github actions.\nSoftware architectures like MVVM (Model View View-Model), Bloc, MVC, Clean architecture\n\n\nThe difference between a good developer and a great developer is how you code your apps to consume less power and that is exactly where we help you to stand out. It’s a commendable skill in the Flutter community. But it’s also a highly neglected skill. Fortunately, it’s one of the major topics you’ll master here.\nWith the amount of research we have done for a year, it ensures that you’ll not just be able to develop a Flutter app but develop it with Flutter industry standards and meet the requirements of most recruiters or clients. The apps you’ll build will meet proper standards and make your portfolio stand out. Without a shadow of a doubt, this is the best course on Google Flutter.\nAll the Fluter projects we will create in this course are selected in a way to demonstrate how you can create different user interactions and how important it is to have nested flows in Google Flutter apps. Further, we will look at some more advanced Flutter UI widgets that can make your apps look fantastic and very interactive. We will deal with accessibility and styling all while incorporating the trial-and-run approach.\nThis Google Flutter course has illustrative videos to ensure the best learning experience for you. Our comprehensive videos and curriculum are built keeping in mind a beginner’s as well as a professional’s perspective. We have tried to answer as many questions and doubts as you might have throughout the course.\nOur extensive study over the past year guarantees that you won't simply create projects, but do so in accordance with industry standards and satisfy the needs of the majority of employers or clients. The apps you'll create will be up to code standards and will distinguish your portfolio. This is without a doubt the best Google Flutter training available.\nWe are eager to have you enroll in this course!\n\n\nIf you're still hesitating about joining us on this fantastic Google Flutter adventure, look at these comments:\nThe codes here are the latest. In other courses, most of the codes don't even work as they are really old but this course is updated to the latest flutter version and everything is working perfectly. - Chandrima Pal\nI have work experience in various tech companies and I think this course is fantastic! It's very informative and useful! I like the fact that the videos are short and concise, and the instructors explain everything in a way that is easy to follow. The content is updated and gives me the confidence to use Flutter in my projects. - Karol José Gutiérrez Suárez\nThis course is a surprisingly comprehensive course to learn Flutter from scratch without prior knowledge of Dart! The course follows the current Industry standard and intuitively uses various interesting Projects, including Ninja Challenges to build up knowledge. One noteworthy thing to mention is the instructors- Sagnik and Paulina. They perfectly explain the course in a simple, structured and easy way that builds upon a foundation to use the wealth of knowledge gained in future job prospects. Besides the course has the added advantage of building up your CV by adding the projects. I've done 16 sections till now and they were very informative, and fun to learn. Being from a non-Computer Science background it was really easy for me to pick up. I cannot wait to learn more! - Raunak Banerjee\nI have been waiting for a complete upto date flutter course for a while. I'm only two hours in and loving it. I'm annoyed that I have to leave for work now because I don't want to stop. - Tom White\nThe most important topics are covered. I’d highly recommend it and give it even more than five stars! - Pritam Banik\nI have learned a lot from this course and I am currently working on a flutter project, it made me understand how all the widgets are fitting together. - John Williams\n\nThank you very much for your help. Based on your professional way of helping me and responding me within minutes every time. i will change my review from 4 stars to 5 for great customer service. once again, thank you! - Thomas S.\n\nThe course is very useful for me. I get very fast responses to my questions. It is very important to me that the course is up-to-date. - Engin N\nEsse curso é ótimo, muito bem feito. Os instrutores conseguiram pensar em tudo, e tive um ótimo aprendizado graças a eles, realmente é algo feito por profissionais, recomendo a todos. - Maikon Douglas de Souza Pádua\nMimo niedużej znajomosci języka Angielskiego spokojnie rozumiem póki co większość kursu. Po zapoznaniu się z pierwszymi lekcjami widzę że wszystko przedstawione jest bardzo przejrzyście i w łatwy i prosty sposób wytłumaczone. Polecam! - Dariusz Badziąg\nCours très intéressant et instructif. La pédagogie et la clarté du contenu sont vraiment un plus. Je recommande sans hésiter ! - Rémy Hoarau Belkhiri",
      "target_audience": [
        "If you have never programmed before, then take this course to learn Dart and build iOS and Android apps.",
        "If you know how to code, but are new to mobile development and web development, then take this course to build apps with just one codebase.",
        "If you want to develop high performance production grade apps.",
        "If you want to know about databases and use a back-end like Firebase.",
        "If you've tried Flutter before, then take this course to get a comprehensive curriculum that covers all the important aspects of Flutter development"
      ]
    },
    {
      "title": "Vue JS and Firebase:Build an iOS and Android chat app",
      "url": "https://www.udemy.com/course/vuejs-and-firebase-build-an-ios-and-android-chat-app/",
      "bio": "Vue JS, Vuex and Framework7 are awesome mix to build iOS and Android app. Firebase help to create a real time mobile app",
      "objectives": [
        "Build an amazing real world iOS and Android Chat Application",
        "Implement Firebase Authentication to the mobile app",
        "Send Image to your friends through the mobile app you create",
        "How to create one on one chat",
        "How to create a group chat which allow to add and remove members",
        "Implement email verification and forget password to the Firebase Authentication"
      ],
      "course_content": {
        "Create Chat App pages and signup function": [
          "Create a project reminder",
          "Source code",
          "Create a project",
          "Create sign in page",
          "Create sign up page",
          "Connect the app to firebase",
          "implement Vuex",
          "Create sign up action",
          "Toast Firebase message",
          "Apply mixin",
          "Browser custom photo for user profile picture",
          "Create read file action",
          "Sign up with custom profile picture",
          "Auto go to sign in page after sign up",
          "Create send email verification action",
          "Create sign in action",
          "Make the app remember the sign in status",
          "Create sign out action",
          "Check whether the email is verified",
          "Create count down on sending verification email",
          "Dynamic style of button",
          "Conditionally display resend button",
          "Add forget password function",
          "Add profile picture and name to the left panel"
        ],
        "Edit Profile Page": [
          "Create edit profile page",
          "Modifiy the data and ui inside edit profile page",
          "Create update profile function",
          "Create two icons",
          "Create two pages",
          "Get all user action",
          "Beautify the contacts page",
          "Create send request action",
          "Create send request function",
          "Install lodash and make it can use the async await",
          "Complete get my requests action",
          "Beautify the requests",
          "Create delete request action",
          "Create confirm request action",
          "Create get all friends action",
          "Beautify the home page",
          "Create chat page",
          "Detail the chat page",
          "Create send message action",
          "Create send message function",
          "Create get chat messages action",
          "Display messages",
          "Group the messages by date",
          "Clear unnecessary code",
          "Browse photo as message",
          "Create read file message action",
          "Create upload chat images action",
          "Send image messages",
          "Create get user key action",
          "Create send latest message action",
          "Modify send message action",
          "Display latest message on friend list"
        ],
        "Group Chat": [
          "Create chat groups page",
          "Create new group page",
          "Beautify the create new group page",
          "Create group chat module",
          "Initialize group image",
          "Modify the readFile action",
          "Create new group",
          "Modify upload file action",
          "Create group action",
          "Create get all groups action",
          "List out the groups",
          "Create chatgroup page",
          "Edit chat group page",
          "Add options to chat group",
          "Add pages relate to the options",
          "Get group image",
          "Add new members action",
          "Add new member function",
          "Get group members action",
          "Modify potential member list",
          "Display group members",
          "Remove member",
          "Show number of members",
          "Determine which action group",
          "Leave group action",
          "Bind leave group action to method",
          "Edit get group member action",
          "Group info page",
          "Delete unncessary data",
          "Send group message action",
          "Send group message function",
          "Send image message",
          "Get group messages",
          "Display group messages",
          "Send latest message to group",
          "Display latest message"
        ]
      },
      "requirements": [
        "Basic VueJS knowledge is required",
        "ES6 knowledge is an advantage",
        "A basic understanding of HTML, CSS & JavaScript"
      ],
      "description": "Master the VueJS and Firebase together to build an amazing iOS and Android chat application. By learning from this course, you are not only can build chat application, but also can apply these knowledge to build other incredible applications.\n\n\nIf you’re looking to get started building a real-world mobile chat app, then this course is best for you. In this course, I will teach you how to use Vue JS and Framework7 as frontend, Firebase as backend to build the chat app from scratch.\n\n\nVueJ S is a very simple framework, which combine with the best of Angular and React\n\n\nFramework7 is an open source framework7, which let you develop mobile, desktop or web app with a native look and feel\n\n\nFirebase is a real time database, it allows you to create authentication easily, user can login with email, google, Facebook and twitter account.\n\n\nThe course will cover\nFirebase user Authentication\nForget the password\nEmail Verification\nFirebase real time database\nOne on one chat\nGroup chat\n\n\nWho this course is for:\nAnyone who wants to learn how to create native view mobile app with Vue JS & Firebase\nAnyone who wants to learn Vue JS and Firebase\nAnyone who wants to learn about Authentication in Vue JS apps\nAnyone who wants to learn how to use Firebase in their real time applications",
      "target_audience": [
        "You are interested in building a state-of-the-art iOS and Anrdoid applications",
        "You are looking for the best back-end which can help to create a real time application",
        "You are looking for the framework which is much easier than Angular or React"
      ]
    },
    {
      "title": "Dart and Flutter 3 Bootcamp: Build Apps for Any Screen!",
      "url": "https://www.udemy.com/course/dart-and-flutter-3-bootcamp-build-apps-for-any-screen/",
      "bio": "Learn to use the powerful Dart and Flutter libraries to create mobile, desktop, and web applications!",
      "objectives": [
        "Gain a thorough understanding of the Dart programming language, its syntax, features, and tools for developing applications.",
        "Learn the Flutter framework, including its architecture, widgets, components, and tools for building beautiful, responsive, and native-like user interfaces.",
        "Build real-world applications from start to finish using Dart and Flutter, including building layouts, managing state, handling user input, and fetching data fr",
        "Understand best practices for building scalable, maintainable, and high-quality Flutter applications.",
        "Build applications that run seamlessly on multiple platforms, including iOS, Android, and the web.",
        "Develop practical skills in using Flutter's widgets and components to create beautiful and engaging user interfaces.",
        "Implement animations and transitions in your applications to enhance the user experience.",
        "Develop a portfolio of applications that you can showcase to potential clients or employers to demonstrate your skills in Dart and Flutter."
      ],
      "course_content": {
        "Introduction": [
          "COURSE FILE DOWNLOAD. READ ME PLEASE!"
        ],
        "What is Dart and the Flutter Framework?": [
          "Overview of Flutter and Dart",
          "DartPad Overview"
        ],
        "Basics of Dart Programming Language": [
          "Basic Math with Dart",
          "Overview of Data Types in Dart",
          "Numbers",
          "Exercise: Numbers",
          "Strings",
          "Exercise: Strings",
          "Booleans",
          "Lists",
          "Exercise: Lists",
          "Sets",
          "Sets - Exercise",
          "Maps",
          "Maps - Exercise",
          "Arithmetic Operators",
          "Comparison Operators",
          "Logical Operators",
          "const and final",
          "static and dynamic"
        ],
        "Control Flow with Dart": [
          "Introduction to Control Flow",
          "If-Else Statements",
          "Exercise: If-Else Statements",
          "For Loops - Part One",
          "For Loops - Part Two",
          "Exercise: For Loops",
          "While Loops",
          "Exercise: While Loops",
          "Break and Continue",
          "Switch and Case"
        ],
        "Functions with Dart": [
          "Introduction to Dart Functions",
          "Creating a Basic Function",
          "Return Keyword",
          "Parameters and Arguments",
          "Parameters and Arguments: Exercise",
          "Control Flow with Functions",
          "Scope and Nested Functions",
          "Arrow Notation",
          "Function Exercises - Part One",
          "Function Exercises - Part Two"
        ],
        "Classes in Dart": [
          "Introduction to Classes",
          "Creating a Class",
          "Constructors",
          "Class Creation - Exercise and Solution",
          "Inheritance in Classes",
          "Inheritance Exercise",
          "Mixins",
          "enum"
        ],
        "Flutter Basics": [
          "Introduction to Flutter",
          "Flutter Architecture",
          "Flutter and Dart Windows Installation",
          "VS Code Setup for Flutter",
          "Emulator Connection to VS Code",
          "Widgets and Layouts",
          "Text Widget",
          "MaterialApp and Scaffold",
          "Stateless Widget",
          "Basic Gestures - Part One",
          "Basic Gestures - Part Two",
          "Roadmap to To-Do List App",
          "Rows and Columns",
          "Background Container",
          "Stateful Widget - Part One",
          "Stateful Widget - Part Two",
          "TextField",
          "DialogBox and showDialog",
          "ListView",
          "ListView.builder",
          "To Do List - Version One",
          "To Do List - Version Two"
        ],
        "Extra Dart Topics": [
          "Introduction to Extra Dart Topics",
          "Null Safety",
          "Null Aware Operators",
          "Late Keyword",
          "Ternary Operator"
        ],
        "Navigation and Multiple Screens": [
          "Section Overview",
          "Navigation and Routes Overview",
          "Deep Dive into BuildContext",
          "Navigator",
          "Drawer",
          "Drawer with Navigation",
          "Send Data to Screen",
          "Return Data to Previous Screen",
          "Expanded ToDo List Application - Part One",
          "Expanded ToDo List Application - Part Two",
          "Expanded ToDo List Application - Part Three",
          "Expanded ToDo List Application - Part Four",
          "A Note on Go Router Package"
        ],
        "Forms and Persistence": [
          "Forms and Persistence Overview",
          "Form Inputs and Styling",
          "Focus on Form Fields",
          "Change Handling",
          "Grab Form Values",
          "Forms and Validation",
          "Error Handling",
          "Understanding Async",
          "Reading and Writing to Disk",
          "Storing Form Data"
        ]
      },
      "requirements": [
        "No programming experience needed, just make sure you feel comfortable installing software on to your computer."
      ],
      "description": "Welcome to the most comprehensive Dart and Flutter course online, where you'll learn everything you need to know to build amazing applications across multiple platforms!\nWhether you're a seasoned programmer or a complete beginner, this course will provide you with a solid foundation in Dart programming language and Flutter framework. You'll learn how to build beautiful, responsive, and scalable applications for iOS, Android, Desktop, and the web, using Flutter's powerful widgets and components.\nIn this course, you'll get hands-on experience creating real-world applications from start to finish, with step-by-step guidance from expert instructors. You'll learn how to use Dart's syntax and features to write clean and efficient code, and how to leverage Flutter's widgets and components to create beautiful and engaging user interfaces.\nBy the end of the course, you'll have a deep understanding of Dart and Flutter, and the skills to build robust applications that run seamlessly on multiple platforms. You'll also have a portfolio of projects to showcase your skills and impress potential clients or employers.\nHere's what you can expect to learn in this course:\n\n\nAn introduction to Dart programming language and Flutter framework\nHow to set up your development environment and get started with Flutter\nBuilding your first Flutter application\nUnderstanding Flutter widgets and components\nCreating beautiful and responsive user interfaces\nBuilding layouts with Flutter's widget tree\nNavigating between screens and managing state in Flutter\nFetching data from APIs and displaying it in your application\nHandling user input and managing forms in Flutter\nUsing animations and transitions to enhance the user experience\nBuilding native-like applications for iOS, Android, and the web\nBest practices for building scalable and maintainable Flutter applications\nThis course is designed for anyone who wants to learn Dart and Flutter from scratch, or for those who want to improve their existing skills. Whether you're a beginner or an experienced developer, this course will provide you with the knowledge and practical skills you need to build amazing applications.\nEnrolling in this course also gives you access to a community of learners and instructors who are passionate about Flutter and are always ready to help. You'll be able to ask questions, share your projects, and get feedback from other learners and instructors.\nSo why wait? Enroll in this course today and take the first step towards becoming a proficient and in-demand developer. With our 30-day money-back guarantee, there's no risk involved. Start learning Dart and Flutter today and unlock your full potential as a developer!",
      "target_audience": [
        "Beginner developers who want to develop mobile, web, and desktop apps with a single language and framework!"
      ]
    },
    {
      "title": "How to Make a Freaking Android App",
      "url": "https://www.udemy.com/course/how-to-make-a-freaking-android-app/",
      "bio": "Make apps for Android M - Marshmallow, using Android Studio for Mac or Windows. You will also learn Java programming!",
      "objectives": [
        "Create fully functioning Android Apps",
        "Write basic Java code",
        "Have fun programming!"
      ],
      "course_content": {
        "Welcome and Setup": [
          "Welcome!",
          "Mac Setup",
          "Windows Setup",
          "Your First Quiz",
          "Outro / Dance Celebration"
        ],
        "Java School": [
          "Intro",
          "Your First App",
          "Setup",
          "Strings and Ints",
          "Print",
          "Variables",
          "Comments",
          "Booleans and If Statements",
          "Arrays",
          "Loops",
          "Study Break",
          "Functions",
          "Classes",
          "Java School Quiz",
          "Graduation/Outro"
        ],
        "App 1 - Tip Calc": [
          "Intro",
          "Sketch",
          "Layouts",
          "Layout Polish",
          "Connecting Worlds",
          "CONNECT ALL THE THINGS",
          "Working with Buttons",
          "DRY Programming",
          "Challenge",
          "Tip Calc Quiz",
          "Outro/Dance Party"
        ],
        "App 2 - Resume": [
          "Intro",
          "Sketch",
          "Layout",
          "Adding An Image",
          "Moving to a New Activity",
          "ScrollView",
          "Calls and Email",
          "Challenge",
          "Resume Quiz",
          "Outro/Mullet Dancing"
        ],
        "App 3 - Dream Team": [
          "Intro",
          "Sketch",
          "ListViews",
          "Responding to ListView Taps",
          "Passing Info to Another Activity",
          "Show the Name",
          "Fill in the Stats",
          "Setting the Image Programmatically",
          "Challenge",
          "Quizer?",
          "Outro/Celebration"
        ],
        "Bonus": [
          "Bonus Lecture: Coupons!",
          "Thanks!"
        ]
      },
      "requirements": [
        "You will need a Windows or Mac computer. Either works.",
        "No programming experience required for this course. Welcome n00bs!"
      ],
      "description": "Join Udemy's most fun class and learn how to make your own freaking Android apps! No prior programming experience necessary.\nWe run through every single step from installing Android Studio (the program we use to make apps) down to making apps 3 complete apps. And we'll never talk over your head. We've experienced the harsh reality of complicated and wordy tutorials and online classes. This class is what we wish we'd had when we were first learning to make apps. It's the first class to break everything down to the level that is perfect for \"newbies\" so that you never feel lost, and can excel and learn quickly.\nWho is this class for?\n\nPeople who want to make apps. We will not be teaching wordy or complicated computer science philosophies. We'll cover how to make apps that you can play with, share with friends & family, and offer to the world!\nBeginners. You don't need any programming experience to take this class. We've been the absolute beginners before and want to help you.\nPeople who like to have fun, you might see a mullet or two in this class :)\nEntrepreneurs who have an idea for an app. Don't pay somebody thousands to build your app. Do it yourself. Having the ability to create something you can think of is extremely powerful.",
      "target_audience": [
        "This Android course is meant for those who want to learn Android programming in a fun way.",
        "If you have little to no programming experience, this course is for you.",
        "This course will not be a good fit for those wanting advanced Android topics and a boring instructor."
      ]
    },
    {
      "title": "Mobile App Development with Android (2015)",
      "url": "https://www.udemy.com/course/mobile-app-development-with-android-2015/",
      "bio": "You'll create a real world social networking application! All of Android's core concepts in a production level project!",
      "objectives": [
        "Work comfortably with Android Studio and the Android build tools",
        "Understand the challenges and solutions to common problems that crop up in production quality Android development",
        "Work with live APIs, including uploading images and handling authentication",
        "Handle the Android application lifecycle correctly, and in a standard way",
        "Leverage OO design patterns to simplify development",
        "Have the experience and knowledge to to build production quality social networking applications"
      ],
      "course_content": {
        "Introduction to Android Development": [
          "Introduction",
          "Setting up your Development Environment",
          "Android Quickstart",
          "SDK Overview",
          "The Android Build System",
          "Android Project Directory Structure",
          "Extending the Build process with Flavors",
          "Activities from Scratch and Linear Layouts",
          "Click Handles and Inner Classes",
          "Relative Views",
          "Layout Includes",
          "Activity Lifecycle Part 1",
          "Activity Lifecycle Part 2",
          "Activity Lifecycle Part 3"
        ],
        "Beginning our Application": [
          "[App 01] - The Application Class (and other odds and ends)",
          "[App 02] - Using GIT with Android Studio",
          "[App 03] - A Soft Introduction to Fragments",
          "[App 04] - Communicating with Fragments",
          "[App 05] - Register Activity Stubs"
        ],
        "Action Bars and Navigation Drawers": [
          "Action Bars - Introduction",
          "Action Bars - AppCompat and Material Design",
          "Action Bars - Basic Buttons",
          "Action Bars - Checkboxes, Radio Buttons, and Groups",
          "Action Bars - Fragments - Part 1",
          "Action Bars - Fragments - Part 2",
          "Action Bars - Custom Views",
          "Action Bars - Custom Themes",
          "Toolbars",
          "Nav Drawers - Part 1",
          "Nav Drawers - Part 2"
        ],
        "Top Level Navigation and Profile Activity": [
          "[App 06] - Integrating Toolbars",
          "[App 07] - Nav Drawer Integration Stub",
          "[App 08] - Nav Drawer Implementation",
          "[App 09] - Nav Drawer Layouts",
          "[App 10] - Nav Drawer Fix and Top Level Activities",
          "[App 11] - Top Level Activity Animations",
          "[App 12] - Profile - Layout",
          "[App 13] - Profile - Choosing Images",
          "[App 14] - Profile - Editing Fields",
          "[App 15] - Profile - Change Password Dialog"
        ],
        "Event Bus and Service Layer": [
          "Introduction to Otto",
          "[App 16] - Service Layer - Adding Otto",
          "[App 17] - Service Layer - Handling Events",
          "[App 18] - Service Layer - In Memory Service Intro",
          "[App 19] - Service Layer - In Memory Service Base",
          "[App 20] - Login and Register API Calls",
          "[App 21] - Fake Login and Register API",
          "[App 22] - Finishing our Login and Register Activities",
          "[App 23] - Auto Login"
        ],
        "List Views": [
          "List Views - Basic Usage",
          "List Views - Custom Layouts",
          "List Views - Custom Adapters",
          "List Views - Selecting Items",
          "List Views - Select Items Part 2",
          "List Views - Contextual Action Bar"
        ],
        "Contact Activities": [
          "[App 24] - Contacts Activity - API",
          "[App 25] - Contacts Activity - Stubs",
          "[App 26] - Action Scheduler",
          "[App 27] - Contacts Activity",
          "[App 28] - Activity Lifecycle Bus Bug",
          "[App 29] - Pending Contact Requests",
          "[App 30] - Contact List",
          "Recycler View - Crash Course",
          "[App 31] - Messages Recyclerview Adapter",
          "[App 32] - Sent Messages Activity",
          "[App 33] - Contact Activity",
          "[App 34] - Add Contact Activity",
          "[App 35] - Serialization in Android - Parcelable",
          "[App 36] - Select Contact Activity"
        ],
        "Camera API and Send Message Activity": [
          "[App 37] - Camera Preview",
          "[App 38] - New Message Activity",
          "[App 39] - Send Message API",
          "[App 40] - Send Message Layout",
          "[App 41] - Finishing our Send Message Activity"
        ],
        "Inbox and Message Display Activities": [
          "[App 42] - Quick Tweaks",
          "[App 43] - Service Layer Tweaks",
          "[App 44] - Main Activity - Part 1 - Supporting Code",
          "[App 45] - Main Activity - Part 2 - Implementation",
          "[App 46] - Main Activity - Part 3 - Inbox Adapter",
          "[App 47] - Main Activity - Part 4 - Wrapping Up",
          "[App 48] - Message Activity"
        ],
        "Hooking up the Live Web API": [
          "Retrofit Crash Course",
          "[App 49] - Live Services Infrastructure",
          "[App 50] - Live Service - Account",
          "[App 51] - Live Service - Contacts",
          "[App 52] - Live Service - Messages"
        ]
      },
      "requirements": [
        "Willingness to learn design patterns and proper usage of an OO language",
        "Basic programming ability, especially in a similar, statically typed language, such as C# or C++",
        "All software is explained and installed on video"
      ],
      "description": "ZERO TO HERO ANDROID APPLICATION TRAINING\n******** 30 Day, Money Back Guarantee!********\nIn this series, you'll be introduced to all of the core concepts involved with building Android applications. Furthermore: you'll apply those concepts to build a real world social networking application that allows users to send their friends pictures, taken with the camera on their phone, complete with funny messages that can be decoded to your actual text message!\nAction Bars\nNavigation Drawers\nEvent Buses\nList Views\nService Layers\nCamera and Web API's\nPush Notifications\nExternal Logins\nA full background with production level code\nOver 40 hours of training!\n******** That's not all!!********\nYou'll also get access to your own personal sandbox for your web server, courtesy of us. As well as access to the *ENTIRE SOURCE CODE in a Git repository, labeled by lesson! You'll get to see not only the code, but the corrections that occur in production along the way!\nIf you've wanted to program for Android, This is the course to build the solid foundation and skills you need to take you anywhere you want to go in the Android world.\nWe've structured this course to provide a solid grounding in concept, followed by the application of that concept within an actual app so you can put what you learn to practice immediately in a real-world context!\n*Use of sandbox and source code for personal, educational use only. Use of either service for commercial purposes is strictly forbidden.",
      "target_audience": [
        "Beginner to advanced programmers",
        "Experience in Java is not required, especially if the student already knows a similar language such as C#",
        "Experience in Android, or any other mobile platform, is not required - we cover everything required to get set up in a modern development environment!"
      ]
    },
    {
      "title": "Create Apps on Your iPad - Swift Playgrounds for Beginners",
      "url": "https://www.udemy.com/course/swift-playgrounds-for-beginners-create-apps-on-your-ipad/",
      "bio": "Learn Swift and SwiftUI to Create Amazing Apps That You Will Submit to the App Store. All on Your iPad!",
      "objectives": [
        "Make apps on your iPad",
        "Submit an App to the App Store",
        "Make apps using SwiftUI",
        "Create a Sunrise/Sunset app",
        "Create a Text Manipulation app"
      ],
      "course_content": {},
      "requirements": [
        "An iPad",
        "Some Swift experience. The Playgrounds app is perfect to learn the basics if you are new"
      ],
      "description": "Apple has upgraded their Playgrounds iPad to now allow you to make apps! Using SwiftUI, Apple's new design framework, you can design and code apps all on your iPad. You can even submit your apps to the App Store using playgrounds so that you can share your app creations with the world.\nIn this course, I will take you from beginner to making several apps and even walk you through submitting your app to the App Store. We start the course first by helping you to develop a base in SwiftUI. SwiftUI makes it incredibly simple to design apps on the fly and see your tweaks and changes in real time! Once we have a good grasp on SwiftUI, we'll move on to making 2 apps.\nThe first app is Choppy Copy. A Text Modifier app that allows someone to quickly change the capitalization on text and copy it to the clipboard. We'll then create Sun Fun, an app that lets you find the sunrise and sunset times for any location in the world on any day! You'll learn how to work with Maps and Calendars/Dates with this app.\nFinally, we'll take our Sun Fun course and submit it to the App Store.\nFeel free to take a free preview of this course to see if it's a good fit for you. I am so confident that you will love my course. You have nothing to lose, so come join me and let's get started!",
      "target_audience": [
        "iPad owners who want to make apps!"
      ]
    },
    {
      "title": "Google Maps SDK for Android with Kotlin | Masterclass",
      "url": "https://www.udemy.com/course/google-maps-sdk-for-android-with-kotlin-masterclass/",
      "bio": "Learn Google Maps SDK for Android. And also Create Distance Tracker App for tracking users location from a background.",
      "objectives": [
        "Google Maps API",
        "Google Maps SDK for Android",
        "Connect the Project with Google Cloud Platform",
        "Generate Maps SDK API Keys",
        "Add Custom Map Style",
        "Change Map Type",
        "Add Map Padding",
        "Work with Controls and Gestures",
        "Change Map Camera Position",
        "Animate Camera Movement",
        "Zoom in/out on the Map",
        "Rotate the Map",
        "Tilt the Map",
        "Show Buildings in 3D",
        "Setting Boundaries on the Map",
        "Restrict Camera Viewport",
        "Handle Map Events",
        "Draw Markers",
        "Draw Polylines",
        "Draw Polygons",
        "Draw Circles",
        "Shape Customization",
        "Ground Overlay",
        "Maps SDK Utility Library",
        "GEOJson",
        "Draw Heatmaps",
        "Add Marker Clusters",
        "Calculate the Distance on the Map",
        "Service",
        "Foreground Service",
        "Location Permissions",
        "Background Permissions",
        "Run-time permissions",
        "Easy Permissions Library",
        "My Location Layer on Google Maps",
        "Locate your Device with One Click",
        "Get Users Last Known Location",
        "Create Notification",
        "Push Notification Updates",
        "Navigation Component",
        "Data Binding",
        "Dependency Injection",
        "Dagger-Hilt",
        "Create Distance Tracker Application"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of Kotlin programming language",
        "Knowledge of Android Architecture Components is a Plus",
        "Motivation to Improve your Skills"
      ],
      "description": "Hello there and welcome to my course, In this course I'm going to teach you how to implement Google Maps SDK for Android using the power of Kotlin programming language.\nWe are going to start this course by introducing with Google Maps SDK, you will first learn how to connect your Android Studio project with Google Cloud Platform. After that we will go through the process of generating Debug and Release API Keys in order to enable Google Maps SDK in our project.\nThen I'm going to show you how to enable/disable certain Map controls like compass, zoom in/out controls, my location button and more. Also how to enable/disable map gestures like scrolling zooming, tilting, rotating and so on.\nAfter that we will go through to process of choosing and applying different Map Types and Styles. You will learn how to apply dark and light map styles to your app.\nYou will learn how to animate Maps camera movement, how to Animate zoom levels, how to handle single click and long click events, how to place markers and drag them on the map. Then how to customize markers, and info windows as well.\nAlso you'll learn how to add different shapes to your Google Map like Polyline, Polygons, Circles, Overlays and basically everything you'll even need!\n\n\nSo Only after we get fully introduced with most of Google Maps features, we are going to start and build a real Android application. Our app will be called Distance Tracker, and as the name suggests, we will create an app which will be able to track our users location and track the distance which user travels. Our application will use Foreground Service and it will track users location even from a background when we kill our app. Bottom line, you will be able to  track how many kilometers have you traveled and how much time it took.\nIn this course you will not learn just how to use Google Maps SDK, but also how to handle Run-time permissions, and the best practice of requesting those permissions sequentially as the newest Android API requires.\nAlso our application will use Foreground service with a non-removable Notification which will always stay on the top. Unless we stop and kill our foreground service. Now this is not the course where you will just learn the theory, this is the course where you are going to combine theory with practice and create a real android application to put all your knowledge which you gathered throughout this course together.\nSo bottom line, the level of knowledge you will get from this course, depends on how much effort you put into watching and practicing with this course.\nSo what are you waiting for, let's get started Developers!",
      "target_audience": [
        "Android Developers",
        "Android Programmers",
        "Mobile Developers",
        "Mobile Designers",
        "Programmers",
        "Kotlin Developers",
        "Kotlin Programmers"
      ]
    },
    {
      "title": "Augmented Reality AR with Unity & Vuforia for Android & iOS",
      "url": "https://www.udemy.com/course/augmented-reality-ar-with-unity-vuforia-for-android-ios/",
      "bio": "Create 10 Augmented Reality Apps (AR) with Unity and Vuforia for Android and iOS quickly & easily (course for everyone)",
      "objectives": [
        "To Create Augmented Reality Apps for Android and iOS (AR) with Unity and Vuforia",
        "To Use the Image Targets in Unity with Vuforia",
        "To Use the User Defined Image Targets in Unity with Vuforia",
        "To Use the Cylindrical Targets in Unity with Vuforia",
        "To Use the Ground Plane in Unity with Vuforia",
        "To Import 3D models and characters into AR apps in Unity",
        "To Project videos into a virtual TV with Augmented Reality",
        "The fundamental foundations of Augmented Reality (the technology of the future!)",
        "Make life-sized cars appear in the middle of the road with Augmented Reality"
      ],
      "course_content": {},
      "requirements": [
        "Own a computer with Windows, Mac or Linux",
        "Have an internet connection",
        "A cylindrical object about 5 cm in diameter and 23 cm in height (like a spray can of deodorant)",
        "A printer or alternatively a tablet on which to project images... the use of the printer is still recommended",
        "Willingness to learn new things and improve oneself",
        "Curiosity and passion for new technologies"
      ],
      "description": "Welcome to the Augmented Reality course that will teach you Unity and Vuforia taking you from zero to hero!\nWith this course you will learn how to use Vuforia technology with Unity and therefore to create Augmented Reality apps (also called AR apps) on phones with Android and iOS operating systems.\nWe will build 10 different applications with which we will see the main tools available with Vuforia for augmented reality, such as:\nThe Image Target\nUser Defined Image Target\nCylindrical Target\nGround Plane\nMid Air\nAR with videos and Chroma Key\nAR and virtual windows overlooking other worlds!\nand many other techniques that will allow you to create incredibly realistic applications in which the reality of the phone camera will merge with the three-dimensional fantasy offered by the powerful Unity.\nThis is a course for everyone, both for those who already know Unity but would like to expand their skills and for those approaching the world of apps and Unity for the first time. Each topic will be explained in detail and everything done during the course will be created and tested together, nothing will be left to chance and nothing will be taken for granted.\nIf you want to improve your knowledge and therefore also your resume or simply want to create a new hobbie this is the course for you, sign up now, I'm sure you won't regret it ... and if for any reason you won't be satisfied with your purchase you will have the guarantee of  \"money back\" within 30 days of purchase ... what more could you ask for?\nI'll see you in class...\nCiao and Happy Learning!",
      "target_audience": [
        "Anyone who wants to learn the basics of Augmented Reality (AR)",
        "Anyone who wants to learn how to use Unity to create AR Apps",
        "Anyone who already uses Unity but wants to learn more about it",
        "Anyone who wants to improve their resume and their knowledge"
      ]
    },
    {
      "title": "Intelligent Mobile Apps with Ionic and API.AI (DialogFlow)",
      "url": "https://www.udemy.com/course/intelligent-mobile-apps-with-ionic-and-apiai-dialogflow/",
      "bio": "Build an intelligent app that understands what you say and talks back using Ionic Framework and API.AI (now DialogFlow).",
      "objectives": [
        "Build mobile apps for Android, iOS and Windows",
        "Build apps that can understand natural language",
        "Build apps that can respond back with answers",
        "Build apps that can think and make decisions",
        "Build apps that can talk/converse",
        "Build truly cross platform hybrid mobile apps with Ionic Framework"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Introduction to Ionic",
          "Introduction to API.AI"
        ],
        "Ionic Framework Basics": [
          "Getting Started with Ionic",
          "Creating an App",
          "Running the App in the Browser",
          "Running the App in the Emulator"
        ],
        "API.AI (DialogFlow) Basics": [
          "Creating an Account",
          "Agents in API.AI",
          "Intents and Entities",
          "Fulfillment and Webhooks",
          "Pre-built Agents and Small Talk"
        ],
        "Building the App User Interface": [
          "Building the App UI - 1",
          "Building the App UI - 2",
          "Building the App UI - 3"
        ],
        "Integration with API.AI": [
          "Installing the Cordova Plugin",
          "Initializing the API.AI Plugin",
          "Sending the First Message to API.AI",
          "Sending and Displaying Messages",
          "Displaying Received Messages",
          "Using Voice to Send Messages",
          "Using Text to Speech",
          "Minor Improvements in the App"
        ],
        "Fulfillment with Webhooks": [
          "Introduction to Cloud9",
          "Creating C9 Project and Installing Modules",
          "Writing the Server Code",
          "Sending Responses to API.AI",
          "IonicAI So Far",
          "Using Now to Host Server Code",
          "Using ngrok to Run Server Code"
        ],
        "The Intelligent Calculator": [
          "Creating Calculator - Add Intent",
          "Creating Calculator - Add Server Code",
          "Creating Calculator - Subtraction Intent and Server Code",
          "Creating Calculator - Multiplication and Division",
          "Creating Calculator - Testing Everything So Far"
        ],
        "Weather Information Bot": [
          "Weather Information - Create Intent",
          "Weather Information - OpenWeatherMap Introduction",
          "Weather Information - Request and Response",
          "Weather Information - Testing IonicAI"
        ]
      },
      "requirements": [
        "Basic of Ionic Framework and Angular",
        "Basic Knowledge of HTML, CSS and JavaScript",
        "Knowledge of OOP Concepts would be an added advantage",
        "Basic Knowledge of TypeScript",
        "Basic Knowledge of APIs and HTTP Verbs"
      ],
      "description": "This course will teach you all about creating intelligent mobile apps that can understand your natural language and can take actions based on that. You can program your apps to do a number of tasks. From doing simple calculations to performing complex operations, your apps can d it all.\nYour apps will work on Android, iOS and Windows, thanks to the amazing Ionic Framework.\nSo, you will be writing code once and you can generate different projects for Android, iOS and Windows.\nYou will learn to use API.AI (now known as DialogFlow) and will use the amazing intelligence engine of API.AI to power your app. You app will depend on API.AI for processing the users' natural language (speech and text) and will respond back to the user in the way you want.\nYour app will be capable of understanding voice as well as text inputs. So a simple phrase like, \"Hey, can you add 1265 and 6567?\" will make your app do this calculation for you and it will come back with an answer. Not only that, your app will be capable enough to have conversations with you.\nIt will respond to messages like, \"How are you?\" and \"Where have you been?\". By the end, your app will inform your of the weather for your city if you ask for it like, \"How is the weather in New York City?\". All thanks to API.AI.\nTo proceed with this course you are recommended to have basic knowledge of building apps with Ionic and Angular. We will be using TypeScript all along to build the app, so knowledge of TypeScript is also advised. Even if you are complete beginner, you can take the course but you might feel the rush in the beginning. A basics course on Ionic Framework is advised for complete beginners.\nHere is an overview of the whole course.\nWe will start by understanding a few basics of Ionic and then API.AI.\nWe will then proceed to building the App UI and then integrate the App with API.AI. This will open doors to a whole new world of possibilities.\nWe will learn how to add a feature to our API.AI Agent and use it in the app.\nWe will implement voice recognition and text-to-speech in the app so the app can actually talk to the user.\nThen, we will add functionalities of a calculator to the app.\nFinally, we will conclude the app by hooking it up to a weather API so the app can provide the weather details for any city in the world.\nSound exciting? Let's get started!",
      "target_audience": [
        "Students and Professionals willing to build intelligent Apps/Bots",
        "Web Devs who are willing to expand their skills",
        "Professionals who have web skills and want to build mobile apps",
        "Students, Individuals, Devs who want to learn to build Artificially Intelligent Apps",
        "Devs who wish to save time by building Hybrid Apps",
        "Anyone who wants to learn APIAI (DialogFlow)",
        "Tech Architects who want to learn to use APIAI"
      ]
    },
    {
      "title": "Develop Full iOS Instagram Clone App in Swift & Xcode",
      "url": "https://www.udemy.com/course/create-instagram-swift-xcode/",
      "bio": "Best Swift Course Ever | Build Complete Instagram Clone | All Features & Functionalities | Build Your iOS Social Network",
      "objectives": [
        "Create a real full Instagram app ready-to-publish in App Store",
        "Be able to create your own social app",
        "Be able to realize your idea",
        "Be able to create twitter, flickr, tumbler, vine, mamba, etc",
        "Code user interface and let it work exactly same as Instagram",
        "Learn how to create Chat App",
        "How to register user",
        "How to login",
        "How to logout",
        "Remember logged in user, as logged in",
        "Reset password to registered email",
        "Receive confirmation email of registration",
        "Create regular expressions \"regex\"",
        "Receive informations from server",
        "Send informations to server",
        "Make programmatically constraints and adjust your app for all devices",
        "Make programmatically alignment for all screen sizes",
        "Learn designing step by step",
        "Learn logic of designs",
        "Design your app",
        "Design buttons",
        "Work with custom fonts",
        "Customize your app",
        "Design icons",
        "Create #hashtags in app, working exactly same as in Instagram",
        "Create @mentions in app, working exactly same as in Instagram",
        "Give likes, exactly same as in Instagram",
        "Double tap on picture to like it",
        "Dislike if you want",
        "Create chat function",
        "Create home page of user",
        "See your posts in your home page",
        "Go to some certain post by tapping on it",
        "Write comments under posts",
        "Complain comments or posts",
        "Delete posts IF post belongs to you",
        "Delete comments IF comment belongs to you or written under your post",
        "See all your followers and people you are following",
        "Follow and unfollow people",
        "Go guest - go to home page of other users, and see their information, posts, etc",
        "Be able to edit your personal and private information",
        "Upload a pictures",
        "Make a posts",
        "Pagination function - additionally downloads more data from server depending on your scrolling",
        "Be able to go to certain #hashtag",
        "See all #hashtagged posts",
        "See posts of all people you are following",
        "Search users not only by username, but also by full-name and see most popular of them",
        "Receive news feed notifications",
        "See who liked your post, who commented your post, who followed you, who @mentioned you",
        "Show date of your post or comment you made",
        "and many many more!"
      ],
      "course_content": {
        "Introduction to Course or First Steps To Become a Professional": [
          "Swift 5 Update",
          "Softwares",
          "Important Message"
        ],
        "No Parse Account? Not a Problem!": [
          "Introduction to Heroku",
          "Parse SDK",
          "Heroku Server by using Parse Code",
          "Saving Data in Server",
          "Getting Data from Server",
          "SERVER COMMUNICATION"
        ],
        "Instagram Users: sign up, login, reset password, designing, alignment": [
          "Decided to go with Heroku or Back4App?",
          "Connecting App to Parse. Parse Users Only",
          "Sign In. Creating User Interface",
          "Sign Up. Creating User Interface",
          "Sign Up. Coding User Interface",
          "Sign Up. Selecting Profile Picture",
          "Sign Up. Sending User Information to Server",
          "Login",
          "Reset Password",
          "Sign In and Sign Up. Alignment",
          "Reset Password. Alignment",
          "Designing App. First Steps",
          "Receive Users Registration Confirmation Email",
          "SCROLL VIEW"
        ],
        "Creating Home profile Page of Logged-in User exactly as in instagram": [
          "Home Page. Creating User Interface",
          "Home Page. Receive User Information from Server",
          "Home Page. Receive User Posts from the Server",
          "Home Page. Counting Statistics: total Posts, total Followers, total Followings",
          "Home Page. Tapping Statistic Labels",
          "ARRAY",
          "Want to be Ultra-Advance Developer?"
        ],
        "Creating Followers and Following Users Page": [
          "Followers Page. Load followers and following users",
          "Followers Page. Coding User Interface",
          "Followers Page. Follow or Unfollow Users",
          "STRING"
        ],
        "Going Guest to some User": [
          "Guest Page. Creating User Interface. Loading Guest's Posts",
          "Guest Page. Receive Guest's Information",
          "Guest Page. Tapping Statistics Labels",
          "Guest Page. Going Guest",
          "Guest Page. Follow or Unfollow Guest",
          "Home Page. Logout",
          "Home Page and Guest Page. Alignment",
          "Followers Page. Alignment",
          "array.removeLast()"
        ],
        "Editing Users Information": [
          "Edit Profile. Creating User Interface and Alignment",
          "Edit Profile. Coding User Interface",
          "Edit Profile. Receive User Information",
          "Edit Profile. Regex for email and web",
          "Edit Profile. Sending New Information to Server",
          "REGEX"
        ],
        "Making Post": [
          "Upload Page. Creating User Interface and Alignment",
          "Upload Page. Coding User Interface",
          "Upload Page. Make Post",
          "Upload Page. Reseting User Interface",
          "RESET UI"
        ],
        "Pagination": [
          "Pagination",
          "PAGINATION"
        ],
        "Going to Certain Post's Page": [
          "Post Page. Creating User Interface",
          "Post Page. Coding User Interface",
          "Post Page. Showing Date and Time of Post",
          "Post Page. Go to Post",
          "Post Page. Dynamic Cell. Vertical Constraints",
          "Post Page. Dynamic Cell. Horizontal Constraints",
          "Designing Like, Comments and More buttons",
          "Designing Navigation Controller and Tab Bar",
          "Upload Page. Alignment Update",
          "Designing Icons for Home and Upload Pages",
          "Post Page. Like Function with Button",
          "Post Page. Like with Double Tap",
          "Post Page. Click Username to go Guest",
          "UUID"
        ]
      },
      "requirements": [
        "You need only Mac OS"
      ],
      "description": "Are you here because you want to build your own iOS apps?\nSo, you are in the right place at the right time!\nYou want to create Complete Full Instagram Clone, or maybe Twitter, Facebook, Flickr, Tumblr or WhatsApp?\nYou tired from courses that don't make you professional at completion and don't give you what you've expected.\nWHY EXACTLY ME:\nMy name's Akhmed. I am the creator of most popular coding courses, like:\n- Develop Full iOS Facebook Clone App in Swift, Xcode and PHP\n- The Complete iOS Development Course. Swift Programming A-Z\n- Develop Full iOS Twitter Clone App in Swift & Custom Backend\n- Develop Full iOS Instagram Clone App in Swift & Xcode\nTHIS COURSE WILL CHANGE YOUR LIFE!\nWhat we're creating?\nWe will create Complete Social App Ready-To-Publich in AppStore, that can bring you side income. At the completion of the course, you will get all knowledges of social apps creation, building strong logics of app, app customization, app designing, social app features programming and many many many more.\nThis course will move you to the highest level of programming and development. You will learn all the features that never been shown before.\n⭐️⭐️⭐️⭐️⭐️\"Akhmed's courses really changed my life! Thank you, Akhmed.\" - M. Ellington\n⭐️⭐️⭐️⭐️⭐️\"Akhmed knows what should be covered. Additionally he knows how to present it in easiest way. The only courses I can recommend are the Akhmed's. With his courses you always stay satisfied and all expectations are fulfilled.\" - F. Täsler.\nProgramming knowledges?\nYou don't need to have any programming knowledges, I will teach you all from scratch.\nWe will program our project in most professional manner, avoiding all bugs, mistakes and error, to let it work smoothly as it should be working.\nI write comments for each code line. I explain you each line of code in easiest way, so you will remember it always.\n⭐️⭐️⭐️⭐️⭐️\"Before this course I did not have any programming knowledge. But at completion of this course I got all I need. Now I can create any app I have in my mind. I am working now on my own projects that I will release soon. Thank you!\" - O. Burak\n⭐️⭐️⭐️⭐️⭐️\"I never though I could learn programming. But with Akhmed I did it.\" - H. Bjorn\nWhat teaches this course?\nFull Swift language\nBecoming iOS Professional Programmer\nCreate Full Instagram Clone that nobody can distinguish from real Instagram\nLearn all and complete features that should have any social app\nWork with backend server\nBuild application that communicates with server\nCreate correct database structure\nBuild strong app logic\nCreate outstanding app designs\nCreate professional UI and UX\nDeep programming\nAll programming tricks\n⭐️⭐️⭐️⭐️⭐️\"I though it would be very difficult for me, as I don't have any programming knowledge. But Akhmed's explaining complicated things in easiest way, so I understand easily.\" - O. Kumar\n⭐️⭐️⭐️⭐️⭐️\"This was one of the best and most comprehensive tutorials that I have purchased on Udemy. I must say again that the instructor went out of his way to make one of the most comprehensive tutorials, incorporating in abundance a wide array of professional topics comma, that will surely take the student right from beginner to Advanced in a short amount of time. All you need is the time to watch the tutorials and you will be well served weather ultimate goal is to score a job in the tech industry or develop your own app for profit.\" - G. Harrison\nHow we design?\nAdditionally you'll learn professional app designing. Learn how to fully customize app in way you like. I teach you how to work with shapes and make awesome designs for your app\nWork with custom fonts\nCreate icons\nDesign buttons\nDesign app pages\nDesign full User Interface\nDesign entire app logic\nDesign images\nand many more\n⭐️⭐️⭐️⭐️⭐️\"An excellent course for knowing the ins and out of building an Instagram clone and an bonus designing icons with sketch app. Akmed is a great teacher who is very knowledgeable and patient. The code is clean and easy to follow, he liberally comments all his code and instructs the student to follow along while explaining any parts that are important and in detail, which is definitely a great way of instilling good coding practice and muscle memory, factors that are very important if you want to do this for a career. Having only started learning iOS programming for the last month, and now having completed this course, I now feel alot more confident with my skills in swift and parse. Thanks Akmed!\" - T. Pascal\n⭐️⭐️⭐️⭐️⭐️\"Before I did not have good sense of taste in designing apps. Now I am earning well on freelance, creating app designs as well as developing apps.\" - R. Samuel\n⭐️⭐️⭐️⭐️⭐️\"Great to purchase! I went from unexperienced to pro in learning swift. The coarse was easy and the teacher well explained every detail. Recommend purchasing if you want to improve your coding!!\" - T. P. S.\n⭐️⭐️⭐️⭐️⭐️\"Simple, precise and easy to understand.\" - Nicholas O.\n⭐️⭐️⭐️⭐️⭐️\"This is the best course! I strongly recommend it!\" - Victor Li.\n⭐️⭐️⭐️⭐️⭐️\"The lessons taught are very important for every programmer to learn, this is very valuable course, I am very grateful to the instructor for launching this course.\" - Abhishek Ghosh\n⭐️⭐️⭐️⭐️⭐️\"Definitely one of the best, if not the best courses out there. I have been through a handful of courses, but those courses were lacking in deep explanation. Akhmed has built where others have failed, and made every effort to go into as much detail as possible. You get to understand that he truly wants to teach. However, if someone is an absolute beginner, it is advisable to go through the swift documentation first. I hope Akhmed prepares more videos.\" - Eashwar Anand\n⭐️⭐️⭐️⭐️⭐️\"I had enroll to 8 to 9 course in ios development in udemy and this course is one of the best courses in udemy on iOS development.\" - Yuvi\n⭐️⭐️⭐️⭐️⭐️\"The course was pretty useful. Ahmed Idigov does an absolutely fantastic job with this course. would recommend this course.\" - Mohammed A.\n⭐️⭐️⭐️⭐️⭐️\"Very detailed explanation of the object attributes. This is excellent material to build a strong foundation for a beginner!\" - Sudipto Paul\n⭐️⭐️⭐️⭐️⭐️\"This course was amazing. If you take this course from start to finish you will become a very advanced iOS developer. I feel very confident to take what I have learned and make my *own* social networking app.\" - Laravel Vue\n⭐️⭐️⭐️⭐️⭐️\"An excellent course for knowing the ins and out of building an Instagram clone and an bonus designing icons with sketch app. Akmed is a great teacher who is very knowledgeable and patient. The code is clean and easy to follow, he liberally comments all his code and instructs the student to follow along while explaining any parts that are important and in detail, which is definitely a great way of instilling good coding practice and muscle memory, factors that are very important if you want to do this for a career. Having only started learning iOS programming for the last month, and now having completed this course, I now feel alot more confident with my skills in swift and parse. Thanks Akmed\" - Tony Pascal\n\n\nThe Best Purchase\nIf you are not satisfied, I offer a full money back guarantee, so long as you request it within 30 days of your purchase of the course. I regularly update course with additional videos explaining different awesome features.\nYou'll get +30 hours professional HD video education content including coding, creating user interface, learning designing, source code, other materials, design sketches and many many more.\n\nWhat are you waiting for? This is the only course that worth to go through! Don't hesitate and enroll in this course. It's investment in your bright feature!\n\n\niOS 13 AND SWIFT 5 VERSION IS INCLUDED",
      "target_audience": [
        "Anyone wanting to learn how to build full Instagram app",
        "Anyone wanting to learn how to build social apps, like Twitter, Facebook, Vine, Tumblr, Flickr, etc",
        "Anyone who wants to learn to code",
        "People wanting to learn designing of their app",
        "People wanting to make a living income from social apps",
        "Anyone who fed up with empty promises of Instructors and want to learn to create FULL app with designing and coding all details"
      ]
    },
    {
      "title": "iOS 11 & Objective-C - Complete Developer Course",
      "url": "https://www.udemy.com/course/objective-c-ios11/",
      "bio": "A Complete iOS 11 and Xcode 9 Course with Objective-C",
      "objectives": [
        "Full understanding of Xcode 9 and all it has to offer",
        "Learn how to program for IOS 11 to create your own apps",
        "Create fully featured games",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS 11 development",
        "Develop in Objective-C",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Basics of Xcode 9": [
          "Download and Installing Xcode 9",
          "Navigating Xcode 9",
          "Using the iOS 11 Simulators",
          "Creating Actions and Outlets",
          "Creating My First iOS 11 Application"
        ],
        "Learning Objective-C": [
          "Objective-C Variables and Constant",
          "Objective-C Strings",
          "Objective-C Ints",
          "Objective-C Doubles",
          "Objective-C Booleans",
          "Objective-C Arrays",
          "Objective-C Working with If, Else & Or Statements",
          "Objective-C Loops"
        ],
        "Objective-C Functions": [
          "Displaying Text within the Application",
          "Dismissing the Keyboard from the View",
          "Changing the Text Properties",
          "Displaying External Custom Fonts",
          "iOS 11 APP: Fancy Text Creator Application",
          "Creating and Using NSTimers",
          "Displaying the Time and Date",
          "iOS 11 APP: Traffic Lights Game Part 1",
          "iOS 11 APP: Traffic Lights Game Part 2",
          "Fading and Revealing Objects",
          "Hiding and Revealing Objects",
          "Enabling and Disabling Objects",
          "iOS 11 APP: Tap Me Fast Game Part 1",
          "iOS 11 APP: Tap Me Fast Game Part 2",
          "Creating a Random Number",
          "iOS 11 APP: Roll of a Dice Application",
          "Creating a Random Word Generator",
          "iOS 11 APP: Random Facts Application"
        ],
        "Objective-C Actions": [
          "Creating a Action with a Button",
          "Toggling Actions with UISwitches",
          "Using UISegmentedControls",
          "iOS 11 APP: Digital Clock Application",
          "Controlling Actions with UISliders",
          "iOS 11 App: Temperature Calculator Part 1",
          "iOS 11 App: Temperature Calculator Part 2",
          "Displaying UIActionSheets",
          "Detecting Shake Gestures",
          "iOS 11 APP: Shake Me Silly Part 1",
          "iOS 11 APP: Shake Me Silly Part 2",
          "Creating URL Links",
          "Delaying Actions",
          "iOS 11 APP: Calculator Application",
          "Detecting Swipe Gestures",
          "iOS 11 APP: Simon Says Part 1",
          "iOS 11 APP: Simon Says Part 2"
        ],
        "Objective-C Views": [
          "Using UIViews",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Designing Interfaces with UIStackViews",
          "Switching to a New Storyboard View",
          "Switching to a New XIB View",
          "Changing the Status Bar Colour",
          "Removing the Status Bar",
          "Using UIPickerViews",
          "Using UIDatePickerViews",
          "iOS 11 APP: Web View Application Part 1",
          "iOS 11 APP: Web View Activity Indicator Part 2",
          "iOS 11 APP: Web View Search Bar Part 3",
          "iOS 11 APP: Map View Application Part 1",
          "iOS 11 APP: Map View Pins Part 2",
          "iOS 11 APP: Map View Locations Part 3",
          "iOS 11 APP: Map View Directions Part 4"
        ],
        "Objective-C Visuals": [
          "Displaying Images on the Screen",
          "Displaying Retina Image Versions",
          "iOS 11 APP: Mini Image Gallery Application",
          "Adding Images To Buttons",
          "Displaying Images From URL'S",
          "iOS 11 APP: Snap Attack Part 1",
          "iOS 11 APP: Snap Attack Part 2",
          "Displaying Local PDF Files",
          "Changing the Background Colour",
          "Playing Animation Files",
          "Adding Borders to Objects",
          "Adding Drop Shadows to Objects"
        ],
        "Objective-C Audio & Video": [
          "Playing a Sound File",
          "iOS 11 APP: Soundboard Application",
          "Playing a Local Video File",
          "Streaming a Video File",
          "Streaming Youtube Videos",
          "Vibrating The Device"
        ],
        "Objective-C Table View Application": [
          "iOS 11 APP: London Landmarks - Populating a Table View Part 1",
          "iOS 11 APP: London Landmarks - Pushing to a Detail View Part 2",
          "iOS 11 APP: London Landmarks - Populating a Detail View Part 3",
          "iOS 11 APP: London Landmarks - Map View Locations Part 4"
        ],
        "Objective-C Tab Bar Business Application": [
          "iOS 11 APP: Business Application - Setting Up the Tab Views",
          "iOS 11 APP: Business Application - Creating the Services Pages",
          "iOS 11 APP: Business Application - Displaying the About Us",
          "iOS 11 APP: Business Application - Creating a Portfolio Gallery",
          "iOS 11 APP: Business Application - Setting Up the Contact Us Page",
          "iOS 11 APP: Business Application - In App Emailing",
          "iOS 11 APP: Business Application - Displaying Social Networks"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 9"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad iOS 11 Apps but are not sure where to start or even begin? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is the perfect course for you!\nThis iOS 11 & Objective-C - Complete Developer Course will give you everything your need to start your new career in IOS 11 development, The course has been structured to support Objective-C, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nCreate Over 25 Real iOS 11 Applications throughout the course from fun and simple games to powerful utility apps using the native features of IOS 11 devices to help you understand the process of creating applications within Objective-C.\nCreate Sticker Pack Applications One of the many new features in iOS 11 create your own iMessage extensions and sticker pack applications.\nSell Your App to Millions of Users and earn extra revenue from Ad networks, Making money has never been so easy!\nNot only do you get the best online IOS 11 development course online but you also get first class responsive support by email, Twitter or on the forums, So you can rest assure you have full guidance in your new career!\nWhy Choose My Course?\nMy names Aaron Caines and i have created over 15+ Best Selling iOS courses for Swift and Objective-C, if you have already enrolled into one of my courses int he past you already know how exciting and fun they can be and how jam packed they are with information!\nIf this is your first time seeing one of my courses you can expect to see reviews like this:\n***** \"i owe this guy a beer. this guy is the best ios teacher here . ive returned many videos . hope you could make an advanced course. i could totally work with the instructor\" - No Basic S\n***** \"the course is very well done and addictive, it teaches a lot of notions very very useful in a very clear way. great!\" - Luca Torroni\n***** \"The course is clear and detailed. Covers a good range of functions for almost any kind of app. My go-to course whenever I am unsure how to implement features!\" - Loh Chung Kit\n***** \"This is one great course indeed! I truly enjoy Aaron's teaching style. He is so easy to follow and understand. Great for beginners and intermediates. I am finally seeing my app come to life!\" - Annabelle Ramos\nWhy Choose This iOS 11 & Xcode 9 Course?\nMany programmers learning to create there first iOS 11 application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This iOS 11 & Xcode 9 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 9 and to offer any advice needed and before you know if you will have created your first iOS 11 app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode 9, iOS 11, Interface Builder, Simulator and Project Types\nLanguage basics and building blocks\nObjective-C: Full guide to creating full featured apps\nCreate over 25 real iOS 11 applications in both languages\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nPlaying and Streaming Video Support\nFull Featured iOS 11 Apps\nEarning Revenue Ad Networks\nIn App Purchases\nFun and Simple iOS 11 Games\nCore Data Applications\nCamera Support Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to learn Objective-C",
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS 11 Apps",
        "Anyone looking for a new career"
      ]
    },
    {
      "title": "Mastering Firebase for iOS Using Swift Language",
      "url": "https://www.udemy.com/course/practical-firebase-for-ios-using-swift/",
      "bio": "Learn to integrate Firebase with your iOS apps by building real world projects!",
      "objectives": [
        "Understanding of the different capabilities of the Firebase Platform",
        "Build real world iOS applications integrated with Firebase services"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you should know",
          "Exercise Files",
          "What are Dynamic Apps?",
          "Understanding Firebase Features"
        ],
        "High Waters": [
          "Understanding the App",
          "Setting Up Project Using Xcode",
          "Displaying User's Current Location on Map",
          "Zooming to User's Location",
          "Adding Flooded Button to User Interface",
          "Adding Annotation to the Map"
        ],
        "Integrating High Waters App with Firebase": [
          "Configuring High Waters Project on Firebase Console",
          "Saving Flood Records to the Firebase Database",
          "Adding Multiple Childs to the Firebase Node",
          "Retrieving Flood Records from Firebase Database",
          "Testing on Multiple Devices",
          "Refreshing MapView When Flood Record is Deleted"
        ],
        "Grocery App": [
          "Understanding the App",
          "Setting Up Firebase Project",
          "Exploring the Project Structure",
          "Setting Up Add Shopping List Controller",
          "Implementing Models for Shopping List and Grocery Item",
          "Displaying Shopping Lists",
          "Adding Grocery Items to Shopping List",
          "Deleting Grocery Items from Shopping List"
        ],
        "Integrating Grocery App with Firebase": [
          "Setting Up Firebase Database",
          "Inserting Shopping List into Firebase Database",
          "Displaying Shopping List from Firebase Database",
          "Adding and Displaying Grocery Items from Firebase Database",
          "Deleting Shopping List from Firebase Database"
        ],
        "Grocery App Authentication": [
          "Understanding Different Kinds of Authentication",
          "Understanding Project Structure",
          "Setting Up IBOutlets and IBActions",
          "Registering User Using Firebase",
          "Authenticating Users Using Firebase",
          "Saving Shopping Lists for Users",
          "Cleaning Code by Implementing Encodable Extension",
          "Displaying Shopping List Based on User",
          "Saving Grocery Items Based on User",
          "Displaying Grocery Items Based on User"
        ],
        "WhatsUp Chat App": [
          "What we will be building?",
          "Understanding the Project Structure",
          "Setting Up JSQMessagesViewController",
          "Sending Text Messages Using JSQMessagesViewController",
          "Sending Photo Message Using JSQMessagesViewController"
        ],
        "Integrating WhatsUp App with Firebase": [
          "Setting Up Firebase Project",
          "Saving Messages to Firebase Database",
          "Displaying Messages from Firebase Database",
          "Uploading Photo to Firebase Database",
          "Saving Photo Message to Firebase Database",
          "Updating Image URL for Uploaded Photo",
          "Resizing Images",
          "Downloading and Displaying Images",
          "Observing Message Changes and Downloading Images on User's Timeline"
        ],
        "Image Classification Using Firebase ML Kit": [
          "What will we be building",
          "Setting Up Firebase Project",
          "Integrate Firebase with iOS App",
          "Creating the User Interface",
          "Iterating through Images",
          "Detecting Images"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus"
        ]
      },
      "requirements": [
        "Understanding of iOS Framework is required",
        "Understanding of Swift Programming Language is required"
      ],
      "description": "Firebase is Google's mobile platform that helps you quickly develop high-quality apps and grow your business. Firebase provides tons of tools to help developers quickly create iOS/Android and Web applications.\nMy name is Mohammad Azam and I am the creator of many popular online courses including:\nMastering ARKit for iOS\nBlockchain Programming in iOS Using Swift\nMastering Core ML for iOS\nServer Side Swift Using Vapor\nBlockchain Programming Using JavaScript\nMastering Micro Services Using Java Spring Boot\nThe Complete Guide to Lean Controllers in iOS\nI have also created over 2 dozens apps and some of my apps were even featured by Apple on the App Store. I have worked with fortune 500 companies as a lead iOS developer and helped them grow their business ten folds.\nAt present I work as a lead instructor for DigitalCrafts where I teach Full Stack Web Development. Before joining DigitalCrafts, I worked full time with The Iron Yard as an iOS and Full Stack instructor. I also run a very successful YouTube channel with over 5000 subscribers.\n\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 8 hours.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nThis is amazingly good and makes me really excited. I appreciated Mohammad for creating this course. This 3 hours already worth than 20 hours!!\nI HIGHLY RECOMMEND this course to anyone, but make sure you have a basic understanding of JavaScript FIRST; otherwise, it will all sound foreign to you. If you want to learn Blockchain development using one of (if not the most widely used) languages in the world - JavaScript - then invest in this course. Thank you, Mr. Azam! I will definitely buy more blockchain courses from you.\nBuy this course today and this is what you’ll get.\nYou will learn the concepts behind Firebase and how you can integrate it in your iOS applications. I am going to teach you different features of Firebase platform by giving you very practical real life examples. We will work on multiple real world projects, utilizing different features available by Firebase platform.\n* Each lecture in the course is accompanied with complete code sample files.\n\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and I make sure that every questions is answered.\nCan you believe you get all this (and more) for just $199?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nWhy learn Firebase?\nFirebase is a complete backend as a service platform from Google, which allows to integrate many different services to your iPhone/Android/Web app.\nFirebase allows you to use your existing iOS skills to create a complete application with real time database, notifications, storage and much much more.\nWho is this for?\nThis course is for anyone who wants to take their skills to the next level. Firebase is a very powerful framework which can allow you to create highly maintainable and performance efficient application in less time. Each year Google adds more features to the Firebase platform making it more relatable and easier to use by developers. Stop spending your time in creating your own service layer and use Firebase to write your application.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the iOS community with a large following. I do a lot of speaking engagements in which I spread knowledge and education.\nWhat are the requirements?\nA Mac Computer\nXcode 9.3 or above\nUnderstanding of iOS framework is required\nBasic understanding of the Swift language and the iOS SDK - I'll teach you everything you need to know about Firebase.\nWhat am I going to get from this course?\nLearn the concepts behind Firebase technology.\nImplement Firebase real time database\nCreate multiple real world applications\nTake your existing iOS skills to the next level\nBecome a professional app developer, take freelance gigs and work from anywhere in the world\nBored with the same old, same old? Apply for a new job in a software company as an iOS developer",
      "target_audience": [
        "Developers who want to use Firebase as their back end as a service provider",
        "Developers who wants to take their skills to the next level"
      ]
    },
    {
      "title": "Android Hacking And Penetration Testing",
      "url": "https://www.udemy.com/course/android-hacking-and-penetration-testing/",
      "bio": "Learn Android Hacking and Penetration Testing from the absolute basics",
      "objectives": [
        "By the end of the course , You will learn How to Fuzz applications",
        "By the end of the course, students will be able to understand the internals of android and it's security",
        "They will be able to pentest android apps in an efficient way",
        "By the end of the course, you will learn how to carryout man in the middle attacks in real world",
        "They will be in a position to perform real world attacks on Android Devices and Apps",
        "By the end of the course , You will undertsand the internals of Android App Reversing and Malware Analysis"
      ],
      "course_content": {
        "Introduction": [
          "Introduction To The Course",
          "About the Instructors",
          "Course Instructions",
          "Need For Mobile Security And Owasp Top 10 Mobile Risks"
        ],
        "Lab Setup For The Course": [
          "Lab Setup",
          "Installing Ubuntu On VMware",
          "Setting Up An Android Pen-testing Environment on Ubuntu"
        ],
        "Getting Familiar With Android Developer Tools": [
          "Eclipse IDE",
          "Android Debug Bridge"
        ],
        "Android Architecture And Security Model": [
          "A Brief Intro to Android",
          "Android booting process",
          "Android's Architecture",
          "Android Data Structures and File Systems",
          "Android Apps",
          "Android Security Model",
          "Android Permissions",
          "Google Bouncer"
        ],
        "Interacting With an Android Device": [
          "Difference Between Android Emulator & Android Device",
          "Interacting With Android device Via Usb",
          "All About Rooting",
          "SSH",
          "VNC",
          "Busy Box"
        ],
        "Android Network Analysis": [
          "Setting Up A Proxy for Android Emulator",
          "Setting Up A Proxy for Android Device",
          "Installing CA certificate",
          "Real World MITM and SSL MITM Attacks Part-1",
          "Real World MITM and SSL MITM Attacks Part -2",
          "Data Manipulation"
        ],
        "Android Reversing and Malware Analysis": [
          "Apk files in a nutshell",
          "Introduction to Reverse Engineering",
          "Reversing to get Source Code of Android Apps",
          "Reverse Engineering with APKTOOL",
          "Introduction to Android Malwares",
          "Dynamic Vs Static Analysis",
          "Static analysis of Android Malwares",
          "Dynamic analysis of Android Malwares",
          "Introduction to Android Tamer",
          "Dynamic Analysis with DroidBox"
        ],
        "Android Application Pen testing and Exploitation": [
          "Installing JSinfosec Vulnerable Apps",
          "Introduction to Android App pentesting",
          "Fuzzing Android Apps with Burp - Proxy",
          "Fuzzing Android Apps with Burp - Intruder",
          "Attacking Authentication",
          "Content Provider Leakage",
          "Client Side Injection",
          "Insecure Data Storage - Shared Preferences",
          "Insecure Data Storage - SQLite Databases",
          "Unintended Data Leakage",
          "Broken Cryptography",
          "Automated Security Assessments with Drozer",
          "Exploiting Android Devices Using Metasploit"
        ],
        "Android Device And Data Security": [
          "Android Device Protection",
          "Bypassing Android Locks",
          "Android Data Extraction"
        ],
        "Using Android as a Pen testing Platform": [
          "A Look Into Commonly Used Pen testing and Hacking Apps",
          "PWN Pad on Nexus 7",
          "Kali Linux on Android"
        ]
      },
      "requirements": [
        "PC",
        "Android Device (Optional)",
        "Wireless Router (optional )"
      ],
      "description": "Android Hacking and Penetration Testing course is a highly practical and hands on video course. The course will focus on the tools and techniques for testing the Security of Android Mobile applications. During the course, You will learn various topics such as Android architecture, Android security model, Android Application Pentesting and Exploitation, Reversing Android applications, static and dynamic analysis of android malware etc. After finishing this course you will be able to perform a Penetration test on a given Android device and its applications\nCourse Instructors :-\nSrinivas\nSrinivas is one of the Founders of JSinfosec. He is a Cyber Security Enthusiast, writer and a Speaker. He is one the coauthors of the book \"Hacking S3rets\", He is an active member of Null Hyderabad. His area of Interests Include Web Application Pentesting, Android application Fuzzing and Pentesting.\nJohn\nJohn is one of the founders of JSinfosec. He is an Infosec researcher, Freelance Pen tester and a blogger. He has more than 5 Years of experience in the field of Information Security. His area of Interests Include Wireless Security and Penetration Testing, Android Security & Forensics",
      "target_audience": [
        "Students",
        "Pen testers",
        "Developers",
        "Security enthusiasts"
      ]
    },
    {
      "title": "React Native Bootcamp: Beginner to Pro with Real Projects",
      "url": "https://www.udemy.com/course/react-native-full-guide/",
      "bio": "Master React Native: Build multiple cross-platform apps with Hooks, Redux, Firebase, REST APIs, Maps & more",
      "objectives": [
        "Learn the Javascript and React Native basics for mobile app development on Android & iOS",
        "Learn to build both bare React Native and Expo apps, and reveal the differences between React Native CLI & Expo",
        "Learn using React Hooks & React Context (useState, useEffect, useContext, useSelector, useDispatch, etc.)",
        "Integrate Native Libraries, such as Maps, Social share, Firebase",
        "Learn how to handle REST APIs integration and find out about open source APIs",
        "Use different navigators of React Navigation, such as Stack, Tabs and Drawer navigators",
        "Integrate Firebase in your app and learn about serverless apps",
        "Handle Redux integration for global state management and API Calls",
        "Get introduced to how user authentication works in the apps",
        "Learn what is git, why people use it and learn the basic commands of git",
        "Setup basic React Native tools for the best developer experience"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why to Choose React Native",
          "What We Will Build"
        ],
        "React Native Tools Setup": [
          "Node & NPM Install",
          "JDK & Android Studio Setup",
          "Android SDK Path",
          "Ruby Installation",
          "iOS Tools Setup",
          "Validate Setup with Test Project"
        ],
        "Travel App: Basics of React Native": [
          "App Overview",
          "Project Setup",
          "Typescript vs. Javascript",
          "Running on Android",
          "Running on iOS",
          "Understanding SafeAreaView",
          "Styles Explained",
          "ESLint Setup",
          "Creating First Component",
          "Imports & Exports",
          "Component Props",
          "Component State and useState Hook Explained",
          "UseEffect Explained",
          "React.memo Explained",
          "React Native Basics"
        ],
        "Git Basics": [
          "Initialize Git",
          "Git Committing & Pushing",
          "Exploring Remote Commits",
          "Git Branches"
        ],
        "Travel App: Build Main Screen": [
          "Create Different Instances of Title",
          "Building Categories List",
          "Making Category Selectable",
          "Creating Attraction Card",
          "Use JSON Data for Lists (ScrollView)",
          "Using FlatList",
          "Filtering By Categories",
          "Quick Quiz ?"
        ],
        "Travel App: Introduction to App Navigation": [
          "Introduction to React Navigation",
          "Navigation Setup",
          "Hiding Navigation Header",
          "Navigating Between Screens",
          "Passing Parameters to Screens",
          "Handling Back Events",
          "Navigation Quiz"
        ],
        "Travel App: Build Detail Screens": [
          "Using ImageBackground",
          "Adding Actions inside ImageBackground",
          "Building Mini Image Gallery",
          "Handling Hidden Images",
          "Adding Texts Section",
          "Creating InfoCard Component",
          "Controlling App Theme",
          "Building Gallery Screen"
        ],
        "Travel App: Native Libraries (Maps & Social Share)": [
          "What are Native Libraries?",
          "Installing Maps Package",
          "Getting API Key for Google Maps",
          "Add Map to Attraction Screen",
          "Show Marker in the Map",
          "Implement Full Screen Map",
          "Checking Maps on Android",
          "Share Package Options",
          "Installing Share Package",
          "Encoding Base64 Images",
          "Extracting Image Extension",
          "App Summary: Minute of Appreciation"
        ],
        "Recipes App: Expo Basics": [
          "App Overview",
          "Expo vs. React Native CLI",
          "Create Expo Project",
          "Expo Config Customization",
          "Building Splash Screen & Button",
          "Finalizing Screen Layout",
          "Integrate Navigation",
          "Fix some UI issues"
        ],
        "Recipes App: Home Screen": [
          "Customizing Navigation Header",
          "Custom Back Icon",
          "Changing App Theme",
          "Building Input",
          "Making Pressable Input",
          "Reusing Components",
          "Create RecipeCard",
          "Add RecipeCard Image",
          "Add Rating",
          "Show Recipes in List",
          "Create Card Component"
        ]
      },
      "requirements": [
        "No previous experience required. Basic knowledge of Javascript will be helpful."
      ],
      "description": "The Complete React Native Guide – Build Cross-Platform Apps for iOS & Android\n\n\nDo you want to launch your career as a mobile app developer and build apps that run on both iOS and Android? This React Native course takes you from beginner to advanced, giving you all the tools to create professional, real-world applications.\n\n\nWhat you’ll learn:\nReact fundamentals: JSX, props, state, styles\nModern development with Hooks and functional components\nRedux for state management, compared with React Context\nNavigation: stack, tabs, and drawer navigation\nREST API integration and Firebase database usage\nUser authentication and token storage\nGit & version control best practices\nPublishing apps to Google Play and the Apple App Store\nWe’ll build multiple reusable components and real apps you can showcase in your portfolio. Each section includes complete source code hosted on Git, so you can follow along and use the code for your own projects.\n\n\nWhy React Native?\nWith a single codebase, you’ll deploy to Android, iOS, and even the web. React Native apps feel truly native while giving you advantages like faster development cycles and over-the-air updates. Plus, React Native is powered by JavaScript, the world’s most popular programming language.\n\n\nWho is this course for?\nBeginners learning mobile development from scratch\nWeb developers transitioning to mobile apps\nDevelopers who want to publish cross-platform apps faster\nBy the end of this course, you’ll have the skills and confidence to build, test, and publish real apps with React Native.",
      "target_audience": [
        "Beginner Javascript/React/React Native Developers curious about mobile app development",
        "React Native Developers who want to learn some more advanced topics, such as Firebase Integration, React Native CLI vs. Expo, etc."
      ]
    },
    {
      "title": "The Complete iOS 18 Developer Course",
      "url": "https://www.udemy.com/course/the-complete-ios-developer-course-with-swift/",
      "bio": "Learn iOS development with Swift and SwiftUI. Build apps, games (Instagram, Foursquare etc) + Development with Cursor AI",
      "objectives": [
        "iOS 18 Development with Swift 6",
        "Build and iPhone/iPad app and put them to the App Store",
        "Master Swift 6 programming skills",
        "Essential design skills",
        "App Development with AI",
        "Development with Cursor, Claude, ChatGPT"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Get All Free Stuff",
          "Do this now for later! CCA Access Code"
        ],
        "XCode Overview & Getting Started": [
          "Downloading XCode",
          "Creating First Project",
          "XCode Overview",
          "Running Simulator",
          "User Interface",
          "Connecting Views",
          "Changing Image with Code",
          "GitHub Link For First App",
          "Codes on GitHub"
        ],
        "Swift 6 Deep Dive": [
          "Swift 6 Deep Dive Intro",
          "Options for Coding",
          "Variables and Constants",
          "Variable Types",
          "Predefining Types",
          "Arrays",
          "Set",
          "Dictionaries",
          "While Loop",
          "For Loop",
          "If Controls",
          "Functions",
          "Optionals",
          "Playgrounds GitHub Link",
          "Worst Calculator Assignment",
          "Calculator Design",
          "Calculator Codes",
          "Safety and Scope",
          "Calculator GitHub Link"
        ],
        "Layout": [
          "Layout Introduction",
          "Layout Overview",
          "Adding Constraints",
          "Constraints Detailed",
          "Suggested Constraints",
          "Project Layout GitHub Link",
          "Programmatic Views",
          "Mathematical Operations",
          "Creating Buttons",
          "Objects With Code GitHub Link",
          "What is SwiftUI?"
        ],
        "Advanced iOS Features: Permanent Storage, Segue, Alert Message, Timers, Gestures": [
          "Advanced iOS Features Intro",
          "Permanent Storage",
          "Taking Birthday Note",
          "Deleting Data",
          "Birthday Note Taker GitHub Link",
          "Second Screen",
          "Segue",
          "Information Transfer",
          "ViewController Lifecycle",
          "Segue App GitHub Link",
          "Alert Message",
          "User Sign Up Form",
          "Alert Project GitHub Link",
          "Gesture Recognizers",
          "Gesture Recognizer App GitHub Link",
          "Timers",
          "Timer Project GitHub Link"
        ],
        "First Game: Catch the Kenny!": [
          "Catch the Kenny Intro",
          "Kenny Assignment",
          "Design of The Game",
          "Increasing Score",
          "Counting Down",
          "Kenny Animating",
          "Replay Function",
          "Saving Highscores",
          "Catch the Kenny GitHub Link"
        ],
        "TableView: Landmark Book": [
          "Landmark Book Intro",
          "What is Landmark Book?",
          "What is TableView?",
          "Landmarks",
          "Connecting with TableView",
          "Passing Data",
          "Deleting Data",
          "Landmark Book GitHub Link",
          "About Any Future Updates"
        ],
        "Intermediate Swift: OOP": [
          "Intermediate Swift Intro",
          "What is OOP?",
          "Initializer",
          "Enum",
          "Inheritance",
          "Access Levels",
          "CCA Swift Level 1 Certification",
          "MusicianClass GitHub Link",
          "Simpson Book Design",
          "TableView Setup",
          "Creating Model",
          "Simpson TableView",
          "Details",
          "Simpson Book GitHub Link"
        ],
        "Core Data: Art Book": [
          "Core Data Introduction",
          "What is Artbook?",
          "What is Core Data?",
          "User Interface",
          "Hiding Keyboard",
          "Picking Image",
          "Storing Information",
          "Retrieving Information",
          "Notification Center",
          "Passing Data",
          "Predicates",
          "Delete Functionality",
          "Improvements",
          "Artbook GitHub Link"
        ],
        "Maps: Travel Book": [
          "Maps Introduction",
          "What is Travel Book?",
          "Map Kit",
          "User Location",
          "Pins On Map",
          "User Input",
          "Saving Places",
          "User Interface",
          "Fetching Data",
          "Passing Info",
          "Showing Selected Pin",
          "Disabling Updates",
          "Customizing Pins",
          "Navigation",
          "Travel Book GitHub Link"
        ]
      },
      "requirements": [
        "MacBook and Internet",
        "You don't need any other prior experience or knowledge"
      ],
      "description": "Welcome to the Complete iOS 18 Developer Course!\nIf you are searching for the right course to learn about iOS Development from scratch... you've just found it!\nThis course will take you from a complete beginner to confident practitioner, as we focus on practical iOS development without neglecting the theory.\nWith over 50 hours of teaching and dozens of practical projects -  you'll learn how to create, write and build real life apps, games and clones... plus so much more!\nWith this course you also get FREE:\nOne year web hosting from Eco Webhosting (limited to one year per student, not per course)\n300$ worth of visuals to use in your app design\nCCA Certification participation pass for Swift Level 1 and Swift Level 2\nBy the time you finish this course you'll understand how to write any iOS app you want, and have the confidence to dive in!\nThis course builds on the foundations of Rob Percival's original iOS courses, but goes much, much further!\nTaught by Atil Samancioglu (who teaches more than 410,000 students on Udemy on Mobile Programming and Cyber Security) in partnership with Rob Percival's Codestars (over 2 million students have taken Codestars courses) - this course builds on the foundations of Rob's previous iOS courses, but add much, much more!\nCourse Content\nThis course is ideal for students looking forward to learn iOS 18 and Swift 6 in a comprehensive way. You do not have to have any prior experience in order to take this course. We are going to start from scratch and make our way to the top. You will be able to write and design a real app and upload it to the AppStore at the end of this course.\nThroughout the course you'll put your new skills to the test with hands-on practical project builds, including:\nArt Book\nCatch the Kenny game\nCurrency Converter\nTravel Book\nFoursquare Clone\nInstagram Clone\nSnapchat Clone\nAngry Bird Clone\nImage Recognition App\nApp Development with Artificial Intelligence\nThe course also covers both Firebase and Parse with their latest and most updated versions and, as well as learning and practicing all details of Swift 6 and iOS development, there's a dedicated Swift UI section!\nThis course also latest developments in the tech such as integrates Artificial Intelligence into its learning path. You will learn how to use ChatGPT, Cursor, Claude etc. to create apps, review code, fix bugs!\nWe will work with Xcode 16 throughout the course, and all course projects and source codes will be shared with you via GitHub.\nHappy Coding.",
      "target_audience": [
        "People who want to learn about iOS development",
        "People who want to learn about coding",
        "People who want to be professional iOS developers",
        "People who want to master Swift skills"
      ]
    },
    {
      "title": "How To Launch Your App In Just 16 hrs - Android Development",
      "url": "https://www.udemy.com/course/design-code-an-android-app-from-scratch/",
      "bio": "Learn Both Design with Photoshop and Code with Android Studio to publish your first app on the Playstore in just 16 HRS!",
      "objectives": [
        "Understand how to use Photoshop for app UI design",
        "Create simple, yet effective logos for app projects.",
        "Understand the basics of coding in Java and using Android Studio",
        "Design and develop a full, production-ready app from scratch."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Files"
        ],
        "Introduction to Photoshop for UI Design": [
          "Creating New Documents and Artboard Documents",
          "Understanding Layers",
          "Tools and Techniques Specific to UI Design",
          "Exporting Assets"
        ],
        "Introduction to Adobe Illustrator for Logo & Icon Design": [
          "Creating New Documents",
          "Working with Layers",
          "Tools and Techniques"
        ],
        "BucketDrops: Designing the Logo & Icon in Illustrator": [
          "Creating the Basic Bucket Shape",
          "Adding the Drop Inside the Bucket",
          "Finishing the Logo & Icon"
        ],
        "BucketDrops: Designing the Mockups in Photoshop": [
          "Beginning the Initial Add a Drop Mockup",
          "Finishing the Add a Drop Mockup",
          "Designing the Action Bar",
          "Designing the Bucket Drop Rows Container",
          "Designing the Add a Drop Overlay",
          "Finishing up the Mockup Designs",
          "Exporting the Assets",
          "Organizing the Assets"
        ],
        "Introduction To Coding": [
          "Setup Java",
          "Setup Android Studio",
          "Hello World Using Android Studio",
          "Setup Genymotion Custom Android Emulator",
          "What Is Git and What is GitHub?",
          "Share Project On GitHub From Android Studio",
          "Android Studio Settings Overview",
          "What is Dp, Sp, Px in Android?",
          "Android Studio Project Structure",
          "Introduction To Views and Linear Layout",
          "Weights in Linear Layout",
          "Gravity vs. Layout Gravity",
          "Introduction To The Relative Layout",
          "Padding vs, Margin",
          "Event Handling In Layouts",
          "Introduction To Activity Lifecycle",
          "Example Of Activity Lifecycle"
        ],
        "Bucket Drops Project Setup": [
          "How does BucketDrops app work?",
          "The Index and How to get the code",
          "What is an Activity, Fragment, Service, Receiver and Intent",
          "What is Context?",
          "Bucket Drops Screen Structure",
          "Setup BucketDrops in Android Studio"
        ],
        "Coding the Main Screen": [
          "Adding the Logo and Button",
          "Adding a selector to the Button",
          "Image View Scale Type Illustrated",
          "Adding a Toolbar to XML",
          "Display Bitmaps Efficiently With Glide",
          "Event Handling For Button"
        ],
        "Introduction To Fragments": [
          "Introduction to Fragments",
          "Fragment Lifecycle Demo",
          "Fragment Activity Combined Lifecycle",
          "Adding a Fragment to XML",
          "Introduction to Fragment Manager and Fragment Transactions",
          "Adding Fragments Through Code",
          "Introduction to Dialog Fragments",
          "Setup Dialog Add in XML",
          "Setup Dialog Add in Java"
        ],
        "Saving Data With Realm": [
          "Introduction to Realm Database",
          "Realm Queries",
          "Advanced Realm Concepts",
          "Add Drop to Realm Database"
        ]
      },
      "requirements": [
        "Android Studio",
        "Adobe Photoshop CC (if you're following the design portion).",
        "Adobe Illustrator CC (if you're following the design portion)."
      ],
      "description": "Have you ever seen a beautiful screen and wondered how it was designed or read a hundred lines of neatly formatted code and wondered how it works? This course aspires to seamlessly blend app design with android development giving you the complete picture. Learn how to design and code a fully working, professionally designed Android app from Photoshop to Playstore under 16 hours.\nWe build an app called BucketDrops in the series which lets you keep track of life goals. The course begins with app design instructed by Gary and covers the following:\nPhotoshop basics\nIllustrator basics\nPrinciples of Logo Design\nProcess to design the app mockup screens\nWe then dive into Android Programming using Android Studio instructed by Vivek Ramesh \"Vivz\" which covers the following topics\nBasic components of Android (Activities, Services, Intents, Fragments, and BroadcastReceivers\nDrawables and selectors\nEfficient Image Loading With Glide\nFragments, FragmentManager and FragmentTransaction\nRealm database and queries\nRecyclerView, sections, animation and swipe to delete\nStyles and themes\nCustom Widgets and Views\nRunning periodic tasks with IntentService, AlarmManager and BootReceiver\nReverse engineering an APK file\nProguard\nPublishing on Google Play\nFollow along as Gary Simon and Vivek Ramesh \"Vivz\" walk you through the entire process of designing and coding a production-ready android app.\nPrerequisites\nYou have Photoshop and Illustrator installed on your system.\nYou know a bit of Object Oriented Programming (Any language will do but Java is preferable)\nMaterials included\nAssets wherever appropriate\nPresentations, keynotes and slides wherever appropriate\nDocument containing GitHub code links attached on lecture 39\nVideos are enabled for offline access\nWho are these guys?\nGary Simon has been a professional designer for over 15 years and has dealt with over a thousand clients on a variety of design and development projects. He owns a popular design business, along with its associated youtube presence which is one of the most popular design channels with almost 100,000 subscribers.\nVivz has been a java developer for nearly a decade and is the founder of a channel called slidenerd that deals with mobile programming on YouTube with almost 100,000 subscribers\nBetween the two, millions upon millions of aspiring designers and coders alike have benefited from their instructions.\nWho should take this course?\nAnyone that's interested in designing and developing apps for android. You can be an absolute beginner and follow along. You can also be an intermediate/advanced designer or coder and still gain valuable insights.\nSo if you're ready to start designing and coding amazing android apps, let's get started!",
      "target_audience": [
        "Anyone who has an interest in designing and coding apps."
      ]
    },
    {
      "title": "Ionic 4 - Build PWA and Mobile Apps with Angular",
      "url": "https://www.udemy.com/course/ionic-4-build-pwa-and-mobile-apps-with-angular/",
      "bio": "Build Progressive Web Apps, Native Android and iOS Apps with Ionic 4 and Angular",
      "objectives": [
        "Build Native Mobile Apps with Ionic 4",
        "Build PWA with Ionic 4",
        "Getting to know Ionic 4"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML, CSS, JS knowledge",
        "Typescript, Angular Fundamentals"
      ],
      "description": "We can use Angular to create powerful frontend web applications powered by TypeScript / JavaScript. What if we can use the Angular knowledge to build applications that can be published as progressive web apps, native mobile apps running on any iOS or Android device and electron desktop apps with the same codebase.\nIonic 4 allows you to do just that.  We can use your existing Angular, HTML, JS and CSS knowledge and build PWA, native mobile apps. This allows you to focus on the things you know and release your application on all possible devices (desktop and mobile) without having to learn different technologies to build apps for different platforms.\nIonic 4 is completely based on web components (Using Stencil).\nThis course takes you from zero to published app, taking a very practice-orientated route. We'll build a news app throughout this course, we'll see how we can use the Ionic component library, how to fetch and handle user input, how to store data and much more!\nWe will touch on various topics like Architecture, Components, Navigation, Tabs, Sidemenus, User Input, Native Device Features, Storage, Http, etc...\nAnd since building apps is only part of the fun, you'll of course also learn how to run your apps either in the browser, on an emulator or on your own device!\nWhat exactly are you going to learn then?\nAngular Refresher\nIonic Fundamentals\nHow to set up your Ionic 4 projects\nUsing different Ionic 4 templates Blank, Tabs, and Sidemenus\nThe basics about Ionic 4 - How navigation works, how your project is structured and you use its rich component library\nIonic 4 project architecture\nCreating a user interface with the Beautiful Ionic 4 Components\nShow Modals, Alerts, Toasts and many more useful UI components\nTest the app in the browser, on emulators and real devices\nUsing Ionic storage\nBuilding PWA and deploy on Firebase Hosting\nand much more ...\nSo Let's Get Started.",
      "target_audience": [
        "Web developers and specifically Angular developers who want to build Native Mobile Apps and Progressive Web Apps (PWA)"
      ]
    },
    {
      "title": "Android 12 Jetpack Compose Developer Course - From 0 To Hero",
      "url": "https://www.udemy.com/course/android-12-jetpack-compose-developer-course/",
      "bio": "Learn Android App Development in 2022 - Using Jetpack Compose! Build a Gmail Clone UI and a News App from scratch",
      "objectives": [
        "You will become a confident Junior Android App Developer!",
        "You will be one of the first developers to learn Jetpack Compose and Shine like a Diamond!",
        "You will build some very complex User Interfaces and Applications throughout the Course",
        "You will be an advanced developer in Kotlin. This will make it easy to learn other programming languages!",
        "You will build a GMail Clone UI",
        "You will build a news App that loads data from an API via Retrofit!",
        "You will know how to build apps with a clean MVVM Architecture"
      ],
      "course_content": {
        "Welcome": [
          "Thanks for taking the course"
        ],
        "Getting ready with Android Studio": [
          "Intro to the chapter",
          "Installing Android Studio on Windows",
          "Install Android Studio on Mac",
          "Install Android Studio on Linux",
          "Our first project - the UI and how to change the size of the text",
          "Setting up the Emulator",
          "People Counter App",
          "Testing The App On Your Phone",
          "Outro Setup",
          "Get the most out of this course!"
        ],
        "Kotlin Fundamentals": [
          "Introduction to the chapter",
          "Variables and differences between val and var",
          "Datatypes of numbers",
          "Datatypes bool, char and string",
          "Code for Variables and Datatypes",
          "Exercise Variables And Datatypes",
          "Solution For The Exercise Variables And Datatypes",
          "String Interpolation - String Templates",
          "Quiz Variables And Datatypes",
          "Arithmetic Operators and why the type is important",
          "Comparison Operators",
          "assignment, incriment and decrement operators",
          "Code: Operators",
          "If Statements",
          "If Statements Part 2",
          "Note - If Statemens as Expressions",
          "When Expressions - Including Exercises",
          "Quiz If Statements and When Expressions",
          "Code Of If Statements And When Expressions",
          "Note - When Statements as Expressions",
          "While Loop",
          "Do While Loop",
          "More On While Loops",
          "For Loops",
          "Code: Loops",
          "Exercise Loops",
          "Solution For Exercise: Loops",
          "Quiz - Loops",
          "Break and Continue",
          "Functions - Parameters - Arguments and Return - Exercise Included",
          "Code: Functions",
          "Nullables In Kotlin",
          "Nullables - Elvis Operator - Not Null Assertion",
          "Code: Nullables",
          "Quiz - Fundamentals Kotlin",
          "Summary - Kotlin Fundamentals I"
        ],
        "Object Oriented Programming Basics in Kotlin": [
          "Introduction to the chapter",
          "Introduction to OOP",
          "Classes and Objects",
          "Classes And Initializers",
          "Exercise Classes and Objects",
          "Solution for Exercise Classes and Objects",
          "Scope And Shadowing",
          "Member Variables - Functions And Constructors",
          "Lateinit Plus Setters And Getters",
          "Code - Classes",
          "Data Classes",
          "Challenge Classes",
          "Solution: Challenge Classes",
          "Inheritance",
          "Interfaces",
          "Abstract Classes",
          "Typecasting",
          "Summary Of Classes And OOP",
          "Quiz - Object Oriented Programming"
        ],
        "More Fundamentals of Kotlin": [
          "Introduction to the chapter",
          "Overview Collections",
          "Arrays",
          "Lists",
          "Sets and Maps",
          "ArrayLists",
          "Exercise ArrayLists",
          "Solution For Exercise: ArrayLists",
          "Lambda Expressions",
          "Visibility Modifiers - public - private- internal - protected and the keyword op",
          "Nested and Inner Classes",
          "Safe Cast and Unsafe Cast Operator",
          "Exception Handling With Try And Catch",
          "Quiz On More Fundamentals Of Kotlin",
          "Summary Of This Chapter",
          "Useful Links Additional Info"
        ],
        "Compose Basics and UI Elements": [
          "Compose Overview",
          "Composable Functions and Compose Activity",
          "Text Composable and Compose Preview",
          "A Simple Dog Profile Page - Column and Image Composable",
          "Compose Modifier and Row Element",
          "Adding Buttons and their Text",
          "Card and Vertical Scroll Composable",
          "ConstraintLayout in Jetpack Compose",
          "ConstraintLayout With Decoupled Api",
          "Kotlin For compose",
          "State and Recomposition - remember and rememberSaveable",
          "Compose Basics and UI elements"
        ],
        "Gmail App interface Design: More compose UI elements": [
          "What we are going to build in this video - GMAIL APP UI",
          "Gmail design - AppBar Menu",
          "Gmail Design - Drawer Menu",
          "Gmail Design - Drawer Menu Part 2 - ScrollState and menuItems",
          "Gmail Design- Bottom Navigation bar",
          "GMail Design - Lazy Column",
          "Gmail App: Floating action button",
          "GMailApp - Account Dialog",
          "Gmail App -AccountDialog part 2",
          "More Composable Element"
        ],
        "News App - Navigation In Compose": [
          "Introduction",
          "Adding Navigation",
          "NavHost and NavController",
          "Adding data to TopNews",
          "Navigate with argument",
          "Displaying News Detail",
          "Adding AppBar and Formatting Date in Time Ago",
          "Understanding Bottom Bar Navigation",
          "Adding Bottom Navigation to the NewsApp Part 1",
          "Adding Bottom Navigation to the NewsApp Part 2",
          "Navigation in Compose"
        ],
        "News App - Using Retrofit in Jetpack Compose": [
          "Introduction",
          "Retrofit Overview",
          "Adding Retrofit to our App part 1",
          "Adding Retrofit to our App part 2",
          "Updating the TopNews with data from the Api",
          "Categories Screen with Scrollable Tab",
          "Setting up the Categories Article Card Composable",
          "BEFORE you watch - Categories Screen with Scrollable Tab - Working with state",
          "Displaying article by category on Category Screen",
          "Adding a header with HttpInterceptor to Retrofit",
          "Preparing the news source page",
          "Displaying news by Source",
          "Search Feature",
          "Section 9"
        ],
        "MVVM - Model View View Model - News App": [
          "Introduction to MVVM",
          "Refactoring Overview",
          "Adding ViewModel and Coroutine to our News App part 1",
          "Adding ViewModel and Coroutine to our News App part 2",
          "Adding ViewModel and Coroutine to our News App part 3",
          "Loading and Error State"
        ]
      },
      "requirements": [
        "No Programming Skills required",
        "PC, Mac, or Linux Machine required",
        "Android phone not required, but recommended."
      ],
      "description": "So you want to become an Android developer in 2022 and work from anywhere in the world, or maybe even the same place you're currently at, but with much more interesting and well-paying jobs? Learning Android Jetpack Compose App development is the way to go.\nYou have a great idea for an app and you just need to learn how to make it happen? Or do your friends know that you are tech-savvy and they constantly come to you with their great ideas and want you to build them?\n\nDo you have no programming experience whatsoever? Or maybe you have worked with another programming language in the past?\n\nEither way - you're in the right place.\nIn this course, you will learn everything you need to know, to build your own apps in Android Jetpack Compose, no matter what you need them for. For your company, your friends, your own business, or simply for fun. You'll become a real Android App Developer by getting the best Android Jetpack Compose App development course on Udemy.\n\nWhy care about Jetpack Compose?\nJetpack Compose is the new way of building Android Apps. It's a Package that Google has developed and pushes now. Google believes that this is the best way to build Native Android Applications, and so do I!\nHow is this course different than my Android 12 Masterclass?\nYou might have seen my Android 12 Masterclass which is the go-to point when it comes to Android App development up to now. If you need to work on existing projects, or you find code on GitHub from the past, it will most likely not be in Jetpack compose but using the old-fashioned way with XML for the User Interface. This is still good and relevant, and will probably stay relevant for another 2-3 years. But if you want to learn the absolute newest and latest technology, then Jetpack Compose is the way to go.\nIf you are uncertain, then I would recommend you get both courses. The first 6 hours of each of the courses are the same, as the Kotlin basics are the same. We build on those in each of the courses and develop some really cool applications together!\nIf you sign up now you will get all this Android app development content:\nOver 15 hours of high quality & high definition 1080p video content\nThe complete code with step-by-step guides (in the code itself). So either you follow along in the video, or you get right into the action in Android Studio yourself.\nLoads of exercises that make sure, that the knowledge really sticks.\nThe best Android 12 Jetpack Compose app development course money can buy.\nYou will build the complete GMail User Interface and learn how to:\nbuild composable functions\nbuild complex User Interfaces\nuse AppBar Menus\nDrawer Menus\nBottom Navigation Bars\nFloating Action Buttons\nCustom Dialogs\nLazy Columns (List Views)\nThen you will build a complete News App from Scratch, that loads Data directly from a NewsAPI! Hereby you will learn how to:\nUse the navigation component to go from one screen to another with data\nBuild a beautiful user interface in Kotlin\nWork with APIs by learning how to use Retrofit\nFilter data you get from an API\nDisplay News results interactively in different ways.\nAdding Headers with HTTPInterceptor\nYou will learn from me, Denis Panjuta a German engineer and tutor with over 8 years of programming and teaching experience.\nAfter the course you will be comfortable using:\nThe object-oriented programming language Kotlin, variables, data types, functions, classes, inheritance.\nControl flows (if/else, when, for/while/do-while loops) .\nData structures such as collections, arrays, ArrayLists, etc.\nNetworking, including asynchronous API calls, to retrieve live data from the cloud and store it there.\nJSON with all of its advantages.\nBest practices when using Kotlin and building Android apps.\nGet started now and become an Android Jetpack Compose app developer in just 4 weeks! You will learn all relevant Android App development techniques. I can tell you Android development is a lot of fun! This course will make your journey to becoming an Android developer fun as well.\nDon't waste any more time and get right into the action. This course consists of precisely curated content with fun example applications, exercises, presentations, and demos. As our main goal is to make sure, that you become a successful Android developer. We also offer high-quality support, so in case you get stuck, we will be there for you, answering your questions in the Q&A.\nREMEMBER… There is a full 30 DAY-money-back guarantee.\nSo what are you waiting for? Click the \"Buy now\" button. You’ve got nothing to lose only to gain from this world-class Android app development course.",
      "target_audience": [
        "Anyone who wants to build Android Applications",
        "People who want to get a job in tech as a Developer",
        "People who love to learn programming"
      ]
    },
    {
      "title": "Android Firebase Masterclass - Master Google Firebase",
      "url": "https://www.udemy.com/course/android-firebase-masterclass/",
      "bio": "Create Cloud based Android applications using Google Firebase and expand your career options",
      "objectives": [
        "Understand the fundamentals of Firebase and all of its benefits",
        "How to create Android Applications that use Firebase Features",
        "Learn how to use Firebase's full drop-in Authentication Solution which includes Google Sign-in, Facebook sign-in, Twitter sign in and many more!",
        "Become proficient in all core Firebase features such as Cloud Firestore, Cloud Storage, Cloud Messaging and many more!",
        "Learn detailed aspects of the Firebase Android SDK using the Kotlin programming language",
        "Master the art of problem-solving in programming using efficient, proven methods"
      ],
      "course_content": {},
      "requirements": [
        "Previous Kotlin and/or Java experience (consider the Java Masterclass, Java Crash course and/or Kotlin for Java developers courses from the Learn Programming Academy).",
        "Previous Android app development experience (taking the Android Java and/or Android Kotlin courses from the Learn Programming Academy).",
        "A PC, Mac or Linux computer"
      ],
      "description": "What you will learn in this course?\nIn this course, you will learn the fundamentals of Firebase and all of its benefits, and then apply that knowledge to your Android applications.\nSpecifically, you will be able to create Android Applications that use Firebase Features and learn how to use Firebase's full drop-in Authentication Solution which includes Google Sign-in, Facebook sign-in, Twitter sign in and many more!\n\nYou will also become proficient in all core Firebase features such as Cloud Firestore, Cloud Storage, Cloud Messaging to name some. You'll master the art of problem-solving in programming using an efficient, proven method and learn how to write high-quality Kotlin code.\nIn addition, you will learn detailed aspects of the Firebase Android SDK using the Kotlin programming language and how to write Advanced Android applications.\nAlthough the courses focus is primarily on Kotlin, there is a section dedicated to Java developers.\nIf you want to become an expert in Android using the Firebase Platform, then this is the course to enroll in.\nThroughout the course, you can always contact your instructor Jason Fedin personally to get help when you're stuck. He regularly checks the discussions to help you in every step along the way.\nAlso, this course will be extended and refined in the future based on student feedback as Jason places a lot of value on the feedback of his students.\nWho is the course aimed at?\n\nThis is not a beginners course.  It's assumed you have Kotlin and/or Java experience either by taking a course like the  Learn Programming Academy's Kotlin for Java developers or Java Masterclass courses on Udemy, or equivalent courses.\nAdditionally, because the course is Android focused, it's assumed that you have an understanding of how to build Android applications. Either by taking one of both of the Learn Programming Academy's Kotlin or Java Android courses, here on Udemy, or equivalent.\n\nStudents and or commercial developers with knowledge of Kotlin and/or Java and Android who want to learn how to apply Firebase into their applications will get a lot from this course.\nGetting started\nIf you are ready to get started, click on the enroll or Add to Cart button on this page and start taking your Firebase skills with Android to the next level.",
      "target_audience": [
        "This course is not for beginners - You should have some experience in Kotlin and/or Java and Android app development by taking courses on these topics from the Learn Programming Academy (or other similar courses).",
        "If you’re someone who’s well-versed in Java and Kotlin and would want to take your Android application skills up a notch, then this course is for you!"
      ]
    },
    {
      "title": "Apple Watch Development",
      "url": "https://www.udemy.com/course/complete-apple-watch-dev-course-learn-by-building-apps/",
      "bio": "Apple Watch",
      "objectives": [
        "Lean Swift Programming",
        "Learn how to make the watch app you've been dreaming to make",
        "Learn Objective-C Programming",
        "Design Apple Watch User Interfaces",
        "Program Apple Watch Applications",
        "Learn XCode Interface Development Environment",
        "Create Dozens of useful app watches",
        "Learn how to make interactive watch apps",
        "Learn the hardware and software specifications of the Apple Watch",
        "Learn the fundamentals of object oriented programming",
        "Lean how to add, retrieve and display data such as text and images",
        "Learn how to animate images on the Apple Watch",
        "Learn how to send notifications on the Apple Watch",
        "Learn how to use timers on the Apple Watch",
        "Learn how to consume web services such as Bitcoin Live price quote",
        "Learn how to store data",
        "What are Swift playgrounds and how to use them",
        "way of thinking to create efficient algorithms",
        "code refactoring",
        "Web services",
        "Apple Watchkit framework",
        "Apple Watch controls and elements"
      ],
      "course_content": {
        "Introduction and updates": [
          "How to get the most out of this huge course",
          "New advanced app added: Knight Rider's KITT voice box (February 2015)",
          "Download updated files here for iOS 9 + WatchOS 2 + Swift 2 + XCode 7"
        ],
        "Apple Watch Hardware & Software Specifications": [
          "Hardware & Software Specifications part 1",
          "Hardware & Software Specifications part 2",
          "Watch hardware and software specifications"
        ],
        "Dive in head first - Build your first watch app": [
          "What is Xcode and how to download it free",
          "Create a Apple Watch app project with xcode - part 1 of 2",
          "Create apple watch app project with xcode part02 hello world",
          "How to display the glance view in the apple watch app simulator",
          "Display Notifications Within Apple Watch App",
          "How to send notifications for apple watch app",
          "(optional) How to get the iOS Developer license and provisioning profile",
          "Simple xcode project"
        ],
        "Programming Fundamental Knowledge with Swift": [
          "Intro to iOS Programming using Swift",
          "Basic Concepts",
          "Data Types Part 1 of 2",
          "Data Types Part 2 of 2",
          "Operators",
          "Conditional Statements using Swift",
          "Control Flow Statements using Swift",
          "Swift Functions",
          "Collections",
          "Swift Classes and Objects part 1 of 2",
          "Swift Classes and Objects part 2 of 2",
          "Fundamental Knowledge"
        ],
        "Programming with Swift Fundamental Exercises": [
          "Quickly create an xcode project using Swift",
          "Exercise 1 - Hello World",
          "Solution of exercise 1 - Hello World",
          "Exercise 2 - Mathematical Operations",
          "solution exercise 2 - Math Operations",
          "Ex. 3 - Display strings in console",
          "Solution of Exercise 3 - Display strings in console",
          "Exercise 4 - Range of even numbers",
          "Solution of Ex. 4 - Range of even numbers",
          "Exercise 5 - While Loops",
          "Solution of Exercise 5 - While Loops",
          "Exercise 6 - For loops",
          "Solution of Exercise 6 - For loops",
          "Exercise 7 - IFs and modulus",
          "Solution of exercise 7 - IFs and modulus",
          "Exercise 8 - String manipulation",
          "Solution A of exercise 8 - String manipulation",
          "Solution B of exercise 8 - String manipulation",
          "Exercise 9 - Working with Arrays",
          "Solution A Ex. 9 - instantiating Arrays",
          "Solution B exercise 9 - Array handling",
          "Fundamental exercise 10",
          "Solution of fundamental exercise 10",
          "Exercise 11 - Split string into array",
          "Sol. ex.11 - Array made from splitting a string",
          "Exercise 12 Merging Arrays",
          "Solution exercise 12 combining arrays",
          "Exercise 13 - Insert data into sorted array",
          "Solution A ex. 13 Keep array order",
          "Solution B of exercise 13 - Sorting arrays",
          "Exercise 13 solution C (Advanced)",
          "Fundamental exercises"
        ],
        "App: Build a Finger Tap Count Watch App with Swift": [
          "Intro and demo of the Finger Tap Count Apple Watch App Using Swift",
          "Create FingerTapCount xcode project using swift and watchkit",
          "Add image file to apple watch app xcode project",
          "Create the Finger Tap Count Visual User Interface screen in the watch storyboard",
          "Use Assistant Editor to connect button tap action to code",
          "Code logic to display text in WKInterfacebutton element",
          "wkinterfacebutton change font family color and size",
          "Finger Tap Quizz"
        ],
        "Mastering Swift Playgrounds": [
          "How to create a playground in xcode using Swift",
          "What is a swift playground and how to use it",
          "Swift playground and array manipulation",
          "Swift playgrounds for math algebra graphs",
          "Playground quiz"
        ],
        "App: Tip Calculator watch app (Swift)": [
          "Introduction and demo of the tip calculator watch app using Swift",
          "Create Apple Watch Tip Calculator project in xcode",
          "Create tip calculator watch screen user interface using the storyboard",
          "Connect wkinterfacelabel and wkinterfacebutton to code using assistant editor",
          "Write code logic to increase or decrease bill amount",
          "Updating the tip amount on watch screen",
          "Refactor code into one function",
          "Tip calculator Quiz"
        ],
        "App: Random Number Generator Watch app": [
          "Intro and Demo of the random number generator apple watch app with Swift",
          "Create swift xcode project",
          "Create random number watch app User Interface in the Storyboard",
          "Connect wkinterfacelabel and ibaction to code using Swift",
          "Trigger the ibaction watchkit using swift and arc4random_uniform method call",
          "Add UI for maximum number to generate",
          "Connect button sent actions and wkinterfacelabel to code",
          "Write logic for button plus and minus pressed",
          "Tweak user interface and test the app in the watchapp simulator",
          "Interface elements and controls Quiz"
        ],
        "App: Build an Egg Timer Watch App": [
          "Introduction to the Egg Timer Class using Swift",
          "Create Egg Timer Watch app project in XCode",
          "Add Image assets to Apple Watch App Extension",
          "Create Egg Timer Watch App User Interface in the Builder",
          "Hook the WKInterfaceButton and WKInterfaceTimer to code iboutlets",
          "Create apple watch ibactions with swift",
          "Connect ibactions to storyboard",
          "Modify WKInterfaceButton attributes",
          "WKInterfaceTimer atributes",
          "Writing the Timer Logic part 1",
          "Writing the Timer Logic part 2",
          "Writing the WKInterfaceTimer countdown has stopped Logic part 1",
          "Writing the WKInterfaceTimer countdown has stopped Logic part 2",
          "Egg timer final tweaks",
          "Egg timer reset button logic",
          "Timers Quiz"
        ]
      },
      "requirements": [
        "how to use a MAC helps",
        "a MAC computer or a mac virtual machine",
        "motivation to learn"
      ],
      "description": "$37 for a limited time only (instead of $199)\nBreaking News: lectures and codes upgraded for iOS 9, Apple Watch OS 2 (watchOS), XCode 7 and Swift 2, ObjC\nWelcome to this Apple Watch class, this is the GO TO course to build Apple Watch apps with theory and hands-on training, using both Swift and Objective-C ( ObjC ). All in one huge course with unbeatable value.\nWhether you are a beginner or advanced developer, this course is for you.\nThe course covers the apple watch specifications (hardware and software), fundamentals of object oriented programming using Swift, tons of exercises with solutions to make sure you strengthen your degree of understanding, swift playgrounds, and a dozen real useful Apple Watch apps built from scratch, with the final completed source code for you to enjoy!\nSome of these Apple watch apps you will build are:\n- Hello World ( Watch OS / Swift )\n- Finger Tap Count ( Watch OS / Swift )\n- Random Number Generator ( Watch OS / Swift )\n- Egg Timer ( Watch OS / ObjC )\n- Head or Tail ( Watch OS / Swift )\n- Roll the Dice ( Watch OS / Swift )\n- Top 10 Actresses (with modal details) ( ObjC )\n- Temperature Converter ( Watch OS / Swift )\n- Tip Calculator ( Watch OS / Swift )\n- Bitcoin Live Price Quote (that's right!) ( Watch OS / Swift )\n- Top Speed Cars Catalog ( Watch OS / Swift )\n- and much more to come… ( in Objective C and Swift )\nEach of these apps will teach you a brand new set of skills and will be the stepping stones for you to make that app that you've been dreaming of.\nWith the Apple Watch, the possibilities are endless but you have an opportunity to make these apps become real. Some of you may have missed the iPhone gold rush in 2007, so don't miss the boat on this one, and come make history with us. Let's own the Apple Watch world!\nWhat makes me qualified to teach you the Apple Watch OS development? And why I'm the best at what I do?\nMy name is Yohann, I've been an iOS programming college instructor for the past 7 years, I know about teaching. Now I'm not just about theory, if you want just boring theory, enroll yourself in a plain University class. This course is NO FLUFF, get it done!.\nAlso, I'm not just the average teacher that tells you “do this, do that\" but these teachers have no real life experience. As a matter of fact I am the most qualified in the App store out off all instructors here. That's right. Let me brag now: I do what I preach. I myself have more than a hundred apps on the iTunes app store, dozens of Android apps, dozens of Apple Watch apps, which many of them reached top 10 worldwide, and I've helped thousands of students become professional iPhone developers, who themselves made it to the top 10 worldwide too! I've gotten great feedback from all of these classes and I've been featured in the press in prestigious media like Forbes online, WIRED, and Yahoo news. You definitely should follow my foot steps.\nGo check out the Colorblind eye exam on iTunes, and La Bible Integrale in French. I've got millions of downloads and I want you to get to this level by taking this course.\nI'm really excited about this course cause it's like the bible of the Apple Watch. Any other course will feel “unfinished\" to you once you've taken this one.\nIt's 2015, it's time to make awesome apple watch apps! Apple said their watch is coming out early 2015. There's no reason you shouldn't have an app ready for the launch.\nSo take this course already, it's a no brainer. Your future self will thank you for it.\nBy the way, don't forget to watch the intro video for a sample of the course.\nCheers!\nUpdate (February 2015): New advanced app added: Create a Knight Rider's KITT voicebox apple watch app that communicates with the iPhone and plays sounds on the phone. It will teach you the necessary skills to control any iPhone apps from the apple watch interface! (section 19) Also please watch video lecture 2 for details.\nThis is the Apple Watch course you've been looking for. Somebody said Apple Watch ?! Why haven't you joined this Apple Watch course yet?",
      "target_audience": [
        "This Apple Watch course is meant for newbies who are not familiar with iOS nor the Apple Watch SDK",
        "This course is also meant for intermediate developers or computer science students who wants to get in the Apple Watch development"
      ]
    },
    {
      "title": "Firebase Firestore for iOS",
      "url": "https://www.udemy.com/course/devslopes-firestore-ios/",
      "bio": "Learn all about the brand new Firestore, a NoSQL document based technology",
      "objectives": [
        "Add, edit and delete data from a Firestore database",
        "Implement powerful login capabilities into your apps using Firebase Authentication",
        "Add Firestore security features to protect your database and restrict access to authorized users only",
        "By the end of this course you will know advanced skill with Firestore and how to integrate it into your apps"
      ],
      "course_content": {},
      "requirements": [
        "Must have a computer with OSX or macOS on it"
      ],
      "description": "Firestore for iOS\nWelcome to beginner Firestore development. In this course you'll learn all about the brand new Firestore, a NoSQL document based technology. We start from the ground up and teach you everything you need to know from the fundamentals, authentication and a deep dive into Firestore security rules.\n*BASIC KNOWLEDGE OF SWIFT AND XCODE IS ASSUMED\n\nWHY TAKE THIS COURSE?\n\nLearning the new Firestore should be taught using real world examples. In this course you're going to learn to code the Devslopes way. We teach by building real world, professional, amazing looking apps from start to finish.\nHere are some of the things you'll be able to do after taking this course:\nBuild your own apps using the new Firestore real time database\nLearn how to create and save data to your Firestore database\nAdd powerful login capabilities to your apps using firebase authentication\nUse Firestore security features to protect your database and restrict access to authorized users only\nWho this course is for:\nPeople who want to build advanced iOS apps!\nThose who want to create their own startup\nThose looking to get a full time job as a developer\nBusiness owners\nStudents & teenagers\nPeople who want to make money building apps\nIf you are a student of our iOS 11: From Beginner to Paid Professional - or have any other basic understanding of iOS development, then this is a perfect next step to advanced your iOS and Firestore skills.\nDon't forget to join the free live community where you can interact with other students and ask questions to the community.",
      "target_audience": [
        "If you have basic experience with iOS development take this course",
        "If you have basic experience with iOS or mobile development then take this course"
      ]
    },
    {
      "title": "FlutterFlow Beginners Bootcamp: Build your app from scratch",
      "url": "https://www.udemy.com/course/flutterflow-beginners-bootcamp-build-your-app-from-scratch/",
      "bio": "Fundamentals|| TikTok Design||APIs|| ||Firebase|| Google Platform|| Dart in FlutterFlow and much more!",
      "objectives": [
        "Connecting Flutterflow and Firebase",
        "User authentication and verification",
        "API operation",
        "Database and Query Management in FlutterFlow",
        "Introduction to Dart and application in custom functions",
        "Tinder Clone",
        "TikTok Design"
      ],
      "course_content": {
        "Course Presentation": [
          "Introduction",
          "Speed of videos",
          "Indications"
        ],
        "FlutterFlow Overview": [
          "Flutterflow and No Code/ Low Code Era",
          "FlutterFlow Dashboard",
          "FlutterFlow App Builder (Using a Template)"
        ],
        "Firebase Connection": [
          "About Firebase",
          "Firebase SetUp: First Way",
          "Firebase SetUp: Second Way",
          "Creating a Project from Scratch (Homework)",
          "Firebase"
        ],
        "Interface and Widgets": [
          "Module Presentation: ¿What is a widget?",
          "An overview of the types of Widget in FlutterFlow",
          "Scaffold",
          "Column",
          "Rows",
          "Container",
          "Buttons",
          "We have many widgets in Flutterflow",
          "Components",
          "Homework: Profile Page Design",
          "Solution of Homework"
        ],
        "Actions and CRUD": [
          "Actions in FlutterFlow: Overview",
          "Classification of actions according to their use",
          "Actions: Navigation",
          "CRUD: Create",
          "CRUD: Read",
          "CRUD: Update",
          "CRUD: Delete",
          "Actions and CRUD",
          "State Managment: Rearranging the project",
          "State Managment: Update App State",
          "State Managment: Update Page State",
          "State Managment: App State v.s Page State",
          "State Managment: Set/Reset Form Fields",
          "Widget/UI Interactions: Bottom Sheet, Date Picker and Color Picker",
          "Widget/UI Interactions: Drawer",
          "Alerts and Notifications: Alerts and Snack Bar",
          "Utilities: Set Dark Mode Settings",
          "Share: Share",
          "Share: Send Email and Call Number",
          "Animations: On Page Load",
          "Widget Animation: On Action trigger",
          "Animations: Lottie Animations",
          "Animations: Rive Animations",
          "More About Actions in FlutterFlow",
          "Conditional Actions",
          "Section Summary"
        ],
        "Authentication: Login and Register Using Firebase": [
          "Login Page Design",
          "Register Page Design",
          "Logic of Authentication",
          "Log Out",
          "Verification: Send Email Verification Link",
          "Verification : Verification System",
          "Form Validation",
          "Authentication"
        ],
        "Database (Backend Query)": [
          "BackEnd Query: Presentation and reorganization of the project",
          "Query Collection: List Of Document",
          "Query Collection: Single Document",
          "Document From Reference and Parameters",
          "Defining API CALL",
          "Applying API Call",
          "SQLite Query: Read",
          "SQLite Query: Update- Insert (New lesson)",
          "SQLite Query: Update- Update (New lesson)",
          "SQLite Query- Update- Delete (New lesson)",
          "Data Base"
        ],
        "Actions on Widgets": [
          "Actions on TextField Part 1",
          "Actions on TextField Part 2 (Using Simple Search)",
          "Actions on TextField Part 3 (Using Simple Search)",
          "Choice Chips and \"On Selected\""
        ],
        "Custom functions: Introduction to Dart": [
          "Introduction to Dart Part 1: Some types of Variables",
          "Introduction to Dart Part 2: Functions",
          "Functions with Dart in FlutterFlow",
          "Applying the function",
          "Functions with Artificial Inteligence: Copilot Case",
          "Functions with Artificial Inteligence with Chat GPT",
          "Homework: Function to create a Twitter NickName (@user)",
          "Solution of Homework"
        ],
        "Rules": [
          "Rules: Overview",
          "Cases"
        ]
      },
      "requirements": [
        "No prior knowledge is required, you will start from scratch. But having notions of dart and Flutter helps."
      ],
      "description": "Welcome to this course with FlutterFlow! If you have ever dreamed of creating your own mobile applications in a simple way and without having previous programming experience, this is the perfect course for you.\n\n\nRequirements:\nNone! This course is designed for complete beginners with no prior programming experience.\nWho is it addressed to?\nPeople interested in creating mobile applications without having to write code.\nBeginners in programming and application development.\nDesigners who want to expand their skills to create interactive applications.\nGeneral public\n\n\nWe'll guide you through every step of the app building process using FlutterFlow, a powerful platform that allows you to create stunning apps without having to write code. You'll learn from scratch, meaning no prior programming or design experience is necessary.\nBy the end of this course, you will have acquired a set of valuable skills that will allow you to create your own amazing and functional applications without the barrier of traditional programming. Whether you want to build your own personal app, explore career opportunities, or venture into the world of app development, this course will provide you with the foundation you need.\n\n\nEnroll today and start your exciting journey towards becoming an app development expert with FlutterFlow!",
      "target_audience": [
        "Developers, Entrepreneurs, Designers"
      ]
    },
    {
      "title": "The Complete Android Animations Course",
      "url": "https://www.udemy.com/course/the-complete-android-animations-course/",
      "bio": "A Practical Dive into The World of Animation & Motion in Android",
      "objectives": [
        "A Deep Practical Knowledge Of Android Animations And How To Use Them In Your Apps",
        "Add Powerful Animations To Your Android Apps",
        "Make Better And Engaging UI/UX For Your Apps Using Android Animations",
        "Increase Your User Base by Leveraging Animation Capabilities In Android",
        "Learn To Add Useful Animations to Almost Any View In Your Android Apps",
        "Learn to Use New Animation APIs",
        "Learn About Good Animation Libraries Out There"
      ],
      "course_content": {
        "Introduction to The Course": [
          "What You Will Learn in This Course"
        ],
        "Classic Android View Animation": [
          "Animation in Android",
          "The android.view.animation API",
          "Animating Views Using android.view.animation API",
          "Define View Animations in Android Resources",
          "Create an animation resource",
          "Move Between Two Activities With Animation",
          "Create back animation",
          "AnimationListener to the Rescue: Combine View Animation and Activity Animation",
          "Create an Animated Background for a View",
          "Create A Background Selector for Your Views"
        ],
        "Android 3.0 Animations - Animators": [
          "Introduction to Animators",
          "Create A Simple Animator",
          "Playing Several Animators at The Same Time",
          "Creating Chained Animators (ViewPropertyAnimator)",
          "Create Animations From Animator Resources"
        ],
        "Scenes and Transitions": [
          "Introduction to Transitions",
          "Create Simple Transitions",
          "Use Transition Resources Part 1",
          "Use Transition Resources Part 2",
          "Perform a Reverse Transition to mainScene"
        ],
        "Advanced Transitions and Shared Element Transition": [
          "Introduction to Lollipop Transitions",
          "Explode and Slide Transitions",
          "Coordinated Motion Using Slide Transition",
          "Transforms",
          "Shared Element Transition",
          "Share Multiple Elements Between Two Activities",
          "Window Content Transitions",
          "Use Transitions With Fragments"
        ],
        "Animated Vector Drawables (AVD)": [
          "Introduction to Vectors",
          "Create A SVG using Inkscape",
          "Import An SVG in Android Studio",
          "Create Animated Vectors in Android Studio (Multi-File Approach)",
          "Create Animated Vectors in Android Studio (Single-File Approach)",
          "Introduction to Shape Shifter",
          "Animating Paths (Path Morphing)",
          "Animating Trim Path",
          "Animating Clip Path",
          "Epilogue"
        ],
        "Physics-Based Animations": [
          "Introduction To Physics-Based Animations in Android",
          "Create A Fling Animation",
          "Use Touch Gesture To Invoke Fling Animation",
          "Fling In Both X and Y Axes With Fling Animation",
          "Create A Spring Animation in Android"
        ],
        "Extras: Useful Animation Libraries": [
          "Introduction to the Section",
          "Lottie: Introduction",
          "Create An Animation in After Effects",
          "Load A Lottie Animation in Your Android App",
          "Lottie Case Study: LottieFiles",
          "ViewPagerLayoutManager Part 1: Getting Started",
          "ViewPagerLayoutManager Part 2: Creating RecyclerView and Adding Layout Manager",
          "ViewPagerLayoutManager Part 3: Customization",
          "Add Background Selector To list Items",
          "Making Image Items Round"
        ],
        "MotionLayout": [
          "What Is MotionLayout?",
          "Create A Simple Motion Using MotionLayout",
          "MotionLayout Concepts",
          "Create A Curved Motion With MotionLayout",
          "Start Motion With A Swipe Gesture",
          "Animate Attributes With MotionLayout",
          "Create Complex Animations With MotionLayout Keyframes",
          "Keyframes",
          "Get The Most Out the Visual Motion Editor",
          "Migrate Existing Layouts To MotionLayout",
          "MotionLayout Compatibility",
          "Source Code For HelloMotionLayout (With Git)"
        ],
        "ConstraintLayout Animation": [
          "Introduction to Section",
          "Introduction to ConstraintLayout",
          "Design a Responsive Layout with ConstraintLayout",
          "Create A Simple Fade Animation Using ConstraintLayout Group",
          "Create A Nice Animation Using ConstraintSet",
          "Using Placeholder to Animate Layout"
        ]
      },
      "requirements": [
        "Basic Knowledge of The Java Programming Language",
        "Android Studio + Android SDK installed on your computer (Linux, macOS, or Windows)",
        "Your Love to Become A Better Programmer!"
      ],
      "description": "Have you ever been curious where those fancy motions in your favorite Android app come from? Have you ever asked yourself \"Hey man!  How can I add such animations to my apps?!\"\nHere's the good news!\nIn this course, you will understand how animation works in Android and will get a grip on Android's animation capabilities. You will also learn practical techniques to apply various animations in your Android apps. I will discuss many of Android's built-in APIs for creating animations in Android applications. Further, you will also get guides on several useful libraries to help you take your user interface / user experience to the next level by adding fantastic animations to your apps.\nThe course starts with view animations and then talks about animators, transitions, window animations, MotionLayout, animated vector drawables, third-party animation libraries and many more.  So, the course can be beneficial to you if you are either a beginner or a professional Android app developer. The content can be consumed with minimum requirements. Only a decent computer and Internet connection will sufficie.\nI look forward to seeing you in the course.\n\nYou will get guaranteed access to the eductional material, videos, and my support. If for any reason you didn't find the course meeting your expectations, you can get a refund within 30 days of your purchase. So, I assure you this will be a good investment in taking your development journey to the next level.",
      "target_audience": [
        "Beginner or Average Android Developer Who Wants To Add Nice Animations To Their Apps",
        "Advanced Android Developer Who Loves To Get A Better Understanding of Android Animations And Learn New Techniques In Action",
        "Animation Enthusiasts And Geeks Curious About Android UI",
        "Everyone Who Loves Programming And Animations"
      ]
    },
    {
      "title": "Dart and Flutter: The Ultimate Mobile App Development Course",
      "url": "https://www.udemy.com/course/dart-and-flutter-the-ultimate-mobile-app-development-course/",
      "bio": "Complete Dart and Flutter Mastery: Build Mobile Apps from Zero to Hero",
      "objectives": [
        "Introduction and features of Dart",
        "Master essential concepts such as variables, lists, maps, and strings",
        "Explore the power of decision-making with conditional statements",
        "Unleash the potential of loops and iteration",
        "Understand the essence of functions",
        "Discover how to gracefully handle exceptions and prevent unexpected crashes",
        "Master classes, objects, inheritance, polymorphism, and encapsulation",
        "Expand your programming paradigm with functional programming concepts",
        "Explore Dart's powerful collection",
        "Basics of Flutter, from its architecture to its unique features",
        "Learn about the different types of widgets, their properties, and how to create responsive and interactive user interfaces",
        "Building a Complete Application Using the Stateful Widget",
        "Building User Management Application Using SQLite Database"
      ],
      "course_content": {
        "Welcome": [
          "Welcome to the Course",
          "Install VSCode and Dart SDK",
          "What you will learn in this Course?"
        ],
        "Introduction": [
          "Section Overview",
          "Hello World Example",
          "Comments",
          "Section Conclusion"
        ],
        "Built-in Data Types": [
          "Section Overview",
          "Variables and Data Types",
          "Literals and String Interpolation",
          "Constant",
          "Section Conclusion"
        ],
        "Conditional Statements": [
          "Section Overview",
          "Conditional Statement",
          "Conditional Expression",
          "Switch Case Statement",
          "Section Conclusion"
        ],
        "Iterative Statements": [
          "Section Overview",
          "For Loop",
          "For in Loop",
          "While Loop",
          "Do While Loop",
          "Break Statement",
          "Continue Statement",
          "Labels",
          "Section Conclusion"
        ],
        "Functions": [
          "Section Overview",
          "Functions",
          "Arrow Function",
          "Optional Positional Parameter",
          "Optional Named Parameter",
          "Optional Default Parameter",
          "Section Conclusion"
        ],
        "Exception Handling": [
          "Section Overview",
          "Exception Handling",
          "Custom Exception Handling Class",
          "Section Conclusion"
        ],
        "Object Oriented Programming": [
          "Section Overview",
          "Class and Objects",
          "Constrcutor",
          "Getter and Setter",
          "Inheritance",
          "Method Overriding",
          "Abstract Class",
          "Interface",
          "Static Variables and Methods",
          "Section Conclusion"
        ],
        "Functional Programming": [
          "Section Overview",
          "Lambda Function",
          "High Order Function",
          "Lexical Closure Function",
          "Section Conclusion"
        ],
        "Dart Collection": [
          "Section Overview",
          "List",
          "Set and Hashset",
          "Map and Hashmap",
          "Section Conclusion"
        ]
      },
      "requirements": [
        "Basic programming knowledge of Dart is recommended, but no prior experience with Flutter is required. This course is designed for learners of all backgrounds.",
        "Desktop Computer or laptop",
        "Visual Studio Code Editor / Android Studio"
      ],
      "description": "Are you ready to dive into the exciting world of mobile app development and become a proficient app creator? Welcome to \"Dart and Flutter: The Ultimate Mobile App Development Course,\" a comprehensive learning journey that equips you with the skills to craft powerful, efficient, and visually stunning mobile applications for both iOS and Android platforms.\n\n\nCourse Highlights:\n\n\nMaster Dart Programming:\nBegin your journey by mastering Dart, a versatile and user-friendly programming language designed for building cross-platform applications. Whether you're a coding novice or an experienced developer looking to expand your skillset, this course is tailored to guide you from the basics to advanced concepts. You'll delve into essential topics like variables, data types, conditional and iterative statements, functions, object-oriented programming, and functional programming.\n\n\nUnlock the Power of Flutter:\nDiscover the power of Flutter, a groundbreaking framework that enables you to create natively compiled applications from a single codebase. In the \"Flutter Essentials\" section, you'll harness Flutter's capabilities to design and build mobile applications with ease. Explore Flutter widgets, layouts, navigation, and state management, and witness the magic of creating beautiful, responsive apps.\n\n\nReal-World Application Development:\nPut your knowledge into practice by working on hands-on projects and real-world examples that bridge the gap between theory and application. Build dynamic user interfaces, manage user interactions seamlessly, and develop a fully functional mobile app. You'll even integrate SQLite, a local database, to create a Note Keeper app, mastering data persistence and efficient user data management along the way.\nInstructor Guidance:\n\n\nBenefit from the expertise of our experienced instructor, a seasoned mobile app developer who will be with you every step of the way. Gain valuable insights, tips, and best practices that will set you on the path to success as a Dart and Flutter developer.\n\n\nBy the end of \"Dart and Flutter: The Ultimate Mobile App Development Course,\" you'll emerge as a proficient mobile app developer, fully equipped to tackle diverse software development challenges. Whether you aspire to create your own apps or pursue a career in mobile app development, this course is your gateway to success.\n\n\nAre you ready to bring your app ideas to life and embark on a journey of mobile app development mastery? Enroll now in \"Dart and Flutter: The Ultimate Mobile App Development Course\" and unlock your potential!\n\n\nDon't miss out on this opportunity to become a skilled Dart and Flutter developer. Join us in this thrilling learning adventure and take your mobile app development skills to new heights!",
      "target_audience": [
        "People who want to learn cross-platform mobile applications.",
        "Software Engineers",
        "Mobile Application Developers",
        "Computer Science or IT students"
      ]
    },
    {
      "title": "Complete Python Kivy course from Scratch | APKs with Python",
      "url": "https://www.udemy.com/course/complete-python-kivy-course-from-scratch-apk-with-python/",
      "bio": "Comprehensive course on Graphical User Interface using Kivy Python. Learn to build full mobile gui apps with Python Kivy",
      "objectives": [
        "Explain the features and behavior of the Kivy framework and how it can be used to create cross-platform applications in Python.",
        "Use basic Kivy widgets such as buttons, labels, text inputs, and images to design user interfaces.",
        "Apply different Kivy layouts to create responsive apps that adapt to different screen sizes and orientations.",
        "Integrate Fastapi with Kivy to build an AI-powered text analyzer app that can communicate with a web server and perform natural language processing tasks.",
        "Implement advanced Kivy widgets such as dropdowns, screen managers, and popups to enhance the functionality and usability of your apps.",
        "Create a multiscreen app that can read and write data on local storage of desktop and mobile devices using Kivy storage modules",
        "Draw various shapes and graphics on a Kivy canvas and use them to make simple animations.",
        "Visualize data using graphs in Kivy and develop a desktop-based data visualizer app that can plot different types of charts",
        "Apply object-oriented programming concepts in Python and Kivy to organize your code and reuse your components."
      ],
      "course_content": {
        "Introduction": [
          "Kivy Fundamentals",
          "Kivy Widgets",
          "Layouts",
          "Preparing Environment"
        ],
        "Basic Widgets": [
          "\"Hello World!\" in Kivy",
          "Labels",
          "Buttons",
          "Button Properties",
          "Button's Event Triggers",
          "Text Inputs",
          "Creating Elements using Python",
          "\"build\" method of the App Class",
          "Complete Python Code",
          "Complete Kivy Lang Code",
          "Conversion to APK",
          "Conversion using Github Action"
        ],
        "Layouts": [
          "BoxLayout",
          "Size Hint in BoxLayout",
          "Nested BoxLayout",
          "AnchorLayout",
          "BoxLayout with AnchorLayout",
          "GridLayout",
          "Implementing Shuffling Logic",
          "GridLayout Docs",
          "StackLayout",
          "Scheduling Tasks",
          "ScrollView",
          "PageLayout"
        ],
        "Text Analyzer App": [
          "Introduction",
          "Designing Interface",
          "Introduction to APIs using FastAPI",
          "Text Analyzer API",
          "Attaching API with App",
          "Results on Label",
          "Deploying API to Vercel",
          "Converting to APK"
        ],
        "More Widgets": [
          "Checkbox",
          "Events",
          "Slider",
          "Progress Bar",
          "Screen Manager",
          "Transitions",
          "Dropdown Menu",
          "More on Dropdown",
          "Popup"
        ],
        "To-Do List App": [
          "Introduction",
          "Building Basic Structure",
          "Creating Widgets during runtime",
          "Second Screen",
          "Kivy Storage",
          "Title Truncation",
          "Implementing Delete Logic",
          "Refining the UI",
          "Conversion to APK"
        ],
        "Kivy Graphics": [
          "Introduction to Canvas",
          "Creating Custom Layouts",
          "Canvas in Python",
          "Circular Button",
          "Creating Custom Infographic"
        ],
        "Structuring/Organizing Freelance Project": [
          "Introduction",
          "Starting Project with Login Interface",
          "Creating Custom Widgets",
          "Signup Interface",
          "Creating Database",
          "Home Interface: Top Bar",
          "Home Screen: Footer",
          "History Icon Adjustment",
          "History Screen",
          "Linking App with API",
          "Inserting Fact into Database",
          "Linking Database with History Screen",
          "Refining the app",
          "Conversion to APK"
        ],
        "Debugging APK with Android Logcat": [
          "Debugging with Logcat"
        ],
        "Azure MySQL Database with Kivy": [
          "Creating MySQL Server on Azure",
          "Connecting App with Server"
        ]
      },
      "requirements": [
        "Some Basic Knowledge of Python is required.."
      ],
      "description": "Welcome to the Kivy Python course, where you will learn how to create cross-platform applications using the Kivy framework. Kivy is an open-source Python library that allows you to build interactive and responsive apps for desktop and mobile devices. In this course, you will learn the fundamentals of Kivy, how to use various widgets and layouts, integrate APIs and AI features, make games and data visualizer apps, and deploy your apps on different platforms.\n\n\nThe course is divided into nine sections covering different aspects of Kivy's development. Here is a brief overview of what you will learn in each section:\n\n\nThe first section is all about the Kivy Fundaments which will highlight the features and Behavior of the Kivy Framework.\nIn the second section, we’ll dive into coding and will understand some basic Kivy Widgets. By the end of this section, you’ll have your first app ready to be installed on your Android Devices.\nThe following section is all about layout and you’ll learn how to make responsive apps in Kivy using Kivy Layouts.\nForth section is the most exciting one since you’re going to learn a lot of new things. We’ll learn how to make APIs in Python using Fastapi, how to deploy them, how to integrate them with Kivy, and finally by the end of this, you’re going to have an AI-powered text analyzer app ready to be uploaded on PlayStore.\nThe fifth section will cover some complex Kivy Widgets including Dropdowns, Screen Managers and popups, etc.\nIn the sixth section, we’ll make our next app. But this time you’ll learn how to make a multiscreen app and how to read and write data on local storage of Desktop and Mobile Phones.\nIf you want to make Games using Kivy Framework then the seventh section will make your base since you’ll learn about Kivy graphics including canvas and different shapes.\nWe’re going to make a Desktop based Data Visualizer App using Kivy Python in the eighth section and you’ll learn how to use Graphs in Kivy.\nIn the ninth section, you will review some of the essential object-oriented programming concepts in Python that are relevant to Kivy's development. You will learn about classes, objects, inheritance, polymorphism, encapsulation, and abstraction in Python.\nAll the code files and resources of this course are available on GitHub. This course is designed for anyone who wants to learn how to create cross-platform applications using Python and Kivy. No prior knowledge of Kivy is required, but some basic knowledge of Python is assumed.\n\n\nIf you are ready to start your journey with Kivy Python, enroll now and I'll see you in the next video.",
      "target_audience": [
        "Beginner Python Developer curious about GUI Development using Python",
        "Beginner Python Developer curious about Apps Development using Python"
      ]
    },
    {
      "title": "Master iOS Auto Layout (Swift/Xcode)",
      "url": "https://www.udemy.com/course/ios-auto-layout-swiftxcode/",
      "bio": "Master Auto Layout for Swift iOS Development with Xcode Storyboard and Programmatic approach",
      "objectives": [
        "Properly laying out UI components that will adjust to devices sizes and orientation.",
        "Get comfortable with auto layout UI using Storyboards.",
        "Learn auto layout programmatically"
      ],
      "course_content": {
        "Introduction": [
          "Why Auto Layout?",
          "Introduction to Auto Layout",
          "Identify Auto Layout Common Issue",
          "Constraints Priority",
          "Orientation Based Layout",
          "Proportional Constraints",
          "Size Classes: Key Concept",
          "Designing Layout with Size Classes",
          "Content Hugging and Compression",
          "Constraints Runtime Update",
          "Programmatic Constraints",
          "Layout Anchor",
          "Visual Format Language - Key Concept",
          "Constraint with Visual Format Language",
          "Dynamic Tableview Cell",
          "Stackview",
          "More Stackview",
          "Scrollview"
        ],
        "Where To Next?": [
          "Congratulations and Bonus Offer"
        ]
      },
      "requirements": [
        "Basic iOS development",
        "Latest Xcode"
      ],
      "description": "Auto Layout allows us to design and laying out UI components within our app that will be responsive to users' devices form factor and orientation. It will dynamically calculate the positions and sizes of the UI components automatically to deliver a consistent users experience in iOS app across devices, and with more and more devices form factors being introduced, mastering auto layout is critical and as developer we have to be really comfortable dealing with this.\nAuto layout in iOS uses a constraint-based approach, which means we are setting constraints for each of the UI components that will adapt to both external (ie device size, rotation) and internal (ie internationalization) changes. In this course we will be using the Xcode storyboard approach as well as programmatic way using Swift to set our layout constraints. In some cases programmatic way might be the only way especially if we want to change the constraints at runtime.\nThere are a lot to cover on this course:\nOrientation based layout\nSize classes\nConstraint priority\nProportional constraints\nContent hugging and compression\nRuntime update\nLayout anchor\nNSLayoutConstraint\nVisual Format Language\nDynamic tableview cell\nStackview\nScrollview\nBy the time we are done, you should be comfortable dealing with auto layout in your project.",
      "target_audience": [
        "Beginner and Intermediate iOS Developer"
      ]
    },
    {
      "title": "IOS 14 & Swift 5 - The Complete iOS App Development Course",
      "url": "https://www.udemy.com/course/ios-14-swift-5-the-complete-ios-app-development-course/",
      "bio": "IOS 14 App Development using Swift 5 and XCode 12 and become an iOS 14 developer with just one course.",
      "objectives": [
        "iOS Development with Swift 5",
        "Learn Swift-5 Basics",
        "Xcode 12",
        "Run IOS simulator on computer",
        "How to create visual designs in Story Boards",
        "How to add constraints to our design and make our app nice-looking on every device.",
        "How to connect visual side of an app to the code side.",
        "How to route to the different screens.",
        "How to transfer data between different screens",
        "TableViews",
        "Learn the key concepts of the Git",
        "Learn the entire Git workflow",
        "Learn create branches, resolve conflicts, undoing things etc.",
        "Create and fork repositories on GitHub and push changes back after locally",
        "Learn how to collaborate a GitHub project",
        "iOS App Development",
        "iOS app development is done primarily with Apple’s Xcode integrated development environment, Objective-C, and the Swift programming language.",
        "iOS development refers to the process of making mobile applications for Apple hardware, including iPhones and iPads.",
        "First and foremost, iOS developers should know how to code in either Objective-C or Swift.",
        "Is iOS development hard to learn? Fortunately, iOS development has a series of checks and balances that make it easy for you to learn.",
        "Apple products are everywhere. Homes and offices around the globe are filled with iPhones, MacBooks, Apple Watches, and Apple TVs."
      ],
      "course_content": {
        "Intro to iOS-14 & Swift-5": [
          "Introduction to iOS App Development Course",
          "FAQ about iOS App Development Course with Swift 5",
          "quiz"
        ],
        "XCODE Overview and Simulator": [
          "Create First Project in Swift 5, IOS 14",
          "Swift Holding Data",
          "Swift Data Types",
          "Basic Swift Rules",
          "quiz"
        ],
        "Create UI": [
          "How to Create UI?",
          "Connect UI and Code",
          "Adding Constraints to Design",
          "Swift Conditional Statements",
          "First App Final",
          "quiz"
        ],
        "Reach Data from UI": [
          "SWIFT How to make math operations",
          "SWIFT Floats vs Doubles",
          "Different UI Elements",
          "Reach data from UI",
          "UI Actions",
          "SWIFT Logic and booleans",
          "quiz"
        ],
        "Listing Data on IOS": [
          "App Introduction",
          "SWIFT Listing data structure Arrays",
          "Listing Data on IOS",
          "How to list data on TableView",
          "Create TableView data",
          "quiz"
        ],
        "Routing on IOS": [
          "Route to another screen",
          "Data transfer between screens",
          "Country Detail Screen",
          "SWIFT for in Loop",
          "quiz"
        ],
        "Important Swift Concepts": [
          "Swift Functions",
          "Swift Take Data from a function",
          "Swift Classes",
          "Swift Class Methods",
          "Swift Build Class hierarchy",
          "quiz"
        ],
        "App refactor with Classes": [
          "Refactor CountryList",
          "Swift Optionals",
          "Reorganize CountryList App"
        ],
        "Blog App": [
          "App Preview in Swift 5 and IOS 14",
          "Create and Design the App",
          "Connect Code and Visual Side",
          "Show Blog Entries in TableView"
        ],
        "How to Save Data": [
          "How to save Data",
          "How to reach data from CoreData",
          "Blog Entry Detail",
          "Automatic Function Calls",
          "Design Issues",
          "Design List Items",
          "Blog App Final"
        ]
      },
      "requirements": [
        "You have to have a Mac Computer for ios developemt and swift 5",
        "No prior IOS or Swift knowledge",
        "Desire to learn iOS Development",
        "GitHub account Admin rights required for software installation",
        "Desire to learn swift 5",
        "Desire to learn xcode",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to \"IOS-14 & Swift-5 - The Complete iOS App Development Course\".\nIOS-14 App Development using XCode-12 & Swift-5 and become an iOS 14 developer with just one course.\nSwift-5 is a programming language to create mobile applications for IOS. Apple released an of new features for developers at WWDC and with this course, you are gonna learn everything you need to make awesome iOS 14 apps. ios app developer, ios, swift, ios development, swift 5, ios14, ios 14, swift5, Xcode, ios 14 swift 5, xcode 12, ios app development swift\nThis course is for beginners. To be able to take this course, all you need is a Mac Computer. In this course, we are going to focus on essentials. We are going to learn everything about IOS and Swift from scratch.\nWe will see very important topics for IOS development like routing, storyboard designs, running simulators on Mac. Besides that, we will learn swift-5 basics. We are going to create different IOS apps. You are going to have a chance to be able to practice with these apps.\nI tried to tell all complex topics in very detail on the course. I used some diagrams to tell some important topics and created different mobile applications.\niOS app development is done primarily with Apple’s Xcode integrated development environment, Objective-C, and the Swift programming language. Together, these tools allow users to write, edit, and debug new iOS applications. Developing apps for iOS devices has become a big industry with a huge amount of job potential.\nApple products are everywhere. Homes and offices around the globe are filled with iPhones, MacBooks, Apple Watches, and Apple TVs. Regardless of which OS or device you intended to develop for, Udemy has a course to help you learn Swift, the language that powers them all.\nAt the end of the course you will learn these topics;\nBasics of SwiftUI,\nHow to create storyboard designs,\nHow to add constraints to the design,\nHow to connect visual side with code side,\nHow to route to the different screens,\nCreating your own iOS app is going to be clear for you.\nXcode\nSwift 5\nIOS 14\nIOS app development\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nWhat is iOS development?\niOS development refers to the process of making mobile applications for Apple hardware, including iPhones and iPads. Objective-C and Swift are the two programming languages that developers can use to build these apps. Apple has three requirements for iOS developers: using a Mac computer running the latest version of macOS, downloading Xcode, and having an active Apple Developer account. Because Apple standardizes iOS development, you're likely to rely on their native APIs and libraries as iOS software development kits (SDKs) as well. If you connect your app to cloud-based services using Apple APIs, you can also use the cloud for storage, database management, and app caching. When you are ready to test your app, you can only do so using an Apple iPhone mobile device. Once the app is complete, and all conditions are met, the final step is listing it in the App Store for iOS users to download.\nIs iOS development a good career?\nDue to its popularity and market demand, iOS development can be a good career choice. There are hundreds of millions of Apple iPhone and iPad users worldwide, giving you plenty of opportunities to work in iOS app development in any location. One of the career benefits of being an iOS developer is that Apple’s operating systems are standardized for future updates, which means that you do not have to invest your time to update them. To find exciting new opportunities in the iOS development field, try searching for relevant job titles such as mobile software engineer, mobile app developer, mobile developer, or mobile architect. Senior iOS engineer, iOS mobile developer, iOS engineer, and Lead iOS developer will generate useful results as well.\nWhat skills do I need to be an iOS developer?\nFirst and foremost, iOS developers should know how to code in either Objective-C or Swift. If you're unfamiliar with both, you should take advantage of Udemy's introductory courses that will cover everything you need to know to build and distribute your mobile apps on the App Store. iOS developers will also benefit from understanding how to use and navigate Xcode, as its Apple's official integrated development environment (IDE). Beyond the technical aspects of coding, knowledge of user-friendly interfaces can help broaden your skillset.\nIs iOS development hard to learn?\nFortunately, iOS development has a series of checks and balances that make it easy for you to learn. For instance, it only uses two languages – Objective-C and Swift. You can easily take a Udemy course to get a good grasp of one or both of these programming languages. If you are new to Swift, its clean syntax will make it easy for you to read and maintain. Additionally, you can readily access APIs and save time coding because you do not have to type semi-colons. You can also use SF Symbols, which are a set of over 2,400 configurable symbols for use in your app. This tool makes it easy to include navigation bars, toolbars, tab bars, context menus, and widgets on your app.\nWhat is Swift?\nSwift is a powerful programming language released by Apple and developed both by Apple and the open-source community. Swift is designed for use on the macOS, iOS, watchOS, tvOS, and other Apple platforms. It was first released in 2014 as a replacement for Apple's other programming language, Objective-C, which served as the primary Apple programming language since the 1980s. Swift is comparable in performance to Objective-C but is a more modern language with a cleaner syntax and easy-to-use generic types. Swift also has powerful protocol extensions, lightweight closure syntax, fast collection iteration, multiple return values, and functional programming features. Swift works with Apple's Cocoa and Cocoa Touch frameworks and can inter-operate with existing Objective-C codebases.\nWhat is the best IDE for Swift?\nThere are a few IDEs that support programming in the Swift programming language. The most well-known and popular IDE for Swift is Apple's Xcode IDE. Xcode is free for anyone that owns an Apple computer running Mac OSX. Xcode allows coding in Swift and Objective-C, Apple's other language, and has code completion, code folding, syntax highlighting, and other powerful IDE features. AppCode, released by JetBrains, is another IDE that is popular among developers who write Swift code. AppCode was designed from the ground up for developing Apple-based applications. Coderunner is another popular IDE for Swift. It is lightweight and supports not only Swift and Objective-C, but over 25 programming languages out-of-the-box.\nHow long does it take to learn Swift?\nThe time it takes to learn Swift can vary, depending on your experience with technology and other programming languages and the time you can devote to the learning process. Swift is easier to learn than Apple's other language, Objective-C, so learning to write code for Apple products won't take as long as it did in the past. If you are an experienced programmer who has written code in other languages, learning Swift may only take you a few weeks of practice since what you know can be easily applied to Swift. When you are new to programming, the time it takes will depend on the time you have to learn. If you spend less than a couple of hours a day learning Swift, you could be building apps in a couple of months and taking on more significant Swift projects in a year or so. The more time you dedicate to practicing, the quicker you'll progress.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn iOS App Development.\nThis course starts with very basics. First, you will learn some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the iOS App Development and hungry to learn more.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\n\nDive in now \"IOS-14 & Swift-5 - The Complete iOS App Development\" course\nWe offer full support, answering any questions.\nSee you in the course!\n\n\nThis course is going to take you from beginning to a further level. Please save you learn ambition and if you have questions contact with us.\nIMPORTANT !!!: This course was prepared for Education and all informations you learned should be used as legally.",
      "target_audience": [
        "Programmers who wants to learn iOS development",
        "Anyone who wants to learn Swift-5",
        "Anyone who wants to create mobile applications for iOS Mobile Devices",
        "Software engineers, developers, programmers new to Git and GitHub",
        "Anyone interested in using Version Control system",
        "People who want to become ios developer",
        "People who want learn swift 5 and ios 14"
      ]
    },
    {
      "title": "Async/Await and Actors - Concurrency in Swift",
      "url": "https://www.udemy.com/course/asyncawait-and-actors-concurrency-in-swift/",
      "bio": "Learn async/await, actors, async-let, task groups, unstructured concurrency, detached tasks and more!",
      "objectives": [
        "New async/await features of Swift language",
        "Concurrency in Swift Using Actors",
        "Exposing callback functions using continuation API",
        "Running concurrent tasks using async-let and Task Groups",
        "Writing modern asynchronous syntax using async/await"
      ],
      "course_content": {
        "Introduction": [
          "Credit",
          "Introduction",
          "Prerequisites",
          "Exercise Files",
          "IMPORTANT - Future Changes to the Concurrency API"
        ],
        "Understanding Concurrent Programming in iOS": [
          "What is Concurrency?",
          "Grand Central Dispatch",
          "Resources",
          "Resources"
        ],
        "Getting Started with Async and Await": [
          "Module Introduction",
          "Tour of the Starter Project",
          "Implementing getDate Async Function",
          "Calling getDate Function Using Await",
          "Displaying Dates on the Screen Using Task Modifier",
          "Refresh Dates by Calling Async Function from Inside Synchronous Code"
        ],
        "Understanding MVVM Design Pattern": [
          "What are Design Patterns?",
          "What is MVVM?",
          "Why MVVM?",
          "MVVM Architecture and Web APIs",
          "Resources"
        ],
        "Dates App - MVVM": [
          "Module Introduction",
          "Starter Project",
          "Implementing the Webservice",
          "Creating View Models",
          "Displaying Dates on Screen"
        ],
        "Exposing your Functions as Async/Await Using Continuation": [
          "Module Introduction",
          "What is Continuation?",
          "Implementing a Get All Posts Callback Function Using Result Type",
          "Converting Callback Function to Async/Await Function Using Continuation"
        ],
        "Project Time: News App": [
          "Module Introduction",
          "Tour of the News App",
          "Converting fetchSources to Async and Await",
          "Replacing Dispatch with MainActor",
          "Performing Asynchronous Action from Synchronous Code"
        ],
        "Understanding Structured Concurrency in Swift": [
          "Using Continuation to Create Custom Async/Await Methods",
          "Module Introduction",
          "Scenario: Calculating APR Using Credit Score",
          "Async-let Tasks",
          "Async-let in a Loop",
          "Cancelling a Task",
          "Group Tasks",
          "Unstructured Tasks",
          "Detached Tasks",
          "Resources"
        ],
        "Project Time - Random Images and Random Quotes": [
          "Module Introduction",
          "Downloading Random Images and Quotes",
          "Implementing the View Models",
          "Displaying Random Images and Quotes on Screen",
          "Implementing Dynamic Concurrency Using TaskGroup",
          "Progressive Downloads and Displaying on the Screen Instantly",
          "Adding Unstructured Task Using Task"
        ],
        "AsyncSequence": [
          "Module Introduction",
          "Loop Over Sequence Without AsyncSequence",
          "Loop Over AsyncSequence Using Await",
          "Built-In AsyncSequences in iOS Framework",
          "Adapting Existing Callbacks or Handlers to AsyncSequence Using AsyncStream"
        ]
      },
      "requirements": [
        "This is not a beginner course and does not cover the fundamentals of iOS or Swift development",
        "Existing knowledge of Swift language is recommended",
        "Knowledge of SwiftUI is recommended",
        "Xcode 13 or above",
        "macOS Big Sur or above"
      ],
      "description": "Concurrency allows multiple tasks to run at the same time. Understanding concurrency is an important part of iOS app development. When used correctly, it can create a pleasant user experience and can even avoid crashing your app. In this course, you will learn about the new concurrency features available in Swift using Async/Await and Actors.\nAsync/Await and Actors are the future direction of concurrency in Swift and this course will teach you the concepts and practical uses of these modern features. After completing this course, you will be comfortable to add these new features in your applications.\n\n\nRequirements:\nXcode 13 or above\nKnowledge of Swift language is recommended\nmacOS Catalina or above\nKnowledge of SwiftUI is recommended\nPassion for development and an open mind\nThis is not a beginners course\n\n\nLet’s check out the contents discussed in the course:\nUnderstanding Concurrent Programming\nGetting Started with Async & Await (Dates App)\nUnderstanding MVVM Design Pattern\nDates App Using MVVM\nExposing your Functions as Async/Await Using Continuation\nProject: News App\nUnderstanding Structured Concurrency in Swift\nProject: Random Images and Quotes\nAsyncSequence\nActors\n\n\nWho this course if for:\nStudents who want to learn about new concurrency features in Swift language.\nAnyone interested in learning modern concurrency programming techniques using Swift.\nStudents who want to learn the new Async/Await and Actor features.\n\n\nDon’t take my word for it, take a look at some of the amazing reviews for my other courses.\nGreat course, Azam skips the basic stuff yet does CLEARLY explain the important concepts that most courses miss or fail to provide clear details about. It looks like he keeps the course up to date as well, either by adding updated lessons or notes explaining changes in the swift framework in the notes.\nThis course was above my expectations indeed. Very valuable, and thank you Azam.\nThe last 6 months I've followed many courses, but this Section by far has helped my understanding of ObseravableObject, @State etc.Im sure I'm going to run into some problems putting this into practice, but at least I have this course to come back to reference.\nAs every course by Azam is awesome, full of information and Great explanations and examples, simply amazing. Azam is such a Great Teacher. If you really want to learn and make good use of your money, he is the right Choice.",
      "target_audience": [
        "Students who wants to learn the new async/await syntax",
        "Students who wants to learn concurrency features using Swift Actors",
        "Students who wants to write modern concurrent code using async-let, task groups etc",
        "Students who wants to convert their callback functions to async/await syntax"
      ]
    },
    {
      "title": "Complete iOS Bootcamp - Swift & Objective-C",
      "url": "https://www.udemy.com/course/complete-ios-bootcamp/",
      "bio": "Beginner to Advanced iPhone / iPad App Development with Swift, Objective-C and Xcode.",
      "objectives": [
        "Make real-life iOS Applications using advanced and relevant technology.",
        "Be prepared to take on any iOS development challenges on your own.",
        "Create various iOS applications with advanced User Interfaces, graphics, and animations as well as proper backend and data persistency.",
        "Be prepared for iOS jobs and technical interview questions.",
        "Develop both 2D and 3D games (within iOS and XCode limitations)",
        "Write complex Swift code",
        "Write complex Objective-c Code",
        "Know how to convert Swift and Objective-C code into each other",
        "Be familiar with loads of external libraries",
        "Have hundreds of tiny apps at your disposal to develop larger scale applications",
        "Develop market-ready apps for the industry.",
        "Use Google technologies such as Firebase and Google Maps",
        "Learn how to use Mac Command Line",
        "Know how to use Cocopods to search and implement a variety of libraries and frameworks",
        "Create your own iOS frameworks"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of how computers work.",
        "Access to Internet",
        "You would need a MAC OS Enabled computer. i.e. Mac, MacBook, MacBook Pro. iMac, etc.",
        "Free IDE that you'll get from Apple's Website (XCode)",
        "All programming and development matters will be covered in the course.",
        "Preparation for loads and loads of new information"
      ],
      "description": "Hi and welcome to the Complete iOS Development Bootcamp. This course is designed to be a one-stop shop for you to become an iOS developer. In designing this course I had the following matters in mind:\nCovering the most up-to-date technology and methods.\nDelivering everything that you need to know to develop advanced iOS applications ready for the market.\nInstilling the attitude of problem-solving and making sure you know how to find your way on your own by the end of the course.\nCovering almost all programming libraries related to iOS.\nProviding numerous online and offline content to support your learning journey.\nProviding tens of exercises and assignments to ensure you have enough practice.\nConstantly updating the course based on students’ feedback.\nIntroducing all the best techniques of real developments.\nMoving forward in the course and content complexity in a gradual manner that doesn’t overwhelm new programmers.\n\n\nIn developing this course I not only considered the beginner developers but also attempted to prepare it for those with intermediate iOS understanding or veteran programmers from other disciplines. In doing that, the course has been heavily subdivided. If you are totally new, it makes sense that you through the course lessons by lesson, but f you are already a programmer you can pick and choose on your own. hroughout this course, I covered a lot of different technologies and topics including but not limited to:\nThe very basics of developing an app\nUse of XCode and customizing it\niOS Simulator\nBasics to Advanced programming exercises\nBasics to advanced user interface designs\nSwift programming language at the depth\nHandling touches and gestures\nUse of graphics & Animations\nTable views and Collection views\nVersion control\nDevice hardware features\nMedia\nNetworking\nMaps and geolocation\nPersistent data, Core Data & Realm\nAccessing Web content\nNotification\nSprite kit and 2D games\nScene kit and 3D games\nMetal kit and low-level GPU\nAugmented Reality Kit\nMachine Learning Kit\nTesting & Debugging\nApp store and Submissions\n\n\nThroughout the course, I attempt to bring some of the best experiences I have gathered from years of teaching students to make sure you learn in the most efficient and the most useful way. In doing that I benefit from lessons, exercises, assignments, quizzes and external resources. I also stay available if you face any challenges and also constantly update the course content or add new ones depending on the feedback from students.\n\n\nPrerequisites to join this course:\nBasic understanding of how computers work.\nAccess to Internet\nYou would need a MAC OS Enabled computer. i.e. Mac, MacBook, MacBook Pro. iMac, etc.\nFree IDE that you'll get from Apple's Website (XCode)\nAll programming and development matters will be covered in the course.\nPreparation for loads and loads of new information\n\n\nBy the end of the course\nMake real-life iOS Applications using advanced and relevant technology.\nBe prepared to take on any iOS development challenges on your own.\nCreate various iOS applications with advanced User Interfaces, graphics, and animations as well as proper backend and data persistency.\nDevelop both 2D and 3D games (within iOS and XCode limitations)\nBe prepared for iOS jobs and technical interview questions.\nWrite complex Swift code\nWrite complex Objective-c Code\nKnow how to convert Swift and Objective-C code into each other\nBe familiar with loads of external libraries\nHave hundreds of tiny apps at your disposal to develop larger scale applications\nDevelop market-ready apps for the industry.\nUse Google technologies such as Firebase and Google Maps\nLearn how to use Mac Command Line\nKnow how to use Cocopods to search and implement a variety of libraries and frameworks\nCreate your own iOS frameworks\n\n\nWho is the target audience?\nAnyone interested in developing iPhone / iPad apps (with or without any programming skills)\nExperienced programmers who want to begin iOS development real quick.\nAnyone who wants to focus on the programming side of iOS development.",
      "target_audience": [
        "Anyone interested in developing iPhone / iPad apps (with or without any programming skills)",
        "Experienced programmers who want to begin iOS development real quick.",
        "Anyone who wants to focus on the programming side of iOS development."
      ]
    },
    {
      "title": "iOS12 Bootcamp from Beginner to Professional iOS Developer",
      "url": "https://www.udemy.com/course/ios12-bootcamp-from-beginner-to-professional-ios-developer/",
      "bio": "iOS 12, swift 4.2, iOS for beginners, iOS bootcamp, learn iOS development, swift for beginner, Coredata, realm, firebase",
      "objectives": [
        "We will start from beginner level and build simple apps and slowly move to more advanced applications along the way.",
        "This course will cover many applications and many aspects of iOS development.",
        "By the time you finish our iOS course, you will be able to build iOS Apps and start making money from your new skills",
        "Build fully-functional apps for your startup or business",
        "Work from home as freelance iOS Developer",
        "Get your portfolio ready to apply for a iOS developer job."
      ],
      "course_content": {},
      "requirements": [
        "Computer running latest Mac OS.",
        "xCode (free from AppStore)",
        "We will walk you through, step-by-step how to get Xcode installed and do necessary set up"
      ],
      "description": "In iOS 12 Bootcamp we are going to teach you how to become an iOS developer in few weeks. This course is designed for absolute beginners as well as intermediate developers. If you want to learn how to Develop iOS Apps, you have come to the right place.\nOur complete iOS12 BootCamp teaches you how to code using Swift 4.2 and build iOS 12 apps. Even if you have ZERO programming experience, this course is for you!\nWe are going to start from ZERO level and gradually learn the basics of the Swift programming language and building apps in xCode. First we are going to learn the theory and then use the things we learn in a project so you can practice the new material in a simple applications that we will do together.\nAs you learn more and more the course will gradually become more advanced where we are going to build more advanced apps.\nBy the end of this course, you will be fluently programming in Swift 4.2 and be ready to write iOS applications by you own and start a freelancing job as an iOS 12 developer.\nWe are going to have many challenges in the course and I am going to provide you with a lot of reading material as well.\nBut remember the if you want to become developer, you have to actually type the code yourself. This is the best way of learning to code. You may read 100 books on iOS Development, but if you never type the code, you will not learn how to code.\nFrom beginner to iOS 12 app developer with just one course!\nThis course will cover all the parts of iOS and Swift development you will need.\nAlso, in this course i will spend quite a lot of time on errors and debugging the problems. This is one of the most important areas of the software development. If you cannot debug and find the problems in your code, you will never become a developer. So this is very important aspect of the course. We will cover some of the basic most common errors in the beginning of the course and then dive dipper when we learn more and more about Swift.\nSo by the end of the course, you'll completely understand:\nConcepts of Object Oriented Programming and Model View Controller: The type system, variables, functions and methods, inheritance, classes and protocols.\nData Structures, how to work with collections, arrays and dictionaries.\nSoftware Design, how to organise and format code for readability\nNetworking, how to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nMachine Learning, how to make artificially intelligent apps using iOS 12's new CoreML framework.\nCore Data, Realm, UserDefaults and other ways of persistent data storage.\nDon’t waste your time on low quality courses\nYour time is precious. We offer the best video courses with carefully crafted content, we are learning by coding!\nDon't just take our word for it, check out our other courses and what other students have to say about our courses!\n\n\n\"This course is so far the best course I took in UDEMY. I really learned something. Totally worth the time. Won't regret it. The instructor was responsive too and the course is new and knowledgeable.\"  J Nima\n\"A excellent Tutorial by david. Very good explanation\" Tapan Kumar Raut\n\"There is nothing on Udemy like David's courses! I cannot recommend his courses enough. Best teacher out there, very responsive as well. \" Kris\n\"I really do love the approach, the structure of the course gives you the ability to move forward smoothly, and efficiently gain as much knowledge as possible, the instructor really goes in-depth, it's incredibly comprehensive, not to forget that this is a real world project, and the advanced concepts gained here make me all confident that i'll be able to build my own apps in a very effective way. the course is well taught, and it really deserves the 5 stars, the instructor as well, he explains things in a very clear, clean way. Definitely enjoying the Course. and definitely Thumbs Up.\" Yen Loo\n\"This is one of the most complete and comprehensive iOS projects on Udemy! Everything works! No broken code! You learn Firebase, Onesignal and Backendless in one project. The instructor is always accessible, he goes for quality not quantity. I still have a way to go, but so far it has kept me completely engaged and focused! I wish there were more courses like this! I will definitely purchase another from David.\" antr8tr\n\n\nWe are so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days, No Questions Asked! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the Buy Now button and join the best iOS 12 BootCamp app development course.",
      "target_audience": [
        "If you are an absolute beginner to coding, then this course is for you.",
        "The course is designed for students who never used iOS and Swift",
        "If you are beginner or intemediate software developer, this course will help you to advance your skills in iOS app development"
      ]
    },
    {
      "title": "The Complete Dart Development Guide",
      "url": "https://www.udemy.com/course/dart-learning-guide/",
      "bio": "A Complete Guide to the Dart Programming Language",
      "objectives": [
        "Programming Fundamental",
        "Learn Dart from the ground up, step-by-step",
        "Everything you need in Dart to get started with Flutter",
        "Learn all the basics without stopping after them: Dive deeply into Dart and become an advanced developer"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "There are way too many programming languages and infinite use-cases for each one of them, every day developers are coming up with something new and we need to keep up with the flow.\nBoth of these technologies are relatively new when you compare them to the most popular languages and frameworks, they have been looking over for some years now but I would consider this combo to be ahead of its time like if you sold an electric car in 1995.\nLet me tell you why:\n\n\nWhat is Dart?\nLet’s kick this off by explaining some qualities of Dart.\nFirst, it is developed by Google and it launched in 2011. Google uses Dart to develop many of its main applications including Ads which as you can imagine must require quite a solid build.\nDart is very flexible in the way it is compiled and executed, it is in fact the only programming language capable of compiling JIT (Just In Time — used during development) and AOT (Ahead Of Time — used when the app is released), it can also be compiled to Javascript in order to be run by browsers or straight to native code. This means its execution is fast.\nThanks to its versatility Dart can be used for client or server-side development. The syntax looks like ‘C’ meaning it is statically typed so this provides more certainty on the types of values you are passing on, but it is also meant to be used in OOP, if you have a background in C you’ll pick it up quick. Dart also shares some similarities with Javascript like the use of arrows and asynchronous functions.\nLet’s not forget about ‘hot reload’.\nYou can test your code like if it was HTML and you were refreshing the page to see the changes. Yes, it is that easy.\nDart has been slept on by the dev community for too long but I think its time is coming with the mobile-first principle that is gaining such massive momentum. It runs fast on all platforms and is easy to pick up and learn by programmers.",
      "target_audience": [
        "If you're interested in 'Flutter' building real native mobile apps for the two most popular mobile platforms - iOS and Android"
      ]
    },
    {
      "title": "300+ Q&As - Ace your Android Developer Test, Interview",
      "url": "https://www.udemy.com/course/androidinterview/",
      "bio": "Crush your Android Developer test or interview",
      "objectives": [
        "To excel in an Android Developer interview",
        "Start your career on the right path",
        "What are the most important aspects in Android and how they work",
        "Lots of theoretical knowledge in the form of questions and answers",
        "The details and intricacies of the Android Ecosystem",
        "You will have a better negotiating position after passing your interview"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Android",
          "Android vs iOS",
          "Kotlin vs Java",
          "Android Basics Quiz"
        ],
        "Android Ecosystem Questions": [
          "Activities",
          "Fragments",
          "Services",
          "Content Providers",
          "Broadcasts and Broadcast Receivers",
          "Intents",
          "Notifications",
          "The Android Manifest file",
          "Permissions",
          "Push Notifications",
          "Deep Links and App Links",
          "The build.gradle file",
          "App data",
          "Threads and Processes",
          "Wearables",
          "Android Ecosystem Quiz"
        ],
        "Android UI": [
          "Layouts",
          "Styles and Themes",
          "Dialogs",
          "Resources",
          "Animations and Transitions",
          "Widgets",
          "Android UI Quiz"
        ],
        "Android Development Structures": [
          "ConstraintLayout",
          "RecyclerView",
          "ViewPager",
          "Toasts and Snackbars",
          "Menus",
          "Settings",
          "Search",
          "Android Structures Quiz"
        ],
        "Android Optimisation": [
          "Performance",
          "Memory Leaks",
          "ANR dialog",
          "Unit Testing",
          "UI Testing",
          "Multi app testing",
          "Android Optimisation Quiz"
        ],
        "General Development Questions": [
          "Design Patterns",
          "Android Design Patterns",
          "General Development Quiz"
        ],
        "Libraries": [
          "Firebase",
          "Git and GitHub",
          "Dagger2",
          "RxJava",
          "Retrofit",
          "Glide",
          "Butterknife",
          "Android Libraries Quiz"
        ],
        "Android Work Experience": [
          "Workflows",
          "Conclusions",
          "Further resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Interest in Android Development",
        "Basic Android Development knowledge",
        "Basic programming knowledge"
      ],
      "description": "What this course is about\nAt the end of this course you will have the knowledge to pass any Android Developer test or interview.\nWith more than 300 questions and answers taken straight from the interview room, this course gives you an excellent foundation of theoretical knowledge to prepare for any upcoming challenge.\n\n\nAbout the instructor\nThe instructor is a Tech Lead Android Developer, active for more than 10 years in the IT industry.\nAs a Development Team Leader, I have conducted countless highly technical interviews with both beginner and advanced developers. I have a wealth of practical experience and knowledge that I'm looking forward to sharing with you.\nI have created this interview course to help you prepare for any theoretical challenge that you need to face.\n\n\nWe will go through basic Android concepts such as\nActivities\nServices\nPush Notifications\nadvanced Android concepts such as performance optimisations\nmemory leaks\nadvanced development concepts like Design Patterns\nother libraries that are very commonly used in Android Development such as Git, Dagger2 and RxJava\nwe will end with general experience questions and\nteam leadership questions.\nAll these questions come up often in interviews and it's important to know how to answer them.\nWith 300+ questions on a range of topics all relating to Android Development, this course your best choice to prepare for your next test.\n\n\nSign up today and get ready for your next Android challenge\n\n\n30 day money back guarantee - provided by Udemy\nHighly rated instructor with over 10.000 active students and growing monthly.",
      "target_audience": [
        "Aspiring Android Developers",
        "Advanced Android Developers"
      ]
    },
    {
      "title": "Android App Development Course with Kotlin & Java | Android",
      "url": "https://www.udemy.com/course/android-app-development-course-with-kotlin-java-android/",
      "bio": "Android App development | Boost mobile app development skills with android studio using Kotlin, Java android development",
      "objectives": [
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Learn the most used operating system on the planet",
        "Learn Android App Development using the Kotlin programming language",
        "Learn the latest version of Android",
        "Android Studio",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "Start from scratch and become a professional Android App developer",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "Android app, android application development",
        "android",
        "kotlin",
        "android kotlin",
        "android app development with kotlin",
        "android application development",
        "android ecommerce app",
        "android game development",
        "app android",
        "android app design",
        "mobile app development",
        "mobile development",
        "android development",
        "What is Kotlin",
        "Kotlin Programming Language",
        "Kotlin Android Fundamentals",
        "Java Development Kit - JDK",
        "Android Studio",
        "Variables in Android Kotlin",
        "Kotlin Data Types",
        "Type Conversions in kotlin for android",
        "Arrays in The complete Android Kotlin Developer Course",
        "Operators in android app development kotlin",
        "Control Flow Statements",
        "Loops in Android App Development",
        "All concepts of Object-Oriented Programming",
        "kotlin java",
        "Kotlin is popular for both Android developers and Java developers.",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "android studio kotlin",
        "kotlin for java developers",
        "java kotlin"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We prefered Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Watching the Android App Development course videos completely, to the end and in order.",
        "No prior android kotlin knowledge is required",
        "No Kotlin coding knowledge required",
        "Determination to learn and patience for Kotlin",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to Android App Development Course with Kotlin & Java | Android course.\nAndroid App development | Boost mobile app development skills with android studio using Kotlin, Java android development\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on OAK Academy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nKotlin is a very new and up-to-date programming language. Kotlin android is accepted by Google as the official language for Android development. Therefore, it is a language that everyone who wants to be an android developer should know.\nOAK Academy’s top-rated Java instructors specialize in a wide array of Java programming practices. Whether you need a basic introduction to Java and website building using Selenium WebDriver or are continuing your Android app developer education, OAK Academy has you covered.\nIn this course, you will learn to develop android applications with both Kotlin programming language and Java programming language.\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on OAK Academy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n· Do you want to improve your career options by learning android?\n· Do you want to learn android app development from Scratch?\n· Do you want to learn android development from Scratch?\n· Do you want to be an android studio master?\n· Do you want to build your first app?\nIf your answer is “yes” , you are at the right place!\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nChances are, you’ve heard of Android many times, and Do u want to android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or deny permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\n\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nMy \" Android App Development Course with Kotlin & Java | Android \" course will take you from beginner to advance level.\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course. In this course, you will learn Android app development step-by-step. While doing kind of show and tell in our lectures we are also explaining whys. During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 2 major apps.",
      "target_audience": [
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications using the Kotlin programming language",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "Anyone who would like to work from anywhere in the world",
        "Anyone who wants to learn the most up to date android",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "Anyone who is planning job transformation and want to become a Kotlin developer",
        "Anyone who wants to learn important subjects of kotlin android",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Those who want to develop an Android mobile application with Kotlin",
        "Those who want to develop an Android mobile application with Kotlin",
        "Who wants to improve their existing Android App Development Kotlin knowledge"
      ]
    },
    {
      "title": "Create a WhatsApp Clone in React Native - Mobile App Guide",
      "url": "https://www.udemy.com/course/whatsapp-clone/",
      "bio": "Use React Native to build an instant messenger like WhatsApp for iOS and Android devices",
      "objectives": [
        "Learn how to use react native to create mobile apps",
        "Learn how to create an instant messaging system",
        "Learn how to use Firebase to store data",
        "Learn how to create registration systems allowing users to sign up to your app"
      ],
      "course_content": {},
      "requirements": [
        "A computer (Mac or Windows recommended)",
        "Some knowledge of JavaScript and React is strongly recommended"
      ],
      "description": "Do you want to become an expert in building mobile apps using React Native/JavaScript? And how about Firebase as a database system? Do you want to build an instant messenger just like WhatsApp?\nIf so, you’re in the right place! This course will guide you step by step in creating your own WhatsApp clone COMPLETELY from scratch.\nWe’re talking the kind of app that will amaze anybody that sees it. The kind of app that will get you hired in no time!\nWhy let me teach you?\nI work as a Software Engineer at Microsoft where I build products used by millions of people all over the world! I want to take the skills I’ve gained through years of working with some of the best developers in the world and transfer them directly to you!\nI’ve taught tens of thousands of students here on Udemy and created some of the most popular development courses available!\nOkay so what’s the course about?\nI will personally guide you, step by step, in creating your own social network site just like WhatsApp complete with:\n\nInstant messaging in real time\nSending image messages\nGroup chat support\nProfile pictures\nGroup chat photos\nMessage replies\nA full user search\nSettings pages\nand much more!\nWhether you are a beginner* or an experienced programmer, this course will be massively beneficial to you.\nWhy should I take the course?\nIn the programming world, the “big 4” often consists of Google, Microsoft, Facebook and Amazon. To get a job at any of these companies, you absolutely MUST know the essentials like JavaScript. In addition to this, React Native is incredibly hot right now so learning this will be a huge deal to an employer.\nIf you take this course, you will have nothing to worry about because we use all of these skills extensively!\nSupport:\nBy enrolling in this course, you will have the COMPLETE support of a Microsoft Software Engineer (me). I'm always ready to answer any question you may have. Programming issues, errors, feature requests, general programming advice - it doesn't matter, I'm always happy to help! I always aim to respond to questions within a few hours and it's also worth noting that I've answered EVERY SINGLE question asked so far.\n\nFuture course discounts:\nBy enrolling in this course, you will get access to ALL of my current and future courses for the lowest possible discount we as instructors are capable of offering on Udemy - FOREVER.\n\nProject portfolio:\nThe site you create in this course will be the highlight of your project portfolio! Any potential employer who see's this project on your resume will want to hear all about it. The reason? They know that a project like this means you're familiar with the wide range of technical skills they need their employees to know.\n\nFun!\nFinally, this project is a lot of fun and I know you'll have a great time implementing your own unique ideas as well as the ones we implement together. What are you waiting for?\n\n\n* Although this course is suitable for beginners, it is not an introduction to development course. I won't go into much detail when explaining the basic programming concepts but I'm here to help if you want more of an explanation - just let me know!",
      "target_audience": [
        "Anyone that wants to learn how to build mobile apps using React Native",
        "Anyone that wants to build an instant messenger using React Native"
      ]
    },
    {
      "title": "Flutter Bloc Essential Course (English)",
      "url": "https://www.udemy.com/course/flutter-bloc-essential-course-english/",
      "bio": "(cover version 8.0) Learn and practice the concept of state management using Flutter Bloc, a Flutter state management so",
      "objectives": [
        "Cover Flutter Bloc version 8.0 or higher",
        "Learn two state management methods provided by Flutter Bloc called Cubit and Bloc",
        "Communication method between Cubits, between Blocs, and between Cubits and Blocs",
        "Tools that can use functions provided by Cubit/Bloc in UI",
        "How to use on Event API introduced in version 8.0",
        "How to observe Cuibt/Bloc",
        "Event Transformation function of Bloc",
        "Hydrated Bloc",
        "Appropriate approaches to two state management tools: Cubit and Bloc",
        "Create many small apps to understand the concept",
        "Complete mastery of Flutter Bloc through 9 production process experiences through 3 apps (TODO/Weather/Firebase Auth) and various combinations of Cubit/Bloc"
      ],
      "course_content": {
        "Introduction": [
          "The background and target audience",
          "Tutorial Structure",
          "Tools used in tutorial",
          "Introduction of AI Dubbed Lectures"
        ],
        "Bloc Overview": [
          "Section Overview",
          "(Notice) Updating source code and applying lint rules",
          "The state style used in the tutorial",
          "Injecting Cubits/Blocs into widget tree and Accessing Cubits/Blocs",
          "Listening to state changes (listen: true option, BlocBuilder)",
          "BlocListener & BlocConsumer",
          "BuildContext extension methods",
          "First app to use Bloc",
          "Theme setting app: Passing additional information to Bloc's events",
          "Theme setting app: context and Builder widget",
          "Theme setting app: Cubit version",
          "(Note) Bloc to Bloc Communication",
          "Cubit to Cubit communication using StreamSubscription",
          "Cubit to Cubit communication using BlocListener",
          "Bloc to Bloc communication using StreamSubscription",
          "Bloc to Bloc communication using BlocListener",
          "Bloc Access: context",
          "Bloc Access: Anonymous Route Access",
          "Bloc Access: Named Route Access",
          "Bloc Access: Generated Route Access",
          "Observing Cubits/Blocs",
          "(Notice) The breaking change in the way of observing Cubits/Blocs",
          "(Deprecated) Observing Cubits/Blocs",
          "Event Transformer",
          "(Notice) Related to Hydrated Blocs",
          "Hydrated Bloc",
          "(Notice) Hydrated Bloc version upgrade",
          "(Deprecated) Hydrated Bloc",
          "Repository Provider",
          "Cubit vs. Bloc"
        ],
        "TODO App": [
          "TODO App Overview",
          "TODO App Structure",
          "Packages, folders and app skelton",
          "Todo model and Filter enum",
          "TodoFilterCubit",
          "TodoSearchCubit",
          "TodoListCubit",
          "ActiveTodoCountCubit",
          "FilteredTodosCubit",
          "Injecting Cubits into widget tree",
          "TodoHeader widget",
          "CreateTodo widget",
          "SearchAndFIlterTodo widget",
          "ShowTodos widget",
          "TodoItem widget",
          "Reducing search volumes",
          "todo_cubit refactoring using BlocListener",
          "Bloc + StreamSubscription: TodoFilterBloc, TodoSearchBloc",
          "Bloc + StreamSubscription: TodoListBloc",
          "Bloc + StreamSubscription: ActiveTodoCountBloc",
          "Bloc + StreamSubscription: FilteredTodosBloc",
          "Bloc + StreamSubscription: Apply changes to UI",
          "Applying EventTransformer to search",
          "todo_bloc refactoring using BlocListener",
          "TODO App further considerations"
        ],
        "Weather App (OpenWeather)": [
          "(Notice) Service Provider Replacement",
          "Weather App Overview",
          "Packages, app folder structure, app page skeleton",
          "Models",
          "Weather API Services - 1",
          "Weather API Services - 2",
          "Weather Repository",
          "Weather Cubit",
          "SearchPage widget - Form",
          "HomePage widget 1 - initial, loading, error",
          "HomePage widget 2 - Platform aware dialog",
          "HomePage widget 3 - weather loaded state",
          "TempSettingsCubit",
          "ThemeCubit",
          "open_weather_cubit refactoring using BlocListener",
          "open_weather_bloc (Bloc + StreamSubscription)",
          "open_weather_bloc_listener (Bloc + BlocListener)",
          "Weather App Further Considerations"
        ],
        "Firebase Authentication App": [
          "Firebase Authentication App Overview",
          "(Notice) Firebase Project Setup",
          "firebase project setup using flutterfire_cli",
          "folder structure, models",
          "Page skeletons",
          "AuthRepository",
          "AuthBloc",
          "SigninCubit",
          "SigninPage widget - 1",
          "SigninPage widget - 2",
          "SignupCubit, SignupPage widget",
          "HomePage widget",
          "ProfileRepository, ProfileCubit",
          "ProfilePage widget",
          "Firebase Authentication App Further Considerations"
        ],
        "Misc": [
          "Equatable package and dart data class generator extension"
        ],
        "Outro": [
          "What's next?"
        ],
        "(AI) Introduction": [
          "Beginning of AI Dubbed Lectures",
          "The background and target audience",
          "Tutorial Structure",
          "Tools used in tutorial"
        ],
        "(AI) Bloc Overview": [
          "Section Overview",
          "The state style used in the tutorial",
          "Injecting Cubits/Blocs into widget tree and Accessing Cubits/Blocs",
          "Listening to state changes (listen: true option, BlocBuilder)",
          "BlocListener & BlocConsumer",
          "BuildContext extension methods",
          "First app to use Bloc",
          "Theme setting app: Passing additional information to Bloc's events",
          "Theme setting app: context and Builder widget",
          "Theme setting app: Cubit version",
          "Cubit to Cubit communication using StreamSubscription",
          "Cubit to Cubit communication using BlocListener",
          "Bloc to Bloc communication using StreamSubscription",
          "Bloc to Bloc communication using BlocListener",
          "Bloc Access: context",
          "Bloc Access: Anonymous Route Access",
          "Bloc Access: Named Route Access",
          "Bloc Access: Generated Route Access",
          "Observing Cubits/Blocs",
          "Event Transformer",
          "Hydrated Bloc",
          "Repository Provider",
          "Cubit vs. Bloc"
        ],
        "(AI) TODO App": [
          "TODO App Overview",
          "TODO App Structure",
          "Packages, folders and app skelton",
          "Todo model and Filter enum",
          "TodoFilterCubit",
          "TodoSearchCubit",
          "TodoListCubit",
          "ActiveTodoCountCubit",
          "FilteredTodosCubit",
          "Injecting Cubits into widget tree",
          "TodoHeader widget",
          "CreateTodo widget",
          "SearchAndFIlterTodo widget",
          "ShowTodos widget",
          "TodoItem widget",
          "Reducing search volumes",
          "todo_cubit refactoring using BlocListener",
          "Bloc + StreamSubscription: TodoFilterBloc, TodoSearchBloc",
          "Bloc + StreamSubscription: TodoListBloc",
          "Bloc + StreamSubscription: ActiveTodoCountBloc",
          "Bloc + StreamSubscription: FilteredTodosBloc",
          "Bloc + StreamSubscription: Apply changes to UI",
          "Applying EventTransformer to search",
          "todo_bloc refactoring using BlocListener",
          "TODO App further considerations"
        ]
      },
      "requirements": [
        "Requires some experience and understanding of Flutter"
      ],
      "description": "[All source code has been updated based on flutter 3.x and flutter_bloc 8.1.4, lint rules have been applied, and class modifiers have been applied to state and events.]\nTo provide better service and improve communication skills in English, AI-dubbed lectures are added at the end of the course.  You can choose bsed on your preference. Thank you so much. I hope my lectures are helpful for you to expand your knowledge.\n\n\nIn the Flutter Bloc Essential course, you can learn in depth about Bloc, the popular Flutter state management solutions.\nIn particular, it covers only the most recent version, version 8.0 or higher.\nIf you want to deepen your understanding of the Flutter Bloc and put all the concepts into practice, then this course is for you.\nThe lecture was carefully composed to ensure a balance between theory and practice.\nAnd under the belief that repetition is the most important learning method, whenever there is a new concept, we will test the concept by making a small app, and through real-world apps such as TODO, Weather, and Firebase Authentication app, the concepts will come together comprehensively.\nIn particular, we repeatedly practice the combination of Cubit and Bloc when creating TODO, Weather, and Firebase Authentication apps.\n\n\nTODO App (4 implementations): 1. Combination of Cubit and StreamSubscription, 2. Combination of Cubit and BlocListener, 3. Combination of Bloc and StreamSubscription, 4. Combination of Bloc and BlocListener\nWeather App (4 implementations): 1. Combination of Cubit and StreamSubscription, 2. Combination of Cubit and BlocListener, 3. Combination of Bloc and StreamSubscription, 4. Combination of Bloc and BlocListener\nFirebase Authentication App: Cubit + Bloc + StreamSubscription\n\n\nThis is a quick look at everything covered in the course.\n\n\nCubit/Bloc concept\nBlocProvider, BlocListener, BlocConsumer, RepositoryProvider, MultiBlocProvider, MultiBlocListener, MultiRepositoryProvider\nBuildContext extension methods: read, watch, select\nPassing extra information to Cubit/Bloc: function argument and event payload\nCubit/Bloc-to-Cubit/Bloc communication: StreamSubscription, BlocListener\nBloc Access and value named constructor: anonymous route access, named route access, generated route access, global access\nObserving Cubit/Bloc\nThe Event Transformation feature of Bloc\nHydrated Bloc\nTODO App: 4 implementations through various combinations of Cubit, Bloc, StreamSubscription, and BlocListener\nWeather App: 4 implementations through various combinations of Cubit, Bloc, StreamSubscription, and BlocListener\nFirebase Authentication App: Combination of Cubit, Bloc, and StreamSubscription",
      "target_audience": [
        "Beginners to Flutter who want to learn about Bloc, the popular Flutter state management solution",
        "Flutter developers who want to have an in-depth understanding of the Flutter Bloc",
        "Flutter developers who want to know the various usage examples of Flutter Bloc"
      ]
    },
    {
      "title": "Android App Development with Kotlin | Beginner to Advanced",
      "url": "https://www.udemy.com/course/android-app-development-with-kotlin-beginner-to-advanced/",
      "bio": "Kotlin | Android App Development with Kotlin Android A-Z, Firebase Android, Android Studio, Android Development projects",
      "objectives": [
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is popular for both Android developers and Java developers.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Firebase is a platform developed by Google for creating mobile and web applications. It was originally an independent company founded in 2011.",
        "Firebase is a Google-backed application development software that enables developers to develop iOS, Android and Web apps.",
        "Firebase provides tools for tracking analytics, reporting and fixing app crashes, creating marketing and product experiment.",
        "You will learn Firebase platform in detail by using the Kotlin programming language and Android Studio.",
        "Git is a modern system for version control that lets software developers manage changes to a product’s source code over time.",
        "Git features a distributed architecture so that every team member has a working copy of the code.",
        "kotlin, android kotlin, kotlin android",
        "android kotlin",
        "android app development with kotlin",
        "android application development",
        "android ecommerce app",
        "android game development",
        "app android",
        "android app design",
        "mobile app development",
        "mobile development",
        "mobile development",
        "What is Kotlin",
        "Kotlin Programming Language",
        "Kotlin Android Fundamentals",
        "Java Development Kit - JDK",
        "Android Studio",
        "Variables in Android Kotlin",
        "Kotlin Data Types",
        "Kotlin Data Types",
        "Arrays in The complete Android Kotlin Developer Course",
        "Operators in android app development kotlin",
        "Control Flow Statements",
        "Loops in Android App Development",
        "All concepts of Object-Oriented Programming",
        "kotlin java",
        "android studio kotlin",
        "kotlin for java developers",
        "java kotlin",
        "Learn the most used operating system on the planet",
        "Learn Android App Development using the Kotlin programming language",
        "Learn the latest version of Android",
        "Android jetpack",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "Start from scratch and become a professional Android App developer",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "Android app, android application development",
        "android, android app development",
        "Architectural Room Database in Android App Development",
        "Room Database",
        "Architectural Components",
        "What is Firebase?",
        "Firebase products",
        "Firebase Realtime Database",
        "Firebase Authentication",
        "Firebase Cloud Storage",
        "Firebase-Android Studio Integration",
        "Creating a new project in android studio",
        "Push Notification with Firebase",
        "Android Development with Firebase using Kotlin",
        "Android Kotlin",
        "Kotlin Android",
        "Android App Development",
        "Firebase Pricing Policy",
        "Learn the key concepts of the Git and Github",
        "Learn the entire Git workflow",
        "Learn create branches, resolve conflicts, undoing things etc.",
        "Create and fork repositories on GitHub and push changes back after locally",
        "Learn how to collaborate a github project",
        "Git is a modern system for version control that lets software developers manage changes to a product’s source code over time.",
        "Git features a distributed architecture so that every team member has a working copy of the code.",
        "It's my first time dealing with Git which scared because the commands were overwhelming.",
        "After this course, I feel that it is easy now that I know the basics and meaning of commands."
      ],
      "course_content": {},
      "requirements": [
        "No prior android kotlin knowledge is required",
        "No Kotlin coding knowledge required",
        "Watching the course videos completely, to the end and in order",
        "Determination to learn and patience for Kotlin",
        "Desire to learn about Firebase for Android App Development using Kotlin and Flutter programming languageuage",
        "Desire to learn Git and Github",
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We prefered Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Watching the Android course videos completely, to the end and in order."
      ],
      "description": "Android App Development, Kotlin, Android App Development with Kotlin, Android, Kotlin Android, Android Studio, android kotlin, Object-Oriented Programming, Android App Project, Android Development, app development,\nHi there,\nWelcome to Android App Development with Kotlin | Beginner to Advanced course\nKotlin | Android App Development with Kotlin Android A-Z, Firebase Android, Android Studio, Android Development projects\n\n\nKotlin is popular for both Android developers and Java developers Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to the language, Oak Academy has a top-rated course to help you achieve your goals\nKotlin is a very new and up-to-date programming language Kotlin android is accepted by Google as the official language for Android development Therefore, it is a language that everyone who wants to be an android developer should know In this course, we teach Kotlin programming language from beginner to advanced level, considering the importance of Kotlin\nKotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more\nFirebase is a platform developed by Google for creating mobile and web applications It was originally an independent company founded in 2011 In 2014, Google acquired the platform and it is now their flagship offering for app development\nAndroid tablets and phones are very popular, and apps created for this operating system can reach a large audience Whether you are interested in a career in mobile app development or looking to develop a game or app of your own design independently, let our top rated instructors on Oak Academy help prepare you with an Android development course\nAndroid is a prevalent mobile operating system in the smartphone and tablet markets It is used for games, business apps, and many other types of products for mobile devices A growing number of companies are developing for the Android user market As a result, the industry is seeing a greater need for Android developers This Android development course can get you started on this path or sharpen your existing skills in the field\nFirebase is a Google-backed application development software that enables developers to develop iOS, Android and Web apps\nFirebase provides tools for tracking analytics, reporting and fixing app crashes, creating marketing and product experiment\nThe Firebase Realtime Database lets you build rich, collaborative applications by allowing secure access to the database directly from client-side code\nGit is a modern system for version control that lets software developers manage changes to a product’s source code over time Git features a distributed architecture so that every team member has a working copy of the code\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nIf your answer is “yes”, you are at the right place!\n\nI really like the approach of this course about the Android app In this course, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones As the course title indicates, it is the complete guide to learning android application development\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nKotlin is a statically-typed, general-purpose programming language used to develop for the Java Virtual Machine and Android devices Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled into JavaScript source code\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses a apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development\nObject-oriented programming (OOP) is a computer programming paradigm where a software application is developed by modeling real-world objects into software modules called classes Consider a simple point of sale system that keeps a record of products purchased from wholesale dealers and the products sold to the customer An object-oriented language would implement these requirements by creating a Product class, a Customer class, a Dealer class, and an Order class All of these classes would interact together to deliver the required functionality where each class would be concerned with storing its own data and performing its own functions This is the basic idea of object-oriented programming or also called OOP\n\nChances are, you’ve heard of Android many times, and do you want to be the android developer? You may even have an Android smartphone, app android tablet, watch, or TV But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google The Android OS is Linux kernel-based So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS More like a small part of an OS, but an important one The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things For example, for an application to access the phone’s File System (internal files), the user must give access first This means the app developer must let the user know, in advance, what the app they are installing wants to access For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera The app user has the power to either grant or denies permission App permissions in Android ensure the user’s protection from malware and software viruses\nThis course is built to help beginners to start making applications in android studio and android application development or android app design\nIf you want to develop yourself in Android Apps, this course is for you Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part This course is designed to fill this gap\nMy \"Android App Development Course with Kotlin\" course will take you from beginner to advance level\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course In this course, you will learn Android app development step-by-step While doing kind of show and tell in our lectures we are also explaining whys During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 2 major apps\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\nIs Android Development a good career?\nWith over 2 5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\nWhat skills do I need to be an Android Developer?\nAn Android developer works with the Android SDK (software development kit) and the Android operating system They will need to understand the Android SDK, different versions of Android, and how these two things interact An Android developer may need to know Java, Kotlin, C++, or all three languages and will need to understand the basics of SQL and XML Java and Kotlin are programming languages used with Android, while SQL is used for database work, and XML is used for markup Android developers should generally be competent programmers who understand both back-end and front-end development, emphasizing back-end or full-stack engineering In terms of front-end knowledge, they should know the basics of UI (user interfaces) and UX (user experience) Android developers may work alone or in teams and may also need knowledge of project management strategies such as Agile\nWhat is Android SDK and why is it important?\nAndroid SDK refers to the Android Software Development Kit The Android SDK is a collection of tools that have been released and supported for the express purpose of creating Android software Through the Android SDK, programmers can collect, create, and manage their code It is a comprehensive development environment that is well-supported, not only by the Android team but also by its community However, the Android SDK isn’t the only development environment available for Android technology There are numerous solutions that will port programs out to the Android OS and Android-specific solutions such as Android Studio Developers who are new to Android development will often start with the Android SDK, but they may decide that a different solution is ideal for them in the future Android developers should have some experience with the Android SDK because it does have the largest market share\nWhat does it mean that Python is object-oriented?\nPython is a multi-paradigm language, which means that it supports many programming approaches Along with procedural and functional programming styles, Python also supports the object-oriented style of programming In object-oriented programming, a developer completes a programming project by creating Python objects in code that represent objects in the actual world These objects can contain both the data and functionality of the real-world object To generate an object in Python you need a class You can think of a class as a template You create the template once, and then use the template to create as many objects as you need Python classes have attributed to represent data and methods that add functionality A class representing a car may have attributes like color, speed, and seats and methods like driving, steering, and stopping The concept of combining data with functionality in an object is called encapsulation, a core concept in the object-oriented programming paradigm\nWhat is Firebase and how it works?\nThe Firebase Realtime Database lets you build rich, collaborative applications by allowing secure access to the database directly from client-side code Data is persisted locally, and even while offline, realtime events continue to fire, giving the end user a responsive experience\nWhat is Firebase used for in Android?\nFirebase is a mobile platform that helps you quickly develop high-quality apps, grow your user base, and earn more money Firebase is made up of complementary features that you can mix-and-match to fit your needs, with Google Analytics for Firebase at the core\nIs Firebase a server or database?\nThe Firebase Realtime Database is a cloud-hosted NoSQL database that lets you store and sync data between your users in realtime NEW: Cloud Firestore enables you to store, sync and query app data at global scale\nHow data is stored in Firebase?\nFirebase Realtime Database is a NoSQL cloud database that is used to store and sync the data The data from the database can be synced at a time across all the clients such as android, web as well as IOS The data in the database is stored in the JSON format and it updates in real-time with every connected client\nWhen should I use Firebase?\nWhen your applications require a minimal level of integration with legacy systems or third-party services, firebase will be the right choice Firebase also becomes an ideal choice when your application does not require heavy data processing or any form of complex user authentication requirements\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher\nIn this course you will learn;\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nPublishing Your App on Google Play and moreWhat Kotlin is and how it works,\nProgramming Fundamentals with Kotlin,\nAndroid Studio\nJava Development Kit – JDK\nVariables in android kotlin\nKotlin Data Types\nArrays in kotlin for android\nOperators in android app development kotlin\nControl Flow Statements\nLoops in android studio kotlin\nFunctions\nKotlin for java developers\nAll Concepts of Object-Oriented Programming such as Class, Object, Constructor, Encapsulation, Inheritance etc\nAndroid 11 App Development\nAndroid Studio\nAndroid 12\nAndroid App Development\nObject oriented programming (oop), c# oop\nAndroid kotlin\nKotlin Android\nAndroid Java\nAndroid Development\nAndroid Jetpack\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow the latest trends\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions\nSee you in the Android App Development with Kotlin | Beginner to Advanced course!",
      "target_audience": [
        "Anyone who is planning job transformation and want to become a Kotlin developer",
        "Anyone who wants to learn important subjects of kotlin android",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Those who want to develop an Android mobile application with Kotlin",
        "Who wants to improve their existing Android App Development Kotlin knowledge",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications using the Kotlin programming language",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "Anyone who would like to work from anywhere in the world",
        "Anyone who wants to learn the most up to date android",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "After completing this Firebase tutorial you will find yourself at an advanced level of expertise in Android Development with Firebase.",
        "People who want to learn git and github",
        "Anyone interested in using Version Control system"
      ]
    },
    {
      "title": "Flutter for Beginners: Learn to Build Mobile Apps with Ease",
      "url": "https://www.udemy.com/course/flutter-for-beginners-learn-to-build-mobile-apps-with-ease/",
      "bio": "Mastering the Flutter App Development for a Seamless Mobile Experience",
      "objectives": [
        "Basics of Flutter, from its architecture to its unique features",
        "Learn about the different types of widgets, their properties, and how to create responsive and interactive user interfaces",
        "Building a Complete Application Using the Stateful Widget",
        "Building User Management Application Using SQLite"
      ],
      "course_content": {
        "Welcome": [
          "Welcome to the Course",
          "What you will learn in this Course?",
          "Installing Android Studio and Flutter SDK in Windows OS"
        ],
        "First Application": [
          "Section Overview",
          "Hello World Example",
          "Organize Code",
          "Add Logic",
          "Section Conclusion"
        ],
        "Widgets": [
          "Section Overview",
          "Container Widget",
          "Row",
          "Column",
          "Appbar",
          "Elevated Button",
          "Floating Action Button",
          "Icon",
          "Icon Button",
          "Outline Button",
          "Images",
          "Listview",
          "Snackbar",
          "Tabbar",
          "Drawer",
          "Card",
          "Checkbox",
          "Switch",
          "Range Slider",
          "Radio Button",
          "Alert Dialog",
          "Section Conclusion"
        ],
        "Building Interest Calculator using Stateful Widget": [
          "Section Overview",
          "What is difference between stateless and stateful widget",
          "Designing User Interface of Interest Calculator App",
          "Add Logic into Application",
          "Form Validation",
          "Section Conclusion"
        ],
        "Building User Management Application using SQLite Database": [
          "Section Overview",
          "Database Class",
          "User Model and Repository Class",
          "User Service Class",
          "Design Home Screen UI",
          "Design UI for Add, Remove and View User",
          "Add User Logic",
          "Add Delete User Logic",
          "Add Edit User Logic",
          "Add View User Logic",
          "Validation",
          "Section Conclusion"
        ],
        "Quiz Challenge": [
          "Flutter Evaluation Quiz"
        ]
      },
      "requirements": [
        "Basic programming knowledge of Dart is recommended, but no prior experience with Flutter is required. This course is designed for learners of all backgrounds.",
        "Desktop Computer or laptop",
        "Visual Studio Code Editor / Android Studio"
      ],
      "description": "Are you ready to unlock the full potential of mobile app development? Welcome to the \"Flutter for Beginners: Learn to Build Mobile Apps with Ease\" course! In this comprehensive learning journey, you'll go from a beginner to a proficient Flutter developer, capable of creating stunning and functional mobile applications for both iOS and Android platforms.\n\n\nFlutter is a powerful framework that empowers developers to build high-quality apps with a single codebase. Whether you're an aspiring developer or an experienced programmer looking to add mobile app development to your skillset, this course is designed to guide you every step of the way.\n\n\nCourse Highlights:\nSection 1: Welcome Begin your journey with a warm welcome to the world of Flutter. Get ready to explore the ins and outs of mobile app development using this cutting-edge framework.\n\n\nSection 2: Introduction Dive into the basics of Flutter, from its architecture to its unique features. Discover how Flutter's reactive framework can help you create beautifully designed and performant apps.\n\n\nSection 3: Widgets are the heart of Flutter, and in this section, you'll master them. Learn about the different types of widgets, their properties, and how to create responsive and interactive user interfaces.\n\n\nSection 4: Building a Complete Application Using the Stateful Widget Put your knowledge into action by building a complete app from scratch. Explore the power of the stateful widget as you create dynamic user interfaces and manage user interactions seamlessly.\n\n\nSection 5: Building User Management Application Using SQLite Take your skills a step further by building a real-world application. Learn how to integrate SQLite, a local database, to develop the User Management app. Understand data persistence and efficient management of user data.\n\n\nThroughout the \"Flutter for Beginners: Learn to Build Mobile Apps with Ease\" course, you'll not only gain a solid foundation in Flutter development but also create practical applications that showcase your skills. With hands-on projects, practical examples, and expert guidance, you'll build the confidence needed to tackle mobile app development challenges.\n\n\nOur instructor, an experienced Flutter developer, will be with you every step of the way, offering insights, tips, and best practices. By the time you complete this course, you'll be well-equipped to create your own cross-platform mobile apps and embark on a successful journey as a Flutter developer.\n\n\nAre you ready to become a master of mobile app creation? Enroll now in the \"Flutter for Beginners: Learn to Build Mobile Apps with Ease\" course and bring your app ideas to life!\n\n\nDon't miss out on this opportunity to become a skilled Flutter developer. Join us in this exciting learning adventure and take your mobile app development skills to new heights!",
      "target_audience": [
        "People who want to learn cross-platform mobile applications",
        "Computer Science or IT students",
        "Beginner developers"
      ]
    },
    {
      "title": "React Native and Redux Course using hooks",
      "url": "https://www.udemy.com/course/react-native-and-redux-course-using-hooks/",
      "bio": "Take your react.js skills to next level by building Native Android and IOS Apps using React Native",
      "objectives": [
        "Discount available use coupon code DISCOUNT500",
        "Moble Application development using React native",
        "Accessing Camera and Image Gallery",
        "Uploading Images",
        "How to work with node js and express as a backend",
        "Adding Navigation using React navigation v5",
        "Redux for state management",
        "Context API",
        "Animations"
      ],
      "course_content": {},
      "requirements": [
        "Basics of React js"
      ],
      "description": "This Course is the most updated course on React Native on internet.\nIs hooks included ? yes. Is Navigation included ? Yes. Redux ? Of course !. Context API ? definitely.\nwe will be also learning about Animations basics to enhance user experience.\nyou will be learning every thing you need to know in order to become a job ready React Native developer.\nWe will begin from scratch step by step. First, we will learn how to make beautiful UI using React Native then slowly we will implement complex logic that you will use in your real life in React Native projects. we will also learn Node js and Express as this is required as a backed in Full stack application which other course don't teach.\nHere is the list of projects which we will be making -\nEmployee App -\ncompany can use to store details on an employee like name,position,salary,picture etc.\nincludes camera access, uploading images,redux,working with node js and express as a backend\nYoutube clone -\nwe will be making clone of youtube app using youtube api.\nincludes how to add dark mode,toggle button to toggle theme,redux\nWeather app -\nThis app will show the weather conditions of any city.\nincludes autocomplete when user types,saving city name on device storage\nNotes App\nUser can create and delete Notes",
      "target_audience": [
        "Who want to make Native mobile apps using Javascript and React"
      ]
    },
    {
      "title": "Freemium Principles: Design F2P Games that Generate Revenue",
      "url": "https://www.udemy.com/course/freemium-business-model/",
      "bio": "Learn how to Develop & Design Free to Play Games Using Analytics and Monetization that will Gauranteed makes Users Spend",
      "objectives": [
        "How to efficiently measure Freemium products using Key Performance Indicators",
        "Gain an in depth understanding of the Freemium Business Model",
        "Market to new and current users",
        "Creating product catalogs that sell",
        "Learn how using data science in freemium design and development can increase retention, monetize users, and generate revenue",
        "Importance of LTV and how it can affect your product",
        "Using virality to generate in app revenue",
        "Generate Revenue from IAP"
      ],
      "course_content": {
        "Course Preview": [
          "Course Overview",
          "Join the Community"
        ],
        "Introduction into Freemium as a Business Model": [
          "Price Point of 0$",
          "Components of Freemium Model Part 1",
          "Components of Freemium Model Part 2",
          "Competition",
          "Price Elasticity",
          "Freemium as a Business Model Quiz"
        ],
        "Using Analytics in Freemium Design": [
          "What is Analytics",
          "What is Big Data",
          "Data Driven Design",
          "Minimum Viable Product",
          "Using Analytics in Freemium Design Quiz"
        ],
        "Freemium Metrics": [
          "First time flow Part 1",
          "First time flow Part 2",
          "Using Freemium Metrics",
          "Minimum viable metrics Part 1",
          "Minimum viable metrics Part 2",
          "Retention Part 1",
          "Retention Part 2",
          "Retention Part 3",
          "Monetization Part 1",
          "Monetization Part 2",
          "Engagement",
          "Virality",
          "How to use the Metrics",
          "Freemium Metrics Quiz"
        ],
        "Lifetime Customer Value": [
          "What is LTV?",
          "LTV and Freemium",
          "Making use of LTV",
          "Retention vs Acquisition",
          "LTV In/Out",
          "Discounting",
          "LTV and Marketing",
          "LTV and Production Development",
          "LTV and Organizational Priority",
          "Lifetime Customer Value Quiz"
        ],
        "Monetization": [
          "Monetization Curve Part 1",
          "Monetization Curve Part 2",
          "Non - Paying Users in Freemium Part 1",
          "Non - Paying Users in Freemium Part 2",
          "Downstream Marketing",
          "Re - Engagement Marketing",
          "Measuring Downstream Marketing",
          "Monetization Quiz"
        ],
        "Virality": [
          "Calculating Virality",
          "Compounding Virality",
          "Virality and Retention",
          "Viral Networks",
          "Increase Viral Requests",
          "Increase Viral Conversion Rate",
          "Virality Quiz"
        ],
        "How to Grow Mobile Games": [
          "Strategic Growth",
          "Choosing Demographics",
          "Paid Users",
          "Advertisement Exchange",
          "Demand Side Platforms",
          "Supply Side Platforms"
        ]
      },
      "requirements": [
        "The willingness to efficiently build an application using the proper schematics for success."
      ],
      "description": "The most comprehensive course on how to Generate Revenue for any Mobile Game\nWhy this course is special\nThis course not only covers the basics of what Freemium is. But it also pushes the concept of making  intellectual decisions on how to market and monetize your games.\n\n\nThere is no other course like this on the market. You will understand real fundamentals of Freemium and apply them by building analytics in the actual product design from the earliest stages of the development cycle. Since your product generate massive amount of data through interaction, we use that data to maximize conversion and boost user retention.\nSince every minor change can drastically impact how user behavior reacts, we will look at how applying an MVP strategy and intuitive Dash-board Design to make sure any optimization required will lead to an increase in revenue.\n\n\nWe will also look at Virality and the huge impact it can have on how user's behave with the product. When it comes to promotions, hooks, or even emails, each viral strategy play a role in generating revenue and growing the user base. User acquisition is a giant asset to any freemium models growth and we look at the different way we can achieve our desired goals.\n\n\nMy Guarantee\nFor every student that joins the course, they will be able to ask questions about their own products and how to go about developing them. I will be available to answer any and all questions for all of my students.\n\n\nThe Course Structure\nThe course is almost all video. It will take between 5 hours to complete. After you finish this course, you should be much stronger in understanding to to go about designing and developing your own applications from a data-driven design approach. You will understand the benefits of using metrics to make design decisions that are the most optimal outcome to generate revenue.\nThe course is structured into 8 main Sections.\nSection 2: Introduction to Freemium as a Business Model\nIn this section, we get a universal understanding of what the term freemium is, and how it is applied today. We look at what made freemium possible in the mobile market. Also go into a brief description of all the main components that make up the freemium model. We look at Price Elasticity and how it applies to Freemium.\nSection 3: Using Analytics in Freemium design\nHere, we look at what analytics is as a whole. What analytics can do and who makes up the team that takes analyzing data. We also look at Big Data, a huge trend in the market at the moment. We then shift our focus to a the Minimum Viable Product strategy and effective it is with the freemium model. We see how a Data Driven Design compliments the MVP in analyzing and effectively implementing changes to generate revenue.\nSection 4: Freemium Metrics\nThis is my favorite section and the largest one. Here we will look at how to properly design an First Time Flow (Tutorial) to not only get the user engaged right away, but also make it become a routine. We look at the Core Loop and how to create a solid one. As discussed previously we had MVP, in this section we are going to look at MVM(Minimum Viable Metrics) and how they are used to create cost effective decisions. We deep dive into Retention mechanics and metrics, how to Monetize our products to give us the largest ROI, What different strategies and ways we can increase user Engagement, and we take a small step at understanding Virality which we have a whole section on. After we learn all these core fundamentals, we them see how we can use these metrics to our advantage. What they numbers behind the words mean and what we can do with them to increase our revenue.\nThis is the most important section in the course in terms of theory as it sets the tone of what the whole courses depth is about\nSection 5: Lifetime Customer Value\nIn this section, we take a look at what LTV(Lifetime Customer Value) is. We see how it relates to the freemium model and its usefulness  towards understanding how our users are behaving. We look at different terms like the Ins/Outs of LTV, Discounting and more. What retention vs acquisition is and what is a better path to go through. How LTV relates with Marketing, Product Development, and Organizational Priority. These are key concepts that must be understand for long term forecasting of the product life cycle.\nSection 6: Monetization\nHere we look the Monetization curve and the impact it has on decision making for the product catalogue. We see how valuable Non-Paying Users are to the Freemium model and what kind of value they give. We then switch gears and look at monetization from  marketing perspective. We see how Downstream marketing plays a key roles in freemium and metrics.. We see how we can re-engage pre existing users and measure how effective those marketing campaigns were in doing this strategy.\nSection 7: Virality\nPerhaps one of the most vital sections in the course, Virality plays a huge factor in making sure a product is successful. We will look at how to calculate virality, hot ti compound it and much more. We will see key factors of virality and retention, and how they both are intertwined. We look at viral networks and the different ways we can increase both viral invites and conversion rate to effectively generate more revenue.\nSection 8: Growth\nThe final section of the course! After a product launches, it all about how to sustain the current  flow and grow it to be more lucrative. this section takes a loot at how the development team can choose demographics effectively  and when to do so. What Paid User Acquisition has for the value of growth, Advertisement exchange and the benefits it holds for a marketing team to effective showcase their campaigns. We then look at both Supply and Demand Side Platforms and what it means on both ends of the transaction.\nWhat sort of apps do People usually make?\nGame apps, puzzle apps, social apps, photo apps, and productivity apps.\nMoney back Guarantee\nThe course comes with an unconditional, Udemy-backed, 30-day money-back guarantee. This is not just a guarantee, it's my personal promise to you that I will go out of my way to help you succeed.\nCertification of completion when finishing this course\nWhen you complete 100% of the videos in this course, you will be emailed a certificate of completion by Udemy so you can show it as proof of your expertise and that you have completed a certain number of hours of instruction in the course topic.",
      "target_audience": [
        "Mobile App Developers",
        "Mobile Game Developers",
        "Game Designers",
        "Marketers"
      ]
    },
    {
      "title": "Complete iOS 16 Developer with swift UI and 10 apps",
      "url": "https://www.udemy.com/course/complete-ios-developer-swiftui/",
      "bio": "Learn iOS development with swift UI and building lots of apps.",
      "objectives": [
        "Learn Swift programming language from the scratch.",
        "Practice Swift programming language with interesting assignments attached along",
        "Learn to create basic app with SwiftUI framework",
        "Create your profile design with SwiftUI layouts and framework",
        "Basic mobile application design",
        "Gorgeous in-app interactions and animations",
        "Learn how to fetch data from JSON file using web APIs",
        "Learn to implement Lottie Animations and higher designing skills",
        "Learn to integrate various iOS frameworks (AVFoundation, MapkKit etc)",
        "Learn to integrate core data with REALM",
        "Learn Firebase fundamentals including saving data, real-time sync, authentication, user status and offline support",
        "Build unparalleled augmented reality experiences with ARKit",
        "Leran how to save and load data on your iPhone with Firebase and SwiftUI",
        "Create a top-notch portfolio of real apps and apply for iOS developer jobs",
        "Master Apple's greatest and latest user interface framework - SwiftUI 3",
        "The Complete iOS App Development Course with SwiftUI 3"
      ],
      "course_content": {
        "Introduction to iOS development": [
          "Introduction to iOS development and prerequisite",
          "A tour of XCode",
          "Hello World in Swift",
          "A bit of history of swift with Objective C"
        ],
        "Getting started with swift": [
          "Code files",
          "Variables and Constants in Swift",
          "Operators and Range in Swift",
          "String and interpolation",
          "Methods in Strings",
          "A caution in type conversion",
          "Can user pay | Logical Operators",
          "Optional binding and forced unwrapping",
          "We missed reading the docs"
        ],
        "More datatypes in swift": [
          "Array and methods in Array in swift",
          "Dictionary in depth in swift",
          "Sets in swift programming",
          "Tuples in swift"
        ],
        "Going all indepth of swift": [
          "If else and conditional unwrapping",
          "Control flow statements",
          "Functions in swift programming language",
          "In depth of Closure, autoclosure and escaping",
          "Enums and indirect enums",
          "Structs in swift",
          "Structs Vs Class",
          "Classes and reference type",
          "Properties in swift",
          "Methods in swift"
        ],
        "Advance swift programming concept": [
          "Inheritance in swift",
          "init in depth in swift",
          "Deinit in swift",
          "Error handling in swift"
        ],
        "Building Project 1 - Profile app": [
          "01 Zstack, HStack and VStack",
          "Create a new app in XCode",
          "Getting started with Zstack and VStack",
          "04 Moving into VStack",
          "Nested Stacks in swift UI",
          "Finishing our first app"
        ],
        "Project 2 - Custom shape and slots": [
          "Theory behind custom shapes in iOS",
          "From figma to XCode shape",
          "State, rawValue and Identifiable",
          "More on State and HStack",
          "Getting button in our app",
          "Finishing up slot machine game"
        ],
        "Project 3 - calculator with animation": [
          "RawValue in swift",
          "Starting a calculator project - assets",
          "Defining Model for calculator",
          "Getting keys sorted out for calculator",
          "Animation in swift ui",
          "Adding buttons for calculator",
          "Learn to calculate element width and height",
          "Loading up views on home screen",
          "Finishing up the calculator logic part"
        ],
        "Project 4 - Splash screen": [
          "Getting started with Splash screen",
          "Finishing up a splash screen"
        ],
        "Project 5 - Shopping app with multi screen Navigation": [
          "Demo of Shopping app with Navigation",
          "Importing all assets of fruits",
          "Building on boarding screen with navigation",
          "Models for fruit and near you",
          "Handling the fruit card",
          "Horizontal scroll view",
          "Passing value from one screen to another",
          "Design detail view part 1",
          "Counter in detail screen",
          "Vertical scroll view",
          "Assemble fruit cart app",
          "Resolving minor UI issue"
        ]
      },
      "requirements": [
        "Xcode 13 from Apple",
        "macOS Monterey from Apple",
        "You do not need any other prior coding experience or knowledge",
        "Determination to create wonderful projects with tutor step by step"
      ],
      "description": "Welcome to complete iOS 16 developer course.\n\n\nA course that does not just add a few sections of Swift UI rather teaches you complete iOS development fully in swift UI. We truly understand that it can be frustrating to learn from resources that just add a few sections and call it a new course. This course is not like that.\nWe have designed and recorded this course entirely on the new Swift UI.\nWe will start with the basics of programming with a swift programming language. We will go through concepts of programming like variables, operators, range, optional binding, forced unwrapping, control flows, functions, class, structs, protocols and error handling. Once the programming basics are complete we will start with building apps. There is nothing like learning while building apps. Each app is designed and planned in such a way that it teaches you 1 concept at a time.\n\n\nProfile app\nThis app will teach you the basics of creating apps and will make you familiar with ZStack, HStack and VStack. Within very 1st app you will learn to design beautiful apps.\n\n\nSlot machine\nThis app will teach you about custom shape design in iOS. We will learn about the concept of rawValue and creating any shape that you want. Again a beautiful app with some logic as well.\n\n\nCalculator app\nCalculator seems really simple to people but it is not. This calculator is full of animations and tricks for designing a layout. How to calculate screen dimensions and more.\n\n\nSplash screen\nAlthough this app is small in implementation, but it is very much fun. In this app you will learn about creating a splash screen that usually acts as a branding screen for most apps.\n\n\nShopping app\nThis app focuses more on the UI part. With a beautiful UI, we will learn about creating models and travelling of data between multiple screens. Horizontal scroll view and Vertical scrolling is also covered in this app.\n\n\nLinkedin UI Clone\nLinkedin has got one of the cleanest and most user friendly apps. Building an app like this teaches you a lot about clear design and gives you confidence that you can also build a complex app.\n\n\nTodo app - User defaults\nTodo apps like everyone can do it but don’t take it easy, it’s not that easy. Todo app teaches you about the CRUD operations and that too with UserDefaults. We will also learn about app state management in this app.\n\n\nAPI handling with Pokemon app\nHandling API is one of the most important jobs as a developer and during your journey as an iOS developer you will be handling a ton of API. In this section we will learn about making a web call to API, handling clean response, handling dirty response and creating a model based on response. Further there will be a small assignment in this section.\n\n\nCurrently we are rolling out this course with these apps. As I get more time, I will surely add more apps to this course.",
      "target_audience": [
        "Beginner iOS developer who are curious about iOS development",
        "For advance iOS developers eager to learn SwiftUI framework",
        "Best course for the engineers looking for job as an App Developer",
        "People willing to publishing their app on App Store, then jump straight into the course"
      ]
    },
    {
      "title": "Build Android Widgets from scratch (Learn 8 Widgets)",
      "url": "https://www.udemy.com/course/learn-to-build-8-android-widgets-in-2-hours/",
      "bio": "Build 8 fully functional widgets for Android devices - Right from Scratch in just 2 hours",
      "objectives": [
        "You will learn to build fully functional widgets on Android - all on your own, right from scratch"
      ],
      "course_content": {
        "Android Widgets": [
          "Android - Menu",
          "Android - Navigation Drawer",
          "Android - RecyclerView",
          "Android - CardView",
          "Android - FloatingActionButton",
          "Android - BottomSheet",
          "Android - BottomNavigationView",
          "Android - Collapsing Toolbar"
        ]
      },
      "requirements": [
        "Students must have a good understanding of Android Basics"
      ],
      "description": "Welcome to our course\nLearn How to build 8 Android Widgets right from scratch in just 2 hours\nIf you are an Android developer who has a good understanding of the application basics, then here's your chance to expand your Android knowledge and move to the next-level in Android development.\nIn this course, you will learn how to build 8 commonly-used widgets on Android all on your own. The Instructor has opted for a hands-on approach to teaching these concepts.\nYou will learn how to create a Menu, a Navigational Drawer, a Collapsing Toolbar, and much more.\n\nWho's teaching you in this course?\nI am a Computer Science graduate highly rated instructor with a rating of 4.3 and more than 200k students on Udemy, I have been part of the corporate circle since his college days. In his early days, I was part of a startup team delivering production grid android apps. Currently, I am a lead developer at EdYoda. I’m responsible for the entire front-end development & integration with the back-end. React, Python, Django is my areas of expertise. I have been delivering corporate training for Android, React, JavaScript, Python & Django. I have an eye for detail & that makes me suited for delivering a finished product. I’m a fitness freak & working out is the favorite thing to do in my spare time.\n\nI want everyone to enjoy the learning process and I have shared my knowledge that will be helpful for Android developers.\n\n\nSo,\nAre you ready??\nYour time starts now!\n\nHappy learning\nTeam EdYoda",
      "target_audience": [
        "Mobile developers with good knowledge on Android basics",
        "Android developers who wish to expand their domain knowledge"
      ]
    },
    {
      "title": "Android OS Internals / AOSP Automotive ROM Development",
      "url": "https://www.udemy.com/course/android-os-internals-aosp-automotive-development/",
      "bio": "Android Open Source Project Development (AOSP) - Android Automotive",
      "objectives": [
        "AOSP",
        "Android Automotive",
        "Android",
        "Android OS Internals",
        "AAOS"
      ],
      "course_content": {},
      "requirements": [
        "Basic Programming Knowlegde"
      ],
      "description": "Over the years android has captured Phones, tablets, TV, Wear devices. It's running on 2.5 billion active devices. Even though Android is in the market for a long, it's still pretty hard to find structured courses or online resources for AOSP development. That's the reason this course is here.\nThis course is specially designed for Developers of intermediate level who want to learn about developing Android OS, focusing more on Android Automotive UI Development.\nWe have tried to make this course as compact and simple as possible. I hope you will learn something new each minute of the tutorials. This course is perfect for those who are new to the AOSP world or want to learn AOSP Automotive OS UI development.\n\nAs a prerequisite for this course, you would need a PC with Ubuntu or a Mac book (intel) or an Ubuntu Virtual machine. The course starts with an introduction and environment setup and then covers most of the\n\n\nSection 1: Introduction\nSection 2: Environment Setup\nSection 3: Download the Source\nSection 4: Build the source\nSection 5: Architecture, Important Folders, and Source that you should know\nSection 6: Car Settings\nSection 7: Car UI Library\nSection 8: System UI\nSection 9: Notifications\nSection 10: Launcher\nSection 11: Boot Animation\nSection 12: SELinux\nSection 13: System Services\nAt the end of the course, you should be able to gain enough knowledge to customize the Automotive UI and create your own Android Automotive AOSP Version.\nAll the very best for your AOSP Career.\n---------------------- ------------------------- --------------------------- --------------------------------- --------------------------------- -------------------",
      "target_audience": [
        "Beginners who want to build your own version of Android Automotive OS (AAOS)"
      ]
    },
    {
      "title": "Composable SwiftUI Architecture Using Redux",
      "url": "https://www.udemy.com/course/composable-swiftui-architecture-using-redux/",
      "bio": "Learn to build Unidirectional Data Flow Apps Using SwiftUI for iOS 14",
      "objectives": [
        "Unidirectional Data Flow Using Redux Design Pattern in SwiftUI",
        "Composable SwiftUI Apps Using Redux",
        "Maintaining Global State, Actions, Multiple Reducers",
        "Asynchronous Requests Using Middleware"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files",
          "Credits"
        ],
        "Understanding Redux": [
          "What is Redux? What problem does it solve?",
          "Redux Flow Diagram",
          "Store and Reducers",
          "State and Actions",
          "Middlewares"
        ],
        "Hello Redux": [
          "What we will be building in this section?",
          "Creating Store, Reducer, State and Actions",
          "Dispatching Actions and Updating State",
          "Mapping Global States to Local Props",
          "Injecting Environment Object and Displaying Results",
          "Implementing Decrement and Add Action"
        ],
        "Combining Reducers - Multiple Reducers": [
          "Why Combining Reducers?",
          "Creating Multiple Reducers",
          "Adding Sliced States and Updating Store",
          "Implementing Task Reducer",
          "Adding and Displaying Tasks Using Task Reducer"
        ],
        "Middleware": [
          "Understanding the problem?",
          "Implementing a LOGGING Middleware",
          "Dispatching Async Actions Using Middleware"
        ],
        "Movies App - Displaying Movie List": [
          "Implementing mapStateToProps",
          "Displaying Movies onAppear",
          "Displaying Movies Using Search Keyword"
        ],
        "Movies App - Implementing Middleware, Actions and State": [
          "Implementing MoviesState and MoviesReducer",
          "Implementing moviesMiddleware",
          "Implementing Movies Reducer"
        ],
        "Movies App - Displaying the Movie Details": [
          "Understanding the MovieDetail OMDBAPI EndPoint",
          "Implementing MovieDetail Model",
          "Implementing Webservice GetMovieDetailsByImdbId",
          "Fetching Movies inside moviesMiddleware",
          "Displaying Movie Details for the Selected Movie"
        ],
        "Restroom Finder App - Integrating with API and Setting Up Redux Flow": [
          "What we will be building?",
          "Tour of REFUGE Restrooms API",
          "Understanding Starter Project",
          "Implementing Webservice and Models",
          "Implementing State, Actions and Reducers",
          "Implementing restroomsMiddleware for Async Requests"
        ]
      },
      "requirements": [
        "Knowledge of Swift Language",
        "Knowledge of SwiftUI",
        "Xcode 12 or above",
        "Mac",
        "Passion for learning, experimenting and researching"
      ],
      "description": "SwiftUI applications can be implemented using several different design patterns. The two most common patterns are MVVM and Redux. In this course, you are going to learn how to get started with using the Redux design pattern in your SwiftUI applications.\nRequirements\nKnowledge of Swift Language\nKnowledge of SwiftUI Framework\nNo paid software is required. All apps are created using Xcode.\n\n\nUnderstanding Redux:\nIn this section, you will learn different components of the Redux design pattern. You will start by learning about the Redux store and how reducers can access and update the store. You will also learn about state and storing state in smaller slices of the global state. Next, you will learn about actions and how actions can be dispatched from the store and carry a payload. Finally, you will learn about middleware and how middleware can be used to perform an async request.\n\n\nHello Redux\nIn this section, you will learn how to integrate Redux with SwiftUI application. You will build a small counter application and exercise all components of Redux including store, reducer, action and mapStateToProps.\n\n\nCombining Reducers - Multiple Reducers\nIn this section, you will learn how to combine multiple reducers into one root reducers. Dividing reducers helps you to clean code and not end up with one massive reducer.\n\n\nMiddleware\nIn this section, you will learn how to implement a middleware. Middleware can be used to perform asynchronous requests and pass the result of the request to the reducer by dispatching an action.\n\n\nMovies App\nIn this section, you will learn how to build a complete Movies App using Redux Design Pattern with SwiftUI. You will learn how to implement middleware to consume a third party OMDB API. You will also learn how to display images and ratings using provided URLImage and RatingView views. You will also implement the details screen, which will allow you to fetch movie details.\n\n\nDon’t take my word for it, check out reviews from my other courses.\nIt is amazing, not only is it clear but it clarifies all my unanswered questions. It's hard to find someone who has a well detailed swift DS & Algo class. This is a gem. Thank you Mohammad Azam\nThis course provides a bundle of resources on Swift UI. Great explanation, building different apps and addition of latest updates makes it a five star course. Thanks Mohammad for you valuable work on providing this course.\nMohammad's courses are usually outstanding, but he has put in a great amount of detail into this course. He provides great detail in his explanations. If you have never parsed JSON and are looking to learn about MVVM design I would highly recommend this course.\nVery elegant course. Well scaffolded. Each section is very focused on a single task. One pet peeve I have of Udemy courses is when an instructor teaches a new skill but nest it inside a project that does 10 other things. This is the second course I've had with this instructor and both are excellent. Highly recommended.\n\n\nAfter completing this course, you will be ready to build your next SwiftUI application using Redux Design Pattern.\n\n\nThanks and happy coding!\nAzam",
      "target_audience": [
        "Developers wanting to learn Redux Design Pattern",
        "Developers wanting to be promoted to architecture role",
        "Developers wanting to add a new skillset to their tool belt",
        "Developers wanted to build iOS apps using Apples new SwiftUI framework"
      ]
    },
    {
      "title": "Complete App Store Optimization For IOS/MacOS Apps(ASO)",
      "url": "https://www.udemy.com/course/complete-apple-aso-learn-how-to-get-million-ios-app-downloads-for-free/",
      "bio": "Learn ASO & Get Million App Downloads Without Advertizing And Get Working Knowledge With App Store Optimization Tools.",
      "objectives": [
        "You will learn everything about app store optimization, starting with its significance to an in depth review of several of its components.",
        "You will get hands-on experience by doing ASO for a dating app.",
        "You will be introduced to a lot of free tools used for ASO.",
        "Last but not the least, you will get lot of fun throughout the course."
      ],
      "course_content": {
        "1: Introduction & App Store Optimization Basics": [
          "Introduction to the course",
          "Why is ASO important?",
          "What are the major components of ASO?",
          "Have i done good ASO to my App...?",
          "Assignment 1"
        ],
        "2: The heart of ASO - Keyword research": [
          "Tools for keyword research",
          "How to get keywords?",
          "How to do keyword research?",
          "More keywords = More app downloads!",
          "How to make keyword list?",
          "Assignment 2"
        ],
        "3: Lets improve App Visibility": [
          "How to use keywords?",
          "App title",
          "Localizing keywords",
          "Others",
          "Assignment 3"
        ],
        "4: How to improve Conversion Rates": [
          "App icon",
          "Screenshots",
          "App description",
          "Other relevant components",
          "Assignment 4"
        ],
        "5: This is not the end!": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Only the willingness and passion to learn app store optimization are required.",
        "No other pre-reading is needed.",
        "I will teach you everything you need to know for this course."
      ],
      "description": "Do you make IOS/ Mac Apps?\nDo you want to make an IOS app or Do you already have an app in the App Store ?\nDo you want to know how to how to improve your app downloads ?\nIf you say \"Yes\" to any of these questions,  this course is for you.\n#1 Ranked  Course in the Udemy for App Store Optimization(ASO).\n\nWhat Students saying about this course?\n\nDr. Jo Ana Starr PhD\n:   5/5\nThis course delivery was excellent. The instructor was very confident and well prepared to deliver the information. The material was succinct and still thorough. He also had a very upbeat manner; he seemed to enjoy the whole teaching experience which added to my enjoyment. Excellent course!\nGustavo Comitre\n: 5/5\nA perfect tutorial step by step. He show good tips for beginners like me. Before this classroom, I spent $100 dollars in a shit tool for ASO and just in a few minutes he introduce great free tools those work really better.\nYusak Wijaya Santoso\n: 5/5\nIt's easy to understand and the most i like from this is course is, a practical example how to use the tools. Thanks for make this course.\n\n\nBe prepared for a download surge with this exciting course –  * FIRST EVER LEARN BY DOING COURSE * on the Web on App Store Optimization (ASO) also called App Search Optimization or App Store Seo !\n\nWith high quality material compiled from 2 years of personal experience, this course will help you market your app and increase app sales with the least amount of money... or actually for free. So that’s investment at the lowest and earning at the highest!.\nFrom beginner to pro…\n\nAlthough new to Udemy, my previous teaching experience helped me develop a course that will be equally liked by a novice or a professional app developer. See for yourself, how fun and effective it would be to be able to take your app to a lot more audience. This course has everything you need to increase app downloads and makes you familiar with app store optimization tools, mobile marketing apps, ios app marketing ,how to promote an app, mobile app promotion, how get more downloads for your app & app store search .\nThe tortoise or the hare – It's your choice…\n\nThis course is divided into 5 sections, keeping in view the ease of learning and an individual capability for retention. You will immediately gain access to all the video lectures and practice materials. Its up to you whether you want to sail through the content or complete at your own pace. I’m sure you’ll enjoy every part of the course – I made it simple, easy and exciting!\nThe dating app…!\nYour first date is probably one of the most exciting things in your life. To make this course more lively and invigorating, you will practice App Store Optimization(Appstore Optimization (ASO))… for real… on a dating app! Stay tuned….\nLets make a deal…\nThis App Store Optimization (ASO) course is the first and the most comprehensive, profitable and user-friendly course you’ll find on the Internet. If you don’t find it so, I offer a full money back guarantee, as long as you request it within 30 days of subscribing to the course. That’s double the deal… so why wait… Subscribe to this wonderful App Store Optimization (ASO) course today and start getting millions of downloads for your app !",
      "target_audience": [
        "This course is meant for anyone with a true interest in iOS app development and want to publish their apps the right way on apple app store.",
        "For people wanting to capture their target audience and increase their app downloads at least 10 to 1000 times on app store, this course is a must.",
        "For people pursuing app marketing or app store optimization as a career or freelancing project, this course can definitely help.",
        "This course is not for Android app developers."
      ]
    },
    {
      "title": ".NET MAUI course with Visual Studio 2022 creating PROJECTS",
      "url": "https://www.udemy.com/course/net-maui-course/",
      "bio": "Learn how to create apps for iOS, Android, Windows and MacOS with the help of .NET MAUI, C# and XAML, creating PROJECTS",
      "objectives": [
        "Installation of .NET MAUI",
        ".NET MAUI Controls",
        ".NET MAUI Layouts",
        ".NET MAUI Pages",
        "Use of controls for application creation",
        "Controls customization",
        "Many other topics"
      ],
      "course_content": {
        "Introducción": [
          "What is .NET MAUI?",
          "VS 2022 Installation",
          "Login to Visual Studio",
          ".NET MAUI Initial Project Overview",
          "Creation of the emulator",
          "Hello .NET MAUI",
          "Installing an Emulator Without Hyper-V - Genymotion"
        ],
        "Introduction to XAML language": [
          "Definition of XAML files",
          "Basic structure of XAML elements"
        ],
        ".NET MAUI Pages": [
          "Introduction",
          "Setting up the net maui home page",
          "The ContentPage type",
          "The NavigationPage type",
          "The FlyoutPage type",
          "The TabbedPage type",
          "Github repo"
        ],
        ".NET MAUI Layouts": [
          "Introduction",
          "StackLayout",
          "Github repo",
          "HorizontalStackLayout y VerticalStackLayout",
          "Github repo",
          "Grid",
          "Github repo",
          "AbsoluteLayout",
          "Github repo",
          "FlexLayout",
          "Github repo"
        ],
        ".NET MAUI Controls": [
          "Controls to present data",
          "Controls to initiate commands",
          "Controls to set values",
          "Controls to edit text",
          "Controls to indicate activity",
          "Controls to display collections",
          "Github repo"
        ],
        "Project # 1: Creating your first .NET MAUI App - Color Maker": [
          "Application Overview",
          "Specifying colors for use in a ContentPage",
          "Determining the Layout type for application",
          "Creating the section of the controls",
          "Changing the background color",
          "Generating random colors",
          "Copying the color to clipboard",
          "Color Maker"
        ],
        "Project # 2: Perfect Pay": [
          "Application Overview",
          "Creating the tip information section",
          "Defining data entry section",
          "Performing the calculations",
          "Perfect Pay"
        ],
        "Working with external resources": [
          "Working with images",
          "Working with fonts",
          "Working with font icons",
          "Working with other file types",
          "Github repo"
        ],
        "Project # 3: Code Quotes": [
          "Introduction",
          "Defining the main interface",
          "Working with gradients",
          "Changing the background of the app dynamically",
          "Generating a random quote",
          "Code Quotes"
        ],
        "Data binding fundamentals": [
          "Introduction",
          "Creating your first Binding",
          "Creating a binding from XAML code",
          "Binding Context",
          "Bindings between controls",
          "Binding modes",
          "The INotifyPropertyChanged interface",
          "Github repo"
        ]
      },
      "requirements": [
        "Have basic knowledge of C#"
      ],
      "description": "* NEW CONTENT EVERY WEEK!!!\n\n\n.NET MAUI is Microsoft's powerful framework for creating cross-platform applications, that is, applications for Android, iOS, Windows and MacOS, creating the code only once, and being able to deploy it on multiple platforms. Moreover, it is the evolution of Xamarin, which means that the team behind .NET MAUI has taken all the experiences over several years, to develop from scratch this new framework.\nI have created this .NET MAUI course to teach you how to use the framework to create your own cross-platform applications, teaching you throughout the course how to use the different components of the framework to create these applications.\nThroughout this course, we will create a series of applications that will allow you to put into practice everything you have learned, so that you will know how to implement the different features in real cases, while you will have several applications that you can put in your portfolio.\nAs more controls and nuget packages are updated, the course will be updated so that you always have the best information available.\nAmong the main topics that we will address in the course are:\n\n\n.NET MAUI components\nFramework features\nUse of controls to create graphical interfaces\nCustomization of controls\nUse of local databases\nUsing REST services\nAmong many other topics\n\n\nEvolve your learning and learn today about this fabulous and new framework. See you in the course.",
      "target_audience": [
        ".NET developers who want to create cross-platform apps",
        "Developers in general who wish to enter the world of multiplatform app creation."
      ]
    },
    {
      "title": "iOS 13 - How to Make Amazing iPhone Apps: Xcode 11 & Swift 5",
      "url": "https://www.udemy.com/course/how-to-make-an-iphone-app-course-xcode-11-swift-5-ios-13/",
      "bio": "Learn SwiftUI, Dark Mode, Sign in with Apple, Swift Package Manager and SF Symbols on the new Xcode 11 and Swift 5.1",
      "objectives": [
        "Implementing Dark Mode",
        "SwiftUI",
        "Sign in with Apple",
        "Swift Package Manager",
        "SF Symbols",
        "Xcode 11",
        "Swift 5",
        "JSON/APIs"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course"
        ],
        "Swift and Xcode Basics": [
          "Xcode Tour",
          "Variables and Constants",
          "Strings and Ints",
          "Comments and Print",
          "Visual Design and Labels",
          "Outlets and Errors",
          "Buttons and Actions",
          "If Statements",
          "Counting",
          "Source Code"
        ],
        "Taking Swift Further - Tip Calculator App": [
          "Math and Doubles",
          "Floats and Conversion",
          "TextFields",
          "TextField Data",
          "String Interpolation",
          "Booleans",
          "Source Code"
        ],
        "TableViews - Code Dictionary App": [
          "Why Sketches Are Important",
          "Arrays",
          "TableViews",
          "Answering Two Questions",
          "Arrays and TableViews",
          "Segues",
          "Passing Data",
          "Showing the Definition",
          "Loops",
          "Source Code"
        ],
        "Object Oriented Programming with Swift": [
          "Functions",
          "Return",
          "Classes",
          "Methods",
          "Inheritance",
          "Using Classes In Our App",
          "Optionals",
          "Putting It All Together",
          "Source Code"
        ],
        "ToDo List App": [
          "Sketch",
          "TableView Practice",
          "Segue and Design Practice",
          "Creating a ToDo",
          "Reloading the TableView",
          "Deleting ToDos",
          "Source Code"
        ],
        "Saving Data with CoreData": [
          "Entities",
          "Saving To CoreData",
          "Fetching From CoreData",
          "Delete From CoreData",
          "Hello App Challenge",
          "Hello App Solution",
          "Source Code"
        ],
        "Camera and Images - Progress Update App": [
          "Running Apps on Your Phone",
          "ImageViews",
          "Rounded Buttons",
          "Image Picker",
          "Dictionaries",
          "Working With the Camera",
          "Saving Images to CoreData",
          "Swipe To Delete",
          "Fullscreen ImageView",
          "Source Code"
        ],
        "Web, APIs, and JSON - Bitcoin App": [
          "Sketch",
          "Design",
          "APIs",
          "JSON",
          "Threads",
          "Number Formatter",
          "UserDefaults",
          "Source Code"
        ],
        "Uploading Your App to the App Store": [
          "Paid Developer Account",
          "Certificates and Profiles",
          "App Icons",
          "Submit Your App",
          "Working For a Company",
          "Freelancer",
          "Your Apps",
          "What to Do Next"
        ]
      },
      "requirements": [
        "Must have a Mac computer"
      ],
      "description": "Welcome to my iOS 13 Course! If you're looking for a course that is fun and gets straight to the point, then this is the course for you. Apple released a TON of new stuff for developers at WWDC and this course will take you though everything you need to make awesome iOS 13 apps.\nOther mega courses on Udemy offer 40+ hours of video content, but I wanted to create a course that was more manageable and didn't include any fluff. In each video I dive straight into the topic, and don't waste your time going over things that you don't really need. I only focus on the essentials, and I give you hands-on practice so that you can easily master the things we are learning!\nThis course is designed to be taken over a two week period, with 1-2 hours dedicated to learning each day. This course is easy to commit to because you won't get overwhelmed with a mountain of content, and you don't need to quit your day job to learn how to code!\nOver the past four years I've taught over 140,000 people how to code, and I am a self-taught programmer so I know what it feels like to start from scratch. I care about your learning, but even more importantly... I care about you! I know your time is valuable, so I promise not to waste it.\niOS 13 Topics we cover include:\nSwiftUI\nDark Mode\nSign in with Apple\nSwift Package Manager\nSF Symbols\nFeel free to take a free preview of this course to see if it's a good fit for you. I am so confident that you will love my course. You have nothing to lose, so come join me and let's get started!",
      "target_audience": [
        "Someone wanting to implement iOS 13 features into their own app"
      ]
    },
    {
      "title": "SwiftUI - Build Amazing Apps - With much less code",
      "url": "https://www.udemy.com/course/swiftuicourse/",
      "bio": "Learn how to work with Apples Declarative framework and build beautiful and stylish apps fast, with much less code",
      "objectives": [
        "Students will be able to work with and build apps with SwiftUI and deploy them on all of Apple platforms"
      ],
      "course_content": {
        "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources": [
          "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources"
        ],
        "Introduction - What is SwiftUI?": [
          "Introduction - What is SwiftUI?"
        ],
        "Previews and the new Xcode": [
          "XCode and previews"
        ],
        "The Swift Language - Introduction": [
          "The Swift Language - Introduction"
        ],
        "Constants and Variables": [
          "Constants and Variables - Data types - part 1",
          "Constants and variables - Data types - part 1",
          "Constants and Variables - Data types - part 2",
          "Constants and variables part 2"
        ],
        "Strings": [
          "Strings - Working with strings and thier properties and methods - part 1",
          "Strings - Working with strings and thier properties and methods - part 2",
          "Strings"
        ],
        "Operators": [
          "Operators - Part 1 - unary•binary•ternary•assign•compound",
          "Operators - part 1",
          "Operators - Part 2 - Comparison•nil•range•logical",
          "Operators - part 2"
        ],
        "Classes and Structs": [
          "Classes and structs - Part 1 - syntax • properties • initialization",
          "Classes and structs - Part 2 - Value and reference types • identity operator",
          "Classes and struct quiz"
        ],
        "Properties": [
          "Properties part 1 - Stored properties",
          "Quiz - Stored Properties part 1",
          "Properties - part 2 - Lazy properties",
          "Quiz - Lazy Properties part 2",
          "Properties - Part 3 - Computed properties",
          "Quiz - Properties - part 3 Computed Properties",
          "Properties - Part 4 - Property observers",
          "Quiz - Properties part 4 - Property Observers",
          "Properties - Part 5 - Static propeties",
          "Quiz - Properties part 4 - Static properties"
        ],
        "Initializers": [
          "Initializers - Part 1 - Syntax - Value type delegation",
          "Initializers - Part 2 - Designated and convenience inits",
          "Initializers - Part 3 - Initializer inheritance",
          "Initializers - Part 4 - Required and failable inits",
          "Quiz - Initializers"
        ]
      },
      "requirements": [
        "A working knowledge of Apple's Swift language is required"
      ],
      "description": "Welcome to the SwiftUI course\nMy name is Steve DeStefano, an iOS / macOS developer, and I created this course for anyone who wants to learn how to build beautiful apps with Apples new framework SwiftUI.\nSwiftUI is Apples new Declarative building framework that actually might forever change the way apps are made.\nGone here are the familiar story boards, as well as auto layout, which was at times very frustrating to work with… this has all been replaced with intuitive new design tools within Xcode that make building interfaces with SwiftUI as easy as dragging and dropping, and using about 5 times less code then working with UIKit and storyboards.\nSwiftUI is a declarative approach to building apps and it includes all of apples platforms… so build the app once, and deploy it on the other platforms very easily.\nWhat is Declarative Programming?\nDeclarative Programming is a non-imperative style of programming in which we describe, or declare, the desired results without explicitly coding out the commands or steps that must be performed.\nimperative programming is a style of programming that uses statements, in explicit steps to change a program's state…meaning, we would have to code the various components or views ourselves to make them show and hide...this is what we do with UIKit and storyboards\nThe key contrast between the two styles can be summed up with two words - WHAT and HOW -\nDeclarative programming focuses on what the program should accomplish, and imperative programming focuses on how the program should achieve the result.\nThis course will show you how to use this declarative approach and the SwiftUI features, and walk you through the process of building fun and stylish apps.\nYou will learn all about:\n• Text views\n• TextFields\n• Images\n• Modifiers\n• State\n• Object Binding\n• Environment\n• Lists\n• Navigation\n• Passing data back and forth\n• Integrating SwiftUI with UIKit\n• Stacks\n• Animations\n• Core Data\n• CoreML\n• SwiftUI and the Camera\n• Shadows\n• Shapes\n• Gradients\n• Forms\n• Tab Bars\n• Learn the Swift Language in the language section - here you can learn from the beginning on how to code in Swift with dozens of lectures that cover all you need to know to be proficient in writing code.\n• Swift Language quizzes help you solidify your progress as you work through the language lectures\nand much more…\nSo code along with me working with an incredibly cool and insane set of design tools - SwiftUI - and get a head-start on the future of app building.",
      "target_audience": [
        "Beginner iOS / macOS / watchOS / tvOS developers through intermediate and advanced"
      ]
    },
    {
      "title": "Android Jetpack Compose: The Comprehensive Bootcamp",
      "url": "https://www.udemy.com/course/kotling-android-jetpack-compose-/",
      "bio": "Kotlin Android App Development: Firebase Firestore, Hilt & Dagger, ROOM DB, ViewModel, Navigation & Clean Architecture",
      "objectives": [
        "Learn Clean Architecture and MVVM Patterns with Android Jetpack Compose",
        "Master Jetpack Compose and Build Modern Android Apps",
        "Build 7 Android Apps with Jetpack Compose and Kotlin - Use Firebase Firestore for the Backend",
        "Master Modern Android Development Best Practices with Jetpack Tools and Compose",
        "Leverage Hilt and Dagger and add Dependency Injection into a Jetpack Compose Android App",
        "Build, from scratch, beautiful native UIs with Jetpack Compose - a Declarative approach for building moder Android Apps",
        "Integrate Android ROOM Database into a Compose Application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Learning Path - Please Watch this"
        ],
        "Course Source Code": [
          "Download Source Code"
        ],
        "WINDOWS Machine Setup for Development": [
          "Installing Android Studio and Setup",
          "OPTIONAL: Fixing VTX Issues on Windows",
          "Creating a Kotlin Module and Running it",
          "Kotlin Playground - Online Code Editor"
        ],
        "MAC Machine Setup for Development": [
          "Install and Setup Android Studio",
          "Create a Kotlin Module in a Android Project",
          "Kotlin Playground - Online Code Editor"
        ],
        "[Build an App - BizCard] - Build Your First Jetpack Compose App": [
          "App Demo",
          "Setting Up BizCard App - Android Compose Surface Layout and Preview",
          "Creating a Card and Changing Its Properties with Modifier",
          "Adding the Profile Image",
          "Adding a Column and a Divider",
          "[CHALLENGE] - Change Divider's Parameters",
          "[CHALLENGE SOLUTION] - Divider Parameters",
          "Adding the Card Info Section",
          "Adding the Portfolio Button",
          "Create the Content Composable Function",
          "Adding a LazyColumn Layout and the Toggle Functionality",
          "Final Touches to the BizCard App",
          "What's Next"
        ],
        "Kotlin Programming Language Fundamentals - Variable Types": [
          "Section Introduction",
          "Kotlin var and val Keywords",
          "Initializing Variables",
          "Intro to Variable Types - Int and String",
          "Basic Types in Kotlin",
          "The Long Type",
          "Floating Point Types",
          "Kotlin Operators",
          "Section Summary"
        ],
        "Kotlin Fundamentals - Loops and Branching": [
          "Section Introduction - Loops and Branching",
          "The If Statement and When Expression",
          "When Expression - Range",
          "The For Loop"
        ],
        "Kotlin Fundamentals - Functions": [
          "Section Introduction - Functions",
          "Create a Simple Kotlin Function",
          "Functions with Int Parameters",
          "Adding More Parameters to a Function",
          "Default Arguments & Named Arguments",
          "Functions and Return Types",
          "Returning a Boolean",
          "Lambda Expressions - an Introduction",
          "[CHALLENGE SOLUTION] - CatAge - To Lambda Expression",
          "Using the \"it\" Lambda Keyword",
          "Lambda Expressions that Return Unit - Void",
          "Trailing Lambda"
        ],
        "Kotlin Fundamentals - Collections": [
          "Introduction to Collections",
          "Invoking Methods on Lists",
          "Kotlin Sets and Maps Collections",
          "Initializing Lists",
          "Empty Collections",
          "Collection Filters",
          "Section Summary - Collections"
        ],
        "Kotlin - Intermediate Object Oriented Programming Concepts": [
          "Introduction to OOP - Create First Class",
          "Kotlin Classes and the Primary Constructors",
          "The init Block",
          "Adding a class Function with Parameters",
          "Inheritance and Override",
          "Inheritance Design Steps",
          "Introduction to Interface Classes",
          "Creating an Interface and Using It",
          "Extension Functions in Kotlin",
          "Remove First and Last Character Extension Function - CHALLENGE SOLUTION",
          "Data Class",
          "Section Summary - Kotlin OOP"
        ]
      },
      "requirements": [
        "Basic programming experience in general is helpful but not required. The course covers everything you'll need to build Android Apps with Kotlin and Jetpack Compose",
        "Kotlin Fundamentals Included in the Course"
      ],
      "description": "**This course is tailored for beginners and Advanced Developers**\nAndroid Jetpack Compose is a new way of building modern android apps in android app development.\nThe Software Development industry is moving away from the Imperative Approach of building apps - where developers were required to write a lot of boilerplate code, navigate through inconsistent APIs, and hard to maintain code to build simple mobile apps.\nWith Jetpack Compose, building Native UI for the Android platform is more effortless, concise, consistent, and less code.\nJetpack Compose is the new modern toolkit that gives Android developers a simplified and accelerated way to build Native UIs on Android - with this toolkit; developers can build android apps with less code using Kotlin!\nJetpack Compose brings a paradigm shift in Android development - we now describe the UI instead of specifying the steps to build a UI. With Jetpack Compose, development time is accelerated as we can iterate fast with live previews while developing User Interfaces in Android Studio.\nWith Jetpack, creating slick animations and using Material Design is a breeze because the toolkit is powered by the Android platform APIs and intuitive Kotlin APIs.\nThis course brings you up-to-speed developing apps with Jetpack Compose and Kotlin.\nYou’ll be learning from the basics of what a Composable function is to how to handle state in Compose, and how to build full-fledge android apps that leverage the full power of Jetpack Compose and Kotlin.\n\n\nWho is this ideal student for this course?\nThis course is tailored for beginners and Advanced Developers\nI created this course with you in mind - whether you’re a beginner or a more experienced developer, you’ll find the course materials equally valuable - it’s a deep-dive course where I take you from the very beginning to building a complex Jetpack Compose App.\nI’ve structured the course so that even if you’ve never programmed in Kotlin, you’ll have the opportunity to learn the basics, intermediate and advanced Kotlin concepts before moving on to learning Jetpack Compose.\nOn the other hand, if you already have a good grasp of Kotlin, you can skip the Kotlin sections altogether and go to the Jetpack Compose sections.\n\n\nWhat you’ll learn?\nThis course is comprehensive, meaning I don’t assume you’ve had a lot of experience developing Android apps in general, so I will take you through all the concepts you need to get started. It’s a comprehensive course packed with a lot of information. Here are a few key concepts you’ll be learning:\nWhat’s Jetpack Compose and Its Advantages over the Imperative way of building Android Apps\nKotlin Programming basics, Intermediate and advanced concepts (Optional - you can skip if you need to)\nCore Jetpack Compose concepts: Composable functions, Compose layout widgets and Modifiers\nLearn how to customize UI elements in Compose\nUnderstand how Jetpack Compose handles State - Recomposition and State Hoisting\nUnderstand how to construct a Native UI for Android devices using Composable functions that are stateless\nUnderstand how MutableState, and Flow work with Composable Functions\nMaster how to build 8 Jetpack compose apps that range from simple to complex (Tip Calculator, Movie App, Note App, Trivia App, Weather Forecast App, and so much more)\nBuild a lot of apps while learning Jetpack Compose (of course!)\nLearn how to structure and build Compose apps with Clean Architecture, MVVM, ViewModel, Coroutines\nBuild Compose apps that use the Android ROOM database\nLearn how to Parse JSON data from APIs using Retrofit\nLearn how to use Jetpack Navigation Components to help create a navigation structure in your Compose app\nLearn how to use Dependency Injection with Hilt and Dagger to build easy-to-refactor and test apps\nBuild a capstone app (A.Reader) that uses Firebase Firestore to Authenticate Users and save books\nAnd so much more (check out the curriculum to get the complete list of topics!)\nBy the end of the course, you’ll have learned everything you need to know about Kotlin and Jetpack Compose to build complex Native UIs and Android apps with Jetpack Compose.\n\n\nTry It Risk-Free\nThis course comes with a 30-day money-back guarantee - if you find out it’s not for you, you can get your money back, no questions asked!\nGo ahead and enroll today and start building Modern Android apps with Jetpack Compose - the new way of building fast, concise, and powerful Android Native UI.\nI can’t wait to see you in the course!\n\n\nSee you soon.\n\n\nPaulo :)",
      "target_audience": [
        "Beginner Android developers",
        "Android Developers curious about building modern android apps using Jetpack Compose and Kotlin",
        "Android Developers who want to learn Kotlin and build Android apps with Jetpack Compose",
        "Anyone who wants to Learn Java and Android Development"
      ]
    },
    {
      "title": "Swift from scratch - learn programming on iOS",
      "url": "https://www.udemy.com/course/swift-from-scratch-learn-programming-on-ios/",
      "bio": "Learn the basics of new language! Create fast, safe and interactive apps with no programming experience!",
      "objectives": [
        "The Swift syntax",
        "Basic programming techniques and constructions",
        "Key elements of the language",
        "Work in Xcode",
        "Build your first application using Swift"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Theoretical bases of Swift language": [
          "Variables, constants, and types of data",
          "Operations on string and characters",
          "Sets - arrays and dictionaries",
          "Loops",
          "Conditional statements",
          "Functions",
          "Clousers",
          "Classes and inheriting",
          "Structures",
          "Enumerated and generic tzpes",
          "Extensions",
          "Additional notes - swift language construction"
        ],
        "Building the application": [
          "Tip calculator part 1",
          "Tip calculator part 2",
          "Tip calculator part 3"
        ],
        "Bonus section": [
          "Thank you for joining"
        ]
      },
      "requirements": [
        "Xcode environment"
      ],
      "description": "LAST UPDATED: 11/2020\nFast, safe and interactive programming – this is new language from Apple!\nSwift is very friendly to people who have no prior experience with programming.\nThe new language is much simpler than Objective-C and it's recommended for novice developers due to the simplified structure of the code, the possibility of making corrections on graphic charts and testing projects in the real time.\nApplications developed using the Swift are faster, safer and code is much more clear.\nWe will walk you through everything you need to start making apps in Swift. You will learn the swift syntax, basic programming techniques and constructions. You will discover key elements of the new language.\nBut… to learn to code – you have to code… And because of that after theoretical part using Xcode environment you will create from scratch a fully-featured application. In this way, beginners an easy way to learn to programming on the latest mobile devices from Apple",
      "target_audience": [
        "For experienced developers who know Objective - C",
        "For beginner programmers"
      ]
    },
    {
      "title": "To-Do App & Clean Architecture -Android Development - Kotlin",
      "url": "https://www.udemy.com/course/to-do-app-clean-architecture-android-development-kotlin/",
      "bio": "Develop a Fully Functional To-Do app in Kotlin - ROOM, Navigation Component, LiveData, ViewModel, Data Binding and more.",
      "objectives": [
        "Develop ToDo App with Kotlin",
        "Navigation Component",
        "Safe args",
        "Transition Animation",
        "ROOM Database",
        "CRUD operations",
        "Data binding",
        "Binding adapters",
        "RecyclerView",
        "Search database in RecyclerView",
        "Sort database in RecyclerView",
        "RecyclerView Animation",
        "LiveData",
        "ViewModel",
        "Repository",
        "Swipe to delete",
        "Undo - restore deleted data",
        "DiffUtil",
        "Linear, Grid, Staggered Layout in RecyclerView",
        "Develop fully functional app",
        "Clean Architecture"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "All Dependencies for our Project",
          "To-Do Application Preview",
          "IMPORTANT NOTICE!"
        ],
        "Navigation Component": [
          "Introducing with Navigation Component",
          "Create Navigation Graph",
          "Design ListFragment Layout",
          "Design AddFragment Layout",
          "Design UpdateFragment Layout",
          "Create Menu for ListFragment",
          "Create Menu for AddFragment",
          "Create Menu for UpdateFragment",
          "Introducing with Transition Animations",
          "Implement Transition Animation between Fragments",
          "Quiz"
        ],
        "ROOM Database": [
          "Introducing with ROOM library",
          "Create Priority - Model class",
          "Create Entity (ToDoData) - Model class",
          "Create Dao (ToDoDao)",
          "Create Database (ToDoDatabase)",
          "Create Type Converter (Converter)",
          "Create Repository (ToDoRepository)",
          "Create ViewModel (ToDoViewModel)",
          "Insert Data to Database",
          "DB Browser for SQLite",
          "Create Shared ViewModel (SharedViewModel)",
          "Apply Color to Spinner Enteries",
          "Design Row Layout for Recyclerview",
          "Create RecyclerView Adapter (ListAdapter)",
          "Display Data in Recyclerview",
          "Safe Args - Pass ToDoData object to UpdateFragment",
          "Update Selected Item",
          "Delete Single Item from Database",
          "Delete Everything from Database",
          "Show no_data Views if Database Empty",
          "Quiz"
        ],
        "Data Binding": [
          "Introducing with Data Binding library",
          "Data Binding for ListFragment",
          "Data Binding for UpdateFragment",
          "Data Binding for ListAdapter",
          "Quiz"
        ],
        "Swipe to Delete": [
          "Add ItemTouchHelper Callbacks",
          "Undo - Restore Deleted Item"
        ],
        "DiffUtil in RecyclerView": [
          "Implement DiffUtil"
        ],
        "Animate RecyclerView": [
          "Add Animation to RecyclerView"
        ],
        "Search the Database": [
          "Search Data and Display Results in RecyclerView"
        ],
        "Sort Data in RecyclerView": [
          "Sort by HIGH & LOW Priority"
        ],
        "Apply Different Layout on RecyclerView": [
          "Apply Grid & Staggered Grid Layout"
        ]
      },
      "requirements": [
        "Basic knowledge about Android Development",
        "Basic knowledge about Android Architecture Components",
        "This course is NOT for Absolute Beginners"
      ],
      "description": "So this course will be a little different from my previous ones, because in this course we are going to build a fully functional To-Do application. We are going to build our app using Kotlin programming language, and you'll see all the benefits and power of concise way of programming with Kotlin. Our To-Do app will combine different android architecture components like Navigation Component, ROOM database, LiveData, ViewModel, Data Binding and more...\n\n\nYou will learn how to follow the principle of single activity and multiple fragments in your app. You will learn how to use Navigation Component in your app, how to work with Safe Args to pass data between fragments, and also create custom made Transition Animations for your destinations.\nSo why is a To-Do app important, well first and foremost because it teaches you how to build and maintain a database, how to write SQL queries to insert, update, delete data from database, but also how to write custom queries to search through Database, Sort your database by certain criteria and display it in proper way to your RecyclerView.\nAlso we are going to have a clean architecture in our project, you will learn how to organize your project structure and maintain good code readability.\n\n\nAt the later section of this course I'm going to teach you how to implement data binding to your app, and you'll see all the benefits of using it, because we are going to have less boilerplate codes in our app, plus everything will be separated, and our fragments will look a lot cleaner and simple. You will also be introduced with custom BindingAdapters.\nAt the end of this course we will implement swipe to delete function to our RecyclerView, also I'll show you how to easily change RecyclerViewlayout, apply a different look to your app with Grid and Staggered Grid layout as well. And when we are talking about RecyclerView, I should also mention that we will implement DiffUtil in our app and that way, increase overall app performance.\nAlso I need to mention that this course is NOT for ABSOLUTE beginners in android development. Because this course assumes that you already have a basic knowledge of programming in Kotlin, and a basic knowledge of android architecture components.\nBut if you wish to continue improving your skills and building your knowledge furthermore then this course is definitely the right option for you.",
      "target_audience": [
        "Android Developers",
        "Android Developers - Kotlin",
        "Anyone who want to learn more about developing fully functional Application"
      ]
    },
    {
      "title": "Mobile App Development for Beginners (Swift 3, iPhone iOS10)",
      "url": "https://www.udemy.com/course/make-me-an-iphone-app-developer-beginner-series/",
      "bio": "iPhone (iOS 10) app development. The complete development course. Use Swift 3 & Xcode 8 to design 10 iPhone apps.",
      "objectives": [
        "After completing this course, you'll be able to call yourself an iOS developer",
        "You'll be able to create your own apps.",
        "You'll be able to work as a freelance app developer (on small projects)."
      ],
      "course_content": {
        "Introduction and Preparation": [
          "Course Introduction - Why you should take this course",
          "Introduction to Florist App",
          "Download Xcode from the App Store",
          "Things you need to follow along",
          "How to follow along and some useful tips",
          "About Me"
        ],
        "Introduction to iOS Development - The Basics": [
          "Launching Xcode for the first time",
          "How to change Xcode settings",
          "Quick Xcode Tour",
          "Add background image and duplicating view controllers",
          "Introduction to UILabels",
          "Introduction to UIButtons",
          "How to use Xcode Preview",
          "Introduction to UITextView and how to set the initial View Controller",
          "Adding missing constraints to views automatically",
          "Adding layout constraints manually to views",
          "Auto Layout errors",
          "Editing layout constraints and how to reset frames",
          "Introduction to Stack View",
          "Toggle between software and hardware keyboard on the simulator",
          "Introduction to segue",
          "Adding a UINavigationController to our app",
          "Clip the image view for smooth segue transition",
          "Customising the UINavigation bar",
          "Adding title to the UINavigation bar (hack)",
          "Changing the tint color of barbutton item and back button",
          "How to change back button text and how to have no back button text",
          "UINavigation Controller push segue error",
          "Introduction to Launch Screen Storyboard",
          "Introduction to plist.info and how to make app exit on suspend",
          "How to change view controller status bar color",
          "How to hide the status bar",
          "Using Flaticon.com to download icons for our app",
          "Creating icon on Canva.com",
          "App icon sizes and Asset catalog creator tool",
          "Adding icon to iOS app",
          "Resolving build time issues in the app",
          "How to debug View Hierarchy",
          "Memory usage basics",
          "How to simulate memory warnings",
          "Introduction to App delegates File",
          "Understanding ViewDidLoad and ViewWillAppear",
          "Apple documentation class reference",
          "Coordinate system in ios",
          "Adding UILabel to the app programmatically",
          "Programmatically adding UIImageView and accessing class reference from Xcode",
          "Creating IBOutlets and reference***",
          "Creating View Controller Swift file for other scenes",
          "Creating IBActions for UIButton click events",
          "IBOutlet connection error and how to recover",
          "Dynamically changing properties through button actions",
          "ViewWillAppear vs ViewDidLoad"
        ],
        "Introduction to Swift 3.0 - Part 1- The Basics": [
          "Introduction to playground",
          "Constants and variables",
          "Introduction to Data Types",
          "Introduction to String Data Type",
          "Introduction to Int data Type",
          "Introduction to Float and Double Type",
          "Introduction to Boolean Data Type",
          "String interpolation",
          "String interpolation continued...",
          "Good naming conventions to follow",
          "Arithmetic operators",
          "Integer division and possible errors",
          "Remainder operator",
          "Compound assignment operators",
          "Comparison operator",
          "Comparison operator - checking for equality",
          "NOT operator",
          "How to find out the data types of variables",
          "Type Casting",
          "Problem Solution 1 - Swap variables",
          "Problem Solution 2 - Area and perimeter",
          "Problem Solution 3 - Calculate Percentage",
          "Problem Solution 4 - Last digits of a number",
          "Introduction to If statements",
          "Else branch",
          "Nested if statement",
          "Else...if statements",
          "Problem and Solution: Maximum of two numbers",
          "Problem and Solution: Even or odd number",
          "Problem and Solution: Divisibilty calculations",
          "Logical AND operator",
          "Logical OR operator",
          "Problem Solution: Class marks",
          "Problem Solution: Divisibility revisited",
          "Ternary conditional operator",
          "Switch statements",
          "Switch case - matching multiple values",
          "Switch range matching",
          "Switch break statement",
          "Fallthrough statement",
          "Introduction to Swift Array",
          "Reading values from array",
          "Getting multiple values using closed range",
          "Array type and Any type",
          "Merging two arrays",
          "Adding values to existing array",
          "Removing values from arrays",
          "Modifying values in arrays",
          "Mutable and immutable array",
          "Copying value from one array to another - reference and value types",
          "Introduction to Dictionary",
          "Retrieving values from Dictionary",
          "Adding a new key-value pair to a dictionary",
          "Updating value in a dictionary",
          "Removing items from dictionary",
          "Other dictionary methods",
          "Introduction to For Loop",
          "Using value of \"i\" in a loop and the underscore variable",
          "Looping through arrays",
          "Looping over dictionaries",
          "Problem and Solution: Maximum value in an array",
          "Problem and Solution: Separate numbers into odd and even",
          "Problem and Solution: Sum the content of an array",
          "Problem and Solution: Reversed array",
          "Inner loops",
          "Break statement",
          "Continue statement",
          "Introduction to While Loop",
          "Beware of an infinite loop",
          "Repeat while loop",
          "Repeat while loop example",
          "Problem and Solution: Separate numbers to array - while loop example",
          "Introduction to Function",
          "Function parameters",
          "Multiple parameters of a function",
          "Returning values from functions",
          "Calling a function from another function",
          "Parameter as a let constant",
          "Introduction to Optionals",
          "Introduction to Optionals contd...",
          "Returning nil from a function",
          "How to work with optional values",
          "Unwrapping optional values",
          "Force unwrap optional types",
          "Implicitly unwrapped Optionals",
          "Nil coalescing operator",
          "Multiple optional binding - unwrapping multiple optionals",
          "Optional Chaining",
          "Variable scopes"
        ],
        "Introduction to Storyboard, Segue and UINavigationController": [
          "Introduction to Bill Splitter app",
          "Designing the BillSplitter app UI",
          "Setting up the IBOutlets and IBActions for BillSplitter app",
          "Obtaining user inputs from UITextFields",
          "Cleaning up the calculation code and displaying result",
          "Dismissing the keyboard",
          "Formatting string for currency",
          "Setting up the result View Controller",
          "Using PrepareForSegue to send value to next screen",
          "Using the ShouldPerformSegue method",
          "Dismissing a view controller",
          "Unwind segue",
          "Calling segue programmatically",
          "Using segue identifier to choose the right segue",
          "Presenting view controller by code",
          "Using code snippets",
          "How to pop view controllers",
          "Separating scenes into multiple storyboard",
          "Manually referencing other storyboards ****",
          "Sending value to a view controller inside a UINavigationController"
        ],
        "Introduction to UITabBarController, Segmented Control, Switch and UserDefaults": [
          "Introduction to MyQuotes App",
          "Designing the UI of MyQuotes app",
          "Implementing the forward and back buttons",
          "Alternative method without using a for loop",
          "Implementing the favorite feature",
          "Changing the app theme",
          "Changing the theme colours",
          "Persisting the theme for future launches",
          "Adding borders to the UIImageViews",
          "Changing borders of UIButtons and adding corner radius",
          "Change the tab bar appearance"
        ],
        "Introduction to using Plist file, and using Custom Classes": [
          "Introduction to the workout app",
          "Designing the UI of the app",
          "UI Design continued...",
          "Adding a plist file to the app",
          "Reading the content of Plist",
          "How to create a custom class",
          "Using tags, class type and subview properties to customise views",
          "Dynamically updating title from plist",
          "Sending data to the details screen",
          "Design the details screen using tags to get view objects",
          "Change navigation bar color",
          "Using a constant file",
          "Using the app delegate to call functions from any view controller"
        ],
        "Introduction to TableViewController with default cell": [
          "Introduction to the MiniTasks app",
          "Setting up the UI for Minitask app",
          "Setting up the UIPickerView datasource and delegates",
          "Setting up the DidSelectRow on UIPickerView",
          "Implementing DatePickerView and DateFormatter",
          "Minimum date of UIDatePicker and adding values to array",
          "Introduction to UITableView",
          "Using the CellForRow method, displaying dates and numbering of data",
          "Final UI design"
        ],
        "Introduction to UITableView object with custom cell": [
          "Introduction to FaveCar app",
          "Designing the UI of FaveCar app",
          "Subclassing UITableViewController",
          "Dismissing the keyboard using UITextfield delegate",
          "Characters count using UITextfield delegate",
          "Getting access to your photo library",
          "Importing photo using didFinishPickingMedia method",
          "Validating user inputs to make sure image and name are available before saving",
          "Using tags to configure cell",
          "Pop view controller and add items to top of the list",
          "Convenient method to load values",
          "Using a custom UITableViewCell",
          "Deleting data from the UITableView",
          "UITableView didSelectRow to perform segue and using cell segue to another VC",
          "Obtaining indexPath inside PrepareForSegue"
        ],
        "Introduction to UICollectionView": [
          "Introduction to Travelpics app",
          "Setting up the UI of the TravelPics app",
          "Displaying data in UICollectionView",
          "How to launch a camera",
          "How to use UIAlertAction",
          "Sizing the UICollectionViewCell",
          "Prepare for segue in UICollectionView",
          "How to zoom on images"
        ],
        "Swift Part 2 - Object Oriented Programming": [
          "Introduction to Tuples",
          "Shorthand for multiple declaration of constants and variables",
          "Checking for Tuples Equality",
          "Changing the value of a Tuple",
          "Tuples are value types",
          "Tuples quick example",
          "Introduction to enumerations",
          "Enumeration shorthand",
          "Introduction to Structs",
          "Struct default values",
          "Struct functions",
          "Changing the value of stored properties using var instead of let",
          "Restricting the ability to change a stored property value by using a let",
          "Allowing instance methods to change stored properties values",
          "Structs are values types",
          "Struct example with an enum",
          "Making a shadow copy",
          "Introduction to Classes",
          "Class functions - instance methods",
          "Type methods",
          "Class init method",
          "Introduction to Inheritance",
          "Inheritance example",
          "Adding new properties to a subclass",
          "More on class hierarchy",
          "Static property of a class",
          "Calling the super method in subclass",
          "Static and instance property and class and instance methods gotchas",
          "Computed properties",
          "Computed property example",
          "Class Extensions",
          "Extending the Double class",
          "Access control on properties",
          "Setter and getters on stored properties",
          "Property observers",
          "OldValue and NewValue in DidSet and WillSet"
        ]
      },
      "requirements": [
        "You must own a Mac (MacBook, iMac, Mac Mini, etc.) capable of running Xcode.",
        "You should be familiar with how to use a Mac.",
        "You should have a strong desire to learn programming."
      ],
      "description": "Looking for an app development course that doesn't confuse you? This course is designed to teach you how to build 10+ iPhone apps (using Swift 3 and Xcode 8) with easy step-by-step instructions.\n\nBecome an app developer!\n\nThis course will give you the basic skills needed to call yourself an app developer. Whether you need to start creating apps for you job or you want to earn money as a freelance developer, this course will get you started designing and building your own apps.\n\nIn this course, you will develop 10 beautiful, professional quality apps.\n\nYou don't need any previous programming skills. You simply need a desire to learn how to develop apps and a Mac computer.\n\nThe course is app-based, which means you will build a complete and professional app step-by-step during each section of the course. No other course teaches you this same way.\n\nBy the end of the course, you'll be able to:\n1. Design and build 10 real apps.\n2. Call yourself an app developer.\n3. Create your own apps worthy of publishing to the app store.\n\nBelow is a summary of just some of the things you will learn:\n\n1.    How to use popular objects like UILabel, UIButton, UITextField, UITextView, UIImageView, etc.\n\n2.    How to use Auto Layout to design the perfect User Interface for all devices.\n\n3.    Introduction to Stack View and how it works with Auto Layout.\n\n4.    UINavigationController and its properties.\n\n5.    Segue and sending data to other screens.\n\n6.    How to add and customize app Launch screen.\n\n7.    How to create multiple-sized icons and how to add icons to apps.\n\n8.    How to resolve build-time issues and run-time errors.\n\n9.    How to debug view hierarchy.\n\n10.    How to deal with memory issues and what they mean for your app.\n\n11.    Understanding app delegates and their methods.\n\n12.    Understanding the differences between ViewDidLoad and ViewWillAppear.\n\n13.    How to read Apple API documentation and Class references.\n\n14.    How the coordinate system works on iOS.\n\n15.    How to create IBOutlets and IBAction for objects.\n\n16.    Introduction to Swift 3.0 basics like data types, operators, “if...else” statements, switch statements, arrays, dictionaries, etc.\n\n17.    Different ways to dismiss the keyboard.\n\n18.    Using multiple storyboards in your Xcode projects.\n\n19.    How to pop or dismiss a view controller.\n\n20.    Using UITabBarController.\n\n21.    How to use UISegmented Control and UISwitch.\n\n22.    How to use Userdefaults to save small data.\n\n23.    How to read from the Plist file.\n\n24.    How to create and work with custom classes in your projects.\n\n25.    Using tags to identify objects in your view.\n\n26.    How to use constant file to manage your app data.\n\n27.    Using app delegate to call functions from other view controllers.\n\n28.    How to use UIPickerView and UIDatePicker.\n\n29.    How to work with UITableViewController and UITableView Object.\n\n30.    How to import photos from your photo library.\n\n31.    How to access the iPhone camera to take pictures.\n\n32.    How to work with UICollectionViewController.\n\n33.    How to display interactive alerts with UIAlertControllers.\n\n34.    Object-Oriented Programming concepts such as Structs, Enumerations, Classes, Inheritance, Extensions, etc.\n\n35.    Saving with NSCoding.\n\n36.    How to record and play audio in apps.\n\n37.    How to use a timer to display countdowns.\n\n38.    How to play videos in a custom-sized view.\n\n39.    How to display user locations on a map.\n\n40.    How to search a map for popular locations.\n\n41.    How to display rich local notifications to users with videos and images.\n\n42.    How to share with SMS, Email, Facebook, Twitter, etc.\n\n43.    How to use SFSafariViewController to display web content in your app.\n\nYou'll learn how to become an app developer with easy-to-follow, step-by-step instruction.\n\nI'm always here to answer questions as you go in the class discussion boards or through direct messaging.\n\nMy goal is to make you an app developer.  Please enjoy some of the Free preview lectures to get you started or click the Take This Course button and join the course today.",
      "target_audience": [
        "Any beginner who wants to build their own app.",
        "Someone new to iOS app development.",
        "Any beginner with a strong desire to learn programming on the Apple iOS platform."
      ]
    },
    {
      "title": "The Best React Native Course 2025 (From Beginner To Expert)",
      "url": "https://www.udemy.com/course/the-best-react-native-course/",
      "bio": "Build Native iOS and Android Apps: Redux Toolkit, Redux, Navigation, Authentication, Localization, Forms, Firebase AI.",
      "objectives": [
        "Learn how to use ReactJS to build react native mobile apps for iOS and Android. No ReactJS Experience Required.",
        "Develop cross-platform (iOS and Android) mobile apps without knowing Swift, ObjectiveC or Java/ Android",
        "Explore React Native basics and advanced features!",
        "Learn React Basics, React Native Fundamentals, Navigation, Redux & Redux Toolkit",
        "Learn Expo & React Native CLI: Understand both development approaches.",
        "Learn Layout & Styling: Build stunning, responsive UIs.",
        "Learn Redux & Redux Toolkit: Manage global state like a pro.",
        "Learn Localization and make your app support multi languages.",
        "Learn how to integrate with the Backend, And working with APIs",
        "Learn how to integrate and use Firebase and the amazing services that provide.",
        "Learn Authentication & Authorisations and Local Storage.",
        "Learn how to use Native Libraries with React Native CLI"
      ],
      "course_content": {
        "Getting Started": [
          "Course prerequisites",
          "What is React Native",
          "Expo vs React Native",
          "Introduction to Expo Snack",
          "Set up environment",
          "Create Your First App",
          "iOS Simulator (MacOS)",
          "Run App on Real Device",
          "Android Emulator (MacOS)",
          "Setup Environment Windows"
        ],
        "UI & Core Components": [
          "Explain Init Code",
          "SafeAreaView",
          "Text",
          "StyleSheet",
          "Images",
          "Buttons & Pressable & Touchable",
          "ScrollView",
          "Platfrom",
          "Loaders",
          "Views",
          "Margin & Padding",
          "Flex",
          "flex-direction",
          "flexWrap",
          "Positions",
          "Dimensions",
          "Responsive UI",
          "useState Hook",
          "Modal",
          "Expo Icons",
          "ImageBackground",
          "TextInput",
          "Create React Component"
        ],
        "UI Mastering Practice": [
          "UI Mastring Introduction",
          "Figma Design",
          "PNG vs SVG",
          "Intro Screen",
          "User Avatar",
          "Header Component",
          "Social Section",
          "Social Container",
          "Finish Contact Us Screen",
          "Home Screen Header",
          "Top Tabs",
          "Card Component with Dark Overlay",
          "FlatList with 2 Rows",
          "FlatList with Props",
          "Payment Screen Header",
          "Payment Method",
          "Payment Method Selected",
          "Payment List",
          "Bank Card Box",
          "Add Button",
          "Adding Animations",
          "Task Time",
          "Source Code in This Section"
        ],
        "Navigation & Bottom Tabs": [
          "Builds Screens",
          "Stack Navigation",
          "Recap & Screen Options",
          "useRoute",
          "BottomTabs"
        ],
        "Working with APIs": [
          "Create New App",
          "Create Custom API ( Mock Api )",
          "Axios",
          "Get Request & FlatList",
          "Get By Id Request",
          "Try Catch",
          "Delete Request",
          "Post Request",
          "Put Request",
          "Refactor And Create Home Screen For New Project",
          "Book Card",
          "Props",
          "APIs Functions",
          "Render Data In Flatlist",
          "Delete Book",
          "Add Button UI & Modal",
          "CustomTextInput",
          "Save Button",
          "Create Book",
          "Edit Book",
          "Bug Fix"
        ],
        "Redux & Redux Toolkit": [
          "Redux is not that hard",
          "Why Redux Useful",
          "Reducer Explained",
          "Create Store and Get Data From Global State",
          "actions & useDispatch",
          "Payload",
          "Combine Reducers",
          "RootState",
          "Recap Redux & Task",
          "Redux toolkit Store",
          "Redux Toolkit Reducer & Actions"
        ],
        "Smart E-Commerce App UI | Part 1": [
          "Create Project",
          "Folder Structure",
          "AppText",
          "App Colors",
          "AppSafeView",
          "Flash Message",
          "AppButton",
          "AppTextInput",
          "Sign In Screen",
          "Sign Up Screen",
          "Stack Navigation",
          "Bottom Tabs & Main App Stack",
          "Style Bottom Tabs",
          "App Header",
          "App Custom Fonts",
          "Prepare Data",
          "Product Card",
          "Add To Cart Button",
          "Shadow",
          "Props",
          "Render Data in FlatList",
          "Empty Cart Component",
          "Cart Item",
          "Increase Decrease Buttons",
          "Cart Item Props",
          "Totals View",
          "Cart Screen",
          "Checkout Screen",
          "Profile Screen",
          "My Orders Screen"
        ],
        "Cart State Management (Redux Toolkit)": [
          "Create Store",
          "cartSlice",
          "Add Item To Cart",
          "Remove Item From Cart",
          "Delete Product",
          "Finish Cart Screen"
        ],
        "Forms Handling": [
          "Handling Forms using useState",
          "AppTextInputCotroller",
          "Style Error Message",
          "Yup & Validation Schemas",
          "Add Typescript",
          "Auth Validation Task"
        ],
        "Authentication & Firebase Database": [
          "Firebase Init",
          "Sign in users",
          "Handling Errors",
          "Register new users",
          "Firestore Database",
          "Get data from database",
          "Save User Data In Global State",
          "Place Orders",
          "Fix redux warning & duplicate orders",
          "Get users order",
          "Handling orders date"
        ]
      },
      "requirements": [
        "All you need is basic understanding of Javascript. And we have Javascript section in this course",
        "NO Android/ Java or iOS (Swift, ObjectiveC) development experience is required"
      ],
      "description": "React Native Mastery: Build Real Apps with Expo & CLI\nAre you ready to become a React Native developer? This comprehensive course will take you from beginner to advanced, covering everything you need to build real-world mobile applications using React Native.\n\n\nWhat You’ll Learn:\nLocalization: Make your app multilingual and accessible.\nExpo & React Native CLI: Understand both development approaches.\nLayout & Styling: Build stunning, responsive UIs.\nNetworking with axios: Fetch and manage API data efficiently.\nBottom Tabs & Navigation: Implement seamless app navigation.\nFirebase Integration: Authentication, Firestore, and real-time data.\nRedux & Redux Toolkit: Manage global state like a pro.\nBuild AI Chat App Like ChatGPT\n\n\n\n\nHands-On Projects:\nYou'll build multiple real-world applications, including:\nBook Store App – Manage books, categories, and user interactions.\nE-commerce App – Full-featured online shopping experience.\nAI-Chat App – Chat bot like chatGPT.\n\n\nExtra:\nExtra JavaScript course to strengthen your core JS skills.\nNo previous programming experience is needed to take this course. Whether you're a complete beginner or looking to enhance your mobile development skills, this course will guide you every step of the way.\n\n\nBy the end of this course, you'll have the skills and confidence to build and deploy fully functional React Native apps.\nSo if you want to land your first job, Enroll now and start your journey as a React Native developer!",
      "target_audience": [
        "This course is designed for beginner programmers who have little to no experience in coding but are familiar with JavaScript & Typescript.."
      ]
    },
    {
      "title": "Advanced Android - Architecture with Dagger 2 and more",
      "url": "https://www.udemy.com/course/advanced-android/",
      "bio": "Learn to build production-grade Android apps, not just make them \"work\"",
      "objectives": [
        "Build an Android app with an easy to maintain and testable architecture. (Hint: Not everything belongs in Activities/Fragments!)",
        "Setup a project with dependency injection using Dagger 2.",
        "Understand RxJava and how to architect Android applications with Reactive Programming in mind.",
        "Use Reactive View Models to make unit testing UI possible and make handling view state more straightforward.",
        "Use mock data to be able to run and test your app without needing network access",
        "Use Dagger 2 to swap test versions of your dependencies during Espresso/UI tests"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Contact Info"
        ],
        "Creating the project": [
          "Starting the new project",
          "Project Files"
        ],
        "Setting up Dagger": [
          "Dagger Setup Notice",
          "Creating the Application Scope",
          "Creating the Activity Scope",
          "Dagger Multibindings Explanation",
          "Activity Injector",
          "Screen Injector Part 1",
          "Screen Injector Part 2",
          "Following the Dagger Flow",
          "Dagger Quiz 1",
          "Project Files"
        ],
        "Our First Screen": [
          "Creating the ScreenNavigator",
          "Creating the models",
          "Informational: AutoValue",
          "Why do we use AutoValue?",
          "Adding our networking framework",
          "Informational: RxJava",
          "Informational: RxJava Introduction",
          "Informational: RxJava Operators",
          "Informational: RxJava Marble Diagrams",
          "Informational: RxJava Types",
          "Trending Repos Presenter and View Model",
          "Finally, showing something on screen!",
          "Informational: Dagger check-up",
          "Project Files"
        ],
        "Unit Testing": [
          "Intro and setting up Mockito",
          "Mock Data and View Model Unit Tests",
          "Presenter Unit Tests",
          "Project Files"
        ],
        "UI Testing with Espresso": [
          "Setting up the UI Testing Framework",
          "Note: UI Framework",
          "Our first UI Tests",
          "UI Test Summary",
          "Project Files"
        ],
        "Handling Screen Navigation and using a Repository": [
          "New Screen Introduction",
          "Using BindsInstance in Component Builders",
          "Using a Repository",
          "Testing Checkup",
          "Repository Unit Test",
          "Repo Details View Model",
          "Repo Details View Model Unit Tests",
          "Repo Details Presenter",
          "Repo Details Presenter Unit Tests",
          "Injecting Schedulers (Repository Unit Tests Revisit)",
          "Navigating to Repo Details",
          "Creating the Contributor Adapter",
          "Finishing the Repo Details Controller",
          "Project Files"
        ],
        "More UI Testing Tricks": [
          "Enhancing our UI Testing Framework",
          "Enhancing the Test Repo Service",
          "Using a test \"robot\"",
          "Adding the Repo Details tests",
          "Project Files"
        ],
        "Gradle Tasks": [
          "Creating a simple Gradle Task",
          "Project Files"
        ],
        "Debug Drawer and Live Mock Responses": [
          "Adding a Debug Drawer",
          "Debug Drawer in app that has a Navigation Drawer",
          "Adding an Interceptor",
          "Project Files"
        ]
      },
      "requirements": [
        "Intermediate Android development experience",
        "Development environment capable of running Android Studio (Windows/Linux/Mac)"
      ],
      "description": "Hello everyone and thank you for your interest in Advanced Android!\nAndroid development has a lot of great benefits, such as low barrier to entry, low cost to be a published developer, and of course, being able to run your creations on millions of devices.\nDeveloping a maintainable and testable application that is easy to add new features to can be difficult. It requires thinking ahead about the architecture of your application and getting beyond the “just make it work” stage. This is something I personally find the most fun about development, however. My goal is to help you get into the same mindset and teach you about architecture patterns that will accomplish the previously mentioned items.\nThis course is an intermediate course, so familiarity with the Android development process will help greatly. It will move quickly, but advanced concepts will be explained thoroughly. That said, we will be building an application from the very beginning, so by following along, no matter what your skill level, you will be able to complete this course and have a fully functioning Android app with the kind of architecture that you would hope to see in an enterprise level project. That’s not to say that all companies have applications with great architecture (if only we developers could be so lucky), but after this course you will be able to identify if a project doesn’t—and have an idea on how to fix it!\nHere are some of the things you will learn in this course:\nDependency Injection with Dagger 2\nMaking network requests with Retrofit\nUnit testing with Junit and Mockito\nUsing test doubles in Espresso tests with Dagger 2\nMVP / MVVM architecture (yes, a mixture! Read below for details) using Reactive View Models\nIn regards to the MVP / MVVM architecture point:\nThe classic software architecture patterns are baseline frameworks attempting to describe how layers of your software communicate with each other. It is important to remember that forming the patterns to what works best for you is the key; as long as you follow basic software architecture principles, any architecture is a good architecture! In this course you will learn how using Reactive View Models with Presenters can help you separate responsibilities and make your application much easier to test.\nWith all that said I’m excited to get started showing you how to create applications that will make your life, and those of the developers following you, easier and more enjoyable!",
      "target_audience": [
        "Anyone who wants to learn how to create apps with an easy to maintain, testable architecture.",
        "Android developers looking to learn more advanced techniques.",
        "Android developers interested in dependency injection and why it's so popular.",
        "Android developers wanting to understand RxJava, and Reactive Programming in general."
      ]
    },
    {
      "title": "Advance Android Programming - learning beyond basics",
      "url": "https://www.udemy.com/course/advance-android-programming-by-9i-technologies/",
      "bio": "Learn to save preferences using Preferences and saving data to Files in Android, Using ActionBar and more advance topics",
      "objectives": [
        "Saving User Preferences in Android and File I/O"
      ],
      "course_content": {
        "Social Integration": [
          "Getting started with Facebook - Setting up the Environment",
          "Login with Facebook - using Facebook login Button",
          "Get User information from Facebook",
          "Getting Friends Data from Facebook",
          "Login to Facebook with your own UI",
          "Sharing Feed on Timeline - Using Facebook Feed Dialog",
          "Sharing Content with WhatsApp",
          "Sending Whatsapp message to single Number",
          "Integrating Twitter in your Android App - the steps you need to take",
          "Setting up the basics for Twitter Login",
          "Continuing with Twitter Login - getting the pieces together",
          "Twitter Login - the final chapter",
          "Uploading status on Twitter",
          "Code example"
        ],
        "Saving State with Preferences": [
          "INTRODUCTION TO PREFERENCES",
          "Creating a Preference Screen and Saving Preferences",
          "Adding Sub - Preference Screen",
          "Editing Preference Values",
          "Creating Preferences Files",
          "Adding Preferences through Forms",
          "Preference Dependency",
          "Preference Listener",
          "Setting Default Values in Preferences",
          "List Preference",
          "Using Preferences with Fragments",
          "Preference Headers",
          "Preference Headers - Continued",
          "Summary on Using Preferences"
        ],
        "Saving State with File I/o": [
          "I/O using File - Internal File System",
          "I/O using Files - Continued",
          "I/O using Files - Files on SDCard"
        ],
        "I/O Using Resource Folders": [
          "Reading files from the Assets Folder",
          "Reading files from the Assets Folder - contined",
          "Reading from the RAW Folder"
        ],
        "Working with Genymotion - Get the power of the real mobile": [
          "Installing the Android 5.0 SDK to start things",
          "Installing Android Studio - gearing for the future",
          "Installing Genymotion and adding to Android Studio",
          "Installing Google Play Services on Genymotion"
        ],
        "ActionBar - where all action begins": [
          "Creating Menus and MenuItems - learn the old way",
          "Creating my first ActionBar - Adding Icons, Titles,Drawables,styles to it",
          "Creating Split ActionBar and more ...",
          "Creating SubMenu by Java Code and Using Intents with MenuItems",
          "Using addIntentOptions to let Android find Options",
          "Creating Menus by xml Code",
          "Using Checkable MenuItems and Groups",
          "Handling clicks on MenuItems - all approaches covered",
          "Using Fragments with MenuItems",
          "ActionBar with Tabs - Now you got Choices",
          "Adding ViewPager to Tabs - Just Swipe your Choices",
          "Adding Navigation Drawer - navigation is just a click away",
          "Adding Dual Navigation Drawer to a Activity"
        ],
        "Using AQuery - all you can do without much coding": [
          "Using AQuery - a library you would love to use",
          "Using Images with AQuery",
          "Contacting a Web Service with AQuery",
          "Practical App to get Data from Google Places with AQuery JSon",
          "Posting updates to Web Services with AQuery",
          "Uploading Text and Images to Web Services with AQuery",
          "Code"
        ],
        "SERVICES - THE BACKGROUND OF ALL ACTIVITIES": [
          "BASICS OF SERVICES - WHAT THEY ARE AND WHY TO USE THEM",
          "LifeCycle of a Service",
          "Learning about Local Services",
          "RUNNING A PRACTICAL DEMO OF A SERVICE",
          "IntentService - a ready to use Service",
          "Communicating between a Service and Activity",
          "Using bindService to Bind to a Service - Writing the Service Code",
          "Using bindService to Bind to a Service - Writing the Activity Code",
          "Using AIDL - when things are not in same process",
          "Using AIDL - binding all the code",
          "Communicating with Service using Callbacks",
          "Code",
          "Running Service in the Foreground"
        ],
        "Google Cloud Messaging - now user is just a click away": [
          "Learn the basics of GCM",
          "Setting up for GCM",
          "Registering device for GCM Notifications",
          "Registering device for GCM Notifications - final chapter",
          "Code"
        ],
        "Location ,Location, Location - how to work with Fused Location provider": [
          "Basics of Location Handling",
          "Fused Location Provider - how it works",
          "Setting up for Location Services - get started",
          "Where am I - writing the code",
          "Where am I - the final part"
        ]
      },
      "requirements": [
        "Basic Android Programming"
      ],
      "description": "The Course is about Advance Topics in Android Development covering Saving User Preferences in Android using Preferences ,Reading and Writing Data to Files in Android ( Internal and SdCard ), Services , Social Sharing.\nMore Sections added on how to share on  Facebook , Twitter & Whatsapp. The Tutorial is break off from the parent Tutorial - The Ultimate Android Tutorial which deals with all these topics in utmost detail.\nUpdate Dated 13 June 2020\nComplete Section on Permissions Revamped as per latest API.\n\n\nPLANNING TO LEARN ANDROID IN DEPTH\nFollow our Ultimate Android Tutorial - the biggest Android Tutorial on Udemy.\nMore than 300 lectures currently and still updating.\nThe Tutorial covers the new Facebook API 4.6 to login and share on Facebook. Get the Course Now .\nThe Tutorial assumes the User has basic knowledge of Programming in Android and Java I/O .\nFor more on learning Java for Android Development Check out our Java Course .\nJava - Make it your cup of coffee\nIt covers Java in the most simple way and covers Java 8 Lambda Expressions and more.. So get started with Java & Android.\nIF YOU LIKE THE TUTORIAL LIKE US ON FACEBOOK AND WE CAN SEND YOU UPDATES REGARDING UPDATES IN THE TUTORIAL / NEXT TUTORIALS.\nKINDLY PROVIDE YOUR VALUABLE REVIEWS TO ENABLE US TO INCORPORATE YOUR SUGGESTIONS IN THE UPCOMING LECTURES.",
      "target_audience": [
        "Basic Knowledge of Android Programming",
        "DEVELOPING ANDROID APPS"
      ]
    },
    {
      "title": "Xamarin Forms: Build Native Cross-platform Apps with C#",
      "url": "https://www.udemy.com/course/xamarin-forms-course/",
      "bio": "Learn to build native mobile apps for Android, iOS and Windows using your existing C# skills",
      "objectives": [
        "Build native mobile apps for Android, iOS and Windows using C#",
        "Understand the fundamentals of Xamarin Forms and its architecture",
        "Build user-interfaces with XAML and code",
        "Work with images",
        "Present data in beautiful, interactive lists",
        "Implement multi-page apps with navigation, tabs, master/detail pages",
        "Build forms and setting pages",
        "Store and retrieve data from a variety of sources (file system, SQLite database and RESTful services)",
        "Implement Model-View-ViewModel (MVVM) architectural pattern"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is Xamarin Forms?",
          "Setting Up the Development Environment",
          "Creating a Xamarin Forms App Using Visual Studio",
          "Creating a Xamarin Forms App Using Xamarin Studio",
          "Your First Xamarin Forms App",
          "How Xamarin Works",
          "Xamarin Forms Quiz",
          "Course Structure",
          "Asking Questions"
        ],
        "XAML Essentials": [
          "Introduction",
          "XAML vs Code",
          "Content Property",
          "Accessing Elements in Code-behind",
          "Data Binding",
          "Binding Context",
          "Dealing with Device Differences",
          "Property Element Syntax",
          "XAML Compilation",
          "Cheat Sheet",
          "Exercise"
        ],
        "Layouts": [
          "Introduction",
          "Stack Layout in XAML",
          "Stack Layout in Code",
          "Stack Layout Exercise",
          "Grid in XAML",
          "Grid in Code",
          "Grid Exercise",
          "Absolute Layout in XAML",
          "Absolute Layout in Code",
          "Absolute Layout Exercise",
          "Relative Layout in XAML",
          "Relative Layout in Code",
          "Relative Layout Exercise"
        ],
        "Images": [
          "Introduction",
          "Image Sources",
          "Downloaded Images",
          "Aspects",
          "Activity Indicator",
          "Embedded Images",
          "Embedded Images in XAML",
          "Platform-specific Images",
          "Application Icons",
          "Rounded Images",
          "Dealing with Sizes",
          "Cheat Sheet",
          "Exercise - Photo Gallery"
        ],
        "Lists": [
          "Introduction",
          "Populating a Basic List",
          "Cell Appearance",
          "Custom Cells",
          "Grouping Items",
          "Handling Selections",
          "Context Actions",
          "Pull to Refresh",
          "Search Bar",
          "Cheat Sheet",
          "Exercise - Airbnb's Recent Searches"
        ],
        "Navigation": [
          "Introduction",
          "Hierarchical Navigation",
          "Modal Pages",
          "A Simple Master Detail",
          "Master Detail Page",
          "Tabbed Page",
          "Carousel Page",
          "Displaying Popups",
          "Toolbar Items",
          "Cheat Sheet",
          "Exercise - InstagramApp"
        ],
        "Forms and Setting Pages": [
          "Introduction",
          "Switch",
          "Slider",
          "Stepper",
          "Entry and Editor",
          "Picker",
          "Date and Time Picker",
          "Table View",
          "Custom Cells",
          "Bindable Properties",
          "Picker with Navigation",
          "Cheat Sheet",
          "Exercise - ContactBook App"
        ],
        "Data Access": [
          "Introduction",
          "Overview",
          "Application Properties",
          "A Cleaner Implementation",
          "File System",
          "PCLStorage",
          "Setting Up SQLite",
          "Using SQLite",
          "INotifyPropertyChanged Interface",
          "Consuming RESTful Services",
          "Cheat Sheet",
          "Exercise - ContactBook with SQLite",
          "Exercise - Netflix Roulette App"
        ],
        "Model-View-ViewModel Architectural Pattern": [
          "Introduction",
          "What is MVVM?",
          "Code-behind and Testability",
          "Extracting a View Model",
          "BaseViewModel",
          "Domain vs View Model",
          "Dealing with Xamarin Dependencies",
          "ICommand Interface",
          "Command with a Parameter",
          "Clean Coding",
          "Exercise",
          "Unit Testing ViewModels"
        ],
        "Beyond the Basics": [
          "Introduction",
          "Resource Dictionary",
          "Dynamic Resources",
          "Styles",
          "Exercise - Styles",
          "Messaging Center",
          "Exercise - ContactBook with MessagingCenter",
          "Managing Events",
          "Cheat Sheet",
          "Accessing Common Device Functionality",
          "Bonus"
        ]
      },
      "requirements": [
        "Familiarity with C# classes, interfaces, events, delegates, lambda expressions and LINQ"
      ],
      "description": "With over 13,000 happy students and 2,600+ positive reviews, this course is Udemy's most popular course for learning Xamarin Forms!\n\n\n\nDo you have an idea for an app and want to turn that into reality? Well, if you want to build that app for iOS, you need to know Objective-C, which is an old, C-based language. The alternative is to learn Swift. If you want to build the same app for Android, you need to learn Java. And if you want to build this app for Windows, of course you need to know C#.\n\n\n\n\nSounds like a lot of headache. It's not just about learning different programming languages. It's about the fact that each platform has its own UI framework which is built with a different architecture and API.\n\n\nBuilding apps shouldn't be that painful. Is there a better way? Yes there is: Xamarin Forms.\nXamarin Forms is a UI framework for building native cross-platform mobile apps with C#. You code your app only once, and let Xamarin compiler build your app for each platform. As simple as that! You don't need to learn 4 different languages and presentation frameworks!\n\n\nIn this course, Mosh, author of 9 five-star courses on Udemy, will take you on a pragmatic and step-by-step journey and teach you how to build native mobile apps for Android, iOS and Windows using Xamarin Forms and C#.\n\n\nIn particular, you'll:\nLearn and understand the fundamentals of Xamarin Forms and its architecture\nBuild user-interfaces with XAML and code\nWork with images\nPresent data in beautiful, interactive lists\nImplement multi-page apps with navigation, tabs, master/detail pages\nBuild form and setting pages\nStore and retrieve data from a variety of sources (file system, SQLite database and RESTful services)\nImplement Model-View-ViewModel (MVVM) architectural pattern\n\n\nIf you've taken any of Mosh's courses before, you know what you get: clear, concise training, without waffling or mocking around.\n\n\nYou get 7.5 hours of high-quality content and every single minute is crafted with outstanding delivery and world-class production. Mosh doesn't create 10+ hour courses that need to be fast-forwarded or skipped.\n\n\nThis course is packed with real-world examples, exercises and best practices. Not only will you learn how to use Xamarin Forms, you’ll also learn first-class tips to make your code cleaner and more maintainable.\nLectures also have downloadable source code so you can code-along while watching the videos.\n\n\nSo, if you're looking for a Xamarin Forms course with\nA passionate coder and instructor who knows his craft\nPerfect structure\nBalanced mix of theory and practice\nClear, concise and bite-sized videos\nLots of real-world examples and coding exercises\nDownloadable source code\nDiscussion of best practices\nWorld-class audio / video production\n\n\nDon't look further. Enrol in the course now and learn to build native mobile apps for Android, iOS and Windows using your existing C# skills.\n\n\n\n\nPREREQUISITES\nAll you need to know in order to take this course is C#. At a minimum, you should be comfortable with classes, interfaces, events, delegates, lambda expressions and a bit of LINQ.\nIf you need to strengthen your fundamentals, you can watch Mosh's related courses:\nC# Intermediate: Classes, Interfaces and Object-oriented Programming\nC# Advanced: Take Your C# Skills to the Next Level\n\n\n\n\nFREQUENTLY ASKED QUESTIONS\n\n1- Do I need a Mac to take the course?\nNot at all! You can use use Visual Studio on Windows to build and deploy apps to Windows and Android. You need a Mac only to build your app for iOS. And this involves simply adding a new project to your Visual Studio solution, setting it as the start up project and building it. That’s it! You don’t need to write any extra code.\nSo, no, you don’t need a Mac to take this course or learn Xamarin Forms in general.\n2- Do I need to know about Xamarin.Android and Xamarin.iOS libraries?\nAgain, no! Xamarin Forms provides a simple, unified API for you to build cross-platform mobile apps. When you build your app for Android or iOS, it will internally use Xamarin.Android or Xamarin.iOS to map the common user interface elements to their corresponding native equivalent.\nYou need to know about Xamarin.Android or Xamarin.iOS only if you want to build custom user-interface elements.\n\n\n\n\nWHAT OTHER STUDENTS WHO HAVE TAKEN THIS COURSE SAY\n\"Another fantastic course by Mosh! Really well presented and easy to follow along. Highly recommended for anyone wanting to get up an running with Xamarin. I have apps up on my Android device and the whole experience has been super. Thanks Very Much!\" -Aindriu Mac Giolla Eoin\n\n\n\"Mosh has that incredible teaching skill to start from a fundamental level and then take you on a journey to iterate and improve on to a best practice mode thereby allowing you to grasp the core concept faster. Very much recommended for anyone who has always wanted to build native Android and iOS applications leveraging your existing C# skills. Keep up the good work Mosh!\" -Sachin Chitran\n\n\n\"I read through the entire Xamarin Forms official book as well as some other books on the topic before taking this course. I wish I had taken this course from the beginning. The concepts are explained clearly, and the exercises at the end of each section really help to solidify what you have just learnt.\" -Morné Zaayman\n\n\n\"You will not be disappointed by Mosh. At first I saw his content on youtube and I wanted to get a more in depth grip of his courses. I can assure you that the investment is truly worth it. You will neither feel like the instructor is talking to a stone who has never programmed, nor feel overwhelmed by a lot of complex programming techniques. The way he explains is just right for the average coder looking for improvements.\" -Oproiu Stefan\n\n\n\"This was my first paid video course ever and wow…what a surprise! Now six months later, I already bought two other courses from Mosh Hamedani because it’s a great way to learn so much in such a short time. I became a real fan of Mosh because he gives a boost to my work career.\nI recommend all the developers to watch the video courses of Mosh, you will not regret! He’s a very enthusiastic instructor who can teach you difficult concept as if they were easy. The video content includes many great exercises which will challenge yourself. Furthermore, the cheat sheets are very useful to refresh your memory.\" -Yen Jacobs\n\n\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you feel like this course is not for you, ask for a full refund within 30 days. All your money back, no questions asked.\n\n\n\n\nABOUT YOUR INSTRUCTOR\nMosh (Moshfegh) Hamedani is a software engineer with 17 years of professional experience. He is the author of several best selling Udemy courses with more than 120,000 students in 192 countries. He has a Master of Science in Network Systems and Bachelor of Science in Software Engineering. His students describe him as passionate, pragmatic and motivational in his teaching.\n\n\nSo, do you want to use your existing C# skills to build native apps for Android, iOS and Windows?\n\n\nJoin the other 13,000 students who have taken this course and start building your first native cross-platform app within a few minutes.",
      "target_audience": [
        "Developers who want to utilize their existing C# skills to build native mobile apps",
        "Developers who don't want to learn Objective-C, Swift or Java to build native apps"
      ]
    },
    {
      "title": "Xamarin Android Uber Clone App with C# and Firebase",
      "url": "https://www.udemy.com/course/xamarin-uber-clone-app/",
      "bio": "Learn advanced Xamarin Android concepts by building a fully complete and functional Uber Clone app using Firebase",
      "objectives": [
        "Learn to build complete Uber Clone apps (driver and passenger) with C#, Xamarin and Firebase",
        "Learn to create, remove, update and delete records in Firebase Database",
        "Save and handle data locally using Shared Preferences",
        "Learn how to use Google Location and Map services in your Apps",
        "Learn to find direction from one point to the other with Google Direction Api",
        "Learn to find place address with Location Coordinates using Google Geocoding API",
        "Learn advanced usage of C# Lambda Expressions",
        "Learn advanced usage and creation of custom C# Event handlers",
        "Learn to create and design beautiful User Interfaces",
        "Understand how to create Local Notifications using Android Notification Manager",
        "Learn to make asynchronous WebCallls using Rest Api",
        "Learn to initiate a phone call from your app using Native Intents"
      ],
      "course_content": {
        "Introduction": [
          "App Overview",
          "How To Make The Very Best Out of This Course",
          "Download Image Assets, Icons and Images",
          "Creating Your Project on Windows PC",
          "Creating Your Project on Mac",
          "Starting a New Android Emulator",
          "VTX and HYPER-V Emulator Issue Fixes"
        ],
        "Setting Up Firebase Backend": [
          "New Firebase Setup Guide",
          "Setting Up Firebase Database In Firebase Console",
          "Adding Firebase Packages to Your Project",
          "Setting Up and Initialising Firebase Database"
        ],
        "Login and Register with Firebase": [
          "Setting up SplashScreen",
          "Login Page Design",
          "Registration Page Design",
          "Register a New User with Firebase Authentication",
          "Saving User Information to Firebase Using Hash Map",
          "Saving User Information to Local Storage Using Shared Preferences",
          "Login User with Firebase Authentication",
          "Wrapping Up Register and Login Flow"
        ],
        "Main App Page Design": [
          "Setting Up Your Navigation Drawer",
          "Setting Up Toolbar with Transperancy",
          "Setting up Pickup-Location and Destination Bar",
          "Setting up Favourite Places and Current Location Buttons"
        ],
        "Configuring Google Map": [
          "Enabling Google Maps in Google Developer Console",
          "Google Map Initialization Guide (Latest UPDATE)",
          "Adding Google Map Packages and Initializing Google Maps",
          "Apply Customized Map Style to Google Map",
          "Adding Overlaying Centre Location Marker"
        ],
        "Configuring Location Services": [
          "Requesting Runtime Permissions",
          "Fetching Users Current Location",
          "Updating Location Changes on Map"
        ],
        "Configuring Place Search Functionality": [
          "[LEGACY] Implementing Place AutoComplete Search",
          "Google Places API Update Guide",
          "[UPDATE] Integrating New Google Place Autocomplete"
        ],
        "Configuring Google Geocoding API": [
          "Fixing Possible Geocoding API Error",
          "Find Place Address Using Location Coordinates",
          "Setting Pickup Location and Destination Seperately"
        ],
        "Ride Estimates and Properties": [
          "Setting up Ride Details BottomSheet",
          "Fix to Possible Directions API Error",
          "Implementing Google Directions Api, PolyLines and Markers - Part 1",
          "Implementing Google Directions Api, PolyLines and Markers - Part 2",
          "Implementing Google Directions Api, PolyLines and Markers - Part 3",
          "Implementing Google Directions Api, PolyLines and Markers - Part 4",
          "Calculating Estimated Ride Fares using Distance and Duration"
        ],
        "Creating a Ride Request on Firebase": [
          "Working with AppDataHelper",
          "Organising Our Code Using Regions",
          "Getting User Profile Information from Firebase",
          "Setting up Request Driver Dialogue",
          "Create Trip Details Class and Assign Values",
          "Creating a Ride Request on Firebase",
          "Cancel Ride Request on Firebase"
        ]
      },
      "requirements": [
        "Basic familiarity with Android development",
        "Some knowledge of basic C# programming concepts",
        "Must have Visual Studio installed on Pc or Visual Studio for Mac installed on Mac"
      ],
      "description": "Xamarin.Android Uber Clone App with C# and Firebase\nThis course is designed to be a complete reference guide to building a fully functional Uber clone app in Xamarin.Android, search no further for a complete learning pack. The course content is very robust and covers several advanced concepts and topics ranging from Firebase Database and Authentication to Notifications and so much More.\n\n\nWhy is This Course Right for Me?\nAbsolutely Yes, the best way to gain good understanding of advanced concepts in Xamarin.Android is by practicing with real life examples that implements these advanced concepts in ways you will probably use them when building your own custom app. So you will learn to build and design beautiful real life app from ground up, we will teach you everything you need to know.\n\n\nNot Convinced Yet?\nThis course will groom you to build your own app ideas, this comes in handy if you want to launch your own app and build a company around it. Modern day business run on automations which are made possible with apps, somehow in your business you will need a great functional app; and one way to achieve this without blowing your budget is by having hands on experience on building a real world  functional application. you will literarily get most of the advanced  knowledge you need for a price of cake.\nSecondly, having built a fully complete and functional Ridesharing application will be a very huge addition to your portfolio if you intend to get a high paying job. The job market these days are getting pretty competitive, you really need to show your worth. What's the best way to showcase your worth if not by showing real world applications you built?\n\n\nThe Topic Seems Complex, Can I Scale Through The Course?\nThe course was designed with the assumption that you know only the very little basics, most of the seemingly advanced concepts were over-explained using different scenarios in real life, hence you will easily understand. Even a 6 year old could go through the course and understand every bit of it.\n\n\nWhat Should I Expect After this Course?\nGood understanding of Firebase Database\nHow to build a real world application in a very structured and organised manner\nWork as an Android Developer and build your own custom apps\n\n\nOther Things to Learn Includes\nAndroid UI and Design Basics\nNavigation drawers and Menu\nFirebase Database Development\nFirebase Authentication\nGoogle Location services\nRealtime Location Updates\nGoogle Maps and Map styles\nCalculating Distance and time difference between two points\nCreating Local Notifications with Notification Channels\nMaking Web Calls Using Rest API\nProcessing Task in Background (Thread & Async)\nLoading and Displaying Data with RecyclerView\nSave Data With Shared Preferences",
      "target_audience": [
        "Those with basic knowledge of developing Android Apps using Xamarin and C#",
        "Persons with good knowledge of C# and want to gain experience in developing Android Apps with their existing skills",
        "People who want to take their Xamarin Android knowledge to advanced level"
      ]
    },
    {
      "title": "Beast Android Development: Advanced Android UI",
      "url": "https://www.udemy.com/course/build-an-advance-android-app/",
      "bio": "Master Android Design, Google APIs, and Different Android Libraries. Learn to implement Firebase as your apps back-end.",
      "objectives": [
        "Build advanced reycler-views",
        "Understand a variety of android libraries such as ottobus and butter-knife",
        "Implement popular Google APIs",
        "Add flavors into android projects",
        "Publish an app into google play with the necessary certifications.",
        "Use Googles Firebase to store data"
      ],
      "course_content": {},
      "requirements": [
        "Be comfortable with Java, Object-oriented Programming"
      ],
      "description": "This is an android development course designed to take someone who is comfortable with Android to a higher grade! I The advanced topics covered include complex recycler-views, Google APIs, flavors, an event bus, view pagers, and most importantly a back-end service called Firebase. This is one of the few courses on Udemy that covers this important tool!\nWe dive into all of these topics by building just one app from the very beginning. You as the student will code alongside the instructor lesson by lesson. The lessons build on top of each other as each lesson adds more to the app until completion. At the very end, we will see how to get the appropriate certifications and publish the app into the Google Play Store.\nThis course can take anywhere from 2-3 weeks to compete. In this short time span, you can greatly increase your abilities! In addition, the instructor will answer any and all android questions you may have that can be relevant or irrelevant to the course. In addition, you will also get the information of a beast graphic designer to help you make your app logos! If you want to become a better/beast android developer, this is the course for you!\n\n\nIntro Credit:\nAnimation:Blender 2D Templete\nSong:P-Holla - Do it for Love",
      "target_audience": [
        "Students who wish to advance their android development",
        "Students who are comfortable with Java and wish to begin android development",
        "If you are complete beginner in java or don't know java then this is not the course for you"
      ]
    },
    {
      "title": "React Native Made Easy",
      "url": "https://www.udemy.com/course/react-native-made-easy/",
      "bio": "Master React Native Fundamentals Using The Latest Javascript Features.",
      "objectives": [
        "Building Native Mobile Applications",
        "React Native",
        "React Native Best Practices",
        "Javascript Development",
        "Publishing Application with Expo"
      ],
      "course_content": {},
      "requirements": [
        "No advanced programming skills are needed. Just web development basics"
      ],
      "description": "Prerequisites?\nBasic JavaScript knowledge such as how to declare a variable and how to declare a function\n\nReact Native Framework is a framework for building Mobile Native Applications for IOS & Android. In this course we will learn React Native using Expo Platform. The thing that makes this course special is the way of teaching. First of all, during lessons there will be no assumptions that the student knows any prior knowledge of the topic, teaching with such assumptions can harm the learning process.\nThe second and most important thing is focusing on fundamentals. This is not a zero to hero course, because we do not believe on this saying. This is the course where you will build a strong base that is going to benefit you in all your later stages of your career.\n\nWe will learn Navigation, State Handling, Props, Hooks and lot more.\n\nStructure:\nInstallation & Setup where we will setup our environment.\n\n\nGetting Started where we will run our Hello World Application and learn the basics in React Native.\n\nProject One where we will practice the basics we have just learned.\n\n\nReact Native Deep Dive where we will start with more advanced stuff.\n\n\nProject Two where we will practice logical statements and simple state.\n\n\nProject Three where we will practice state manipulation and mobile application design.\n\n\nJavascript Essentials needed features from Javascript that are necessary within your React Native learning.\n\n\nHooks we will get to know the most used hooks in modern mobile application development.\n\n\nNative Device Features Interacting with the most used native features.\n\n\nProject Four where we will practice handling external network requests\n\n\nThird Party Libraries integration where we will be learning how to interact with third party providers\n\n\nNavigation where we will learn how to handle the navigation in React Native\n\n\nFinal Project where we will put all the things we learned in action.",
      "target_audience": [
        "Developers aiming to enter mobile applications field"
      ]
    },
    {
      "title": "React Native Mobile App - design, code and publish",
      "url": "https://www.udemy.com/course/react-native-mobile-app-design-code-and-publish/",
      "bio": "Build your very first mobile app from start to finish",
      "objectives": [
        "Development and Publication of a Mobile App.",
        "How to write class components, functional components and functional components with hooks.",
        "How to integrate React Native Plugins.",
        "How to use navigation."
      ],
      "course_content": {
        "Introduction": [
          "Environment setup",
          "Requirements and Design"
        ],
        "Coding": [
          "Create the project",
          "Folder structure",
          "Home View",
          "Cleanup and Timer",
          "Pause, resume and formatting",
          "Extract buttons",
          "setInterval work",
          "Fix multiple intervals",
          "Animation and refactoring",
          "Finish button",
          "Discuss the next steps",
          "Navigation",
          "Finish and save - UI",
          "Finish and save - Logic",
          "History View",
          "Bottom Bar Navigator styling",
          "Check Android - fix bugs",
          "App Icons",
          "Rename the default package name"
        ],
        "Publishing": [
          "Android App Signing",
          "iOS App Signing",
          "Android App Go Live!",
          "iOS App Go Live!",
          "Apps are public!"
        ]
      },
      "requirements": [
        "Basic understanding of the mobile world. Beginner level of JavaScript."
      ],
      "description": "This course will guide you through all of the app creation steps. We start with the requirements definition, then we'll design the app using Figma. Later, we will focus on developing the app using React Native framework. The last part of the course focuses on preparing production builds and submitting them to the app stores (Apple and Google). Final product, the WorkTimer app is a real app available for download on both app stores.",
      "target_audience": [
        "Anyone who wants to learn how to create a React Native mobile app."
      ]
    },
    {
      "title": "Android Studio Course. Build Apps. Android 6.0 Marshmallow",
      "url": "https://www.udemy.com/course/android-tutorial-from-beginner-to-professional/",
      "bio": "Android tutorial for all level students. Learn creating different Apps from scratch. Build Apps. With captions",
      "objectives": [
        "Create your very own application",
        "Become an Android Professional",
        "Earn Money from your App"
      ],
      "course_content": {},
      "requirements": [
        "Basic computer use. No Java or programming knowledge needed. We will start from zero.",
        "Android Studio. Software (free). We will download and install it in the first Lecture.",
        "Willingness to learn and do some self-work and research."
      ],
      "description": "This course will be updated with Android M as soon as there is an available version!\nThis is the only Android course on Udemy taught by an Android expert who makes apps full time for 5+ years for companies such as MasterCard and British Telecom.    What is the benefit of this?    You will not only learn Android but you will learn how to use the most popular third party libraries, what are the best coding practices, how to structure your app efficiently, tips and libraries that will save you a lot of headaches and a lot of time during the development.    During +5 years of development I have learned many ways of doing the same thing, for instance there are three ways of coding a button click or there are hundred of ways and libraries to download an image and display it in your app. In this course I will teach always the easier way and I will show the alternatives, sometimes I even show you the difficult way first and then the easiest way so you know what are you doing and why are you doing it.\nThe instructor will replicate his process to learn from beginner to professional in a way that everybody can understand, simple and efficient, working in the basics and important concepts and teaching how to solve your own problems.                                        After completing four applications, each one a bit more complex, you will be a real Android developer!Captions has been added to all the lessons                                          Note: All the apps developed in this course are compatible with Android L 5.0 (Lollipop) and a video explaining the key features of Android L is added.                                                This course is for anybody who is interested in Android Development; either to create your own application, start a career or increase your current skills. We will take you from zero knowledge to the ability of creating your own apps. Knowledge of Java is not needed.                                                                    The method of teaching used is 'Learn by Doing'; we're keen to get you using and becoming comfortable with Android Studio in the very first lesson. The lessons are practical and include student exercises with solutions, as well as inside knowledge and tips from your professional tutor.\nOn every lesson there will be some part of an App to develop, if there is any new concept not seen before we will explain it and after that we will practice with it developing that bit.                                                    Also we will realize exercises to test that knowledge, explaining it with different solutions after leaving some time for the student to try it on his own.                                                                  This course has 9.5 hours of videos with four application tutorials. We promote student-tutor interaction. Have any problems? Let us know and we'll answer you as quickly and coherently as possible; either in the form of a new video or a written explanation.\n- For the first application you will learn how to use the tools correctly, how to create a project and you will understand how android works internally and how the project is structured and to finish we will launch our first Application on a real device or a emulator.                                                      - We will continue with a section which will tell you how to find problems, how to understand errors and how to be self sufficient, finding and adding resources to your code so that way you can keep improving applications in your own.                                                      - The second application will be a game, called HangDroid a version of the classic hangman, here we will see Android in more depth, learning the basics about screen navigation, view creation, data persistence and much more, finishing with a game where you can play on single player mode or even multi player with another person!                                                - The third application and more important will introduce Fragments, Tabs, Action Bar, Google Maps, Google Admob to monetize your app and will teach how to upload your App to Google Play Store\n- The fourth application currently under construction is an App that displays posts from Reddit. This allow us to explain how to consume a Rest API, how to make HttpConnection, parse a JSON response and use SQLite to store the posts, being able to see them in offline mode.                                                                    This course has been created from a developer who learned how to do apps during four years with more than 15 apps, and his idea is to sum up the process of learning, giving it to you with basics examples and teaching you the methodology used to keep learning on your own so at the end of the course you will not only have learned the basics but also be self sufficient on the Android Apps development.                                                    This is what our students said :\n- I have recently enrolled into your course on Udemy for Android, I have  to say I am loving the course and must give yourself top marks for the  teaching style and presentation of the tutorials\n- I tried develop in Eclipse IDE with plugin ADT. But i had much  errors, not with develop application, but with Eclipse. Solve all errors  take me time. And i used AVD from Eclipse, omg it take even more than  10 - 15 minutes to run project. Again waste of time.\nBut than i  find your course. It is about 3 day ago. I switched to Android Studio, i  start learning lot of about develop java android app.\nYou help me make \"move\" things. I see progress with my android develop skills.",
      "target_audience": [
        "Anybody with an interest in Mobile Apps",
        "Computer Science Students looking to develop apps as a career",
        "Android developers looking to increase their knowledge"
      ]
    },
    {
      "title": "FlutterFlow & Supabase – The 2025 Mobile App Course",
      "url": "https://www.udemy.com/course/flutterflow-supabase-the-mobile-app-course/",
      "bio": "Mobile app development. Build both the frontend and backend of your app",
      "objectives": [
        "Becoming proficient in Flutterflow",
        "Becoming proficient in Subabase",
        "Understanding how to use Supabase in you Flutterflow Project",
        "Advanced features within Flutterflow"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed."
      ],
      "description": "Have you ever dreamed of creating your own mobile app? Whether you’re building an app for your business, startup, or looking to kickstart a high-paying freelancing career, this course is for you!\n\n\nWhy FlutterFlow & Supabase?\nTraditional app development is expensive and time-consuming, often taking months to complete. But with FlutterFlow, you can design, build, and launch fully functional mobile apps in days—without writing code! This powerful no-code platform enables you to create stunning apps with ease.\nOn the backend, Supabase provides a scalable, SQL-based database that makes managing user authentication, real-time updates, and secure data storage effortless. It’s an open-source alternative to Firebase, offering greater flexibility and control.\n\n\nWhat You’ll Learn:\n1) Build a complete mobile app from start to finish\n2) Design and customize app components using FlutterFlow\n3) Set up user authentication and manage user data securely\n4) Integrate a fully functional backend with Supabase\n5) Work with real-time databases and cloud storage\n6) Deploy your app and bring your ideas to life\n\n\nWho Am I?\nI’m Sebastien, a tech enthusiast with years of experience in fintech and app development. I’ve helped countless people enter the world of mobile app development, and now I’m here to help you do the same.\nThis course is designed for entrepreneurs, freelancers, and aspiring developers who want to build professional-quality apps without spending months coding. By the end, you’ll have a complete, ready-to-launch app—and the skills to create more.\n\n\nSo, what are you waiting for? Join now and start building your dream app today!",
      "target_audience": [
        "Anyone wanting to learn how to make native app's."
      ]
    },
    {
      "title": "Dart & Flutter | The Complete Flutter Development Course",
      "url": "https://www.udemy.com/course/dart-flutter-the-complete-flutter-development-course/",
      "bio": "2024 Complete Guide To Flutter Development - Build 7 Native Cross-Platform iOS and Android Apps Using Flutter.",
      "objectives": [
        "Become A Fully-Fledged Flutter Developer",
        "Build Engaging Native Mobile Apps For Both Android and iOS Using Single Codebase",
        "Build A Portfolio Of Beautiful Flutter Apps",
        "Understand All The Fundamental Concepts Of Flutter Development",
        "Fast-Track Your Flutter Learning With Practical Tips And Proven Techniques",
        "Integrate Firebase With Flutter"
      ],
      "course_content": {},
      "requirements": [
        "A Passion To Learn",
        "A Computer That Has Admin Privileges",
        "10GB Of Free Space On Hard Drive.",
        "Mac Computer RequiredAlthough you can build iOS apps on a Windows computer with Flutter, if you want to test it, you will need a Mac."
      ],
      "description": "Welcome to The Complete Flutter 2.0 Development Course. The most up-to-date Flutter course available online. Covering all the fundamental concepts for Flutter development, using the latest Flutter 2.0 version.\nI’ve built this course over months, perfecting the curriculum to ensure that you come out of this course as a fully-fledged Flutter developer. I’ll take you from scratch and make you into a skilled Flutter developer with a strong portfolio of beautiful Flutter apps.\nThis course will teach Flutter & Dart from scratch, NO prior knowledge of either of the two is required! And you certainly don't need any Android or iOS development experience since the whole idea behind Flutter is to only learn one language.\nYou'll learn Flutter not only in theory but we'll build a series of complete and realistic apps throughout this course. These apps will feature both all the core basics as well as more advanced features like using Firebase, Device Storage, Animations, State Management, Data Persistence and much more!\nWHAT DOES THIS COURSE FEATURE?\nI'll take you step-by-step through engaging and fun video tutorials and teach you everything you need to know to succeed as a Flutter developer.\nThe course includes 20+ hours of HD video tutorials and builds your programming knowledge while making real world apps. e.g. Instagram, Quizlet and CoinMarketCap.\nBy the end of this course, you will be fluent in Dart programming and be ready to build your own Flutter apps and become a fully fledged Flutter developer.\nYou'll also have a portfolio of over 7 apps that you can show off to any potential employer.\nBy the end of this course, you’ll have mastered the skills of developing cross-platform native apps using Flutter.\nWHAT TOPICS WILL BE COVERED?\nI know that you're here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they're doing, you'd be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and I’m always on hand to answer student questions.\n\n\nFundamental Flutter Concepts: e.g. Stateful vs. Stateless Widgets, Widget Trees, State Management, Animations, Themes and much more.\nFundamental Dart Concepts: e.g. Lists, Maps, Enums, loops, Futures, Streams, Classes, If/Else, Switch Statements, Control Flow, much more.\nDetailed Setup Instructions: For both MacOS and Windows\nConcepts Regarding Null-Safety: Late, Assertion Operator, Optional Variables, and much more.\nObject Oriented Programming (OOP): The Type System Variables, Functions and Methods, Inheritance, Classes and Protocols.\nSoftware Design: How to organize and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nNetworking: How to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nData Storage: How to use Firebase Cloud Firestore to act as a backend for your Flutter apps.\nAuthentication: How to use log in and register users for your Flutter apps.\nAnimations: How to implement animations in Flutter apps using a variety of ways.\nState Management: How to use setState, prop drilling, lifting state up, callbacks and the Provider package to manage app state.\nDebugging & Testing: Implement Unit, Widget and Integration Testing In Flutter Apps.\n\n\nWHAT ELSE DOES THIS COURSE OFFER?\n– Deep, Fine-Grained Learning – This course is jam-packed with information. I made the course that I most wanted to take and as a result, I didn't skimp on the details. You're going to cover more topics and material in greater depth than ever before.\n– 100% Real-World Practice – My goal is to get you writing code as much as possible. And not just any code–we'll be working exclusively on practical tasks that are instrumental in building your own amazing real-world apps.\n– No-Nonsense, Spot-On Explanations - Every lesson is to the point. I break down what we're making, how we'll be doing it, and what the final product will look like, all on top of helpful and illustrative descriptions to aid your understanding along the way.\n– 30-Day Money Back Guarantee - I'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nI really enjoyed making this course and I think you’ll enjoy taking it just as much.\nLooking forward to seeing you taking this course!",
      "target_audience": [
        "Developers Looking To Build Quality Apps With Flutter"
      ]
    },
    {
      "title": "The Complete ARKit Course - Build 11 Augmented Reality Apps",
      "url": "https://www.udemy.com/course/ios-augmented-reality-the-complete-course-on-arkit/",
      "bio": "Become an iOS Augmented Reality Developer by Building 11 High-Level AR Apps using ARKit in iOS 11 and Swift 4.",
      "objectives": [
        "Break into a brand new industry expected to be worth $165 billion by 2024",
        "Build augmented reality apps for your business or organisation",
        "Create your own augmented reality app",
        "Get app development jobs on freelancer sites"
      ],
      "course_content": {},
      "requirements": [
        "No ARKit or iOS development experienced required, although basic understanding of Xcode and Swift will help you progress quicker.",
        "You must have one of these devices:",
        "iPhone 6s or 6s Plus",
        "iPhone 7 or 7 Plus",
        "iPhone SE",
        "iPad Pro (9.7, 10.5 or 12.9) – both first-gen or 2nd-gen",
        "iPad (2017)",
        "iPhone 8 or 8 Plus",
        "iPhone X (some issues may arise)"
      ],
      "description": "ARKit has been called a ‘Game Changer’ for Augmented Reality! It allows developers to create augmented reality apps for Apple's newly launched iOS 11.\nThis new technology opens up the door for creative people and mobile app designers to build new experiences in a brand new industry that is expected to be worth $165 billion by 2024!\nCome learn Arkit in this fun and exciting course with Rayan Slim - an experienced iOS developer who has followed Rob Percival's \"learn by doing\" style to create this amazing course.\nWith over 9 hours of content and 5* reviews, it's already the longest and best rated ARKit course on Udemy!\nJust Take A Look At What Students Are Saying…\n★★★★★ \"Goes from 0 to 100 very slowly and steadily, explains everything to the decimal point, and the apps we're building are fun and easy to understand.\"- Vladimir Porton\n★★★★★ \"Totally amazing, I love the step-by-step style of this course.\"- Wang Hang\n★★★★★ \"It gets you where you want to be with ARKit quickly. I would absolutely take another course from this instructor.\" - James Justin Davis\nBuild 11 Augmented Reality apps using ARKit in iOS 11 and Swift 4\nYou'll go from beginner to extremely high-level and your instructor will build each app with you step by step on screen.\nYou'll build 11 AR apps, including a Floor is Lava App, AR measuring App, Ikea App and many other popular augmented reality apps. By doing so, you will learn how to:\nUse textures to make cool 3D models\nDisplay and animate 3D models in the camera view of the real world\nUse World Tracking to track your position at all times\nLaunch projectiles in the real world\nPlace 3D objects on horizontal surfaces\nDrive a car on horizontal surfaces\nBuild an inter-dimensional portal\nDetect collisions between two 3D nodes\nAs always, you'll get all the required source code and friendly support in the Q&A area. No ARKit or iOS development experience required, although basic understanding of Xcode and Swift will help you progress quicker.\nMake This Investment in Yourself\nIf you're looking to create your own augmented reality app or win work as a freelancer or developer in a new field, then this is the course for you!\nCome join this new wave of app development!\nTake this course and start learning!",
      "target_audience": [
        "Creative people and mobile app designers who want to build new experiences using the latest technology"
      ]
    },
    {
      "title": "The Complete iOS Development Course. Swift Programming A-Z",
      "url": "https://www.udemy.com/course/learn-full-swift-course-xcode-ios-programming/",
      "bio": "Best Swift Course Ever | Learn All Untold Secrets | Build +60 Apps | Complete iOS Swift Developer Course | Lear In Full",
      "objectives": [
        "You will be able to create any project having in your mind",
        "You will know all about Swift. Including every single element",
        "You will program confidently",
        "You will know all about Xcode",
        "You will know all about App Development"
      ],
      "course_content": {},
      "requirements": [
        "You need only OS X",
        "No pre knowledge required"
      ],
      "description": "Learn Full Swift in one course? - Yes! We learn it.\nLearn every single matter of iOS Development? - Yes! We learn it.\nYou want to fill gaps in your knowledges? - Yes! We fill all gaps in your knowledge.\nMaybe you already know something about Swift and iOS... but you want to write perfect, clear, smooth, BEST CODE? Yes! We learn the perfect and professional way of writing the code.\nYOU'RE IN THE RIGHT PLACE:\nIf you start right now - you can create any app you have in your mind, of any difficulty type in only 4 weeks.\nWHY EXACTLY ME:\nMy name's Akhmed. I am the creator of most popular coding courses, like:\n- Develop Full iOS Facebook Clone App in Swift, Xcode and PHP\n- The Complete iOS Development Course. Swift Programming A-Z\n- Develop Full iOS Twitter Clone App in Swift & Custom Backend\n- Develop Full iOS Instagram Clone App in Swift & Xcode\n⭐️⭐️⭐️⭐️⭐️\"I highly recommend this course. Ahmed Idigov does an absolutely fantastic job with this course. I have completed a few other related courses on Udemy that were good courses but Ahmed's instruction really sets this course apart from others. In addition, this course is 100% up-to-date. Everything that Ahmed explained throughout the course worked just as he demonstrated. I especially appreciate this because I did not have to spend additional time on Google searching for answers. Great course!\" - J. Alvardo\n⭐️⭐️⭐️⭐️⭐️\"Perfect course to get started with building a real apps. Ahmed explained all the features that every app needs. With Ahmed I start to earn money! I like his all courses!\" - M. Alrashidi\nI PROMISE YOU:\nI am working to enhance your knowledges and your experience of development. I promise, you will learn all coding aspects that never been shown in other courses or tutorials. I know what needs to be covered. If you don't like it, I guarantee full money back!\n⭐️⭐️⭐️⭐️⭐️\"Akhmed's courses are very Good. It is better than all the other course I have tried! I like he's covering what others don't. Great Job! Thanks for your efforts!\" - M. Kayne\n⭐️⭐️⭐️⭐️⭐️\"I though I knew enough about Swift. When I started to watch, I realized that I did not know anything! Thank you very much for your great course!\" - J.J. Abrams!\n⭐️⭐️⭐️⭐️⭐️\"I am fresh in development, but with Akhmed I already released my first app in App Store. Now it brings me good income!\"- D. Ather\nSign up today and you'll get:\n+45 hours content\nFull Swift Language Course\nFull knowledges about iOS development\nBuild +60 different apps\nCode and practice every element of iOS\nHD Content\n7/24 hours live access to me\nLearn all about development\nCreate any app having in your mind\nThis is the only course you need of Swift\nFull Swift is covered in one course\nIf you're ready to become an Advance in development, enroll right now and start to become a Real Professional of iOS Developer who can make a lot of money sitting at home!\n⭐️⭐️⭐️⭐️⭐️\"I was a courier, I did not have any programming knowledges. But now I became iOS Developer! Now I can realize any of my projects alone.\" - P. Batista\n⭐️⭐️⭐️⭐️⭐️\"I like how simply Akhmed is coding... without complication! I think even kid can understand him. Thanks for a great courses!\" - S. Spinoza\n⭐️⭐️⭐️⭐️⭐️\"I suggest his courses to everyone who want learn everything about programming without wasting a time.\" - K. Sreedhar\nBecome Highly Paid Professional in 30 Days\nFirst Look at Swift\nIntroduction to Xcode\nHello World App\nAll about Labels\nAll about Buttons\nAll bout Text Fields\nAll about Image Views\nAll about Text Views\nAll about Sliders\nAll about Switches\nAll about Activity Indicators\nAll about Progress Views\nAll about Steppers\nAll about Date Pickers\nAll about Picker Views\nAll about Scroll Views\nAll about Views\nAll about Alert Controllers\nAll about Action Sheets\nAll about Navigation\nAll about Tool Bars\nAll about Web Views and Web Kits\nAll about Auto-Layout Pinning\nAll about Auto-Layout Aligning\nAll about UI & UX Alignments\nAll about View Controllers\nAll about Navigation Controllers\nAll about Table View Controller\nAll about Table View Cells\nAll about XIB & NIB\nAll about Segues\nAll about Customized Table Views\nAll about Table Views Developed Programmatically\nAll about Search Bars and Search Functions\nAll about Collection View Controllers\nAll about Customized Collection Views\nAll about Collection Views Developed Programmatically\nAll about Tab Bar\nAll about Segmented Controls\nAll about Page View Controllers\nAll about Page Controls\nAll about Container Views\nAll about Split View Controllers\nAll about Picker Controllers\nAll about Tap Gestures\nAll about Pinch Gestures\nAll about Rotate Gestures\nAll about Swipe Gestures\nAll about Pan Gestures\nAll about Edge Pan Gestures\nAll about Long Press Gestures\nAll about User Defaults\nAll about Saving the Information in the App and in Device Memory\nAll about Global Variables and Constants\nAll about Notifications\nAll about JSON and Fetching the Data from Websites\nAll about Core Data and Saving Data Offline\nAll about Working with Files and Documents\nAll about Fonts\nAll About Layers\nAll about 3D Actions\nAll about Peak & Pop Controllers\nAll about Media Players\nAll about MP3 Players\nAll about Streaming Media File\nAll about Maps\nAll about Custom Animations\nAll about Custom Animated Segues\nand many many many many many mooore\nWe start from basics to build up your confidence. And we move to advance level from beginner. At completion of course you will be able to create ANY APP you want!\nYou'll go through +326 easy-for-learing-lectures and +45 hours of professionally produced HD content, where I show you the secret and easiest way of becoming a professional!\nYou'll be surprised with the progress you make at completion of the course. Once you completed this course, you don't need other courses to realize your projects! All about development is included in this course!\nYes! It means, you'll be making huge money on your apps submitted on AppStore.\n⭐️⭐️⭐️⭐️⭐️\"After I spent a lot of time on different courses and tutorials, now I can say - this is what I was looking for!\" - F. Murray\n⭐️⭐️⭐️⭐️⭐️\"In this course I've learnt a lot of things that others only promised to teach!\" - P. Peters\n⭐️⭐️⭐️⭐️⭐️\"After this course you don't need to buy other courses. This course covers content of 10 other courses.\" - A. I.\n⭐️⭐️⭐️⭐️⭐️\"Best instructor of iOS well done Akhmed . you are such a great instructor.\" - Asad Maqsood\n⭐️⭐️⭐️⭐️⭐️\"Best course about swift!\" - Lisa Freado\n⭐️⭐️⭐️⭐️⭐️\"The instructor is engaging students very well. This course helped to build my apps!\" - Josh\n⭐️⭐️⭐️⭐️⭐️\"He shows secret features which other developers are not covering. Greatest course.\" - Ashley\n⭐️⭐️⭐️⭐️⭐️\"I've watched a +1,000 of tutorials and courses. But this is something WOW! Incredible! The best course ever!!!\" - Ahmed\n⭐️⭐️⭐️⭐️⭐️\"At completion of this course I was able to build my own Instagram where I have changed the name! And already I have regular users :)\" - Adam\n⭐️⭐️⭐️⭐️⭐️\"In this course he is covering every single line of code of Swift language which is impressive. I confidently can say - I know Full Swift now!!\" - Djunglad\n⭐️⭐️⭐️⭐️⭐️\"This is outstanding course teaching Full Swift from scratch. He shows every single detail about the Swift. After completion of this course, I am able fluently program without any complication! Best course.\" - Marco\n⭐️⭐️⭐️⭐️⭐️\"If this is the kind of thing you're looking for, I defenetly reccomend it! Perfect and very well explained!\" - Theo S.\n⭐️⭐️⭐️⭐️⭐️\"I am currently taking this course, it is going great!!! Definitely a great course to learn in depth concepts of social applications. Not only does Akhmed explain all the concepts very well, he is always available for questions along the way. I recommend the course to anyone using Swift. Overall great course!!\" - Domenic B.\n\n\nThe Best Purchase\nIf you are not satisfied, I offer a full money back guarantee, so long as you request it within 30 days of your purchase of the course. I regularly update course with additional videos explaining different awesome features.\nYou'll get +45 hours professional HD video education content including coding, creating user interface, learning designing, source code, other materials, design sketches and many many more.\n\nWhat are you waiting for? This is the only course that worth to go through! Don't hesitate and enroll in this course. It's investment in your bright feature!\n\n\niOS 13 AND SWIFT 5 VERSION IS INCLUDED",
      "target_audience": [
        "All wanting to learn full programming at once",
        "All wanting to become Advance iOS Developer",
        "All wanting to learn Full Swift from scratch",
        "All wanting to realize their own project or idea"
      ]
    },
    {
      "title": "Build Real World Teacher Finder App with Xamarin Forms",
      "url": "https://www.udemy.com/course/build-real-world-app-with-xamarin-forms-part-4/",
      "bio": "Learn Xamarin Forms Real World Application From Beginning to End",
      "objectives": [
        "Be able to build any app you want in xamarin forms",
        "Work as a freelance xamarin forms developer",
        "Create your first xamarin forms real world application",
        "Build fully-fledged apps for your startup or business",
        "Consume Restful api's",
        "Consume Third Party UI Controls"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with C# and Xamarin Forms. Because knowledge of C# and Xamarin is must for this course.",
        "You need a windows OR mac machine for development."
      ],
      "description": "Welcome to the Real World App Development course with Xamarin Forms.\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of real world application in Xamarin Forms. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in Xamarin Forms.\n\nThis courses teaches you how to code using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a real world application with xamarin forms.\nConsume Restful Api's.\nConsume third party controls in xamarin forms.\nCreate a Complete Real World Application in Xamarin Forms From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Project in Xamarin Forms happily)\nHow to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nMake application user friendly.\n\n\nRemember...\nAfter this course you'll get all the Xamarin Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you. In this course I've used my personal Azure Account and I'll not give the access to the Azure Account. However if you want to test the api's then you'll need your own Microsoft Azure Account. Also inside this course I'll show you how you can publish your web api's to Microsoft Azure and preview your data inside Microsoft Azure.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the Complete Real World App Development Course with Xamarin Forms.",
      "target_audience": [
        "If you're a C# programmer , then take this course.",
        "If you are an intermediate xamarin forms developer, then take this course to get up to speed quickly with xamarin forms and native app development.",
        "If you are a pro xamarin developer and want to learn more advanced concepts with quick pace then take this course.",
        "If you're are already familiar with Xamarin Forms , C# , XAML then take this course."
      ]
    },
    {
      "title": "Ionic Apps with Firebase",
      "url": "https://www.udemy.com/course/ionic-apps-with-firebase/",
      "bio": "Build a Server-less Social App with Ionic and Firebase for Android and iOS from scratch to store.",
      "objectives": [
        "Build Android and iOS Apps with Ionic",
        "Using Ionic Native Plugins for native features like Camera",
        "Use Firebase with Ionic and Angular apps",
        "Use Firebase Auth to manager users",
        "Using Cloud Firestore to store and manage app data",
        "Upload files to Firebase Cloud Storage",
        "Using Firebase Cloud Functions to offload heavy jobs",
        "Sending automated Push Notifications to the users",
        "Publishing apps to Google Play Store"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Before We Start",
          "Introduction to Ionic",
          "Introduction to Firebase"
        ],
        "Introduction to the Ionic Framework": [
          "Installing NodeJS and VS Code",
          "Installing Ionic and Creating an App",
          "Understanding Ionic Folder Structure",
          "Running the app on Android Emulator",
          "Running the app on iOS Simulator"
        ],
        "User Management with Firebase Authentication": [
          "Designing the Wireframes",
          "Designing the Login Page",
          "Designing the Signup Page",
          "Installing anf Configuring Firebase",
          "Signing up Users with Firebase Authentication",
          "Login using Firebase Authentication",
          "Polishing Login and Signup UX"
        ],
        "Creating Feed using Firebase Cloud Firestore": [
          "Creating the Feed Page",
          "Sketching the Wireframe",
          "Designing the Feed Page - 1",
          "Designing the Feed Page - 2",
          "Creating a Post on Cloud Firestore",
          "Getting Posts on Cloud Firestore",
          "Ordering the Posts by Time",
          "Pagination and Infinite Scrolling",
          "Refreshing the Feed Page (Pull-to-Refresh)",
          "Getting Realtime Updates",
          "Improving UX and Adding Logout"
        ],
        "Uploading Picture to Firebase Cloud Storage": [
          "Firebase Cloud Storage and Ionic Native",
          "Importing the Camera Module",
          "Launching the Camera",
          "Using Chrome Remote Debugging",
          "Displaying Image Preview",
          "Uploading the Image",
          "Displaying Images in Feed",
          "Displaying Upload Percentages"
        ],
        "Likes and Comments using Firebase Cloud Functions": [
          "Introduction to Cloud Functions",
          "Likes and Comments",
          "Installing Firebase CLI",
          "First Cloud Function",
          "Cloud Function for Likes",
          "Testing with Postman",
          "Implementing Likes Functionality in the App",
          "Updating Likes in Realtime",
          "Improving UX",
          "Introduction to Comments",
          "Creating a New Comment",
          "Cloud Function for Comment Count",
          "Creating Comment Modal",
          "Displaying Comments in Modal",
          "Finishing Comments Functionality"
        ],
        "Push Notifications with Firebase Cloud Messaging": [
          "Introduction to Firebase Cloud Functions",
          "Adding Apps on Firebase",
          "Installing the Cordova Plugin for Firebase",
          "Getting the Token",
          "Sending First Push Notification",
          "Automating Push Notifications",
          "Testing Automated Push Notifications"
        ]
      },
      "requirements": [
        "Some experience with programming and development",
        "Aptitude for programming",
        "Enthusiasm to create something out-of-the-box",
        "A computer with Windows or Mac",
        "VS Code or any text editor",
        "A reliable internet connection"
      ],
      "description": "Ionic Apps with Firebase is a complete course that will teach you two leading app development technologies - Ionic Framework and Firebase. In this course, you will learn all about Ionic and Firebase while working on a real world social application. At the end of the course, you can publish your app.\nWe start by learning the basics of Ionic and Firebase. Once introduced to both the technologies, you will learn about building the front-end of the mobile app using the Ionic Framework and the back-end will be taken care of by Firebase. The code for each lecture is available for students to refer to in an easy to use and organised way. A repository will be shared with each student and the code for each lecture is available on a separate Git branch. You can clone the repository as well.\nYou will be building a Social Mobile App using Ionic and Firebase - Feedly.\nYou will learn about\nBuilding User Interfaces with Ionic You will start by learning the basic of Ionic and Firebase. Throughout the course, you will learn about various Ionic Framework Components and use them in a real app. You will learn how to build beautiful user interfaces with HTML and SCSS and use the built-in components in Ionic.\nFirebase Authentication You will learn to create authentication flows using the Ionic Framework. The users creation and authentication will be taken care of by Firebase Auth. This takes away all the pain about user management. All you need to do is hook your app up with Firebase Auth and your users can start signing up and logging in into your app using their emails and passwords. We will also work towards building good user experience, and for that, we will use amazing components that are built into Ionic.\nCloud Firestore Cloud Firestore is a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud Platform. You will learn how to store and retrieve all the data of your application using Cloud Firestore. You will learn about querying data and using Angular's concepts to display data in the app. You will be using Ionic to build all the user interfaces.\nFirebase Cloud Storage The social app that we will be building in this course, Feedly, allows its users to click pictures using their phone's camera and upload them. We store all these images in a secure and accessible cloud location. Cloud Storage for Firebase is a powerful, simple, and cost-effective object storage service built for Google scale. You will learn about clicking images using user's phone's camera and uploading it to Firebase Storage.\nFirebase Cloud Functions Cloud Functions for Firebase lets you automatically run backend code in response to events triggered by Firebase features and HTTPS requests. You will learn about creating Firebase functions to implement the Likes and Comments functionalities in our app, called, Feedly. This will allow the users to likes posts made by other users and also comment on those posts. All this data is updated in real-time in the app, thanks for Firebase Cloud Functions and Cloud Firestore.\nFirebase Cloud Messaging Firebase Cloud Messaging allows you to send notifications to your users to keep them engaged with the app. In this course, you will learn about sending notifications to users of your application. You will be sending notifications to a user whenever someone likes their posts or comments on their posts. Since we are building a real world social mobile app, cloud messaging is one of the most vital features to keep users engaged with the app.\nSo, what are you waiting for? Start learning and build your own real world social mobile app with the Ionic Framework and Google's Firebase.",
      "target_audience": [
        "Students who want to learn to build Mobile Apps",
        "Students who want to create an outstanding project",
        "Professionals who want to become Full-stack developers",
        "Web developers who want to build Mobile Apps",
        "Anyone who wants to learn to build Hybrid Mobile Apps"
      ]
    },
    {
      "title": "The Complete Android & Kotlin App Development A-Z Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-android-kotlin-app-development-a-z-bootcamp/",
      "bio": "Building Android Applications using Kotlin Even without Any Prior Programming knowledge",
      "objectives": [
        "Think of any Android app and build it",
        "Work as a freelancer to create Android applications, no matter where you are",
        "You'll be professional at Kotlin programming",
        "Build Android apps for your portfolio to find your dream job"
      ],
      "course_content": {
        "Day 0: Introduction": [
          "What will you learn in this course"
        ],
        "Day 1: Setup Requirements": [
          "Install JDK & Android Studio",
          "Create First Application",
          "Checking The First Project",
          "Completing The First Project (Part 1)",
          "Completing The First Project (Part 2)",
          "Day 1: Quiz"
        ],
        "Day 2 : App 1- Simple Calculator App (How to & Layout Design)": [
          "Day 1 Quiz Answered",
          "Create the app (Empty Project)",
          "Add an Activity in Android",
          "Create Layout - Part 1 (Constraint Layouts - Edit Text)",
          "Create Layout - Part 2",
          "Create Layout - Part 3 (TextView)",
          "Comments in Layout",
          "Basics of Material Design in Android",
          "Day 2: Quiz"
        ],
        "Day 3: App 1- Simple Calculator (Continue to Layout Design)": [
          "Day 2: Quiz Answered",
          "Add Buttons (Button Types and MaterialButton)",
          "Basics of Linear Layout in Android",
          "Working with Texts and Strings (How to manage Stings values in Android)",
          "Introduction to multi-language Android apps and localization",
          "Button Properties",
          "Day 3: Quiz"
        ],
        "Day 4: Continue Simple Calculator": [
          "Day 3: Quiz Answered",
          "Result Section",
          "Result Section Part2",
          "Tools",
          "Variables Part 1",
          "Variables Part 2",
          "Functions",
          "Errors And LogCat",
          "If Else",
          "EditText Error Property",
          "Minus",
          "Day4: Quiz"
        ],
        "Day 5: Continue Simple Calculator": [
          "Day 4 Quiz Answered",
          "Review What We Learn So Far And Some Tips",
          "Gradle And view binding part 1",
          "Gradle And View Binding Part 2",
          "Gradle And View Binding Part 3",
          "Gradle And View Binding Part 4",
          "Coding The Other Buttons",
          "Returning Values from Functions",
          "Input Values of a Function",
          "Extra Tips",
          "Day5: Quiz"
        ],
        "Day 6:Ending Very Beginer Level": [
          "Day 5: QuizAnswers",
          "Decimal value",
          "Export Apk +And Tips Part1",
          "Export Apk +And Tips Part2",
          "Export Apk +And Tips Part3",
          "Export Apk +And Tips Part4"
        ],
        "Day 7: Create A Game": [
          "Game Intro",
          "Game Page",
          "Arrange Game Page Objects",
          "Other Changes In View"
        ],
        "Day 8: Start Coding For Game": [
          "Writing Primary Game Codes Part 1",
          "Writing Primary Game Codes Part2",
          "Number Data Types",
          "Big Integer"
        ],
        "Day 9: Checking the user's guess": [
          "Checking the user's guess Part1",
          "Checking the user's guess Part2",
          "Checking the user's guess Part3",
          "Checking the user's guess Part4"
        ]
      },
      "requirements": [
        "No Programming knowledge required - I'll teach you everything step by step",
        "A Personal Computer"
      ],
      "description": "Get Your Dream Career with The Complete Android & Kotlin App Development A-Z Bootcamp!\nAre you looking for a dream job in Android development? Or perhaps you have a fantastic idea for an Android app but you have no idea how to make it? This course is just designed for you. There is no need to search about how to develop an Android application.\n\n\nWhy?\nYou will learn all aspects of Android Development from Beginner levels\nYou will learn here with 10+ years of programming and teaching experience instructor\nYou will go through many small projects and real life projects with lots of examples, tips and tricks.\n\n\nWhat will you learn and build?\nSimple Calculator\nGuess Number Game\nAdvanced Calculator (add functionality to the simple calculator)\nNotes App\nAnd many other apps (simple and real life applications)\n\n\nMain Content:\nIn-code step-by-step guides\nMany exercises\nTips & Tricks\nAnd ...\n\n\nBecome Professional in:\nKotlin and Object-Oriented Programming\nControl flows and Data Structures\nUsing Device Features\nUsing Third-Party Libraries\nAPI Calls\n...\nDo you think that this course is too short for learning all aspects of Android Development? Just wait for upcoming updates and enjoy app developing. You'll get soon that this course will worth it!!",
      "target_audience": [
        "Android programming enthusiasts without any programming knowledge",
        "If you have an idea but you don't know how to turn it into an Android app",
        "If you are looking for your dream job in Android application development"
      ]
    },
    {
      "title": "How to Make a Freaking iPhone App - iOS 10 and Swift 3",
      "url": "https://www.udemy.com/course/how-to-make-a-freaking-iphone-app-ios-10-swift-3-xcode-8/",
      "bio": "iPhone App Development from scratch. Learn how to make iOS apps using Xcode 8. The Basics Include Pokemon Go & Snapchat",
      "objectives": [
        "Create 10 fully functional iOS 10 apps",
        "Develop a solid understanding of Swift 3",
        "Industry Tips like how to get a job and make money from your apps",
        "The basics of Git and GitHub",
        "Make Snapchat Clone",
        "Make a Pokemon Go Clone"
      ],
      "course_content": {
        "Welcome": [
          "Welcome and Downloading Xcode",
          "About Me and the Course",
          "Installing Xcode"
        ],
        "The Fundamentals": [
          "Intro",
          "Variables and Constants",
          "Variables and Constants Exercise",
          "Strings and Ints",
          "Strings and Ints Exercise",
          "Swift Cheat Sheet",
          "Labels",
          "Outlets",
          "Common Errors",
          "Buttons",
          "Buttons Exercise",
          "Print and Comments",
          "If Statements",
          "If Statements Exercise",
          "If and Xcode",
          "Outro"
        ],
        "Git and GitHub": [
          "Intro",
          "Get with the Git",
          "GitHub",
          "Math and Double",
          "Textfields",
          "String Interpolation",
          "Booleans",
          "Add or Subtract",
          "Outro"
        ],
        "TableViews - Emoji Dictionary": [
          "Intro",
          "Arrays",
          "Arrays Part 2",
          "Arrays Exercise",
          "Sketch",
          "TableViews",
          "DataSource and Delegate",
          "Arrays and TableViews",
          "The 2nd ViewController",
          "Segues",
          "Prepare for Segue",
          "Pass Da Emoji",
          "Definition",
          "Outro"
        ],
        "Making Money with iOS": [
          "Intro",
          "Working for a Company",
          "Being a Freelancer",
          "Money from Your Own Apps",
          "Recommendations",
          "Functions",
          "Return",
          "Classes",
          "Methods",
          "Extra Emoji Features",
          "Classes in Emoji Dictionary",
          "Why Classes Are Cool",
          "Outro"
        ],
        "CoreData - DoIt ToDo List": [
          "Intro",
          "Sketch",
          "TableView",
          "Task Class",
          "Segue",
          "Setting Things Up",
          "Creating Tasks",
          "Cleaning Up",
          "Optionals",
          "Advanced Optionals",
          "Deleting Task",
          "CoreData Entities",
          "Saving in CoreData",
          "Fetch Request",
          "Deleting",
          "Outro"
        ],
        "Camera - Game Collector": [
          "Intro",
          "Sketch",
          "Bar Button Items",
          "ImageViews",
          "Dictionaries",
          "Advanced Dictionaries",
          "ImagePickerController",
          "UIImage",
          "CoreData Revisited",
          "List the Games",
          "Update",
          "Delete",
          "Camera",
          "Outro"
        ],
        "Microphone - Soundboard": [
          "Intro",
          "Sketch",
          "Setting Up the UI",
          "The Great Programming Myth",
          "Error Handling",
          "AVAudioRecorder",
          "Recording",
          "Playing Audio",
          "Save a Sound",
          "Show the Sounds",
          "Swipe to Delete",
          "Outro"
        ],
        "App Store": [
          "Guest Instructor",
          "Developer's Account",
          "App Store Tips",
          "Certificates",
          "App IDs",
          "Provisioning Profile",
          "iTunes Connect",
          "Meta Data",
          "Outro"
        ],
        "Firebase - Snapchat Clone": [
          "Intro",
          "Sketch",
          "CocoaPods",
          "Sign In Design",
          "Sign In Code",
          "Create User",
          "Camera Design",
          "Add Image",
          "Firebase Storage",
          "Smaller Image",
          "Firebase Database",
          "Pulling Data",
          "Adding Snaps",
          "Snaps are Ready",
          "Snaps in a List",
          "View the Snap",
          "Downloading Images",
          "Firebase Delete",
          "Remove From the TableView",
          "Delete From Storage",
          "Make It Shine",
          "Outro"
        ]
      },
      "requirements": [
        "You will need a Mac computer"
      ],
      "description": "Have you ever wanted to make an iPhone app? Did you get lost in YouTube videos or online blog posts? This is the course for you!\nMy name is Nick Walter and I am a self taught iPhone programmer. I Know what it feels like to start from the beginning. In my course I will teach you Swift 3 and how to make iOS 10 apps. What will we make?\n*Emoji Dictionary - A simple app to help us learn about TableViews\n*Do It! - A todo app that teaches us about CoreData\n*Game Collector - Learn to work with the camera as we make an app to catalog a collection of something (video games, movies, stamps, etc...)\n*Soundboard - Record sounds using the microphone and play them back. This one is fun!\n*Snapchat Clone - We'll use Firebase to make a simple version of Snapchat. Very involved\n*Pokemon Go Clone - Learn how to work with maps as we make a clone of most popular iOS game right now\nCome join the funnest course on Udemy for making iPhone apps!",
      "target_audience": [
        "People looking to learn the beginning to intermediate skills needed in iOS apps"
      ]
    },
    {
      "title": "Android Compose Essentials - Build Android Apps like a Pro",
      "url": "https://www.udemy.com/course/android-compose-essentials-build-android-apps-like-a-pro/",
      "bio": "Learn Kotlin and Jetpack Compose, Room, Dependency Injection, Retrofit, Location and Modern Architecture Principles",
      "objectives": [
        "Learn the basics of Kotlin Language and Object Oriented Programming concepts",
        "Learn asynchronous coding with Kotlin Coroutines and Flow",
        "Learn how to build native Android Application from scratch",
        "Learn how to build reactive and declarative user interfaces using Jetpack Compose Library",
        "Learn Modern Android App Architecture with MVVM and Repository Pattern",
        "Learn how to create Layered Architectural Pattern - Presentation Layer, Data Layer",
        "Learn best practices like Separation of Concern, Single Source of Truth (SSOT), Drive UI from Models, Dependency Injection",
        "Learn how to handle runtime permission and device location detection",
        "Learn how to call REST APIs, perform network request with Retrofit and parse JSON",
        "Learn how to perform CRUD and complex join queries with SQLite using Room Library"
      ],
      "course_content": {
        "Welcome to the course": [
          "Welcome!",
          "How to take this course"
        ],
        "Kotlin Programming Language": [
          "Section overview - What you will learn",
          "Hello World-Our first Kotlin Program",
          "Kotlin Variables",
          "More Kotlin Data Types",
          "String interpolation",
          "Kotlin Operators",
          "Quick Quiz - Take one",
          "Conditional Statement - If Else",
          "If Else Expression in Kotlin",
          "Excercise-Find the weather condition",
          "Range is Awesome",
          "When is better than if-else-if",
          "Kotlin Loops",
          "Quick Quiz - Take two",
          "Collection - Immutable List",
          "Collection - Mutable List",
          "Collection - Map",
          "Quick Quiz - Take three",
          "Declare a Function with Parameters",
          "Function with Optional Parameters",
          "Lambda Expression - A function without a name",
          "Real implementation of Lambda",
          "Quick Quiz - Take Four",
          "Null Safety in Kotlin",
          "Create a Class and Object",
          "Primary Constructor and init block",
          "Validate primary constructor argument",
          "Handle exception with try-catch",
          "The toString method",
          "The equals method",
          "Data class takes care of everything",
          "Quick Quiz - Take Five",
          "Inheritance in Kotlin",
          "Necessity of Method Overriding",
          "Abstract Class and Method",
          "Interface in Kotlin",
          "Object and Companion Object",
          "Quick Quiz - Take Six"
        ],
        "Welcome to Android": [
          "Install Jetbrains Toolbox",
          "Install Android Studio and SDK",
          "Install Virtual Device and SDK Tools",
          "Create your first Android Project",
          "Run our first app on Emulator",
          "Bug fixed with a RESTART",
          "Overview of the starter project",
          "What is a Composable Function",
          "The Preview Composable Function",
          "Create our own Composable",
          "Change Text size and Color",
          "Show Image on Screen",
          "Resize the Image with Modifier"
        ],
        "Layout Composables": [
          "Section Overview - What you will learn",
          "Layout Composable - Column",
          "Layout Composable - Row",
          "Layout Composable - Box",
          "First task - Build a Profile Page layout",
          "Profile Page layout solution",
          "The Weight Modifier - Make your layout responsive",
          "Exercise on weight modifier",
          "Exercise Solution on weight modifier",
          "Lazy Column - Show a person list",
          "Column vs LazyColumn",
          "What is Material Design",
          "Material Components - Scaffold Appbar and Floating Action Button",
          "Download Project"
        ],
        "State in Compose": [
          "Section Overview - What you will learn",
          "Prepare the Counter App Project",
          "Imperative vs Declarative",
          "MutableStateOf and Remember Functions",
          "Excercise-A simple Photo Gallery App",
          "Bmi Calculator Overview",
          "Take Input using TextField composable",
          "Bmi Calculator - Reusable Text Field",
          "BMI Calculator - Use the formula",
          "BMI Calculator - Show the reference table",
          "BMI Calculator - Finalize the App",
          "Configuration Change and State Loss",
          "Activity Lifecycle",
          "Lifecycle methods in action",
          "View Model State Holder - An Introduction",
          "Create your first View Model",
          "Add ViewModel Compose Dependency",
          "Modify Counter App with ViewModel",
          "Modify BMI Calculator App with ViewModel",
          "Architecture Principle - Drive UI from Models",
          "Architecture Principle - Single Source of Truth",
          "Download Resource"
        ],
        "Concurrency in Kotlin": [
          "Section Overview - What you will learn",
          "What is Synchronous Code",
          "The delay suspend function",
          "The runBlocking function - Block the main thread",
          "Calling multiple suspend functions",
          "Asynchronous Code - Use of launch function",
          "Async - Await pair",
          "Parallel Decomposition",
          "Timer app overview",
          "Timer app UI design",
          "Timer app - Introducing LaunchedEffect"
        ],
        "Project - Weather App": [
          "Section Overview - Deal with the REST",
          "Download the full project",
          "Create Project and Add Dependencies",
          "Create sub packages and files",
          "Create App Background Composable",
          "Setup custom font and typography",
          "Weather APIs overview",
          "A brief introduction to RESTFul API",
          "Convert JSON to Kotlin Data class",
          "Create Weather Service API and define methods",
          "Android Architectural Layer overview",
          "Create Weather Repository",
          "Create View Model and connect the repository",
          "Create Weather UI State",
          "Bug fix - Introducing Coroutine Exception Handler",
          "Current Weather - Show location and date",
          "Type mismatch exception - Where it came from",
          "Current Weather Section - Show temperature and icon",
          "Current Weather Section - Last part",
          "Show Forecast Weather List",
          "Add Play Location Service Dependency",
          "Request Runtime Permission",
          "Run app and provide location permission",
          "Importance of monitoring Network State",
          "Create Connectivity Repository",
          "Observe Connectivity StateFlow",
          "Create ViewModel Factory",
          "What is Dependency Injection",
          "Add Hilt Dependencies to our project",
          "Inject dependency to classes",
          "Create Hilt Module and finalize app"
        ],
        "Project - Shopping Events": [
          "Section overview - What you will learn",
          "Download the zipped project",
          "Create project and add Room dependencies",
          "Add Hilt Dependency",
          "Add Navigation Compose and Kotlin Serialization dependency",
          "Add sub packages and Application sub class",
          "Create a Reusable Appbar",
          "Create the pages",
          "Show HomePage with NavController and NavHost",
          "Define route objects and composables for each destination",
          "Navigate to a new screen",
          "Create Shopping Event and Item data classes",
          "Create AddEventViewModel and UI States",
          "Add Text Fields to AddEventPage",
          "Show Date Picker Dialog",
          "Add a Save Button and create saveEvent method",
          "Overview of a Relational Database",
          "Define Entities for Database",
          "What is a DAO",
          "Define DAOs for Entities",
          "Create Room Database",
          "Create Repositories for Event and Item",
          "Create Hilt Modules and Save first Event",
          "Open Database Inspector and view our Database",
          "Create Home View Model and get all Events",
          "Show all events in HomePage",
          "Pass arguments from HomePage to Details Page",
          "Retrieve arguments using Saved State Handle",
          "Create Event Details UI State and State Flow",
          "Add new Items to Event",
          "Overview of JOIN queries",
          "Write e LEFT JOIN query to get Event with the Items",
          "Run the JOIN query and get the result as Map",
          "Show Items in Event Details Page",
          "Animate scroll to last item of the list",
          "Create an Editable List Item",
          "Show Editable List Item",
          "Make Item Details Editable",
          "Update Shopping Item",
          "Modify select query for getting all shopping events",
          "Dismissible Item - Create the Box State",
          "Create SwipeToDismissBox UI",
          "Delete Item by swiping",
          "Delete Event with Items by Cascading"
        ]
      },
      "requirements": [
        "No experience on App Development (Android or iOS) is required.",
        "Basic knowledge on any Object Oriented Programming based language like C++, Java, C# or Python is required."
      ],
      "description": "Unlock the power of Android Jetpack Compose and Kotlin to build modern, efficient, and beautiful UI applications. This comprehensive course is designed to guide you through the essentials of Jetpack Compose, from the fundamentals of Kotlin to advanced state management, concurrency, and networking.\nWhether you're a beginner or an intermediate developer, this course is structured to provide a solid foundation and hands-on experience with Jetpack Compose.\nWhat You Will Learn:\nKotlin Fundamentals:\nMaster the basics of Kotlin, including loops, functions, and object-oriented programming (OOP) concepts.\nUnderstand special Kotlin classes like data classes, sealed classes, and more to leverage Kotlin’s full potential.\nAndroid Project Setup & Jetpack Compose Basics:\nLearn Android project structures and how to set up development tools and SDKs.\nDive into Jetpack Compose fundamentals, exploring Composable functions, Preview Composables, text, and image Composables.\nLayout in Jetpack Compose:\nExplore Layout Composables like Column, Row, Box, LazyColumn, Modifier, Scaffold, and AppBar.\nWork on hands-on tasks to design UI components like a profile page and master the Weight Modifier for responsive layouts.\nState Management & Lifecycle:\nGrasp the key concepts of State in Compose, MutableState, and the Remember function.\nMaster state hoisting, ViewModels, and Activity lifecycle management while adhering to best practices like Separation of Concern and Single Source of Truth (SSOT).\nConcurrency with Kotlin:\nDive into Kotlin Coroutines and learn to manage concurrency with suspend functions, async/await, launch, and parallel decomposition techniques.\nNetworking & Dependency Injection:\nBuild seamless networking integrations using Retrofit, manage device location, and enhance app architecture with Dependency Injection using Hilt and the Repository pattern.\nPersistence & Navigation:\nMaster the Room Persistence Library to implement database CRUD operations and complex JOIN queries.\nLearn to navigate between destinations using Compose Navigation, argument passing, and SavedStateHandle.\nBy the end of this course, you'll be equipped with the skills to build modern Android applications using Jetpack Compose and Kotlin, applying best practices in app architecture, state management, and efficient UI design. Whether you're looking to build production-ready apps or enhance your current projects, this course will set you up for success.\nEnroll now and start building beautiful Android apps with Jetpack Compose!",
      "target_audience": [
        "Anyone who wants build his career on Android App development"
      ]
    },
    {
      "title": "How To Build Mobile App Without IT Skills & Make First App!",
      "url": "https://www.udemy.com/course/how-to-build-mobile-app-without-it-skills-and-make-first-app/",
      "bio": "Reskin Java Android Marshmallow apps fast & discover the skills that other developers missed out!",
      "objectives": [
        "Install Eclipse, an Android IDE (Integrated Development Environment).",
        "Install ADT (Android Development Tool) on Eclipse.",
        "Install packages for Android SDK (Software Development Kit) Manager on Eclipse.",
        "Install Game App (Demo Version) on Android mobile device.",
        "Discover the truth of app marketing.",
        "Discover where to download big lists of royalty-free musics, sounds and graphics for FREE.",
        "Import CORRECTLY the source code into Eclipse.",
        "Select which codes to reskin within Eclipse.",
        "Discover simple yet powerful Photoshop tricks.",
        "Discover superb tool to create different sizes of app icons almost instantly.",
        "Discover secrets to make MORE money that many developers overlook it!",
        "Avoid Monetization account suspension.",
        "Export Android Application on Eclipse.",
        "Deloy apps to Google Play Store and other Alternative App Stores the RIGHT way.",
        "Confront and solve possible app business threats."
      ],
      "course_content": {
        "Source Code": [
          "Download Premium Game Source Code - for Free!"
        ],
        "Softwares Needed - FREE": [
          "First Things First - Step-by-Step Software Installation"
        ],
        "Game App Installation (Demo Version)": [
          "How to Install Demo Game App on Your Device? (Mobile Screen Activity Captured!)"
        ],
        "App Marketing and Royalty-Free Graphics": [
          "The Truth about App Marketing & The Big List of Royalty-Free Graphics"
        ],
        "Delve Deeper And Deciphering the Source Code": [
          "Import the Source Code and Set the Libraries - Correctly!",
          "Update to the latest Android version - Android Marshmallow!",
          "Source Code Anatomy - Which codes to reskin?",
          "Let's Editing the Codes! (Many Newbies Stucked Here!)"
        ],
        "Learn-Less-Apply-More Photoshop Series": [
          "Animated Game Character and the Shortcut Keys",
          "Photoshop Styles - Creating Eye-Catching Title for FREE!",
          "Game Background and the Missing Font Issues (Solved!)",
          "Precautions on Copyright Infringement",
          "App Icons (Superb Tool revealed!) and App Screenshots"
        ],
        "Changing the Music and Sounds": [
          "The Big List of Royalty-Free Music and Sounds (FREE Edition)"
        ],
        "App Monetization and Secrets to make MORE money!": [
          "Editing the Monetization Codes in Eclipse - Banner and Interstitial Ads",
          "Secrets to Make More Money (Many Developers Overlook It!)",
          "Avoid This To Save Your App Empire"
        ],
        "How to Quickly Import the Reskinned Files into Eclipse": [
          "Fast Way to Import the Files"
        ],
        "Step-by-Step Exporting Android Application - Correctly!": [
          "Keystore, Validity and the APK",
          "App Version 1 to Version 2 - The Errors and The Solutions!",
          "The FREE Knowledge Base"
        ]
      },
      "requirements": [
        "A laptop running Windows Operating System. That's it!"
      ],
      "description": "[Note: Source code & softwares included!]\n\n[Do Not Reinvent the Wheel]\n\nThe wheel is round in shape. It is unwise to reinvent and change it into another shape. Analogously, it is better not to develop Android apps from scratch, unless you already acquired excellent programming knowledge. Of course, we are not advocating that everyone should NOT learning programming language.\nHere's the reality. You may need to take years to master those knowledge. So, if you get overwhelmed by the programming language and you are rush enough to build your first Android app, then this course is definitely for you! Additionally, this course can provide you a \"big picture\" of what Android development is all about.\n[Apps Reskinning]\nApps Reskinning can be a very lucrative field to penetrate if you know what you are doing. In this course, you will first learn how to install Eclipse (an Android Integrated Environment) and install a software plugin called the ADT (Android Development Tool). Before you can generate the binary file, you will also need to update the Android SDK (Software Development Kit) Manager. You will learn how to update to the latest Android version, particularly Android Lollipop (in the time of writing).\nAnd now - Android Marshmallow...\n\nNext, you will know where to get the source code inexpensively. This save your cost and increase your Return On Investment (ROI) greatly! There are newbie developer that disappointed with the expensive source code and eventually gave up the app goldmine. With this course, we provided you a solution!\nWe have been added a very special video (where mobile screen activity was captured in HD mode) so that you will know how to install the APK (Android Package) file as to preview your apps. Note that APK is a binary file that you will need to generate as part of the Android development. With generating APK, you cannot view your apps. No internet connection is needed when you want to preview your apps. In this course, you will be able to install a demo version of a game app as well as your newly build app on your mobile device before deploying to Google Play Stores or other alternative mobile app stores.\nPertaining to app marketing, you will be discover where to learn workable app marketing techniques and discard other easily-get-overwhelmed-and-not-applicable courses. We have created more than 100 mobile apps and we know what happens!\nAny wrong steps in reskinning the codes may result in compilation errors in Eclipse. This is why we will teach you step-by-step how to import the source code right in the first place. Setting the libraries (not the physical library where you can borrow books of course) wrongly in the beginning may get you overwhelmed! So, you are at the position of unfair advantage, where other newbie developers still scratching their head - you save your time! Note that NOT every code you need to \"touch\", we will revealed to you which codes you need to edit, and there is no programming skills required! Many newbies get stucked here because they don't know how to \"get out\".\n[Photoshop: Learn-Less-And-Apply-More Series]\nFrankly, to sustain in the long run, you will need to learn Photoshop. We know there is other alternative softwares out there, but learning Photoshop is still the wise move because of its advanced editing features. You may feel Photoshop is not user-friendly at first, but by studying our learn-less-and-apply-more Photoshop series, you will get used to it. By the way, it is not hard at all when you know the tricks. From editing game character to app icons to app screenshots, we have covered a few simple yet powerful Photoshop techniques. Learning too much in a short period of time will make you crazy. This is why we make it as succinct as possible. We have also included some useful shortcut keys as well as free software to boost your productivity!\n[Where to get Royalty-Free Sounds, Musics and Graphics?]\nWe will tell you where to get the big list of royalty-free sounds, musics and graphics! This is a must so that you will not have a relationship with copyright infringement. This \"affair\" will not happen on you!\n[Monetization Secrets/Tricks]\nIn this course, we will show you the secrets or tricks that Google may not want you to know. These are the secrets that many developers forgot to do it and not aware of it! Additionally, you will discover what not to do with your apps. Doing so may ruin your business instantly. Sound ridiculous? Join to find it now. Is either you know or don't know about it. These secrets WILL impact your business GREATLY!\n[Exporting the Binary File (the APK)]\nWhen you come to our session of exporting the binary, you will learn step-by-step how to exporting the APK. We will show you when to use appropriate file extension and when you should not use it. We will also give you possible errors (together with its solutions of course) that will be occurred during the last steps of Android development. We will also let you know how to use a FREE knowledge base site to further strengthen your Android development arsenal. You will also get to know on how to deploy to different Android App Stores out there for maximum exposure.\n[App Tsunami May Hit You Without Warning]\nOn this session, we will reveal to you the possible threats that you may go through in the future and how to overcome it! Every business has risks, so were apps. We certainly don't want you to go through those tough times as we did last time. Let's see what many developers overlook the possible threats.\nWith all of the course materials, you will have a solid knowledge on how to reskin Android apps, sustain in the long run and most importantly, make MORE money!",
      "target_audience": [
        "This course is aimed at beginners to intermediate learners in Android development and would like to reskin game apps based on the source code obtained.",
        "This course involved NO programming. It means no coding skills or experiences are required because this course is step-by-step type of course. Just code editing!",
        "If you are an expert Android developer, this course is probably ALSO suitable for you because it covers tricks to make MORE money!"
      ]
    },
    {
      "title": "Android App Development: Create a Spotify Clone",
      "url": "https://www.udemy.com/course/android-app-development-create-a-spotify-clone/",
      "bio": "Stream your music collection and learn how to play and control music on Android",
      "objectives": [
        "Create an Android Music Streaming App",
        "Create a Fully Functioning Server to Stream any Media They Like",
        "Understand the CORRECT way to Play Music on Android (vital information)"
      ],
      "course_content": {
        "Introduction and Environment Setup": [
          "Introduction",
          "Setup Android Studio and Simulators on a Mac",
          "Setup Android Studio and Simulators on a PC (Windows)"
        ],
        "Server Setup and Testing": [
          "Introduction to Server Setup",
          "Should You Choose a Free or Paid Server?",
          "Option 1: Setting up a Free Server",
          "Option 2: Setting up a Paid Server (Much More Control)",
          "How to Upload Your Files to a Server",
          "Create Your Server Database Using cPanel",
          "Create a PHP Script to Add Uploaded Music to the Database - Part 1",
          "Create a PHP Script to Add Uploaded Music to the Database - Part 2",
          "How to Automate a PHP Script Using Cron"
        ],
        "A Really Simple Android Music Streaming Function": [
          "Introduction to Simple Streaming",
          "Setting up our Project in Android Studio",
          "How to Create a Simple Streaming Function in Android",
          "Correct Threading Patterns for Android Streaming Audio",
          "Summary of Really Simple Android Music Streaming Function"
        ],
        "Basic Control of Media Players on Android": [
          "Introduction to Basic Control of Media Players on Android",
          "Adding a Play Pause Button to our App",
          "Connecting up the Streaming Player and the Play Pause Button",
          "How to Toggle the Play Pause Button Icon",
          "Debugging an Android App",
          "Summary of Basic Control of Media Players on Android"
        ],
        "Background Audio Streaming on Android using Services": [
          "Introduction to Background Audio Streaming on Android using Services",
          "What is an Android Service?",
          "Creating an Android Service to Play Music",
          "How to Communicate From a Service to an Activity on Android",
          "How to Communicate Between an Activity and a Service - Binding",
          "Summary of Background Audio Streaming on Android using Services"
        ],
        "Advanced Audio Streaming Features on Android": [
          "Introduction to Advanced Audio Streaming Features on Android",
          "Moving a Service to Foreground - Part 1",
          "Moving a Service to Foreground - Part 2",
          "Moving a Service to Foreground - Part 3",
          "How to Request Audio Focus on Android",
          "How to Respond to Audio Interruptions on Android",
          "How to Handle Earphone Unplugging on Android",
          "Summary of Advanced Audio Streaming Features on Android"
        ],
        "Retrieving a List of Songs from a Remote Database": [
          "Introduction to Retrieving a List of Songs from a Remote Database",
          "Creating the PHP Access Script to Return Database Results to our App",
          "How to Make a Web Call to a Database on Android",
          "Creating the Song Class to Hold Retrieved Music",
          "Parsing PHP Results into a List of Songs",
          "Summary of Retrieving a List of Songs from a Remote Database"
        ],
        "Displaying a List of Songs in a List View on Android": [
          "Introduction to Displaying a List of Songs in a List View on Android",
          "What is a List View Exactly?",
          "Creating a List View (termed ListView) using Android Layouts",
          "How to Create Custom Rows for Android List Views",
          "How to Populate a List View and its Custom Row with Data",
          "Starting Music Playback When a List View Item is Tapped",
          "Summary of Displaying a List of Songs in a List View on Android"
        ],
        "Adding Extra Functionality to our Spotify App": [
          "Introduction to Adding Extra Functionality to our Spotify App",
          "Creating a PHP Script to Increment Number of Plays in our Database",
          "Keeping Track of Each Time a Song is Played",
          "Creating a PHP Script to Like a Track in our Database",
          "How to Like a Playing Song",
          "Summary of Adding Extra Functionality to our Spotify App"
        ],
        "Summary and a Gift For You": [
          "Summary of Everything You Have Learnt",
          "Final Thank You and a Free Gift"
        ]
      },
      "requirements": [
        "A PC or Mac running Android Studio (free)",
        "Access to a server (free or paid) running cPanel (most servers run cPanel)"
      ],
      "description": "Music is one of the biggest app categories on Google Play. You have the potential to earn substantial revenue from any music app you create!\nLearn the basic concepts, tools, and functions that you will need to build a fully functional Android music streaming app with the programming language, Java. Also learn how to set up your own server and upload music that your app will eventually play.\nThings You'll Learn\nAndroid Studio Installation and Setup\nBasic Streaming Functions on Android\nHow to Setup a Server (free or paid)\nHow to Automate Music File indexing on a Server Using PHP (no PHP experience necessary)\nHow to Make an Android App Communicate with a Server\nHow to Add Lock Screen Controls\nHow to Handle Audio Interruptions like Phone Calls\nHow to Create List Views and Custom List View Rows on Android\nDynamically Add More Data to Your App and Remote Database\nLiking a Track Through Your Remote Database\nPowerful Skills at Your Fingertips\nBy learning to create both Android apps as well as PHP and MYSQL backends you will become incredibly valuable to potential employers. Combining these 2 skills is the number one reason developers get hired for startups. Those startups need this information and are willing to pay for it!\n\n\n------------BONUS-----------\nNot only do you learn the ins and outs of streaming music on Android apps but this course includes a MASSIVE bonus. I teach you how to create and setup a fully functional server that does the following:\nAutomatically scan for new music uploads and add them to a MYSQL database (with no input required from you)\nProduce PHP files that allow your app to access a backend\n------------------------------------\n\n\nContent and Overview\nNo knowledge is needed of programming for this course but it helps. If you are a complete beginner then please take simple Java basics course FIRST.\nYou will be taken on a journey through:\nHow to choose between free or paid servers\nHow to code a simple streaming function on Anroid\nHow to add advanced audio features to your app\nHow to make your app talk to a server (aka - creating a backend)\nHow to report app usage statistics to your remote database\nThis course establishes a strong understanding of music app creation concepts and includes training on Android and Java. It also includes training on MYSQL, PHP and cPanel. Each chapter starts with an introduction and ends with a summary to help you learn even better.\nComplete this course and you'll have skills that are continuously in demand from most businesses.\nIncrease your value by joining now!\n\nCredit: Promo music provided by Ben Sound",
      "target_audience": [
        "Those who have coded a little bit in any language should take this course",
        "Complete beginners should take a Java course first (even a short one will help)"
      ]
    },
    {
      "title": "Xamarin Forms 2.0 - Beginner to Advanced",
      "url": "https://www.udemy.com/course/how-to-use-xamarin-forms-beginner-to-advanced/",
      "bio": "Code cross platform apps with the latest release of Xamarin Forms 2.0",
      "objectives": [
        "Use Xamarin Forms like a professional",
        "Use SQLite Databases in a cross-platform manner",
        "Use shared settings in a cross-platform manner",
        "Know how to use XAML and Code Behind XAML",
        "Know how to implement 2 way data binding in Xamarin Forms"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "Update May 2016 - Xamarin now Free!",
          "Xamarin Setup on a Mac",
          "Xamarin Setup on a PC (Visual Studio)",
          "Linking Xamarin on a Mac to Xamarin on a PC (optional)",
          "The difference between Xamarin Studio on Mac / PC and Visual Studio",
          "When to use Xamarin Forms and when not to use it"
        ],
        "How Xamarin Forms Apps should be Architected (MVVM)": [
          "Understanding the Model View ViewModel (MVVM) Paradigm"
        ],
        "QuickStart Hello World Xamarin Forms App": [
          "Creating a Xamarin Forms Project \"Hello World\"",
          "Setting up Xamarin iOS and Android simulators and running \"Hello World\"",
          "Changing our home screen layout and elements"
        ],
        "Create a Cross Platform \"Just Do It x 1\" App": [
          "Introduction to Just Do It X 1",
          "Carving out our app niche",
          "Creating the XAML graphical elements of our app",
          "Writing the core app code - Using user preferences to store data",
          "How to add Google Admob Ads to a Xamarin Forms App"
        ],
        "Create a Cross Platform \"Just Do It x 10\" App - Part 1": [
          "Introduction to Just Do It X 10",
          "Just Do It X 10 App design and first page XAML"
        ],
        "Create a Cross Platform \"Just Do It x 10\" App - Part 2": [
          "What is an SQLite database and why use it?",
          "Installing a Nuget component to handle database operations",
          "Database access code - How to get a cross platform SQLite Database connection",
          "Database access code - How to insert, delete and fetch items",
          "How to create a data model",
          "How to insert database items into a list view"
        ],
        "Create a Cross Platform \"Just Do It x 10\" App - Part 3": [
          "How to open a new Page, View Controller or Activity in Xamarin Forms",
          "Creating the XAML layout of the Edit Task Screen",
          "How to bind variables two ways in Xamarin Forms",
          "Saving the Edited task to the database"
        ],
        "Recap, Farewell and BONUS Lecture": [
          "A quick recap of everything you have learnt",
          "Thank you and BONUS just for you!"
        ],
        "Archives - Source Code": [
          "Source Code Download"
        ]
      },
      "requirements": [
        "A PC or Mac (Xamarin runs on both - a Mac is needed if you want to run the iOS project)",
        "An internet connection",
        "NO programming experience is required!"
      ],
      "description": "Create fantastic apps on iOS and Android at the same time using Xamarin Forms 2.0!\nYour apps will be created in a single project with shared code. That code is in C#, the easiest and most popular code around!\n\nThat means:\nNo Java to learn (Android).\nNo Swift to learn (iOS).\n\n\nYou will go from beginner to completely proficient in Xamarin Forms 2.0 (Released End of 2015).\n\nNO OTHER COURSE takes you so easily through the process and in so much detail !!\nForget the $2000 fee at Xamarin University, get the same information here for a fraction of the cost!\n-----------You could be published with a click!--------------\n\nBy the time you're done with this course you will have 2 apps you can publish on the Apple App AND Google Play Stores (and Windows Phone if you like!).\nAll those platforms are covered by a SINGLE codebase! What's more I even show you how to install Google Ads so you can make money from your apps!\n-----------------------------------------------------------------------------\n\nThis course is for you if you want to:\nLearn the Xamarin Forms 2.0 development process - from complete beginner to proficient app developer\nGet paid $100 - $150 per hour to make apps for paying clients\nCreate your own wildly popular apps\nSee the whole development process as it really is.\nHave a real app you can publish under your own account\nThis course is not for you if:\nYou are an expert in Xamarin (but it may help if you don't know Forms!)\nWhat software do you need?\nXamarin studio (Free starter edition or Free business trial available).\nA PC or Mac\nDo you need experience?\nNo. I assume you are a complete beginner to Xamarin development\nWhat makes this course different?\nIt reveals the true nature of app development - an involved process with many design and usability iterations.\nThis course allows you to code at the speed of light with the power of Xamarin Forms 2.0.\nThis alone dramatically cuts down development time and allows you to produce high value cross platform apps so much faster than the traditional way.\n\n\nThe extras you get when taking this course:\n\nLearn all about SQLite databases (necessary for every app you will ever make)\nLearn shared settings, native to each platform\nA good basic grounding in Xamarin app development (and the C# language)\n2 Apps you can publish under your own name (I give away all rights to the source code FREE in this course)",
      "target_audience": [
        "Beginners should take this course",
        "Intermediates who want to learn Xamarin Forms should take this course",
        "Those familiar with Xamarin Forms should not take this course"
      ]
    },
    {
      "title": "State of the Art Android App Development in Kotlin",
      "url": "https://www.udemy.com/course/stateoftheartandroid/",
      "bio": "Using Kotlin, MVVM, Dagger2, Navigation, Retrofit and Unit tests",
      "objectives": [
        "MVVM",
        "Dagger2",
        "Unit tests",
        "State of the Art Android development",
        "Retrofit",
        "Glide",
        "Navigation",
        "Data Binding",
        "Kotlin"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to take this course",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Resources"
        ],
        "Setup": [
          "Android Studio",
          "Install Android Studio on a Mac",
          "Install Android Studio on a PC",
          "How to test on your phone",
          "Create the project",
          "Adding necessary libraries"
        ],
        "Navigation": [
          "What is Navigation",
          "Navigation configuration",
          "Navigation actions",
          "Cleanup"
        ],
        "MVVM": [
          "Lifecycles, LiveData, MVVM",
          "Model and ViewModel",
          "Build the Layout",
          "Create the Adapter class",
          "Putting it all together",
          "Refresh layout"
        ],
        "Model - getting data with Retrofit": [
          "What is Retrofit",
          "Data classes",
          "Retrofit",
          "Retrieve the data",
          "Glide",
          "Shared Preferences"
        ],
        "Detail screen and Palette library": [
          "Detail screen layout",
          "Detail screen functionality",
          "What is the Palette library",
          "Palette library"
        ],
        "Data Binding": [
          "What is Data Binding",
          "Detail Fragment",
          "Challenge",
          "Palette Binding",
          "Binding the list items"
        ],
        "Dependency Injection using Dagger2": [
          "What is Dependency Injection",
          "Injecting the ApiService",
          "Injecting the Shared Preferences",
          "More Dagger features"
        ],
        "Unit Testing using Mockito": [
          "What are Unit Tests",
          "Create the test rules",
          "Create the Dagger Test objects",
          "Test the Animals API success path",
          "Test the Animals API failure path",
          "Challenge",
          "Test the Key API"
        ],
        "Conclusions": [
          "Next steps",
          "Conclusions",
          "Further resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Mac or PC",
        "Interest in Android development",
        "Kotlin knowledge"
      ],
      "description": "Build a State of the Art Android App with this new course on Android development and Kotlin.\nMost tutorials and how to's show you the basics of app building, but they don't show you how to use the latest technologies and libraries.\nMost projects and jobs require you to know how to use the latest libraries. This is what this course is all about.\nThe purpose of this course is to give you a practical example of how to use these technologies, all while building a simple example app.\n\n\nWe will learn about:\nMVVM architecture using the Google recommended Android Lifecycle Extensions\nRetrofit and JSON for remote server communication\nRxJava as a reactive framework\nDagger2 for dependency injection\nJetpack navigation for navigating the user through the app screens\nJetpack Data Binding for building UI screens\nGlide for seamless image loading\nJetpack Palette for extracting colors from images\nUnit tests to test the application and make it stable and robust\nAnd we will build everything in Kotlin, the shiny new language that Google recommends\nIf you want to become an expert Android Developer, you need to know how to use these technologies.\nIf you want to build an app that scales and is robust, these technologies will make your life easy in the long term.\n\n\nSign up today, and let's learn how to properly build a State of the Art Android Application.",
      "target_audience": [
        "Beginner Android developers",
        "Students with an interest in mobile development"
      ]
    },
    {
      "title": "The Complete Android Kotlin Developer Course | Kotlin A-Z™",
      "url": "https://www.udemy.com/course/the-complete-android-kotlin-developer-course-kotlin-a-ztm/",
      "bio": "Kotlin | Learn android app development from scratch, develop android app with kotlin and become kotlin android developer",
      "objectives": [
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is popular for both Android developers and Java developers.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "kotlin",
        "android kotlin",
        "android app development with kotlin",
        "android application development",
        "android ecommerce app",
        "android game development",
        "app android",
        "android app design",
        "mobile app development",
        "mobile development",
        "android development",
        "What is Kotlin",
        "Kotlin Programming Language",
        "Kotlin Android Fundamentals",
        "Java Development Kit - JDK",
        "Android Studio",
        "Variables in Android Kotlin",
        "Kotlin Data Types",
        "Type Conversions in kotlin for android",
        "Arrays in The complete Android Kotlin Developer Course",
        "Operators in android app development kotlin",
        "Control Flow Statements",
        "Loops in Android App Development",
        "All concepts of Object-Oriented Programming",
        "kotlin java",
        "android studio kotlin",
        "kotlin for java developers",
        "java kotlin",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Learn the most used operating system on the planet",
        "Learn Android App Development using the Kotlin programming language",
        "Learn the latest version of Android",
        "Android Studio",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "Start from scratch and become a professional Android App developer",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "Android app, android application development",
        "android"
      ],
      "course_content": {
        "Introduction to The Complete Android Kotlin Developer Course | Kotlin A-Z™": [
          "What Will You Learn In This Kotlin Android Course",
          "Kotlin Overview",
          "Some Information about Android Ecosystem",
          "Basic Programming Terms",
          "Project Files",
          "Documents",
          "FAQ about The Complete Android Kotlin Developer Course",
          "Quiz"
        ],
        "Environment Setup in Android Studio Kotlin": [
          "Install Java on Windows",
          "Install Java on Java",
          "Android Studio Installation - Part 1",
          "Android Studio Installation - Part 2",
          "Creating a New Project on Android Studio",
          "Android Studio Interface",
          "Quiz"
        ],
        "Fundamentals of Kotlin": [
          "First Kotlin Program",
          "Variables in Kotlin",
          "Data Types in Android Kotlin",
          "Type Conversions",
          "String Data Types",
          "Arrays in android app (kotlin)",
          "ArrayList",
          "Set",
          "Map",
          "Quiz",
          "Quiz"
        ],
        "Operators in Kotlin": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Unary Operators",
          "Equality and Relational Operators in ktln",
          "Conditional Operators in kotlin",
          "Operator Precedence in Kotlin",
          "The “rangeTo()” Function and “in” operator",
          "Console Input",
          "Quiz"
        ],
        "Control Flow Statements in Kotlin": [
          "If-Else Statement",
          "If-Else - If Ladder Statement, Nested If Statement",
          "Kotlin: When Statement",
          "Quiz"
        ],
        "Loops in Kotlin": [
          "Kotlin: For and For Each Loops",
          "Kotlin: While and Infinite Loop",
          "Kotlin: Do-While Loop",
          "Quiz"
        ],
        "Functions in Android Kotlin": [
          "Kotlin: Functions",
          "Types of Functions",
          "Quiz"
        ],
        "Kotlin: Object Oriented Programming (OOP)": [
          "Object and Class in Kotlin",
          "Access (Visibility) Modifiers",
          "Naming Convention",
          "Constructor - Part 1",
          "Constructor - Part 2",
          "Encapsulation",
          "Inheritance",
          "Function Overriding",
          "Abstract Classes",
          "Interfaces",
          "Quiz"
        ],
        "Introduction to Android App Development": [
          "Installing Android Virtual Device (AVD - Emulator)",
          "Enabling Virtualization (VT-x or AMD-V, SVM) in BIOS",
          "Installing Genymotion Emulator",
          "General Information About Gradle Build System",
          "Introduction to Manifest File in android app development",
          "Introduction to resources (Strings, Drawables etc)"
        ],
        "Android Components": [
          "Layouts in Android App",
          "Constraint Layout in Android 11",
          "Textviews in Android App Development",
          "Buttons in Android",
          "Edittexts Android app",
          "ImageView in Android",
          "CheckBox in Android",
          "Radio Buttons in Android App Development",
          "Toggle Buttons in Android",
          "Spinner in Android App Development",
          "Creating Top App Bar (Toolbar - Action bar)",
          "Adding Menu Items to Toolbar",
          "quiz"
        ]
      },
      "requirements": [
        "No prior android kotlin knowledge is required",
        "No Kotlin coding knowledge required",
        "Watching the course videos completely, to the end and in order",
        "Determination to learn and patience for Kotlin",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We prefered Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Watching the Android course videos completely, to the end and in order."
      ],
      "description": "Hi there,\nWelcome to The Complete Android Kotlin Developer Course | Kotlin A-Z™ course.\nKotlin | Learn android app development from scratch, develop android app with kotlin and become kotlin android developer\n\nKotlin is popular for both Android developers and Java developers. Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to the language, Udemy has a top-rated course to help you achieve your goals.\nKotlin is a very new and up-to-date programming language. Kotlin android is accepted by Google as the official language for Android development. Therefore, it is a language that everyone who wants to be an android developer should know. In this course, we teach Kotlin programming language from beginner to advanced level, considering the importance of Kotlin.\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nIf your answer is “yes” , you are at the right place!\n\nI really like the approach of this course about the Android app. In this course, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nChances are, you’ve heard of Android many times, and Do u want to android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or denies permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\nMy \"Android App Development Course with Kotlin\" course will take you from beginner to advance level.\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course. In this course, you will learn Android app development step-by-step. While doing kind of show and tell in our lectures we are also explaining whys. During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 2 major apps.\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\nIn this course you will learn;\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nPublishing Your App on Google Play and moreWhat Kotlin is and how it works,\nProgramming Fundamentals with Kotlin,\nAndroid Studio\nJava Development Kit – JDK\nVariables in android kotlin\nKotlin Data Types\nArrays in kotlin for android\nOperators in android app development kotlin\nControl Flow Statements\nLoops in android studio kotlin\nFunctions\nKotlin for java developers\nAll Concepts of Object-Oriented Programming such as Class, Object, Constructor, Encapsulation, Inheritance etc.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow latest trends.\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the The Complete Android Kotlin Developer Course | Kotlin A-Z™ course.\nKotlin | Learn android app development from scratch, develop android app with kotlin and become kotlin android developer",
      "target_audience": [
        "Anyone who is planning job transformation and want to become a Kotlin developer",
        "Anyone who wants to learn important subjects of kotlin android",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Those who want to develop an Android mobile application with Kotlin",
        "Who wants to improve their existing Android App Development Kotlin knowledge",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications using the Kotlin programming language",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "Anyone who would like to work from anywhere in the world",
        "Anyone who wants to learn the most up to date android",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application."
      ]
    },
    {
      "title": "Xamarin iOS - A Master Guide to App Development in C#",
      "url": "https://www.udemy.com/course/xamarin-ios-the-master-guide/",
      "bio": "Complete Xamarin.iOS Reference for Building iOS Apps in C#. Web Calls, Images, Controls, Animations and Much More!",
      "objectives": [
        "Understand how to make Xamarin iOS Apps",
        "Be able to leverage the most common coding requirements for Xamarin iOS Apps",
        "Work with web calls",
        "Work with Xamarin Designer"
      ],
      "course_content": {},
      "requirements": [
        "You will need a Mac or an OS X virtual machine to compile iOS apps",
        "You will need an internet connection"
      ],
      "description": "*************\nReleased End of April 2016 this course contains up to date instructions on creating fantastic iOS apps using the latest version of Xamarin\n*************\nThis course is designed to be the complete reference guide for building apps in Xamarin.iOS. I will teach you iOS specific lessons that cover most of the code you will ever need!\nTake this course and you will go from beginner to completely proficient. No more translating of Objective-C or Swift code to try make your Xamarin.iOS application work. Now you have all the C# and .Net coding answers contained in this course!\n*************\nForget the $2000 fee at Xamarin University, get the same information here for a fraction of the cost!\n\nWhat You'll Learn:\nBasic C# (optional)\nMake your First Xamarin.iOS App\nBasic UI Elements on iOS\nAdvanced UI Elements on iOS\nXamarin Designer for iOS\nTable Views (scrolling lists)\nCollection Views\niOS Specific Layouts\nEvent, Protocols and Delegates\nForeground and Background Threading\nResources and Images\nApp Icons and Launch Screens\nSimple and Advanced Animation Techniques\niOS File System Structure\nReading and Writing Directories and Files\nWorking with JSON\nMaking Web Calls\nAnd SO MUCH MORE!\nJoin now and upgrade your app development skills!",
      "target_audience": [
        "Beginners can take this course (but please complete the C# training section)",
        "All newcomers or novices to Xamarin can take this course"
      ]
    },
    {
      "title": "iOS 12: Learn to Code & Build Real iOS 12 Apps in Swift 4.2",
      "url": "https://www.udemy.com/course/ios-12-learn-to-code/",
      "bio": "Master iOS 12 development with Swift 4.2 building full-stack apps in this brand new course. Incl. Core ML 2 & ARKit 2!",
      "objectives": [
        "Build full-scale iOS 12 apps",
        "Become a Swift 4 programmer",
        "Submit your app to the App Store!",
        "Develop Augmented Reality apps using the newest ARKit 2 framework",
        "Develop CoreML 2 apps",
        "Learn how to build apps with Firebase",
        "Learn basic to intermediate iOS development"
      ],
      "course_content": {
        "Introduction": [
          "Intro to Course",
          "Installing Xcode 10",
          "Your First iOS App : Part One",
          "Your First iOS App : Part Two",
          "Choose Your Own Adventure!",
          "READ THIS: How to get help",
          "Meet your instructor: JonnyB",
          "Meet your instructor: Caleb",
          "Our Stories - Optional reading",
          "Xcode 11 Updates",
          "Xcode 11 Updates (Text)"
        ],
        "Intro to Swift 4": [
          "Welcome to Swift!",
          "Intro to Section",
          "Variables & Constants",
          "Strings",
          "Numbers",
          "Booleans"
        ],
        "Xcode and AutoLayout": [
          "Xcode Tour Part 1",
          "Xcode Tour Part 2",
          "AutoLayout: The Problem",
          "Beginner AutoLayout",
          "Alignment",
          "Layout Challenge",
          "LoginScreen AutoLayout",
          "Images in iOS and where to get image resources",
          "Images in iOS Links",
          "StackViews",
          "StackViews Challenge Solution",
          "Scroll Views",
          "Designing for iPhone X"
        ],
        "Intro to Swift 4 Continued": [
          "Arrays",
          "Dictionaries",
          "Functions",
          "Control Flow & Loops"
        ],
        "AutoLayout & Swift In Practice": [
          "BingeBot – Intro to App",
          "BingeBot – Building User Interface",
          "BingeBot – Adding Shows to BingeBot",
          "BingeBot – Selecting Random Show",
          "BingeBot Challenge"
        ],
        "Intermediate Swift": [
          "Swift Optionals",
          "Classes",
          "Class Initializers",
          "Computed Properties and Observers",
          "Structures",
          "Class v Struct",
          "When to use class or structure articles",
          "Inheritance",
          "Enumerations"
        ],
        "Model-View-Controller (MVC)": [
          "You down with MVC?",
          "Controller",
          "View",
          "Model"
        ],
        "GoodEatins: TableView and CollectionViews": [
          "Intro to GoodEatins",
          "Data Set for GoodEatins",
          "Project Setup and DataModel",
          "NavigationController and TableView",
          "Protocols and Delegates Part 1",
          "Protocols and Delegates Part 2",
          "Implementing TableView",
          "Delegates and Protocols Further Explained",
          "Passing Data in PrepareForSegue",
          "Xcode 11 Update for Collection View Cell",
          "Setting up UICollectionView",
          "CollectionView Protocols",
          "RecipeDetailVC"
        ],
        "StarTrivia: Web requests and APIs": [
          "Intro to StarTrivia",
          "SWAPI is dead, long live SWAPI",
          "StarTrivia Project Setup",
          "Adding Custom Font to Project",
          "Creating the MainBio",
          "Custom Views",
          "Web Requests and APIs",
          "Postman",
          "URLSession",
          "Parsing JSON Manually",
          "Swift Closures",
          "Additional Closures Information",
          "Completion Handlers",
          "Updating Person UI",
          "CocoaPods",
          "Alamofire Requests",
          "Parsing with SwiftyJSON",
          "Codable",
          "Creating Button Assets",
          "Segue Buttons Layout",
          "FadeEnabledButton",
          "Setting up additional VCs",
          "Passing Person Data",
          "Creating Homeworld UI",
          "Homeworld Data",
          "Vehicles UI",
          "VehiclesAPI",
          "PreviousNext Buttons",
          "Starships Challenge",
          "FilmsUI",
          "FilmsAPI",
          "StarTrivia Finale",
          "Progress Indicator"
        ],
        "Artable: eCommerce app with Firebase and Stripe": [
          "Intro to Artable eCommerce App",
          "Legalize Stuffs",
          "Artable Project setup",
          "Creating the Login UI",
          "Creating the Register User UI",
          "A note about the CocoaPods",
          "Adding the CocoaPods",
          "Integrating Firebase",
          "Registering new users",
          "Password Matching",
          "Constants",
          "Custom Views",
          "Logging in Users",
          "Setting up HomeVC",
          "Firebase User Additional Info",
          "Anonymous Login and Linking",
          "Firebase Error Handling",
          "Additional Error Handling",
          "Forgot Password Feature",
          "Forgot Password Feature Solution",
          "Housekeeping",
          "CategoriesVC UI",
          "Category Cell",
          "ProductsVC UI Setup",
          "Product Cell XIB",
          "Displaying Products",
          "Segues and Cleanup",
          "Intro to Firestore",
          "Initializing Firestore Database",
          "Kingfisher",
          "Fetch Single Document",
          "Improved Parsing",
          "Fetching Multiple Documents",
          "Realtime Updates",
          "Document Changes Part 1",
          "Firestore Cache",
          "Document Changes Part 2",
          "Queries and Ordering",
          "Finishing Up HomeVC",
          "Products Firestore Challenge",
          "Fetching Products",
          "Product Document Changes and Query",
          "Product Detail View Part 1",
          "Product Detail View Part 2",
          "Admin App Category VC",
          "Category Image Picker",
          "Intro To Cloud Storage",
          "Uploading Image to Cloud Storage",
          "Adding New Category To Firestore",
          "AdminProductsVC Setup",
          "Edit Category",
          "AddEdit Products UI and Challenge",
          "AddEdit Product Image Upload",
          "New Product Firestore Document",
          "New User Document",
          "UserService",
          "Selecting Favorite Products",
          "Intro to Firebase Cloud Functions",
          "Initializing Cloud Function Project",
          "Intro to Stripe",
          "Creating Stripe Customer Part 1",
          "Creating Stripe Customer Part 2",
          "Checkout Cart UI",
          "Stripe Cart",
          "Displaying Cart Items",
          "Display Payment Details",
          "Add and Remove Cart Items",
          "Create Ephemeral Key",
          "StripeApi Class",
          "Customer and Payment Context",
          "PaymentContextDidChange",
          "PaymentContext DidFailToLoad",
          "Client Side Payment Process",
          "Create Charge Cloud Function",
          "Fixing the Admin App",
          "Firestore Security Rules",
          "Updates, clean up, and guest experience",
          "Artable Conclusion",
          "Source Code",
          "Updates to Stripe and Source Code!!"
        ]
      },
      "requirements": [
        "Must have a computer running macOS High Sierra or Mojave (for some sections)",
        "Should have Xcode 10 installed",
        "The desire to learn and become an iOS developer!"
      ],
      "description": "Welcome to the iOS 12 Masterclass.\nThis course teaches you how to build beautiful iOS 12 apps using the latest in Swift 4.2. This course is designed to be super accessible to beginners, so don’t worry if you don’t have any programming experience.\nThe course includes tons of engaging video tutorials and builds your programming know-how through project based learning. Build real iOS apps to build your portfolio, worthy of submission to the App Store.\nAll content is brand new with no reused material from iOS 10 or iOS 11 courses. All recorded on the latest version of Xcode 10. We cover Apple's updated ARKit 2 for building Augmented Reality apps as well as Core ML 2 & Create ML for creating apps that think with Machine Learning. You'll generate your own machine learning models that use Artificial Intelligence to recognize objects and faces in images and tone of voice in comments. You'll also be building 3D augmented reality apps that bring outer space into your living room and let you measure objects without any tools!\nBy the end of this course, you will be confidently programming in Swift 4.2 and be prepared to build your own apps or start a freelancing career as an iOS 12 developer.\nYou'll also create a portfolio of 15+ apps that you can show a potential employer.\nEnroll today, and get excited about:\nBuilding awesome apps including ones that use Firebase, Core Data, Cocoapods, machine learning and augmented reality\nAll the knowledge you need to start building any app you want\nWhy should you trust us with your time?\nTime is short. You have to make the most of every minute. If you wanted to watch boring instructors teaching outdated content, you’d be elsewhere.\nBy getting this course, you can relax knowing that everything we’ve created has been carefully designed and edited. We have put a lot of time and thought into each lesson to make sure they are easily digestible, even for beginners. There are animated lessons that explain some of the tricky concepts with practical examples and we're always available to answer student questions.\nBy the end of the course, you'll completely understand:\nWhat’s new in Swift 4 and Xcode 10: Perfect for experienced developers who want to get up to speed.\nObject Oriented Programming (OOP): Variables and constants, functions and loops, inheritance and polymorphism, optionals and enumerations, classes and protocols.\nControl Structures: Using if/ else clauses, switch statements, and boolean logic to control the flow of execution.\nData Structures: How to work with collections like arrays and dictionaries.\nSoftware Design: How to organize and format clean code for optimal readability and how to implement the Model-View­-Controller (MVC) design pattern.\nTableViews & CollectionViews: How to display and update information in UITableView and UICollectionView\nNetworking: How to make asynchronous calls to RESTful APIs, store and retrieve data from the Internet, and use the JSON format for working with data.\nPersistent Local Data Storage: How to use Core Data, Codable, and User Defaults to store your app data locally. (Upcoming)\nCreate an eCommerce app using Firestore, Firebase, Cloud Functions and Stripe (COMPLETED! 16 hours!)\nMachine Learning: Build apps that use artificial intelligence and build your own machine learning models using the new Core ML 2 and Create ML frameworks.\nAugmented Reality: Play with 3D objects in augmented reality and create breathtaking animations and real-life interactions using the updated ARKit 2 framework.\nSubmitting Apps to the App Store: Learn how to create certificates and deploy your apps to the App Store.\nSee what our past students had to say about our other content:\nSTUDENT REVIEWS\n\"Caleb's approach to presenting the concept concepts contained within the iOS 12 platform is truly unique.  He not only has the command of all the subject matter he teaches, but his jovial disposition and subtle humor make this series a worthwhile investment.  Typically, you would be searching for hours to hit all of these topics, and to find it all in one spot, is a great, great value” –Douglas Spencer\n\"I've taken several courses taught by Jonny, including for iOS, macOS, and Android.  He is a very down to earth instructor that makes learning enjoyable.  He takes the time to make sure you understand the topics he is teaching.  And it doesn't stop when the videos end.  He is very active with his community of students on social media and is more than happy to provide extra help when asked.   It's been a pleasure to learn new things with Jonny!” – Keli’i Martin\n\"Super excited to be jumping back into iOS development at the same time that Caleb and Jonny are branching out on their own. I’ve taken courses taught by them before and found the content to be first-rate and if I ever had a question about a topic I was struggling to understand they were always happy to help.” – Conor Howard\n“Jonny B is an excellent teacher and mentor. He produces high quality content that makes hard topics easy to digest. Jonny is always open to taking on student questions and answers promptly.” – Dr. Chris Le Brese (Senior Android Engineer – 5 years experience)\nWe're so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! Sign up today with ZERO risk and SO MUCH to gain.\nWhat are you waiting for? Click the 'Buy Now' button and happy coding!",
      "target_audience": [
        "Beginners to coding",
        "Beginners to iOS app development",
        "Android developers who want to learn iOS",
        "Web developers who want a mobile experience for their web products"
      ]
    },
    {
      "title": "Build ChatGPT App for iOS/macOS with SwiftUI in 1 Hour",
      "url": "https://www.udemy.com/course/build-intelligent-apps-for-macos-and-ios-with-chatgpt/",
      "bio": "Learn to Leverage AI and Natural Language Processing in Your macOS and iOS Applications with ChatGPT",
      "objectives": [
        "How to build macOS and iOS apps that integrate with ChatGPT",
        "Details of integrating ChatGPT into the apps using OpenAISwift library",
        "Authentication, API endpoints, and user interface design for ChatGPT integration",
        "Design and build a toolbar app for macOS that can be accessed from the menu bar"
      ],
      "course_content": {},
      "requirements": [
        "Experience with Swift Language",
        "Experience with SwiftUI Framework",
        "Experience with Core Data Framework"
      ],
      "description": "In this course, you will learn how to build powerful apps for both macOS and iOS that integrate with ChatGPT, a state-of-the-art natural language processing technology. We will guide you through the process of building the apps using SwiftUI, a modern and intuitive user interface framework.\nWe will dive into the details of integrating ChatGPT into your app using OpenAISwift library, covering topics like authentication, API endpoints, and user interface design.\nFor macOS, we will focus on building a toolbar app that can be easily accessed from the menu bar. You will learn how to design and build a user-friendly interface that integrates ChatGPT, allowing users to quickly and easily access the app's features.\nFor iOS, we will focus on building a chat app that can be used on mobile devices. You will learn how to design and build a fully functional chatbot that integrates ChatGPT, allowing users to communicate with the app using natural language.\nBy the end of this course, you will have the skills and knowledge you need to build powerful macOS and iOS apps that integrate ChatGPT, giving you a powerful tool for natural language processing and chatbot development. Whether you're an experienced macOS or iOS developer or just starting out, this course will provide you with valuable skills and insights that you can apply to your own projects.\nEnroll now and start building your own ChatGPT-powered apps!",
      "target_audience": [
        "macOS and iOS developers who want to learn how to integrate ChatGPT into their apps",
        "Beginners who are interested in learning macOS or iOS app development, as well as natural language processing and chatbot development."
      ]
    },
    {
      "title": "Build Real World Application with Xamarin Forms Part 2",
      "url": "https://www.udemy.com/course/build-real-world-application-with-xamarin-forms/",
      "bio": "Learn Xamarin Forms Real World Application From Beginning to End. Using Xamarin Forms, Web Api's and Microsoft Azure!",
      "objectives": [
        "Be able to build any app you want in xamarin forms",
        "Work as a freelance xamarin forms developer",
        "Create your first xamarin forms real world application",
        "Build fully-fledged apps for your startup or business",
        "Create & Consume Restful api's",
        "Implement Security inside the Rest api's"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with C#. Because knowledge of C# is must for this course.",
        "You need a windows OR mac machine for development.",
        "No paid software required for App Development but you need a Microsoft Azure Trial for api deployment purpose."
      ],
      "description": "Welcome to the Real World App Development course with Xamarin Forms.\nWell , Are you tired of boring outdated and incomplete courses , then let's dive in to this course. I'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of real world application in Xamarin Forms. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in Xamarin Forms.\n\nThis courses teaches you how to code using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms.\nIf you don't have any idea about Rest Api then don't worry because in this course along with the Xamarin Forms App Development we'll also create our Real world Rest Api's.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to create a Rest Api via Entity Framework Code First Approach with all the advanced functions including (HTTP Verbs , Status Codes , Validations and much more).\nImplement Authentication and Authorization and secure your Api with Access Token.\nCreate A Real World Api that you'll use in this course.\nCreate SQL Database on Microsoft Azure\nDeploy Web Api on Microsoft Azure\nUnderstand the basics of Xamarin Forms that you'll use to build the Real World Project.\nCreate a Complete Real World Application in Xamarin Forms From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Project in Xamarin Forms happily)\nImplement All the Login , Registration , Logout functionality in Xamarin Forms and Make the Application Real Time via Rest Apis.\nHow to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nMake application user friendly by applying Splash and Icons.\n\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos courses. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. In this course you'll get a best instructors with carefully crafted content, beautiful outline and proper structured material and learning by doing.\nI'll explain you each and every single line of code. I've been in your shoes and every time copy and paste is not a solution and that's why I've tried to create everything in front of you so that you can learn how to solve the errors. We'll learn every thing from scratch.\nAnd before this course you don't need my other courses. If you're a C# developer and you think you can easily pick the Xamarin Forms concepts easily then you should go ahead with this course.\nAfter this course you'll be very much familiar with Xamarin Forms and you'll be able to create any kind of real world application in xamarin forms quite easily as well as efficiently.\nSign up today, and look forward to:\nOver 5 hours of HD 720p video content\nBuilding a Real World fully-fledged application including ones that use Rest Api , Access Token , Authentication , Authorization, Media Plugin and much more.\nAll the knowledge you need to start building any app you want\nHundreds of dollars worth of design assets\n$5000+  in person app development bootcamp course materials and curriculum.\n\n\nRemember...\nAfter this course you'll get all the Xamarin Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you but you need your personal Azure Portal where you can launch your web api and test it in Xamarin Forms Application. In this course I've used my personal Account and I'll not give the access to the api that's hosted on my Azure Portal.\nBut don't worry  inside the course I'll tell you how you can get the $200 Azure balance for one month.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First Complete Real World App Development Course with Xamarin Forms.",
      "target_audience": [
        "If you're a C# programmer , then take this course.",
        "If you are an intermediate xamarin developer, then take this course to get up to speed quickly with xamarin forms and native app development.",
        "If you are a pro xamarin developer and want to learn more advanced concepts with quick pace then take this course.",
        "If you're are already familiar with Xamarin Forms , C# , XAML then take this course."
      ]
    },
    {
      "title": "Build Real World Application with Xamarin Forms Part 3",
      "url": "https://www.udemy.com/course/build-real-world-application-with-xamarin-forms-part-3/",
      "bio": "Learn Xamarin Forms Real World Application From Beginning to End.",
      "objectives": [
        "Be able to build any app you want in xamarin forms",
        "Work as a freelance xamarin forms developer",
        "Create your first xamarin forms real world application",
        "Build fully-fledged apps for your startup or business",
        "Consume Restful api's",
        "Consume Third Party UI Controls"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with C# and Xamarin Forms. Because knowledge of C# and Xamarin is must for this course.",
        "You need a windows OR mac machine for development."
      ],
      "description": "Welcome to the Real World App Development course with Xamarin Forms.\nAre you tired of boring outdated and incomplete courses , then let's dive in to this course.Well I'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of real world application in Xamarin Forms. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in Xamarin Forms.\n\nThis courses teaches you how to code using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a real world application with xamarin forms.\nConsume Rest Api's with Api key's.\nConsume third party controls in xamarin forms.\nCreate multi column list in xamarin forms.\nCreate a Complete Real World Application in Xamarin Forms From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Project in Xamarin Forms happily)\nHow to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nMake application user friendly.\n\n\nRemember...\nAfter this course you'll get all the Xamarin Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you. In this course I've used my personal Syncfusion Account and I'll not give the access to the Syncfusion Key.\nBut don't worry  inside the course I'll tell you how you can get the FREE life time syncfusion license without any credit or debit card.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First Complete Real World App Development Course with Xamarin Forms.",
      "target_audience": [
        "If you're a C# programmer , then take this course.",
        "If you are an intermediate xamarin forms developer, then take this course to get up to speed quickly with xamarin forms and native app development.",
        "If you are a pro xamarin developer and want to learn more advanced concepts with quick pace then take this course.",
        "If you're are already familiar with Xamarin Forms , C# , XAML then take this course."
      ]
    },
    {
      "title": "How To Make App For Iphone, Android, Kindle Without Coding",
      "url": "https://www.udemy.com/course/how-to-make-app-for-iphone-android-kindle-within-10-min/",
      "bio": "Iphone, Ipad, Amazon Kindle & Android Applications development tutorial with no technical skills required!",
      "objectives": [
        "learn how to make apps for iphone",
        "learn how to make apps for iPad",
        "learn how to make apps for Android",
        "learn how to make apps for Amazon Kindle",
        "learn how to market aps",
        "learn how to monetize apps"
      ],
      "course_content": {},
      "requirements": [
        "Dedication to study and learn materials in this super course"
      ],
      "description": "Start Making ANY Applications\nFor iPhone, iPad, Android & Amazon Kindle Within a Couple\nof Minutes With Super-Easy System and Start Your\nHosting Apps Business With No RISK and No Upfront Costs\n\nIn this crash course you will learn SUPER tricks & AWESOME\nmethods to MAKE AND MARKET Applications in just couple Minutes!\n\nYou Get 9 Videos + PDFs + Screenshots + Source Files of\nSuper Core Training\n\nModule 1:\nWhy to start A Business with Apps?\n\nModule 2:\nWhere is Money?\nWe show the best ways for you to make with apps\nas soon as possible. From very basic metod to super\nhot ones with recurring income!\n\nModule 3:\nHow to Build Apps For Any Device Without Technical Skills,\nMac Coputer and Even Developers Accounts within couple\nminutes! In this module, you will learn how even a little\nchild can make great applications for any device!\n\nModule 4:\nReal Case Study With Great Techniques During the Creation of an\nApplication\n\nModule 5:\nHow to Create Developers Accounts\n\nModule 6:\nWhat is IEO and why you need to use it? How to submit your apps to Itues?\n\nModule 7:\nHow And Which Marketing Tools To Use For Your Apps?\n\nModule 8:\nHow To Use Paid Marketing Methods?\n\nModule 9:\nWhat's Next? Super Secret Method to make money\nwith applications!",
      "target_audience": [
        "beginners",
        "medium level students"
      ]
    },
    {
      "title": "Android 50: Crash Course into Android Development",
      "url": "https://www.udemy.com/course/android-course-for-extreme-beginners/",
      "bio": "An Android course that will build the ground knowledge. Tailored for non-programmers and extreme beginners.",
      "objectives": [
        "Creating user interfaces using XML syntax",
        "Properties of Android Views and ViewGroups",
        "Transferring a screen design into an Android app",
        "Fundamental programming concepts in Kotlin",
        "Adding simple user interactions to the app",
        "Creating simple Android apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Overview"
        ],
        "Create a User Interface": [
          "Views",
          "XML",
          "Download Android Studio",
          "Intro to Android Studio",
          "Playing with TextView",
          "Running Apps",
          "ImageView",
          "ImageView Quiz",
          "Button",
          "ViewGroups",
          "LinearLayout",
          "Spacing Views",
          "RelativeLayout",
          "LinearLayout vs. RelativeLayout",
          "Nesting Layouts"
        ],
        "Project: Cafe 50": [
          "Understanding the Design",
          "Coding the Screen",
          "Adding ScrollView"
        ],
        "Recap": [
          "First Recap"
        ],
        "Assignment I": [
          "Cafe 50 Product Screen"
        ],
        "Congrats": [
          "Congrats"
        ],
        "Making Your Apps Interactive": [
          "Kotlin",
          "Instructions",
          "Event Based Programming",
          "2021 Update: Kotlin Android Extensions",
          "Reacting to a Click",
          "Accessing Properties",
          "Setting a Click Listener",
          "Need for Memory",
          "Variables",
          "Types",
          "Literals",
          "Arithmetic Operations",
          "Strings",
          "Building a Click Counter"
        ],
        "Assignment II": [
          "Football Score Tracker"
        ],
        "Working with Conditions": [
          "Conditions",
          "Showing a Conditional Message",
          "Combining Conditionals"
        ],
        "Clicker Game": [
          "Understanding the Requirements",
          "Transferring Screen Design",
          "Implementing Upgrade Logic",
          "Calculating Money Gain"
        ]
      },
      "requirements": [
        "A computer that can run Android Studio",
        "Internet connection"
      ],
      "description": "Finally!\nA quality and content-rich Android development course targeting NON-PROGRAMMERS!\nIf you haven't written a single line of code before and want to start a career in Android apps development, then this course is for you!\nIf you are a beginner and know one or two things about programming or Android, then it's also a great opportunity for you to make a fresh start and build knowledge on a good ground.\n--\nThis course is crafted after years of teaching / mentoring Android to beginners and tries to reach out to people who have some concerns starting a career in tech industry.\nStarting from the easy topics and finally building upon the ground knowledge, this course is ideal if you are curious if you can start a career in Android Development.\n--\nWhat does this course teach?\nThis course has two main modules:\n1. Creating a User Interface\nIn this first half of the course, you will be able to transfer a complex screen design into an Android app. You will learn concepts like: TextView, ImageView, Button, LinearLayout, RelativeLayout and ScrollView.\nYou will have a good understanding of common View properties such as background, margin, padding, width, height and will be able to use View specific properties like text, backgroundTint, textSize, textColor, src, scaleType and more.\nYou will have a basic understanding of Android Studio tooling and you will learn how to navigate yourself in your projects, how to use code and design tabs and how to run apps in your Android device or in an emulator.\n2. Making Apps Interactive\nIn the second half of the course, you will able to write you first lines of Kotlin code to bring apps into life. You will learn about Kotlin, how computers run code, how to write code to make your apps interactive.\nYou will learn some fundamentals of programming to make your apps interactive:\nvariables\nliterals\ntypes\nstrings\narithmetic operations\nclick listeners\nand more!\nAssignments\nAs your instructor, I believe active learning, so I prepared mini-apps as assignments for you to practice and strengthen your knowledge.\nYou will code 2 mini-apps with me and 3 more all by yourself!\nSo at the end of the course you are going to have built 5 apps using the fundamental knowledge you learned!",
      "target_audience": [
        "Non-programmers",
        "People who have zero experience with programming",
        "Extreme beginners"
      ]
    },
    {
      "title": "Flutter E-commerce Bootcamp: Build Amazon Clone",
      "url": "https://www.udemy.com/course/flutter-e-commerce-bootcamp-build-amazon-clone/",
      "bio": "Master Flutter UI, Firebase, State Management, Payment Integration etc while Building an E-Commerce: Amazon Clone.",
      "objectives": [
        "Learn how to create a responsive UI for a mobile e-commerce app using Flutter, replicating the user-friendly design of the Amazon application.",
        "Discover to integrate Firebase into your Flutter app to handle backend support, including features like Authentication, Real-time database and cloud storage.",
        "Master mobile authentication techniques using Firebase Authentication to securely handle user sign-ups, logins and password resets within your Amazon clone app.",
        "Explore the implementation of Razorpay, a popular payment gateway, to enable seamless and secure transactions within your Flutter app.",
        "Gain essential knowledge in Flutter development while building a functional and feature-rich e-commerce app that mirrors the functionalities of the Amazon.",
        "Implementation of 15 different Flutter Packages"
      ],
      "course_content": {
        "Introduction": [
          "Know about this course"
        ],
        "Course Resourses": [
          "Course Resourses"
        ],
        "Auth Screens and Mobile Authentication": [
          "Sign In Screen UI",
          "Create Account Screen UI",
          "OTP Screen",
          "Configure Firebase for Mobile Authentication"
        ],
        "Home, You, Cart and Menu Screen UI Implementation": [
          "Home Screen UI Implementation",
          "You Screen UI Implementation",
          "Cart Screen UI Implementation",
          "Menu Screen UI Implementation"
        ],
        "Configure Firebase Firestore and Storage": [
          "Configure Firebase Firestore for User and Address Database",
          "Configure Firebase Firestore & Storage for Listing Products",
          "Listing Sellers Product in Seller home Screen",
          "Product Search Screen Implementation",
          "Product Details Display Screen Implementation",
          "\"Cart\" and \"Keep Shopping For\" Implementation",
          "\"Deal of the Day\" and \"Get Products by Category\" Implementation"
        ],
        "Payment Gateway": [
          "Implement Razorpay for payment Gateway"
        ],
        "Product Monitor for Seller": [
          "Product Monitor Screen implementation on seller section"
        ],
        "Take A challenge (Implement Rating Feature of the app)": [
          "Implement the Rating Feature"
        ]
      },
      "requirements": [
        "This course requires minimal prior knowledge as it aims to teach you how to create a responsive UI, implement Firebase for backend support, enable mobile authentication, and integrate the Razorpay payment gateway using Flutter."
      ],
      "description": "In this comprehensive course, you will embark on an exciting journey to create a fully functional e-commerce application using Flutter. By replicating the design and functionality of the renowned Amazon mobile application, you will gain hands-on experience in building a responsive user interface, integrating Firebase for backend support, implementing mobile authentication, and seamlessly integrating the Razorpay payment gateway.\nThe course begins by introducing you to the fundamentals of Flutter, ensuring that even with minimal prior knowledge, you can follow along and grasp the concepts effortlessly. You will learn how to design a visually appealing and user-friendly interface that adapts seamlessly to different screen sizes, providing an optimal user experience.\nMoving forward, you will dive into the realm of Firebase and explore its powerful features. You will implement Firebase Authentication to handle user login, ensuring the security and privacy of your app's users. Additionally, you will leverage Firebase's real-time database and cloud storage capabilities to store and retrieve product information, user data, and more.\nOne crucial aspect of any e-commerce app is the payment gateway integration, and in this course, you will integrate Razorpay to enable secure and convenient transactions. You will learn how to handle payment requests, process payments, and handle transaction status updates seamlessly within your app.\nThroughout the course, you will receive step-by-step guidance and explanations, ensuring a smooth learning experience. By the end, you will have developed a fully functional e-commerce app that closely resembles the features and functionalities of the Amazon mobile application.\nWhether you are an aspiring Flutter developer looking to enhance your skills or an entrepreneur aiming to build your own e-commerce platform, this course will equip you with the necessary knowledge and practical skills to achieve your goals. Join us today and start your journey towards becoming a Flutter e-commerce expert.",
      "target_audience": [
        "This course is perfect for aspiring Flutter developers who want to enhance their skills by creating a responsive UI, implementing Firebase backend support, enabling mobile authentication, and integrating the Razorpay payment gateway, with minimal prior knowledge required."
      ]
    },
    {
      "title": "Ionic 3 Apps for WooCommerce: Build an eCommerce Mobile App",
      "url": "https://www.udemy.com/course/ionic-3-apps-for-woocommerce-build-an-ecommerce-mobile-app/",
      "bio": "Build an eCommerce Mobile App from start to end using Ionic Framework 3 and WooCommerce using HTML, SCSS and TypeScript.",
      "objectives": [
        "Build Android and iOS Apps with Ionic Framework.",
        "Build and Deploy cross platform hybrid apps.",
        "Build eCommerce Apps with WooCommerce.",
        "Deploy WooCommerce locally and use it as a backend.",
        "Use Ionic Components and Native Features.",
        "Integrate PayPal Payment Gateway in Ionic/Cordova Apps.",
        "Publish an App in the Play Store.",
        "Integrate Push Notifications in Ionic Apps."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Project Files"
        ],
        "Introduction to Ionic Framework": [
          "Introduction to Ionic Framework",
          "Installing Node, Ionic and Cordova",
          "Creating and Running Ionic Apps in Browser",
          "Running Ionic Apps in Emulator and Device"
        ],
        "Introduction to WooCommerce and WooCommerce API": [
          "Introduction to WooCommerce",
          "Setting Up WooCommerce Locally",
          "Introduction to WooCommerce API"
        ],
        "Getting Started": [
          "Creating WooIonic: An Ionic 3 eCommerce App",
          "Restructuring the App"
        ],
        "Building App HomePage": [
          "Creating a Slider on Home Page",
          "Displaying Products on Home Page",
          "Autoplaying Products Slider",
          "Product List on Home Page",
          "Infinite Scrolling on Home Page"
        ],
        "Product Categories and Menu": [
          "Product Categories in Menu",
          "Icons and Images in Menu",
          "Displaying Products by Category",
          "Infinite Scroll on Category Pages",
          "Fixing Navigation using ViewChild"
        ],
        "Product Details Page": [
          "Creating the Product Page",
          "Product Images, Title and Description",
          "Displaying Product Specs",
          "Displaying Product Reviews"
        ],
        "Building the Cart": [
          "Implementing Cart using Storage",
          "Creating a Modal for Cart",
          "Displaying Products in the Cart",
          "Finalizing Cart"
        ],
        "The Sign Up and Login": [
          "Creating Signup Page",
          "Checking Email Validity",
          "Signing Up New Users",
          "Creating Login Form",
          "Logging User using JSON Auth API",
          "Changing Menu Items Dynamically"
        ],
        "The Checkout Page": [
          "Navigating to the Checkout Page",
          "Creating Checkout Form",
          "Prepopulating the Checkout Form",
          "Placing the Order",
          "Displaying Order Confirmation"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML, CSS and JS.",
        "Knowledge of Datatypes and OOP would be a plus.",
        "Introductory knowledge to Ionic 2 or TypeScript would be a plus.",
        "Knowledge of Apps and Mobile Operating Systems",
        "Programming Aptitude and Logical Thinking"
      ],
      "description": "Ionic 3 Apps for WooCommerce is a course that will help you understand the basics of the latest version of Ionic Framework, v3, and also walk you through, step by step, to build a complete eCommerce application for Android and iOS using your WooCommerce Store as the back-end. Ionic Framework v2 and v3 are similar, so even if you want to learn Ionic 2, you need the same course.\nThe eCommerce app that we will build in this course gets the products' information from the WooCommerce store. You do not need to setup any  extra databases or servers. All you need is just a WooCommerce store, either locally or on a remote server.\nDon't own a WooCommerce Store yet? You will learn how to setup a WooCommerce store for free on your own computer and then use it to build an eCommerce App. You do not need to buy any tool or software. The course uses all open-sourced technologies.\nYou will build an eCommerce app that will allow the user to browse through the product catalog, search products in a particular product category, add product to their cart and then pay for their orders. The customers can pay using the PayPal payment gateway as well. The users will get Push Notifications every time you publish a new product.\nThe orders will be received on the WooCommerce and then can be processed further by the shop admin. The app takes care of user authentication and only allows users with valid customer accounts to place orders. The app also allows new customers to sign up for an account.\nSo why wait? Build a complete eCommerce solution yourself and release your app in the play store whether you need to expand your skills or your business.",
      "target_audience": [
        "Students and Professionals willing to build Apps.",
        "Web Devs who are willing to expand their skills.",
        "Professionals who have web skills and want to build mobile apps.",
        "Students, Individuals, Devs who want to learn to build eCommerce Apps..",
        "Devs who wish to save time by building Hybrid Apps.",
        "Students who plan on building an out-of-the-box academic project."
      ]
    },
    {
      "title": "Dependency Injection in Android with Dagger and Hilt",
      "url": "https://www.udemy.com/course/dependency-injection-in-android-with-dagger/",
      "bio": "A complete guide to Dagger and Hilt dependency injection frameworks for Android development",
      "objectives": [
        "Master Dagger and Hilt dependency injection frameworks",
        "Understand the relationship between Dagger, Dagger 2 and Hilt",
        "Learn the fundamental theory of Dependency Injection in Android",
        "Discover the best practices of Android development using Dependency Injection, Dagger and Hilt"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fundamental Dependency Injection Techniques": [
          "Dependency Injection Terminology",
          "Fundamental Dependency Injection Techniques",
          "Comparison Between Fundamental Dependency Injection Techniques",
          "Dependency Injection Puzzlers and Large-Scale Structure"
        ],
        "Dependency Injection Architectural Pattern": [
          "Architectural Patterns",
          "Dependency Injection Architectural Pattern (DIAP)",
          "Fundamental Dependency Injection Techniques vs DIAP"
        ],
        "Tutorial Application": [
          "Tutorial Application Demo",
          "How to Get the Source Code of the Tutorial Application",
          "Tutorial Application Code Review",
          "Tutorial Application Refactoring Rationale"
        ],
        "Journey to Dependency Injection in the Tutorial Application": [
          "Extraction of the User Interface Logic into MVC View",
          "Exercise 1",
          "Base Class for MVC Views",
          "Extraction of the Domain Logic into Use Case",
          "Exercise 2",
          "Extraction of the Dialogs Management Logic into Dialogs Navigator",
          "Extraction of the Navigation Logic into Screens Navigator",
          "Model View Controller (MVC) Architectural Pattern",
          "Sharing an Instance of a Service among Multiple Clients",
          "Removing Unneeded \"Proxy\" Dependencies",
          "The Law of Demeter",
          "Refactoring the Use Case According to the Law of Demeter",
          "Exercise 3",
          "Application Composition Root",
          "Lazy Initialization of Services",
          "Activity Composition Root",
          "Exercise 4",
          "Exercise 4 Solution",
          "Runtime Construction Arguments",
          "Extraction of MVC Views Construction Logic into a Factory",
          "Exercise 5",
          "Presentation Composition Root",
          "Tutorial Application Refactoring Summary"
        ],
        "Pure Dependency Injection": [
          "Pure Dependency Injection",
          "The Main Benefit of Dependency Injection",
          "Context Isolation",
          "Objects vs Data Structures",
          "Injecting Services \"from Outside\"",
          "Convention Over Configuration (CoC)",
          "Dependency Injection Frameworks"
        ],
        "Dagger 2 Tutorial": [
          "Dagger 2",
          "Gradle Configuration",
          "Components and Modules",
          "Exercise 6",
          "Scopes",
          "Component as Injector",
          "Dependent Components",
          "Exercise 7",
          "Subcomponents",
          "Exercise 8",
          "Multi-Module Components",
          "Automatic Discovery of Services",
          "Provider Methods in Modules vs Automatic Discovery",
          "Workflow with Dagger",
          "Dagger Tutorial Summary"
        ],
        "Additional Dagger Conventions": [
          "Android Services and Dialogs",
          "Static Provider Methods and Component Builders",
          "Type Bindings",
          "Qualifiers",
          "Providers"
        ],
        "Dagger and ViewModel": [
          "ViewModel",
          "Incorrect ViewModel Integration",
          "Dedicated Factories for ViewModels",
          "Refactoring ViewModel Factories According to the Law of Demeter",
          "Centralized Factory for ViewModels",
          "Multibinding",
          "ViewModel with SavedState",
          "Why ViewModel is So Complex",
          "Simplification of ViewModel with SavedState"
        ],
        "Hilt": [
          "Hilt",
          "Hilt's Fundamental Assumptions",
          "How to Get the Source Code",
          "Hilt Gradle Setup",
          "Removing Dagger Components",
          "Hilt Injection Mechanics",
          "Installing Modules into Components",
          "Hilt Scopes",
          "Providing AppCompatActivity",
          "Hilt and ViewModel",
          "Hilt Summary"
        ]
      },
      "requirements": [
        "Hands-on Android development experience",
        "Basic knowledge of Kotlin"
      ],
      "description": "In this course you'll learn all about Dependency Injection in Android and master Dagger and Hilt Dependency Injection frameworks. By the end of the course, you'll acquire an expert-level knowledge and will be ready to use Dagger, Hilt or manual Dependency Injection in your own Android applications.\nA set of carefully designed, hands-on exercises will help you solidify your knowledge and allow you to practice using Dependency Injection in a controlled environment.\nThis course puts emphasis on professional, pragmatic and time-tested techniques and best practices. All the material that you'll learn has been thoroughly tested and evaluated in real production Android applications. You can even copy large parts of the source code from the tutorial application to your own projects to spare yourself much time and headache.\n\n\nProfessional grade\nFrom fundamentals to best practices\nNon-trivial examples\nHands-on exercises\nTutorial Android application on GitHub with step-by-step commits history for easier review\nMany developers spend weeks learning Dagger, but, unfortunately, some still give up in the process. This course will make your learning journey more efficient and enjoyable, ensuring that you acquire these valuable skills, which are in exceptionally high demand in the Android industry.\nSo, if you want to learn Dependency Injection, Dagger and Hilt to develop clean and maintainable Android applications - this course is for you.",
      "target_audience": [
        "Professional Android developers interested in mastering Dagger and Hilt"
      ]
    },
    {
      "title": "Build chatbots for Android using Dialogflow,Android studio",
      "url": "https://www.udemy.com/course/assistant-and-chatbots-for-android-using-dialogueflow/",
      "bio": "Develop your own Android Assistant and chatbots for Android using Dialogflow and NLP.Intelligent Android App Development",
      "objectives": [
        "How to develop their own Android virtual Assistant",
        "Build chatbots for Android using Dialogflow and Android Studio",
        "Build responsive Applications for Android",
        "Practical use of NLP(Natural Language Processing) in Android",
        "Build chatbot to answer common questions",
        "Chatbots to Launch Application and Games on Android",
        "Chatbot for doing web search on Android",
        "Build chatbots for making calls and sending SMS",
        "Build chatbot for opening Maps and Starting navigation on Android",
        "Use of API AI in Android App Development",
        "Explore Features of Dialogflow",
        "Integrate existing chatbot inside your own chatbot",
        "Integrate Dialogueflow chatbots in Android using Android Studio",
        "Combine different chatbots to build Assistant for Android"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "First DialogueFlow Agent": [
          "Creating First DialogueFlow Agent",
          "DialogueFlow Intents",
          "Set Assistant Name and Jokes",
          "Creating Android Application UI",
          "AI Service Code",
          "Getting user voice and showing Assistant response",
          "Record audio permission",
          "Adding voice for Assistant (TTS)",
          "Small Talk",
          "Testing Assistant"
        ],
        "Assistant Web Search Feature and Dialogueflow Entities and Context": [
          "Setting up Websearch Intent",
          "Coding and Testing Application",
          "Adding Context to Websearch",
          "Coding and Testing Application",
          "Dialogueflow Follow Up Intent",
          "Dialogueflow Required Field",
          "Dialogueflow Fallback Intent"
        ],
        "Assistant Apps and Games Launching Feature": [
          "Creating Application launch intent",
          "Coding Application",
          "Testing Assistant"
        ],
        "Assistant Making Calls Feature": [
          "Creating Call Intent",
          "Coding and Testing Application",
          "Testing Make Call Feature"
        ],
        "Assistant Sending SMS Feature": [
          "Creating Send SMS Intent",
          "Coding Application",
          "Testing Assistant"
        ],
        "Using Prebuilt DialogueFlow Chatbot and Maps Feature": [
          "Importing Pretrained Maps Chatbot"
        ]
      },
      "requirements": [
        "Basic Knowledge of Android Development"
      ],
      "description": "Requirements\nYou should have some basic knowledge of Android App Development using Java\nDescription\nIf you have basic knowledge of Android Development and want to build chatbots and smart Android Apps for Android you are at the right place.\nWelcome to the most comprehensive course for developing chatbots and building a Virtual Assistant for Android. Learn concepts, tools, and techniques that you will need to build fully functional chatbots for Android Devices.\nAfter completing this course you will be able to build chatbots for Android and add chatbots inside existing Android Applications. Apart from that, you will have your very own Assistant.\nCurriculum:\nIn this course, we will build our very own Assistant and chatbots for Android using Dialogflow and Android Studio. We will start by looking at Dialogflow API and the features it provides. Then we will build our first chatbot for Android using Dialogflow and Android studio. After that, we will learn about the different components of Dialogflow and build different chatbots. Our Assistant will be a combination of these small different chatbots.\nWe will firstly name our Assistant than we will build different chatbots and add them inside our Assistant. We will build chatbots for\nTelling Jokes\nDoing Websearch for us\nLaunching Application and Games\nSending SMS\nMaking Calls\nTranslating text\nAnswering common questions\nOpening Maps and starting  Navigations\nand much more\nFor each feature of our Assistant, we will build a chatbot and add it inside our Assistant. For each chatbot we will firstly train our Dialogflow agent then we will write the code to implement that feature in Android using Android studio.\n\n\nThis course features an ever-evolving project-based curriculum that will see new sections, case studies, and examples being added on a regular basis. This is critical because this technology space is growing by leaps & bounds and consequently this course aims to keep up with the pace. All of this comes with personalized help, hand-holding, and support.\nAnd even before reaching the end of the course, you will be able to build your very own Personal Assistant for Android which contains features of different chatbots. We will also explore prebuilt chatbots and customize them and add them inside our Android Assistant.\nAlmost all industries, ranging from entertainment, medicine, hospitality, performing arts, banking, aviation, and more are already eyeing the chatbot space to enhance customer engagement for business and marketing.\nThe bottom line is - we're at a stage in the evolution of chatbots where mobile apps were back in 2007 when Apple announced the first iPhone.\nGrab the opportunity today.\nJoin me, as we understand, design, and build our own Android Assistant and chatbots.",
      "target_audience": [
        "Beginner Android Developers want to develop smart Android Applications using Java and Android Studio",
        "Beginner Android developer want to build chatbots for Android using using Android studio",
        "Programmer want to develop their own Android virtual Assistant",
        "Developers interested in practical implementation of Natural Language Processing",
        "Programmers want to develop chatbots for Android"
      ]
    },
    {
      "title": "Kotlin Coroutines and Flow for Android Development",
      "url": "https://www.udemy.com/course/coroutines-on-android/",
      "bio": "The Complete Guide! Get a deep understanding of Kotlin Coroutines and Flow to use them successfully in your Android Apps",
      "objectives": [
        "Implement the most common use cases for Kotlin Coroutines and Flow on Android",
        "Get a deep understanding of Kotlin Coroutines and Flows",
        "Learn advanced Coroutine Concepts (Structured Concurrency, Coroutine Scopes and Contexts, internal workings, )",
        "Learn how to create Flows using different Flow builders",
        "Learn about Flow operators (lifecycle operators, intermediate operators, terminal operators)",
        "Learn about different kind of Flows (regular Flows, SharedFlows, StateFlows)",
        "Create a stock live-tracking app with Flows",
        "Learn when to use Channels in Android Development",
        "Understand the advantages of using Coroutines over Callbacks or RxJava.",
        "How to perform network requests with Retrofit sequentially and concurrently.",
        "How to use Room together with Coroutines.",
        "Background processing with Coroutines.",
        "Exception Handling and Cancellation in Coroutines and Flows.",
        "How to write Unit Tests for coroutine-based implementations"
      ],
      "course_content": {
        "Introduction": [
          "Extended Course Preview",
          "Course Structure and Goals",
          "How to get the source code of the Sample Project",
          "Basic Setup of Sample Project"
        ],
        "Different Approaches for Asynchronous Programming": [
          "Section Introduction",
          "What is Asynchronous Programming?",
          "Use Case Explanation",
          "Callback Implementation",
          "RxJava Implementation",
          "Coroutines Implementation",
          "Comparing Approaches",
          "Recap"
        ],
        "Coroutine Fundamentals": [
          "Section Introduction",
          "Routines and Coroutines",
          "Suspend Functions",
          "Coroutines and Threads",
          "Blocking VS Suspending",
          "Multithreaded Coroutines",
          "Internal Workings",
          "How delay() works",
          "Section Recap"
        ],
        "Performing Network Requests sequentially": [
          "Introduction",
          "Adding Coroutines to your project",
          "Coroutine Builders: Launch and RunBlocking",
          "Main-safety",
          "Basic error handling with try-catch",
          "Exercise 1",
          "Exercise 1: Solution",
          "Section Recap"
        ],
        "Performing Network Requests concurrently": [
          "Section Introduction",
          "UseCase description",
          "Implementing UseCase#3 in a sequential way",
          "The async coroutine builder",
          "Implementing UseCase#3 in a concurrent way",
          "Implementing UseCase#4 in a sequential way",
          "Exercise 2: Implementing UseCase#4 in a concurrent way",
          "Exercise 2: Solution",
          "Section Recap"
        ],
        "Higher-Order Functions": [
          "Implementing a timeout",
          "Implementing retries",
          "Extract retry logic into higher order function",
          "Add exponential backoff to retry",
          "Exercise 3: Combining retries and timeout",
          "Exercise 3: Solution",
          "Section Recap"
        ],
        "Using Room with Coroutines": [
          "Section Introduction",
          "UseCase description",
          "UseCase Implementation",
          "Section Recap"
        ],
        "Background Processing with Coroutines": [
          "Section Introduction",
          "UseCase explanation",
          "Implementation running on Main Thread",
          "Coroutine Context",
          "Coroutine Dispatchers",
          "Using withContext for context switching",
          "Coroutine Scope VS Coroutine Context",
          "Exercise4: Perform calculation in several Coroutines",
          "Exercise 4: Solution",
          "Performance Analysis",
          "Section Recap"
        ],
        "Structured Concurrency and Coroutine Scopes": [
          "Section Introduction",
          "The unhappy path",
          "Structured Concurrency",
          "Coroutine Scopes",
          "Building up the Job Hierarchy",
          "Parents wait for Children",
          "Cancellation of parent and child jobs",
          "Job and SupervisorJob",
          "Unstructured Concurrency",
          "GlobalScope",
          "ViewModelScope",
          "LifecycleScope",
          "Scoping Functions coroutineScope{} and supervisorScope{}",
          "Continue Coroutine execution when the user leaves the screen",
          "Section Recap"
        ],
        "Coroutines Cancellation": [
          "Cancelling Coroutines",
          "Cooperative Cancellation",
          "NonCancellable Code",
          "Making UseCase10 cooperative regarding cancellation",
          "Section Recap"
        ]
      },
      "requirements": [
        "No prior knowledge about Kotlin Coroutines or Flow needed, however you should be familiar with the Basics of Kotlin and Android, as well as some Android Jetpack Components (ViewModels, LiveData, Room) and Retrofit."
      ],
      "description": "Google recommends Kotlin Coroutines and Flow as the preferred solution for asynchronous programming on Android. Sooner or later, probably every  Android developer will get in touch with these topics.\n\n\nThis course will give you a deep understanding of Kotlin Coroutines and Flow and show how to implement the most common use cases for Android applications.\n\n\nThis course consists of two big parts: The Coroutines part and the Flow part.\nBefore being able to use Flows in our applications, we first need a solid understanding of Coroutines. That’s why Coroutines are covered first. However, if you already have some experience with Coroutines, then you can also start with the Flow part right away, and jump back to lessons of the Coroutines part whenever needed.\n\n\nIn the part about Coroutines, first, we will take a detailed look at the advantages of Kotlin Coroutines over other approaches for asynchronous programming, like RxJava and Callbacks.\n\n\nThen, we will talk about some theoretical fundamentals. These include:\nRoutines vs. Coroutines\nSuspend Functions\nCoroutines vs. Threads\nBlocking vs. Suspending\nMultithreaded Coroutines\nInternal workings\n\n\nNext, we will implement some of the most common use cases for Kotlin Coroutines in Android applications. These include:\nPerforming network requests with Retrofit sequentially and concurrently\nImplementing Timeouts and Retries\nUsing Room with Coroutines\nPerforming background processing with Coroutines\nContinuing Coroutine execution even when the user leaves the screen.\n\n\nTo improve your learning experience, this course also challenges you with several exercises.\n\n\nLearning Coroutines can be overwhelming because you need to learn a lot of new concepts. However, we are going to start simple and as our use cases will get more and more complex, we will learn about new concepts step-by-step. These new concepts are:\nCoroutine Builders (launch, async, runBlocking)\nCoroutine Context\nCoroutine Dispatchers\nStructured Concurrency\nCoroutine Scopes (viewModelScope, lifecycleScope, GlobalScope)\nJobs and SupervisorJobs\nscoping functions (coroutineScope{} and supervisorScope{})\nCooperative Cancellation\nNon-Cancellable Code\n\n\nWe will also make a deep dive into Exception Handling and discuss concepts like:\nexception handling with try/catch\nexception handling with CoroutineExceptionHandlers\nwhen to use try/catch and when to use a CoroutineExceptionHandler\nexception handling in Coroutines started with launch and async\nexception handling specifics of scoping functions coroutineScope{} and supervisorScope{}\n\n\nUnit Tests are very important for every codebase. In the course's final section, we will write unit tests for most of the coroutine-based use cases we implemented earlier. We will discuss concepts like\nTestCoroutineDispatcher\ncreating a JUnit4 Rule for testing coroutine-based code\nrunBlockingTest{} Coroutine Builder\nvirtual time\nTesting sequential and concurrent execution\nTestCoroutineScope\n\n\nIn the part about Kotlin Flow, we first cover all the basics. We will answer the question “What is a Flow?” and then we discuss the benefits and drawbacks of reactive programming.\n\n\nAfterward, we are going to have a look at different Flow builders and operators:\nbasic flow builders\nterminal operators\nterminal operator “launchIn()”\nterminal operator “asLiveData()”\nlifecycle operators\nintermediate operators\n\n\nIn our first real Flow use case, we use a Flow to create a live stock-tracking feature, that uses all the available basic flow components.\n\n\nIn the next module, we will take a look at Exception Handling and Cancellation with Kotlin Flow.\n\n\nIn the following module, you will learn about StateFlow and SharedFlow and the following concepts:\nhow to make Coroutines lifecycle-aware with the “repeatOnLifecycle()” suspend function\nHot Flows VS Cold Flows\nConverting Flows to SharedFlows with the “shareIn()” operator\nConverting Flows to StateFlows with the “stateIn()” operator\nWhen to use SharedFlow and when to use StateFlow\n\n\nNext, you will learn about Channels, how they differ from hot flows, and when they are useful in Android Applications.\n\n\nBy the end of this course, you will have a fundamental understanding of Kotlin Coroutines and Flows and be able to write readable and maintainable, asynchronous, and multithreaded Android Applications.",
      "target_audience": [
        "Android Developers who want to get a deep understanding of Kotlin Coroutines and Flow and want to know how to implement the most common use cases on Android."
      ]
    },
    {
      "title": "Mobile App Development with PhoneGap",
      "url": "https://www.udemy.com/course/mobile-app-development-with-phonegap/",
      "bio": "Create Apps for iOS and Android with HTML5 and Javascript",
      "objectives": [
        "Use the PhoneGap Desktop app to create new PhoneGap mobile apps",
        "Use the PhoneGap Desktop app and PhoneGap Mobile app to test new apps",
        "Create a new PhoneGap app template",
        "Test a PhoneGap project in the browser",
        "Include the JQuery library for UI",
        "Create single and multipage user interfaces",
        "Create collapsible content blocks to optimize mobile screen space",
        "Use jQuery Mobile UI elements to create usable mobile apps",
        "Use the Local Storage object for permanent on-device storage",
        "Storing data in the on-device database",
        "Retrieving data from the on-device database",
        "Obtain the device's location using geolocation tools",
        "Obtain location information with the Google Places API",
        "Obtain location information and Maps from the Google Maps API",
        "Play audio and video content on the device",
        "Control media content using Javacript",
        "Determine device position on X,Y and Z axis with the accelerometer",
        "Use the accelerometer to move on-screen objects",
        "Access device hardware including the camera",
        "Obtain and save images with the camera",
        "Detect gestures using the Hammer.js library",
        "Integrate taps and press gestures in to your application",
        "Integrate swipe and pan gestures in to your mobile app",
        "Determine information about the device on which your app is running",
        "Work with device orientation",
        "Determine information about the network to which device is connected",
        "Determine battery status of device",
        "Send a push notification to an app",
        "Process a push notification so it appears in the messaging bar",
        "Configure the Config.xml for app release",
        "Build with Adobe PhoneGap Build",
        "Build with the Command Line Interface",
        "Complete pre-release testing of a mobile app"
      ],
      "course_content": {
        "About the Course": [
          "About the Course",
          "About the Instructor"
        ],
        "Getting Started": [
          "Quickstart: Making Your First PhoneGap App",
          "Tools of the Trade",
          "Creating a New PhoneGap Project",
          "Testing a PhoneGap Project in the Browser",
          "Testing a PhoneGap Project on a Phone",
          "Including the jQuery UI Model"
        ],
        "User Interface": [
          "Section Introduction",
          "Creating a Multipage UI",
          "Collapsable Content Blocks",
          "Control Groups",
          "Flip Switch",
          "The ListView"
        ],
        "Storage": [
          "Section Introduction",
          "The Local Storage Object",
          "Creating a Table and Storing Data",
          "Retrieving Data"
        ],
        "Geolocation": [
          "Section Introduction",
          "Obtaining Device Location",
          "Using Location Information with Google Places",
          "Using Location Information with Google Maps"
        ],
        "Media": [
          "Section Introduction",
          "Playing Audio and Video Content",
          "Controlling Play Back of Media",
          "Adjust Volume of Media",
          "Media Position and Duration"
        ],
        "Device Accelerometer": [
          "Section Introduction",
          "Reading the Accelerometer",
          "Moving an Object with the Accelerometer"
        ],
        "Taking Pictures": [
          "Section Introduction",
          "Setting Picture Options",
          "Obtaining the Image",
          "Returning Thumbnails",
          "Selecting a Picture from The Library"
        ],
        "Gestures": [
          "Section Introduction",
          "The Hammer.js Library for Gestures",
          "Detecting Gestures",
          "Taps and Presses",
          "Swipes and Pans"
        ],
        "Working with the Hardware": [
          "Section Introduction",
          "Device Info Plugin",
          "Device Orientation Plugin",
          "Network Information Plugin",
          "Battery Status Plugin"
        ]
      },
      "requirements": [
        "Successful students in this course will have foundational knowledge of HTML and Javascript",
        "A Mac or PC is required to complete this course"
      ],
      "description": "Want to develop applications for iOS and Android, but don't want to learn yet another programming language? PhoneGap is your answer. With PhoneGap you can develop complete mobile applications using HTML5, Javascript and CSS.\nAnd, these aren't dumbed-down applications....\nThese are full-fledged mobile apps that can do everything from interact with device hardware such as the accelerometer, camera and geolocation tools to interacting with (iOS or Android) operating system to make phone calls or use Bluetooth.\nIn this soup-to-nuts PhoneGap course you'll learn everything from setting up your PhoneGap environment to testing your app on your phone or tablet device. You'll learn from extensive on camera demonstrations and be able to download the many examples you see the instructor create on screen. This course gets practical very quickly as you'll be working with the phone hardware and interacting with the same real-world API's that professional developers use everyday-- such as Google Places and Google Maps.\n\nAt the end of the course, you'll put it all together as you create full application using the Washington Transit API.  This app is similar to the types of apps being placed in the Apple App Store and the Google Play Store every day!  You'll join the ranks of companies like Logitech and Fan React who publish PhonGap apps directly to all of the major app stores.\nIf you have a fundamental understanding of HTML5 and Javascript you CAN build mobile applications with the PhoneGap library. Mobile App Development is the single Fastest Growing Segment of Development-- Get in on the Action with Mobile App Development with PhoneGap today!",
      "target_audience": [
        "Developers who want to build apps that work on Android and iOS",
        "Web Developers who want to extend their current skillsets in to mobile",
        "Those with significant web assets they like to leverage for mobile applications"
      ]
    },
    {
      "title": "Clean architecture & SOLID principles for Android in Kotlin",
      "url": "https://www.udemy.com/course/cleanandroid/",
      "bio": "Learn to implement Clean architecture in Android using SOLID principles and MVVM",
      "objectives": [
        "Clean architecture",
        "SOLID principles",
        "MVVM",
        "Room database",
        "Theoretical introduction",
        "Practical application",
        "Navigation",
        "Dependency injection"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media"
        ],
        "Clean Architecture": [
          "Clean architecture",
          "Clean architecture components",
          "SOLID principles",
          "Android Studio",
          "Project structure",
          "MVVM"
        ],
        "Core components": [
          "Project intro",
          "Gradle configuration",
          "Creating the project and setup Gradle",
          "Data entities",
          "Repository",
          "Use cases"
        ],
        "Navigation": [
          "Navigation intro",
          "ListFragment",
          "NoteFragment",
          "Setup navigation"
        ],
        "Room database": [
          "Room intro",
          "Room entities",
          "Dao",
          "Database companion object",
          "Database service",
          "Room data source",
          "UseCases"
        ],
        "MVVM": [
          "MVVM intro",
          "NoteViewModel",
          "NoteFragment functionality"
        ],
        "Showing the list": [
          "Item layout",
          "Item layout cheat sheet",
          "NotesListAdapter",
          "Challenge",
          "ListViewModel",
          "ListFragment functionality"
        ],
        "Other database calls": [
          "Note click",
          "GetNote database call",
          "Delete note database call"
        ],
        "Dependency Injection": [
          "Create the modules",
          "Injecting the use cases"
        ],
        "Extending the application": [
          "Adding word count",
          "Extending the core",
          "Displaying word count"
        ]
      },
      "requirements": [
        "Android knowledge",
        "Kotlin knowledge"
      ],
      "description": "Learn Clean Architecture and SOLID principles with this new course on Android development and Kotlin.\nMost tutorials and how to's show you the basics of app building, but they don't show you how to use the latest technologies and libraries.\nMost projects and jobs require you to know how to use the latest libraries. This is what this course is all about.\nThe purpose of this course is to give you a practical example of how to use Clean architecture, all while building a simple example app.\n\n\nWe will learn about:\nClean Architecture\nComponents and layers\nSOLID principles\nMVVM\nApplying Clean architecture in an example app\nJetpack navigation\nRoom database\nDependency Injection\nAll of these topics are necessary to have a well rounded, scalable, robust and maintainable application. So we not only need to understand how they work, but also how they are implemented in practice and how they relate to each other. In this course we will go line by line, explain why we need it and what it does, so that you have a clear understanding of the complete process of building a modern Android app.\nIf you want to become an expert Android Developer, you need to know how to structure and build your applications correctly\n\n\nSign up today, and let's learn how to implement Clean architecture and SOLID principles in your projects.",
      "target_audience": [
        "Beginner Android developers",
        "Intermediate Android developers"
      ]
    },
    {
      "title": "Introduction to iOS Game Development with SpriteKit & Swift",
      "url": "https://www.udemy.com/course/introduction-to-ios-game-development-with-spritekit-swift/",
      "bio": "Develop your first iOS game using the SpriteKit framework and Swift. A Jump'N'Run with countless awesome features!",
      "objectives": [
        "Thoroughly understand the SpriteKit framework",
        "Learn about different Node classes",
        "Learn about SKPhysics & SKActions",
        "Learn about using the asset catalogue",
        "Create amazing worlds and levels with SKTileMapNode",
        "Learn game development techniques such as red boxing",
        "Develop your own game full of awesome features",
        "Get a lot of awesome and unique insights and tips for becoming a top game developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Before you start: Resources & Software"
        ],
        "SpriteKit Crashcourse": [
          "Introduction to the SpriteKit Framework",
          "How to create a SpriteKit Project in Xcode",
          "Introduction to SKNode & SKScene",
          "SKNode & SKScene Example",
          "Introduction to SKSpriteNode",
          "SKSpriteNode Example",
          "Introduction to SKActions",
          "SKActions Example",
          "Introduction to SKPhysics",
          "SKPhysics Example",
          "Introduction to the Asset Catalogue",
          "Asset Catalogue & Animation Example",
          "Introduction to the Update Loop",
          "Introduction to SKTileMapNode",
          "SKTileMapNode Example Part 1",
          "SKTileMapNode Example Part2",
          "Other Node Classes",
          "SpriteKit Basics Quiz"
        ],
        "Super Indie Run": [
          "Project Overview",
          "Project Setup",
          "TileMap Part 1",
          "SKNode + Extensions",
          "TileMap Part 2",
          "Tiles & World Sprites",
          "The Layer Class",
          "Adding the World Layer",
          "Game States Enumeration",
          "The RepeatingLayer Class",
          "Background",
          "Constants",
          "The Player Class",
          "Physics",
          "Introduction to the physical ground",
          "Physical Ground Part 1",
          "Physical Ground Part 2",
          "Physical Ground Part 3",
          "Physical Ground Part 4",
          "Player Animation Part 1",
          "The AnimationHelper Class",
          "Player Animation Part 2",
          "Jumping Mechanism Part 1",
          "Jumping Mechanism Part 2",
          "Adding Physics Categories",
          "Jumping Mechanism Part 3",
          "Jumping Mechanism Part 4",
          "Adding the Finish Line",
          "The ObjectHelper Class",
          "Obstacles & Enemies Part 1",
          "Obstacles & Enemies Part 2",
          "Obstacles & Enemies Part 3",
          "Introduction to Coins",
          "Collectibles Part 1",
          "Collectibles Part 2",
          "Collectibles Part 3",
          "Particle Effects & Animation Part 1",
          "Particle Effects & Animation Part 2",
          "Collectibles Part 4",
          "Particle Effects & Animation Part 3 (Solution)",
          "Collectibles Part 5",
          "Introduction to the HUD",
          "HUD Part 1",
          "HUD Part 2",
          "HUD Part 3",
          "Introduction to Popups",
          "Popups Part 1",
          "The SpriteKitButton Class",
          "Popups Part 2",
          "Popups Part 3",
          "Introduction to the scoring system",
          "Scoring System Part 1",
          "Scoring System Part 2",
          "Popups Part 4",
          "Popups Part 5",
          "Popups Part 6",
          "Popups Part 7",
          "The PopupButtonHandler Extensions",
          "Popups Part 8",
          "Popups Part 9",
          "The Menu Scene",
          "Introduction to the SceneManagerDelegate",
          "The SceneManagerDelegate Protocol",
          "Introduction to the Level Scene",
          "Level Scene Part 1",
          "Level Scene Part 2",
          "Level Scene Part 3",
          "Level Scene Part 4",
          "GameScene Adaptions",
          "GameScene Popups",
          "Completing the Level",
          "Powerup",
          "Adding two Finish Lines",
          "Creating a new World",
          "Menu Image & Foreground Layer",
          "Background Music & Sound Effects",
          "App Icon & Launch Image",
          "Fix for LevelBug",
          "What's next?"
        ]
      },
      "requirements": [
        "A PC capable of running Xcode 8 or higher (Mac is recommended)",
        "The software Xcode 8 or higher (Can be downloaded for free)"
      ],
      "description": "This course is about the Sprite Kit framework and how to use it to build your own Game clearly inspired by Nintendo's best selling game Super Mario Run.\nWe're going to build this app from scratch meaning you don't have to have any prior experience in game development.\nBy the end of this course you will have a complete game you can then publish in the App Store.\nThe source code and the resources that we provide you with are already of incredible value. However the real value is actually the more than 10 hours of video content, in which we explain everything extremely detailed and if you still have any questions or need help, you can always just message us.\nWe start this course by giving you a thorough introduction to the SK Framework and its most important components, afterwards we'll jump right into building our game, without having to worry about not understanding what we're doing.\nUsing SKTileMapNode and the SceneEditor we will learn how to create amazing worlds and levels visually without having to write all of the code.\nThe Game itself will feature things such as:\n\nEnemies\nScores\nPower Ups\ncollectibles and much more.\nAs it is the case with all of our course we will provide you with all of the resources, project files and source code used in this course.\nThough it might be helpful to have a basic knowledge of Swift, it is definitely not required at all. Since you have lifetime access to this course you can take it at your own pace and rewatch any lessons as many times as you like. Therefore this course is the perfect introduction into the amazing world of game development!",
      "target_audience": [
        "Game Developers",
        "Programming Beginners",
        "Advanced Programmers"
      ]
    },
    {
      "title": "The Complete Intermediate Android Masterclass",
      "url": "https://www.udemy.com/course/android-intermediate-android-masterclass/",
      "bio": "Learn Intermediate Android Concepts - Content Providers, Services, Broadcast Receivers, Room Database, WorkManager API",
      "objectives": [
        "Master Intermediate Android Development Concepts",
        "Leverage Android's API's and Build Robust Android Apps",
        "Master Content Providers",
        "Master Services and Broadcast Receivers",
        "Master Android Fragments and Activities Lifecycle",
        "Master the JobScheduler & WorkManager APIs"
      ],
      "course_content": {},
      "requirements": [
        "Be Able to Build Android Apps",
        "Must Know Java Programming Language",
        "Be Willing to Work and Learn"
      ],
      "description": "Android App Development will open many doors for you since Android is the most popular operating system in the World.\nMany courses focus on the basics of Android development - which is great, for the beginner; however, at some point in your journey, you'll find yourself needing more intermediate to advanced Android topics: This is the course you've been looking for!\n\n\nBuild a strong foundation in Intermediate Android Development, to leverage what you already know about Android.\nIn this course, you will be:\nLearning about what Android really is, as a Platform\nFully and deeply understand how Activities and Fragments work\nMaster the Android Building Blocks: Activity/Fragments, Content Providers, Services and Broadcast Receivers\nLearning How to integrate Room Database and ViewModels into your Applications\nMastering Android Notifications System and Background Services\nMaster the JobScheduler and WorkManager APIs\nBuild solid, robust Android Applications using Android Development Best Practices\nAnd much more.\nThis is a hands-on course, which means you will be actually building several android apps as you learn!\n\n\nThe course is structured in such a way to improve your knowledge retention - by having a lot of hands-on projects. In each section of the course, you will be given the opportunity to practice and build something meaningful which will aid your understanding of Intermediate Android Development even further. There are quizzes, assignments, and challenges as well.\n\n\nIf you are looking for a course that takes your pre-existing Android knowledge to the next level, then this is definitely the course for you - I will take you through all you need to know in order to become an intermediate to advanced Android Developer.\n\n\nSign up today, and look forward to learning Intermediate Android Development Topics, and become the best Android Developer you can be.\n\n\nSee you inside.\n\n\nPaulo",
      "target_audience": [
        "Java Developers Curious about Intermediate Android Development",
        "Android Developers Who Want to Learn Intermediate to Advanced Android Topics",
        "Mobile Developers Who Know Java and Android & Want to Understand the Android Platform at a Deeper Level",
        "Anyone Who Has Built Android Apps Before"
      ]
    },
    {
      "title": "Android Jetpack masterclass in Kotlin",
      "url": "https://www.udemy.com/course/androidjetpack/",
      "bio": "Kotlin, Room, Navigation, Data Binding, MVVM, Notifications, Permissions and a lot more",
      "objectives": [
        "Android Jetpack",
        "Android development",
        "MVVM",
        "Room",
        "Navigation",
        "Data Binding",
        "Permissions",
        "Notifications",
        "Kotlin"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media",
          "What are we building",
          "How to take this course",
          "Course resources"
        ],
        "Installation": [
          "Android Studio",
          "Install Android Studio on a Mac",
          "Install Android Studio on a PC",
          "Run the code on your phone"
        ],
        "Setup and AndroidX": [
          "What is Androidx",
          "Create the project",
          "Import required libraries"
        ],
        "Navigation": [
          "What is Jetpack Navigation",
          "Navigation setup",
          "Screen layout",
          "Navigation functionality",
          "Arguments and animations",
          "Clean up"
        ],
        "Layouts": [
          "What is a layout",
          "ConstraintLayout and SwipeRefreshLayout",
          "LinearLayout",
          "RelativeLayout"
        ],
        "MVVM and LiveData": [
          "Lifecycles, LiveData, MVVM",
          "Building the Model",
          "Building the list adapter",
          "Building the ViewModel",
          "Challenge",
          "Detail screen ViewModel"
        ],
        "Retrofit and RxJava": [
          "What is Retrofit",
          "What is RxJava",
          "Setting up Retrofit",
          "Getting the remote data"
        ],
        "Glide and KTX extensions": [
          "What is Glide",
          "What are KTX extensions",
          "Using Glide"
        ],
        "Room": [
          "What is Room",
          "Setting up the Model",
          "Creating the entities",
          "Storing data in the database",
          "Shared Preferences",
          "Storing the time",
          "Retrieving data from the database",
          "Challenge",
          "Detail screen"
        ],
        "Data Binding": [
          "What is Data Binding",
          "Binding the Dog Item",
          "Binding the images",
          "Binding method calls",
          "Challenge",
          "Binding the detail fragment"
        ]
      },
      "requirements": [
        "Interest in Android development",
        "Kotlin development",
        "Mac or Windows PC"
      ],
      "description": "Use Jetpack to build a modern Android App with this new course on Android development and Kotlin.\nMost tutorials and how to's on Udemy show you the basics of app building, but they don't show you how to use the latest technologies and libraries.\nMost projects and jobs require you to know how to use the latest libraries. This is what this course is all about.\nThe purpose of this course is to teach you most of the Jetpack libraries, and give you a practical example of how to use these technologies, all while building a simple example app.\n\n\nWe will learn about:\nNavigation\nRoom\nData Binding\nAndroidX\nKTX extensions\nLifecycles\nLive Data\nViewModel\nNotifications\nPermissions\nSharing\nPreferences\nFragments\nLayouts\nPalette\nMultidex\nAs a bonus, we will also learn\nMVVM architecture\nRetrofit\nRxJava\nGlide\nAnd we will build the app in Kotlin.\nWe will cover a lot of technologies and we will implement them all in an application, so you can have a practical example.\nIf you want to build an app that scales and is robust, these technologies will make your life easy in the long term.\n\n\nSign up today, and let's learn how to use Jetpack to build a modern Android Application.",
      "target_audience": [
        "Intermediate Android Developers",
        "Beginner Android Developers",
        "Students interested in Mobile Development"
      ]
    },
    {
      "title": "iOS Development Masterclass 2026 – SwiftUI, SwiftData, AI",
      "url": "https://www.udemy.com/course/swiftui-masterclass-course-ios-development-with-swift/",
      "bio": "Build 17+ Apps – The Complete iOS App Development Course with SwiftUI, SwiftData, Xcode, Apple Intelligence, ChatGPT, AI",
      "objectives": [
        "Master Apple's greatest UI framework - SwiftUI",
        "Create iPhone apps by chatting with AI",
        "Apple New Design System - Liquid Glass",
        "Vibe coding with ChatGPT AI",
        "Create modern app icons with Apple Icon Composer",
        "Build data-driven apps with SwiftData framework",
        "Develop practical iOS 26, iPadOS 26, macOS 26 and watchOS 26 apps",
        "Learn Swift programming language",
        "Learn how to fetch data from internal and external JSON file using Web APIs",
        "SwiftUI Concurrency / Async / Await",
        "Develop iOS iPhone and iPad apps with gorgeous layout and design",
        "Learn how to save and load data on your iPhone and iPad with Core Data and SwiftUI",
        "Learn macOS desktop app development",
        "The Complete iOS App Development Course with SwiftUI",
        "Basic mobile application design and prototyping skills",
        "Learn how to integrate various iOS frameworks (MapKit, AVFoundation, etc)",
        "Learn how to integrate SwiftData with CloudKit",
        "Create custom user interfaces with the SwiftUI framework",
        "Learn how to publish iOS and macOS apps to the App Store",
        "Gorgeous in-app interactions and animations",
        "Create a top-notch portfolio of real apps and apply for iOS developer jobs",
        "Test-driven iOS iPhone and iPadOS app development",
        "Xcode editor tips and tricks for iOS Developers"
      ],
      "course_content": {},
      "requirements": [
        "Xcode 26 from Apple (free)",
        "The latest macOS from Apple (free)",
        "Willing to create awesome apps by following the instructor step by step",
        "You do not need any other prior programming experience or knowledge",
        "Macintosh computer"
      ],
      "description": "SWIFTUI COURSE UPDATES with APPLE INTELLIGENCE\nI am thrilled to share some exciting updates for our SwiftUI and SwiftData course. With the recent announcements from Apple, we will be integrating Apple's new design system – Liquid Glass, into our curriculum. This modern aesthetic will allow us to create stunning interfaces while enhancing user experience.\nAdditionally, we’ll explore the latest features and enhancements introduced in iOS26, macOS26, and watchOS26 ensuring that you are up-to-date with the most current tools and frameworks available for app development.\nStay tuned for more information on these updates, and get ready for an engaging learning experience!\n– Robert\n\n\nWHY THIS COURSE?\n\n\nKickstart 2026 by mastering Apple app development with our best-selling SwiftUI & SwiftData Masterclass with ChatGPT AI course, which includes 36+ hours of high-quality video content. More than 46,000+ students could not be wrong.\n\n\nNo1 – As you may know, Apple sent a clear message at the last WWDC developer conference: “The best way to build an app is with Swift and SwiftUI.”\nThat being said, I will focus on adding more fresh content covering many important topics, such as the following new features:\n\n\niOS 26, iPadOS 26, macOS 26, watchOS 26 platforms\nXcode 26 with AI,\nSF Symbols 7,\nLiquid Glass Design,\nIcon Composer,\nXcode AI,\nApple Intelligence,\nVibe coding with ChatGPT AI agent,\nSwiftData,\nOn-device AI with Foundation Models,\nTipKit,\nPhotos Picker,\nSwift Charts,\nResizable Bottom Sheet,\nNew NavigationSplitView, NavigationStack,\nTable for iPadOS,\nMultiDatePicker,\nExpandable Text Field,\nViewThatFits,\nImproved Grid API,\nLayout Protocol,\nand so on.\nNo2 – I have already started uploading new content about what is new in the SwiftUI framework.\nNot only that, but the entire course with ALL projects will also be updated to the newest Apple platforms, including iOS 26, iPadOS 26, macOS 26, watchOS, and visionOS 26. Older projects will also get a refreshed and unified Liquid Glass design with enhanced features like on-device AI integration, modern UI design and so on.\n\n\nNo3 – Every project is compatible with the latest iOS 2026, so if you run the finished project on the latest operating system, then Xcode will compile it.\nI would also highlight that Apple did not deprecate previous SwiftUI versions. That said, the latest iteration of SwiftUI is nothing more than some new features and exciting additions to the base of all SwiftUI releases.\n\n\nNo4 – We are building applications from scratch with resources made by professionals.\nCreating the Bestseller SwiftUI Course with high-quality production value takes a lot of time.\nThis SwiftUI course is already over 38 hours long and will continue to expand, including exciting topics such as voice coding with ChatGPT AI by the end of this year.\n\n\nNo5 – You will experience the \"LEARNING BY DOING\" teaching method during the course-taking.\nHaving said that, this is a project-based course, with 80% practical activities and only 20% theories.\n\n\nThere is no other instructor in this category I am aware of who provides more free previews than I do, so you can educate yourself about how things are done in this course.\nI hope this information helps those who are new to app development.\n\n\nLEARNING SECTIONS\n\n\nSWIFTUI REFERENCE GUIDE\nSWIFTUI RECIPES & HOW-TOS\nAPPLE DESIGN SYSTEM – Liquid Glass\n\n\nPRACTICAL PROJECTS\n\n\nHIKE – SwiftUI with Alternate App Icons\nWISHLIST – iOS app with SwiftData\nGROCERY LIST – iOS app with SwiftData\nPAWS – iOS app with SwiftData\nWATCHLIST – iOS app with SwiftData\nRESTART – iPhone app design\nPINCH – iPhone app development\nFRUITS – iOS app with SwiftUI and Xcode\nAFRICA – iOS, iPadOS, and macOS desktop app\nTOUCHDOWN – iOS E-commerce app\nDEVOTE – Core Data with SwiftUI integration\nNOTES – watchOS with SwiftUI\nDEVELOPERS – iOS and iPadOS app\nAVOCADO RECIPES – iOS and iPadOS app\nSLOT MACHINE – iPhone, iPad, Mac Game\nTODO – Core Data, App Themes, and Alternate App Icons\nHONEYMOON – iOS and iPadOS app\n\n\n\"Tell me, and I forget.\nShow me, and I remember.\nLet me do it, and I understand.\"\n– Confucius\n\n\nWhy should you take this best-selling SwiftUI course that features Xcode's built-in AI coding assistant?\nVisually learn SwiftUI, SwiftData and build top-notch iOS and iPadOS mobile apps, Apple Watch apps, and even macOS desktop applications. This complete iOS application development course is designed to teach you how to become an advanced multiplatform app developer using Apple's native user interface framework: SwiftUI.\nThis class teaches programming concepts through a project-based approach. You will improve your app design and development skills while creating many hands-on applications.\n\n\nWhat kind of advanced topics will be covered?\n\n\nSwift Programming Language,\nSwiftUI framework foundation,\nCreate iPhone apps by chatting with AI,\nXcode AI pair programming with ChatGPT,\nSwift Charts,\nSwift Concurrency,\nSwiftUI Async/Await feature,\nSwiftData persistent framework,\nCore Data with SwiftUI,\nMVVM Architecture - Design Pattern,\nExternal REST API integration,\nCombine Framework,\nSwiftUI Animation,\nAdvanced Core Data with Apple's CloudKit integration,\nApp Clips,\nWidgetKit framework,\nSpriteKit with SwiftUI,\nApple Intelligence,\nVersion control with Git,\nNative macOS app development,\nwatchOS for Apple Watches,\nApp design, UI design, UX design,\nHealthKit,\nMapKit,\nPencilKit,\nFoundation Models,\nPush Notification,\nSwiftUI WebView,\nFace ID and Touch ID,\nApp distributions to the App Store,\nand so on.\nLearn mobile app development with hands-on tutorials!\nMaster app design and development with the SwiftUI framework and create remarkable applications. This SwiftUI Masterclass provides practical and engaging activities with the right learning material and teacher.\n\n\nLet's be honest: Most SwiftUI and SwiftData courses only teach you how to build unattractive applications—but not this one.\nDo you want to create outstanding apps with SwiftUI? Then this course is for you!\n\n\nWould you like to show your apps to your friends, co-workers, and even family members and make them look up to you?\nIf yes, enroll in the best SwiftUI course and create first-class apps by coding in the Swift programming language!\n\n\nMoreover, are you eager to build up your professional portfolio and confidently present yourself in your next job interview? Your new employer will be impressed by your work.\nYou should definitely take this SwiftUI and iOS Masterclass featuring AI-powered coding!\n\n\nLearn faster with the up-to-date SwiftUI code examples. You are in good hands.\nDo not waste time getting lost and bored looking at endless and outdated tutorials and code examples on the Internet!\nYou will grasp Apple's latest SwiftUI framework quickly and easily by following the instructor line by line.\n\n\nWelcome to the world's best-selling iOS 2026 Development Course with SwiftUI and Apple AI\nThis up-to-date SwiftUI course contains step-by-step instructions to teach you how to program in Swift to build several fully-fledged iOS, iPadOS, macOS, and watchOS applications.\n\n\nWhat’s in it for you?\nAs a student in this masterclass, you're going to create dozens of eye-catching apps with the latest and greatest technologies that Apple has recently released, such as:\n\n\nAn Xcode code assistant powered by ChatGPT (or another large language model like Claude) can be really useful. Here’s what it brings to the table — and some caveats:\n\n\nWhat ChatGPT in Xcode is good for\n\n\nIn-IDE code generation and modification\nYou can ask the assistant to scaffold new Swift/SwiftUI code, generate data-model structs from JSON, propose UI layouts, or refactor existing code — all without leaving Xcode.\nContext-aware suggestions\nXcode's AI assistant can see your open files, or even your whole project context, which helps it make relevant suggestions or edits.\nOn-the-fly explanations and documentation by Apple Intelligence\nYou can ask “what does this function do?”, “why is this error happening?”, or “how can I better structure this ViewModel?” and get natural language explanations, documentation stubs, or rewrite suggestions.\nAutomated fixes and cleanups\nThe built-in ChatGPT assistant can help with migrating deprecated APIs, fixing compiler or warning errors, simplifying overly complex code, or improving concurrency usage.\nFaster iteration, less context switching\nBecause you don’t have to alt-tab to a browser or separate chat app, you can keep your flow going. Asking questions, tweaking code, and trying again—all inline.\nLearning/mentorship aid\nEspecially if you’re less familiar with a framework or newer Swift features, the assistant can act like a tutor: explain idioms, suggest better patterns, or point out subtle bugs or inefficiencies.\nFlexible model providers\nIn Xcode 26, Apple lets you choose from various models (ChatGPT, Anthropic’s Claude, or even local on-device models). You can switch based on speed, privacy, cost or accuracy.\n\n\nIf you want to get a job as an iOS or macOS developer, this masterclass is perfect for building up your professional portfolio to show off at your next interview. They will be interested in your work, after all.\n\n\nOn the other hand, if you want to build your own apps for your startup business, I've included full exercises on user interface design and app animation in addition to the coding tutorials.\n\n\nYou should know that this course assumes absolutely no programming experience. So, if you're a complete beginner, I'll be there to guide you through this program.\n\n\nFinally, if you're an experienced developer, I'm sure that you will find plenty of advanced Swift programming best practices using the Xcode editor.\n\n\nThat being said, by the end of the course, you'll know how to develop, design, and publish your next app in the Apple App Store.\n\n\nSo what are you waiting for? Enroll in the SwiftUI Masterclass with AI Programming today!",
      "target_audience": [
        "If you want to master SwiftUI and SwiftData frameworks",
        "If you are a beginner iPhone developers curious about iOS development, then jump straight into this course",
        "For Advanced iOS and macOS developers eager to learn SwiftUI framework",
        "If you want to get a job as an App developer, then take this course",
        "If you are going to build and publish your App to Apple's App Store, then start this SwiftUI course and get up speed quickly with the latest iOS development"
      ]
    },
    {
      "title": "Flutter 1.2 with Firebase&Stripe Build shop app from scratch",
      "url": "https://www.udemy.com/course/flutter-with-firebase-build-an-e-commerce-app-from-scratch/",
      "bio": "[INTERMEDIATE] Flutter full shop app with Firebase to cover Flutter and Firebase concepts&Stripe payment integration",
      "objectives": [
        "This Flutter course a complete guide that helps in learning and building a fully functioning Flutter application with Firebase.",
        "Teaching how to write Clean-code and avoid Boilerplate code",
        "This course you how to make new designs and styles for your app",
        "Clear state management in a very detailed manner",
        "Introduce new widgets and how to use them correctly",
        "Write production-ready code following best practices and become a competent Flutter developer"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in Flutter and Dart"
      ],
      "description": "Course prerequisites:\nBasic knowledge in programming to get started\nBasic knowledge of Flutter\nConcepts are explained clearly. You will always learn what you're building and why, and then how to do it.\nHow this course can be of help:\nGaining more knowledge in Flutter and Firebase with payment gateway\nLearn how to make an online shopping application simply\nWhat's in the course:\nComplex UI has done simply\nState management\nFirebase\nClean code and avoid Boilerplate code\nStyles for UI\nState Management: setState, lifting state up via callbacks, global access, scoped access with Provider and ChangeNotifier\nNavigation\nDart\nForms, input handling, and validation\nManaging and updating packages\nDatabases and Cloud Firestore\nListViews and multiple UI states\nFirebase Authentication\nFirebase Firestore\nFirebase Storage\nDart Programming Language - Fundamentals and intermediate topics\nHow to understand Flutter Mobile Development by building apps incrementally.\nHow to design, build, and debug Flutter Android apps\nHow to get Flutter apps to communicate with a real-time database - Firestore\nHow to build robust apps with Flutter\nFlutter AppBar\nFlutter Material Design\nFlutter Row and Column\nFlutter ListView Builder\nStripe payment gateway\nCourse structure:\napproximately 15 hours of content and updated regularly\nRequirements:\nWindows application development OR Mac application development\nAccess to a computer with an internet connection.\nand you are ready for the journey\nLove learning about applying cutting-edge algorithms to practical cases!\nWhat Should I Expect After this Course?:\nThe ability to build a fully functional shopping application with a Firebase\nNew information regarding Flutter\nNote that the course builds on Windows, so I didn't have a chance to cover the IOS configurations! But feel free to ask anything about it. I will be there to help.\n\nImportant note: This course is structured around the SDK version 1.23 of Flutter. Should you already possess a sound understanding of Flutter, I encourage you to enroll, as the course comprehensively addresses a wide array of content and showcases various UI implementations.\nFor those interested in the most recent advancements in Flutter, I have curated courses based on the latest Flutter version. These courses present similar concepts, albeit with updated code structures and varied UI design perspectives. It is advisable to peruse these updated courses prior to embarking on this particular module.",
      "target_audience": [
        "Flutter and Dart learning cravers",
        "Flutter beginners",
        "To all people who are interest in Flutter",
        "For people who want to make a complete app in Flutter"
      ]
    },
    {
      "title": "SwiftUI - Build Tinder Clone - SwiftUI Best Practices",
      "url": "https://www.udemy.com/course/swiftui-tinder/",
      "bio": "Build a functional Tinder clone - Beautiful Views - MVVM architecture - Tons of features",
      "objectives": [
        "Bind Your Data With Your UI",
        "Using new SwiftUI views for iOS 14",
        "Features and functionality of new Xcode 12 beta",
        "Quickly building reusable views",
        "Implementing MVVM with SwiftUI",
        "New Swift 5 syntax",
        "Managing SwiftUI data flow throughout a working application"
      ],
      "course_content": {},
      "requirements": [
        "Basic Swift programming understanding",
        "Basic iOS Development understanding"
      ],
      "description": "Let's build a real iOS app using SwiftUI with all of the latest SwiftUI features!\n\n\nIn this course you will be building a functional iOS Tinder clone with most of the features of the real app. The focus of this course is learning & perfecting SwiftUI concepts. You will learn how to build beautiful and complex views using Apples latest user interface framework. SwiftUI is the future of iOS development so it's time to add this skill to your developer portfolio!\n\n\nThe best way to learn iOS development is to build real applications. This course will teach you strong architecture fundamentals and you will learn how to efficiently load & pass data around a larger app with several screens.\n\n\nTo keep the focus on how to build views with SwiftUI, we will skip implementing a server or a networking layer. We will be loading our data locally to render our UI. With the clean MVVM architecture, you will easily be able to implement your own networking layer without having to refactor any code.\n\n\nTechnical Specifications:\n* Xcode Version: 12.2\n* iOS Version 14+\n* Minimum MacOS 10.15 required for SwiftUI previews. I'm using Mojave 11.2.1\n* Architecture followed: MVVM\n* Swift 5\n\nWhat is SwiftUI?\nApple has provided this new framework as a way to quickly build beautiful user interfaces for any Apple device using just one set of easy-to-use tools. With the new declarative syntax of SwiftUI, it takes less code to keep your code and design perfectly in sync.\nSwiftUI works seamlessly with new Xcode design tools and significantly speeds up development by showing your code changes in real time!\nAfter the latest features for iOS 14 announced at WWDC 2020, SwiftUI 2 is even more robust! New views, new functionality, less bugs, and faster performance with Swift 5.\n\n\nSwiftUI is 100% the future of iOS Development. Don't delay any more.\nStart learning today!\n\nThis course is in no way affiliated with Tinder® or Match Group, LLC. No source code of the real Tinder application is ever shown. This code is my interpretation of how I would build the app using SwiftUI.",
      "target_audience": [
        "Experienced developers ready to jump into SwiftUI 2",
        "Beginner developers learning how to build real applications with SwiftUI 2",
        "Developers looking to practice their design skills",
        "Developers who learn best by building real project"
      ]
    },
    {
      "title": "Deep Dive iOS 26 & SwiftUI 6: 90-Hour Project-Based Course",
      "url": "https://www.udemy.com/course/deep-dive-ios-16-swiftui-programming/",
      "bio": "Swift, API Integration, Localization, SwiftData, Charts, MapKit, Mac Apps, Push Notifications, Machine Learning and More",
      "objectives": [
        "Learn to build iOS Apps",
        "Learn good programming practices",
        "Learn MVVM design pattern",
        "Have fun programming and exploring"
      ],
      "course_content": {},
      "requirements": [
        "There are no prerequisites besides wanting to learn"
      ],
      "description": "Master iOS Development with Swift and SwiftUI\n\n\nBuild stunning, multilingual apps using the latest iOS 18 and iOS 26+ features, including 3D Charts, the Rich Text Editor, and On-device AI with the new Foundations Model Framework. This course is actively being updated for iOS 26, iPadOS 26, and macOS 26, and will continue to receive updates until Xcode 26 reaches a stable release.\n\n\nWhat You’ll Learn\nMaster Swift and SwiftUI to build modern, scalable iOS apps\nUse the MVVM architecture to structure apps professionally\nWork with iOS 18 & iOS 26 features like tinted icons, 3D charts, rich text, and Apple’s on-device AI\nBuild real-world apps for iPhone, iPad, and macOS\nUse CoreML and CreateML for machine learning\nLeverage Swift Data and Core Data for persistence\nLocalize your apps for multiple languages\nApply animations, gestures, and advanced UI components\nLearn data flow with @State, @Binding, @ObservedObject, and more\nRequirements\nmacOS with Xcode installed\nNo prior iOS or Swift experience needed\nWillingness to learn through hands-on projects\nDescription\nWelcome to the most practical and comprehensive SwiftUI course available – fully updated for iOS 18 and already covering the latest iOS 26+ features like 3D Charts, Rich Text Editing, and AI with Apple’s Foundation Model.\nThis is a project-based course, where you'll learn iOS development by actually building apps. No long-winded theory – we dive straight into real-world projects that grow in complexity and cover beginner to advanced topics.\nYou’ll start by learning Swift fundamentals, then move into building increasingly sophisticated apps using MVVM architecture, animations, gestures, CoreML, Swift Data, Core Data, and more.\nThis course is also dynamic: I regularly add new material based on Apple releases and student requests.\nWhat's New in iOS 26 (Already Covered)\n3D Charts using Swift Charts\nRich Text Editor with Markdown and Attributed Strings\nIntegration with Foundation AI models for on-device intelligence\nWhat’s Inside the Course\nSwift Fundamentals\nVariables, constants, arrays, loops, structs, enums, tuples, and more\nHigher-order functions and functional programming\nCoding exercises to strengthen core concepts\nSwiftUI Basics\nVStack, HStack, ZStack, Grids\nAsyncImage, gradients, text, and alignment\nWorking with light/dark mode and custom icons (including tinted icons in iOS 18)\nReal-World Apps You’ll Build\nGreetings App – Multilingual support, gestures, dark/light mode\nRecipe App (MVVM) – Lists, navigation, and reusable views\nCalculator App – Beautiful Dribbble-inspired UI\nAlarm App – Local notifications, custom toggles, gestures\nChinese Continuing App – API calls, splash screens, testing\nFizzBuzz App – Generate code in Swift, C, JavaScript, Rust & more\nConway’s Game of Life – Advanced logic + UI customization\nTip Calculator – Responsive design for iPhone/iPad + localization\nFlashcards App – Tap and drag gestures\nMystic Puzzle Game – Logic-heavy 15-tile puzzle with animations\nWorking with Charts and Data\nSwiftUI Charts: line, bar, area, pie, donut\n3D Charts (iOS 26+)\nActivity tracking with Swift Data\nLissajous curves and prime number theorem plots\nData Persistence\nSwift Data: Apple’s lightweight Core Data replacement\nCore Data with MVVM\nLocal file storage and JSON decoding\nAI and Machine Learning\nFoundation Model (iOS 26+): Apple’s on-device AI model\nCoreML + CreateML: Titanic survival prediction project\nCode Efficiency\nCode snippets, tabbed views, gradient masks, default clean views\nHTML to Color converter for design integration\nContext menus, clipboard access, and custom fonts\nWho This Course Is For\nBeginners who want to learn Swift and iOS app development\nDevelopers upgrading from UIKit to SwiftUI\nDesigners looking to turn mockups into live apps\nAnyone who wants to build multilingual, fully responsive, and modern iOS apps\nInstructor Support\nAsk questions anytime in the Q&A – I check twice daily. I also respond to messages directly and take student suggestions seriously. This course evolves with you!\nFinal Thoughts\nI built this course with passion and a focus on real-world apps. You’ll leave not only with knowledge but also with a portfolio of polished projects and the confidence to build your own.\nLet’s build something amazing together!\nBonus Projects\nQuote of the Day App – API fetching and custom font usage\nMultilingual Animal Game – Text-to-speech in English, Spanish, French\nFinance App UI, Task Manager UI, Meditation UI, Body Shape UI – All Dribbble-based frontend projects\nSpeed-coded Meditation App – Built in under 30 minutes\nEnroll now and start building your first SwiftUI app today!\nThis is a living course, meaning new content is added regularly — both from my own ideas and in direct response to student requests. Your feedback helps shape the direction of future lessons.\nI genuinely hope you enjoy this course as much as I enjoyed putting it together. Don’t just follow along — make the code your own. Tinker, experiment, and try building an app idea that excites you.\nIf you ever have questions, feel free to ask in the Q&A or message me directly. I check and respond twice a day and am always happy to help.\nHappy coding — and have a great day!\n– Ron",
      "target_audience": [
        "Beginner-intermediate programmers or anyone wanting to learn to program iOS 18 using Swift and SwiftUI"
      ]
    },
    {
      "title": "SwiftUI - Declarative Interfaces for any Apple Device",
      "url": "https://www.udemy.com/course/swiftui-declarative-interfaces-for-any-apple-device/",
      "bio": "Updated to include Swift 2.0 controls - Includes State, Binding, ObservableObject, MVVM, Web API, Core Data, Core ML",
      "objectives": [
        "Building iOS apps using SwiftUI framework",
        "Implementing MVVM Design Pattern using SwiftUI",
        "Consuming JSON Web API using SwiftUI",
        "SwiftUI for iOS 14"
      ],
      "course_content": {},
      "requirements": [
        "Xcode 11",
        "macOS Catalina is recommended"
      ],
      "description": "SwiftUI is an innovative, exceptionally simple way to build user interfaces across all Apple platforms with the power of Swift. Build user interfaces for any Apple device using just one set of tools and APIs. With a declarative Swift syntax that’s easy to read and natural to write, SwiftUI works seamlessly with new Xcode design tools to keep your code and design perfectly in sync. Automatic support for Dynamic Type, Dark Mode, localization, and accessibility means your first line of SwiftUI code is already the most powerful UI code you’ve ever written.\n\nRequirements\nBasic understanding iOS architecture\nknowledge of Swift programming language\nMac\nCheck out list of topics covered in the course:\nCreating and Combining Views\nBuilding List and Navigation\nBuilding Grid Layouts in SwiftUI\nUnderstanding State and Binding\nUnderstanding MVVM Design Pattern\nImplementing Weather App Using Web API\nCoffee Ordering App in SwiftUI\nMastering Xcode Previews\nIntegrating SwiftUI with UIKit Apps\nBuilding Custom Views with SwiftUI\nImplementing Gestures in SwiftUI\nProperty Wrappers in SwiftUI\nForms\nModals\nIntegrating Core Data with SwiftUI\nIntegrating Core ML with SwiftUI\nSwiftUI Recipes\nSwiftUI for All Devices\nSwiftUI Animations\nApple Stocks App Clone\nNearMe App Clone\nNeumorphic Design in SwiftUI\nSwiftUI 2.0",
      "target_audience": [
        "iOS developers who want to learn about the new SwiftUI Framework",
        "Swift developers who wants to learn about SwiftUI Framework"
      ]
    },
    {
      "title": "Flutter REST Movie App: Master Flutter REST API Development",
      "url": "https://www.udemy.com/course/flutter-rest-api-development-course-build-a-movie-app/",
      "bio": "Make a complete REST API Flutter application using Flutter and Riverpod state management framework!",
      "objectives": [
        "Build a complex Flutter Application that communicates with a REST API",
        "Learn the Riverpod State Management Library",
        "Implement core application features such as pagination, authentication, state management",
        "Build complex UI's using Flutter",
        "Learn good design principles with an emphasis on writing production-ready applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important"
        ],
        "Getting Started": [
          "Module Introduction",
          "Application Overview",
          "Creating Flutter Project",
          "Configuring Dependencies",
          "Obtaining API Information",
          "TMDB Documentation Overview"
        ],
        "Application Architecture Setup": [
          "Module Introduction",
          "Create Splash Page | Part 1",
          "Create Splash Page | Part 2",
          "Create Main Page",
          "Loading App Config",
          "Creating HTTP Service",
          "Creating Movie Service"
        ],
        "Main Page UI Development": [
          "Module Introduction",
          "Main Page UI | Part 1",
          "Main Page UI | Part 2",
          "Main Page UI | Part 3",
          "Create Movie Model",
          "Main Page UI | Part 4",
          "Main Page UI | Part 5",
          "Main Page UI | Part 6",
          "Main Page UI | Part 7"
        ],
        "REST API Communication": [
          "Module Introduction",
          "Create MainPageData Model",
          "Create MainPageData Controller",
          "Display Movies in MainPage",
          "Implement Category Selection",
          "Implement Movie Search",
          "Implement Pagination",
          "Implement Dynamic Background"
        ],
        "Thank You": [
          "Thank You"
        ]
      },
      "requirements": [
        "Basic familiarity with Flutter and Dart Programming Language",
        "Flutter installed on user system",
        "VS Code or Android Studio, configured for Flutter development"
      ],
      "description": "Do you want to build a complete Flutter REST API application? This is the course for you!\nWHAT WILL WE BE BUILDING?\nIn this course, we’ll use the best in Flutter to build a complete RESTful Application known as Flickd from zero to production-ready that you can release on the Google Play Store or iOS App Store. The application will display data regarding movies obtained from TheMovieDB website.\nWHAT DOES THE APP FEATURE?\nAn amazing UI and Splash Screen\nFunctionality to display results regarding popular and upcoming movies\nFunctionality to search movies\nPagination, Authentication, state management\nState management using Flutter Riverpod\nWHAT CONCEPTS ARE COVERED?\nA Complete Masterclass on Flutter REST API Development\nFlutter Riverpod State Management Framework\nPagination\nAuthentication\nWeb Requests in Flutter\nHandling Async Data with FutureBuilders, StreamBuilders, and Async / Await Functions\nForm Validation and Error Handling\nCustom Theme Creation and Fonts\nTons of Practical, Straightforward and Repeatable App-Building Patterns\nAnd much more!\nWHAT ELSE DOES THIS COURSE OFFER?\n– Deep, Fine-Grained Learning – This course is jam-packed with information. I made the course that I most wanted to take and as a result, I didn't skimp on the details. You're going to cover more topics and material in greater depth than ever before.\n– 100% Real-World Practice – My goal is to get you writing code as much as possible. And not just any code–we'll be working exclusively on practical tasks that are instrumental in building your own amazing real-world apps.\n– No-Nonsense, Spot-On Explanations - Every lesson is to-the-point. I break down what we're making, how we'll be doing it and what the final product will look like, all on top of helpful and illustrative descriptions to aid your understanding along the way.\nI really enjoyed making this course and I think you’ll enjoy taking it just as much.\nLooking forward to seeing you within the course!\nWho this course is for:\nMobile and web developers looking to build impressive real-world, production-ready apps!\nFlutter developers looking for a challenge\nDevelopers looking to delve into the world of Flutter and Riverpod State Management",
      "target_audience": [
        "Beginner to Intermediate Flutter Developers"
      ]
    },
    {
      "title": "Xamarin Android: Learn to Build Native Android Apps With C#",
      "url": "https://www.udemy.com/course/xamarin-android-app-with-cshap/",
      "bio": "Become a Xamarin Pro Android Developer with C#. Includes Quiz App, Social App, Maps App, Firebase. Build Real World Apps",
      "objectives": [
        "Learn to build full fledge Native Android Apps using Xamarin and C#",
        "Learn to create beautiful User Interface Design for your Android Apps",
        "Learn the basics of App Design and Prototyping using Adobe XD",
        "Learn C# programming language from scratch to advanced levels",
        "Learn and Master CRUD operations on Firebase Cloud Firestore",
        "Learn to seamlessly upload files and download files from Firebase Storage",
        "Learn to submit your Android Apps to Google Play Store after developing it",
        "Master how to make asynchronous (Async/Await) WebRequest and handle JSON responses",
        "Understand how to create local notifications using Android Notification Manager",
        "Learn to capture images from the Camera and access other native APIs",
        "Learn how to work with Google Maps and build Location aware Apps",
        "Understand the foundation and principles of building a successful App",
        "Learn how to get a Job as a Junior Android Developer",
        "Learn advanced app development tips and tricks to ship your apps"
      ],
      "course_content": {},
      "requirements": [
        "This course is highly recommended if you never written a line of code before",
        "No programming experience required, little or advanced C# experience is a plus",
        "A Windows PC or Macbook with internet connection",
        "Passion for learning to build real world android apps."
      ],
      "description": "Build Native Android Apps with C# and Xamarin (Updated 2020)\nWelcome to the most complete course on the internet that teaches you how to build fully native android apps using C# and Xamarin. This course is designed to teach you everything you need to know to become a world class Android Developer. Search no further because this course covers several topics from beginner to advanced concepts\n\n\nWhy Is This Course Right for Me?\nEveryone agrees that the best form of learning is to learn by doing, hence we designed the curriculum for this course to be very practical with some bits of theory to help you have a good understanding of why we do the things we do.\nAfter going through the course you would have successfully built a lot of practical Real-World Apps that will expose you to everything you need to know to be a pro. By doing so you have built a solid portfolio to land a high-paying Android Developer Job or even start your own app development company which ever resonates more with you.\n\n\nCan I Surely Scale Through The Course?\nThe course was designed with the assumption that you know nothing about programming  most of the seemingly advanced concepts were over-explained using different scenarios in real life, hence you will easily understand. Even a 6 year old could go through the course and understand every bit of it.\n\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos on YouTube. Your learning and your time is worth more than that. We offer the best instructors with carefully crafted content, beautiful animations and learning by doing. As you sit there contemplating the sea of different courses, you'll realise that there's no reason to deliberate. The best course is right in front of your eyes.\nREMEMBER… There is a full money back guarantee, just as long as you request it within 30 days of purchasing the course.\nSo what are you waiting for? Click the buy it now button. You’ve got nothing to lose (and access to the best Xamarin Android app development course to gain).",
      "target_audience": [
        "Persons with good knowledge of C# and want to gain experience in developing Android Apps with their existing skills",
        "Those with basic knowledge of developing Android Apps using Xamarin and C#",
        "People who want to take their Xamarin Android knowledge to advanced level",
        "This course one stop shot for entrepreneurs who want to start building android app"
      ]
    },
    {
      "title": "How to Make a Freaking iPhone App - iOS 11 and Swift 4",
      "url": "https://www.udemy.com/course/how-to-make-a-freaking-iphone-app-ios-11-and-swift-4-xcode-9/",
      "bio": "iPhone App Development from scratch. Learn how to make iOS apps using Xcode 9. Including CoreML and ARKit!",
      "objectives": [
        "Create Fully Functional iOS 11 Apps",
        "Develop a Solid Understanding of Swift 4",
        "Learn ARKit and CoreML",
        "Industry Tips Like How to Get a Job and Make Money from Your Apps",
        "The Basics of Git and GitHub",
        "Make Snapchat Clone",
        "Make a Pokemon Go Clone",
        "A Step by Step Guide to Uploading Your App to the App Store"
      ],
      "course_content": {
        "Welcome and Xcode": [
          "Welcome",
          "About Me and the Course",
          "Installing Xcode"
        ],
        "The Fundamentals": [
          "Intro",
          "Variables and Constants",
          "Strings and Ints",
          "Comments and Print",
          "Labels",
          "Outlets",
          "Buttons",
          "If Statements",
          "Button Counting",
          "Outro",
          "Source Code"
        ],
        "Git and More Swift": [
          "Intro",
          "Get with the Git",
          "GitHub",
          "Math and Doubles",
          "TextFields",
          "String Interpolation",
          "Booleans",
          "If and Xcode",
          "Outro",
          "Source Code"
        ],
        "*APP 1* Emoji Dictionary - Learning the Importance of TableViews": [
          "Intro",
          "Arrays",
          "Advanced Arrays",
          "Sketch",
          "TableViews",
          "Two Questions",
          "Arrays and TableViews",
          "The 2nd ViewController",
          "Segues",
          "Prepare for Segue",
          "Pass Da Emoji",
          "Emoji Definition",
          "Outro",
          "Source Code"
        ],
        "Making Money with iOS": [
          "Intro",
          "Working for a Company",
          "Being a Freelancer",
          "Making Money from Your Own Apps",
          "Where to Go from Here",
          "Outro"
        ],
        "Advanced Swift 4": [
          "Intro",
          "Functions",
          "Return",
          "Classes",
          "Methods",
          "New Emoji Dictionary Feature",
          "The Emoji Class",
          "Why Classes are Cool",
          "Outro",
          "Source Code"
        ],
        "*APP 2* ToDo List - Saving Information with CoreData": [
          "Intro",
          "Sketch",
          "TableView Practice",
          "ToDo Class",
          "Designing the Add ToDo ViewController",
          "Adding ToDos",
          "Optionals",
          "Unwrapping Optionals ans Subclasses",
          "Complete ViewController",
          "Displaying a ToDo",
          "Removing a Todo",
          "CoreData",
          "Adding to CoreData",
          "Fetching from CoreData",
          "Deleting from CoreData",
          "Outro",
          "Source Code"
        ],
        "*APP 3* Collector - Take Pictures and Work with Images": [
          "Intro",
          "Sketch",
          "Designing the App",
          "ImageViews and CoreData",
          "Image Picker Controller",
          "Saving Images to CoreData",
          "Getting Items from CoreData",
          "Swipe to Delete",
          "Outro",
          "Source Code"
        ],
        "*APP 4* TalkBoy - Record Audio with the Microphone": [
          "Intro",
          "Sketch",
          "Design Challenge",
          "AVAudioRecorder",
          "Dictionaries",
          "Start Recording",
          "Playing Audio",
          "Audio and CoreData",
          "Play When Tapped",
          "Delete",
          "Outro",
          "Source Code"
        ],
        "Uploading to the App Store": [
          "Intro",
          "Beta Warning",
          "Paid Apple Developer Account",
          "Certificate and App ID",
          "Provisioning Profiles and Xcode",
          "iTunes Connect",
          "Running Apps on Your Phone",
          "Outro"
        ]
      },
      "requirements": [
        "No previous knowledge required :)",
        "You will need a Mac computer"
      ],
      "description": "Have you ever wanted to make an iPhone app? Did you get lost in YouTube videos or online blog posts? This is the course for you!\nMy name is Nick Walter and I am a self taught iPhone programmer. I know what it feels like to start from the beginning. In my course I will teach you Swift 4 and how to make iOS 11 apps. What will we make?\nEmoji Dictionary - A simple app to help us learn about TableViews\nToDo List - A todo app that teaches us about CoreData\nCollector - Learn to work with the camera as we make an app to catalog a collection of something (video games, movies, stamps, etc...)\nTalkBoy - Record sounds using the microphone and play them back. This one is fun!\nAugmented Reality - Using 3D animation we'll make an airplane move around in our world.\nMachine Learning - We'll create an app that will try to detect the subject matter of any image. Very fun!\nSnapchat Clone - We'll use Firebase to make a simple version of Snapchat. Very involved\nPokemon Go Clone - Learn how to work with maps as we make a clone of most popular iOS game right now\nYou'll also learn:\nHow to submit an app to the App Store\nHow to make money with iOS\nGit and GitHub\nCome join the funnest course on Udemy for making iPhone apps!",
      "target_audience": [
        "People looking to learn the beginning to intermediate skills needed in iOS apps"
      ]
    },
    {
      "title": "Getting Started with Ionic v2/v3 and Parse Server",
      "url": "https://www.udemy.com/course/getting-started-with-ionic-2-and-parse-server/",
      "bio": "Learn to build mobile apps for Android, iOS and Windows Phone Apps using Ionic v2/v3 and Parse Server as the backend.",
      "objectives": [
        "Build mobile apps using web skills such as HTML, CSS and JS for Android, iOS and Windows Phone",
        "Create amazing mobile apps using Ionic 2 and Angular 2 (TypeScript)",
        "Build apps by writing code in JavaScript (TypeScript)",
        "Build mobile apps that look amazing and look native to each platform",
        "Build and deploy apps on Android and iOS"
      ],
      "course_content": {
        "Let's Start": [
          "Important: Read before beginning",
          "Introduction to Course",
          "Introduction to Ionic Framework 2",
          "Introduction to Parse Server"
        ],
        "Getting Ready": [
          "Installing Ionic and Cordova"
        ],
        "Creating and Running Ionic 2 Apps": [
          "Creating Ionic 2 Apps",
          "Running Ionic 2 Apps in Web Browser",
          "Running Ionic 2 Apps on Mobile Device",
          "Ionic 2 App Structure"
        ],
        "Setting Up Parse Server": [
          "Introduction to Parse Server and C9?",
          "Installing Parse Server and Node Modules",
          "Configuring Parse Server using Server.JS",
          "Parse Server and REST API"
        ],
        "Building \"FriendsList\" Ionic 2 App": [
          "Preparing Up",
          "Login Page - Layout and UI",
          "Signup Page - Layout and UI",
          "Importing Modules in Ionic 2",
          "SIgnup Up a New User - HTTP POST",
          "Finishing Up SIgn Up",
          "Logging in the User - HTTP GET",
          "Finishing Up Login",
          "Creating the List Page - Fab Buttons",
          "Creating List Page - Showing Prompts and Alerts",
          "Saving Data to Parse Server",
          "Saving Data to Parse Server - 2",
          "Getting Data from Parse Server - Sliding Lists",
          "Getting Data from Parse Server - HTTP GET",
          "Getting Friends List - Using Local Storage",
          "Getting Friends List - Refreshing Lists",
          "Pull Down to Refresh - Manual Rereshing",
          "Editing Data on Parse - Creating UI",
          "Editing Data on Parse - HTTP PUT",
          "Deleting Data on Parse",
          "Logging Out the User and Conclusion"
        ]
      },
      "requirements": [
        "Introductory knowledge of HTML, CSS and JS",
        "Basic knowledge of Ionic 1 would be an advantage but not required",
        "Basic knowledge of Angular or any other JS framework would be an advantage but not required",
        "Just get a computer with an internet connection and get started"
      ],
      "description": "Create an Android, iOS and Windows Phone using Ionic Framework v2/v3 and Parse Server as the backend. All you need is little know-how of HTML, CSS and JS. Ionic Framework v2 uses Angular 2, and v3 uses Angular 4 which in turn use TypeScript. We will be learning all this while building a complete app from scratch. Since Ionic 3 is very similar to Ionic 2, the app that you build after April 6th, 2017 will be built with Ionic 3 instead of Ionic 2.\nLearn to perform CRUD operations on data stored on Parse Server using the Parse Server's RESTful API in Ionic 2/3. We will be building a Friends List app from scratch and perform create, read, update and delete operations on the data stored on Parse Server. You do not need to buy or download anything to take this course, all you need is a computer with any OS installed on it and you are ready to get stared with the course.\nYou will also learn how to install and deploy a full-fledged Parse Server for free along with the amazing Parse Dashboard that we all have been missing since Parse announced its termination. All you Parse data will be stored on you own server. Don't want to go online? No worries, everything can be tried out on a local machine just the same way.\nAll the tools we use throughout the course are either free or opensource. We will use Microsoft's latest open-source IDE, Visual Studio Code to write our application code. We will also deploy our Parse Server on C9 which is free for basic usage.",
      "target_audience": [
        "Eventerpreneurs with an idea but no knowledge of complex app development",
        "Students willing to build mobile apps for Android, iOS and Windows with one code base",
        "Professionals willing to build apps for multiple platforms in least amount of time",
        "Everyone who has web skills and wants to build mobile apps using web technologies",
        "Professionals who want to expand their skill set and learn to develop apps."
      ]
    },
    {
      "title": "Intermediate iOS - Get Job Ready with Swift 2",
      "url": "https://www.udemy.com/course/intermediate-ios/",
      "bio": "Your beginner course got your started on iOS, this course will take you to the next level. Master making iPhone apps",
      "objectives": [
        "Integrate Apple Pay and In-App purchases into their apps"
      ],
      "course_content": {
        "Introduction to Intermediate iOS": [
          "Introduction"
        ],
        "Animations": [
          "Intro to Brain Teaser iOS App",
          "Brain Teaser iOS App Part 1 - Creating the Login Screen",
          "Brain Teaser iOS App Part 2 - Custom Controls & IBDesignable",
          "Brain Teaster iOS App Part 3 - Reusable Animated Buttons",
          "Brain Teaser iOS App Part 4 - Creating an Animation Engine",
          "Brain Teaser iOS App Part 5 - Custom Card & Load From Nib",
          "Brain Teaser iOS App Part 6 - Animating the Game Screen",
          "Exercise & Source Code"
        ],
        "UISplitViewController": [
          "Intro",
          "Sketch",
          "Our First SplitViewController",
          "Player Data",
          "Master View",
          "Detail Segue",
          "Sending Over a Player",
          "Cleaning Up the UI",
          "SplitViewController Tweaks",
          "Challenge",
          "Outro",
          "Source Code"
        ],
        "Advanced Layout": [
          "Intro to App & Visual Format Language",
          "Visual Format Language iOS App Part 1",
          "Visual Format Language iOS App Part 2",
          "Visual Format Language iOS App Part 3",
          "Visual Format Language iOS App Part 4",
          "Exercise & Source Code: Finishing the App",
          "IBInspectable & Creating a Custom Button",
          "IBInspectable Options",
          "IBDesignable & IBInspectable",
          "Exercise - IBCalculator"
        ],
        "Drawing": [
          "Intro",
          "Drawing",
          "Setting Up the UI",
          "Touches",
          "Fixing The Error",
          "Drawing Our First Line",
          "Custom Drawing",
          "Colors",
          "Sharing Art",
          "Challenge",
          "Outro",
          "Source Code"
        ],
        "Version Control": [
          "What is version control & Git and why it is important for iOS development",
          "Git basics",
          "Setting up Github for iOS & Swift Development",
          "Github vs Bitbucket for iOS App Development",
          "Working with Remote & Local Git Repositories for iOS & Swift Development",
          "Github Desktop",
          "Dealing with Merge Conflicts"
        ],
        "In-App Purchases": [
          "Intro",
          "7 Steps to In-App Purchases",
          "Sketch",
          "Layout",
          "Collection Views",
          "Core Data",
          "Custom Cell",
          "Blur",
          "Step 1 - iTunes Connect",
          "Step 2 - Request Products",
          "Step 3 - Display Info",
          "Step 4 - Add To Queue",
          "Step 5 - Handle Response",
          "Step 6 - Provide Purchase",
          "Step 7 - Restore Button",
          "Challenge",
          "Outro",
          "Source Code"
        ],
        "Core Data & iOS": [
          "Core Data Time",
          "Why Use Core Data",
          "Core Data Architecture Overview",
          "Some Junk App Part 1 - Creating a Data Model",
          "Some Junk App Part 2 - Designing the Views",
          "Some Junk App Part 3 - Connecting the Views",
          "Some Junk App Part 4 - NSFetchedResultsController",
          "Some Junk App Part 5 - Fetching & Displaying Data",
          "Some Junk App Part 6 - Laying Out the Details Screen",
          "Some Junk App Part 7 - Implementing UIPickerView",
          "Some Junk App Part 8 - Saving Data from a Form",
          "Some Junk App Part 9 - Editing Existing Data",
          "Some Junk App Part 10 - Deleting Data",
          "Recipez Part 1 - Setting up the Views & Data Model",
          "Recipez Part 2 - Saving Images in Core Data",
          "Exercise - Extending Some Junk"
        ],
        "Apple Pay": [
          "Intro",
          "Apple Pay v. In-App Purchase",
          "Sketch",
          "Table View",
          "Sticker Data",
          "Product Details",
          "Apple Pay Button",
          "PKPaymentRequest",
          "Apple Pay Delegate",
          "Shipping",
          "Thank You Page",
          "Challenge",
          "Outro",
          "Source Code"
        ],
        "Unit Testing, TDD, & UI Testing on iOS": [
          "UI Testing Part 1",
          "UI Testing Part 2",
          "UI Testing Part 3",
          "Intro to Unit Testing",
          "Unit Testing Part 1 - Adding Tests to Project",
          "Unit Testing Part 2 - Testing a Service",
          "Unit Testing Part 3 - Testing the Audio Service",
          "Unit Testing Part 4 - Testing the UI",
          "Exercise - Are You Depressed?"
        ]
      },
      "requirements": [
        "You should be able to make simple iOS apps in Xcode."
      ],
      "description": "Have you taken a beginner iOS class on Udemy? Are you looking for something more? Do you want to advance beyond the basics of making simple iPhone apps? Do you want to dive deeper, get paid to make apps, and launch your career in iOS development? Or do you simply want to become an amazing iOS developer?\nIf you haven’t taken a beginner class yet, you should. :) They’re wonderful! But if you have, you realize there comes a point when you’re ready to move on, move forward, and escalate your capabilities. You want to build amazing apps, apps that can handle greater complexity, and apps that truly impress. You want to see results in your career and in your earning potential. You want to become an advanced iOS developer.\nWelcome to the first advanced iOS development class, the ONLY class on Udemy to unfold the most advanced iOS topics available, while coaching you through building your career in iOS development.\nWe (Nick Walter and Mark Price) came together to create this class because we want to provide something that can only be provided by a team of two fully-committed, experienced, professional iOS developers. We’ve built iOS apps. We’ve had iOS internships. We’ve done iOS freelance work. We’ve applied for iOS jobs. We’ve had full-time iOS careers. We’ve coached and taught in meetups and live bootcamps that charge each student THOU$AND$. And we’ve taught over 50K people on Udemy how to get started. Now we’re ready to help YOU take the NEXT STEP in advancing your skills, and launching your career.\nWe’re bringing every element of a live bootcamp that charges thousands of dollars to you in this course. Below are some specifics:\nAdvanced iOS Topics:\nAdvanced Auto Layout - Adaptive text, adaptive UI, Size Classes in-depth\nIn-App Purchases - Subscriptions, consumables, restoring purchases\nIn-App Advertising - iAds, Google AdMob\nAdvanced Storyboards\nLocalization\nDebugging & Instruments\nDrawing on iOS\nUISplitViewController\nAdvanced Core Data\nPush Notifications\nUITesting\nUnit Testing\nApple Pay\nProtocol Design\nClosures\nCore Animation\nTestFlight Beta Distribution\nGit & Github\nAdvanced Support:\nLIVE CHAT - Get 24/7 support and help while you learn\nHow to access hundreds of iOS job openings\nHow to make a polished Resume and LinkedIn profile\nHow to answer iOS job interview questions\nHow to showcase your app(s) to potential employers\nHow to become a freelance iOS developer",
      "target_audience": [
        "This course is meant for people who have a beginner level of iOS knowledge. If you;ve taken an intro iOS course on Udemy this course is for you.",
        "If you have never done any iOS programming before, this course is not for you."
      ]
    },
    {
      "title": "Learn to Make iPhone Apps with Objective C for iOS7",
      "url": "https://www.udemy.com/course/how-to-program-ios7-iphone-apps-from-scratch-in-objective-c/",
      "bio": "Create apps for iOS7 without any programming experience. Learn how to write Objective C code, design UI, and use Xcode.",
      "objectives": [
        "Make apps for iOS7",
        "Use Xcode to design user interfaces for iPhone apps",
        "Learn to code in Objective C",
        "Prototype ideas on paper"
      ],
      "course_content": {},
      "requirements": [
        "Mac with Mountain Lion or Later",
        "Xcode 5",
        "PC with MacinCloud.com"
      ],
      "description": "Learn to create iPhone apps with Objective C programming.\nFollow along in Xcode 5 to turn your ideas into iPhone apps.\nCreate iPhone apps with easy to follow, step-by-step instructions, in this in-depth course taught by an expert instructor.\nThis course features HD lectures and programming screencasts with large, clear text. Listen to crisp audio and follow Paul Solt’s instruction with demonstrations and on-screen pointer and highlighting.\nIf you’ve tried to learn how to program iPhone apps from other online resources, you know it can be very frustrating.\nIn this course, Paul Solt shows you how to get started\nYou will learn the programming topics that computer science students learn, and in far less time\nAll of the Objective C code works with iOS 7 apps\nPaul provides explanations and examples on how existing apps use different features\nJump in and start learning to write code today!",
      "target_audience": [
        "People who want to make iPhone apps",
        "Anyone with an idea for an app",
        "Non-programmers",
        "Designers",
        "Artists",
        "Web developers"
      ]
    },
    {
      "title": "Android App Development Bootcamp - Beginner to Pro",
      "url": "https://www.udemy.com/course/the-complete-android-developer-bootcamp/",
      "bio": "Master Android Development - Learn Java AND Kotlin - Jetpack Room Database - MVVM - Fragments - Google Tasks clone",
      "objectives": [
        "Master Android App Development from scratch—start with Java, transition to Kotlin, and build real-world apps for your portfolio.",
        "Build Professional Looking Android Apps - Create a restaurant app, record keeper, and Google Tasks clone to showcase your skills.",
        "Go from a complete beginner - even with no previous programming experience - to a real Android App Developer",
        "Master Activities, Fragments & Lifecycle: Learn Activity Lifecycle, Fragments, and UI navigation for professional Android development.",
        "Master Jetpack Room & Databases: Learn SQLite, Jetpack Room, and database management to store & retrieve app data efficiently.",
        "Launch Your Career in Android Development: Gain industry-ready skills to land a developer job or freelance clients."
      ],
      "course_content": {},
      "requirements": [
        "A Windows PC or Mac with access to the internet",
        "No programming experience required at all - complete beginner-friendly",
        "Basic computer proficiency is an advantage, including basics like copying and pasting"
      ],
      "description": "Android App Development in Java AND Kotlin. From a complete beginner, learn to make real apps, build your portfolio in a modern course with latest best practice! Android 14 ready!\n\n\nAbout this course\nThe Android Development Bootcamp is a brand new, up-to-date course providing the perfect introduction to the real-world Android concepts and skills required to be a successful Android developer. Whether you are a complete beginner or are coming from another language or platform, this course will go from setting up and installing Android Studio to building real apps that are useful and look great. You'll gain a deep understanding of the core important aspects of Android app development, and you will be taught by a fully qualified teacher who made a switch from a completely different career into being a Senior Android Engineer at a major UK company making apps for millions of users.\n*Begin by gaining a foundation in XML and Java - move onto Kotlin, Fragments, RecyclerViews and much more*\nThis course won't patronise you, or have you copying along typing things you don't understand. No important concept will be glossed over or taken for granted; no, you will have that deep understanding that leads to mastery.\n*A unique Android course that offers a fully integrated curriculum*\nMany Android courses teach a few of the concepts in isolation. For example you may see a section on Java separate from the other \"Android\" sections. But this isn't how Android works! Android/Java/XML are all so heavily intertwined, with our skills developing in all areas as we gain mastery, so why experience them in isolation?\nIn this course, you will learn what you need to know, the moment you need to know it! Whether it's working with layout files, programming in Java, you can be sure the key concepts - from Variables, Classes and Methods through to Inheritance, Interfaces and much more - will be introduced at the moment they are relevant, fitting in seamlessly with the rest of the course.\n\n\nAbout me\nI am currently employed as a Lead Android Engineer for a major UK company, born and currently living in the north of England, however programming was not where I started my career.\nWith a successful career behind me as a fully qualified music teacher and professional musician, I made the switch from teaching to software development, teaching myself. I am the proof that you don't need a computer science degree, or years of commercial experience to be a highly successful Android developer.\nWhat's more, as I have years of training in teaching, I am highly skilled at breaking down complex topics in ways that are easy to understand and engaging, and I am expert at developing a curriculum where the concepts are introduced in an enjoyable, flowing way, always building upon our existing skills while acquiring new ones.\nSo, as somebody who decided one day to break into Android app development just like you are at this point, and as a fully qualified teacher, I am uniquely positioned to guide you on your path to also becoming an Android developer, in a way that is fun, carefully designed, engaging, never patronising, and that will get you as excited as I was - and still am - about learning this wonderful skill!\n\n\nAbout you (or, course requirements!)\nThis is the course for you if:\nYou want to make Android apps\nYou are interested in becoming an employed Android developer, a freelancer, launching your own projects, or just want to try your hand at making real mobile apps\nYou have no prior programming experience, or some but from a different language/platform\nYou want a course that teaches you the real tools Android developers and professionals use in the real world, in an integrated curriculum that will give you a deep understanding of all the key concepts an Android developer needs to know to have a successful career\nWith regards to what you need to be able to take this course, note the following two points:\nAbsolutely zero programming experience is required (although if you have some that's also fine!) - you will be taught everything you need to know from scratch\nYou need a computer, either PC (Windows) or a Mac, with an internet connection",
      "target_audience": [
        "Complete beginners who want to learn Android app development from scratch, starting with Java before mastering Kotlin.",
        "Aspiring app developers looking to create a portfolio of apps, land a job, or launch their own Android apps on Google Play.",
        "Students who want to be taught by a Senior Android Engineer and fully qualified teacher, who want a deep understanding of Android App Development",
        "Self-taught developers & freelancers who want to improve their skills, learn Jetpack libraries, and master Material Design UI."
      ]
    },
    {
      "title": "iPhone App Development: Create a Spotify Clone",
      "url": "https://www.udemy.com/course/ios-app-development-how-to-stream-music-from-a-server/",
      "bio": "Stream your music collection and learn how to play and control music on iOS. An epic course to make your own Spotify",
      "objectives": [
        "Create a fully featured music streaming app on iOS",
        "Create a fully functioning server to store music",
        "Connect server to app using PHP scripts"
      ],
      "course_content": {
        "Introduction and Environment Setup": [
          "Introduction",
          "Setup Xcode and iOS Simulators on a Mac"
        ],
        "Server Setup and Testing": [
          "Introduction to Server Setup",
          "Should You Choose a Free or Paid Server?",
          "Option 1: Setting up a Free Server",
          "Option 2: Setting up a Paid Server (Much More Control)",
          "How to Upload Your Files to a Server",
          "Create Your Server Database Using cPanel",
          "Create a PHP Script to Add Uploaded Music to the Database - Part 1",
          "Create a PHP Script to Add Uploaded Music to the Database - Part 2",
          "How to Automate a PHP Script Using Cron",
          "Summary of Server Setup and Testing"
        ],
        "A Really Simple iOS Music Streaming Function": [
          "Introduction to Simple Streaming",
          "Setting up our Project in Xcode",
          "How to Disable App Transport Security on iOS",
          "How to Create a Simple Streaming Function in iOS",
          "Tidying up our Swift Streaming Player by Moving to its Own Class",
          "Summary of Really Simple iOS Music Streaming Function"
        ],
        "Adding Some Sugar to our Simple Streaming Function": [
          "Introduction to Advanced Audio Features on iOS",
          "Adding a Play Pause Button to a Storyboard for Media Control",
          "Connecting a Play Pause Button to Streaming Music Controls",
          "How to Implement Lock Screen Controls on iOS",
          "How to Handle Audio Interruptions on iOS",
          "How to Add Lock Screen Media Information on iOS",
          "Summary of Adding Sugar to Simple Streaming Function"
        ],
        "Getting a List of Music from the Remote Database": [
          "Introduction to Getting a List of Music From the Database",
          "How to Create a PHP Interface to the MYSQL Database",
          "How to Fetch Remote Database Information into an iOS App",
          "Creating our Song Class to Store Retrieved Items",
          "How to Parse Retrieved Data into a List of Songs",
          "Summary of Getting a List of Music fom the Remote Database"
        ],
        "Placing Retrieved Song Lists into a Table View": [
          "Introduction to Placing Retrieved Song Lists into a Table View",
          "How to Create a Table View and Custom Table View Cell on iOS",
          "How to Populate a Table View with Data",
          "Firing up Our Music Player Whenever a Song is Selected",
          "Homework: Tidy up the Song Name to Remove the MP3 Ending",
          "Summary of Placing Retrieved Song Lists into a Table View"
        ],
        "Taking the App to the Next Level - More Data": [
          "Introduction to Taking the App to the Next Level - More Data",
          "Adding in Artist Information to our Database and App",
          "Reporting Number of Plays to our Database - Necessary for a Streaming License",
          "Summary of Taking the App to the Next Level - More Data"
        ],
        "Taking the App to the Next Level - Liking and Sharing": [
          "Introduction to Taking the App to the Next Level - Liking and Sharing",
          "Adding a Like Button for the Current Playing Song",
          "Adding a ‘Share on Facebook’ Button - Social Media Rocks!",
          "Summary of taking the App to the Next Level - Liking and Sharing"
        ],
        "Summary and Roundup": [
          "Summary of Everything You’ve Learnt so Far",
          "Where to go Next (How to Make Money From this Sort of App)",
          "Thankyou and a Special Gift Just For You"
        ]
      },
      "requirements": [
        "A mac running OSX or an OSX Virtual Machine",
        "An internet connection"
      ],
      "description": "Music is one of the biggest app categories across all app stores. They have the potential to earn substantial revenue.\nLearn the basic concepts, tools, and functions that you will need to build fully functional iOS music streaming apps with the popular programming language, Swift 2. Also learn how to set up your own server and upload music that your app will eventually play.\nThings You'll Learn\nXcode Installation and Setup\nBasic Streaming Functions on iOS\nHow to Setup a Server (free or paid)\nHow to Automate Music File indexing on a Server Using PHP (no PHP experience necessary)\nHow to Make an iOS App Communicate with a Server\nHow to Add Lock Screen Controls\nHow to Add Lock Screen Media Information\nHow to Handle Audio Interruptions like Phone Calls\nHow to Create Table Views and Custom table View Cells on iOS\nDynamically Adding More Data to Your App and Remote Database\nSharing Song Information on Facebook\nLiking a Track Through our Remote Database\n\n\nPowerful Skills at Your Fingertips\nBy learning to create both iOS apps as well as PHP and MYSQL backends you will become incredibly valuable to potential employers. Combining these 2 skills is the number one reason developers get hired for startups. Those startups need this information and are willing to pay for it!\n\n\n------------BONUS-----------\nNot only do you learn the ins and outs of streaming music in iOS apps but this course includes a MASSIVE bonus. I teach you how to create and setup a fully functional server that does the following:\nAutomatically scan for new music uploads and add them to a MYSQL database (with no input required from you)\nProduce PHP files that allow your app to access a backend\n------------------------------------\n\n\nContent and Overview\nNo knowledge is needed of programming for this course but it helps. If you are a complete beginner then please take my other course (iOS Apps for Complete and Utter Beginners) FIRST.\nYou will be taken on a journey through:\nHow to choose between free or paid servers\nHow to code a simple streaming function on iOS\nHow to add advanced audio features to your app\nHow to make your app talk to a server (aka - creating a backend)\nHow to report app usage statistics to your remote database\n\n\nThis course establishes a strong understanding of music app creation concepts and includes training on Xcode and Swift 2. It also includes training on MYSQL, PHP and cPanel. Each chapter starts with an introduction and sounds out with a summary to help you learn even better.\nWith these skills mastered, the course will take you through how to create a backend for your app (as well as the front end!). Complete this course and you'll discover you now have skills that are continuously in demand from most businesses.\nIncrease your value by joining now!\n\nCredit: Promo music provided by Ben Sound",
      "target_audience": [
        "Beginner/Intermediate programmers should take this course",
        "ABSOLUTE beginners who know nothing about programming SHOULD NOT take this course (take my other one instead!)",
        "People that want to make profitable streaming apps should take this course"
      ]
    },
    {
      "title": "Flutter Advanced Course - Clean Architecture With MVVM",
      "url": "https://www.udemy.com/course/flutter-advanced-course-clean-architecture-with-mvvm/",
      "bio": "Become a job ready flutter developer.",
      "objectives": [
        "Clean Architecture Design Pattern",
        "MVVM - Model - View - View Model Pattern",
        "ViewModel Inputs and Outputs",
        "Base ViewModel and Base UseCase",
        "Application Layer - Dependency Injection, Routes Manager and Application class",
        "Application Layer - Extensions and Shared Functions",
        "Data Layer - Data Sources (Remote Data Source/ Local Data Source)",
        "Data Layer - API Service Client (Same as Retorfit in Android)",
        "Data Layer - Calling APIs (Remote Data Source)",
        "Data Layer - Adding Logger Interceptor",
        "Data Layer - Caching APIs responses (Local Data Source)",
        "Data Layer - Json Serialization and Annotations",
        "Data Layer - Repository Implementation",
        "Data Layer - Mapper (Converting responses into Models)",
        "Data Layer - Mapper (Using toDomain Concept)",
        "Data Layer - Applying Null Safety",
        "Data Layer - Creating Mock APIs (Stub APIs)",
        "Domain Layer - Models",
        "Domain Layer - Repository Interfaces",
        "Domain Layer - UseCases",
        "Domain Layer - Either Concepts (Left - Failure) / (Right - Success)",
        "Domain Layer - Data Classes",
        "Presentation Layer - UI (Splash - Onboarding - Login - Register - Forgot Password - Main - Details - Settings - Notification - Search))",
        "Presentation Layer - State Renderer (Full Screen States - Popup States)",
        "Presentation Layer - State Management (Stream Controller - RX Dart - Stream Builder)",
        "Presentation Layer - Localisations (English - Arabic), (RTL - LTR)",
        "Presentation Layer - Assets Manager (Android and Ios Icons and Images sizes)",
        "Presentation Layer - (Fonts - Styles - Themes - Strings - Values - Colors) Managers",
        "Presentation Layer - Using Json Animations",
        "Presentation Layer - Using SVG images",
        "Using 18 Flutter Packages",
        "Getting Device Info (Android - Ios)",
        "Using Abstract classes"
      ],
      "course_content": {
        "Introduction": [
          "About the Course",
          "Content of the Course",
          "Who Can Attend this Course?"
        ],
        "Presentation Layer - Resources Manager": [
          "Lecture 4 - Creating Application Class",
          "Lecture 5 - Creating Colors Manager",
          "Lecture 6 - Creating Fonts Manager",
          "Lecture 7 - Creating Values Manager",
          "Lecture 8 - Creating Styles Manager",
          "Lecture 9 - Creating Theme Manager",
          "Lecture 10 - Adding Card Theme",
          "Lecture 11 - Adding App Bar Theme",
          "Lecture 12 - Adding Button Theme",
          "Lecture 13 - Adding Text Theme",
          "Lecture 14 - Adding Text Form Field Theme",
          "Lecture 15 - Start Adding Routes Manager",
          "Lecture 16 - Finish Adding Routes Manager",
          "Lecture 17 - Adding Strings Manager",
          "Lecture 18 - How to Select Image Sizes in Flutter?",
          "Lecture 19 - Best Way to Add Icons to Flutter Project"
        ],
        "Presentation Layer - Splash Screen": [
          "Lecture 20 - Start Splash Screen",
          "Lecture 21 - Adding Timer to Splash Screen",
          "Lec-22 Change App Name,Laucher Icon and Remove White Screen at Start for Android",
          "Lec-23 Change App Name,Laucher Icon and Remove White Screen at Start for Ios #1",
          "Lec-24 Change App Name,Laucher Icon and Remove White Screen at Start for Ios #2"
        ],
        "Presentation Layer - OnBoarding Screen": [
          "Lecture 25 - Adding Assets for Onboarding Screen",
          "Lecture 26 - Implementation Onboarding Screen Part1",
          "Lecture 27- Implementation Onboarding Screen Part2",
          "Lecture 28 - Implementation of Onboarding Screen Part3",
          "Lecture 29 - Implementation of Onboarding Screen Part4",
          "Lecture 30 - Implementation of Onboarding Screen Part5",
          "Lecture 31 - Implementation Onboarding Screen Part6",
          "Lecture 32 - Surprise"
        ],
        "Presentation Layer - MVVM": [
          "Lecture 33 - What is MVVM?",
          "Lecture 34 - Creating Base ViewModel",
          "Lecture 35 - Creating Onboarding Screen ViewModel",
          "Lecture 36 - What is Stream Controller?",
          "Lecture 37 - Adding Stream Controller to Onboarding Viewmodel",
          "Lecture 38 - Onboarding Viewmodel Logic Implemenation",
          "Lecture 39: Continue Onboarding Viewmodel Logic Implemenation",
          "Lecture 40 - Binding Onboarding Viewmodel to View",
          "Lecture 41 - How to Recive Data in View From Viewmodel?"
        ],
        "Data / Domain layers - Clean Architecture Design Pattern": [
          "Lecture 42 - What is Clean Architecture?",
          "Lecture 43 - Creating Mock APIs",
          "Lecture 44 - Data Layer - Adding Dependencies for network layer",
          "Lecture 45 - Data Layer - Adding APIs Responses",
          "Lecture 46 - Data Layer - Json Serialization",
          "Lecture 47 - Data Layer - Add API Service Client (Retrofit)",
          "Lecture 48 - Domain Layer - Creating Models",
          "Lecture 49 - Application Layer - Creating Extensions Functions",
          "Lecture 50 - Data Layer - Creating Mappers and Applying Null Safety",
          "Lecture 51 - Either Conecpt",
          "Lecture 52 - Domain Layer - Adding Repository, Request and Failure",
          "Lecture 53 - Data Layer - Remote Data Source",
          "Lecture 54 - Data Layer - Adding Netowrk Data Checker",
          "Lecture 55 - Data Layer - Adding Repository Implementer",
          "Lecture 56 - Data Layer - Adding Data Source Enum",
          "Lecture 57 - Data Layer - Adding Responses Codes",
          "Lecture 58 - Data Layer - Adding Responses Messages",
          "Lecture 59 - Data layer - Adding Extension on Data Sources",
          "Lecture 60 - Data Layer - Adding Error Handler Class",
          "Lecture 61 - Data Layer - Applying ErrorHandler on Repository Implementer",
          "Lecture 62 - Data Layer - Adding Dio Factory",
          "Lecture 63 - Data Layer - Adding Dio Logger Interceptor",
          "Lecture 64 - Presentation Layer - Adding Language Manager",
          "Lecture 65 - Application Layer - Adding Application Preferences",
          "Lecture 66 - Update Dio Factory with App Preferences",
          "Lecture 67 - Domain Layer - Adding Base UseCase",
          "Lecture 68 - Domain Layer - Adding Login UseCase",
          "Lecture 69 - Domain Layer - Getting Device Info Part 1",
          "Lecture 70 - Domain Layer - Getting Device Info Part 2"
        ],
        "Presentation Layer - Login Flow": [
          "Lecture 71 - Adding Login Viewmodel",
          "Lecture 72 - Adding Streams to Login ViewModel",
          "Lecture 73 - Adding Data Classes to Login ViewModel",
          "Lecture 74 - Usage of Data Classes",
          "Lecture 75 - Adding Login UseCase to Login ViewModel",
          "Lecture 76 - Binding Login ViewModel to Login View",
          "Lecture 77 - Login View UI",
          "Lecture 78 - Login View UI Continue",
          "Lecture 79 - Finalising Login UI",
          "Lecture 80 - Adding Stream Controller For Login Button",
          "Lecture 81 - Testing Login UI Implementation",
          "Lecture 82 - Adding Forgot Pasword and Register Texts"
        ],
        "Application Layer - Dependency Injection": [
          "Lecture 83 - Adding Dependency Injection App Module",
          "Lecture 84 - Add dependency injection Instances",
          "Lecture 85 - Add Dependency Injection Login Module",
          "Lecture 86 - How to Use Instance of Dependency Injection?"
        ],
        "Presentation Layer - State Renderer": [
          "Lecture 87 - Make App Makes HTTP Request (NOT only HTTPs)",
          "Lecture 88 - Testing Login API",
          "Lecture 89 - Showing Popup State Renderer",
          "Lecture 90 - Showing Full Screen State Renderer",
          "Lecture 91 - Adding State Renderer Implementation",
          "Lecture 92 - Adding State Renderer Implementation Part 2",
          "Lecture 93 - Adding State Renderer Implementation Part 3",
          "Lecture 94 - Adding State Renderer Implementation Part 4",
          "Lecture 95 - Adding State Renderer Implementation Part 5",
          "Lecture 96 - Adding State Renderer Implementation Part 6",
          "Lecture 97 - Adding State Renderer Implementation Part 7",
          "Lecture 98 - Applying State Renderer - Loading State",
          "Lecture 99 - Applying State Renderer - Error State - Empty State - Content State",
          "Lecture 100 - Adding Extension on State Renderer implementer",
          "Lecture 101 -Adding Implementation for Loading State Case",
          "Lect 102 Adding Implementation for (Error State-Empty State-Content State) Cases",
          "Lecture 103 - Handling showing many popup dialogs",
          "Lecture 104 - Adding Input Stream Controller Inside Base ViewModel",
          "Lecture 105 - Updating Login View with Flow State Controller",
          "Lecture 106 - Updating Login ViewModel with Flow State Controller",
          "Lecture 107 - Testing State Renderer Implementation",
          "Lecture 108 - Updating Login API in Mock Stub"
        ],
        "Presentation Layer - Handling Pre Login Flow": [
          "Lecture 109 - Handling Login Success Result to Go to Main Screen",
          "Lecture 110 - Updating Routes Navigation with App Prefernces",
          "Lecture 111 -Testing Navigation from Splash Screen"
        ]
      },
      "requirements": [
        "Dart and Flutter Knowlege is a MUST",
        "Install Android Studio or Visual Studio and have Flutter SDK ready"
      ],
      "description": "Flutter is defined as the Google’s UI toolkit for building beautiful, natively compiled applications for mobile (Android, iOS ) desktop (Linux, Mac, Windows, Google Fuchsia) and the web from a single codebase. Since Flutter is cross-platform, you can use the same code base for your iOS and Android app. This can definitely save you both time and resources. This course will help you to move from junior developer to experienced developer. You will have the knowledge of \"How to implement a structured project?\". Your code will be easily readable, maintainable and sustainable. You will get a real experience from a real project so that you will start coding from scratch to build clean architecture project with MVVM. You will build presentation layer, data layer, domain layer and application layer step by step. This architecture is designed to make it easier to create stable apps even when outer elements such as UI, databases, or external APIs are always changing. It’s essentially a collection of best practice design principles that help you keep business logic, or domain logic, together and minimize the dependencies within the system. After completing this course you can reuse the source code of this course and customize on it to build your clean architecture with MVVM project in a professional way.",
      "target_audience": [
        "Developer who already has a knowledge in dart and flutter",
        "Beginner and Junior developer who wants to master flutter",
        "Developer who is searching for advanced topics in flutter",
        "Developer who needs to create a structured project with clean architecture and MVVM",
        "Developer who took beginner courses and still needs more",
        "Developer who needs a course to become a job ready flutter developer"
      ]
    },
    {
      "title": "Android and iOS Apps for Your Wordpress Blog",
      "url": "https://www.udemy.com/course/android-and-ios-apps-for-wordpress-blog/",
      "bio": "Build a mobile app that interacts with your Wordpress Blog. Use HTML, CSS and JS to build you app for Android and iOS.",
      "objectives": [
        "Create Mobile Apps for Android and iOS",
        "Use Ionic CLI to create and deploy Mobile Apps",
        "Build apps that can interact with Wordpress Blogs and Sites",
        "Get and Post data to Wordpress Blogs",
        "Store data to mobile devices persistently.",
        "Use various Ionic Services to build outstanding apps.",
        "Install external Cordova and Phonegap Plugins to use with Ionic",
        "Use HTML, CSS and JS to build mobile apps."
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction and Objectives"
        ],
        "Getting Started": [
          "Tools and Packages",
          "Understanding REST and APIs"
        ],
        "Setting up Wordpress Blog": [
          "Setting up Wordpress Files",
          "Installing Wordpress Locally",
          "Importing Demo Content and Setting Up API"
        ],
        "Getting Started with the Mobile App": [
          "Creating the Ionic Application",
          "Inspecting the App files",
          "Creating Controllers"
        ],
        "Working with States and Templates": [
          "Creating States and Templates",
          "Creating the Side Menu UI",
          "Getting Categories from the Blog",
          "Making HTML Trusted",
          "$sce Quiz"
        ],
        "Further Developing the UI": [
          "Creating Menu Content Screen UI - Part 1",
          "Creating Menu Content Screen UI - Part 2",
          "Getting the Posts from Blog",
          "Trimming the Except",
          "Implementing Search",
          "Fixing Search Issues using $ionicScrollDelegate",
          "Ion Refresher - Pull Down to Refresh",
          "Ion Infinite Loading - Scroll to Load More",
          "Fixing Ionic Infinite Loading - Workaround",
          "Fixing Issues and using ng-src",
          "Creating Post Detail Page - Part 1",
          "Creating Post Detail Page - Part 2",
          "Creating Category Posts Page"
        ],
        "Using Advanced Angular Features": [
          "Toggling Favorite Posts",
          "Saving Favorites Persistently",
          "Creating the Favorites Page",
          "Adding Social Sharing Features",
          "Deployment and Testing"
        ],
        "Upcoming Module": [
          "Stay Tuned"
        ],
        "Sending Push Notifications using $cordovaPush": [
          "Push Notifications Intro",
          "Configuring the Blog with GCM",
          "Using $cordovaPush to register with GCM",
          "Configuring onNotificationReceived event listener",
          "Testing the App So Far",
          "Send Push Notification using a console",
          "Sending RegId to the Blog using POST",
          "Sending Push from the Blog and Testing"
        ]
      },
      "requirements": [
        "Basics of Ionic Framework, AngularJS, HTML, CSS and JS."
      ],
      "description": "In this course, you will learn to unleash the power of two most powerful frameworks, WordPress and Ionic. You will create a WordPress Blog and enable the RESTful JSON API on top of it. You will then create an amazing Ionic App that will interact with your WordPress blog to display information from your blog to the user of your app. You will learn to create amazing UI for your mobile app and at the end of it, you will have an app that will work both on Android and iOS.\nYou will learn...\nBasics of RESTful APIs\nSetup a WordPress Blog and API\nRetrieving JSON from WordPress\nCreate Ionic App with AngularJS\nCreating Multiple States and Controllers\nNavigate within States\nIonic Advanced Components\nSave Data within Devices persistently.\nCreate the APK for Android\n\n\nA whole module about Push Notifications is added. It will teach you how you can send Notifications to all the users of your Ionic Application from your WordPress Blog with just one click. Lean to send Push Notifications from your command prompt and also from your WordPress Blog via automation.",
      "target_audience": [
        "Beginners who want to learn mobile app development.",
        "Web Developers who want to develop apps for mobile devices.",
        "Developers who want to develop apps that work across platforms.",
        "Students who want to create fun school projects."
      ]
    },
    {
      "title": "Develop Full iOS Facebook Clone App in Swift, Xcode and PHP",
      "url": "https://www.udemy.com/course/create-facebook-swift-xcode-php/",
      "bio": "Best Swift Course Ever | Build Complete Facebook Clone | All Features & Functionalities | Build Custom Backend Server",
      "objectives": [
        "Learn to create the entire Facebook from scratch.",
        "Easily program in Swift.",
        "Easily program in PHP.",
        "Easily write complicated and advance MySQL scripts.",
        "Learn the entire Backend Development.",
        "Easily building complicated, advance and professional logics.",
        "Easily code in the most advance and professional manner which never been taught before."
      ],
      "course_content": {
        "Welcome to the Course": [
          "Swift 5 Update",
          "Hello All :)",
          "Introduction",
          "Important Message"
        ],
        "Developing the Entire Front-End Login Functionality for Our Facebook": [
          "Login - Introduction",
          "Files for Download",
          "Developing the Appearance of User Interface Using Same Logic Like in Facebook",
          "Building the Appearance of the Buttons, TextFields, Label and other Elements",
          "Learning and Implementing Constraints and Auto-Layout to the Cover",
          "Learning and Implementing Constraints and Auto-Layout to the UI Objects",
          "Deep Development of the User Interface Appearance - Extreme TextFields",
          "Deep Development of User Interface Appearance - Extreme Buttons, Views, Labels",
          "Implementing Fully Customized Animation of the User Interface",
          "Tracking all Keyboard Notifications and Signals of the User Interface",
          "Custom Animation of the Cover Like in the Facebook",
          "Developing the Behavior of the User Interface - Cover Move Up Animation",
          "Developing the Behavior of the User Interface - Images Move Up Animation",
          "Developing the Behavior of the User Interface - Buttons Move Up Animation",
          "What is Notifications and How to Implement Them?",
          "Understanding the Logic of the Programmatic Alignment and Layout of the Objects",
          "Login - Conclusion"
        ],
        "Developing Registration Functionality of the Facebook in Front-End": [
          "Registration - Introduction",
          "Developing Registration Page and Initiating the Relevant Segues",
          "Creating Programming Class for Registration Process in the Swift",
          "Building Custom and Deep Logic of Horizontal Swipe of the Page",
          "Developing User Interface of the Sub-Pages for the Horizontal Swipe",
          "Aligning All the Objects and Implementing Auto-Layout",
          "Custom Corner Radius of the Objects and Look of the App",
          "Working with Paddings and Implementing it into the Project",
          "Learning Regular Expressions and Implementing it for Data Validation",
          "Validating Entries for the Registration",
          "Creating and Scrolling Horizontally Sub-Pages of the Main Page",
          "Programming and Implementing Custom DataPicker and Custom Keyboards",
          "Programming and Integrating Custom Gestures and Finalizing Registration Function"
        ],
        "Deeply Programming the Backend and its Behavior with all PHP protocols.": [
          "Required Softwares and Tools for the Backend Development",
          "Understanding How Servers Work and Communicate with the App",
          "Creating Database and Table to Store All Information of the Users",
          "Constructing the Class and Building the Connection with the Server",
          "Understanding the Entire Communication of the Server and the App in Details",
          "Passing and Receiving Information in PHP Protocols",
          "Learning How to Secure and Protect the Data in the Server",
          "Sending the Information to the Server and Checking the Availability of Login",
          "Inserting New User Into the Server and Database via PHP Protocols",
          "Fetching Users ID from the Server for Further Actions",
          "Sending the Registration Request and Data to the Server From the App.",
          "Receiving the Response from the Server after the Registration from the App"
        ],
        "Developing the Entire Backend Functionality of the Login Feature": [
          "Understanding in Details the Logic of the Login Function",
          "Receiving Data in PHP for the Login",
          "Establishing the Connection with the Server for the Login",
          "Processing the Login after Receiving the Data in the Server",
          "Receiving the Login Response from the Server"
        ],
        "Processing the Login from the Facebook": [
          "Data Verification Before the Login Request",
          "Processing the Login and Receiving Confirmation Response from the Server"
        ],
        "Entering the Facebook after the Registration and the Login": [
          "Learning Hot To Consider and Program All Possible Scenarios in the Project Logic",
          "Learning How To Develop the Home Page",
          "Learning How To Save the User after the Login or Registration"
        ],
        "Learning How to Send Files to the Server and Upload Profile Picture and Cover": [
          "Learning How to Develop the Home Page and Work with the Objects",
          "Files for Download",
          "Developing the Appearance and the Look of the Home Page to be Same Like Facebook",
          "Developing Custom Action Sheet of the ImageViews to Select Several Images",
          "Implementing the Logic for Distinguishing ImagesViews and Assigning the Pictures",
          "Creating CALayers for Improving the Appearance for the ImageView",
          "Developing the Backend for Updating the Images and the Files",
          "Developing Dedicated Class and Protocols for Uploading the Files to the Server",
          "Sending JSON Information from the Server to the Facebook",
          "Learning MIME Type for the Parameters",
          "Sending the Files to the Server from Facebook",
          "Saving the Entire Information in the Application's Memory"
        ],
        "Loading User Information from the Server and Showing it in the Facebook App": [
          "Downloading the Full Name and Profile Picture from the Server",
          "Implementing Bio Data in the Server using PHP and Swift",
          "Developing the Logic of Showing and Hiding the Bio",
          "Improving the Code and User Interface Behavior of the Facebook"
        ],
        "Creating and Developing Bio Function of the Facebook": [
          "Developing the User Interface for the Bio Page",
          "Programming the Appearance and the Style of the Bio Page",
          "Implementing and Programming Placeholders",
          "Restricting the Entry of the Characters of the Bio",
          "Programming and Writing PHP Protocol to Update the Bio in the Server",
          "Developing the Dedicated Backend Class for Updating the Bio in the Server",
          "Sending New Bio to the Server from the Facebook",
          "Implementing Notification's Post to Update the User Interface",
          "Implementing Functions to Delete and Write a New Bio",
          "Updating PHP Backend Protocols for Better Performance"
        ]
      },
      "requirements": [
        "No prior programming knowledge is required.",
        "No paid softwares."
      ],
      "description": "Do you want to be cooler than Mark Zuckerberg who created the Facebook? Now YOU CAN DO IT as well!\nDo you want to write a code so easily like you type a message to your best friend? Now YOU HAVE A CHANCE to learn it. Don't miss it!\nIn this course, we're learning how to create the FULL Facebook for iOS from scratch. We're programming all functions and features used by Mark Zuckerberg in his Facebook. Firstly, we're building the logic of the function by using the schemes and patterns to understand it very well. Secondly, we're writing a professional code which runs swiftly. Thirdly we're programming the appearance and the behavior of the user interface. These main Three Steps are well known among the high paid developers. And now we're working within the same model.\nWHY EXACTLY ME:\nMy name's Akhmed. I am the creator of most popular coding courses, like:\n- Develop Full iOS Facebook Clone App in Swift, Xcode and PHP\n- The Complete iOS Development Course. Swift Programming A-Z\n- Develop Full iOS Twitter Clone App in Swift & Custom Backend\n- Develop Full iOS Instagram Clone App in Swift & Xcode\n⭐️⭐️⭐️⭐️⭐️\"The course was pretty useful. Ahmed Idigov does an absolutely fantastic job with this course. would recommend this course.\" - Student.\n⭐️⭐️⭐️⭐️⭐️\"This course was amazing. If you take this course from start to finish you will become a very advanced iOS developer. I feel very confident to take what I have learned and make my *own* social networking app.\" - Laravel Vue\n⭐️⭐️⭐️⭐️⭐️\"I love Akhmed!! His courses are so comprehensive\" - Gerard\n⭐️⭐️⭐️⭐️⭐️\"The course is a great start for those who want to develop in Swift. The instructor gives as much information as needed to accomplish all the assignments. Great and easy-to-listen course!\" - Omar\nHOW WE LEARN?\nWe're learning a thousands and thousands of features that have never been shown before by any of the instructors around the world. I'll explain to you every single line of the code, so, at completion you will know all about the coding! You'll have no questions about the development and coding, because I'll explain it like to a 5 years old kid.\n⭐️⭐️⭐️⭐️⭐️\"Very informative and easy to understand. thank you.\" - Student\n⭐️⭐️⭐️⭐️⭐️\"I like that fact that you get in and start creating the app in the very beginning. Some course talk about things architecture structure of the how the code is being translated into what you are seeing on the screen (MVC). I like to try things out before I understand the mechanics, similar to driving a car. Great course so far he shows you how to make mistakes and correct them.\" - Jeremiah Mathers\n⭐️⭐️⭐️⭐️⭐️\"Really well explained as to why everything is done. Highly recommend. I have only started the course but i am really enjoying it.\" - Abrey\n⭐️⭐️⭐️⭐️⭐️\"All Courses of this Instructor are incredible. I really respect him and appreciate his great job for us.\" - Al Dalleel\nWHAT WE LEARN?\nWe're learning to create the entire Facebook from scratch for iOS.\nWe're learning to develop and program all features and functions used in Facebook.\nWe're learning the entire Swift language.\nWe're learning the entire PHP language.\nWe're learning the entire MySQL language.\nWe're learning the entire Server (Backend) Development.\nWe're learning to build most complicated programming logics.\nWe're learning easily to program the most complicated programming codes.\nWe're learning to program same as High Paid Developers.\nWe're learning all programming secrets that have never been shown before by high paid developers.\nAnd many many other thousand and thousand features.\nSOME OF THE FEATURES AND FUNCTIONS WE IMPLEMENT\nlogin,\nregistration,\ndevelop backend,\ndevelop databases,\nwrite backend protocols,\nintegrate app in the server,\nconnect app and databases,\nsame user interface,\nsame animations,\nsame appearance,\nload user from the server,\nupload post with the picture,\nupload post without the picture,\nwrite a bio,\nremove a bio,\nload profile pictures,\nload covers,\nedit user's information,\nsee the full log of activity,\nlog out,\nload posts from the server,\nlike posts,\ncomment posts,\ndelete posts,\ndelete comments,\ndislike posts,\ncomplain about the post,\ncomplain about the user,\nfollow users,\nsend friendship requests,\naccept friendship requests,\nreject friendship requests,\nadd friends,\nremove friends,\nsee recommended users,\nsee all the posts of the followed users,\nsee all the posts of the friends,\ngo to friends home page,\ncomment posts of other people,\nlike posts of other people,\nuse pagination logic,\nsend a notifications,\nreceive a notifications,\nhighlight unseen notifications,\nsearch users,\nuse restrictions,\nuse dual functions,\nauto-layout,\nalignment,\ndelete notifications,\nuse privacy settings by restricting others to follow you or send a friendship requests\nand many many other functions.\n⭐️⭐️⭐️⭐️⭐️\"I'm learning new ways of doing things in XCode which is great!\" - Gustavo\n⭐️⭐️⭐️⭐️⭐️\"A worthy adventure! Great content, exciting functionality, and continuous learning. Very satisfied.\" - Jimmy\n⭐️⭐️⭐️⭐️⭐️\"In this course I learned many things that I had not found in others all over the Internet. Very useful! Really worth it! The teacher is very well trained! Very good! Thank you!\" - Julio\n⭐️⭐️⭐️⭐️⭐️\"Clear and concise, easy to understand with detailed explanations. I have trolled the net looking for decent learning resources for weeks and haven't found anything to this type of quality. A big thanks goes to Akhmed!\" - Keith\n⭐️⭐️⭐️⭐️⭐️\"All Courses of this Instructor are incredible. I really respect him and appreciate his great job for us.\" - Fahad\n⭐️⭐️⭐️⭐️⭐️\"The course is a great start for those who want to develop in Swift. The instructor gives as much information as needed to accomplish all the assignments. Great and easy-to-listen course!\" - Omar Hosni\n⭐️⭐️⭐️⭐️⭐️\"Clear and concise, easy to understand with detailed explanations. I have trolled the net looking for decent learning resources for weeks and haven't found anything to this type of quality. A big thanks goes to Akhmed!\" - Keith Harris\n⭐️⭐️⭐️⭐️⭐️\"I have been developed IOS app using Swift for 6 months. I think this course is the best! Akhmed is explaining all points of Swift. This is on the job training for being IOS developer. Thanks...\" - Bebe Tutu\n⭐️⭐️⭐️⭐️⭐️\"Just the high quality course I was looking for. I am at the beginner level when it comes to app development and I find it easy to follow Akhmed`s pace throughout the course. You will learn a lot about the different aspects of creating an advanced app and the end result is just as awesome as promised. Good work!\" - Kjetil G. T.\n⭐️⭐️⭐️⭐️⭐️\"This course really good contents to create your own social apps. Do not hesitate, I think it worth to learn how a real world app develop step by step. Come this amazing class!\" - Burak G.\n⭐️⭐️⭐️⭐️⭐️\"This course is for both beginners and experience users . As the beginners , the instructor has very detailed explanation on the code but you might need to dig out more basic swift knowledge by yourself . Overall , I believe this is the best ios swift course online till now to give your detailed and completed tourtiral to build a sophisticated and completed ios app . Lots haven learned . Great thanks to Akhmed!\" - Richard Mao\n⭐️⭐️⭐️⭐️⭐️\"Thank you for a really interesting course, i like the way you explain things and that you are covering so many things in short frame of time. I would definitely recommend the course to everyone who is interested in real time applications.\" - Kostya Y.\n⭐️⭐️⭐️⭐️⭐️\"Ok so I did figure out that the instructor has 2 very good things in him. 1) Very very friendly 2) He always answers your questions This is a course you must buy. There are so many new things to learn from him and whenever you need help just reach out to him. Akhmed is the best instructor :) Thanks\" - Abdullah Ehsan\n⭐️⭐️⭐️⭐️⭐️\"I have taken over 40 courses on Udemy and this tops my list of best courses. Clear, detailed, engaging, and in the end you have an app that has more functionality, more details and superior in every way to other courses I have taken. I only can hope that more courses are on the way. Excellent...\" - Stan Benavides\nSOME OF INTERESTING FACTS\n• Facebook has been created using mainly the same technology and same programming languages and techniques.\n• User Interface and appearance of the Facebook can't be distinguished from the original.\n• Content covered here has never been shown before by any of the developers.\nWHAT AT COMPLETION?\nAt completion of this course, you'll be creating and uploading to App Store the Top Rated iOS Apps writing an advance and highly efficient code.\n\n\nThe Best Purchase\nIf you are not satisfied, I offer a full money back guarantee, so long as you request it within 30 days of your purchase of the course. I regularly update course with additional videos explaining different awesome features.\nYou'll get +50 hours professional HD video education content including coding, creating user interface, learning designing, source code, other materials, design sketches and many many more.\n\nWhat are you waiting for? This is the only course that worth to go through! Don't hesitate and enroll in this course. It's investment in your bright feature!\n\n\niOS 13 AND SWIFT 5 VERSION IS INCLUDED",
      "target_audience": [
        "Everyone who wants to learn how to create the full Facebook from scratch. This course is for all experienced levels.",
        "Everyone who wants to learn the entire Swift Language.",
        "Everyone who wants to learn the entire PHP Language.",
        "Everyone who wants to learn the entire MySQL Language.",
        "Everyone who wants to learn the entire Backend Development.",
        "Everyone who wants to learn easily building complicated and advance logics.",
        "Everyone who wants to learn coding in a professional and untaught manner."
      ]
    },
    {
      "title": "React Native Unveiled: From Basics to Mobile Mastery",
      "url": "https://www.udemy.com/course/react-native-unveiled-from-basics-to-mobile-mastery/",
      "bio": "Mastering React Native: JavaScript Essentials, Core Concepts, Styling Techniques, and App Navigation",
      "objectives": [
        "Understand App Development: Grasp the nuances of app vs. web development and the role of React Native.",
        "Distinguish between CLI Tools: Differentiate between Expo CLI and React Native CLI.",
        "Master React Native Core Concepts: Learn the basic file structure, components, JSX, events, hooks, and props.",
        "Gain Proficiency in JavaScript: Master JS essentials like variables, operators, loops, and advanced functions.",
        "Acquire Styling Skills: Understand various React Native styling methods, including external files and layout techniques.",
        "Navigate Apps with Ease: Grasp the intricacies of stack and tab navigation in React Native.",
        "Hands-on App Development: Apply knowledge in creating forms, using scroll views, and building a color generator project.",
        "Optimize React Native Code: Learn techniques to develop React Native applications faster and more efficiently."
      ],
      "course_content": {
        "Introduction and Setup": [
          "What is App Development?",
          "Difference Between App and Web Development",
          "What is React Native and why is it in demand?",
          "Alternatives to React Native",
          "Difference between Expo cli and React Native Cli",
          "Course Materials"
        ],
        "Installations": [
          "VS Code Installation",
          "First React Native app"
        ],
        "Basic and core concepts": [
          "Core concepts",
          "File structure",
          "Components"
        ],
        "Basics of JavaScript": [
          "What are variables?",
          "Data types",
          "Operators",
          "If else if",
          "Arrow function",
          "For each loop",
          "Map",
          "Filter",
          "Reduce",
          "Template literals"
        ],
        "Diving into React Native": [
          "JSX",
          "Events",
          "Hooks",
          "Props"
        ],
        "Styling in React Native": [
          "Types of Styling",
          "External file",
          "Margin and Padding"
        ],
        "Navigate an App": [
          "Navigation in React Native",
          "Stack navigation",
          "Stack Navigation Styling",
          "Tab navigation",
          "Icon"
        ],
        "Form and Mini Project": [
          "Form",
          "Scroll view",
          "Color generator (Project)"
        ],
        "Code Optimization & Conclusion": [
          "Code with React Native 100x time faster",
          "Conclusion"
        ],
        "BONUS Section - Don't Miss Out": [
          "BONUS Section - Don't Miss Out"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge: Familiarity with any programming language will be beneficial, though not mandatory.",
        "Understanding of JavaScript: A foundational grasp of JavaScript concepts will be an advantage since React Native is built on it.",
        "Computer/Laptop: A working computer or laptop with a stable internet connection to install the necessary software and tools.",
        "Smartphone (Optional): A physical device can be useful for testing, though emulators can also be utilized.",
        "Passion to Learn: A genuine interest in mobile app development and a willingness to explore and experiment."
      ],
      "description": "In today's digital world, mobile apps have become an integral part of our daily lives, driving the need for proficient mobile app developers. This comprehensive course is tailored to cater to both beginners and experienced developers, providing a deep dive into the world of React Native.\nBegin your journey by unraveling the nuances of app development, distinguishing between app and web landscapes, and understanding the pivotal role of React Native in the current tech arena. Dive deeper to uncover the heart of React Native, including its core concepts, file structures, and vital components.\nJavaScript is the backbone of React Native, and we'll ensure you gain a robust understanding. Whether it's basic constructs like variables and operators or advanced functionalities like map and filter, this course has got you covered.\nBut what's an app without aesthetics and user experience? Learn the art and science of styling in React Native. Delve into various styling methodologies, layout techniques, and the critical aspect of app navigation. By the end of this course, not only will you be equipped with the knowledge to build dynamic apps, but you'll also have a keen sense of design and navigation, ensuring your apps are both functional and user-friendly.\nJoin us on this transformative journey and turn your mobile app ideas into reality with React Native. Whether you're aiming for a career transition, enhancing your current skills, or nurturing a hobby, this course is your gateway to mobile app mastery.",
      "target_audience": [
        "Beginners in Mobile Development: Individuals with little to no experience in mobile app development but are eager to start their journey. The course begins with foundational concepts, making it an excellent starting point.",
        "Web Developers: Those who have a background in web development and are keen on expanding their skill set to include mobile app development using a framework that leverages their existing JavaScript knowledge.",
        "Aspiring Full-Stack Developers: Developers aiming to broaden their horizons by adding mobile development to their repertoire, complementing their backend or frontend expertise.",
        "Entrepreneurs and Hobbyists: Individuals who have app ideas they want to prototype or develop, or simply those who enjoy building projects in their free time.",
        "Career Switchers: Professionals from other fields wanting to transition into the tech industry, particularly in mobile app development, and are looking for a comprehensive yet beginner-friendly guide."
      ]
    },
    {
      "title": "Compose Multiplatform - iOS/Android Development with Kotlin",
      "url": "https://www.udemy.com/course/compose-multiplatform-iosandroid-development-with-kotlin/",
      "bio": "Build Modern Mobile Apps with MVVM/Clean Architecture and 100% Shared UI. Single Codebase, two Platforms!",
      "objectives": [
        "Develop Android and iOS App from a Single Codebase",
        "Develop Android and iOS App with Shared UI",
        "Compose Multiplatform Framework",
        "Working with a Local Database (MongoDB Realm)",
        "Working with Network (Ktor)",
        "Offline Cache",
        "MVVM Architecture",
        "Clean Architecture",
        "Beautiful and Animated UI",
        "Material 3 Components",
        "Custom Theming",
        "And more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introducing with KMP",
          "Source Sets and Expect/Actual Mechanism",
          "KMP vs Compose Multiplatform",
          "Requirements",
          "Choosing the right IDE",
          "Preparing the Environment"
        ],
        "Project Setup": [
          "Project Source Code",
          "Generate a Project Template",
          "Project Structure Overview",
          "Choosing a Third-party API",
          "Adding dependencies",
          "Choosing a Theme/Colors"
        ],
        "Let's Build an App": [
          "Model an API Response",
          "Send a GET Request",
          "Persist a Timestamp value",
          "Filter the fetched Data from an API"
        ],
        "HomeScreen Header": [
          "Create RatesStatus",
          "Create CurrencyInputs",
          "Create AmountInput",
          "Implement a Local Cache",
          "Save and Read Source/Target Currencies",
          "Implement & Animate Switch Currencies Button",
          "Animate Source/Target CurrencyView"
        ],
        "Currency Picker": [
          "Create CurrencyPickerDialog",
          "Select CurrencyType & Persist Selected Currency Code"
        ],
        "HomeScreen Body": [
          "Create and Implement a HomeBody",
          "Add a Custom Font",
          "Update System Bar Colors"
        ],
        "Course Updates": [
          "#1 Fix an Exception in iOS app with Koin injection",
          "#2 Migrate to Realm 3.0"
        ]
      },
      "requirements": [
        "Basic knowledge about Jetpack Compose",
        "Basic knowledge about Android Development",
        "Basic knowledge about Kotlin Programming"
      ],
      "description": "Build a Mobile App for Android and iOS with 100% shared code for business logic as well as UI! That’s right. With the help of Compose Multiplatform framework, you will be able to fully develop an app, for both platforms using single programming language, Kotlin.\n\n\nForget about Flutter, React Native and other silly frameworks. Compose Multiplatform is the Future of multiplatform development, that targets not just mobile platforms, but Web and Desktop as well!\n\n\nThis is a 2 hour, well organized and concise course, carefully crafted to teach you exactly what you need to know, to be able to achieve this goal, as quickly as possible. I’m not gonna waste a second of your time, like other 20 hour courses that you’ve had experience with before.\n\n\nYou’re starting this journey by introducing with some important concepts related to Kotlin Multiplatform development, requirements and other steps to prepare your environment.\n\n\nAfter that we’re immediately starting with the project. The app itself is a simple Currency app that fetches a data from a third-party API and caches that data locally. The app will be able to work even without an internet connection. You’re going to work with both local and a remote data sources.\n\n\nBoth light/dark themes are supported.\nNew material 3 components.\nCustom theming.\nCustom UI components.\nSmooth animations.\n\n\nAnd more!\n\n\nSo what are you waiting for, it’s time to sharpen your skills and learn the right stuff.",
      "target_audience": [
        "Mobile App developers",
        "Kotlin Developers",
        "Android Developers",
        "iOS Developers",
        "Anyone who wants to build Mobile Apps for both iOS/Android with a Single Codebase"
      ]
    },
    {
      "title": "The Complete Android Oreo Developer Course - Build 23 Apps!",
      "url": "https://www.udemy.com/course/the-complete-android-oreo-developer-course/",
      "bio": "Learn Android O App Development using Java & Kotlin - build real apps including Super Mario Run, Whatsapp and Instagram!",
      "objectives": [
        "Make pretty much any Android app you like (your only limit is your imagination)",
        "Submit your apps to Google Play and generate revenue with Google Pay and Google Ads",
        "Become a professional app developer, take freelance gigs and work from anywhere in the world",
        "Bored with the same old, same old? Apply for a new job in a software company as an Android developer"
      ],
      "course_content": {
        "What Does The Course Cover?": [
          "What does the course cover?",
          "How To Get All The Free Stuff",
          "Frequently Asked Questions",
          "Asking Great Questions & Debugging Your Code"
        ],
        "Introduction To Android Studio": [
          "Introduction",
          "Android Studio Versions",
          "Installing Android Studio On MacOS",
          "Installing Android Studio On Windows",
          "Android Studio Overview",
          "Opening Sample Projects",
          "Opening Sample Projects (Android Studio files)",
          "Formatting Text",
          "Formatting Text (Android Studio files)",
          "Buttons",
          "Buttons (Android Studio files)",
          "TextFields",
          "TextFields (Android Studio files)",
          "Displaying Messages",
          "Displaying Messages (Android Studio files)",
          "Images",
          "Images (Android Studio files)",
          "Currency Converter",
          "Currency Converter (Android Studio files)",
          "Introduction To Android Studio Quiz"
        ],
        "Java Deep Dive": [
          "Introduction",
          "Hello World With Java",
          "Hello World With Java (Java files)",
          "Variables",
          "Variables (Java files)",
          "Arrays And Maps",
          "Arrays And Maps (Java files)",
          "If Statements",
          "If Statements (Java Files)",
          "Higher Or Lower",
          "Higher Or Lower (Android Studio files)",
          "Loops",
          "Loops (Java files)",
          "Classes And Objects",
          "Classes and Objects (Java files)",
          "App Number Shapes",
          "App Number Shapes (Java Code and Android Studio files)",
          "Java Deep Dive Quiz",
          "CCA Java Level 1"
        ],
        "Media: Images, Video and Sound": [
          "Introduction",
          "Layout",
          "Layout (Android Studio files)",
          "Fading Animations",
          "Fading Animations (Android Studio files)",
          "Other Animations",
          "Other Animations (Android Studio files)",
          "Game Connect 3",
          "Game Connect 3 (Android Studio files)",
          "Video",
          "Video (Android Studio files)",
          "Controlling Audio",
          "Controlling Audio (Android Studio files)",
          "Audio Volume Seeking",
          "Audio Volume Seeking (Android Studio files)",
          "Grid Layouts",
          "Grid Layouts (Android Studio files)",
          "App Basic Phrases",
          "App Basic Phrases (Android Studio files)",
          "Media Quiz"
        ],
        "Advanced Android Features": [
          "Introduction",
          "List Views",
          "List Views (Android Studio files)",
          "Times Tables Apps",
          "Times Tables App (Android Studio Files)",
          "Timers In Android",
          "Timers In Android (Android Studio files)",
          "App: Egg Timer",
          "App: Egg Timer (Android Studio files)",
          "Showing & Hiding UI Elements",
          "Showing & Hiding UI Elements (Android Studio files)",
          "App: Brain Trainer",
          "App: Brain Trainer (Android Studio files)",
          "Try And Catch",
          "Try And Catch (Java files)",
          "Downloading Web Content",
          "Downloading Web Content (Android Studio files)",
          "Downloading Images",
          "Downloading Images (Android Studio files)",
          "Advanced String Manipulation",
          "Advanced String Manipulation (Java code)",
          "App Guess The Celebrity",
          "App Guess The Celebrity (Android Studio files)",
          "Processing JSON Data",
          "Processing JSON Data (Android Studio files)",
          "App Whats The Weather",
          "App Whats The Weather (Android Studio files)",
          "Advanced Android Features Quiz",
          "CCA Java Level 2"
        ],
        "Maps & Geolocation": [
          "Introduction",
          "Using Maps In Your Apps",
          "Using Maps In Your Apps (Android Studio files)",
          "Customising Your Maps",
          "Customising Your Maps (Android Studio files)",
          "Getting The User's Location",
          "Getting The User's Location (Android Studio files)",
          "Showing The Users Location On A Map",
          "Showing The Users Location On A Map (Android Studio files)",
          "Getting Information About Locations",
          "Getting Information About Locations (Android Studio files)",
          "App: Hiker's Watch",
          "App: Hiker's Watch (Android Studio files)",
          "Adding A New Activity",
          "Adding A New Activity (Android Studio files)",
          "App: Memorable Places",
          "App: Memorable Places (Android Studio files)",
          "Maps & Geolocation Quiz"
        ],
        "Permanent Data Storage": [
          "Introduction",
          "Storing Data Permanently",
          "Storing Data Permanently (Android Studio files)",
          "Customising The Action Bar",
          "Customising The Action Bar (Android Studio files)",
          "Using Alert Dialogs",
          "Using Alert Dialogs (Android Studio files)",
          "App: Notes",
          "App: Notes (Android Studio files)",
          "SQLite Databases",
          "SQLite Databases (Android Studio files)",
          "Advanced SQLite",
          "Advanced SQLite (Android Studio files)",
          "Webviews",
          "Webviews (Android Studio files)",
          "App: News Reader",
          "App: News Reader (Android Studio files)",
          "Permanent Data Storage Quiz"
        ],
        "Instagram Clone": [
          "Introduction",
          "Setting Up Parse Server On AWS",
          "Setting Up Parse On AWS (Android Studio files)",
          "Advanced Parse Techniques",
          "Advanced Parse Techniques (Android Studio files)",
          "Advanced Queries",
          "Advanced Queries (Android Studio files)",
          "Parse Users",
          "Parse Users (Android Studio files)",
          "Login & Signup",
          "Login & Signup (Android Studio files)",
          "Advanced Keyboard Management",
          "Advanced Keyboard Management (Android Studio files)",
          "Showing The User List",
          "Showing The User List (Android Studio files)",
          "Importing Photos From The Camera",
          "Importing Photos From The Camera (Android Studio files)",
          "Viewing Users' Feeds",
          "Viewing Users' Feeds (Android Studio files)",
          "Instagram Clone Quiz"
        ],
        "Kotlin": [
          "Introduction",
          "IntelliJ and Setup",
          "Variables, Strings, and Ints",
          "Math and Comments",
          "If Statements and Booleans",
          "Lists and Arrays",
          "For Loops",
          "Maps",
          "Functions",
          "Classes",
          "Nullable",
          "Our First Kotlin App",
          "Our First Kotlin App (Android Studio files)",
          "Java and Kotlin",
          "Java and Kotlin (Android Studio files)"
        ],
        "Bluetooth App": [
          "Introduction",
          "The Basics",
          "The Basics (Android Studio Files)",
          "Device Discovery",
          "Device Discovery (Android Studio Files)",
          "Device Detail",
          "Device Detail (Android Studio Files)",
          "Listing Devices and RSSI",
          "Listing Devices and RSSI (Android Studio Files)"
        ]
      },
      "requirements": [
        "A Windows PC, Mac or Linux Computer",
        "ZERO programming knowledge required - I'll teach you everything you need to know"
      ],
      "description": "The Complete Android 8.0 Oreo Developer Course by Rob Percival and Nick Walter\nLearn Android App Development with Android 8.0 Oreo by building real apps including Twitter, Instagram and Super Mario Run.\n----\nPLEASE NOTE: The most recent Android OS version from Google is Android 11.  If you want to learn Android 11 development, check out our brand new The Complete Android 11 Developer Course: Build AMAZING Apps (taught by the brilliant Mashrur Hossain).\n----\nALSO NOTE: In this Oreo course I use the older Android Studio 3.0.1 version throughout as it's a great introduction to the development environment. For a smooth learning experience I'd recommend you use the same as me, but students can still use the latest Android Studio version available if they prefer!\n----\nWish you’d thought of Whatsapp/Instagram/Google Maps?\nMe too.\nBut until I work out how to build a time machine.\nHere’s the next best thing.\nThe Complete Android O Developer Course\nKicking things up a notch from my smash-hit The Complete Android N Developer Course (59,000 students + 8,500 five star ratings) -- my latest course is your fast-track, skip-the-queue ticket to building high-calibre Android apps.\nBecause, let’s face it… you’re busy. You want results. And you don’t have time to hang around.\nAnd while you wait for that big idea, developers in the US are making an average of $95,000 a year…\n“Excellent instruction and content. Continuously building apps keeps me engaged and drives the lessons home nicely.”\n“So far it's a great tutorial for beginners! You learn a lot of concepts in short videos and hence it's not boring. You get to make a lot of apps which makes it lot more practical and interesting!”\n“I'm a senior android developer already but this course has been a huge help in revising all the basics and making the android knowledge foundation even stronger.”\nWhy choose me?\nMy name’s Rob Percival, Udemy’s bestselling coding instructor.\nI believe that if YOU succeed, so do I.  That’s why for the last five years I’ve dedicated my life to building courses that get my students coding and building apps as quickly and efficiently as possible.\nWith 22 courses (and counting), and half a million students to my name - I’ve built a multi-million dollar business helping people learn to code. I’d love you to join my community and start seeing all the wonderful benefits coding can bring to your life, too.\nAnd if you don’t like what you learn? I offer a 30-day money-back return. No questions asked.\nLet’s dig in.\n“This course was absolutely the best thing that ever happened to me. Learned literally everything I needed in android app developing. Looking forward to take other courses from Rob Percival. A special thanks to him as well for making this course. Wish I could've given more than 5 STARS!”\nWhat’s so good about Android 8.0 Oreo?\n“Safer, smarter, more powerful and sweeter than ever!”\nWhether you’re looking to usher in the next generation of smart TVs, fitness wearables, games consoles, game-changing AI, smartwatches -- or just build simple apps for good old fashioned fun -- Android 8.0 Oreo is your key to unbridled creativity.\nAnd the potential market right now?\nIS HUGE.\nThe Play Store gives you access to a massive commercial audience with one active billion users downloading apps, last year alone.\nBut, I digress.\nFresh from Google’s workshop, Android 8.0 Oreo is stable, feature-rich and functional as ever. Not only can you develop more efficiently, but you’ll get new ways to extend your app.\nAll you need is the right idea, or that lucky bit of exposure -- and your ‘big break’ might just be around the corner…\nSo join my Android 8.0 Oreo revolution today and here’s what you’ll get\nLearn all the new features to Android Oreo, like Adaptive Icons, Picture-in-Picture, Downloadable Fonts and Virtual Reality with Daydream.\nDive into Augmented Reality with our ARCore section. Learn how to mix the physical and digital world through a user's camera.\nLearn essential skills like Bluetooth, game development, and sending users notifications.\nBONUS MINI COURSE: Get your free mini course on Kotlin. Kotlin is new programing language you can use in place of Java when making android apps. It’s gaining more and more support and is an essential skill as an Android developer.\n“Amazing!! I couldn’t believe that I could develop android apps after taking this course.”\n“Best teacher I`ve ever met on the internet. Wish I could give you 6 stars. Keep it up man.”\n“I'm loving the speed at which the course moves through the material. As someone who learns best by trying things out for myself, this has been a huge leap forward in my skill level..”\n“Unlike every other course in android and Java, this one includes many hands on coding projects that teach you how to REALLY build the stuff you want to build.”\nAnd that’s not all folks! You’ll also get my BONUS BUNDLE to support you through your learning journey…\nBecause I want you to have the vERY best start in your Android journey, I’ve put together a bonus bundle packed with everything you need to kick things off fully equipped and ready for action.\nNormally, this entire bundle of extras, bonuses and support would cost $$$$$$$$ for one year’s access.\nHowever, if you sign up today, you’ll get LIFETIME ACCESS to the course materials, downloads and of course, important updates.\nAll for just one pocket-friendly payment of $200.\nNot a penny more.\nHere’s what you’ll get:\n·      $500 WORTH of exclusive app templates, images and audio resources to use in your apps\n·      24/7 project support: via our buzzing course forums.\n·      One year of FREE WEB HOSTING on Eco Web Hosting's Advanced Package, worth £119. *Limited to one year per student not per course*\nWhat have you got to lose?\n“Simple, easy to follow, and being able to check Q&A for other people's questions and progress makes it more fun to learn.”\n“Excellent explanations. Easy-going attitude. I've done 2 popular Android courses on Udemy and this course had much clearer explanations than the other course I tried. I'm surprised how quickly we were able to build cool apps.”\n“I learnt not only how to program but also how to reduce complexity, lines of code, code readability and many other helpful programming techniques.”\nWhy take this course?\nFor the last three months, my team and I have been diligently exploring, interrogating and appraising Android 8.0 Oreo.\nOur goal?\nTo bring you our most comprehensive Android course yet. A rigorously tested, exhaustive (yet fun) course with serious thud factor. AKA our most extensive, thorough and detailed course on Android EVER.\nIn fact, click to buy this course, and you’ll get a COLOSSAL 35+ hours of delicious, chocolate-chipped, Oreo flavoured goodness to devour and enjoy at your leisure.\nYou’ll want to hungrily race through each digestible chapter as you naturally and easily consume each skill.\n“I could not have went to a better course to start with android native development. It offers everything I wanted in my app and also provides ample opportunities to engage learner in an efficient implementation of what one has learnt. Highly recommended.”\n“Amazing course! Just finished the Tic Toe app and still going on. Being a 4+ years experienced Java developer, i can tell that this is extremely well explained. Thanks Rob!”\n“For me, this is an excellent course. If you want to learn how to create Android apps without all the hassle of learning the entire history of Android, this course is a must. A lot of tutorials dive way to deep into theory which may result in tutorials becoming boring. Luckily, this is not the case here!”\nIs this course for you?\nThis is a one-size-fits-all course for beginners to experts.  So, this course is for you if you are:\nA total beginner, with a curious mind and a drive to make and create awesome stuff\nA fledgling developer, with a glint in your eye and a passion for cutting-edge tech\nA confident coder, looking for the key to the secret club (app developers unite!)\nA pro app developer-heavyweight, with an itch to build your dream app\nAn entrepreneur with big ideas\nBenefits to you\nRisk free! 30-day money-back guarantee\nFreedom to work from anywhere (beach, coffee shop, airport – anywhere with Wi-Fi)\nPotential to work with forward-thinking companies (from cool start-ups to pioneering tech firms)\nRocket-fuelled job opportunities and powered-up career prospects\nA sense of accomplishment as you build amazing things\nMake any Android app you like (your imagination is your only limit)\nSubmit your apps to Google Play and potentially start selling within hours\n“I really do love the challenges he puts at the end or middle of each video, I don't think there is another course that does this and i think they all should because it allows me to apply what i learned.”\n“The best course I have ever taken. Better than many of my University courses. Concepts are clear, teacher is engaging, pacing is excellent and the timing of examples is brilliant.”\n“I had no knowledge of coding whatsoever (and never thought I would have any) but this course has opened my eyes as to what I've been missing out on. Wish I would've taken this a long time ago!”\nThanks for getting this far. I appreciate your time! I also hope you’re as excited to get started as I am to share the latest Android developments with you.\nAll that remains to be said, is this…\nDon’t wait another moment.  The world is moving fast. And I know you’ve got ideas worth sharing.\nCoding really can help you achieve your dreams.\nSo click the button to sign up today – completely risk-free.\nAnd join me on this trailblazing adventure, today.",
      "target_audience": [
        "Anyone who wants to be an app developer: This is a complete course, just like my Complete Web, iOS and Apple Watch courses. It will teach you how to make money from your apps as well as how to code.",
        "Anyone who wants to learn to code: Java is a fantastic language to learn how to code with.",
        "Anyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work is your key to a hugely powerful world."
      ]
    },
    {
      "title": "HWS Swift Coding Challenges: Real Problems - Real Solutions",
      "url": "https://www.udemy.com/course/coding-challenges/",
      "bio": "Get iOS interview ready and ace the whiteboard test - Or level up your current Swift skills (Updated to Swift 5)",
      "objectives": [
        "Increase your iOS problem solving skills by working through real world Swift coding challenges",
        "Take the whiteboard test with confidence after completing this course and secure that iOS job"
      ],
      "course_content": {
        "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources": [
          "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources"
        ],
        "Introduction - What will i learn in this course?": [
          "Introduction to Swift Coding Challenges - All Swift 5 Source code download here"
        ],
        "Strings": [
          "Challenge 1- Are the letters unique?",
          "Challenge 2- Is a string a palindrome?",
          "Challenge 3 - Do two strings contain the same characters?",
          "Challenge 4 - Does one string contain another?",
          "Challenge 5 - Count the characters",
          "Challenge 6 - Remove duplicate letters from a string",
          "Challenge 7 - Condense whitespace",
          "Challenge 8 - String is rotated",
          "Challenge 9 - Find pangrams",
          "Challenge 10 - Vowels and consonants",
          "Challenge 11 - Three different letters",
          "Challenge 12 - Find longest prefix",
          "Challenge 13 - Run-length encoding",
          "Challenge 14 - String permutations",
          "Challenge 15 - Reverse the words in a string"
        ],
        "Numbers": [
          "Challenge 16 - Fizz Buzz",
          "Challenge 17 - Generate a random number in a range",
          "Challenge 18 - Recreate the pow() function",
          "Challenge 19 - Swap two numbers",
          "Challenge 20 - Number is prime",
          "Challenge 21 - Counting binary ones",
          "Challenge 22 - Binary reverse",
          "Challenge 23 - Integer disguised as string",
          "Challenge 24 - Add numbers inside a string",
          "Challenge 25 - Calculate a square root by hand",
          "Challenge 26 - Subtract without subtract"
        ],
        "Files": [
          "Challenge 27 - Print last lines",
          "Challenge 28 - Log a message",
          "Challenge 29 - Documents directory",
          "Challenge 30 - New JPEGs",
          "Challenge 31 - Copy recursively",
          "Challenge 32 - Word frequency",
          "Challenge 33 - Find duplicate filenames",
          "Challenge 34 - Find executables",
          "Challenge 35 - Convert images",
          "Challenge 36 - Print error lines"
        ],
        "Collections": [
          "Challenge 37 - Count the numbers",
          "Challenge 38 - Find N smallest",
          "Challenge 39 - Sort a string array by length",
          "Challenge 40 - Missing numbers in array",
          "Challenge 41 - Find the median",
          "Challenge 42 - Recreate index(of)",
          "Challenge 43 - Linked lists",
          "Challenge 44 - Linked list mid-point",
          "Challenge 45 - Traversing the tree",
          "Challenge 46 - Recreate map()",
          "Challenge 47 - Recreate min()",
          "Challenge 48 - Implement a deque data structure",
          "Challenge 49 - Sum the even repeats",
          "Challenge 50 - Count the largest range",
          "Challenge 51 - Reversing linked lists",
          "Challenge 52 - Sum an array of numbers",
          "Challenge 53 - Linked lists with a loop",
          "Challenge 54 - Binary search trees"
        ],
        "Algorithms": [
          "Challenge 55 - Bubble sort",
          "Challenge 56 - Insertion sort",
          "Challenge 57 - Isomorphic values",
          "Challenge 58 - Balanced brackets",
          "Challenge 59: Quicksort",
          "Challenge 60 - Tic-Tac-Toe winner",
          "Challenge 61- Find prime numbers",
          "Challenge 62 - Points to angles.rtf",
          "Challenge 63 - Flood fill",
          "Challenge 64 - N Queens"
        ],
        "90 Multiple Choice Questions - Novice - Intermediate - Expert": [
          "Multiple Choice questions - Novice",
          "Multiple Choice - Intermediate",
          "Multiple Choice - Expert"
        ],
        "Frequent Flyer Club - Hacking With Swift Coding Challenges": [
          "Frequent Flyer Club - Coding Challenges"
        ],
        "Tour of Paul Hudson's Hacking With Swift site": [
          "Tour of Paul Hudson's Hacking With Swift site"
        ]
      },
      "requirements": [
        "You should have at least 6 months of Swift training under your belt",
        "You should have built some of your own Swift apps, or taken the Hacking with Swift course before starting this coding challenge course"
      ],
      "description": "Swift Coding Challenges is produced from the \"Hacking with Swift\" series of tutorials, which are written and authored by the award winning Swift programmer, Paul Hudson, and these videos were made with his permission\nand support. You can always be guaranteed you're learning the latest and greatest Apple technologies in the HWS tutorials. Hacking with Swift is one of the most popular Swift tutorial series online, which uses an approach that teaches you Swift programming incredibly quickly, and you end up with a huge library of finished projects that are yours to develop further, or ship to the App Store. Paul has received high praise from the creator of the Swift language, Chris Lattner, for his outstanding method of teaching, and series of Swift tutorials. And working together with iOS developer Steve DeStefano, the Hacking with Swift series of programming training videos are simply the fastest way to learn how to code in the Apple eco-system.\nNote: Section 2 has the Swift 5 update for all the challenges, questions and answers.\nCheck out all of Paul Hudson's Swift tutorials and books at HackingWithSwift\n\nThis course is designed to get you ready for your iOS job interview, and for that whiteboard test. All these challenges are real world examples that you can expect to see in an actual iOS interview. And if your not looking for a job, than these challenges are a great way to level up your current iOS skills, and get a great library of coding solutions for your reference to boot.\nYou'll be presented with various challenges to solve, and I’ll be helping you along with hints, as well as the solutions and explanations for each of the challenges. I also provide a complete transcript of each lecture (solution included) for you to download as a text file.\n\nAnd, this course is called Swift Coding Challenges because you will be challenged. There is no learning without struggle, so if you don’t take the time to watch each challenge and try it for yourself in Xcode, you’ll never know how you would have fared.\nNote: This course is not for Swift beginners, so you should have at least six months of Swift behind you...preferably a year. If you’ve completed Paul Hudson's Hacking with Swift instructional tutorials at HackingWithSwift dot com, you should to be able to handle the Easy challenges, and some of the Tricky ones. If you’ve completed his Pro Swift, then you should be able to handle most of the Taxing problems too. If you consistently struggle with challenges, then you should definitely watch Paul's Pro Swift videos too. See all his tutorials and books at HackingWithSwift\nWhat will be covered:\nCourse content from the award winning Swift programmer Paul Hudson's book- Swift Coding Challenges\nThe latest Swift is used - Swift 5\nPrepare for iOS interviews and ace the whiteboard test\nTest yourself against your friends and level up your skills\nHints are given in for each challenge to help if you get stuck\nThree skill levels: Novice - Intermediate - Senior developer\nSolutions are given for all challenges - many challenges will have multiple solutions given\nMost challenges can be done in a playground - the rest will use a mac command line project\nDeep explanations as to how the code works\nAll the lectures are downloadable as a text file transcript - for your own coding library\nChallenge yourself with Strings - Numbers - Files - Collections - Algorithms\nMultiple choice challenges - Novice - Intermediate - Expert levels",
      "target_audience": [
        "This course is for developers who want to prepare for an iOS interview - Or to simply level up your current Swift skills",
        "If you are a novice coder with about six months of Swift training, then you'll gain a lot more knowledge and benefit by taking this course"
      ]
    },
    {
      "title": "Flutter & Dart: Complete App Development Course",
      "url": "https://www.udemy.com/course/flutter-dart-the-complete-flutter-app-development-course/",
      "bio": "Build Flutter iOS and Android Apps with a Single Codebase: Learn Google's Flutter Mobile Development Framework and Dart",
      "objectives": [
        "Be ABLE to Build Any iOS and Android App You Want",
        "MASTER Dart and Flutter Framework",
        "BUILD Full-fledged Apps for Your Startup or Business",
        "CREATE a Portfolio of Apps to Apply for Development Job",
        "WORK as A Cross-Platform Mobile Developer Who can Develop iOS and Android Apps",
        "GAIN a Competitive Advantage in the Workplace as a Flutter Mobile Developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About Course Update - 2024 - New VS Legacy Videos",
          "Flutter Development Environment Setup - Overview",
          "Futter Dev Website - Overview"
        ],
        "Windows - Flutter Development Environment Setup": [
          "Setup Flutter on Windows"
        ],
        "MAC - Flutter Development Environment Setup": [
          "Flutter Setup on Mac"
        ],
        "Download Course Resources": [
          "Download - Resources",
          "Code"
        ],
        "Setup Visual Studio Code and Running the First Flutter App": [
          "Setup VS Code IDE - Installation and Setup",
          "Create a Flutter Project",
          "Running our First Flutter App on Emulator"
        ],
        "Why Flutter - Benefits and Motivation Deep Dive": [
          "Why Flutter and Benefits and Motivation",
          "Hands-On - The Fortune Cookie App",
          "Randomizing a List of Strings",
          "Dart Basics - Variables, Strings, and Integers and Vars",
          "Dart Basics - Introduction to Functions - the Void",
          "Dart Basics - Function with Int Return Type",
          "Dart Basics - Passing Arguments in Functions",
          "Dart Basics - Function Return Types and Arguments - Put it All together",
          "Hands-On - Fortune Cookie App - Add a Card & Introduction to Widgets",
          "Hands-On - Fortune Cookie App - Add Images as Assets and Show & Final Remarks"
        ],
        "Flutter Widgets - Stateful and Stateless Widgets Deep Dive": [
          "Flutter Widgets Overview - Stateful vs Stateless Widgets",
          "Widget Hierarchy and Reusability Overview",
          "Hands-On - The Build Method & SetState",
          "The Const Keyword",
          "Tip Calculator App - Introduction and Overview",
          "Tip Calculator - Create Project and Setup the AppBar",
          "Adding a Container and Decorating It",
          "Widgets Documentation & Basics of Theming",
          "Understanding Theme and the BuildContext",
          "Widgets & Dart Classes and Objects - Introduction to OOP",
          "Refactoring Style and Finalizing the Top Widget",
          "Create the Bill Amount Container and the TextField",
          "Creating the Split Bill Section",
          "Adding the Increment and Decrement Functionality",
          "Refactor the PersonCounter Widget",
          "Add the TipPercentage and Slider Widgets",
          "Dart Basics - Required and Named Parameters",
          "Refactor TipSlide Widget",
          "Refactor the BillAmount TextField",
          "Add Tip Calculation Logic",
          "Tip Calculator Full Widget Refactor",
          "Section Summary"
        ],
        "Flutter State Management - Provider & Improving Previous Apps": [
          "Introduction to Provider State Management Package",
          "Setup Provider & Understanding Flutter Packages and Dependencies",
          "Setup Provider Model Class and Implementing a Consumer",
          "Consumer VS ProviderOf - Overview",
          "Hands-On - ProviderOf Limitations",
          "Hands-On - Random Fortune App - Adding a Provider",
          "Hands-On - Tip Calculator - Add Provider and Code Refactor",
          "Hands-On - Tip Calculator - Add ThemeProvider",
          "Hands-On - Tip Calculator - Implement Dark & Light Modes",
          "Dart Intermediate - Introduction to OOP Inheritance",
          "Dart & Widget - Inheritance in Flutter Widgets",
          "Dart Intermediate - Override and the toString Method",
          "Section Summary"
        ],
        "Flutter Navigation - Parsing JSON Files, Listview Widget - Build a Movie App": [
          "Navigation - Movie App Demo",
          "Flutter ListviewBuilder Widget - Show Movies on a Listview",
          "Dart - Arrays and Lists and Loops",
          "Dart - Lists and List Types - Adding and Removing Items from a List",
          "Hands-On - Create a Movie Provider",
          "Hands-On - Adding a ListTile for Each Movie - Decorate the List Items",
          "The Movie Model Class - The JSON Movie File Overview",
          "Dart - Dart Maps and Creating a Movie Model Class",
          "Hands-On - Creating the MovieParser Class",
          "Hands-On - Updating MovieProvider to Parse Movies & Show Movies on the List",
          "Dart Future Type - Async - Await - Overview",
          "Hands-On - Costumizing ListItem with ExpansionTile",
          "Hands-On - Adding Navigation to Movie Details Screen",
          "Hands-On - Passing a Movie to Movie Details Screen",
          "Refactor - Extract Custom Widget",
          "Hands-On - Adding Image to the CircleAvatar",
          "Hands-On - Show Image Posters on Details Screen",
          "Hands-On - Hide the Read More Button",
          "Section Summary"
        ],
        "Data Persistence with Sqlite Database & Parsing JSON From APIs - Book Tracker": [
          "Introduction to the Book Tracker App - Demo",
          "Hands-On - Create the Book Reader Project & Adding the BottomNavigationBar",
          "Hands-On - Setting up the onTap for NavigationBarItem",
          "Hands-On - Creating All Screens and Showing On BottomNavItem Clicked",
          "The Google Books API Endpoint - Overview",
          "Hands-On - Create the Book Model Class",
          "Hands-On - The Network Class",
          "Hands-On - Getting JSON Payload and Showing in the Console",
          "Hands-On - Create a List of Book Objects Mapped into Objects & Show Them",
          "Dart Basics - Control Flow - Branching",
          "Dart Basics - The NOT Operator",
          "Dart Basics - TryCatch and Exceptions",
          "Hands-On - Showing Book Searches on a Listview",
          "Hands-On - Adding a Gridview and Showing Book Images",
          "Hands-On - Add Titles and Authors and Fix the Overflow Issue",
          "Hands-On - Add GestureDetector and Named Routes - Show Details Screen OnClick",
          "Hands-On - Add BookDetailsArgument & Pass a Book Object & Null Safety in Flutter",
          "Hands-On - Add Image and Book Title to DetailsScreen",
          "Hands-On - Refactor Gridview Widget",
          "Hands-On - Add Buttons and Description of the Book",
          "Introduction to Datases - SQLite & Creating the SQFlite Database Helper Class",
          "Hands-On - Add onCreate Function to Create a Table",
          "Hands-On - Add Insert and ReadAll Books Methods",
          "Hands-On - Save Book & Read Books",
          "Hands-On - Show Saved Books in the saved Screen",
          "Hands-On - Add ToggleFavorite Status Method",
          "Hands-On - Add Books to Favorite",
          "Hands-On - Delete Book",
          "Hands-On - Save and Show Favorites",
          "Hands-On - Adjust Favorites & Save Buttons Dynamically",
          "Hands-On - Simplify Showing the Save or Favorites Buttons",
          "Hands-On - Toggle the isFavorite and Change the Icon and Text on the UI",
          "Section Summary"
        ]
      },
      "requirements": [
        "A Computer - Mac or PC",
        "No Previous Programming Experience Required - I'll go over Everything You'll Need to Get Started",
        "Anyone Who Has the \"I Can Do It\" Mentality",
        "Willingness to Learn By Doing - You'll have a Step-by-Step Learning Process with Challenges and Exercises for Better Retention"
      ],
      "description": "Full Course Update in 2024\nFlutter Development is here to stay!\nWelcome to The Complete Flutter App Development Course (The World's First Complete Dart and Flutter Course).\nFlutter is the new Cross-platform Mobile Development Framework created by Google, allowing developers to build Android and iOS Apps with one single codebase!\nFlutter is the BEST way to create cross-platform apps that otherwise would require two distinct mobile development teams to create.\nWhy is Flutter a BIG Deal?\nFlutter is a big deal because any developer (or anyone who wants to learn mobile development) can now build native Android and iOS apps with one codebase ONLY! This means, instead of having to learn Objective-C or Swift to build iOS apps, and Java, or Kotlin to build Android apps, you can now use Flutter Mobile Development Framework to build apps that run natively on both iOS and Android devices using the General-purpose Dart Programming Language.\nBy learning Flutter App Development, you'll be able to build iOS and Android apps with a single codebase!  This course is the ultimate Flutter tutorial created for those who want to build cross-platform iOS and Android mobile apps using the Dart Programming language.\n\n\nThis course is fully hands-on, in which you'll get the chance to practice and learn:\nDart Programming Language - Fundamentals and intermediate topics\nHow to understand Flutter Mobile Development by building apps incrementally.\nHow to design, build, debug Flutter Android and iOS Apps\nHow to get Flutter apps to communicate with a realtime database - Firestore\nHow to build robust apps with Flutter.\nYou’ll see how easy it’s to get started building Android and iOS apps using Google’s Flutter App Development Framework!\nThe course is structured in such a way to improve your knowledge retention - by having a lot of hands-on projects.  In each section of the course, you will be practicing and building something meaningful and useful, which will further your understanding of Flutter iOS and Android Development.\nFor instance, you'll start by learning the very basics of the Dart Programming language (which is the programming language used in Flutter) - you'll learn control flow and functions, how to do arithmetic in Dart, and so forth.\nNext, you'll learn Object-Oriented Programming in Dart - understanding how to construct classes and Objects and how it all works when building robust programs.  Furthermore, you'll learn intermediate and advanced Dart topics such as Abstract classes, Interfaces, and Data Structures.\nOnce you've learned the Dart Programming language, you'll then start with Flutter Mobile Development.  You'll start by building small, simple iOS and Android apps using Flutter, such as the Business Card app.  Then, we move into the realm of Stateful Widgets in Flutter - how to manage state in an App.\nAlong the way, we continue to build several fun apps to solidify the main, fundamental Flutter concepts.  You'll also have several challenges you need to further dive deeper into understanding Flutter concepts.\nContinuing with the course, you'll also have the opportunity to learn how to parse JSON from a remote API into your Flutter app and cleanly display the parsed data to the user using Material Design concepts.  Additionally, you'll learn how to connect your app to Firebase/Firestore and use a real-time database.\nYou'll finish the journey by learning how to package up your Flutter iOS or Android app to publish on either the Appstore or Google Play store.\nThe course will take you from zero to hero - from knowing nothing (or a little) about Flutter iOS and Android Mobile development to building complex, stunning mobile applications!\n\n\nWhy Should You Take This Course?\n\nMy name is Paulo Dichone; I've created the most best-selling online programming courses (with over 250,000 happy and satisfied students).\nI'm a Software Engineer, a teacher, and the author of highly rated Development courses on Udemy. I've taught over 100,000 students online and received over 15,000 reviews. Students love my teaching methodology, which is heavy on hands-on, project-based approaches.\nI know how hard it can be to learn programming and Android development - there's a lot of information out there, but the problem is that it needs to be completed, and it needs to be updated.  I understand how frustrating it's to try to learn something independently and spend months without seeing progress!\n\n\nThis Course Also Comes With:\nLifetime Access to All Future Updates\nA responsive instructor in the Q&A Section\nLinks to interesting articles and lots of good code to base your next template onto\nUdemy Certificate of Completion Ready for Download\nA 30 Day, \"No Questions Asked\" Money Back Guarantee!\n\n\nTake this complete Flutter course now, completely risk-free!",
      "target_audience": [
        "Beginner Developers and Intermediate- Advanced Web or Mobile Developers new to Dart and Google Flutter Mobile SDK",
        "Android Developers Who Want to Build iOS Apps with Single Codebase",
        "iOS Developers Who Want to Build Android Apps with Single Codebase",
        "Web Developers Who Want to Build Android and iOS Apps with Single Codebase",
        "Entrepreneurs Who Want to Build Android and iOS Apps with Single Codebase",
        "Managers and Program Managers Who Want to Learn How to Build Android and iOS Apps with Single Codebase"
      ]
    },
    {
      "title": "Mobile App Development with .NET MAUI : The Complete Guide",
      "url": "https://www.udemy.com/course/mobile-app-development-with-net-maui/",
      "bio": "Master Cross-Platform Mobile App Development with .NET MAUI: Build Real-World Apps for Android, iOS, and Windows",
      "objectives": [
        "Build beautiful, fast and native-quality apps with .NET MAUI",
        "Build iOS and Android apps using just one programming language (C#)",
        "Learn how to use the Hierarchical Navigation and implement modal pages",
        "Create News Application from scratch",
        "Work with different kind of layouts",
        "Create Darbuka Music Instrument App",
        "Create Kids Learning App",
        "Create Currency Converter",
        "Understand all the fundamental concepts of .NET MAUI App development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Tooling & Prerequisites",
          "Installation Guide"
        ],
        "How to Create .NET MAUI Apps from Scratch": [
          "Create .NET MAUI App From Scratch",
          "Run MAUI App in Emulator"
        ],
        ".NET MAUI Controls & Layouts": [
          "Stacklayout",
          "User Card Design",
          "XAML Controls",
          "ScrollView",
          "FlexLayout",
          "GridLayout",
          "Spacing & Span in GridLayout"
        ],
        "BMI Calculator": [
          "BMI Calculator Overview",
          "Design BMI Calculator",
          "Tap Gesture in .NET MAUI",
          "Working with Sliders",
          "BMI Code Behind Functionality",
          "Working with Navigations",
          "BMI Result Page",
          "BMI Result Page Code Behind Functionality",
          "Source Code : BMI Calculator"
        ],
        "Working with List & Collectionview": [
          "Listview Overview",
          "Implement ListView in MAUI",
          "Item Template and Data Template in ListView",
          "Data Source & Data Binding",
          "Interactivity with ListView",
          "Consume ListView Selected Data",
          "List View Selection Issue",
          "Implement Collection View in MAUI",
          "Interactivity with Collection View",
          "Collection View Items Spacing",
          "Source Code : Fruits App"
        ],
        "Darbuka Playing App": [
          "Darbuka App Overview",
          "Design Darbuka App",
          "Wrap Controls in Darbuka Frame",
          "Play Darbuka Sound",
          "Animations with Image Button",
          "Source Code : Darbuka App"
        ],
        "Kids Learning App": [
          "Kids App Overview",
          "Add Learning Item and Data Classes",
          "Design Kids App Main Page",
          "Kids App Main Page Code Behind Logic",
          "Design Kids Learning Detail Page",
          "Text to Speech in Kids App",
          "Source Code : Kids App"
        ],
        "NEWS App in MAUI": [
          "News App Overview",
          "Design News Page",
          "News Category Collection View",
          "Collection View For News",
          "How to Get News Api",
          "Create C sharp Model Classes",
          "Create Api Service Class",
          "Consume News Api",
          "Populate Category Data in Categories Collection View",
          "News List Page",
          "Navigation from News List to News Detail Page",
          "News Detail Page",
          "Source Code : News App"
        ],
        "Currency Converter App": [
          "Currency Converter Overview",
          "How To Get Currency Exchange Api",
          "Design Currency Converter Page",
          "Consume Currency Converter Api",
          "Source Code : Currency Converter"
        ],
        "Shell": [
          "Flyout",
          "Tabs",
          "Shell Based Navigation",
          "Passing Data Using Query Property",
          "Display Data on Home Page",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "You should be familiar with C#. Because knowledge of C# is must for this course.",
        "Visual Studio 2022 with windows edition Or Mac Edition if you want to build apps for IOS.",
        "Android Device or Emulator for android app testing",
        "IOS Simulator or device for IOS app testing."
      ],
      "description": "Welcome to the First Real World App Development course with .NET MAUI. In this comprehensive course, you will learn everything you need to know about building beautiful Android and iOS apps using .NET MAUI.\nOur course covers all the fundamentals of .NET MAUI, including Layouts & Controls, Hierarchical Navigation, Model pages, List View, Collection View, Shell and much more.\n\n\nYou will also learn how to create a range of different apps, including:\nKids Learning Application\nEgyptian Darbuka Instrument App\nBMI Calculator\nCurrency Converter App\nNEWS Application\n\n\nPrerequisites\nTo successfully complete this course, you should have a basic understanding of C# and XAML. However, if you are completely new to .NET MAUI, don't worry! We'll cover everything from scratch.\n\n\nRemember\nPlease note that we will be using Windows machines to develop the .NET MAUI applications. Although you can build applications for Android and Windows on a Windows machine, you will need an iPhone to test IOS applications. However, if you have a Mac OS, you can also test IOS applications.\n\n\nWhat you'll get from this course ?\nBy the end of the course, you will receive all the Application Source Code and helpful materials such as code snippets and assets. We understand the value of your time, and that's why we have designed this course to be short, comprehensive, and easy to understand.\nSo, why wait? Join our Complete Real World .NET MAUI Development Course today and start building amazing apps!",
      "target_audience": [
        "If you've an experience of C# then take this course.",
        "If you're already a Xamarin Developer and wants to build application with .NET MAUI then take this course.",
        "If you want to make cross platform applications with a single code base then take this course."
      ]
    },
    {
      "title": "Flutter Beginner Tutorial - Build own App",
      "url": "https://www.udemy.com/course/free-flutter-beginner-tutorial-build-own-app/",
      "bio": "Learn the dart and flutter basics",
      "objectives": [
        "Learn the basics of dart and flutter and build an complete ToDo App"
      ],
      "course_content": {},
      "requirements": [
        "For beginners. No tools required"
      ],
      "description": "First part of the series talks about the basics of dart so beginners can get up to speed for the flutter tutorials. After that we will install android studio and start with the basics of flutter. At the end of the course we will create a simple ToDo App with basic functionallity.\n- learn dart basics\n- learn flutter basics\n- create own app\n\n\nGood luck and have fun!",
      "target_audience": [
        "If you are interested in Flutter and App development take this course"
      ]
    },
    {
      "title": "Advanced iOS: Volume 1 - All source code updated to Swift 5",
      "url": "https://www.udemy.com/course/ios10course/",
      "bio": "Learn about speech transcription, SiriKit, and more!",
      "objectives": [
        "Work with Apple's newest API's"
      ],
      "course_content": {
        "Paul Hudson and Hacking With Swift - Introduction": [
          "Paul Hudson and Hacking With Swift - Introduction",
          "Intro to the Course"
        ],
        "Swift 3.0 - Whats New?": [
          "Part 1 - Depreciations - Method and Parameter names - Omit needless words",
          "Part 2 - Lowercase enums and properties - Foundation Framework namings",
          "Part 3 - Importing C Funcs - Dispatch - KVO - Verbs and Nouns"
        ],
        "Project 1 - Happy Days - iOS 10 Speech Recognition": [
          "Happy Days Intro",
          "Part 1 Setting up",
          "Part 2 - Creating the main view controller",
          "Part 3 - Connecting the interface to code",
          "Part 4 - Permissions permissions everywhere",
          "Part 5 - Importing into the collectionView",
          "Part 6 - Adding new memories using UIImagePickerController",
          "Part 7 - Displaying memories",
          "Part 8 - Recording transcribing and playing audio",
          "Part 9 - Recording photo narration",
          "Part 10 - Converting voice to text",
          "Part 11 - Playing back audio and testing the transcription",
          "Part 12 - Searching using spotlight",
          "Part 13 - In app search using CSSearchQuery"
        ],
        "Project 2 - Time Share - iOS 10 Messages": [
          "Time Share Intro",
          "Part 1 - Setting up",
          "Part 2 - Setting up continued",
          "Part 3 - Hooking it all up",
          "Part 4 - Working with MSMessagesAppViewController",
          "Part 5 - Selecting possible dates",
          "Part 6 - Sending and receiving messages",
          "Part 7 - Receiving and decoding messages",
          "Part 8 - Making our message look attractive"
        ],
        "Project 3 - Choose Cruise - SiriKit & Maps": [
          "Intro Choose Cruise",
          "Part 1 - Setting up",
          "Part 2 - The three steps",
          "Part 3 - Integrating with maps",
          "Part 4 - Adding Siri support"
        ],
        "Project 4 - Polyglot - Today widgets & iOS 10 Animations": [
          "Polyglot Intro",
          "Part 1 - Setting up",
          "Part 2 - Loading examples - Revealing answers",
          "Part 3 - Adding and saving words",
          "Part 4 - Building a today extension",
          "Part 5 - Getting the extension up and running",
          "Part 6 - Adding some polish",
          "Part 7 - Adding a language test",
          "Part 8 - Animating views with UIViewPrpertAnimator continued"
        ],
        "Project 5 - Alarmadillo - iOS 10 Notifications": [
          "Alarmadillo Intro",
          "Part 1A - Setting up",
          "Part 1B - Setting up",
          "Part 2 - Actions and outlets",
          "Part 3 - Creating model classes",
          "Part 4 - Editing groups with segues",
          "Part 5 - Listing alarms",
          "Part 6 - Configuring cellForRowAt",
          "Part 7 - Editing alarms",
          "Part 8A - Loading and saving data",
          "Part 8B - Loading and saving data",
          "Part 9A - Adding local notifications",
          "Part 9B - Adding local notifications",
          "Part 10 - Responding to user input",
          "Part 11 - Implementing the notification delegate"
        ],
        "Project 6 - Flip - iOS 10's \"AI\" Monte Carlo strategist": [
          "Flip Intro",
          "Part 1 - Building the basic game",
          "Part 2 - Adding the board and stones",
          "Part 3 - Creating a model of our game",
          "Part 4 - Adding players and moves",
          "Part 5 - Detecting legal moves",
          "Part 6 - Capturing pieces",
          "Part 7 - Monte Carlo strategy",
          "Part 8 - Modifying the board",
          "Part 9 - Making an AI player"
        ],
        "Project 7 - Dead Storm Rising - Tank Game using the new iOS 10 tile node system": [
          "Dead Storm Rising - Tank Game - Intro",
          "Part 1 Setting up",
          "Part 2 - SpriteKit tile maps",
          "Part 3 - Moving around the map",
          "Part 4 - Adding units",
          "Part 5 - Adding bases",
          "Part 6A - Selecting game items",
          "Part 6B - Selecting game items continued",
          "Part 7 - Showing whats selected",
          "Part 8 - Showing and hiding moves",
          "Part 9 - Moving the tank",
          "Part 10 - Making the tank fire bullets",
          "Part 11 - Controlling the game - Adding menus",
          "Part 12 - Ending turns",
          "Part 13 - Capturing bases - buiding new tanks"
        ],
        "Technique Project 1 - Animations in iOS 10": [
          "Part 1 - Scrubbing animations",
          "Part 2 - Start - Stop - Reverse",
          "Part 3 - Animation completion",
          "Part 4 - Spring animation - Hit detection"
        ]
      },
      "requirements": [
        "Xcode 10 is needed"
      ],
      "description": "Note: All finished projects and source code have been update to Swift 5\nBuild 7 complete real world projects that teach you about speech transcription, SiriKit, and more!\nAs well as 5 technique projects that reinforce your iOS knowledge for building apps.\nThis course is written by the award winning Swift programmer, Paul Hudson, it is from his best selling book, \"Advanced iOS: Volume 1\", made into a lecture style course, and these videos were made with his permission and support. Paul is the author of the Hacking With Swift series of tutorials, which is one of the most popular Swift coding sites online. Paul also has received high praise from the creator of the Swift language, Chris Lattner, for his outstanding method of teaching, and series of Swift tutorials. And working together with iOS developer Steve DeStefano, the Hacking with Swift series of programming training videos are simply the fastest way to learn how to code in the Apple eco-system.\nCheck out all of Paul Hudson's Swift tutorials and books at HackingWithSwift - from beginner to pro, Paul will teach you to write Swift code in very little time.\n\nThe term \"Hacking With Swift\" means we are \"playing\" with the Swift language, and using it in unique and interesting ways.\nWhether it's iMessage apps, SiriKit integration, rich media user notifications, or speech transcription, this course will teach you how to use these incredible features which can help take your apps to the next level.\n\nThis course incorporates the use of annotations, callouts, diagrams, highlighting, and deep explanations that help make complex subject matter, much easier to grasp, and guide you along the path of the code, each step of the way. This course also makes the perfect reference tool kit, to be used in conjunction with the Apple docs, so that you can go back and scrub through any of the lectures very quickly to pull out relevant code or instruction that you need, as there's no wasted chatter here, it's strictly on point with Swift and iOS.\nPlease note: These are intermediate to advanced projects, and this course will not teach you the Swift language, or how to code, you should already have completed Paul Hudson's Swift tutorials at HackingWithSwift dot com, or gone through the Hacking With Swift beginner to pro course here on Udemy.\n\nProject 1: Create a Rich Media Photo Album using voice transcription and search functionality.\nProject 2: Build a Group Scheduling app that integrates with Messages.\nProject 3: Create a Ride-Sharing app that integrates with SiriKit for voice activation.\nProject 4: Build a Lock Screen Widget that helps language learners memorize new vocabulary.\nProject 5: Create a Daily Alarm Planner using the new UserNotifications framework.\nProject 6: Code your own Board Game that implements an \"AI\" opponent, using the new GKMonteCarloStrategist from GameplayKit.\nProject 7: Build a Tank War Game using SpriteKit's powerful new Node Tiling system.\nFeaturing apps built by the award winning Swift programmer Paul Hudson\nLearn about the new iOS animations\nWork with Swift's measurement classes called Units\nLearn about the new and improved Core Data\nWork with the new Raw Photography classes\nSee how to use the new image rendering API\nLearn about the new Warp Geometry classes, and build a simple app with them\nAnd More!",
      "target_audience": [
        "This course is meant for intermediate and advanced programmers as it does not teach the Swift language, or how to code"
      ]
    },
    {
      "title": "The complete React Native course ( 4th Edition )",
      "url": "https://www.udemy.com/course/the-complete-react-native-course-create-beautiful-apps/",
      "bio": "Take you App to the next level with React Native.",
      "objectives": [
        "You will learn the whole React Native building process, from your pc to your phone.",
        "Work with RNative and nosql databases like firebase.",
        "Learn how Redux works and apply it on React Native"
      ],
      "course_content": {},
      "requirements": [
        "Knowing a little bit of Javascript ES5, we will use ES6 but you can learn it as we go."
      ],
      "description": "Do you want to learn the whole process of building an App ?. This is the course for you.\nWe will start from the very beginning, from \"I don't even know how to install it“ to actually understanding how React Native works and make it communicate with other technologies like Firebase.\n\n\nYou will learn all the logic and practice behind React Native  in different modules, and as we advance through the course we will be increasing the difficulty.\nSince I believe that the best way to fully learn is by coding, after each important section we will put everything in practice with a very large practice project, using third party libraries and firebase.\n\n\nSince React Native is bases on React for web, you need to know a little bit about React.\nBut don’t sweat it, if you don’t know anything about React for web, as a bonus you get a small React for web course.\nTo sum everything up, you will learn in this course:\nThe very basics of React Native. How to install it and the logic behind it.\nOnce you know the basics of React Native we will journey into the confusing stuff.\nInstall and apply Third party libraries.\nWe will connect our React Native project with Firebase.\nApply security, authentication,  Routing and Navigation.\nWe will create Practice apps to put everything into practice.\nYou also get a Small React for web course\nWhat about the instructor experience ?\nWell I've been around for 15 years now, built lots of applications for small projects and big companies like Citi, Fox, Disney, Etc.\nToday I work as developer for a major company developing applications with  Vue, React or Angular mostly, but I like to teach in my spare time.\nHow about the target audience?\nThis course is for almost everyone, a little bit of Javascript is required.We will use ES6 but you can learn as we go.\nIf you want to take your coding to the next level, this is the course for you.",
      "target_audience": [
        "From beginners in javascript to intermediate."
      ]
    },
    {
      "title": "Ionic - Build iOS, Android & Web Apps with Ionic & Angular",
      "url": "https://www.udemy.com/course/ionic-2-the-practical-guide-to-building-ios-android-apps/",
      "bio": "Build Native iOS & Android as well as Progressive Web Apps with Angular, Capacitor and the Ionic Framework (Ionic 4+).",
      "objectives": [
        "Build native apps and progressive web apps from one and the same codebase",
        "Build native apps for iOS and Android, using Angular and the powerful features Ionic offers",
        "Dive deeper into Ionic to learn more about core and advanced features",
        "Test iOS and Android apps on real devices and publish those apps to the app stores of the two platforms"
      ],
      "course_content": {},
      "requirements": [
        "Angular fundamentals are required, though a brief refresher is also provided in the course",
        "Basic HTML, JS and CSS knowledge is required",
        "NO advanced Angular knowledge is required"
      ],
      "description": "Join this bestselling course to learn how to use Angular and web development technologies to build real native mobile apps for iOS and Android!\n\n\nIonic is one of the most exciting technologies you can learn at the moment - it enables you to use one codebase (written in HTML, JS and CSS) to build and ship apps as normal (progressive) web apps as well as real native mobile apps for iOS and Android. This course teaches you the latest version of Ionic from scratch with no prior knowledge about it assumed.\nAngular (formerly Angular 2) allows you to create awesome web applications powered by TypeScript / JavaScript. Wouldn't it be great to use that Angular knowledge to build web applications that can be compiled into native mobile apps, running on any iOS or Android device? And also publish them as progressive web apps at the same time.\nThe Ionic framework allows you to do just that! Use your existing Angular, HTML, JS and CSS knowledge and build your native mobile app with that! Ionic offers a lot of beautiful components (which you'll learn about in this course) that can be used to compose native-like user interfaces.\nCapacitor (another tool provided by the Ionic team) will handle the rest as it's used to then build a native mobile app for iOS/ Android based on your code. This allows you to focus on the things you know and release your application on all possible devices (desktop and mobile) without having to learn thousands of different languages! Indeed, with Ionic, you can use one codebase to ship three different apps (iOS, Android, web).\nNo wonder that hybrid frameworks like Ionic are extremely popular and in high demand!\nMy name is Maximilian Schwarzmüller and I'm a freelance web developer as well as creator of many 5-star rated courses here on Udemy - including my \"Angular - The Complete Guide\" course, the bestselling Angular course on Udemy!\nI love creating awesome web applications and it simply is amazing to now use that knowledge and build native mobile apps with it, too!\nThis course takes your from zero to published app, taking a very practice-orientated route. You'll a realistic app (where users can create and book events) throughout the course, learning about the basics of Ionic, its rich component library, how to fetch and handle user input, how to store data and access native device features and much more!\nYou'll dive into all important Ionic components as well as concepts like navigation (tabs, sidemenus), user input, native device features (e.g. camera), storage, http, authentication!\nAnd since building apps is only part of the fun, you'll of course also learn how to run your apps either in the browser, on an emulator or on your own device!\nWhat exactly are you going to learn then?\nA brief refresher on Angular\nHow to set up your Ionic projects\nThe basics about Ionic - How navigation works, how your project is structured and you use its rich component library\nHow to use the many beautiful components Ionic ships with\nHow to use different kinds of navigation concepts: \"Back\"-Button-Navigation, tabs and sidemenus\nHow to show modals, alerts, toasts and many, many more useful UI components\nHow to test the app in the browser, on emulators or real devices\nHow to fetch and handle user input through inputs, textfields, dropdowns, dialogs etc.\nHow to authenticate users and access web servers to store + load data\nHow to access the local device storage and native device features like the camera or geolocation\nSo much more!\nFinally, you'll learn how to configure your app and publish it to the App Store or Google Play Store (or as a progressive web app)\nDoes this sound great?\nI can't wait to welcome you in this course!",
      "target_audience": [
        "This course is for students who want to use their Angular knowledge to build native mobile apps & web apps with one codebase",
        "This course is for everyone interested in diving into the development of native mobile apps for iOS and Android"
      ]
    },
    {
      "title": "Programming macOS Using SwiftUI - Project Based Learning",
      "url": "https://www.udemy.com/course/programming-macos-using-swiftui-project-based-learning/",
      "bio": "Covers MVVM, Networking, Core Data, Maps and much much more.",
      "objectives": [
        "Building macOS applications using SwiftUI",
        "MVVM Design Pattern for SwiftUI applications",
        "Persisting using Core Data to SQLite database",
        "Consuming JSON API through multiple services",
        "Displaying maps, navigation routes and directions overlay",
        "Creating Menu Bar Apps for macOS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Credits",
          "Prerequisites",
          "Exercise Files",
          "Course Agenda"
        ],
        "Quick Tour of SwiftUI": [
          "What is SwiftUI?",
          "VStack, HStack and ZStack",
          "List",
          "Images"
        ],
        "State Management in SwiftUI": [
          "Understanding @State - Example 1",
          "Understanding @State - Example 2",
          "Understanding @Binding - Example",
          "Understanding @EnvironmentObject - Example 1",
          "What is @Environment?",
          "Understanding @Environment - Example",
          "Understanding @Environment - Example 2"
        ],
        "Understanding MVVM Design Pattern": [
          "What are Design Patterns?",
          "What is MVVM?",
          "Why MVVM?",
          "MVVM Architecture and Web APIs",
          "Difference Between View Model and Model"
        ],
        "Reminders App - Creating, Deleting and Displaying Lists": [
          "What we will be building?",
          "Setting Up the App UI Structure Using Two Column Layout",
          "Creating the Core Data Model",
          "Implementing CoreDataManager",
          "Adding AddNewListViewModel",
          "Implementing BaseModel Protocol",
          "Designing AddNewListView",
          "Implementing NSColorTransformer to Save Transformable Type NSColor",
          "Registering NSColorTransformer",
          "Implementing MyListsViewModel",
          "Displaying Lists on the Screen",
          "Deleting Lists"
        ],
        "Reminders App - Managing List Items": [
          "Adding List Items Core Data Relationship in Core Data Model",
          "Implementing MyListItemsHeaderView and MyListItemsView",
          "Implementing MyListItemViewModel",
          "Adding AddNewListItemView",
          "Saving List Item",
          "Displaying List Items",
          "Implementing ListItemCell",
          "Deleting List Items",
          "Updating List Items",
          "Observing NSNotification ManagedObjectContextObjectsDidChange",
          "Implementing Marking Item for Completion",
          "Implementing Delay",
          "Displaying List Item Count",
          "Displaying Default List"
        ],
        "Maps - Setup and Displaying User Location": [
          "What we will be building?",
          "Setting Up Structure Using Two Column Layout",
          "Displaying Map and User's Location",
          "Zooming in User's Location",
          "Implementing Location Manager"
        ],
        "Maps - Searching and Displaying Nearby Points of Interest": [
          "Adding a Search Bar",
          "Searching Close by Points of Interests Using MKLocalSearch",
          "Displaying Search Results",
          "Calculating and Displaying Distance"
        ],
        "Maps - Displaying, Selecting Annotations": [
          "Displaying Annotations on Map",
          "Displaying a Callout View",
          "Show Snapshot of the Location",
          "Showing Place Details by Selecting from the Search Result List"
        ],
        "Maps - Directions and Route": [
          "Calculating Directions",
          "Displaying Directions Part 1",
          "Displaying Directions Part 2",
          "Creating Directions Overlay on the Map"
        ]
      },
      "requirements": [
        "Some knowledge of SwiftUI framework is recommended",
        "Understanding of iOS framework and architecture",
        "Understanding of AppKit architecture, including NSViews and View Controllers"
      ],
      "description": "SwiftUI was introduced at WWDC 2019 and it has dramatically changed the future direction of iOS, macOS and watchOS applications. SwiftUI provides an easy to use declarative syntax, which allows you to quickly create high performance apps with less code.\n\n\nIn this course, you will learn how to implement macOS applications using SwiftUI framework. This course is a project based course, which means you will learn by building real world applications.\n\n\nLet’s check out the contents of the course.\n\n\nQuick Tour of SwiftUI\nIn this section, you will get a quick tour of SwiftUI framework. This will include different Stack controls, List, Button etc.\n\n\nState Management in SwiftUI\nIn this section, you will learn about different state management techniques available in SwiftUI. This includes @State, @Binding, @EnvironmentObject and @Environment.\n\n\nUnderstanding MVVM Design Pattern\nIn this section, you will learn and understand the MVVM Design Pattern. MVVM pattern is the most common pattern used when implementing SwiftUI applications.\n\n\nReminders\nIn this section, you will implement the Reminders application from start to finish. You will use Core Data to persist information into the SQLite database. You will also learn how to set up one-to-many relationships in Core Data.\n\n\nMaps\nIn this section, you will implement the Maps application. You will learn how to use NSViewRepresentable to configure and set up maps for macOS applications. You will also learn how to search for close by businesses and display them on the screen. This app also covers how to calculate directions from the user's current location to the destination and how to display an overlay on the map. You will also learn how to implement the preferences screen allowing users to change measurement units.\n\n\nStocks\nIn this section, you will learn how to create the Stocks application using SwiftUI. You will learn how to integrate your app with multiple Web APIs and consume JSON data. The app will also demonstrate how to display graphs and news associated with each stock. You will also learn how to create a lightweight routing engine for your application.\n\n\nWho is this course for?\n\n\nDevelopers interested in expanding their skills from iOS to macOS platforms.\nFor developers who want to learn about implementing large applications using SwiftUI framework.\nDevelopers who want to move to the senior role by learning advanced techniques for app development.\n\n\nI had so much fun in creating this course, I consider this to be one of my best courses. Thank you so much for your continuous support. Hope you enjoy the course.",
      "target_audience": [
        "Developers interested in expanding their skills from iOS to macOS platforms.",
        "For developers who want to learn about implementing large applications using SwiftUI framework.",
        "Developers who want to move to the senior role by learning advanced techniques for app development."
      ]
    },
    {
      "title": "The Complete iOS 11 & Swift Developer Course - Build 20 Apps",
      "url": "https://www.udemy.com/course/complete-ios-11-developer-course/",
      "bio": "Use Xcode 9 & Swift 4 to make real iOS 11 apps like Uber and Instagram, with CoreML & ARKit, and more!",
      "objectives": [
        "Develop any iOS app you want",
        "Become a professional iOS developer",
        "Build apps for your business or organisation",
        "Get app development jobs on freelancer sites"
      ],
      "course_content": {},
      "requirements": [
        "No pre-knowledge required - I'll teach you everything you need to know",
        "A Mac laptop or iMac (or Windows PC running OSX)",
        "No paid software is required - all coding is done using Xcode 9 (which is free)"
      ],
      "description": "*** Now Updated For Xcode 9.2 January 2018 ***\nDreaming of developing an app?\nMaybe you’ve got a vision, some inspiration and you’re ready to learn?\nOr maybe, you’re looking to get ahead at work? Become an expert coder… be star of the show…\nOr, maybe you’re looking for a complete career change?\nEither way, you’re here because you wanna make something BRILLIANT… life changing…. IMMENSE…\nThen congratulations!! Nick Walter and I have built The Complete iOS 11 Developer Course just for you.\nI mean, check out what Apple says about iOS 11…\n“iOS 11 sets a new standard for the world’s most advanced mobile operating system. Your apps can now become more intelligent using the power of machine learning with Core ML. You can create incredible augmented reality experiences with ARKit. And you can deliver a more unified and immersive user experience with new multitasking features, including drag and drop for iPad, the new Files app, new camera APIs, new SiriKit domains, Apple Music integration, and more.”\nWhat does all this mean for you?\nMore power…\nMore possibilities…\nMore va-va-voom…\nSo why choose MY course over others?\nI’m Rob Pervical, Udemy’s all time bestselling instructor, with over 600,00 students. Take a peek at my iOS 10 course and you’ll read things like:\n***** Excellent explanation, right pace. Appreciate the exercises together with solutions right at the end of each part. Nice compromise between depth and overall view. Good Job!  P. Leikauf\n***** This course is simply too good. Rob does a great job in explaining and it is very easy to understand. Also, all the challenges are very interesting and I am loving it !! :-) V. Saravana\n***** This course is so well planned out with the perfect blend of teaching vs challenging. I love the fact that as each and every minute goes by in the videos I am becoming a better swift programmer. Well worth every cent!!!!  M.Fenech\nBut enough about me! What about YOU?\nMy guess is you’re looking to shake things up a bit.  Change career, rev up your earning potential, sock it to the man… Am I right?\nWell, if you sign up today…. you really can.  And this is what you’ll get to set you up for success..\nSign up now and immediately access:\nA colossal 34 hours of rigorously tested, five-star pro content\nA complete toolkit to get designing your own apps with iOS 11, Swif 4, ARKit, MLKit, MusicKit and the new Depth Photo API.\nPLUS → A side-scrolling running game (like a Super Mario clone) AND a new Bluetooth app\nAnd, like all my other courses you get my ULTIMATE JUMBO BONUS BUNDLE →→→→\n$200 worth of unlimited web hosting (for a whole year) *Limited to one year per student not per course*\nInstant access to my five-star rated book: How to Earn $10,000 While Learning To Code\nYour very own graphical asset library, worth $300 and featuring over 1000 backgrounds, icons and buttons.\nWait, still not convinced?\nI really am so confident you’re going to love this course, I’ll give you your money back within 30 days -- if you’re not completely happy.\nReady to jump in? GREAT.\nClick that BUY NOW button to your right… or read on for the full course outline.\n***** Very thorough clear explanations of swift development concepts. Best iOS development course I've tried so far. J. McCraw\n***** From knowing nothing about makings app, I feel confident with being able to construct my own apps now. I'm only mid section 5 right now. Excellent course! H Hazari\nXCode and Interface Builder\nInputs, Buttons, and Reactive Interfaces\nApple’s New Programming Language: Swift\nVariables, Arrays, Tables, and Loops\nNavigation, Storage, and Live Content\nImages, Maps and Music\nAccelerometers and Motion Feedback\nCore Data and JSON\nOnline Storage With Parse\nGames and the Sprite Kit\nInstagram and Snapchat Clones\nApp Store Submission\nMaking a Marketing Website For Your App\nNovice? Beginner? Programmer? Pro-developer?\nYes, this course is absolutely for YOU. Whatever stage you’re at.\nBeginner? No problem. We start with the basics. Already coding? Good. This is the perfect refresh for your skills…  It’s all about building your confidence at this stage.\nHow? Because you’re literally building apps as you go. There’s no better, or more exciting (or efficient) way to learn.   We know you’re busy. We know you wanna get started. And we hear you!\nYou’ll find the lectures whizz by, as you dash through each one, picking up my most powerful strategies for using iOS 11 -- and quickly tessellating them into your own projects.\nYou’ll be staggered at how quickly you’ll pick things up (and how you barely notice as we shift things up a gear) into more advanced apps like x and x, using x, x and x.\nImagine how you’ll feel after building own version of Super Mario World?  According to this guy, pretty awesome, amIright?\n***** The videos are awesome, the teaching is awesome, the examples are awesome. I started with never having built an app on iOS and now I am extremely comfortable building apps. I don't know why you would need any other course for iOS development. Just in case I was not clear: this course is awesome. S. Ramakrishnan\nLook: you don’t need to remortage your home or sign away three years of your life…\nI recommend taking this course in six weeks. Power through it faster if you really want to, or take things easy and enjoy the ride in your own time.\nThat’s the beauty of The Complete iOS 11 Developer Course - it fits around you, your life and it doesn’t a fortune. Pretty transformative, right?\n***** I had quite a bit of background in c++ before taking this course. Above all, I am so happy to have found that Rob's style of coding is exactly the same as mine. It is very \"airy\", clean, spaced out, and extraordinarily easy to read. Simply speaking, this class is exactly what you are looking for. J. Barr\n***** Excellent course, very easy to follow along with and makes learning Swift actually fun and entertaining. T. McGee\nHelp when YOU need it\nNeed support? Absolutely. My team and I are here to answer your questions. Just hop on email, Twitter or the Udemy forums and we’ll get back to you. Simple as that. We don’t bite -- and genuinely, we love hearing your incredible success stories… Got a suggestion for making things better? This is your course, and we want your feedback. Whatever it is, we’re here for you.\n***** Really well paced and informative. All my questions get answered super quick. One of, if not the best swift courses on udemy. J. Albertyn\n***** Great course- shows you how to effectively build on top of prior knowledge. I've coded before, but never in iOS, so this is great for total beginners or people who haven't coded in awhile and want to improve or learn a new environment. He breaks it down so Xcode doesn't seem like a scary interface anymore. S. Hernandez\nJoin thousands of my happy students and start building your dream apps, today.\n“OK, I’m sold Rob – what do I need to get started?”\nYour brain, this course and a laptop/computer – nothing more, nothing less\nNo pre-knowledge required\nA Mac is required, but no special software or fancypants hardware required\nCan I really become an expert app developer with this course?\nSure! Check out my bio to see how I changed careers by teaching people to code.  It’s been the best decision I ever made. I can spend more time with my family, enjoy the freedom of working for myself and all the amazing benefits that comes with that.\nWhoever you are, wherever you are; this course is designed to get you up and coding like a pro. The rest is up to you.  The opportunities are out there – they’re just waiting to be grasped. And with this course, you’ll be in the right place to do just that.\nSo don’t hang around. Start now and become the expert app developer you’ve always dreamed of.\nAnd don’t forget, you get ALL those bonuses, the e-book, the free web hosting for a year and support from me and my team… AND a 30-day money back guarantee, if you’re not completely happy.\nYou really have got nothing to lose!\nClick that the buy now button… and let’s begin your adventure, today.",
      "target_audience": [
        "Anyone wanting to learn how to build apps",
        "People wanting to make a living (or side-income) from app development",
        "Anyone who wants to learn to code"
      ]
    },
    {
      "title": "Learn Swift 4 with Bob: The Intermediate to Advanced Swift",
      "url": "https://www.udemy.com/course/learn-swift-with-bob/",
      "bio": "Functional Programming, Protocol Oriented, Value Oriented, Generic Protocols, Object Oriented, Swift 4",
      "objectives": [
        "Learn the difference between classes and structs and which one to use",
        "Learn how to create generic enums, structs, classes, protocols",
        "Get a taste of functional programming with trailing, auto, and escaping closures",
        "Understand how objects are created and removed through Automatic Reference Counting",
        "Understand potential retain cycle in closures, delegate, and class variables",
        "Understand Swift is a protocol oriented programming language",
        "Apply protocols such as Equatable, Comparable, Sequence, and IteratorProtocol",
        "Execute Swift files using Terminal/Command Line",
        "Functional Programming"
      ],
      "course_content": {},
      "requirements": [
        "You have a basic understanding of Object Oriented Programming",
        "You have MacOS and Xcode Installed"
      ],
      "description": "Attention\n*Please note the course is no longer maintained since 2017.\nWhy I Created Learn Swift with Bob\nAs a developer whose first programming language is Swift, I've taken online courses from major platforms. However, I have been frustrated by a lack of detailed explanation from instructors. They tend to focus on final products, thus missing out the fundamentals. I was confused by which design principles to follow, and why. Soon after I've been blogging for the last 5 months, I've discovered this isn't the only problem of mine. I've received hundreds of emails and questions regarding how to write code that does not violate principles such as DRY, modularity, and readability. As a result, I've decided to create this course dedicated for my younger self. I believe it all comes down to the fundamentals which I lacked in the beginning.\n\nCourse Overview\nThere are 10 chapters in this course. From Chapter 1 to 4, you will get a firm understanding of both Intro to Functional, and protocol, and Object Oriented Programming. In Chapter 5, you will fully understand how objects are created and removed. In Chapter 6 and 7, you will learn how to create value oriented swift code along with protocol generics and enums. In the last chapter, you will acquire various advanced and hidden tips about the Swift Programming Language.\n\nPrerequisites\nThis course is designed for Swift intermediates. So, I won't cover the basics. You may visit the lecture notes and go to prerequisites. You will find a list of items you are expected to know. There is a YouTube video for each concept, so if you ever get stuck, you can always learn and come back. In a nutshell, you should be already be familiar with switch statement, conditional statement, basic operators, functions, and basic object oriented programming.\nQuestions\nDo you know why Swift engineers have implemented optionals? Do you know what completion handlers and how to design one for your project? Do you know retain cycle within closures and delegates? Do you know the difference between autoclosures, trailing closures, and @escaping closures? Do you know how to create custom operators. Do you truly understand the statement, \"Swift is a protocol oriented programming language\", and know how to use default protocols such as Equatable, Comparable, Sequence, and Iterator Protocol. Lastly, do you know the difference between normal and recursive enums? If you can't answer all of these questions, I recommend you to take this course and start learning with me.\nCourse Resources\nGroup Chat\nLecture Notes\nSource Code\nExplanations\nSupporting Tutorials\n\n\nBob the Developer\nOver thousands of daily visitors from students and iOS developers all around the world. Less than half a year, I became one of the top bloggers standing right next to big named brands. You don't have to question my quality of content. The growth and reputation speak for themselves.\np.s: Lecture notes, source code, explanations are available at any time. They are created, prepared, and edited by Bob the Developer.",
      "target_audience": [
        "Anyone who wants to take his/her game to the next level",
        "Anyone who wants to know how to use enums",
        "Anyone who wants to learn how to use closures and generics protocols",
        "Anyone who has a hard time dealing with error messages from ? and !"
      ]
    },
    {
      "title": "Build 8 Python Apps Games and Web Application Python Master",
      "url": "https://www.udemy.com/course/build-8-python-apps-games-and-web-application-python-master/",
      "bio": "Python Programming by Building 8 Practical Projects - Build 8 Python Apps Games Web Applications From Beginner to Expert",
      "objectives": [
        "Build 8 full-fledged Python projects (apps, games, and web tools)",
        "Master Python fundamentals & advanced concepts",
        "Work with Tkinter, APIs, databases, and more",
        "Develop interactive games and dynamic web applications"
      ],
      "course_content": {},
      "requirements": [
        "No experience required"
      ],
      "description": "Want to become a Python developer? This comprehensive course will empower you to build 8 exciting projects, including games, desktop applications, and dynamic web apps. Learn Python through hands-on, practical exercises, covering essential concepts and techniques. By the end of this course, you'll have a strong portfolio and the confidence to tackle real-world Python development challenges.\nWhat you'll learn:\nThis course is structured around hands-on projects, allowing you to learn by doing. You'll gain proficiency in:\nPython Fundamentals: Reinforce your understanding of core Python concepts, including variables, data types, control flow, functions, and object-oriented programming.\nGame Development with Pygame: Dive into the world of game development using Pygame. You'll learn how to create engaging 2D games, implement game logic, handle user input, and work with graphics and sound.\nGUI Application Development with Tkinter: Build user-friendly desktop applications with Tkinter, Python's standard GUI framework. Learn to design interfaces, handle events, and create interactive applications.\nWeb Application Development: Explore web development  a lightweight and powerful Python web framework. You'll learn to create dynamic web applications, handle routing, work with templates, and interact with databases.\n\n\nWhat you'll build:\nThroughout the course, you'll create 8 distinct projects, including:\nInteractive Games: Develop several games, ranging from simple arcade-style games to more complex projects, solidifying your game development skills.\nDynamic Web Applications: Create functional web apps, perhaps a simple blog, a task management application, or a data visualization dashboard, showcasing your web development skills. (Specific project details may vary depending on the course content)\nWho this course is for:\nAnyone who wants to learn Python by doing and create real-world projects.\nWhy take this course?\nHands-on Learning: Learn Python by building real projects, not just reading theory.\nPractical Skills: Gain valuable skills that are in high demand in the tech industry.\nComprehensive Curriculum: Covers a wide range of Python development topics.\nExpert Instruction: Learn from an experienced Python developer.\nEnroll now and start your journey to becoming a Python Master!",
      "target_audience": [
        "Anyone looking to enhance their Python skills with practical projects."
      ]
    },
    {
      "title": "Android App Development Masterclass using Kotlin",
      "url": "https://www.udemy.com/course/android-oreo-kotlin-app-masterclass/",
      "bio": "Learn Kotlin Android App Development And Become an Android Developer. Incl. Kotlin Tutorial and Android Tutorial Videos",
      "objectives": [
        "Learn the core Android app development and Kotlin skills to build real Android apps.",
        "Learn how to target current and older versions of Android when writing your apps.",
        "Understand how to create Android apps using Kotlin.",
        "Be able to apply for Android app development roles."
      ],
      "course_content": {
        "Getting Started: Android Development Course Introduction": [
          "Android Development Masterclass with Kotlin: Course Kickoff",
          "Mastering the Udemy Interface for Android App Development",
          "Comprehensive Introduction to Android OS, Architecture and OHA",
          "Android Studio and SDK: Frequently Asked Questions and Solutions"
        ],
        "Essential Tools: Download and Installation Guide": [
          "Windows: Step-by-Step Android Studio Installation Guide",
          "macOS: Step-by-Step Android Studio Installation Guide",
          "Linux: Step-by-Step Android Studio Installation Guide",
          "Configuring Your Android SDK for Optimal Development",
          "Optimizing Android Studio: Essential Settings and Customizations",
          "Enabling VT-X/Virtualization in BIOS for Enhanced Emulation"
        ],
        "Creating Your First Android App: Hello World": [
          "Maximizing Your Programming Career: Free Q&A Resource",
          "Access the Programming Career Q&A Youtube Channel",
          "Introduction to Building Your First Android Application",
          "Choosing the Right Android Studio Template for Your Project",
          "Android Studio 3.6 and Beyond: Adapting to Template Changes",
          "Exploring Additional Android Studio Project Templates",
          "Building and Running Your First \"Hello World\" Android App",
          "Navigating and Configuring the Android Studio Environment",
          "Creating and Configuring Android Virtual Devices (Emulators)",
          "FAQ Emulators AMD Windows 10",
          "Deploying and Running Android Apps on the Emulator",
          "Connecting and Testing Android Apps on Physical Devices"
        ],
        "Comprehensive Kotlin Programming Tutorials for Android Development": [
          "Troubleshooting and Fixing Common Project Sync Issues in Android Studio 3.3+",
          "Setting Up Your Kotlin Development Environment: Android Studio & IntelliJ",
          "Introduction to Kotlin Programming: Functions, Arguments, and Basic Syntax",
          "Kotlin Variables and Data Types: Understanding Strings, Integers, and Assignment",
          "Naming Conventions, Camel Case, and Refactoring Code in Kotlin and Android",
          "Kotlin String Manipulation: Concatenation, Interpolation, and Handling Symbols",
          "Kotlin Variable Declarations: val vs. var, Immutability, and Type Inference",
          "Implementing Conditional Logic in Kotlin: if Statements and Boolean Expressions",
          "Introduction to Kotlin Classes: Creating and Utilizing Custom Data Structures",
          "Understanding Kotlin Objects and Class Instances: A Practical Demonstration",
          "Implementing toString() Override for Custom Data Representation in Kotlin",
          "Working with Lists and ArrayLists for Dynamic Data Storage in Kotlin Application",
          "Adding, Removing, and Accessing Elements in ArrayLists",
          "Enhancing Code Readability with Custom toString() Methods Kotlin Example",
          "Kotlin Control Flow: Iterating Efficiently Through Data with For Loops, Ranges",
          "Kotlin Class Encapsulation: Safeguarding Data with Private Properties",
          "Mastering Kotlin Function Overloading for Enhanced Code Flexibility",
          "Mastering Inheritance in Kotlin: Building Efficient Class Hierarchies",
          "Expanding on Inheritance Concepts: Overriding Functions in Kotlin",
          "Kotlin Inheritance: Creating Specialized Subclasses and Overriding",
          "Advanced Kotlin Inheritance and Initialization Techniques with Superclass",
          "Kotlin Control Flow: Implementing while Loops for Dynamic Code",
          "Kotlin for Loops: Iterating and Calculating Data in Collections",
          "Kotlin's do while Loop: Guaranteeing Code Block Execution at Least Once",
          "Implementing a Single Item Drop Functionality in Kotlin Player Class"
        ],
        "Mastering ConstraintLayout and User Interaction: The Button Counter App": [
          "Comprehensive Introduction to the Button Counter Application in Android Studio",
          "Getting Started: Setting Up a Playground Project for Constraint Layout Design",
          "Exploring Android Studio's Layout Designer and Constraint Layout Fundamentals",
          "Mastering Widget Positioning: Understanding and Implementing Constraints",
          "Mastering Widget Positioning: Managing Widgets with ConstraintLayout",
          "Understanding Inner Lines and Fixed Wrap Content within a Widget",
          "Exploring Cross-Device Compatibility: Designing Layouts for Various Androids",
          "Mastering ConstraintLayout: Aligning Widgets and Exploring Baseline Constraints",
          "Troubleshooting the Layout Designer Rendering Problem",
          "FAQ: Baseline Constraints change",
          "Implementing and Understanding Baseline Constraints in Android Studio",
          "Refining User Interface: Widget Constraint Strategies",
          "Enhancing User Experience: Implementing Scrolling in Android Text Fields",
          "Developing the Button Counter App: Project Setup and Initial Layout Design",
          "Constraint Layout in Android: Mastering TextView, Margins, and Scrollbars",
          "Introduction to Android's Main Activity, Kotlin Code and App Framework",
          "Accessing UI Elements: Exploring findViewById and the Android R Class",
          "Implementing User Interaction: Responding to Events with setOnClickListener",
          "Running and Testing your Application, Plus a Coding Challenge",
          "Enhancing User Input: Retrieving and Displaying Text from an EditText",
          "Verifying App Functionality: Comprehensive Testing",
          "Resolving Runtime Library Issues in Kotlin",
          "Managing App State: Understanding the Android Activity Lifecycle",
          "Monitoring App Behavior: Deep Dive into the Logcat Monitoring Pane",
          "Persisting UI State Changes: Implementing Lifecycle Logging Methods",
          "Retaining App State During Lifecycle Changes and Orientation Swings",
          "Implementing Instance State Saving and Restoration in Android Kotlin Apps"
        ],
        "Building a Feature-Rich Android Calculator Application in Kotlin": [
          "Android Calculator App: Project Introduction and Feature Overview",
          "Designing the Calculator UI: EditText, Buttons and Constraint Layout",
          "Advanced Constraint Layout: Aligning and Organizing Calculator Buttons",
          "Perfecting the Calculator App Layout: Widget Sizing, Alignment, Focus",
          "Dynamic Layouts: Adapting Your Android Calculator for Landscape Mode",
          "Comparing and Merging Layout Files: Using Android Studio's Diff Tool",
          "Streamlining Project Comparison: Working with Directory Structures",
          "Implementing Calculator Logic: Adding OnClickListeners for Number Inputs",
          "Implementing Calculator Operations: Event Handlers & User Interaction",
          "Advanced Kotlin: Exception Handling and Null Safety in Calculator Logic",
          "Enhancing User Experience: Preventing Crashes and State Management",
          "Preserving App State: Handle Configuration Changes in your Calculator",
          "Efficient Widget Management: Kotlin Android Extensions for Cleaner Code",
          "Mastering ConstraintLayout: Centering Groups with Guidelines in Android",
          "Refining the User Interface: Completing the Landscape Calculator Layout",
          "Implementing a Negate Button: Expanding Calculator Functionality in Android",
          "Kotlin Code Enhancements: Implementing the Negate Button Logic",
          "Comprehensive Layout Updates: Adding the Negate Button to Portrait Mode"
        ],
        "Create a Top Mobile Applications RSS Feed Reader Utility": [
          "Introduction to RSS Feeds and Project Overview for Kotlin Developers",
          "Understanding and Implementing AsyncTask for Background Processing",
          "Utilizing Logging and Logcat for Effective Kotlin App Debugging",
          "Essential Update: API 28+ Cleartext Traffic in Top 10 Downloader",
          "Downloading RSS Feed Data: Implementing the Download Functionality",
          "Reading Data with Input Streams and Exception Handling in Kotlin",
          "Android App Permissions: Handling Internet Access and Security",
          "Streamlining Kotlin Code: Writing Idiomatic and Efficient Code",
          "Leveraging Kotlin's Power: Simplifying Code for Maximum Efficiency",
          "Parsing XML Data, Extract Essential Information for Kotlin Applications",
          "Diving into the XMLPullParser and Creating the Parse Function",
          "Running and Troubleshooting Your App: A Deep Dive into Logcat",
          "Dynamic Data Display: Mastering ListView and ArrayAdapter in Kotlin",
          "Adapting Array Adapters: Integrating Code for Efficient Data Handling",
          "Enhancing App Stability: Implementing onDestroy and Asynctask",
          "Crafting Custom Adapters: Enhancing ListView with ConstraintLayout in Kotlin",
          "Kotlin Code Implementation: Building a Dynamic and Efficient Feed Adapter",
          "Optimizing Adapters: Refining Performance Through Efficient Memory Usage",
          "Enhancing ListViews: Implementing the ViewHolder Pattern for Efficiency",
          "Menu Integration: Designing and Implementing a Dynamic Menu Layout in Android",
          "Implementing Interactive Menus: Adding Functionality to Menu Items in Kotlin",
          "Enhancing User Experience: Implementing Dynamic Menu Groups in Android Apps",
          "Menu Interaction: Handling User Selections and Dynamic Updates in Kotlin Code",
          "Comprehensive Solution: Implementing Robust Data Handling and Menu Functionality"
        ],
        "Integrating the YouTube API for Seamless Video Playback in Android": [
          "Project Setup: Downloading and Integrating the YouTube Android Player API",
          "Creating a New YouTube Activity and Implementing Required Interfaces",
          "Dynamic Widget Creation: Adding UI Elements Programmatically in Kotlin",
          "Obtaining and Utilizing a Google API Key for YouTube API Authentication",
          "Storing and Retrieving API Keys Securely Using String Resources in Kotlin",
          "Implementing Video Playback: Initializing and Controlling the YouTube Player",
          "Handling Initialization Success and Failure in the YouTube Player API",
          "Responding to Playback Events Using Listeners in the YouTube Player API",
          "Enhancing User Experience: Autoplay and Orientation Change Handling",
          "Expanding Functionality to the Main Screen by Adding Buttons to the Layouts",
          "Implementing onClickListeners and Launching Activities via Intents",
          "Understanding and Utilizing Intents for Inter-Activity Communication",
          "Autoplaying Videos and Playlists in the YouTube Standalone Player",
          "Advanced Error Management: Improving the User Experience After Errors"
        ],
        "Mastering Flickr API: Build a Complete Photo Browser App": [
          "Material Design and JSON: Introduction to the Flickr Browser App",
          "Understanding Flickr Feeds and API for Photo Search in Android Apps",
          "Deep Dive into JSON Data Handling and URL Parameter Mini Challenge",
          "Kotlin Companion Objects for Log Tags: Enhancing Android App Debugging",
          "Kotlin Top-Level Constants: Project Update, Improvment and Changes",
          "Downloading Flickr Data in JSON with Kotlin: doInBackground Implementation",
          "Implementing Download Callbacks and Handling JSON Data in your Kotlin App",
          "Mastering Kotlin Callbacks for Asynchronous Data Handling in Android",
          "Building the Photo Data Model and Project Class Diagram in Kotlin",
          "Parsing JSON Data: Creating the GetFlickrJsonData Class in Kotlin",
          "Finalizing JSON Data Parsing with GetFlickrJsonData Class in Kotlin",
          "Building Dynamic URLs with Uri.Builder for Flickr API in Kotlin",
          "Designing the Main User Interface for the Flickr Browser in Android",
          "Implementing RecyclerView Layout: Creating Custom Item Views in Kotlin",
          "Fine-Tuning the RecyclerView Layout: AdjustViewBounds and Optimization",
          "Creating Search and Photo Detail Activities for Your Flickr Browser App",
          "Implementing Nested Layouts within a ScrollView and CardView in Android",
          "Implementing a Custom RecyclerView Adapter for Flickr Photo Display",
          "Integrating Picasso for Image Loading in Your Android RecyclerView",
          "Connecting the RecyclerView Adapter to Display Data in Your Kotlin App",
          "Creating a Custom RecyclerItemClickListener for Handling User Interaction",
          "Utilizing GestureDetector for Advanced Touch Handling in RecyclerView",
          "Launching Activities with Intents: Displaying Full-Size Flickr Photos",
          "Implementing Serializable for Efficient Data Passing Between Activities",
          "Modifying PhotoDetailsActivity for Data Retrieval and Display UI",
          "Kotlin Parcelize Update: Simplifying Android Data Serialization",
          "Understanding Parcelable: An Alternative to Serializable in Android",
          "Introduction to Material Design: Principles and Impact on Android UI/UX",
          "Exploring the Material Design Guidelines and Color Palette for Android Apps",
          "Ensuring Backward Compatibility in Android Apps with AppCompat",
          "Material Design Styling: Applying Themes to the Flickr App",
          "Creating Custom Styles and Adapting for Different Android Versions",
          "Understanding Android Namespaces in XML for Styles and Resources",
          "Exploring Additional Material Design Styling Options",
          "Theme Editor Overview: Visually Customizing App Styles",
          "Handling View Bounds and Layout Differences Across API Levels",
          "Implementing String Resources for Localization and Accessibility",
          "Using String Resources with Placeholders for Dynamic Text",
          "Integrating the Android SearchView Widget for User Queries",
          "Implementing SearchView: Handling User Input and Activity Launch",
          "Configuring Searchable Information and Manifest for SearchView",
          "Responding to SearchView Events: Query Submission and Callbacks",
          "Changes for Deprecated Framwork PreferenceManager Class",
          "Utilizing SharedPreferences for Storing and Retrieving Search Queries",
          "Enhancing User Feedback: Displaying \"No Results\" Message"
        ],
        "Mastering SQLite Databases for Android App Development": [
          "Getting Started with Databases in Android App Development",
          "Comprehensive Introduction to Relational Database Systems",
          "Essential Database Terminology: Tables, Fields, Rows, and Joins",
          "Windows: Configuring the Command Line for SQLite and ADB Access",
          "Setting Up Your Mac: Command-Line Access for SQLite and ADB",
          "Configuring Your Ubuntu Linux System for SQLite and ADB",
          "SQLite Fundamentals: Database Creation and Data Storage",
          "Advanced SQLite: Modifying Data with Update and Delete Commands",
          "Data Retrieval Techniques: Mastering SQLite Queries in Android",
          "Ordering, Grouping and Linking Data: Order By and Joins in SQL",
          "Advanced Data Retrieval: Implementing Complex Joins in SQLite",
          "Efficient Data Handling: Using Wild Cards and Views in SQLite",
          "SQLite Database Management: Backup, Restore, and Challenges",
          "Integrating a Basic SQLite Database into Your Android App",
          "Practical Android SQLite: Creating Tables and Adding Test Data",
          "Mastering Cursor Navigation and Database Queries in Android SQLite",
          "Kotlin use Function: Correct Receiver Usage for Enhanced Efficiency",
          "Exploring the Android File System and Locating SQLite Databases",
          "Understanding Android Content Providers for Structured Data Access",
          "Emulator Setup: Configuring Android Devices for Contact Provider Testing",
          "Designing the User Interface for a Content Provider-Driven Contacts App",
          "Accessing Contacts Data Using ContactsContract and ContentResolver in Kotlin",
          "ContentResolver and Abstraction: Understanding Data Flow in Android Apps",
          "Implementing Data Retrieval Using ContentResolver and Cursor in Kotlin",
          "Runtime Permission Handling in Android Marshmallow (API 23+) and Above",
          "Checking Permissions at Runtime and Handling User Responses Programmatically",
          "Comprehensive App Testing: Permissions, Functionality, and Edge Cases",
          "Enhancing UX: Using Snackbars for Notifications and User Interaction",
          "Advanced Snackbar Utilization: Providing Indefinite Display and Actionable Links",
          "Intents, setData, Uris: Directing Users to Application Settings Programmatically",
          "Android State Management: Identifying and Addressing Data Persistence Issues",
          "Refactoring for Efficiency: Eliminating Redundant State Storage in Android",
          "Comprehensive Testing for Android Permissions: Creating and Using Test Scripts"
        ]
      },
      "requirements": [
        "A Windows computer, a Mac, or a Linux machine so that the free Google Android Studio tool can be downloaded and install (full instructions included).",
        "An open mind to learn something new and exciting which may make a huge difference in your future career.",
        "Everything else needed to write apps for Android 8 Oreo with Kotlin is already included in the course."
      ],
      "description": "What do you get in this course?\nIn this course, you will discover the power of Android app development, and obtain the skills to dramatically increase your career prospects as a software developer. You’ll also have a head start over other developers using obsolete tools and earlier versions of Android.\n\nAndroid is continually being updated and you'll learn how to target but users of current versions of Android and older versions as well.\n\nWith this course, you get the best of both worlds. You’re taught to write code for Android that works with the current version and older versions of Android by using the AppCompat library. That way, the apps you build will work with more versions of Android, giving you access to a wider audience of users.\nStarting is easy because no previous programming experience is needed. NONE! If you do have it, great. Or maybe you just want to brush up on your Android development skills, and that’s fantastic too.\nThe course is presented using a combination of video, slides and diagrams, all designed to teach you everything you need to know.\nHere is what just one student thinks about the course.\n\"If you are thinking of learning how to develop an Android app, you should be doing this course. It is comprehensive and covers so many aspects of programming an Android app. The best part is that Tim explains and teaches you how to become an independent developer.    Since completing this course, I have gone on and developed my own application, which is now published on the Google Play Store! Developing an app takes patience, and it is definitely worthwhile going through all the content in this course.\" - Daniel Lee\nShould you write Android apps that target only the very latest version of Android?\n\nIf you have an iPhone or iPad, chances are high that you update each year to the latest iOS release - most users do.\nThe situation is completely different with Android. Only a relatively small percentage of Android users update their phones annually.\nIf you write your apps to only support the latest version of Android, you will ensure 95% of your potential user base will never see your app.  The Google app store will only show apps that a users Android device can run, so if their device is not running the latest version of Android, they won't even be able to find your app on the Google play app store!\nHow do you make sure your app targets older versions of Android?\nAndroid development is less about making sure you are creating apps that work with the latest version of Android, and more about ensuring your apps work with whatever versions of Android your users are running.\nGoogle are aware of this problem and have something call the AppCompat library.  Which is a way for you to ensure your apps work on older devices.\nThis is not enabled by default.  Meaning that if you do not specifically configure your app to use this library and target older devices and newer ones, it either won't show up at all for users searching for your app, or older Android devices running your app might crash because they are trying to access features that do not exist in their version of Android.\nThe key is to use this library.  And that's what you will learn in this course.\nDoes that mean that your apps can only use features from really old Android versions?\nNo it does not.  The AppCompat library is constantly updated by Google.  They go back and add features to the library which allows older Android devices to access newer features of Android.\nBut again, this is not turned on by default.  You have to create and write your Android apps in a particular way to have your Android app be able to work correctly for current and older versions of Android.\nShould you learn Kotlin?\nNow that Google are pushing so hard for Android developers to use Kotlin, we are seeing a dramatic shift to Kotlin - It's similar to the iOS situation a few years ago with Objective-C when Apple released Swift.\nFast forward a few years and everyone is using Swift.  This is starting to happen with Android app development. Developers who used to use  Java are switching to Kotlin.  You can see why Google want this to happen.  They have been in court numerous times with Oracle (the owners of Java) relating to a dispute over the use of the Java language.\nGoogle want developers to adopt Kotlin so that they don't have to worry about Java any more.\nThe recent Google I/O conference show mainly Kotlin code examples.  You can see where we are heading.  Kotlin is the future for Android app development.\nSoon there will be few Java developers writing Android apps - they will be using Kotlin.\nThe good news is, we've bundled a complete Kotlin tutorial we wrote from scratch with the course.  So not only do we use Kotlin in this course (teaching best practices along the way), but we also include a complete Kotlin tutorial as well. You will learn how to use the Kotlin language in this course.\nThis is what you’ll learn in the course:\n·      Develop apps for the very latest version of Android that also work on older Android devices running older versions of the Android operating system.\n·      Download, install and configure the necessary (free) software.\n·      Create your first app.\n·      Build a range of apps demonstrating key aspects of the Android framework.\n·      Test your apps on emulators or a real Android phone or tablet.\n·      You’ll learn Kotlin programming because Google are recommending and pushing adoption of Kotlin for Android app development.  Included are Kotlin tutorial videos that will get you up to speed fast.\n·      Ensure your apps work with current and older Android versions on phones and tablets.\n·      Use Android studio 3.2, the newest version of Google's premier Android tool.\n·      Learn how to use databases, web services, and even get your apps to speak!\n·      Understand the all new Constraint layout, for \"drag and drop\" screen creation.\n·      Use powerful libraries of code to play videos, download website data, manipulate images, and a whole lot more!\nTo reinforce what you’ve learnt during the course, there are numerous challenges designed to help you understand each concept being taught. You’re also shown the solution to the challenge so you know you’re always on the right track.\nThe course is continually updated and enhanced, and fully supported as it evolves.\nWith many courses, it’s just set and forget. But not with this one! We’ve got a PROVEN track record of continually updating and adding new content. An example is Tim's Java Masterclass course which now has 77 hours of content and counting, and benefited a whopping 260,000 students.\nAnd if you have any doubts about the course, be blown away by the glowing reviews left by students on this page.\nWhat else will you learn?\nYou will  learn how Android works at a deep level. Many courses show you how to create Android apps, allowing you to follow along clicking buttons but not really understanding what it happening.\nTo become a successful Android app developer, you need to understand why you are clicking that button, and how the Android operating system works and how the Android SDK and Framework works.\nIf you truly understand how something works, it means you can produce better quality apps, that have fewer bugs.\nWe don't promise that you are going to write a Facebook or Instagram clone app in this course - Courses that say they are going to teach you to create apps like that show apps with only the smallest amount of functionality, and usually don't explain anything in detail.  There is no point going through Android training unless you can take that training and apply it into your own apps.\n\nThis course is designed for you to follow along, but then to apply the information you have learned into your own apps.\n\nYour instructors are me, Tim Buchalka and Jean-Paul Roberts. Between them theyhave a collective 70 years of commercial software development experience, meaning you’re learning the right way to program to maximize your future development potential.\nHere’s what’s important. There’re a lot of people teaching Android development who are not developers. We’re developers with many years’ experience with the Android platform, who also teach Android.\nImportantly, our courses teach students the real-life skills needed to get those in-demand jobs or further your programming skills.\nTake this course in confidence today knowing you have just found the BEST Android Kotlin course on Udemy!  Don't delay. Every minute you’re not learning Android is a missed opportunity for that PERFECT high paying job.\nClick the BUY NOW button and start learning. The world needs your new apps!",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous programming experience.",
        "However, if you’re already an expert Android Kotlin programmer with knowledge of all the latest updates, then this course is not for you.",
        "Existing Android Java Programmers who want to transition to Kotlin for Android app development."
      ]
    },
    {
      "title": "How to make a Social Networking app -Android App Development",
      "url": "https://www.udemy.com/course/social-networking-android-app-development-from-scratch/",
      "bio": "Take your first step towards your next big idea by learning social networking android app development in android studio",
      "objectives": [
        "Able to build high class Android application from scratch",
        "Able to implement core feature of Social Networking System",
        "Remote Database connection and Networking in Android",
        "Learn to write Robust Android Codes",
        "Able to build API and Implement them in Android"
      ],
      "course_content": {
        "Software Installation": [
          "Installing Android Studio on Windows",
          "Installing Android Studio on Mac"
        ],
        "Android guide for absolute beginners": [
          "Hello world Program",
          "Running App in Real Device",
          "Tips on Android Studio",
          "Basis of Constraint layout",
          "Adding Button Clicks",
          "Addling Click Event From Xml",
          "Click event by implementing OnClickListner",
          "Imageview in Android",
          "Listview in Android",
          "Designing Bio App With Relative Layout",
          "Designing Bio App With Linear Layout",
          "Designing Login Form With Constraint Layout",
          "Dice App",
          "Sms App",
          "Currency converter App",
          "Passing Data from one activity to another",
          "Calculator App Using Linear Layout",
          "Calculator App Using Constraint Layout",
          "Life Cycle of Activity"
        ],
        "Login": [
          "Designing our Login Screen",
          "Adding Firebase to our project",
          "Implementing Google Sign In",
          "Installing Xampp on windows",
          "Installing Xammp on Mac Os",
          "Creating Users table",
          "Adding Retrofit in our application",
          "Downloading Slim Framework",
          "Making our first Hello World API with slim",
          "Middleware in slim framework",
          "Custom Error Handling in Slim",
          "Sending parms from postman and retrieving them in php script",
          "Making our Login API",
          "Null checking logic changed",
          "Inserting users data in mysql database",
          "Handling API error in our app",
          "Signout from Google account"
        ],
        "Profile Page": [
          "Adding BottomNavigationView in homepage",
          "Designing Profile Screen",
          "Loading Users Data in profile Screen",
          "Creating our Post Table",
          "Designing Post Upload Screen",
          "Post Status from App to backend",
          "Post Status with Image",
          "Changing Profile Image and Cover Image",
          "Enabling our edit profile button after dialog dismissed",
          "Viewing Cover and Profile Image in FullScreen",
          "Creating friends and requests table"
        ],
        "Search Feature": [
          "Implementing Search API - Part 1",
          "Implementing Search API - Part 2",
          "Handling Click on Search list item"
        ],
        "Friend System": [
          "Sending Friend Request",
          "Accepting Friend Request",
          "Cancel Friend Request",
          "Unfriend from Friend list",
          "Displaying friends list and Friend Request",
          "Displaying friends list and Friend Request - part 2",
          "Displaying Friend Request",
          "Caching our data in viewmodel",
          "Accepting Friend Request directly from Request List"
        ],
        "Personalized Timeline System": [
          "Building the logic for personalized timeline",
          "Fetching Newsfeed Data - part 1",
          "Fetching NewsFeed data - Part 2",
          "Infinite Newsfeed",
          "Pull to Refresh feature"
        ],
        "Profile Post Feature": [
          "Loading Posts on Profile Screen",
          "Infinite loading of profile posts on Profile Screen",
          "Performance and Bug fixing"
        ],
        "Multi Reaction System": [
          "Dividing repository into multiple small repositories",
          "Creating tables for post reactions",
          "Api to perform reactions on posts",
          "Checking our reaction on post",
          "Designing Reaction Dialog",
          "Adding our reaction to post",
          "Adding post reaction from HomeScreen",
          "Showing total number of Reactions on post"
        ],
        "Multi Level Comment System": [
          "Building Comment Table Structure",
          "Post Comment API",
          "Designing Comment Layout",
          "Designing Comment Bottomsheet dialog",
          "Posting Comment to post",
          "Posting Comments to post part 2",
          "Incrementing post comment counter after comment",
          "API to fetch post replies",
          "Fetching post comment Replies from API",
          "Notifying comment adapter about new comment",
          "Fetching Comment Replies",
          "Notifying parent comment about new comment",
          "Adding Date ago feature in our comment and post",
          "Open keyboard automatically on reply option clicked",
          "Handling reaction click state"
        ]
      },
      "requirements": [
        "Basic Understanding of Php",
        "Basic Understanding of MySQl",
        "A strong work ethic and willingness to learn"
      ],
      "description": "Want to build your own social networking start up application ?\nThen, this course is specially designed for you . I have covered every major aspect of social networking android development concept in this course. Take your first step towards your startup journey with this highly specialized course.\nOR\nWant to get highly paid job as an android developer in 2020 ?\nAfter joining this course, your chance of getting respected position as an android developer will be high because you will get to know about the actual development concepts of a complex application here.\nApp Feature :\nLogin/Signup\nSearch\nFriend System\nNotification\nPrivacy System\nDate Ago\nNewsFeed\nInfinite pagination\nMulti Reaction Feature like Facebook\nMulti Level Comment System\nProfile/Cover picture with zoom\nand many more",
      "target_audience": [
        "People looking to build their own social networking Android application",
        "People who wants to be android developer",
        "People having basic understanding of android framework and seeking to advance their level"
      ]
    },
    {
      "title": "The Complete iOS 10 & Swift 3 Developer Course",
      "url": "https://www.udemy.com/course/complete-ios-10-developer-course/",
      "bio": "Learn iOS App Development by building 21 iOS apps using Swift 3 & Xcode 8. Includes free web hosting, assets & ebook.",
      "objectives": [
        "Develop any iOS app you want",
        "Build apps for your business or organisation",
        "Get app development jobs on freelancer sites"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Important: Note about this course",
          "Introduction",
          "How To Get The Free Stuff",
          "Frequently Asked Questions",
          "How To Ask Great Questions"
        ],
        "Getting Started With Xcode 8 and Swift 3": [
          "Introduction",
          "Xcode Versions - Please Read",
          "Downloading & Installing Xcode 8",
          "Navigating The Xcode Interface",
          "Navigating The Xcode Interface (Xcode Files)",
          "Adding Labels To Your Apps",
          "Adding Labels To Your Apps (Xcode Files)",
          "Text Fields & Buttons",
          "Text Fields & Buttons (Xcode Files)",
          "Running Some Code",
          "Running Some Code (Xcode Files)",
          "Interacting With Buttons",
          "Interacting With Buttons (Xcode File)",
          "Adding Images To Your Apps",
          "Adding Images To Your Apps (Xcode Files)",
          "Your First App - Cat Years",
          "Your First App - Cat Years (Xcode Files)",
          "Introducing Xcode 8 and Swift 3 Quiz"
        ],
        "Swift 3 Deep Dive (Using Playgrounds)": [
          "Introduction",
          "Swift Playgrounds",
          "Swift Playgrounds (Xcode Files)",
          "Introducing Variables",
          "Introducing Variables (Xcode Files)",
          "Arrays & Dictionaries",
          "Arrays & Dictionaries (Xcode Files)",
          "If Statements",
          "If Statements (Xcode Files)",
          "Game - How Many Fingers",
          "Game - How Many Fingers (Xcode Files)",
          "While Loops",
          "While Loops (Xcode Files)",
          "For Loops",
          "For Loops (Xcode Files)",
          "Classes & Objects",
          "Classes & Objects (Xcode Files)",
          "Optionals Masterclass",
          "Optionals Masterclass (Xcode Files)",
          "Auto Layout",
          "Auto Layout (Xcode Files)",
          "App - Is It Prime? Part I",
          "App - Is It Prime? Part I (Xcode Files)",
          "App - Is It Prime? Part II",
          "App - Is It Prime? Part 2 (Xcode Files)",
          "Swift 3 Deep Dive (Using Playgrounds) - Quiz",
          "CCA Swift Level 1"
        ],
        "Advanced iOS Features: Timers, Tables, Permanent Storage & Web Content": [
          "Introduction",
          "Navigation Bars",
          "Navigation Bars (Xcode Files)",
          "App - EggTimer",
          "App - Egg Timer (Xcode Files)",
          "Table Views",
          "Table Views (Xcode Files)",
          "Times Tables App",
          "Times Tables App (Xcode Files)",
          "Storing Data Permanently",
          "Multiple View Controllers",
          "Multiple View Controllers (Xcode Files)",
          "Controlling the Keyboard",
          "Controlling the Keyboard (Xcode Files)",
          "App - To Do List",
          "App - To Do List (Xcode Files)",
          "Downloading Web Content",
          "Downloading Web Content (Xcode Files)",
          "Manipulating Strings",
          "Manipulating Strings (Xcode Files)",
          "App - What's The Weather",
          "App - What's The Weather (Xcode Files)",
          "Advanced iOS Features: Timers, Tables, Permanent Storage & Web Content - Quiz"
        ],
        "Advanced iOS Features II: Animation, Games, Maps & Geolocation, Audio": [
          "Introduction",
          "Animations Part I",
          "Animations Part I (Xcode Files)",
          "Animations Part II",
          "Animations Part II (Xcode Files)",
          "Game - Tic Tac Toe",
          "Game - Tic Tac Toe (Xcode Files)",
          "Integrating Maps Into Your Apps",
          "Integrating Maps Into Your Apps (Xcode Files)",
          "Adding User Annotations To Maps",
          "Adding User Annotations To Maps (Xcode Files)",
          "Finding A User's Location",
          "Finding A User's Location (Xcode Files)",
          "App - Location Aware",
          "App - Location Aware (Xcode Files)",
          "Advanced Segues",
          "Advanced Segues (Xcode Files)",
          "App - Memorable Places",
          "App - Memorable Places (Xcode Files)",
          "Working With Audio",
          "Working With Audio (Xcode Files)",
          "App - Back To Bach",
          "App - Back To Bach (Xcode Files)",
          "Swipes & Shakes",
          "Swipes & Shakes (Xcode Files)",
          "App - Sound Shaker",
          "App - Sound Shaker (Xcode Files)",
          "Advanced iOS Features II: Animation, Games, Maps & Geolocation, Audio",
          "Storing Data Permantly (Xcode Files)",
          "CCA Swift Level 2"
        ],
        "Core Data, Advanced Web Content, Json Data & Webviews": [
          "Introduction",
          "Introducing Core Data",
          "Introducing Core Data (Xcode Files)",
          "Advanced Core Data",
          "Advanced Core Data (Xcode Files)",
          "Downloading Images From The Web",
          "Downloading Images From The Web (Xcode Files)",
          "APIs & JSON Data",
          "APIs & JSON Data (Xcode Files)",
          "Blog Reader",
          "Blog Reader (Xcode Files)",
          "Core Data, Advanced Web Content, Json Data & Webviews - Quiz"
        ],
        "Instagram Clone": [
          "Introduction",
          "Parse Server & AWS",
          "Retreiving & Updating Data",
          "Retrieving & Updating Data (Xcode Files)",
          "Accessing The Camera Roll",
          "Accessing The Camera Roll (Xcode Files)",
          "Spinners & Alerts",
          "Spinners & Alerts (Xcode Files)",
          "Login & Signup",
          "Login & Signup (Xcode Files)",
          "The User Table",
          "The User Table (Xcode Files)",
          "Pull To Refresh",
          "Pull To Refresh (Xcode Files)",
          "Posting Images",
          "Posting Images (Xcode Files)",
          "Viewing Users' Feeds",
          "Viewing Users' Feeds (Xcode Files)",
          "Instagram Clone - Quiz"
        ],
        "Tinder Clone": [
          "Introduction",
          "Introduction To Tinder",
          "Update To Parse Server Setup Process",
          "Setting Up Parse Server",
          "Setting Up Parse Server (Xcode Files)",
          "Changing The App ID",
          "Changing App ID (Xcode Files)",
          "Dragging Objects",
          "Dragging Objects (Xcode File)",
          "Login & Signup",
          "Login & Signup - (Xcode - Files)",
          "Adding User Details",
          "Adding User Details (Xcode Files)",
          "Adding Users",
          "Adding Users (Xcode Files)",
          "Swiping Users",
          "Swiping Users (Xcode Files)",
          "Location And Matches",
          "Location & Matches (Xcode Files)"
        ],
        "Games and Spritekit": [
          "Introduction",
          "Hello World With Sprite Kit",
          "Hello World With SpriteKit (Xcode Files)",
          "Adding & Animating Sprites",
          "Adding & Animating Sprites (Xcode Files)",
          "Animating The Background",
          "Animating The Background (Xcode Files)",
          "Controlling The Bird",
          "Controlling The Bird (Xcode Files)",
          "Spawning Pipes",
          "Spawning Pipes (Xcode Files)",
          "Detecting Collisions",
          "Detecting Collisions (Xcode Files)",
          "Scoring & Game Controls",
          "Scoring & Game Controls (Xcode Files)"
        ],
        "Uber Clone": [
          "Introduction",
          "Introduction To Uber",
          "Update To Parse Server Setup Process",
          "Setting Up Parse Server",
          "Setting Up A Parse Server (Xcode Files)",
          "Login & Signup",
          "Login & Signup (Xcode Files)",
          "The Rider View Controller",
          "The Rider View Controller (Xcode Files)",
          "The Driver View Controller",
          "The Driver View Controller (Xcode Files)",
          "Sharing The Driver's Location With The Rider",
          "Sharing The Driver's Location With The Rider (Xcode Files)"
        ]
      },
      "requirements": [
        "No pre-knowledge required - I'll teach you everything you need to know",
        "A Mac laptop or iMac (or Windows PC running OSX)",
        "No paid software is required - all coding is done using Xcode 8 (which is free)"
      ],
      "description": "You’re here because you want to build your own apps, right?\nSmart move, my friend.\nOr maybe you already do… but you want to be bigger, bolder, BETTER.\nWell, thanks to the incredible new ios 10, now you can—and if you start today, you canbeat the pack and start building your very own white-hot apps in just six weeks.\nWhat makes me qualified to teach you?\nMy name’s Rob and I’m the creator of the world’s most popular coding courses—and number one course instructor on Udemy—with over 400,000 students and 20,000 five star reviews, just like this:\nAmazing experience! Was able to complete in two weeks and put all my skills to good useat the end. Would 100% recommend. Thanks Rob! – A. Guilmineau\nTons of great information balanced with clear explanation. This course has everything you need from downloading the software to start building, all the way to how to set up an app in the App Store. Great course! – J. Regan\nMy promise to you\nMy full time team and I work tirelessly to create and deliver the ultimate and most current learning experiences to be found ANYWHERE. It’s my promise to you, or your money back. I’ll talk more about that later, but first let’s get down to business..\nIntroducing ios 10\nNever before has it been possible to develop such rich and interactive apps… In fact, this is Apple’s biggest and most hotly anticipated release to date.\nCrammed with exciting new features, with ios 10 your apps can extend to Messages, Siri, Phone, and Maps to provide more engaging functionality like never before. Now your users can view photos, watch videos and listen to audio right from inside a notification.\nSo much power at your fingertips… imagine what you could do?\nI didn't know how to make apps one week ago thinking it was way too hard. Now, I'm releasing my first app to the App Store. – F. Ammache\nI love the classes, the challenges, and being able to sort things out I did not know before. Thanks Rob, you made it easy and exciting to learn. – L. Smith\nSign up today, and here’s what you’ll get:\nOver 30 hours of meticulously produced content\nAll the knowledge you need to get moving with ios 10 - SiriKit, Messages and Maps\nApps and HomeKit\nHD 1080p\n\n\nPLUS!!! Bonus material to take you to the next level\nUnlimited web hosting for one year (worth $200) *Limited to one year per student not per course*\nA copy of my most popular ebook How To Earn $10,000 While Learning To Code—rated 5-Stars on Amazon\nOver 1,000 graphical assets (backgrounds, buttons and icons etc.), worth a whopping $300, to use in your apps.\n\n\nSo, if you’re ready to join the ios 10 revolution and become an app developer today, sign up now and power-up your skills in record time.\nI can’t believe how easy and convenient the course is, I can take study anywhere. -- K Dixon\nI love the way Rob introduces and explains the different concepts be it simple or difficultones. It is explained very well for anyone who has no prior knowledge of iOS programming.\nHighly rated to anyone who is interested in learning to build iOS apps. -- S. Mujumdar\nFrom beginner to ios 10 app developer in six weeks\nXCode and Interface Builder\nInputs, Buttons, and Reactive Interfaces\nApple’s New Programming Language: Swift\nVariables, Arrays, Tables, and Loops\nNavigation, Storage, and Live Content\nImages, Maps and Music\nAccelerometers and Motion Feedback\nCore Data and JSON\nOnline Storage With Parse\nGames and the Sprite Kit\nInstagram and Snapchat Clones\nApp Store Submission\nMaking a Marketing Website For Your App\n\n\nWe kick off with the basics to build your confidence. You’ll find it fast, entertaining and extremely easy to remember.\nNext up, you’ll sail through 223 easy-breezy lectures and over 30 hours of expertly-produced content, where I share with you my trade secrets to working smoothly with Xcode 8 and Swift 3.\nYou’ll be amazed at the progress we make as we nimbly move into building more advanced apps and games using animation, geolocation and web content.\nYep, that means you’ll be making your very own versions of Instagram and Snapchat, allowing users to interact with one another across the web.\nDon’t waste another cent\nListen, don’t waste another cent on poorly produced, amateur YouTube videos or out-of-date books. The Complete iOS 10 Developer Course delivers EVERYTHING you need in one easy-to- digest process, with rocket-fuelled support, care of my dedicated team off riendly experts. Get in touch via email, Twitter or the Udemy forums and we’ll get right back to you.\nVery clear and easy to understand instructions. After trying to learn to code from various YouTube videos and getting frustrated, this is a breath of fresh air. – J. Erickson\nWhat are the requirements?\nAbsolutely no pre-knowledge required.\nA Mac laptop or iMac (or Windows PC running OSX)\nNo special software required\n\n\nClear. Concise. Informative. The layout of the course allows past knowledge gained to utilized and built on as you progress. The variety of apps you create make the learning exciting, new, and fun! – J. Schaffer\nThe number one rated courses on Udemy\nTake a peek at my bio to learn how I successful switched career to teach people like you how to code. And how, since making that decision, I’ve never looked back.\nI promise, it really doesn’t matter whether you’re 60 or 16, absolutely ANYONE will love this course and take away life-changing skills that can help you change career or make some extra cash on the side. The only limit? Your imagination.\nI'm an experienced developer who knows Obj-C and wanted to learn Swift, and you have got it totally right! I feel like I am learning this ridiculously quickly and will be able to go to work next week and start writing our apps in Swift rather than Objective C! Awesome work. Totally worth the money spent. -- E. Goodall\nSo what are you waiting for? Say goodbye to rubbish online tutorials and last-years  tired textbooks. Join us in this exciting learning experience today and I’ll even thrown in a free copy of my exclusive 76-page ebook ‘How to make $10,000 while learning to code’.\nAND REMEMBER… I offer a full money back guarantee, just as long as you requestit within 30 days of purchasing the course.\nGo ahead, click the buy it now button. Why not? You’ve got nothing to lose (and a whole new world of sparkling possibilities to gain).",
      "target_audience": [
        "Anyone wanting to learn how to build apps",
        "People wanting to make a living (or side-income) from app development",
        "Anyone who wants to learn to code"
      ]
    },
    {
      "title": "SAP Fiori Simplified: For ABAPers",
      "url": "https://www.udemy.com/course/learnfiori/",
      "bio": "Specially developed crash course for ABAPers",
      "objectives": [
        "Understand the Fiori Architecture",
        "Understand various Fiori concepts like OData, SPA, UI5 and Gateway",
        "Get a direction on where to start Fiori learning for an ABAPer",
        "If you need a discount, use coupon 'LIMITED_NEW' (Limited coupons available). Message me in LinkedIn if the coupon does not work."
      ],
      "course_content": {
        "Overview and Architecture": [
          "About the Course",
          "SAP UI Overview",
          "Quiz",
          "Intro to Fiori",
          "Quiz",
          "Architecture",
          "Quiz"
        ],
        "Getting Deeper": [
          "Intro to SAPUI5",
          "OData",
          "Quiz"
        ],
        "SAP Gateway": [
          "Gateway Service",
          "Service Builder"
        ],
        "Comparison with ABAP": [
          "Compare of a Fiori app with a Web Dynpro application",
          "Compare WebIDE with ABAP Workbench"
        ],
        "Dissect and Debug": [
          "Intro",
          "Explore the App",
          "Debug UI5 App",
          "Quiz",
          "Debugging Gateway"
        ],
        "Fiori development and Administration": [
          "Process of creating a new Transactional App",
          "Quiz"
        ],
        "Process of Extending a Transactional App": [
          "Introduction to Extension",
          "UI5 Extension",
          "Gateway Extension",
          "Quiz"
        ],
        "Launchpad Administration": [
          "Fiori Launchpad Administration",
          "Quiz"
        ]
      },
      "requirements": [
        "Familiarity with SAP and ABAP",
        "This course aims to teach Fiori to ABAPers. So as part of training, there are comparisons with the ABAP technology. So unless you are an ABAPer, this course is not suitable for you.",
        "Having a Fiori system is not required, as this is a course teaching you concepts and not the coding. But if you have access to a Fiori system, it can help."
      ],
      "description": "If you are an ABAPer wanting to get into the Fiori bandwagon, it is not late yet. There are so many tutorials and documents available on Fiori, UI5, Gateway. But you might be wondering where to start from. You might be wondering how vast and deep this Fiori jungle is. This course aims exactly to address that need. Being an ABAPer you might get lost in the jargons involved. This course aims to teach them keeping your ABAP background in mind.\nThis course is not another \"How to build a Fiori app?\" course. Rather this aims to give you an overview of concepts and tools involved, so that you can decide where to start your learning from. Author also plans to come up with more courses, in the Fiori space and the current course will be the stepping stone for them.\nSo start your journey today. What are you waiting for?\n\n\n[UI5, SAPUI5, OPENUI5, Fiori, ABAP, SAP]",
      "target_audience": [
        "ABAPers who are keen to upskill to Fiori",
        "A methodical learner, who wants to get a solid overview of Fiori concepts before deep diving into coding"
      ]
    },
    {
      "title": "Android Development Working With Databases Using Mysql & PHP",
      "url": "https://www.udemy.com/course/android-development-course/",
      "bio": "In this complete course students will learn android development by working with databases using Mysql and PHP",
      "objectives": [
        "Use online databses to store android application data",
        "Develop android applications that uses MySql Databases",
        "Use JSON to retrive data from the database",
        "Learn how to set up an online database for android application"
      ],
      "course_content": {},
      "requirements": [
        "Basics of android application development",
        "Basics of android studio tool to develop android apps",
        "Basic knowledge of databases",
        "Basic knowledge of PHP"
      ],
      "description": "Welcome To Android Development: Working With Databases Using Mysql & PHP\n⇉ Watch the promo video to see How You Can Begin Building And Developing Your Very Own Android Applications Today!\n⇉ This Course is ADVANCED! You receive over 3.5+ hours of video content & 15+ lectures!\n\n\n⇉ Join Over 950,000+ Students Who Have Enrolled In My Udemy Courses This Year!\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nThen this course is for you! Click \"Take This Course Now\" For Instant Life-Time Access!\n__________________________________________________________________________\n\nHere Is Everything You Will Learn In This Complete Course:\nHow to set up online database for your android application.\nHow to connect your android application to an online database.\nHow to save data from android application to an online database.\nHow to retrieve data from an online database to your application.\nHow to use JSON to retrieve data from database to your application.\nHow to perform JSON parsing.\nHow to write PHP scripts to establish connection to the database.\n__________________________________________________________________________\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin to move towards becoming an Expert Android Developer!\nWhen we learn something new, I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course. If you ever have any questions please feel free to message us directly and we will do our best to get back to you as soon as possible!\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But You Can Do It!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button at the top right now!\n...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys & Ashutosh Pawar",
      "target_audience": [
        "This course is for intermediate and advanced application developers",
        "This course is not for complete beginners who do not know the basics of android, android development, Java, and PHP"
      ]
    },
    {
      "title": "The 7 Day Android App Bootcamp - Android Pie and Kotlin",
      "url": "https://www.udemy.com/course/android-apps/",
      "bio": "Go from beginner to creating 3 Android Pie apps using Kotlin, Java and Android Studio. Your app in the Google Play Store",
      "objectives": [
        "The Fundamentals of the Kotlin Programming Language",
        "A Thorough Walkthrough of Android Studio",
        "Create 3 Fully Functional Apps",
        "Android App Design",
        "Your App in the Google Play Store",
        "The Fundamentals of the Java Programming Language"
      ],
      "course_content": {},
      "requirements": [
        "Mac, Windows, or Linux work great for this course :)",
        "No programming experience required!"
      ],
      "description": "Welcome to the The 7 Day Android App Bootcamp! If you're looking for a course that is fun and gets straight to the point, then this is the course for you. This course will give brand-new programmers all of the skills that they need to create an app and submit it to the Google Play store!\nOther mega courses on Udemy offer 40+ hours of video content, but I wanted to create a course that was more manageable for beginners and didn't include any fluff. In each video I dive straight into the topic, and don't waste your time going over things that you don't really need. I only focus on the essentials, and I give you hands-on practice so that you can easily master the things we are learning!\nThis course is designed to be taken over a 7-day period, with 1-2 hours dedicated to learning each day. This course is easy to commit to because you won't get overwhelmed with a mountain of content, and you don't need to quit your day job to learn how to code!\nOver the past four years I've taught over 100,000 people how to code, and I am a self-taught programmer so I know what it feels like to start from scratch. I care about your learning, but even more importantly... I care about you! I know your time is valuable, so I promise not to waste it.\nTogether we will use Kotlin and Android Studio to create 3 fully functional Android apps. I will teach you step-by-step everything you need to know, and in just 7 days you will be able to build beautiful Android Pie apps that will impress future or current employers, family, and friends. It's up to you… would you rather spend your next 7 days learning an awesome new skill or watching Netflix? ;)\nOur seven-day schedule will look like this:\nDay 1 - Welcome. Download and Install Android Studio\nDay 2 - Kotlin. Learn the basics of Kotlin with challenges after every lecture\nDay 3 - Tip Calculator. Create your first app and learn the basics of Android Studio\nDay 4 - Emoji Dictionary. Learn how to work with RecyclerViews and list data\nDay 5 - ToDo List. Learn how to store and read data\nDay 6 - Google Play Store. Let the world experience your new creations!\nDay 7 - Java. Learn the basics of Java (a great plus for a resume)\nEasy enough, eh? Well, let's get started! Don't waste your time scouring the internet and trying to piece together how to learn to code on your own. Invest in yourself, and allow me to teach you Android programming while having fun.\nCourse material is regularly refreshed to include all of the newest updates and information, and since you’re granted lifetime access upon registering, you can rely on this course to keep your programming skills on the cutting edge. Additionally, I have made this course downloadable, so you can work through the class offline, making it as convenient as possible for you! Most instructors won't allow this, but I want you to be able to enjoy this course in whichever way is best for you :)\nFeel free to take a free preview of this course to see if it's a good fit for you. I am so confident that you will love my course, that I even offer a 100% 30-day money-back guarantee. You have nothing to lose, so come join me and let's get started!",
      "target_audience": [
        "Beginners who want to make Android Apps",
        "People who have worked through broken tutorials and want a well put together course"
      ]
    },
    {
      "title": "Secure User Authentication | Android + Ktor Server + MongoDB",
      "url": "https://www.udemy.com/course/secure-user-authentication-android-ktor-server-mongodb/",
      "bio": "Securely Authenticate and Store your Users Info on the Back-end Server using a modern One-Tap Sign in with Google.",
      "objectives": [
        "Develop an Android Application",
        "Develop a Backend Server with Ktor",
        "Ktor 2.0",
        "Create your own REST API",
        "Design App UI using Jetpack Compose UI toolkit",
        "Clean Architecture",
        "Authentication",
        "Authorization",
        "ID Token",
        "Access Token",
        "JSON Web Token",
        "OAuth",
        "Open ID Connect",
        "Sessions",
        "Cookies",
        "Session Encryption",
        "One-Tap Sign in for Android",
        "Mongo DB",
        "CRUD operations",
        "Create, Read, Update, Delete",
        "GET, POST, PUT, DELETE HTTP Methods",
        "Server Deployment",
        "Heroku",
        "and more.."
      ],
      "course_content": {},
      "requirements": [
        "You should be already familiar with a Jetpack Compose (Watch my To-Do course with Jetpack Compose first)",
        "You should be already familiar with a Kotlin programming language",
        "You should be already familiar with basic Android Architecture Components"
      ],
      "description": "In this course I'm going to teach you how to successfully authenticate your users, and create you own user database on the back-end server, all by yourself. This course project will include a Mongo DB on our back-end, where you'll learn how to execute all CRUD operations from an Android application.\nYou don't need a Firebase anymore, because with this course you'll get the necessary knowledge to establish a secure communication between your Android application and the back-end server. At the start of this course I will introduce you with some important concepts which we are going to use throughout this course, like the difference between Authentication and Authorization, ID Token and Access Token, OAuth and Open ID Connect, Sessions and Cookies, JSON Web Token and One-Tap Sign in for Android.\nYou will be able to see how that communication will look like behind the scenes, and we are going authenticate our users using their Google account. In Android app, as a new sign in mechanism, One-Tap for Android will be implemented as well.\n\n\nWe will create a rather simple project, so that you can easily follow up this course, and learn everything you need, that later you become qualified to create more complex applications, that include authenticate mechanism and your own user database.\nWe are going to use the newest technologies and API's in this project like: Jetpack Compose, Ktor 2.0, One-Tap Sign in for Android and Mongo DB.",
      "target_audience": [
        "Android Developers",
        "Kotlin Programmers"
      ]
    },
    {
      "title": "The Complete Android App Development Tutorials",
      "url": "https://www.udemy.com/course/android-smartherd/",
      "bio": "This course is designed for Android enthusiast’s to earn valuable skills of its usage and application from scratch.",
      "objectives": [
        "Learn the Detail Concepts of Android Codes along with Source Codes",
        "Creating Attractive UI with Full Fledged Graphics",
        "Create a Complete App on your own",
        "Able to process app and Launch it in Playstore",
        "Each topic we have covered are in deep details",
        "Apps Based on all new Lollipop and Marshmallow"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Java ( Knowledge of Object Oriented Programming )",
        "System with 2 GB RAM and above"
      ],
      "description": "2024 Update: My Udemy courses are not being updated anymore.\nI have joined Droidcon Academy and leading the platform. I will continue my passion for teaching by working with thousands of instructors and helping them create high-quality courses for you. Thank you for your enormous support.\n-\nPresenting ANDROID Nougat and ANDROID Lollipop App Development tutorials.\nThe course is intended for those who are looking to pursue their career in Android based development. There is no such qualification to join the course as it is designed in a way to facilitate a newbie to understand the myriad of opportunities that Android can deliver. With easy-to-understand course materials backed by practical classes one can quickly grasp the aesthetics deploying Android as a platform.\nCourse with All Source Codes of Projects.\nMake complete professional apps and tips to MAKE MONEY through Android Apps.\nUpon completion of the course it will be easy to develop Android based applications with all new features of android NOUGAT and MARSHMALLOW ( 5.0 ) and above versions. The training not only imparts the programming side of the development but also delivers valuable suggestions behind developing a pleasing and effective UI (User Interface) design. The professionals involved in the training all hail from organizations of repute having vast experience in Android domain.\nThis course covers Latest ANDROID STUDIO launched by Google. A complete professional App is made in this course covering all android widgets, components and covering all fundamental concept. Starting from installing software to publish app in Google PlayStore all Topics are covered well.",
      "target_audience": [
        "For those who wants to be Android Application Developer",
        "For those who wants Job of Android Developer"
      ]
    },
    {
      "title": "Jetpack Compose Crash course for Android with Kotlin",
      "url": "https://www.udemy.com/course/jetpack-compose-masterclass/",
      "bio": "Modern Android apps with Jetpack Compose and integrations: MVVM, Coroutines, ViewModel, LiveData, Retrofit, Navigation",
      "objectives": [
        "How to create Android UI and layouts directly in code with Kotlin",
        "Modern Declarative way of creating UI in Android",
        "How to use Compose with other Jetpack libraries: ViewModel, Navigation, LiveData",
        "How to use Compose with other popular libraries: Coroutines, Retrofit",
        "How to integrate Compose in a MVVM architecture",
        "How to create beautiful animations with Jetpack Compose"
      ],
      "course_content": {},
      "requirements": [
        "To love Android development"
      ],
      "description": "Tired of creating Android UIs and layouts in XML? Jetpack Compose comes to the rescue!\nJetpack Compose is Android’s modern toolkit for building native UI. It simplifies and accelerates UI development on Android. Compose allows to quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs.\n\n\nWhile building not less than 5 Android projects with Compose, this course will teach you the following:\nWhat Compose is, why do we need it, and how it works\nThe basics and fundamental concepts behind Compose like: the declarative paradigm shift, the dynamic content concept, recompostion and more!\nState management in Compose\nHow to create complex layouts in Compose\nThe integrations between Compose and other Jetpack libraries: ViewModel, LiveData, and Navigation\nIntegration of Compose in MVVM architecture\nIntegrations between Jetpack Compose and other popular libraries on Android like Coroutines and Retrofit\nHow to theme your Compose app\nAnimations in Compose: from simple to complex animations effects like Collapsing Toolbar\n\n\nAnd the best part is that this course features the 1.0.0 up-to-date stable version of Compose!\nLastly, you need no prior Android or Kotlin experience! We will learn everything from scratch!\nI can't wait for you to join me in this course!\n\n\n\n\nMore on Compose:\nCompose simplifies and accelerates UI development on Android allowing you to build modern looking apps. It allows to quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs. It follows the same Declarative paradigm approach as React Native, Flutter and SwiftUI. So this is the trend!\nYou can buid better apps faster with Jetpack Compose, Android’s modern toolkit for building native UI. With Jetpack Compose now past 1.0.0, it’s time to try it out for yourself!",
      "target_audience": [
        "Android Developers",
        "Android enthusiasts"
      ]
    },
    {
      "title": "iOS 9 & Objective-C - Make 20 Applications",
      "url": "https://www.udemy.com/course/the-complete-ios-9-objective-c-guide-make-20-applications/",
      "bio": "A Complete Objective-C, Xcode 7 and iOS 9 Course.",
      "objectives": [
        "Full understanding of Xcode 7 and all it has to offer",
        "Learn how to program for IOS 9 to create your own apps",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS 9 development",
        "Develop in Objective-C",
        "Earn revenue from your apps"
      ],
      "course_content": {},
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 7"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad Apps but are not sure where to start? Are you ready to jump right into the exciting world of Objective-C mobile development but have little or no programming experience? Then this is your course!\nThis Complete IOS 9 Objective-C Guide - Make 20 Applications will give you everything your need to start your new career in IOS 9 development using Xcode 7, The course has been structured to support Objective-C, Teaching you all you need to know from creating your first project in Xcode 7 to Submitting to the AppStore.\nCreate 20 Real Swift 2 Applications throughout the course from fun and simple games to powerfull utility apps using the native features of IOS 9 devices to help you understand the process of creating applications\nSell Your Objective-C App to Millions of Potential Users and earn extra revenue from Ad networks, Making money has never been so easy!\nNot only do you get the best online Objective-C IOS 9 development course for Xcode 7 but You also get first class responsive support by email, Twitter or on the Udemy forums, So you can rest assure you have full guidance in your new career!\nWhy Choose This Objective-C, iOS 9 & Xcode 7 Course?\nMany programmers learning to create there first Objective-C application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This Objective-C, iOS 9 & Xcode 7 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 7 and to offer any advice needed and before you know if you will have created your first Objective-C app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode 7, Interface Builder, Simulator and Project Types\nObjective-C: Get to know the new updated language\nCreate 20 real applications in Objective-C\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nFull Featured Objective-C Apps\nEarning Revenue Ad Networks\nFun and Simple Objective-C Games\nCore Data Applications\nCamera Support Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS 9 Apps"
      ]
    },
    {
      "title": "Apple TV App & Game Development for tvOS",
      "url": "https://www.udemy.com/course/apple-tv/",
      "bio": "Everything you need to know to build apps and games for the Apple TV on tvOS including TVML, Swift, and SpriteKit",
      "objectives": [
        "Build native Apple TV apps",
        "Build Apple TV TVML apps (Client-server Apps)",
        "Build Apple TV Games for tvOS"
      ],
      "course_content": {},
      "requirements": [
        "Must own a Mac (2011 or newer) or PC running Mac OSX (We talk about how to install OSX on PC)"
      ],
      "description": "If the new Apple TV and the Apple TV App Store Excite you then this is the place to be to learn everything you need to know about Apple TV development.\nApple TV is no small addition to the world of App Development. There is so much to learn and the Apple TV expects a different user experience and has different design and coding requirements.\nWhat you will learn\nYou will be learning native tvOS development which uses iOS frameworks with Swift 2\nYou will also be learning how to build Client-Server apps which use Apple's new markup language TVML. TVML apps use Javascript.\nYou will learn how to build Apple TV games with SpriteKit\nThis course is brought to you by the creator of iOS 9 & Swift 2: From Beginner to Paid Professional, THE best iOS 9 course on the Internet.\nThe goal of this course is to be the absolute BEST and most-effective Apple TV course on the Internet.\nHow the course works\nYou'll be provided with a series of videos. Watch those videos over and over again until you understand the concepts completely. Then try building that same app from memory on your own\nYou are also provided with exercises that help you work and learn on your own so you can retain the knowledge\nWhy take this course?\n\nHere are a few reason to take this course:\nI teach you what you are really going to use in the real world, not some obscure concepts\nI don't read from scripts in any of our courses. I teach you real world development so you can see how to actually solve problems (other courses just teach x,y,z and don't give you the why behind what you are doing.\nYou won't find a better course on the Internet!!!\nYou get lifetime access to Live help through our chatrooms and Forums.\n\nTestimonials from my courses\n\"The best course i have seen about ios programming. The guy is the best instructor i have ever seen. It has a nice way of saying them. And its the first i see to give the same importance not only in the code but also in the design. Continue your good job. 100% percent recommend it.\" - Lefteris Altouvas\n\"I have taken other courses by some other instructors that were ok, but I have not been as fired up about any of them as I am about this one. Mark's teaching style is great and this course truly has a \"bootcamp\" feel for much less money than an actual bootcamp. Access to Mark to ask questions is great both through the forums as well as github/gitter. Highly recommend this course if you are looking for something in the iOS/Swift Development category.\" - Jack Davis\n\n\"He has this way of teaching that captivates your attention and makes all the ones and zeros come to life. Mark taught me that learning computer science doesn't have to be the way it was in college, simply put: boring, time-consuming, and overwhelming. He mentored me in the course materials and I am an even better developer today and I make a lot more money too, all because of the example Mark set and the individual time he spent with me.\n\nSeriously, an hour spent with this man teaching you technical subjects will be worth 100 hours spent in another course or bootcamp taught by someone else\" - Erik Slack\n\"It is obvious that he is passionate about teaching coding. He makes sometimes dry subjects very entertaining with his humor and overall teaching style. He never loses patience with students and takes the time to make sure you understand.\nMark also goes the extra mile with students. Whenever I would be stuck or in need of help on a project he would take time to help me. I was lucky he took the time to get to know me and assist in the understand subjects I had difficulty with.\" - Jacob Evans\n\"...More impressive is his ability to teach. He's patient, optimistic, and able to take complex ideas and teach them with examples and in ways that are digestible, energetic, and fun. He's taught bootcamps and mentored many developers that I know. As a teacher and mentor, I couldn't give anyone a higher recommendation. If you can enlist his tutelage, you're in good hands.\" - Jonathan Wood\n\"Mark is a smart, experienced, patient mentor, teacher and iOS Engineer. As I have gone from knowing nothing about iOS to full fledge iOS engineer Mark has been there every step of the way to both guide and encourage.\" - Pearson Basham creator of NoThyme iOS App",
      "target_audience": [
        "You should take this course if you have taken my other course: iOS 9 & Swift 2: From Beginner to Paid Professional",
        "You should take this course if you know the basics of Swift or Objective-C programming and the basics of iOS development with UIKit",
        "If you are absolutely new to programming, I do include Swift in this course, but I highly recommend you take my other course first iOS 9 & Swift 2: From Beginner to Paid Professional"
      ]
    },
    {
      "title": "Learn the Newest and EASIEST React Native Stack",
      "url": "https://www.udemy.com/course/how-to-make-a-full-stack-react-native-app-with-easy-backend/",
      "bio": "A full-stack mobile app tutorial with Hasura easy backend, GraphQL, Apollo, Expo, Auth0, and React Hooks.",
      "objectives": [
        "Create a full-stack mobile todo app with React Native, GraphQL and Apollo",
        "Jump-start your app with Hasura: online Postgres database, no backend code!",
        "Test your app with Expo on your mobile phone",
        "Master authentication with Auth0",
        "Boost your functional components with \"useState\" and \"useEffect\" hooks",
        "Make GraphQL requests with Apollo's \"useQuery\" and \"useMutation\" hooks"
      ],
      "course_content": {
        "Welcome! This will be fun.": [
          "Course overview",
          "Todo app overview (Beginners: DON'T SKIP THIS)",
          "Repo & how to get help",
          "Wrap-up & challenge"
        ],
        "Back end setup. It's never been this easy. EVER": [
          "Provider Options",
          "DigitalOcean setup",
          "Create a Hasura one-click droplet",
          "Fun with the Hasura console!",
          "Secure your GraphQL endpoint",
          "Wrap-up & challenge",
          "Check-in"
        ],
        "Authentication setup": [
          "Create an Auth0 application",
          "Auth0 callback URL & rules",
          "Test Auth0 login",
          "Configure Hasura to use Auth0 keys",
          "Hasura access control rules",
          "Wrap-up & challenge"
        ],
        "Todo app back-end: more fun with Hasura": [
          "Tables",
          "Quick note on SQL",
          "Relationships",
          "Permissions",
          "Test permissions"
        ],
        "Todo app front-end! It's gettin real.": [
          "Expo setup",
          "Auth overview",
          "Auth state",
          "Note on Expo's AuthSession",
          "Auth request",
          "Auth & logout",
          "Apollo Client",
          "Bug fix: Token",
          "Sync users",
          "Queries",
          "Quick cleanup",
          "Mutations",
          "Wrap-up & challenge"
        ],
        "Conclusion": [
          "Thank you & goodbye!",
          "Bloopers"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript and React",
        "Some familiarity with React Native and GraphQL"
      ],
      "description": "Would you like to create a full-stack React Native app with minimal back-end effort? In this course, you’ll learn how to set up an EASY online GraphQL + Postgres database for your mobile app, with no backend code, using Hasura.\nAfter taking this course, you will know how to:\nCreate an online database with Hasura, complete with table relationships and user permissions,\nImplement authentication with Auth0,\nSet up your React Native project with Expo so you can test your app on your phone,\nInsert, update, and delete data with GraphQL,\nuseQuery and useMutation like a boss! Apollo Client's React hooks are hawt\nFigure out which nerdy references your teacher is making\n****************************************\n\"I'm amazed by how things could be explained that well and to the point in such a short time. I loved the style, keep it up Sezgi, you are awesome!\" - Ebru\n\"There's actually a lot more going on here than I expected, from editing Docker images, to setting up social-media authentications. A lot of moving parts, yes, but she explains it all very well and I didn't get lost at all. A real solid class!\" - August\n\"I took the course mostly to learn setup a simple backend. The setup with Hasura turned out to be even easier than I expected, and I was able to do it without any hiccups. Pacing of the course is also very good, and the instructor is entertaining to listen to.\" - Baris\n\"At first I thought this was just going to be an intro to a couple things I need to learn, RN and GraphQL. Yay, both in one place! But actually this is the funniest thing I’ve ever seen. Is this actually an art project? Who is this person and why is she not teaching us the meaning of life? More please\" - Michael\n****************************************\nHere’s what people are saying about Hasura:\n\"Holy mother of god @HasuraHQ is a game changer. Automatic #GraphQL over @PostgreSQL with permissions, webhooks on db changes, N+1 query optimization, admin for tables/relationships, migrations, etc. Any front end dev can deploy via docker and have a back end running in 10 mins.\" - @PierB\n****************************************\nCan I take this course as a beginner?\nProbably. This is NOT a fundamentals course, but I've added a lecture called \"Todo app overview\" in the Welcome section to make it more beginner-friendly. Give it a try! If you find this course to be too advanced, you can always get a refund. If you’re new to React Native or GraphQL, and want to learn the basics, I’d recommend taking individual courses for each one. Here you’ll learn how to put it all together into an easy stack.\n****************************************\nWhat makes this course different?\nIn this course, you will:\n- Save tons of time and energy from not having to build out a complicated back-end,\n- Transform your mobile development experience, so you can focus on writing front-end code,\n- Learn in a fun and engaging environment.\n****************************************\nI’m looking forward to getting to know you, and celebrating all the mobile apps you’ll build.\nLet’s jump-start your mobile stack and create awesome apps together.",
      "target_audience": [
        "Front end developers looking to host their database online with minimal backend effort",
        "Developers looking for a full-stack React Native tutorial using the latest syntax and tools",
        "Any software developer who wants to expand on their current skills and learn about the latest in mobile technology"
      ]
    },
    {
      "title": "The Complete RxJava 3 For Android Development Masterclass",
      "url": "https://www.udemy.com/course/rxjavarxandroid-bootcamp-reactivex-for-android-developers/",
      "bio": "Architect Android Apps With Rx Java 3 , MVVM, Room DB, Retrofit 2 & Dagger 2. Advanced Android Architecture mastery",
      "objectives": [
        "Learn to use ReactiveX ( RxJava / RxAndroid ) in Android projects. Get the ability to quickly integrate RxJava into Android applications",
        "Learn to avoid memory leaks. Modify, merge, filter or group data streams efficiently using operators",
        "Understand the multi-threading best practices for Android Development. Discover how to control back-pressure using Flowables and Operators.",
        "Learn to handle User Interface events effectively using RxBinding",
        "Learn to use RxJava with Retrofit to manage remote data streams effectively.",
        "Learn to use RxJava with Room Database to handle local data streams effectively."
      ],
      "course_content": {},
      "requirements": [
        "Android Development Experience (preferably 3 months or more)",
        "Knowledge of Java",
        "A desire to write professional level, cleaner and maintainable code",
        "Android Studio Skills",
        "(you may need to provide an email address to sign up to TMDB free REST API )"
      ],
      "description": "Welcome to my new Android course : ReactiveX in android , Android Development  With RxJava/RxAndroid Masterclass.\n\n\nRxJava is the Java implementation of Reactive Extensions. Everyone agrees that, It has become the single most important skill for professional level Android development over the years. We use RxJava with MVP, we user RxJava with MVVM, We use RxJava with Dagger, Retrofit  and Room. RxJava is everywhere.\nReactive Extensions skill you get from this course can be easily applied with other programming languages as well.\nI have been working as a Software Engineer since 2008. I have been teaching  Android Development for many years now. I will share many tips and best practices I leant by working with RxJava and taching RxJava over the years.\nBy the end of this course, you will be able to fluently apply RxJava for your  Android development projects.\nRxJava created to make our lives easier. But unfortunately many developers found it very difficult to start with as a result of longer learning curve and unavailability of resources.Many developers spend three or four weeks to figure out Rxjava fundamentals and best practices.\nThis course has designed to save your valuable time and to spare the pain of self-studying.\nThe teaching approach I am presenting here have already been successfully tested with my local students. They were able to master RxJava within a very short period of time, so I believe my online students will also get the same results.\nRxJava is a very marketable skill, which is in high demand in the industry today.Whether you are going to use Java or Kotlin for Android Development ReactiveX skill will be a big advantage for you.\nThis course is for experienced android developers. You will need at least 3 months of android development experience to start following this course. This course contains,\nFundamentals of ReactiveX,RxJava and RxAndroid .\nMain operators of RxJava .\nRxBinding\nBackpreassure\nRxJava Subjects.\nRetrofit short tutorial\nRxJava with Retrofit\nRoom DB short tutorial\nRxJava with Room Database\nCase study project examples\nDownloadable code samples\nShort Notes\nInterview Questions\nMultiple Choice Questions\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the course . Let's start learning RxJava today.\n\n\nNote:\nDuring the course to demonstrate different usages of retrofit, we will use TMDB free online REST API  . You may need to provide an email address to sign up and get a free API key from them.",
      "target_audience": [
        "Professional Android developers",
        "Determined students who are willing to become professional Android developers"
      ]
    },
    {
      "title": "Instagram Clone App | Swift 4 +Firebase | Push Notifications",
      "url": "https://www.udemy.com/course/instagram-clone-w-swift-4-firebase-and-push-notifications/",
      "bio": "Create a complete working version of Instagram using Swift 4 and Firebase without the use of storyboards!",
      "objectives": [
        "By the end of this course students will have a strong foundation in advanced mobile app development skills, as well as front and back end engineering"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started With Firebase": [
          "Log in User Interface",
          "Log in User Interface Pt. 2",
          "Sign Up User Interface",
          "Getting Started With Firebase",
          "Creating User with Firebase"
        ],
        "User Authentication With Firebase & Constructing Main User Interface (UI)": [
          "Log In Using Firebase and Construct Main User Interface",
          "Log User Out With Firebase, User Validation",
          "User Profile UI",
          "Create User Class, Model View Controller, Load Data from API",
          "Load Images from API Using Image Cache"
        ],
        "Following & Unfollowing Users": [
          "User Search UI",
          "User Search Cell",
          "Guest User Profile & Configure Edit Profile/Follow Button",
          "User Follow/Unfollow Explanation (Missing Video)",
          "User Profile Stats & Check If User Is Followed",
          "Code Refactor using Protocol, Recap",
          "View Following Users UI",
          "Configure Follower Cells",
          "Follow User Action In Follow Cell"
        ],
        "Posts": [
          "Select Post Image UI",
          "Import Photos from Library",
          "Upload Post UI",
          "Upload Post to Database",
          "Create Post Class & Fetch Posts From Database",
          "Load Posts In User Profile",
          "Custom ImageView Class and Bug Fixes"
        ],
        "Home Feed": [
          "Home Feed UI",
          "Load Posts In Home Feed",
          "Feed Actions and Custom Extension for Post Class",
          "Click Post To View and Some Backend Theory",
          "Updating User Feeds",
          "Following/Unfollowing to Update User Feeds"
        ],
        "Liking Posts": [
          "Liking A Post: Code & Backend Theory",
          "Code Refactor For Like Function",
          "Checking Post for Likes",
          "Viewing Users That Have Liked A Post",
          "Double Tap Post To Like & Section Recap"
        ],
        "Post Comments": [
          "Building Comment UI",
          "Comment Class & Backend Theory",
          "Fetching Comments From Database",
          "Dynamic Cell Sizing & Section Wrap Up"
        ],
        "In-App Notifications": [
          "Notifications UI",
          "Likes & Backend Theory",
          "Notification Class & Comments/Follow",
          "Configure Notification Cells",
          "Notification Cell Actions",
          "Sorting By Date & UIButton Extension",
          "Checked Notifications & Wrap Up"
        ],
        "Search Feed": [
          "Posts & Filtering Users"
        ]
      },
      "requirements": [
        "All you need is a computer (preferrably Mac). Some programming experience is preferable for this course, however no prior programming experience is required, you will be taught from scratch!"
      ],
      "description": "** Source Code with updates for Swift 4.2 & Firebase 5 Available Now!! **\n** Located in Lecture 1 Resources Section **\nWhat are we building?\nIn this course, you will learn how to build a complete version of Instagram ready to be published on the App Store. Throughout the process, you will develop high level programming, app design and app development skills.\nPrior Experience?\nNo prior programming experience is required! The course will move a little fast if you're a complete beginner, but you will pick things up along the way. We will be teaching you how to program from scratch, all the way from the absolute basics to high level programming techniques and best practices.\nWhy take this course?\nTaking this course will give you the knowledge and skills you need to become a professional iOS Developer, and vital skills that you will need to be able to build your own mobile apps from the ground up. You're not just learning how to build Instagram, but rather learning how to become a full stack app developer. All of the techniques taught in this course will give you the foundation you need to become a successful advanced level programmer, whether it be as a freelancer, a professional, or both. This is also a great item to add to your portfolio or GitHub profile, its awesome to show off at interviews or have as code to send potential employers!\n\nWhat will you learn?\nComprehensive knowledge and understanding of Swift 4 & Xcode\nImplement the Model View Controller system\nAdvanced level programming and app development skills\nAdvanced level User Interface Design\nAdvanced level back end engineering\nHow to communicate with a database (read/write)\nHow to monitor events in a database\nHow to structure data for optimum performance\nHow to build a fully functioning social network\nHow to implement push notifications using Firebase Cloud Messaging\nHow to programmatically construct storyboards\nHow to parse incoming JSON data from database\nHow to build a direct messaging feature using Firebase\nHow to use CocoaTouch classes, UIKit, UserNotifications and more\nHow to use CocoaPods and custom third party softwares\nHow to implement/use protocols\nHow to implement custom subclasses for clean and reusable code\nHow to dynamically size collection view cells\nHow to create extensions and functions for clean and reusable code\nWhat features are included?\nHome feed with pagination\nSearch feed with posts and ability to search for users\nCreate users, make posts, like posts, comment on posts\nHashtags and mentions\nDirect messaging\nIn app notifications\nPush notifications for likes, comments, follows and mentions\nFollow/Unfollow users\nView followers/following users\nComplete pagination of data using Firebase for scalability\nEdit profile feature\nDeleting posts\nEdit posts\nSaved Photos\nAbility to see who has liked posts\nLogging in and logging out",
      "target_audience": [
        "Anyone that wants to learn how to code or learn how to build high level full stack iOS Mobile Applications."
      ]
    },
    {
      "title": "Flutter Provider Essential Course (English)",
      "url": "https://www.udemy.com/course/flutter-provider-essential-course-english/",
      "bio": "Learn and practice the core concepts of state management using Flutter Provider",
      "objectives": [
        "Necessity of provider - Dependency injection and state management",
        "Provider types and usage - Provider, ChangeNotifierProvider, FutureProvider, StreamProvider, MultiProvider ProxyProvider",
        "Convenience widget and BuildContext extension methods - Consumer/Selector widget, read/watch/select extension methods",
        "Communication between providers - ProxyProvider, ChangeNotifierProxyProvider",
        "StateNotifier and StateNotifierProvider - communication between providers without ProxyProvider",
        "Errors and how to deal with them - ProviderNotFoundException, setState or markNeedsBuild, etc.",
        "Using the addPostFrameCallback method to handle errors, and actions such as showDialog and Navigator push",
        "3 apps(TODO, Weather, Firebase Authentication) and a total of 8 production process experiences through a combination of various providers"
      ],
      "course_content": {
        "Introduction": [
          "The background and target audience",
          "Tutorial structure",
          "Tools used in tutorial"
        ],
        "Provider Overview": [
          "Section overview",
          "Necessity of Provider",
          "Managing app state without Provider - 1",
          "Managing app state without Provider - 2",
          "Dependency injection using Provider",
          "ChangeNotifier and addListener",
          "ChangeNotifierProvider",
          "read, watch, select extension methods",
          "MultiProvider",
          "FutureProvider",
          "StreamProvider",
          "Consumer",
          "Consumer, builder, ProviderNotFoundException",
          "Selector",
          "Learn more about ProviderNotFoundException and the Builder widget",
          "Provider Access – Anonymous route access",
          "Provider Access – Named route access",
          "Provider Access - Generated route access",
          "ProxyProvider overview - 1",
          "ProxyProvider overview - 2",
          "ProxyProvider example - 1",
          "ProxyProvider example - 2",
          "ProxyProvider example - 3",
          "ProxyProvider example - 4",
          "The way WidgetsBinding.instance.addPostFrameCallback is called has changed.",
          "Errors & addPostFrameCallback - 1",
          "Errors & addPostFrameCallback - 2",
          "Errors & addPostFrameCallback -3",
          "Errors & addPostFrameCallback -4",
          "Action processing using addListener of ChangeNotifier - 1",
          "Action processing using addListener of ChangeNotifier - 2",
          "Action processing using addListener of ChangeNotifier - 3",
          "Action processing using addListener of ChangeNotifier - 4"
        ],
        "TODO App": [
          "TODO App Overview",
          "TODO App structure",
          "Packages, folders, and app skeleton",
          "Todo model and Filter enum",
          "TodoFilterState and TodoFilter ChangeNotifier",
          "TodoSearchState and TodoSearch ChangeNotifier",
          "TodoListState and TodoList ChangeNotifier",
          "ActiveTodoCountState and ActiveTodoCount ChangeNotifier",
          "FilteredTodosState and FilteredTodos ChangeNotifier",
          "Injecting providers",
          "TodoHeader widget",
          "CreateTodo widget",
          "SearchAndFilterTodo widget",
          "ShowTodos widget",
          "TodoItem widget",
          "Reducing search volume",
          "Getting the correct initial state of ActiveTodoCount and FilteredTodos",
          "Check if ChangeNotifierProxyProvider can be replaced with ProxyProvider",
          "Refactoring ActiveTodoCount and FilteredTodos",
          "StateNotifier and StateNotifierProvider Overview",
          "StateNotifier & StateNotifierProvider example - 1",
          "StateNotifier & StateNotifierProvider example - 2",
          "StateNotifier & StateNotifierProvider example - 3",
          "StateNotifier & StateNotifierProvider example - 4",
          "Refactoring Todo app using StateNotifier - 1",
          "Refactoring Todo app using StateNotifier - 2",
          "Todo App further considerations"
        ],
        "Weather App (OpenWeather)": [
          "(Notice) Service Provider Replacement",
          "Weather App Overview",
          "Packages, app folder structure, app page skeleton",
          "Models",
          "Weather API Services - 1",
          "Weather API Services - 2",
          "WeatherRepository",
          "Providers folder structure",
          "WeatherProvider",
          "SearchPage widget - Form",
          "HomePage widget 1 - initial, loading, error",
          "HomePage widget 2 - Platform aware dialog",
          "HomePage widget 3 – weather loaded state",
          "TempSettingsState, TempSettings ChangeNotifier & SettingsPage UI",
          "ThemeState, ThemeProvider ChangeNotifier and applying Theme Change",
          "Refactoring to ChangeNotifierProvider + ProxyProvider",
          "Refactoring the Weather app using StateNotifier - 1",
          "Refactoring the Weather app using StateNotifier - 2",
          "Weather App Further Considerations"
        ],
        "Firebase Authentication App": [
          "App overview",
          "(Notice) Firebase Project Setup",
          "Firebase setup (Android)",
          "Firebase setup (iOS)",
          "Firebase Setup Test, Firebase Authentication Setup, Firestore DB",
          "Models",
          "Page skeletons",
          "AuthRepository",
          "AuthState & AuthProvider ChangeNotifier",
          "Injecting AuthRepository, StreamProvider, AuthProvider into widget tree",
          "SigninState, SigninProvider ChangeNotifier",
          "SigninPage - 1",
          "SigninPage - 2",
          "SignupState, SignupProvider ChangeNotifier, SignupPage",
          "HomePage",
          "ProfileRepository, ProfileState, ProfileProvider ChangeNotifier",
          "ProfilePage",
          "Refactoring Firebase Authentication app using StateNotifier - 1",
          "Refactoring Firebase Authentication app using StateNotifier - 2",
          "Firebase Authentication app further considerations"
        ],
        "Misc": [
          "Equatable package and dart data class generator extension"
        ],
        "Outro": [
          "What's next?"
        ],
        "Weather App (MetaWeather)": [
          "Urgent Notice",
          "Weather App overview",
          "Packages, folder structure, page skeletons",
          "Models",
          "Weather API services - 1",
          "Weather API services - 2",
          "WeatherRepository",
          "WeatherState & WeatherProvider ChangeNotifier",
          "SearchPage widget - Form",
          "HomePage widget 1 – initial & loading state",
          "HomePage widget 2 – error state",
          "HomePage widget 3 – weather loaded state",
          "TempSettingsState, TempSettings ChangeNotifier & SettingsPage UI",
          "ThemeState, ThemeProvider ChangeNotifier and applying Theme changes",
          "Refactoring to ChangeNotifierProvider + ProxyProvider",
          "Refactoring the Weather app using StateNotifier - 1",
          "Refactoring the Weather app using StateNotifier - 2",
          "Weather App further considerations"
        ]
      },
      "requirements": [
        "Requires some experience and understanding of Flutter"
      ],
      "description": "In the Flutter Provider Essential course, you can learn in depth about Provider, the most basic and widely used among Flutter state management solutions.\n\n\nIf you want to deepen your understanding of the Flutter Provider and put all the concepts into practice, then this course is for you.\n\n\nThe lecture was carefully composed to ensure a balance between theory and practice.\n\n\nAnd under the belief that repetition is the most important learning method, whenever there is a new concept, we will test the concept by making a small app, and through real-world apps such as TODO, Weather, and Firebase Authentication app, the concepts will come together comprehensively.\n\n\nIn particular, we will repeatedly practice combinations of different Providers when creating TODO, Weather, and Firebase Authentication apps.\n- TODO App (3 Implementations): 1. Combination of ChangeNotifierProvider, ChangeNotifierProxyProvider, 2. Combination of ChangeNotifierProvider and ProxyProvider, 3. StateNotifierProvider\n- Weather App (3 Implementations): 1. Combination of ChangeNotifierProvider, ChangeNotifierProxyProvider, 2. Combination of ChangeNotifierProvider and ProxyProvider, 3. StateNotifierProvider\n- Firebase Authentication App (2 Implementations): 1. Combination of StreamProvider , ChangeNotifierProvider, and ChangeNotifierProxyProvider, 2. Combination of StreamProvider and StateNotifierProvider\n\n\nIn addition, I will talk about StateNotifier and StateNotifierProvider, which allow you to use the Provider as a more advanced State Management Solution, and there will be opportunities to practice through apps, so you will have even more options.\n\n\nI can proudly say that this course is the most in-depth course on Flutter Provider.\n\n\nThis is a quick look at everything covered in the course.\n\n\n- Why Provider is needed\n- How to access data in the widget tree using Provider\n- How to listen for data changes in the widget tree using ChangeNotifier’s AddListener\n- How to use ChangeNotifierProvider, the most used in Provider\n- How to use the read, watch, and select extension methods to easily access and listen to data\n- MultiProvider, which allows the easy and neat injection of multiple providers into the widget tree\n- FutureProvider and StreamProvider, a provider used when you want to listen to continuously changing values and rebuild the widget\n- Consumer widget, a kind of convenience widget that makes it easy to access a specific type of Provider\n- Selector widget, a type of Consumer widget that enables more detailed control\n- Provider Access and value named constructor: anonymous route access, named route access, generated route access, global access\n- Provider-to-provider communication: ProxyProvider\n- Various errors encountered when using the Provider and how to deal with them\n- The addPostFrameCallback method, which is useful when used together with Provider\n- How to handle actions such as showDialog or Navigator dot push using ChangeNotifier’s AddListener\n- TODO App: 3 implementations through a combination of various providers\n- Weather App: 3 implementations through a combination of various providers\n- Firebase Authentication App: 2 implementations through a combination of various providers",
      "target_audience": [
        "Beginners to Flutter who want to learn about Provider, the most widely used Flutter state management solution",
        "Flutter developers who want to have an in-depth understanding of the Flutter Provider",
        "Flutter developers who want to know the various usage examples of Flutter Provider"
      ]
    },
    {
      "title": "Android App Development For Beginners",
      "url": "https://www.udemy.com/course/android-app-development-for-beginner/",
      "bio": "Step by step android development and Java tutorials included",
      "objectives": [
        "Basic of android app development",
        "Starting out android app development",
        "You will create a complete Android app"
      ],
      "course_content": {},
      "requirements": [
        "You will know basic Java",
        "No coding experience needed!",
        "You just need to be comfortable using a computer.",
        "Basic Knowledge about html and css"
      ],
      "description": "Today's World is Spread With a Mobile phone it's like when people talk about technology what comes in people mind is Smartphone\nand when we talk about smartphone People talk about apps\nNow people don't just want to download apps they want to create they Own Apps\n\n\nSo To Develop a professional app You need to learn some Programming\nHere I am to teach you the basic Structure to start with Android app development and this is very basic app development to get your hands dirty to get into the industry of how it feels like to create a single and Simple app in android Studio and Learn the Basics of Java Programming\n\n\nIntroduction\ninstalling JDK for Android Studio Detailed Video in java fundamentals\ninstalling android studio\nUnderstand android studio\ninstalling Geny Motion\nUSB driver to connect Your Physical Device\nUnderstand XML\nTextView and ImageView\nViewGroups\nMargin Padding\ncopy image in android studio\nImage App\nOverview of Android Studio\nApp Launcher\nInterActive App\nCreating Cricket App\nAdding Method In App\nonClickMethod\nCalculation\nAdding Java In team B\nAdding Team B XML\nAdding Reset Button\nStyling_Cricket_app\nSome Important Theory Explanation\nAndroid Update Google IO\nToast Message and Surprise Fidget Spinner App\nHow to add Custom Button in Application\nExplanation OF Manifest File in Android Studio\nFind Drinks Adviser\nFind Drinks XML\nFind Drinks Java\nLudo Dice Roll App\nLudo Dice adding Logo and Images\nLudo Dice XML\nLudo Dice JAVA Ep1\nLudo Dice Complete App",
      "target_audience": [
        "People Who are interested To Start they carrer with android development",
        "Anyone who wants to learn how to make Android apps",
        "Anyone who is excited about learning a new skill"
      ]
    },
    {
      "title": "iOS Development Using UIKit & Swift - Project Based Learning",
      "url": "https://www.udemy.com/course/ios-development-using-uikit-swift-project-based-learning/",
      "bio": "Learn MapKit, Core Data, JSON API and integration of UIKit app with SwiftUI",
      "objectives": [
        "Students will learn how to create UIKit applications with Swift programmatically.",
        "Students will learn how to use MapKit and Core Location to build real world applications.",
        "Students will learn Core Data and how to persist information in SQLite databases. Students will also learn about creating one to many relationships in Core Data",
        "Students will learn how to consume JSON from a third party app and perform GET, POST and DELETE operations.",
        "Students will also learn how to integrate SwiftUI views into a UIKit application.",
        "Students will learn how to create a generic networking layer in Swift"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files",
          "MUST WATCH - How to Remove Storyboards from your iOS UIKit Project"
        ],
        "NearMe App - Initializing Map, Requesting Permissions, Displaying User Location": [
          "What we will be building?",
          "Adding Map on the Screen",
          "Adding Search TextField on the Screen",
          "Requesting Permission",
          "Showing and Zooming to User's Location"
        ],
        "NearMe App - Search and Display Nearby Locations": [
          "Find Nearby Places Using MKLocalSearch",
          "Displaying Places in a List",
          "Calculating and Displaying Distance",
          "Implementing PlaceAnnotation",
          "Selecting Place Annotation from Map",
          "Show Place Details",
          "Launch Apple Maps and Allow User to Call"
        ],
        "Budget App - Setting Up Core Data Stack and Models": [
          "What are we building?",
          "Creating Budget Category Model",
          "Setting Up Core Data Stack",
          "Creating Add Budget Screen",
          "Adding Validation to Add Budget Screen",
          "Saving Budget Category",
          "Displaying Budget Categories"
        ],
        "Budget App - Adding Transactions": [
          "Creating Transaction Model",
          "Creating the Interface to Add Transaction",
          "Adding Transaction to Budget Category",
          "Displaying Transactions for Budget Category",
          "Displaying Transactions Total and Remaining Amount",
          "Deleting Transactions",
          "Implementing Custom BudgetCategoryTableViewCell",
          "Using BudgetCategoryTableViewCell",
          "Implementing Budget+CoreDataClass",
          "Deleting Budget Category"
        ],
        "Store App - Displaying Categories": [
          "What we will be building?",
          "Tour of the Platzi Store API",
          "Resource: Platzi Fake Store API",
          "Fetching all Categories",
          "Displaying all Categories"
        ],
        "Store App - Displaying and Adding Products": [
          "Fetching Products by Category",
          "Displaying Products on the Screen",
          "Hosting a SwiftUI View through UIHostingConfiguration",
          "Adding AddProductViewController and Previewing the UI for View Controller",
          "Displaying and Selecting Category Using SwiftUI View",
          "Adding a Validation to AddProductViewController",
          "Persisting a Product on the Server"
        ],
        "Store App - Product Details and Deleting Products": [
          "Show Product Details",
          "Display Product Images Using SwiftUI View",
          "Deleting a Product",
          "FIX - Deleting a Product",
          "Showing Errors Using Alert",
          "Showing Messages Using MessageView Implemented in SwiftUI"
        ],
        "Store App - Generic Network Layer": [
          "CORRECTION - Network Layer Not Covered Before in Course",
          "Implementing Resource and HttpMethod",
          "Implementing Generic Network Layer in StoreHTTPClient",
          "Using Generic Network Layer"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Knowledge of Swift language is required",
        "Knowledge of iOS architecture is required (Examples: MVC)",
        "Knowledge of SwiftUI is recommended but not required",
        "Latest Xcode and iOS version"
      ],
      "description": "Welcome to “iOS Development Using UIKit & Swift - Project Based Learning”. UIKit is still the dominant framework when building iOS applications. This course covers multiple real world projects, implemented programmatically using the UIKit framework without the use of Storyboards.\n\n\nLet’s check out the course content below:\n\n\nNearMe App:\nYou will learn how to create a MapKit application in UIKit. The app will allow you to search closest points of interest near your current location. This can be a burger joint, taco store, gas station, cafe and more. You will also learn how to display annotations on the map and even display the locations in a list. Users will be able to run the app on their physical device, get directions and even make a call to the designated place.\n\n\nBudget App:\nIn this app, you will learn how to use Core Data to persist information locally on the user’s device. You will be building a Budgets application that will keep track of categories and the related transactions for each category.\n\n\nStore App:\nIn this app, you will learn how to integrate a UIKit application with a JSON API. You will consume multiple endpoints of a third party api and perform GET, POST and DELETE operations. You will also learn how to inject SwiftUI views into a UIKit application and visualize UIKit controllers using Xcode previews. The app will also cover how to create a generic network layer.\n\n\nWhat will you learn in this course?\n\n\nStudents will learn how to create UIKit applications with Swift programmatically.\nStudents will learn how to use MapKit and Core Location to build real world applications.\nStudents will learn Core Data and how to persist information in SQLite databases. Students will also learn about creating one to many relationships in Core Data.\nStudents will learn how to consume JSON from a third party app and perform GET, POST and DELETE operations.\nStudents will also learn how to integrate SwiftUI views into a UIKit application.\n\n\nWho is this course for?\n\n\nThis course is for developers who want to learn how to build UIKit applications programmatically, without using Storyboards.\nStudents who are interested in learning new techniques for building iOS applications.\nStudents who are interested in learning how to make MapKit, Core Data and JSON using UIKit framework.\nStudents who are interested in learning how to integrate UIKit with SwiftUI framework and using SwiftUI views in a UIKit application.\n\n\nAll the lectures in the course are accompanied with downloadable resources (code). All code is implemented using the latest version of Xcode and iOS framework.\n\n\nThank you again for enrolling in this course. I am sure you will enjoy this course and I can’t wait to see what apps you build in the future.",
      "target_audience": [
        "This course is for developers who want to learn how to build UIKit applications programmatically, without using Storyboards.",
        "Students who are interested in learning new techniques for building iOS applications.",
        "Students who are interested in learning how to make MapKit, Core Data and JSON using UIKit framework.",
        "Students who are interested in learning how to integrate UIKit with SwiftUI framework and using SwiftUI views in a UIKit application."
      ]
    },
    {
      "title": "KivyMD Python - Build Mobile apps using Material Design",
      "url": "https://www.udemy.com/course/kivymd-python-build-mobile-apps-using-material-design/",
      "bio": "Build cross-platform desktop/mobile apps using KivyMD, Kivy and Python 3",
      "objectives": [
        "Using Python to create Android + iOS Mobile Apps",
        "Material Design to create a beautiful UI",
        "Kivy Basics for groundwork to more advance topics",
        "Create Toolbars, Lists, Navigation Drawers, Login Systems, Dialog Boxes and more."
      ],
      "course_content": {},
      "requirements": [
        "Python Level: Beginner. I am going to assume that you already know the Python basics ( variables, functions etc. )",
        "Please watch the preview lectures and read the description of this course before enrolling."
      ],
      "description": "If you thought Java/Swift was the only way to create Android and iOS mobile apps, you couldn't have been more wrong. In comes Python with Kivy and KivyMD ( Kivy Material Design ). You will be able to create beautiful apps using your favourite programming language. These apps are cross-platform so you basically create them once and you will be able to use them on desktop and mobile.\n\nThis is The Complete Kivy MD Course on Udemy that will not only help you make android + iOS apps for fun, but this course will land you a reputable career as an mobile and GUI developer. The course not only tells you the basics of material design, but we will take you on a journey across the entire development system from the basics to advanced. You'll learn from doing practical coding.\nWhat to expect after completion of the course?\nYou should expect to be familiar with components used to create a mobile app with Kivy Python. You will know how and when to put in different elements like Toolbar, Navigation Drawer and how to make them look good. Some of the features of this course -\nLearn Kivy Basics before going to KivyMD\nCreate beautiful Buttons and bind them to actions\nDialog boxes\nTaking Input and verification\nLists with and without Avatars\nToolbar with color themes\nNavigation Drawer\nChanging Screens\nSource Code - All source code shown in this course is also available for download. Students can create their own projects using the downloaded Python files.\nWhy choose me as an instructor?\nWhen i was a kid i saw this YouTube video on how make a folder  invisible on Windows I was so fascinated with this idea. Since then  my love for technology has only grown. I understand the  people who are passionate about learning new things. At the end of each  section we will take a quiz to check up on your skills and see if we’re  ready for the next section. We will create this project together from  start to finish.\nSo, why wait? If all this sounds great to you, Press on “Take this Course” and I will see you inside the course!",
      "target_audience": [
        "Developers who want to create Mobile Apps and Games using Python and not Java/Swift",
        "Beginner level - Game developers and Application Developers.",
        "Anyone interested in learning about Kivy App Development and Material Design"
      ]
    },
    {
      "title": "Mobile App Design from scratch with Sketch 3 : UX and UI",
      "url": "https://www.udemy.com/course/mobile-app-design-from-scratch/",
      "bio": "The new, improved and updated best-selling step by step guide to learn how to design a great mobile app.",
      "objectives": [
        "Create an engaging mobile app design from start to finish",
        "Turn your idea into a fully designed product",
        "Use a design software (Sketch) like a pro",
        "Create graphic illustrations even if you've never drawn anything in your life"
      ],
      "course_content": {},
      "requirements": [
        "No specific skills required",
        "You need to have a mac (Sketch, the design software we’ll be using is available on mac only)",
        "If using a Windows computer, you need to make sure you are running the OS X virtual environment on your computer"
      ],
      "description": "WELCOME TO THE NEW, IMPROVED AND UPDATED VERSION OF THE BEST SELLING MOBILE APP DESIGN COURSE ON UDEMY\nThis course is not just about creating a pretty app, it’s about designing an app that works great and happens to be beautiful. We'll teach you a complete design workflow that will allow you turn your idea into a fully designed and engaging mobile app using Sketch 3.\nLearn to design engaging apps with this beginners mobile app design course\n\nMaster the ins and outs of Sketch 3\nDesign a beautiful and user-friendly interface for your app\nLearn UX Research techniques to craft an engaging app\nLearn Design best practices to build your product efficiently\nOutline your visual concept\n\nA skill that will change your life\nMobile apps are everywhere, transforming our personal and profesionnal lives. And what makes an app successful is how well it is conceived. The demand for people able to design such engaging and well thought apps is constantly growing. That's why mobile app designers are averaging over $100k a year.\nWith Sketch 3 and this course, you'll have the skills to produce professional designs even if you have zero previous experience.\nContent and Overview\nThis course is efficiency oriented and is taught with an example. Each lesson represents a step in the design process that will be applied to the app we will be building and that we'll help you apply to your own idea. You don't need any previous experience as a designer, we'll teach you everything you need to know along the way.\nWe'll begin by teaching you what UX is, how it affects the UI design and how you can use UX research techniques to craft a great app. We'll show you how to efficiently build a quick first version of your app and how to preview it on a device. This will get you used to Sketch and we'll give you exercises to build up your design skills.\nWe'll then work on the visual concept of your app, you'll learn about colors, fonts and how to properly use them. This will allow us to create the final design of our app, beautiful and functional. In this section we'll dive deep into Sketch amazing functions and best practices.\nYou'll even learn how to design an icon for the app and showcase your finished app !\nBy the end of this course you'll...\nBe able to explore your idea in depth to find the right way to build your app\nHave a full proficiency in design software\nHave a very good understanding of design principles and how to use them\nBe able to build graphic illustrations and icons even if you've never drawn anything in your life\nKnow how to choose the flow and navigation of your app\nKnow how to create a very clear layout that will serve your content\nKnow how to create the identity of your app and how to choose and use colors and fonts\nBe completely autonomous as a designer\nSave a lot of money and time by not needing to work with a freelance designer",
      "target_audience": [
        "This course will benefit entrepreneurs, developers, and designers looking to move into the mobile applications market",
        "This course is not about learning how to code an app but is focused on learning how to design an app that makes sense"
      ]
    },
    {
      "title": "Mobile App Marketing: Learn App Monetization From Scratch",
      "url": "https://www.udemy.com/course/mobile-app-marketing-learn-app-monetization-from-scratch/",
      "bio": "Mobile app monetization strategies to monetize your app, create a profit-generating app business | Mobile App Marketing",
      "objectives": [
        "You will learn how to correctly monetize your app and Mobile App Marketing",
        "You will learn how to make more money with your app",
        "You will learn to generate more revenue with your app",
        "Top app monetization strategies",
        "You will learn about mobile app business",
        "You will learn how to grow your app business",
        "You will become a much stronger mobile app entrepreneur",
        "Retention increasing tips for app monetize",
        "Mobile App Publishing Types",
        "In-App Purchase Monetization",
        "Ad Placement Strategies for monetize app",
        "Ad Mediation Platforms",
        "Analytical Tools` dashboards",
        "Ad Network",
        "User Acquisition Campaigns",
        "Fill Rate/Match Rate",
        "eCPM/RPM",
        "LTV",
        "ARPDAU (Average Revenue per Daily Active User)",
        "ARPU (Average Revenue Per User )",
        "Difference between ARPDAU and ARPU",
        "Mobile App Marketing, App Monetization",
        "Google Ads can work well for small businesses when optimizing keywords and targeting relevant online audiences.",
        "Google Ads is the platform businesses use to advertise online while Google AdSense is the platform websites use to host those online ads in exchange for payment"
      ],
      "course_content": {
        "Introduction to Mobile App / Game Monetization": [
          "Introduction to Mobile App Marketing and Monetize App",
          "FAQ about Mobile App Marketing and Monetize App"
        ],
        "What We Will Learn in this App Monetization course?": [
          "What Is Covered In This Mobile App Marketing Course?"
        ],
        "Key Metrics in App Monetize": [
          "Revenue Metrics in App Monetize",
          "User Acquisition Metrics in App Monetize",
          "Engagement Tracking Metrics in App Monetize",
          "Technical Performance Metrics in Monetize App",
          "quiz"
        ],
        "App Publishing Process": [
          "App Publishing Cycle in App Monetization",
          "Prototyping in Mobile App Marketing",
          "MVP ( Minimum Viable Product ) in Mobile App Marketing",
          "LTV - Retention Tests in Mobile App Marketing",
          "Publishing and Optimization in Mobile App Marketing",
          "App Monetization Types",
          "quiz"
        ],
        "Ad Monetization": [
          "Ad Monetization",
          "Ad Mediation in Mobile App Marketing",
          "Ad Placement Strategies in Mobile App Marketing",
          "In App Marketing Strategies",
          "quiz"
        ],
        "LTV_Retention Increasing Tips": [
          "LTV_Retention Increasing Tricks in Mobile App Marketing"
        ],
        "Extra": [
          "Mobile App Marketing: Learn App Monetization From Scratch"
        ]
      },
      "requirements": [
        "No prior knowledge is required about app monetization",
        "No pre-requisites necessary about mobile app marketing, monetize app",
        "Desire to learn App Business",
        "Desire to learn app monetization",
        "Desire to learn app monetize",
        "Desire to learn mobile app marketing",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device."
      ],
      "description": "Hello there,\nWelcome to the \"Mobile App Marketing: Learn App Monetization From Scratch\" course.\nMobile app monetization strategies to monetize your app, create a profit-generating app business | Mobile App Marketing\nDo want to create a successful mobile app business? Google ads, user acquisition, app install campaign, Facebook ads, app monetization\nDo you know;\nHow to make money with your Apps?\nHow to put Adds ads into your Apps?\nHow you can turn a non-paying user to a paying user?\nWhat can you sell to your subscribers?\nHow can you re-engage with your users?\nIf you want to learn all the answers \"Mobile App Marketing: Learn App Monetization From Scratch\" course is the perfect place for you to start.\nThis course is specifically designed for the Beginner all the way up to Advanced;\nAd Monetization Experts,\nApp Developers\nMobile App entrepreneur\nMarketing, strategy, and ad consultants who want to expand their business and offer more to their clients,\nTechnical or non-technical entrepreneurs\nwho needs to learn how to successfully Market, Promote and Monetize your apps, so that you can actually make a living doing what you enjoy the most!\nWhy would you want to take this course?\nEveryone is talking about design, coding but no-one is talking about how to make money with apps.  There are a tons of tutorials for how to make game, but everyone is silent about making money with apps and they are keeping it as a secret. We believe the power of sharing. Sharing is caring, any? So we decided to come out and teach you how to actually make money with apps.\nIn this course we will cover;\nKey Metrics ( Revenue Metrics, User Acquisition, Engagement Tracking, etc )\nApp Publishing Process\nApp Monetization Types\nAd Monetization ( Ad Networks, Ad Mediation Platforms, Ad Placement Strategies )\nAd Placement Strategies ( Banner, Native, Interstitial, Rewarded Video )\nAd Monetization Tips\nIAP Monetization\nSubscription Model\nRetention Increasing Tips\nApp Monetize\nMonetize App\nMobile app marketing\nApp Monetize\nAndroid App Monetize\nWhen you enroll, you will feel the OAK Academy`s seasoned developers and marketing experts' expertise.\nWhat is Google Ads (Adwords)?\nGoogle Ads (formerly called Google Adwords) is a digital advertising platform where businesses can bid money on relevant keywords to display advertisements for their products and services on online channels. The online advertisements appear as sponsored results on Google search engine result pages or display ads on websites and mobile apps in Google’s Network. The platform assigns each ad a page position based on the bid's size combined with the advertisement’s quality (determined by Google’s Quality Score metric). The business then pays via a Cost Per Click (CPC) model for the number of clicks the ad receives. Within the Google Ads platform, businesses can view their online ads' metrics and performance, set goals for their advertising efforts, and set audience targeting parameters.\nDo Google Ads work for small businesses?\nGoogle Ads can work well for small businesses when optimizing keywords and targeting relevant online audiences. Since millions of consumers use Google every day to search for products and services, advertising through Google Ads can be a great way for a business to get in front of consumers searching for similar offerings. The success of Google Ads for a small business often depends on the nature of the products and services, the keywords the business chooses to bid on, and their methods for targeting the right customers online. Google Ads is a good fit for small businesses that operate primarily or entirely online, businesses with a high customer lifetime value (LTV), and businesses that can benefit from targeting their customers geographically or by online search interest.\nHow successful are Google Ads?\nWith the right advertising strategy, Google Ads can be very successful in helping a brand get its products and services in front of more consumers online. The success of Google Ads often depends on a business’ strategy for targeting the right audience and the quality of its ad content. Google Ads are more likely to be successful for businesses that conduct keyword research to optimize their bids on relevant keywords that they can rank highly for within their budget; and those that produce high-quality ad content, including graphics and landing pages that offer real value to their audiences.\nWhat is the difference between Google Ads and Adsense?\nGoogle Ads is the platform businesses use to advertise online, while Google AdSense is the platform websites use to host those online ads in exchange for payment. Google Ads is an online advertising platform where businesses pay to have their ads displayed online. Based on a business’ advertising budget, Google Ads will place the digital ads on the pages of Google results or on websites that belong to Google’s Network. Google AdSense is a program that anyone who owns a website can join, to become a part of Google’s Network. Through Google AdSense, the website owner allows Google Ads to automatically display relevant advertisements on their site and receives payment based on the number of views those ads receive.\nStep-by-Step Way\nBy the end of the course, you’ll have a firm understanding of how to make money with apps. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\n\nDive in now!\nMobile App Marketing: Learn App Monetization From Scratch\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Mobile app entrepreneurs",
        "Mobile app developers who want to learn how to expand their skills into a business",
        "Technical or non-technical entrepreneurs who want to start mobile app business",
        "Freelancers who want to add development services to their offerings",
        "Marketing, strategy, and ad consultants who want to expand their business and offer more to their clients",
        "Anyone who have an app on the store",
        "Anyone who wants to correctly monetize app",
        "Anyone who wants to become a much stronger mobile app entrepreneur",
        "Anyone who wants to grow app business",
        "People who want to learn app monetize in mobile app marketing strategies",
        "People who want to learn monetize app, monetize mobile app, android app monetize"
      ]
    },
    {
      "title": "Build A Chat Application With Firebase, Flutter and Provider",
      "url": "https://www.udemy.com/course/build-a-chat-application-with-firebase-and-flutter/",
      "bio": "Make a complete mobile messaging application like WhatsApp or Telegram using Flutter, Firebase and Provider Framework!",
      "objectives": [
        "How to build a complete chat messaging application with Flutter and Firebase!",
        "How to use Flutter Provider Framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "App Showcase",
          "Creating Firebase And Flutter Project",
          "iOS Firebase Project Setup",
          "Android Firebase Project Setup"
        ],
        "Authentication and Basic Services": [
          "Getting Started",
          "Login Page UI | Part 1",
          "Login Page UI | Part 2",
          "Setup Firebase Authentication",
          "Authentication Provider",
          "Authentication | Login Logic | Part 1",
          "Authentication | Login Logic | Part 2",
          "Authentication | Login Logic | Part 3",
          "Snackbar Service",
          "Registration Page UI | Part 1",
          "Registration Page UI | Part 2",
          "Navigation Service",
          "Media Service",
          "Understanding User Data In Firebase",
          "Database Service",
          "Cloud Storage Service",
          "Authentication | Registration Logic | Part 1",
          "Authentication | Registration Logic | Part 2",
          "Finalizing Section"
        ],
        "Understanding Firebase And Chat Data Structure": [
          "Getting Started",
          "Understanding Firebase Data Structure",
          "Understanding Conversations Data",
          "Understanding Messages Data",
          "Firestore Data Flow Demonstration",
          "Populating Firestore Dummy Data",
          "Firebase Cloud Functions | Part 1",
          "Firebase Cloud Functions | Part 2",
          "Finalizing Section"
        ],
        "HomePage, ProfilePage & UserSearchPage": [
          "Getting Started.",
          "Automatic Login",
          "HomePage | Tab Bar",
          "Profile Page UI",
          "Profile Page",
          "Recent Conversations Page UI",
          "Recent Conversations Page",
          "Search Page UI",
          "Search Page | Part 1",
          "Search Page | Part 2",
          "Finalizing Section"
        ],
        "Conversation Page": [
          "Getting Started",
          "Conversation Page | Getting Started",
          "Conversation Page UI | Part 1",
          "Retrieve Conversation Data From Firestore",
          "Conversation Page | Display Messages",
          "Conversation Page | Distinguish Messages",
          "Conversation Page UI | Part 2",
          "Conversation Page UI | Part 3",
          "Conversation Page | Save User Text Input",
          "Conversation Page | Sending Text Messages",
          "Conversation Page | Sending Image Messages",
          "Conversation Page UI | Part 4",
          "Fixing Issues",
          "Conversation Page | Create New Conversations",
          "Finalizing Section"
        ]
      },
      "requirements": [
        "Basic familiarity with Flutter"
      ],
      "description": "Do you want to build a complete chat mobile app just like WhatsApp, Telegram or Facebook Messenger? This is the course for you!\nWHAT WILL WE BE BUILDING?\nIn this course, we’ll use the best in Flutter and Firebase to build a complete chat application from zero to deployment called Chatify that you can release on the Google Play Store or iOS App Store.\nWHAT DOES THE APP FEATURE?\nAn Amazing Real-time Messaging Application\nA recent Conversations Page just like other popular messaging apps\nFinding other App Users with Full-Text Search\nMedia Sharing between Users\nRealtime Messaging\nProfile Customization (i.e. Display Name, User Bio, etc)\nAuthentication\nUsing Device Camera and Image Library for Image Uploads\nCreating Group Conversations\nWHAT CONCEPTS ARE COVERED?\nA Complete Masterclass on Firebase / Firestore with Flutter\nProvider State Management Framework\nUploading Media Files with Firebase Storage + Image Compression Techniques\nAuthentication with Firebase and Flutter\nTaking Pictures / Picking Images for Upload with Flutter\nBuild and Deploy Firebase Functions\nComplete CRUD Functionality in Realtime with Cloud Firestore\nAll the Realtime Firestore Database Triggers (onCreate, onUpdate, onDelete)\nWorking with Streams, Futures and Updating State\nMedia Queries and Device Orientation for Responsive App Design\nHandling Async Data with FutureBuilders, StreamBuilders, and Async / Await Functions\nAnimations and Page Transitions\nSVG Images and Image Caching for Performance\nForm Validation and Error Handling\nCustom Theme Creation and Fonts\nTons of Practical, Straightforward and Repeatable App-Building Patterns\nAnd much more!\nWHAT ELSE DOES THIS COURSE OFFER?\n– Deep, Fine-Grained Learning – This course is jam-packed with information. I made the course that I most wanted to take and as a result, I didn't skimp on the details. You're going to cover more topics and material in greater depth than ever before.\n– 100% Real-World Practice – My goal is to get you writing code as much as possible. And not just any code–we'll be working exclusively on practical tasks that are instrumental in building your own amazing real-world apps.\n– No-Nonsense, Spot-On Explanations - Every lesson is to-the-point. I break down what we're making, how we'll be doing it and what the final product will look like, all on top of helpful and illustrative descriptions to aid your understanding along the way.\nI really enjoyed making this course and I think you’ll enjoy taking it just as much.\nLooking forward to seeing you within the course!\nWho this course is for:\nMobile and web developers looking to build impressive real-world, production-ready apps!\nFlutter developers looking for a challenge\nDevelopers looking to delve into the world of Firebase",
      "target_audience": [
        "Beginner Flutter Developers",
        "Aspiring Firebase Developers"
      ]
    },
    {
      "title": "Android P& Kotlin -Complete Android App Development Bootcamp",
      "url": "https://www.udemy.com/course/android-p-kotlin-complete-android-app-development-bootcamp/",
      "bio": "Learn Android Development from beginning to End Using Android Studio 3 and Android P",
      "objectives": [
        "Build any App you want",
        "Become a professional app developer and take a freelancer job",
        "Build 21 Kotlin apps from scratch",
        "Learn how to write a clean and readable code with kotlin",
        "Use an External library in your project",
        "Learn how to use user location and google maps API",
        "Learn how to use different APIs and web services",
        "Using navigation to create multi screen apps",
        "Learn how to use constraint layout",
        "Understanding of Android Development Patterns",
        "Using Firebase Realtime Database, Firebase Storage, Firebase Google SignIn",
        "Creating fluid Animations",
        "use Firebase Ml-Kit new machine learning feature of firebase"
      ],
      "course_content": {
        "Introduction": [
          "Why Android and Why Kotlin",
          "Course Setting & What You Will Learn",
          "How to Use This Course"
        ],
        "How to Get the Needed tools": [
          "What is Android Studio",
          "Install JDK on Windows",
          "Installing JDK on Windows(instruction note)",
          "Install Android Studio on Windows",
          "Installing Android Studio on Windows (instruction note)",
          "Install JDK on Mac OS",
          "Installing JDK on Mac OS (instruction note)",
          "Install Android Studio on Mac OS",
          "Install Android Studio on Mac OS (instruction note)"
        ],
        "Create your First App \"Hello World\"": [
          "What You Are Going to Build in This Section",
          "How to Create a New Project in Android Studio",
          "Android Codenames, Tags, and Build Numbers",
          "Lets Get Familiar With Android Studio",
          "Link to Android Studio Shortcuts",
          "What Is an Activity and a Layout",
          "Android Studio Change for Layout tabs",
          "Lets Run Our App On An Emulator",
          "Lets Run Our App On A Real Physical Device"
        ],
        "HappyNewYear Card App - Getting Started With User Interface and RelativeLayout": [
          "What We Are Going to Build in This Section",
          "Introduction to Layouts",
          "What Is a Relative Layout",
          "Needed Files for Creating Your \"Happy New Year Card\"",
          "Lets Start Using Android Layouts to Design our User Interface",
          "App Base Theme",
          "Create Your Custom Icon with Android Studio",
          "Showing Off Your Work",
          "Downloading the Complete Project"
        ],
        "Challenge : Create a \"Happy Birthday\" Card": [
          "What You Are Going to Build in This Challenge",
          "Download the Needed Files",
          "First Step : Create A New Project",
          "Second Step : Add the Image to Your Project",
          "Last Step : Design Your Card",
          "Download the Completed Project"
        ],
        "Introduction to Graphics and Android Scaling": [
          "What is a Pixel",
          "Different Image Sizes in Android",
          "Density Independent Pixel(dp, dip)"
        ],
        "Composing Mail App - Using LinearLayout": [
          "What We Are Going to Build by the End of This Section",
          "Needed Resources",
          "What is A LinearLayout",
          "Let's Create the User Interface",
          "drawable vs. mipmap",
          "Challenge : Create an Icon",
          "A Note About Your Icon",
          "Download the Completed Project"
        ],
        "Dice App - Lets Use Kotlin in Action": [
          "What We Are Going to Build by the End of This Section",
          "Needed Resources for Our App",
          "What Structure to use for the Layout",
          "Lets Design the Layout",
          "Interact with the Button to Roll the Dice",
          "How to Debug a Crash",
          "Download the Completed Project"
        ],
        "Introduction to Kotlin for Beginners": [
          "Variables and Data Types",
          "Kotlin Variables",
          "Perform Operations on Variables",
          "Coding Style",
          "Var vs. Val",
          "What is Null Safety in Kotlin",
          "What Are Functions",
          "Control Flow - if Expression",
          "Control Flow - when Expression",
          "Array Data Type",
          "Control Flow - for Loop",
          "Control Flow - while Loop",
          "Logical Operations",
          "Operators Precedence"
        ],
        "Calculator App - Using Variables and Operating on Them": [
          "What We Will Build by The End of This Section",
          "Link to Skeleton Project",
          "How to Use Github to Download a Project and Import it to Android Studio",
          "Creating the User Interface",
          "Creating the Logic and Using Operations on Variables",
          "Download the Completed project"
        ]
      },
      "requirements": [
        "A Windows PC or Mac",
        "No programming experience is required",
        "No programming experience is required"
      ],
      "description": "In this course you will learn how to make your own apps from beginning to end, whether you are a complete beginner or an advanced android developer and wants to learn some tips. We will use Kotlin, android's new language, with kotlin you can write clean and concise code, you will need less time to write, less time to read and you will have less bugs to debug.\nIn this course I tried to explain every line of code you write. and I tried to explain the usefulness of every new thing we are going to use.\nat the end of this course you will be able to create every app that you want and put your app idea into action",
      "target_audience": [
        "Students with no programming experience",
        "Android developers who want to get some tips in their programming"
      ]
    },
    {
      "title": "React Native bootcamp - Build an Instagram Clone w/Firebase",
      "url": "https://www.udemy.com/course/instagram-replica/",
      "bio": "Understand React Native with Redux, Firebase, Firestore, Firebase Storage, and React Navigation and hybrid Social Media",
      "objectives": [
        "Create real-world native apps using React Native",
        "Understand the terminology and concepts of Redux",
        "Make truly reusable components that look great",
        "Get up to speed with React design principles and methodologies",
        "Discover mobile design patterns used by experienced engineers",
        "Interact with real time databases such as Firestore"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to my Course! Pretty chill intro ;)",
          "Introduction p2",
          "Introduction (old version - forgive me for the stutter haha)",
          "Setting up the environment",
          "Installing the virtual android device (optional)",
          "Our first Hello World",
          "Conditional rendering"
        ],
        "Our shared drive": [
          "Link to the shared drive"
        ],
        "Login and Signup - Introduction to Firebase and React Navigation": [
          "Firebase setup",
          "React Navigation setup",
          "Setting up redux",
          "Login screen design",
          "Accessing the reducers - Explenation in the following video",
          "Explaining reducers",
          "Signup page",
          "Signing up with our firestore db",
          "Login and get user back-end functions",
          "Welcome screen, Login finish"
        ],
        "Tab bar and Post screens": [
          "Tab Navigator setup",
          "Upload File - Post screen",
          "Upload File - uri compressing",
          "Photos array",
          "Styling the photos array",
          "Removing images p1",
          "Removing images p2",
          "Design improvement p1",
          "Design improvement p2",
          "Uploading post Screen",
          "Bug fix after pressing the \"Post\" button"
        ],
        "Home Page": [
          "Uploading profile photos",
          "Uploading post to the Database",
          "Getting all the posts from the database",
          "Creating the post component",
          "Styling the post component p1",
          "Styling the post component p2",
          "Creating a custom header for the home page",
          "Liking posts",
          "Saving Posts",
          "Displaying saved videos"
        ],
        "Profile Screen": [
          "Getting the profile from the database",
          "Styling the retrieved data",
          "Following users",
          "One Post and Bug Fixes of the Profile Screen",
          "Navigating to our own profile",
          "Profile Screen bug fix + challenge for you",
          "Solution to the challenge",
          "Profile Screen Bug Fix (Follow causes the screen to flick)"
        ],
        "Messages": [
          "Messages screen"
        ]
      },
      "requirements": [
        "Minimum coding experience"
      ],
      "description": "Understand React Native with Redux, Firebase, Firestore, Firebase Storage, and React Navigation and build a fully functioning Social Media app.\nIn my course, I am going to teach you React Native and we are together going to build a hybrid Instagram-like social media, All the resources needed I am going to upload for the students to see. We are going to learn how to use Redux, React Native, Expo, Firebase Firestore and how to bring our desired social media app!\nWe will begin by creating a login and signup screens with the integration with modern firebase firestore. Later we begin to create other funcitons that a modern social media has - liking posts, commenting (which I will upload soon) and uploading pictures to our feed. We are also going to integrate real time chat as well as other functions that social media platforms have. If you want to request a feature feel free to leave a comment and I will upload a lecture on how to implement it ASAP! :D and as always I will answer every question instantly!\nAfter every major lecture I upload the resources, so you can feel free  to use them for any refrence you need\nI hope you don't mind little issues with my mic - after two lectures they were fixed! Thanks for considering my course, see you around :P",
      "target_audience": [
        "Coders that want to know how to write social networks"
      ]
    },
    {
      "title": "The Complete Hands-On SwiftUI Apps Using Firebase",
      "url": "https://www.udemy.com/course/the-complete-hands-on-swiftui-apps-using-firebase/",
      "bio": "Covers Firestore database, Authentication, Firebase Storage and much much more...",
      "objectives": [
        "Firebase with SwiftUI Apps",
        "Storing data in Firestore database",
        "Storing nested collections in Firestore database",
        "Uploading images to Firebase storage from SwiftUI Apps",
        "Performing authentication using Firebase custom authentication API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "Understanding Firebase": [
          "What is Firebase?",
          "Firestore vs Real Time Database",
          "Understanding Structuring Data in Firestore",
          "Resource: Structuring Data"
        ],
        "TODO List - Setting Firebase and Firestore for SwiftUI Project": [
          "Agenda: TodoList App",
          "Setting up Firebase project",
          "Installing Firebase Using CocoaPods",
          "Fixing Firebase Issues with Xcode 12",
          "Resources: Fixing Firebase Issues with Xcode 12",
          "Finishing Firebase Setup",
          "Installing Firestore CocoaPods and Instantiating Firebase",
          "Resources: Documentation for Firestore Database"
        ],
        "Todo List - Create, Read, Update and Delete": [
          "Saving a Task",
          "Fetching All Tasks",
          "Deleting a Task",
          "Updating Task"
        ],
        "Understanding MVVM Design Pattern": [
          "What are Design Patterns?",
          "What is MVVM?",
          "Why MVVM?",
          "MVVM Architecture and Web APIs",
          "Difference Between View Model and Model"
        ],
        "Grocery App - Managing Stores": [
          "What we will be building?",
          "Understanding the Starter Project",
          "Implementing Store Model and Firestore save",
          "Implementing AddStoreViewModel",
          "Adding Store Using SwiftUI View",
          "Implementing FirestoreManager getAllStores",
          "Implementing StoreListViewModel and StoreViewModel",
          "Displaying All the Stores"
        ],
        "Grocery App - Adding Items to Store": [
          "Implementing FirestoreManager Update to Add Grocery Items",
          "Implementing StoreItemListViewModel",
          "Adding Grocery Items to a Store",
          "Displaying Grocery Items on the View",
          "REFACTORING - Displaying Grocery Items on the View"
        ],
        "Grocery App - Subcollections": [
          "Implementing StoreItem, StoreItemViewModel and StoreViewState",
          "Updating Existing Store to Add Store Items",
          "Displaying Store Items on the SwiftUI View",
          "Deleting a Store Item",
          "BUG FIX - Clearing Grocery Item TextFields"
        ],
        "Fungi Finder - Authentication": [
          "What we will be building?",
          "Understanding the Starter Project",
          "Resources",
          "Setting Up Firebase and Downloading Frameworks",
          "Setting Authentication on Firebase Console",
          "Registering a User",
          "Authenticating a User"
        ],
        "Fungi Finder - Firebase Storage": [
          "Setting Up Firebase Storage",
          "Implementing Upload Photo to Firebase Storage",
          "Uploading Selected Photo to Firebase Storage",
          "Saving Fungi to Firestore Database"
        ]
      },
      "requirements": [
        "Knowledge of Swift Language",
        "Knowledge of SwiftUI",
        "macOS Catalina or above",
        "Xcode 12 or above",
        "iOS 14 or above",
        "Passion for learning"
      ],
      "description": "Firebase is the most popular backend in the mobile community and it is used in thousands of iOS apps. In this course, you will learn how to integrate Firebase in SwiftUI application. You will build several SwiftUI apps which will use Firebase Authentication, Firestore, Storage and Real Time Updates. This is a fun course with real life hand-on coding projects. Let’s check out the contents of the course.\n\n\nRequirements\nKnowledge of Swift Language\nKnowledge of SwiftUI Framework\nXcode 12 and iOS 14\nGoogle account to access Firebase console\nNo paid software is required. All apps are created using Xcode.\n\n\nUnderstanding Firebase:\nIn this section, you will learn about the Firebase platform. You will also learn about the Firestore database and how it is different from Real Time Database. Finally, you will learn different ways to structure data in the Firestore database.\n\n\nTODO List\nIn this section, you will learn about how to implement a simple TODO List app using Firestore and SwiftUI. This section will demonstrate how to perform CRUD operations with Firestore and quickly get your SwiftUI app integrated with Firestore database.\n\n\nUnderstanding MVVM Design Pattern\nIn this section, you will learn how to implement MVVM Design Pattern in a SwiftUI application. MVVM Pattern is the preferred pattern when building SwiftUI apps.\n\n\nGrocery App\nIn this section, you will learn how to implement a complete Grocery App using SwiftUI and Firestore. This app will allow users to persist hierarchical information for each document. Later you will update the app to replace the nested data with nested collections.\n\n\nFungi Finger\nIn this section, you will learn how to integrate your SwiftUI app with Firebase authentication, Firestore and even Firebase Storage. The user will pick a photo from the photo library or take a picture. Once the picture has been selected, it will be uploaded to Firebase storage and then the URL will be persisted to the Firestore database under the user identification.\n\n\nLet’s Chat\nIn this section, you will learn how to create a Chat App called Let’s Chat. This app will showcase Firestore Real Time Update feature and also use SwiftUI iOS 14 ScrollViewReader API to automatically scroll when new messages arrive.\n\n\nDon’t take my word for it, check out reviews from my other courses.\n\n\nIt is amazing, not only is it clear but it clarifies all my unanswered questions. It's hard to find someone who has a well detailed swift DS & Algo class. This is a gem. Thank you Mohammad Azam\n\n\nThis course provides a bundle of resources on Swift UI. Great explanation, building different apps and addition of latest updates makes it a five star course. Thanks Mohammad for your valuable work on providing this course.\n\n\nMohammad's courses are usually outstanding, but he has put in a great amount of detail into this course. He provides great detail in his explanations. If you have never parsed JSON and are looking to learn about MVVM design I would highly recommend this course.\n\n\nVery elegant course. Well scaffolded. Each section is very focused on a single task. One pet peeve I have of Udemy courses is when an instructor teaches a new skill but nest it inside a project that does 10 other things. This is the second course I've had with this instructor and both are excellent. Highly recommended.\n\n\nAfter completing this course, you will be ready to build your next SwiftUI application with Firebase platform.\n\n\nLet's get started!",
      "target_audience": [
        "Developers who wants to learn backend development using Firebase platform",
        "Developers who want to take their skills to the next level",
        "Developers who want to learn how to integrate Firebase with SwiftUI apps",
        "Developers who wants to become full stack mobile developers"
      ]
    },
    {
      "title": "Build a Mobile App without Coding in 2 Hours",
      "url": "https://www.udemy.com/course/build-a-mobile-app-without-coding/",
      "bio": "Launch your own Mobile App in 2 hours. We will build a mobile app with Google Sheets and Glide, with no coding required.",
      "objectives": [
        "Create a data structure in Google Sheets to support a mobile app",
        "Develop a mobile app with Glide starting from a Google Sheet and with no need of coding",
        "Distribute, install and test the mobile app"
      ],
      "course_content": {
        "Build Mobile App from scratch": [
          "Intro and accounts creation",
          "Create your Google sheets and app data structure",
          "Personalize your Google Sheet with formulas and dynamic content",
          "Dynamic content (Text)",
          "Create your app layout and main settings",
          "Personalize a Page layout in App",
          "Personalization by user",
          "Add sharing options",
          "Install and test the app"
        ]
      },
      "requirements": [
        "A Laptop and Internet connection",
        "No coding skills"
      ],
      "description": "In this course, you will:\nCreate a data structure in Google Sheets to support a mobile app\n\n\nDevelop a mobile app with Glide starting from a Google Sheet and with no need for coding\n\n\nDistribute, install and test the mobile app\n\n\nSUMMARY:\nWe will learn how to create a mobile app from a Google Sheet using Glide, a web application built by former Microsoft engineers to simplify app development.\nWe will learn how to create the data structure for the app to rely on Google Sheets, how to test the app, distribute it and install it, with no need for coding experience or skills.\nWe will build a book-sharing mobile app with user sign-in functionalities, adding items, marking as favourites, creating personalized lists, sharing book reviews, and more. The tool can be used as an easy development and marketing tool in order to create functional apps for personal and business use, for your client, as promotion tools or company internal applications, and more.\n\n\nSTEPS:\nIntro and accounts creation\nCreate your Google Sheet and app data structure\nPersonalize your Google Sheet with formulas and dynamic content\nCreate your app layout and main settings\nPersonalize a page layout in the app\nFurther personalization by user\nAdd sharing options\nDistribute, install and test the app\nSKILLS WE WILL LEARN:\nWeb development\nApp development\nMobile development\nMarketing\nGoogle sheets\nPREREQUISITE:\nA laptop\nAn internet connection\nNo special background needed\nNo coding skills needed",
      "target_audience": [
        "App developers",
        "Mobile developers",
        "Marketers",
        "Web developers"
      ]
    },
    {
      "title": "The Complete Android 15 Course [Part 2] - Jetpack Compose",
      "url": "https://www.udemy.com/course/android15-developer-course-part2/",
      "bio": "Master Android App Development with Jetpack Compose: From Beginner to Advanced MVVM Architecture",
      "objectives": [
        "This course is designed for aspiring Android developers who want to learn app development from the ground up",
        "Anyone looking to gain the skills to create advanced Android applications using Jetpack Compose and the MVVM architecture.",
        "Mastering Jetpack Compose by creating real-world projects",
        "Create Android Apps following the MVVM Architecture",
        "Build professional and eye-catching apps using composables",
        "Fetching data from online API using Retrofit",
        "Storing data in ROOM Database",
        "By the end of this course, you'll be able to build modern, responsive apps that stand out in the Google Play Store."
      ],
      "course_content": {
        "Introduction to Course - Grab your 70% Coupon Here": [
          "Course Promo - Get Your Coupon Here"
        ],
        "Jetpack Compose Overview": [
          "Introduction to Jetpack Compose",
          "Composable Functions",
          "SetContent( )",
          "@Preview Annotation",
          "Modifiers"
        ],
        "Composables": [
          "Text",
          "Layouts",
          "Paddings & Margins",
          "Coding Challenge",
          "Image Composable",
          "Button Composable",
          "Types of Buttons",
          "Text Fields"
        ],
        "State Handling": [
          "What's State?",
          "Without Using State",
          "Using Mutable State",
          "Recomposition",
          "Remember Keyword",
          "Delegation in Kotlin",
          "Quick Recap: [Recomposition - By - MutableState]",
          "Stateful Composition",
          "State Hoisting",
          "Stateful to Stateless"
        ],
        "More Composables": [
          "CheckBox",
          "Switch",
          "Radio Button",
          "Texts Besides Radio Button",
          "Progress Indicators",
          "Coding Challenge"
        ],
        "Layouts Deep Dive": [
          "Row Deep Dive",
          "Arrangement & Alignment",
          "Exploring Columns",
          "Exploring Box",
          "Exploring Surface",
          "The Scaffold",
          "Top App Bar",
          "Bottom App Bar",
          "Floating Action Button"
        ],
        "Lists": [
          "Scrolling Column",
          "Scrolling Row",
          "Lazy Column",
          "Custom List Layout",
          "Lazy Row",
          "Sticky Headers",
          "Handling Click Events on Items List",
          "Cards"
        ],
        "The Grocery App": [
          "App Promo - What's going to Build?",
          "Creating the Data Source",
          "Custom Sticky Header",
          "Custom Card Items",
          "Data Class",
          "Designing The Cards",
          "Changing Data Source"
        ],
        "Navigation in Compose": [
          "Adding Nav Library",
          "Designing the Screens",
          "Nav Controllers",
          "Nav Host",
          "Nav Destinations",
          "Passing Data Between Screens [Part 1]",
          "Passing Data Between Screens [Part 2]",
          "Passing Multiple Arguments",
          "Passing Optional Arguments"
        ],
        "Bottom Navigation": [
          "App Promo - What we're going to build?",
          "Creating UI Screens",
          "Nav Graph Builder",
          "Navigation Builder",
          "Creating Nav Routes",
          "Navigating Between Routes",
          "Nav Controller",
          "Defining Other Destinations",
          "Passing Arguments between Screens",
          "Nav Bottom Items",
          "Navigation Bar",
          "Passing Args in Nav Bar",
          "Synchronization between NavBar & Current Screen",
          "Optimizing the Code"
        ]
      },
      "requirements": [
        "No programming experience needed. You'll learn everything from scratch"
      ],
      "description": "Apply this coupon to get [70% OFF] :\ncouponCode = MASTERCODING10\n\n\nUnlock the full potential of Android app development with this comprehensive course, designed to take you from a complete beginner to an advanced developer proficient in creating high-quality applications using Jetpack Compose and the MVVM architecture.\nThis course offers a step-by-step learning journey that covers everything from the basics of Android programming to the intricacies of modern app design. You’ll start by understanding the core principles of Kotlin, the primary language for Android development, and quickly progress to building interactive user interfaces with Jetpack Compose, Google’s latest toolkit for developing native Android UIs.\nAs you advance through the course, you'll delve into the Model-View-ViewModel (MVVM) architecture, a powerful design pattern that enhances code maintainability and scalability. You'll learn how to structure your apps efficiently, manage data flow, and create dynamic user experiences that adhere to best practices.\nWhat You'll Learn:\nIntroduction to Android Development: Understand the Android ecosystem, set up your development environment, and learn the basics of Kotlin programming.\nJetpack Compose: Create stunning, responsive user interfaces with Jetpack Compose, including custom layouts, animations, and UI components.\nMVVM Architecture: Master the MVVM architecture to build scalable, maintainable applications that separate concerns and simplify data management.\nAdvanced Topics: Explore advanced concepts such as live data, Room Database, Retrofit, navigation components, and integrating APIs for real-world applications.\nProject-Based Learning: Apply your knowledge in hands-on projects, culminating in a fully functional Android application that showcases your skills.\nWho Should Enroll:\nAspiring Android developers looking to start their journey with the latest tools and practices.\nIntermediate developers aiming to transition to Jetpack Compose and MVVM architecture.\nDevelopers from other platforms interested in expanding their skillset to include Android.\nProfessionals seeking to upskill and stay competitive in the fast-evolving field of mobile development.\nBy the end of this course, you'll have the expertise to design, develop, and deploy advanced Android applications with confidence. Whether you're looking to build your own apps or pursue a career in Android development, this course provides the knowledge and hands-on experience you need to succeed.\nEnroll today and take the first step towards becoming a proficient Android developer!",
      "target_audience": [
        "Beginners: If you're new to Android development or programming in general, this course will guide you step-by-step, starting from the basics and gradually moving to more complex topics.",
        "Intermediate Developers: If you have some experience in Android development but want to transition to using Jetpack Compose or master the MVVM architecture, this course will help you refine your skills and take your apps to the next level.",
        "Developers Familiar with Other Platforms: If you’re a developer experienced in other programming languages or mobile platforms and want to learn Android development, this course provides a comprehensive introduction to the Android ecosystem using the latest tools and practices.",
        "Students and Hobbyists: If you're studying software development or have a passion for building mobile applications, this course will give you the practical skills needed to create modern Android apps.",
        "Professionals Looking to Upskill: If you’re a professional developer aiming to stay current with the latest Android development practices, particularly in Jetpack Compose and MVVM, this course will equip you with the knowledge to enhance your projects."
      ]
    },
    {
      "title": "Build an Online Learning Mobile App with FlutterFlow",
      "url": "https://www.udemy.com/course/build-an-online-learning-mobile-app-with-flutterflow/",
      "bio": "Understand how to build an online learning mobile app without coding using FlutterFlow, integrate payment and clone app",
      "objectives": [
        "Convert UiUx design from Figma into Pages in FlutterFlow using Widgets",
        "Use custom functions to implement difficult features in FlutterFlow",
        "Understand Firebase and how to use it for your FlutterFlow project",
        "Web Publishing"
      ],
      "course_content": {
        "Frontend Development (UiUx design on Figma to FlutterFlow)": [
          "Frontend Development - Auth Main",
          "Frontend Development - Dashboard - Part 1",
          "Frontend Development - Dashboard - Part 2",
          "Frontend Development - Author Profile",
          "Frontend Development - Profile",
          "Frontend development - Search Course",
          "Frontend development - Course Result",
          "Frontend development - Cart",
          "Frontend development - Course Details",
          "Frontend development - Course Playlist",
          "Backend development - Sign up and Sign in",
          "Backend development - Dashboard - Part 1",
          "Backend development - Course Details - Part 1",
          "Backend development - Course Details - Part 2 - Authors Profile Added",
          "Backend development - Cart",
          "Backend development - Stripe Payment",
          "Backend development - Orders",
          "Backend development - Course Playlist - Part 1",
          "Backend development - Course Playlist - Part 2",
          "Backend development - User Profile, Web Publishing, Logout",
          "Part 19 -Backend development - Firestore rules",
          "Part 20 - Backend development - Download APK, View Code, Clone App",
          "Part 21 - Backend development - Search Functionality",
          "Part 22 - Backend development - Clone App",
          "Part 23 - Backend development - Adding courses to your app using the CMS in FF"
        ]
      },
      "requirements": [
        "No programming skills need. No prior nocode skills needed. This course is beginner friendly."
      ],
      "description": "In this course, you will learn how to build an online learning mobile application without writing a single line of code.\nYou will learn the rudiments of building responsive mobile apps. The project we will be building is an online learning mobile app where a creator can sign up and publish various courses and students can buy and use the platform after making a purchase in the app.\n\nYou will be learning the following things in detail:\n- CRUD (Create - Read - Updated - Delete): This is the fundamental thing every aspiring software developer must learn and understand in order to become a good developer\n\n- Passing of data from one screen to another: You will learn how to use app state, page state, and component state to pass information from one screen to the other within your application\n\n- Web publishing: you will learn how to publish the mobile app to the web\n- Download APK: You will learn how to download the APK version of your completed app\n- View Code: You will learn how to view the code that makes your app run smoothly\n- Firestore Rules: You will learn how to adjust your firestore rules for improved security\n- You will learn how to convert UiUx designs on Figma into your frontend designs in FlutterFlow\n- You will learn how to integrate Stripe as a payment gateway\n- You will learn how to handle cart functionality/feature\n- You will learn how to create custom functions for various features in the app\n\nAlso, you will get the link to clone the completed app which you can use for your business.\n\nGo ahead and purchase the course.\nSee you in class.\nHappy Learning!",
      "target_audience": [
        "Beginner to Professional Mobile App Development without coding using FlutterFlow"
      ]
    },
    {
      "title": "Swift and iOS8 Apps in 31 Days: Build 16 iPhone apps",
      "url": "https://www.udemy.com/course/make-iphone-apps-with-swift-and-ios-8/",
      "bio": "Design UI and write code using Swift and Xcode 6. Make apps for iOS8 and iPhone 6 – sell your apps on the App Store!",
      "objectives": [
        "You will learn how to publish apps to the App Store",
        "How to sell and earn money from your apps",
        "Design and create new iPhone apps from scratch",
        "Create a real app for an app idea you have had",
        "Start a career as an iOS app developer"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience required",
        "A Mac or PC (MacinCloud.com)",
        "A paid iOS Developer account is not required – you can download Xcode 6 free",
        "You will learn everything you need to know to make your first app"
      ],
      "description": "From a former Apple employee and the incredibly successful Kickstarter project (475% funded) comes the Swift and iOS8 Apps in 31 Days: build 16 iPhone apps course.\nDo you want to boost your income as an app developer?\nOr do you want to change careers to increase your salary, flexibility, and freedom?\nThe Swift and iOS8 Apps in 31 Days course is the most comprehensive, cost effective, and career changing iPhone app development course that you’ll find online – or your money back.\nBONUS CONTENT - Learn from the creators of Square, Zombie Highway, and Fantastical. You’ll get insight into how successful app developers have been able to get millions of downloads and tons of money. Listen to the exclusive interview and Q&A that you can’t get anywhere else! The insight is worth $1000’s!\nIt is the complete course that you can use to start making professional iOS apps that will delight users, solve problems, and will make you money!\nIf you are looking for a course that will turn your ideas into apps that will start earning you cash, I personally guarantee this is the best course for you.\nFrom Beginner to iOS App Developer in 31 Days\nXcode and Interface Builder\nButtons, user input, and adaptive UI\nSwift: Apple’s new programming language (the future of iOS)\nVariables, tables, touch gestures, and Auto Layout\nNavigation, storage, and web content\nImages, animations, and App Store polish\nFacebook SDK and JSON\nWeb services + top 100 App Store app tracker\nApp Store submission\nOpen source code and SDK integration\nInterview with successful app developers (millions of downloads + $$$ = Day 12)\nThroughout 150 lectures and over 18 hours of content, you will start with the basics and build apps from the very beginning. You’ll learn tips and tricks to work effortlessly with Xcode and Swift.\nThroughout the course you will build upon knowledge into bigger apps using web, animations, and touch input. Together these technologies will allow you to create apps like many on the top 100 lists of the App Store.\nI promise that this course will not waste your time or hard earned money. You don’t need to buy books, expensive online courses, or bootcamps. Skip old YouTube videos that lack a structured curriculum.\nWith the Swift and iOS8 Apps in 31 Days course you will get everything you need, all with one convenient, easy to navigate online course. Plus, you will get fast, friendly, and responsive support by email, Twitter, and on the Udemy discussions.",
      "target_audience": [
        "Anyone who wants to make apps",
        "Anyone who wants to learn to code",
        "Designers and web programmers who want to make iOS apps",
        "Business owners who need to build an iPhone app",
        "Any underpaid employee who wants to switch careers",
        "People who want to earn side income from app development"
      ]
    },
    {
      "title": "2023-Flutter Complete with Dart,Firebase & built Weather App",
      "url": "https://www.udemy.com/course/flutter-complete-with-dart-firebase-built-weather-app/",
      "bio": "from Zero to Hero Flutter",
      "objectives": [
        "Dart basics",
        "Flutter basics",
        "Navigation",
        "BLoc",
        "BLoc State Management",
        "Firebase",
        "Real Weather App"
      ],
      "course_content": {
        "Getting Started": [
          "Install Flutter on Windows 10 and MacOS Catalina 10.15",
          "Source Code"
        ],
        "Dart basics": [
          "Variables, functions, string, list",
          "Class, object, constructor, method",
          "CRUD a list of objects",
          "Final & const, Map type"
        ],
        "Flutter basics": [
          "Widget, build method, StatelessWidget",
          "StatefulWidget, save TextField value to a state",
          "Widget lifecycle, observe background and foreground modes,WidgetsBindingObserver",
          "Add packages and format DateTime with intl",
          "Layout with SafeArea,Column, FlatButton, TextField",
          "Fetch state data to ListTile, using map function",
          "Add ListTile inside a Card",
          "Create separate widget and add ListView",
          "Customize AppBar and FloatingActionButton",
          "Customize ListView item with Column and Row",
          "Show and custom a Modal Bottom Sheet",
          "Implement actions in ModalBottomSheet",
          "Custom theme and fonts"
        ],
        "Navigation": [
          "Screens with Food App-Base data starting",
          "Screens with Food App-GridView and Grid Item",
          "Screens with Food App-Theme and Google Fonts style",
          "Screens with Food App-Navigate and send params using Constructor",
          "Food App-Send params using RouteNames, setup 1-N data.key",
          "Food App-Display ListItem with FadeImage, Positioned, Card",
          "Food App-Show detail food, ingredient list, using ListTile, ListView"
        ],
        "BLoc": [
          "State management in Flutter with CounterApp-Part 1",
          "State management in Flutter with CounterApp-Part 2",
          "State management in Flutter with CounterApp-Part 3",
          "State management in Flutter with CounterApp-Part 4",
          "State management in Flutter with InfiniteListApp-Part 1",
          "State management in Flutter with InfiniteListApp-Part 2",
          "State management in Flutter with InfiniteListApp-Part 3",
          "State management in Flutter with InfiniteListApp-Part 4"
        ],
        "BLoc State Management": [
          "Firebase Login and Register Part 1",
          "Firebase Login and Register Part 2",
          "Firebase Login and Register Part 3",
          "Firebase Login and Register Part 4",
          "Firebase Login and Register Part 5",
          "Firebase Login and Register Part 6",
          "Firebase Login and Register Part 7",
          "Firebase Login and Register Part 8",
          "Firebase Login and Register Part 9"
        ],
        "Complete App": [
          "Write complete Weather App using Flutter, Bloc, State management, API Calling"
        ]
      },
      "requirements": [
        "A Computer",
        "Although you can build iOS apps on a Windows computer with Flutter, if you want to test it, you will need a Mac"
      ],
      "description": "The Flutter with Dart Mastery course is a comprehensive online learning program designed to provide you with the skills and knowledge needed to build high-quality, cross-platform mobile applications using Flutter and Dart. Whether you're a beginner or an experienced developer, this course will guide you through the process of becoming a proficient Flutter developer.\nFlutter, developed by Google, has gained tremendous popularity for its ability to create beautiful and fast mobile applications that run natively on both iOS and Android platforms. Dart, the programming language used with Flutter, provides a powerful and expressive foundation for building robust and reactive applications.\nThe course curriculum covers a wide range of topics, including Flutter widgets, layout design, user input handling, navigation, state management, API integration, animations, and more. You'll learn how to leverage the power of Flutter's rich widget library and Dart's concise syntax to create visually stunning and performant mobile apps.\nThroughout the course, you'll work on hands-on projects that replicate real-world app development scenarios. These projects will enable you to apply your knowledge and gain practical experience in building different types of mobile applications, such as social media apps, e-commerce apps, and productivity apps.\nThe course is taught by experienced instructors who have a deep understanding of Flutter and Dart development. They provide clear explanations, practical examples, and best practices to help you develop efficient and scalable code. You'll also learn about Flutter's hot-reload feature, debugging techniques, and performance optimization strategies.\nBy the end of the course, you'll have a solid foundation in Flutter and Dart development and be able to build cross-platform mobile apps with ease. You'll understand Flutter's reactive programming model, know how to create stunning user interfaces, manage application state effectively, implement seamless navigation, and deploy apps to both the App Store and Google Play Store.\nEnrolling in the Flutter with Dart Mastery course will open doors to exciting career opportunities in mobile app development. Flutter has gained immense popularity among developers, and companies are actively seeking skilled Flutter developers, making this course a valuable investment in your professional growth.\nJoin the Flutter with Dart Mastery course today and unlock your potential to create visually appealing, high-performing, and cross-platform mobile applications using Flutter and Dart!",
      "target_audience": [
        "If you have never programmed before, then take this course to learn Dart and build iOS and Android apps.",
        "If you know how to code, but are new to mobile development, then take this course to build apps with just one codebase"
      ]
    },
    {
      "title": "Hilt Dependency Injection in Android with Kotlin",
      "url": "https://www.udemy.com/course/hiltandroid/",
      "bio": "Hilt with Kotlin in theory and practice in an Android application",
      "objectives": [
        "Hilt",
        "Unit Testing",
        "Dependency Injection",
        "Modules",
        "Components",
        "Field Injection",
        "Constructor injection",
        "Method injection",
        "Qualifiers",
        "ViewModel injection"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media",
          "What is dependency injection",
          "Dagger basics"
        ],
        "Basics": [
          "Section overview",
          "Create project and setup hilt",
          "Application class",
          "AndroidEntryPoint",
          "Constructor injection",
          "Field injection",
          "Method injection"
        ],
        "Modules": [
          "Section overview",
          "Code setup",
          "Modules",
          "Inject interfaces with @Binds",
          "Inject instances with @Provides",
          "Qualifiers",
          "Providing context",
          "Installing in multiple components"
        ],
        "Components": [
          "Section overview",
          "Components and lifetimes",
          "Scopes",
          "Hierarchy"
        ],
        "Others": [
          "ViewModel",
          "Unit testing"
        ],
        "Conclusion": [
          "Conclusion",
          "Thank you"
        ]
      },
      "requirements": [
        "Android development knowledge",
        "Kotlin knowledge"
      ],
      "description": "Dependency Injection is now an indispensable component of Android development. All well built, large projects use it to make development easier and more practical.\nHilt is the next generation dependency injection framework from Google. It's built on top of Dagger and simplifies DI greatly. Android development has been steadily relied upon Dependency Injection, and Hilt is now the fastest and simplest way to implement it in your projects.\nThis course will\ntake you from a complete beginner in the technology\nexplain in detail the theoretical aspects of Hilt injection\nexhaustively go through all the components that make Hilt such a successful library\nimplement it in a practical application\nAfter this course you will have the knowledge and experience to use Hilt in all your app development projects, and will allow your apps to grow and expand seamlessly.\nWe will learn about:\nModules\nConstructor injection\nField injection\nMethod injection\nComponents\nQualifiers\nStandard qualifiers\nViewModel injection\nUnit testing\nWe will build everything in Kotlin.\nWe cover a lot of ground in this course, and we will implement the concepts practically so that you get not only theoretical knowledge but practical experience as well. Whether you start with zero experience in dependency injection or you already know a little bit about it through dagger, this course will show you how to use it with Hilt.\nSign up today, and let's learn how to use Hilt to build a modern Android Application.",
      "target_audience": [
        "beginner developers",
        "intermediate developers"
      ]
    },
    {
      "title": "SwiftUI & Node.JS FullStack - Build Twitter - IOS 17",
      "url": "https://www.udemy.com/course/swiftui-fullstack-twitter-clone/",
      "bio": "The Complete iOS 17 App Development Course with SwiftUI and Node.JS API Development",
      "objectives": [
        "Develop FullStack iOS 16 iPhone and iPad applications with beautiful layout and design",
        "Build a complete Twitter Clone from scratch",
        "Learn Swift 5 programming language to develop native applications",
        "The Complete Fullstack iOS App Development Course with SwiftUI 4",
        "Learn how to fetch data from MongoDB servers using Web APIs",
        "Learn how to create custom APIs using Nodejs to fetch and push data",
        "Xcode 14 editor tips to use it like a pro",
        "Authentication using NodeJS and JSONWebToken library",
        "Build a complete server-side application using NodeJS and JavaScript",
        "Beautiful in-app interactions and animations with the ease of SwiftUI",
        "Deploy your Node apps to production",
        "Work with one of the most in-demand web development programming languages",
        "Understand the NodeJS ecosystem and build REST APIs",
        "Build a portfolio to land your tech job"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome to the Course!"
        ],
        "Setup for the Course": [
          "Downloading Node.js",
          "Downloading Robo3T",
          "Dowloading MongoDB"
        ],
        "Fullstack Notes App - API (Backend)": [
          "Notes API #1 - Intro to Express",
          "Notes API #2 - Mongoose",
          "Notes API #3 - Note Model and POST Request",
          "Notes API #4 - GET Request",
          "Notes API #5 - UPDATE and DELETE Requests"
        ],
        "Fullstack Notes App - App (Frontend)": [
          "Notes App #1 - User Interface (UI)",
          "Notes App #2 - Running the API",
          "Notes App #3 - GET Request in the app",
          "Notes App #4- Populating the UI with Note Model",
          "Notes App #5 - Create Notes with POST Requests",
          "Notes App #6 - DELETE Notes",
          "Notes App #7 - UPDATE Notes"
        ],
        "Fullstack Twitter Clone - Frontend": [
          "Twitter UI #1 - Basic TabView",
          "Twitter UI #2 - Advanced TabView",
          "Twitter UI #3 - CreateTweetView",
          "Twitter UI #4 - FeedView",
          "Twitter UI #5 - SearchView",
          "Twitter UI #6 - SearchView 2",
          "Twitter UI #7 - NotificationsView",
          "Twitter UI #8 - MessagesView",
          "Twitter UI #9 - TopBar",
          "Twitter UI #10 - SlideMenu",
          "Twitter UI #11 - MainView",
          "Twitter UI #12 - Profile Banner",
          "Twitter UI #13 - Profile Bio",
          "Twitter UI #14 - Profile TabButtons",
          "Twitter UI #15 - UserProfile Feed",
          "Twitter UI #16 - Auth | WelcomeView",
          "Twitter UI #17 - Auth | RegisterView",
          "Twitter UI #18 - Auth | LoginView",
          "Twitter UI #19 - Auth | Finalizing UI"
        ],
        "Fullstack Twitter Clone - API": [
          "Twitter API Welcome Video",
          "Twitter API #1 - NPM and dependencies",
          "Twitter API #2 - Express Server and Nodemon",
          "Twitter API #3 - Mongoose and MongoDB",
          "Twitter API #4 - User Model",
          "Twitter API #5 - User Model and Validator",
          "Twitter API #6 - Create User",
          "Twitter API #7 - Fetching Users",
          "Twitter API #8 - toJSON",
          "Twitter API #9 - Password Hashing with Bcrypt",
          "Twitter API #10 - User and Tweet Relationship",
          "Twitter API #11 - Login",
          "Twitter API #12 - Tokens",
          "Twitter API #13 - Delete User",
          "Twitter API #14 - Fetching a Specific User",
          "Twitter API #15 - Profile Image Upload",
          "Twitter API #16 - Auth Middleware",
          "Twitter API #17 - Presenting User Profile Images",
          "Twitter API #18 - Following",
          "Twitter API #19 - Unfollowing",
          "Twitter API #20 - Update User",
          "Twitter API #21 - Tweeting",
          "Twitter API #22 - Fetch All Tweets",
          "Twitter API #23 - Tweet Image Upload",
          "Twitter API #24 - Tweet Image Visualize",
          "Twitter API #25 - Like Tweet",
          "Twitter API #26 - Unlike Tweet",
          "Twitter API #27 - Tweet Image Check",
          "Twitter API #28 - Fetch Specific Tweets",
          "Twitter API #29 - Notification Model",
          "Twitter API #30 - Notification Routers"
        ],
        "Fullstack Twitter Clone - Backend": [
          "Twitter Backend #1 - Server and User Model",
          "Twitter Backend #2 - Register User",
          "Twitter Backend #3 - Register Services",
          "Twitter Backend #4 - Login Services",
          "Twitter Backend #5 - Fetch User Function",
          "Twitter Backend #6 - EnvironmentObject and Static AuthViewModel",
          "Twitter Backend #7 - LogOut",
          "Twitter Backend #8 - Login Bug Fixes",
          "Twitter Backend #9 - CreateTweet",
          "Twitter Backend #10 - ImagePicker",
          "Twitter Backend #11 - Using ImagePicker in Create Tweet",
          "Twitter Backend #12 - ImageUploader",
          "Twitter Backend #13 - FeedViewModel",
          "Twitter Backend #14 - TweetCellViewModel",
          "Twitter Backend #15 - Profile Customization",
          "Twitter Backend #16 - EditProfileView",
          "Twitter Backend #17 - EditProfileView 2",
          "Twitter Backend #18 - Connecting EditProfileView and UserProfile",
          "Twitter Backend #19 - Save EditProfileView",
          "Twitter Backend #20 - Update EditProfileView",
          "Twitter Backend #21 - Update Serverside EditProfileView",
          "Twitter Backend #22 - Upload Profile Image",
          "Twitter Backend #23 - Display Profile Image",
          "Twitter Backend #24 - Fixing Profile User Data",
          "Twitter Backend #25 - Fixing Profile Pictures",
          "Twitter Backend #26 - Edit Profile and Follow Buttons",
          "Twitter Backend #27 - Follow and Unfollow Serverside",
          "Twitter Backend #28 - Follow and Unfollow UI",
          "Twitter Backend #29 - Like and Unlike Tweet Serverside",
          "Twitter Backend #30 - Like and Unlike Tweet UI",
          "Twitter Backend #31 - Refreshable ScrollView",
          "Twitter Backend #32 - SearchBar",
          "Twitter Backend #33 - SearchViewCell",
          "Twitter Backend #34 - User Search Filter",
          "Twitter Backend #35 - Creating Accounts",
          "Twitter Backend #36 - Notification Sender",
          "Twitter Backend #37 - Notification Functions",
          "Twitter Backend #38 - Notification Fetch",
          "Twitter Backend #39 - Notification Display"
        ],
        "Swift & Programming Basics": [
          "Variables & Types",
          "Functions",
          "Classes & Structs",
          "Basic Operators and If Statements",
          "Switch Statement",
          "Loops"
        ]
      },
      "requirements": [
        "No experience needed. We will start from the basics and advance to building actual cool software products",
        "A mac or a mac emulator"
      ],
      "description": "SWIFTUI & IOS 17 FULLSTACK COURSE USING NODE.JS\nPlease read this important notice before you enroll in this course.\nIn this course, we will build an identical SwiftUI Twitter Clone and its REST API using Node.js. In addition, we will start with the Notes app to cover some of the key concepts at a more basic level to understand the base of the subjects.\n\n\nWhat kind of advanced topics will be covered?\n\n\nAPP - SwiftUI\n\n\nSwift Programming Language,\nSwiftUI Framework foundation,\nSwift Concurrency,\nCore Data with SwiftUI,\nMVVM Architecture - Design Pattern,\nExternal REST APIs integration,\nData Fetching and JSON Serialization\nSwiftUI Animation,\nSwift Package Manager (SPM),\nVersion control with Git,\nApp design, UI design, UX design\nand many more…\n\n\nREST API - Node.js\n\n\nREST API Development using Node.js\nWebserver using Express.js\nImage Processing using Sharp.js\nAuthentication using JSONWebToken (JWT)\nand many more…\n\n\n1. In 2022, “The best way to build an app is with Swift and SwiftUI.” according to Apple as they have stated at WWDC 2022 Developer Conference.\nIn this course, we cover many areas and the powerful side of SwiftUI such as:\nSwiftUI Menu Items and Stacks\nResizable Bottom Sheet\nPull-to-Refresh View\nIn-App API\nLayout Protocol\nHTTP Requests\nMVVM Architecture\nNavigationControllers\nSlide Menus\n\n\n2. Project-based Learning proves to be the most effective method for internalizing new concepts. During this course, you will learn by doing.\n\n\n3. Every project is compatible with the latest iOS, so if you run the finished project on the latest operating system, then Xcode will compile it.\nI would also highlight that Apple did not deprecate previous SwiftUI versions. That said, the latest iteration of SwiftUI 4 is nothing more than some new features and exciting additions on top of the base of SwiftUI 1, SwiftUI 2, and SwiftUI 3 releases.\n\n\n4. We are building applications from scratch with resources made by professionals.\nCreating the Bestseller SwiftUI Course with high-quality production value takes a lot of time.\nThis SwiftUI course has 20+ hours long video content in addition to the source code that will be provided and can be utilized in various projects.\n\n\n\n\nWHY THIS COURSE?\n\n\nWhy should you take this course?\nThis complete iOS application development course is designed to teach you how to become an advanced multiplatform app developer using Apple's native user interface framework: SwiftUI.\nThis class takes learning programming concepts through a project-based approach. By taking this class, you will improve your app design and development skills while creating many hands-on applications.\n\n\nLearn mobile app development with hands-on tutorials!\nMaster app design and development with the SwiftUI framework and create remarkable applications. This SwiftUI Masterclass gives you a practical and engaging activity - with the right learning material and teacher.\n\n\nWe don’t teach you ugly CRUD Applications, instead, we teach the methods and systems required for a world-renowned app such as Twitter.\nDo you want to create outstanding apps with SwiftUI? Then this course is for you!\n\n\nLearning about REST APIs will bring you to the top of the competition pyramid amongst IOS Developers.\nNot many IOS Developers are familiar with the server side of the operations. This knowledge will bring you among the top-paid IOS Developers and will make you independent of other people when you want to build your own apps as you can build the whole app on your own.\n\n\nWould you like to share your apps with your friends, co-workers, and even family members?\nIf yes, then enroll in the best SwiftUI course and create 1st class apps coding in Swift programming language!\n\n\nMoreover, are you eager to build up your professional portfolio and show up in your next job interview with confidence?\nThe employers will incredibly appreciate the amount of work you have put into creating such a high-quality app as well as your ability to work with REST APIs.\n\n\nLearn faster with the up-to-date SwiftUI code examples. You are in good hands.\nDo not waste time and money getting lost and bored looking at endless and outdated tutorials and code examples on the Internet!\nYou will grasp Apple's latest SwiftUI framework quickly and easily by following the instructor line by line.\n\n\nWelcome to the world's Best Seller iOS 16 and 15 Development Course with SwiftUI\nThis up-to-date SwiftUI course contains step-by-step instructions to teach you how to build several fully-fledged iOS applications programming in the Swift 5 language.\n\n\nWhat are you going to learn about?\nAs a student in this masterclass, you will learn all of the concepts necessary for developing a fully functional social media application such as Twitter with the latest and greatest technologies that Apple and many other top tech firms have recently released, such as:\n\n\nSwiftUI is Apple's native declarative user interface design framework,\nSwift programming language,\nXcode development tool (code editor, test environment, live preview, simulators, etc),\nNode.JS is the Framework for Developing APIs,\nJavaScript is the language for developing Web Applications and Servers,\nMongoDB is a database that is scalable and works perfectly!\nIf you're someone who wants to get a job as an iOS or macOS developer then this course is perfect for building up your professional portfolio to show off at your next interview.\n\n\nOn the other hand, if you're somebody who wants to build your very own apps for your startup, you will have a wide skill set that will let you build any application you want with ease.\n\n\nYou should know that this course assumes absolutely no programming experience. So if you're a complete beginner then I'll be there for you and guide you in this program.\n\n\nIf you're an experienced developer, you will find many new usages as well as the development and utilization of REST APIs using Node.js\n\n\nBy the end of the course, you'll know how to develop, design, and publish your next app in the Apple App Store.\n\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor-quality videos on YouTube or instructors that teach you nothing but basic concepts that have no real-world applications. Or teachers who have no real-world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it.\n\n\nDon't waste your money\nInside this course, you will have access to the content of $8000 worth of Bootcamp material. You can choose to learn it at your own pace at home or spend thousands on a Bootcamp.\n\n\n\n\nSo what are you waiting for? Join the SwiftUI FullStack Twitter course now!",
      "target_audience": [
        "Beginner and/or Intermediate IOS Developers",
        "All levels of UIKit Developers who want to learn SwiftUI",
        "Mobile App Developers who want to learn Backend development with Node JS",
        "People who want to build cool apps from scratch"
      ]
    },
    {
      "title": "The Comprehensive Android App Development Masterclass",
      "url": "https://www.udemy.com/course/android-development-java-android-studio-masterclass/",
      "bio": "Master Android App Development: ROOM Database, ML Kit Face Recognition, Firestore, Firebase, Maps and Android Studio IDE",
      "objectives": [
        "Master Java Programming Language",
        "Build Dynamic Android Apps From Scratch",
        "Master Android Development and MVC Pattern when Building Android Apps",
        "Master Modern Android Development with DataBinding",
        "Build Several Android Apps with the latest Android API's: ROOM, Firebase, Firestore and ML Kit Face Recognition",
        "Learn Android Development Best Practices",
        "Learn Android User Interface Design",
        "Master the Android Studio IDE and Become More Productive",
        "Learn How to Publish Android Apps to Google Play"
      ],
      "course_content": {
        "Welcome": [
          "Please Watch This: Learning Path"
        ],
        "Install Android Studio on Windows Machine": [
          "[WINDOWS USERS ONLY] Download Android Studio for Windows",
          "[OPTIONAL - WINDOWS USERS ONLY]VTX Emulator Issues Fixes on Windows",
          "Fix VTX Issues on BIOS - Resources"
        ],
        "Install Android Studio on MAC Machine": [
          "[MAC USERS ONLY] Download and Install Android Studio on MAC"
        ],
        "Download Course Source Code": [
          "Download Course Code"
        ],
        "Android Development - First Steps": [
          "[OPTIONAL] Changing Android Studio Theme - So it looks like mine!",
          "Build an App - Build your First Android App - ShowMyName",
          "Build an App - Build your First Android App - ShowMyName - User Interface",
          "Build an App - Build your First Android App - ShowMyName - Adding EditText",
          "Source Code"
        ],
        "Deep Dive into Java Programming Language": [
          "What We'll Cover in This Section",
          "Create and Run a Java Program",
          "Java Code Structure",
          "Java Variables And Concatenation",
          "Java Integer Variable Type",
          "Java Long and Double Variable Types",
          "Java Byte and Char Variable Types",
          "Java Boolean Variable Type",
          "Java Operators",
          "The Remainder",
          "Relational Operators",
          "Logical and Relational Operators",
          "The AND Logical Operator",
          "The OR Logical Operator",
          "The NOT Logical Operator",
          "The for-loop",
          "The else-if Statement",
          "The Switch Statement",
          "Switch Statement Code",
          "Quick Exercise - Switch Statements",
          "The Do While Loop",
          "Exercise Source Code - Solution",
          "Methods and String Parameters",
          "Function Parameters - Add Method",
          "Return Types in Methods - Double Return Type",
          "CODING EXERCISE: Game Character - CodeRunner -Relational Operators",
          "CODING EXERCISE SOLUTION",
          "String Return Function Type",
          "CODING EXERCISE: Calculate Area of a Rectangle",
          "CODING EXERCISE SOLUTION"
        ],
        "CHALLENGE: Dividing and Multiplying Integers": [
          "CHALLENGE SOLUTION: Dividing and Multiplying Integers",
          "Source Code"
        ],
        "Introduction to Object Oriented Programming in Java": [
          "Introduction to Classes and OOP - Object Oriented Programming",
          "Creating your First Java Class",
          "CODING EXERCISE: Create a Rectangle Class",
          "CODING EXERCISE SOLUTION",
          "Adding the Description Method to the Class",
          "CODING EXERCISE: Rectangle Area",
          "CODING EXERCISE SOLUTION",
          "Constructors in Java",
          "Constructors and Inheritance",
          "Source code - Constructors and Inheritance in Java",
          "CODING EXERCISE: Rectangle Constructor",
          "CODING EXERCISE SOLUTION",
          "Access Modifier and Getters and Setters",
          "CODING EXERCISE: Adding Access Modifiers & Getters and Setters",
          "CODING EXERCISE SOLUTION",
          "Overloading Constructors",
          "Java Coding Convention Guide",
          "The Java Class Library",
          "Source Code"
        ],
        "Java Inheritance": [
          "Introduction to Java Inheritance - What is it?",
          "Creating a Java Inheritance Structure",
          "CODING EXERCISE: Create a Box Subclass of Rectangle Class",
          "CODING EXERCISE SOLUTION",
          "Overriding Super Class Methods",
          "CODING EXERCISE: Override the Area Method",
          "CODING EXERCISE SOLUTION",
          "Understanding toString Override Method",
          "String is an Object, After all!",
          "Source Code"
        ]
      },
      "requirements": [
        "Basic programming experience in general is helpful but not required. The course covers everything you'll need to build Android Apps",
        "Be Willing to Work and Learn"
      ],
      "description": "Android App Development will open many doors for you since AAndroidis is the most popular operating system in the world.\nYou may want to learn Android development for many reasons- maybe you have many app ideas but don't know where to start.  Or perhaps it's time for a career change, and Android Development picked your interest?  Or maybe you want to be more valuable at your company... whatever the reason, you're are on the right path by being here!\n\n\nThis is a hands-on course, meaning you will build several android apps as you learn!\nThe course is structured in such a way to improve your knowledge retention - by having a lot of hands-on projects. In each section of the course, you will be practicing and building something meaningful, which will further your understanding of Android App Development. Of course, there are quizzes and challenges as well.\n\n\n\n\nAll you need is an open mind, willingness to work (and some patience, too).\nYou'll learn the Java programming language fundaments such as Java variables, variable types, relational and logical operators, loops, and methods.  Once the language basics are covered, you'll then move on to learning Java Object-Oriented Programming concepts - classes, Java Inheritance, and how to create objects from Java classes.\nNext, you'll learn the most fundamental Java Data Structures, which help programmers store and manipulate programs' data efficiently and quickly (Arrays and ArrayLists).\nSuppose you are familiar with the Java programming language. In that case, you can always fast-forward to the Android Development part of the course, which introduces the fool Bootcamp for Android App Development.  In the Android App Development part of the course, you'll focus on building an Android app from the get-go. Thus, you'll be learning Android concepts such as Android Activities, Android Basic Project Structure, Android Layouts, and XML by actually doing the work, building android apps from scratch!\nThe goal is to take you through the whole process of learning Android development, from zero to hero, from building simple Android apps to apps that connect to Firebase (remote realtime-database). These apps recognize faces on a photo (MLKit Face Recognition) to learn how to build Android map-driven applications!  Along the way, you'll learn how to store data in android(SQLite and Sharedpreferences).  You'll learn how to use the fundamental design pattern called MVC - Model-View-Controller to structure your Android projects. You'll learn how to use the most modern Android libraries and APIs like Android ROOM - an alternative way to save Android data! Finally, you'll master how to use Android Fragments to make your apps more versatile and run on different device sizes (phone, tablet).\nAdditionally, you'll learn how to play sound (Android SoundPool, Android ExoPlayer) and use Android native classes to draw shapes on the screen - by using the Android Canvas class and so much more!\nAs you can see, this is the course you'll need to get started in Android Development with Java - this is your Android Development Bootcamp course that will take you from zero to hero!\n\n\n\n\nStart learning in this ultimate Android Development tutorial, where you'll go deep into Android development tools, such as Android Studio and Android App Development.\nEnroll today and start learning.\nSee you inside.\n\n\nPaulo",
      "target_audience": [
        "Beginner Android Developers",
        "Web Developers who want to Learn Android and Java",
        "Curious students who Want to Build their own Android Apps",
        "Project Managers who Want to Learn How Android Apps are Built",
        "Anyone who wants to Learn Java and Android Development"
      ]
    },
    {
      "title": "Building Augmented Reality Apps in RealityKit & ARKit",
      "url": "https://www.udemy.com/course/building-augmented-reality-apps-in-realitykit-arkit/",
      "bio": "Covers: Gestures, Physics, Location Anchors, Occlusion, Reality composer, Persistence, Image Tracking and more",
      "objectives": [
        "Building augmented reality applications using RealityKit",
        "Building augmented reality applications using ARKit",
        "Integration between RealityKit and SwiftUI",
        "Creating scenes using Reality Composer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "Getting Started": [
          "Understanding the Concepts",
          "Resources",
          "Creating Your First AR Project",
          "Resource: Wireless Debugging",
          "Adding Your First Model Entity",
          "Adding Multiple Model Entities",
          "Adding Text"
        ],
        "Gestures": [
          "Adding Tap Gestures to Virtual Objects",
          "Ray Casting and Adding Virtual Objects Using ARAnchor",
          "Ray Casting and Adding Object Using Anchor Entity",
          "Scale, Rotate and Moving Virtual Objects"
        ],
        "Importing Models into your World": [
          "Importing Models Using USDZ Files",
          "Asynchronously Importing Models Using USDZ Files",
          "Loading Multiple Models",
          "Loading Entities with Animations"
        ],
        "Occlusion, Unlit and Video Materials": [
          "What is Occlusion?",
          "Resource: Occlusion Example YouTube Video",
          "Implementing Occlusion in RealityKit",
          "Video Materials",
          "Unlit Material",
          "Image Texture",
          "Loading Multiple Image Textures Asynchronously"
        ],
        "Physics": [
          "Hello Gravity",
          "Collision Detection Example 1",
          "Collision Detection Example 2",
          "Collision Detection and Filters",
          "Collision Detection and Physics",
          "Implementing MovableEntity"
        ],
        "AR Coaching": [
          "What is AR Coaching?",
          "Implementing AR Coaching"
        ],
        "Measurement App": [
          "What we will be building?",
          "Setting Up Initial Project",
          "Adding Virtual Points to the Real World"
        ],
        "Image Tracking": [
          "What is Image Detection?",
          "Resource: Image Detection AR Watch",
          "Implementing Image Detection",
          "Image Detection and Video Material"
        ],
        "Light": [
          "Point Light",
          "Directional Light",
          "Spotlight"
        ]
      },
      "requirements": [
        "Swift programming knowledge is required",
        "SwiftUI knowledge is recommended but not required",
        "Xcode and macOS",
        "Physical device to run augmented reality apps"
      ],
      "description": "Augmented Reality has proven to be the next big innovation in technology. Google, Apple, Facebook, Microsoft and many other companies are investing a lot of time and money in building AR wearable devices. Augmented Reality apps will become mainstream in the near future and it is important for us developers to start learning how to build AR apps. In this course, you will learn how to build AR apps using Apple’s RealityKit framework.\n\n\nLet’s check out the contents of the course:\n\n\nGetting started\nGestures\nImporting models into your world\nOcclusion, unlit and video materials\nPhysics\nAR coaching\nMeasurement app\nImage tracking\nLight\nReality composer\nFace anchors and object anchors\nFurniture store app\nPersistence\nLocation based anchors\n\n\nAll lectures are accompanied with downloadable resource files.\n\n\nWho is this course for?\n\n\nDevelopers who are interested in learning how to build AR apps using RealityKit\nDevelopers who wants to take their skills to the next level\nDevelopers who want to build apps for rumored Apple glasses.\n\n\nI have been teaching on Udemy since 2016 and have more than 65K students. I have over 20+ courses on Udemy and I take pride in answering all student questions. Take a look at some of the reviews from my students.\n\n\nIt was one of the best courses you've ever taken from the instructor. I learned a lot. Some major issues have been superficially covered. I learned a lot from my education, I definitely recommend it.\n\n\nSuper as always ... as all other courses!\n\n\nThis course is definitely a must, the first thing a developer should see before typing “Hello World!”. 100% recommended. It's my second programming course with Mohammad Azam, he's an excellent teacher, he explains clearly, his voice and diction is perfect for learning, and while I'm thinking about my doubts he answers them almost immediately in the videos, it's as if he will read my mind, when in reality it is because his methodology is perfect.\n\n\nI know you are excited about diving into RealityKit. Let’s go and get started.",
      "target_audience": [
        "Developers who are interested in learning how to build AR apps using RealityKit",
        "Developers who wants to take their skills to the next level",
        "Developers who want to build apps for rumored Apple glasses."
      ]
    },
    {
      "title": "Become A Mobile App Developer (iOS / Android / Windows)",
      "url": "https://www.udemy.com/course/become-a-mobile-app-developer-ios-android-windows/",
      "bio": "Build Mobile Apps Step by Step For iOS,Android,Windows from scratch",
      "objectives": [
        "Setting up development environment for Android",
        "Setting up development environment for iOS",
        "Setting up development environment for Windows",
        "Create an Android App",
        "Deploy and Android App to a physical device",
        "Create an iOS App",
        "Create a cross platform App",
        "Swift Programming fundamentals",
        "Java Programming fundamentals",
        "XML Programming fundamentals",
        "C# Programming fundamentals"
      ],
      "course_content": {
        "iOS Mobile App Development": [
          "Introduction",
          "What is iOS",
          "What You need",
          "Updating macOS",
          "Download and install Xcode",
          "Create a test app",
          "Exploring Xcode Interface",
          "Developing our test app",
          "iOS MVC Design Pattern"
        ],
        "ios SWIFT Fundamentals": [
          "What is Swift",
          "Xcode playground overview",
          "Using comments",
          "Print statements",
          "Operators : Part 1",
          "Operators : Part 2",
          "Variables and Data Types : Part 1",
          "Variables and Data Types : Part 2",
          "Naming Data",
          "Arrays",
          "Functions",
          "Creating a function",
          "Creating a function with a parameter",
          "Conditional statements"
        ],
        "Develop a mobile app with iOS": [
          "What we will create",
          "Creating a new Xcode project",
          "Design your app: Part 1",
          "Design your app: Part 2",
          "Link design to code",
          "Create variables",
          "Add random number generator",
          "Create an array and test app"
        ],
        "Android Mobile App Development": [
          "What is Android",
          "What is Android Studio",
          "Android studio installation requirements",
          "Downloading and Installing Android Studio on Windows",
          "Downloading and Installing Android Studio on Mac",
          "Creating a test android app: part 1",
          "Creating a test android app: part 2",
          "Creating a test android app: part 3"
        ],
        "Exploring Android Studio": [
          "Android Project Structure",
          "Opening and closing Android Projects",
          "Component tree",
          "User interface",
          "Gradle build system",
          "The palette",
          "Constraint layout",
          "Modifying the test app",
          "Testing app on multiple devices"
        ],
        "Develop an Android Mobile App": [
          "What we will create",
          "Creating a new Android project",
          "Exploring key files",
          "Creating a variable to hold scores",
          "Testing what we've developed so far",
          "Modifying the textview widget",
          "Adding a button widget",
          "Adding java code",
          "Creating a random generator",
          "Creating a single dice",
          "Creating three dice with arrayList",
          "Adding dice image: part 1",
          "Adding dice image: part 2",
          "Accessing image views in java code",
          "Making images dynamic : part 1",
          "Making images dynamic : part 2",
          "Adding scoring display",
          "Adding scoring logic",
          "Using material design button",
          "Chaining dice image: part 1",
          "Chaining dice image: part 2",
          "Adding some style",
          "adding an icon",
          "Deploying app on a physical device"
        ],
        "Java Fundamentals": [
          "What is Java",
          "Installing JDK and Netbeans Bundle",
          "Create a basic java program",
          "Basic structure of a Java Program",
          "What is a Java Package",
          "Primitive data types",
          "Basic Operators",
          "Variables",
          "Arrays",
          "Classes",
          "Running Java Apps outside IDE"
        ],
        "Basic XML": [
          "What is XML",
          "Text Editors",
          "Installing Visual Studio Code",
          "Installing Atom",
          "XML Syntax",
          "XML Attributes",
          "XML Naming",
          "XML Document Structure",
          "XML Tags",
          "XML Namespace",
          "XML Elements"
        ],
        "Windows Mobile App Development": [
          "What is Xamarin",
          "Ways to build native apps with Xamarin",
          "What is Visual Studio",
          "Xamarin Forms",
          "Minimum installation requirements for visual studio",
          "Native vs Web Apps",
          "Visual studio Installation on Windows",
          "Visual studio Installation on Mac",
          "Visual studio workloads"
        ],
        "Creating a test cross-platform windows app": [
          "Creating a test cross-platform app",
          "Testing the test app on Android Simulator",
          "Testing the test app on iOS Simulator",
          "Modifying the test app",
          "Overview of Visual Studio and Xamarin"
        ]
      },
      "requirements": [
        "Computer and Mac Required",
        "Internet Access Required"
      ],
      "description": "Mobile app development can be both profitable and fun. In this beginners introductory course you will learn to create and deploy an app to a physical device. You learn how to setup development environments for iOS, Android and windows app development.\nWe will be using the MVC ( Model View Controller) design pattern which is commonly used in IOS app development and  the Xcode integrated development environment to develop an app to run on an apple device. Xcode comes with virtual devices that you can use to test your app. The swift programming language is used to develop iOS mobile apps. The course covers some basic swift programming fundamentals.\nAndroid powers the majority of smartphones on the planet and a growing number of devices, from Android Wear on your wrist to Android Auto for your car. This course is designed to teach anyone how to make a new Android app from scratch.Learn all the basics of the platform and all the skills an Android app developer needs to be successful.  Android apps are developed using the Java programming language. The course covers some basic fundamentals of java .\nXamarin is a software platform that enables you to create cross platform apps that will work on the top three platforms (Android, IOS, Windows) using the same codebase .  The programming language used by Xamarin is C#.\nXamarin has in a way solved a problem most developers face and that is developing the same  app multiple times for each of the top three platforms : Android , IOS and Windows. Without Xamarin developers will have to use different development tools and programming languages to develop the same app for the top three platforms.",
      "target_audience": [
        "Absolute Beginners to Mobile App Development"
      ]
    },
    {
      "title": "QuickChat 2.0 (WhatsApp like chat) iOS10 and Swift 3",
      "url": "https://www.udemy.com/course/quickchat-20-whatsapp-like-chat-ios10-and-swift-3/",
      "bio": "Whatsapp, quick chat, ios chat, swift, real time chat, ios push notifications, ios call, sinch, firebase database",
      "objectives": [
        "Latest iOS and Swift 3",
        "App to app calling like whatsapp",
        "End to end Encryption",
        "Photo, Video, Audio, Location messages",
        "Learn to use Firebase backend",
        "Dealing with JSON files",
        "Learn how to send Push notifications",
        "Learn Backendless backend service provider",
        "Login with Social media account like Facebook",
        "Integrate 3rd party code to your Applications",
        "Bug fixing",
        "Saving files on server and retrieving them",
        "Saving files on device and retrieving them",
        "Offline application functionality",
        "User Location management and MapKit",
        "Use the camera and photo library to take and store pictures/videos",
        "At the end of this course you will have a real world application ready to post it to Appstore with full functionality as you would expect from real application",
        "More than 140 lectures taking you step by step from beginning to the end where we will have cool chat application!"
      ],
      "course_content": {
        "Welcome": [
          "Welcome"
        ],
        "Setup": [
          "Setup part 1",
          "POD file for beginners",
          "Setup part 2",
          "Assets for the application",
          "Firebase Rules",
          "Bridging header in more details",
          "Setup part 3",
          "Setup part 4",
          "Constants",
          "App Delegate setup"
        ],
        "Login to App": [
          "Welcome View Controller",
          "Login functions",
          "Register User Interface setup",
          "Register functions",
          "Auto Login",
          "Test first login"
        ],
        "Camera Class": [
          "Camera Button function",
          "Camera Class code",
          "Camera Class",
          "Presenting Photo Camera"
        ],
        "Recent Chats View": [
          "Recent User Interface design",
          "Load Recents from Firebase",
          "Choose User VC User Interface",
          "Friends custom tableView cell",
          "Upload Avatar of our user",
          "Create Date Formatter function",
          "Friend custom cell functions",
          "Upload avatar on user registration",
          "Refactor Avatar image upload on registration",
          "Choose User View functions part 1",
          "Choose User View functions part 2",
          "Segue to Choose User view Controller",
          "Choose User view controller bug fix",
          "Create Recent functions part 1",
          "Create Recent functions part 2",
          "Create Recent Item",
          "Create Recent functions part 3",
          "Save Recent to Firebase and Firebase rules",
          "Recent Error fix part 1",
          "Recent Error fix part 2",
          "Update Recent functions",
          "Update Recent Item",
          "Recent custom tableView cell functions part 1",
          "Recent custom tableView cell functions part 2",
          "Test Run the app"
        ],
        "Chats View Controller": [
          "Chat View controller part 1",
          "Chat View controller part 2",
          "Chat View controller part 3",
          "Chat view Controller part 4",
          "Chat view Controller part 5",
          "Outgoing Message class part 1",
          "Outgoing Message class part 2",
          "Outgoing Message class part 3",
          "Chat View controller part 6",
          "Chat View controller part 7",
          "Send our first message",
          "Load Messages part 1",
          "Incoming Messages part 1",
          "Incoming Messages part 2",
          "Load Messages part 2",
          "Load Messages part 3",
          "Receiving first message",
          "Load Messages part 4",
          "Chat accessory button Part 1",
          "Chat accessory button Part 2"
        ],
        "Picture Messages": [
          "Sending Picture Message",
          "Error Fix for outgoing Picture Message",
          "Incoming Picture Message Part 1",
          "Incoming Picture Message Part 2",
          "Incoming Picture Message Part 3"
        ],
        "Location Messages": [
          "Location Manager setup part 1",
          "Location Manager setup part 2",
          "Create Location Message Part 1",
          "Create Location Message part 2",
          "Send First Location Message"
        ],
        "Message Status": [
          "Challenge to update message status",
          "Challenge walk through part 1",
          "Challenge walk through running on simulator",
          "Challenge walk through part 2",
          "Message time stamp and Read starus"
        ],
        "Video Message": [
          "Upload Video message function",
          "Download video message part 1",
          "Download video message part 2",
          "Download video message part 3",
          "Video thumbnail cropping functions",
          "Send Video message function",
          "Video Message class",
          "Incoming Video Message",
          "Send Video Message"
        ]
      },
      "requirements": [
        "You need to know how your way around in xCode",
        "The course is designed for people with some knowledge in iOS programming with Swift",
        "If you havent done any iOS development before, I advise you to take some beginner courses"
      ],
      "description": "If you are looking to learn how to build real world application, you have come to the right place.\nThis course is different from other Udemy course. I dont teach you to build 10 useless apps in 2 hours, If you are after quantity and not quality, this course is not for you.\nThis course is 27+ hours long in debt (every single step is covered) on how to build only 1 app. and that is a copy of Whatsapp Chat. After you finish this course you will have an app that can replace your messaging app and can be uploaded to App Store.\nTHIS IS NOT A BEGINNER LEVEL COURSE!\nIf you dont know your way around in xCode, how to make simple debuging, or this is your first tutorial, I strongly suggest you to take a beginner level course first before you take this course.\n\n\nThe QuickChat was updated to 2.01 version to work without backendless.\nNew update includes:\nFirebase user authentication\nFirebase file saving for (audio and video messages) also we save them locally on the device as usual\nLoading bar for uploading audio/video messages\nUser can update his Avatar now\nPush notification with OneSignal (which support emoji in notification as well)\nCall screen has now speaker and mute buttons and avatar image of the user we call.\nRedesign of the avatar image, we dont upload the image and save url now, we save the image on the User object. This makes the avatar available right away and no need to download.\nNew typing indicator so you can see now when other user is typing message to you.\nAvatar icon clicking in ChatView will open Profile view of that user.\nGroup message Avatar was added to the groups\netc.\nOverall the app became much faster, more responsive and easier to use. Offline functionality has improved as well. Push notifications work much better now.\n\n\nThis is not just update to existing QuickChat, QuickChat 2.0 its standalone course that has all the content of QuickChat and plus the extra functions, and its written in latest Swift 3 language. More than 20 hours of HD video material that will teach you have to build whatsapp clone, fully functional chat application with end to end encryption and call function.\n\nThis is not a beginner level course, you need to have programming experience in xCode and iOS programming in general.\nThis course will teach you how to building step-by-step a WhatsApp clone using latest Swift, xCode, Firebase and Backendless backend service.\n\nWe will be using Firebase as backend for our chat and Backendless for user login management, Push Service and File Storage.\nIntegrate App to App calling\nThe cool thing about Firebase is that its a real time backend, what does this mean? We dont have to constantly query for new messages, Firebase will push each new message to us automatically with no additional code required. This is very efficient on code writing and on network usage.\nThe application will work online and offline, Firebase will keep local datastore and will sync with online datastore ones the device gets internet connection.\nWe will use Facebook Login as well as user registration on Backendless.\nThe course will teach you how to integrate 3rd party libraries to your project, how to combine the Objective-C and Swift libraries.\nI will teach you how to send and receive Push notifications to keep your users notified when they receive messages.\nThe application is build in a way that its very easy to modify to integrate to other applications as well, also you can continue building the app to a stage that you can post it to appstore as ready fully functional chat application.",
      "target_audience": [
        "iOS developers who want to learn more about backend providers, how to integrate 3rd party code to your project. Integrate new functionalities to your existing projects and many more cool staff!",
        "This is not beginner level course, if you havent done any programming on iOS, I would highly recommend taking a beginner course before you attend this class"
      ]
    },
    {
      "title": "Build a Rental App with Flutter: iOS & Android Masterclass",
      "url": "https://www.udemy.com/course/ios-android-masterclass-build-3-apps-with-google-flutter/",
      "bio": "Start an empire with your first startup app. Learn the Dart programming language and back-end development with Firebase!",
      "objectives": [
        "Build real-world applications cross-platform simultaneously for iOS and Android.",
        "Build wireframes for various pages in a user experience.",
        "Develop frontend user interfaces.",
        "Use backend databases with Firebase.",
        "Add user authentication.",
        "Code in the Dart programming language.",
        "Display profiles, vacations, bookings, and calendars.",
        "And more topics. Just keep reading."
      ],
      "course_content": {
        "Introduction to Flutter": [
          "Introduction to Flutter",
          "Installing Android Studio",
          "Installing the Flutter SDK",
          "Exploring Android Studio Flutter",
          "Running Your First Flutter App",
          "Exploring Your First Flutter App",
          "Introduction to Flutter (PDF Resource)",
          "Mammoth Interactive Flutter SDK"
        ],
        "Dart Language Basics": [
          "Introduction to the Dart Language",
          "Variables",
          "Variables - Demo",
          "Variable Operators",
          "Variable Operators - Demo",
          "Lists",
          "Lists - Demo",
          "Maps",
          "Maps - Demo",
          "Functions",
          "Functions - Demo",
          "Control Flow",
          "Control Flow - Demo",
          "Loops",
          "Loops - Demo",
          "Classes and Objects",
          "Classes and Object - Demo",
          "Inheritance",
          "Inheritance - Demo",
          "Summary of Dart Language",
          "Dart Language Basics (PDF Resource)"
        ],
        "Flutter Widgets": [
          "Intro to Flutter Widgets",
          "Grid Layout with Columns and Rows",
          "Text Widgets",
          "Button Widgets",
          "Textfield Widgets",
          "Adding Images",
          "Flutter Widgets (PDF Resource)"
        ],
        "Project - Flutter Calculator App": [
          "Project Introduction",
          "Building the User Interface",
          "Building the UI (Continued)",
          "Styling the UI",
          "App Input and Output",
          "Implementing Arithmetic",
          "Bonus",
          "Calculator Project Files (Resource)",
          "Flutter Projects (PDF Resource)"
        ],
        "Project - Flutter Image Guesser App": [
          "Intro to Image Guesser App",
          "Building the Main User Interface",
          "Importing Images",
          "Building Image Cards",
          "Building Image Cards (Continued)",
          "Implementing Swiper Functionality",
          "Implementing Swiper Functionality (Continued)",
          "Implementing Short Answer Functionality",
          "Project Files (Resource)"
        ],
        "Building an App Wireframe": [
          "Course Introduction video",
          "Introduction to Building App Wireframes",
          "Welcome Screen",
          "Login Page",
          "Sign Up Page",
          "Guest Home Page",
          "Profile Account Page",
          "Personal Info Page",
          "View Profile Page",
          "Review Widget",
          "Review Form",
          "Explore Search Page",
          "Posting Tile Widget",
          "Saved Posting Paged",
          "Upcoming and Previous Trips Page",
          "Trips Page Widget",
          "View Posting Page",
          "View Posting Page (Continued)",
          "Bookings Page",
          "Bookings Page (Continued)",
          "Inbox Page",
          "Conversation Page",
          "Message List Tile",
          "Host Home Page",
          "My Posting Page",
          "Create Posting Page",
          "My Bookings Page",
          "Summary - Building Wireframe Apps",
          "Source Code: Mammoth Interactive Flutter Startup App"
        ],
        "Building the App's Data Structures": [
          "Building the App's Data Structures (Introduction)",
          "Contact Class",
          "User Class",
          "Posting Class",
          "Booking Class",
          "Review Class",
          "Conversation and Messaging Classes",
          "Adding Temporary Data",
          "Loading Data in Account and Personal Info Pages",
          "Loading Data in Explore and Posting Pages",
          "Loading Data into Saved and Trips Pages",
          "Loading Data into the View Profile Page",
          "Loading Data into Inbox Page",
          "Loading Data into Conversation Page",
          "Loading Data into My Postings and Create Posting Pages",
          "Loading Data into Bookings Page",
          "Building the Data Structures - Summary and Outro",
          "Building Data Structures (PDF Resource)"
        ],
        "Fetch Functions": [
          "Introduction to Database Fetch Functions",
          "Adding Firebase API",
          "Adding User Authentication",
          "Adding User Data",
          "Adding Conversation Data",
          "Adding Posting Data",
          "Writing User Fetch Functions",
          "Writing Posting Fetch Functions",
          "Writing Booking Fetch Functions",
          "Writing Review Fetch Functions",
          "Writing Conversation Fetch Functions",
          "Fetching Profile Information",
          "Fetching Posting Information",
          "Fetching Posting Information (Cont'd)",
          "Database Fetch Functionality Summary And Outro",
          "Database Fetch Functionality (PDF)"
        ],
        "Database Functions": [
          "Introduction to Database Upload Functions",
          "User Functions",
          "User Functions (Cont'd)",
          "Posting Functions (Part 1-2)",
          "Posting Functions (Part 3-4)",
          "Posting Functions (Part 5)",
          "Saved Postings functions",
          "Conversation Functions",
          "Book Functions",
          "Review Functions",
          "Search Filter Functions",
          "Becomes a Host Functions",
          "Booking Display Filter Functions",
          "Database Upload Functions Summary and Outro",
          "Course Summary and Outro Video",
          "Database Upload Functionality (PDF)",
          "Source Code",
          "Extra Code"
        ]
      },
      "requirements": [
        "NO programming experience is required",
        "Flutter is free, and we will show you how to install it.",
        "A computer with an Internet connection. This course is suitable for both Mac and PC."
      ],
      "description": "Are you looking to enhance your career by learning a coding language? Do you want to build an app but don't know where to start? Or you are seeking a side hustle that will finally give you the freedom and flexibility you've been searching for? If so, this course is for you!\nLearn Google Flutter from Scratch to a Fully Functional App\nThis masterclass will take you step by step through building a complete app. If you’ve ever tried to build an app in Xcode for iOS and then re-built it in Android Studio for Android, you’ll see how revolutionary Google Flutter is. With Flutter you can seamlessly create apps for Android, iOS and web all at the same time. It's growing in popularity every day and will soon be the #1 framework for app development.\nTHE COMPLETE SOURCE CODE IS AVAILABLE!\nSave money you’d use on coding bootcamps\nThis project is equivalent to what you’d get at an expensive $20,000 coding bootcamp. Instead you can watch this course from your home and get the same training and product as a bootcamp.\nAre you ready to become an expert in a technology supported by Google? Look no further.\nThe biggest struggles we hear from people like you who can’t get past the first step:\nYou don’t know the best technology to build your app\nYou can’t find a complete curriculum to learn in your free time\nYou get overwhelmed with the process of building a huge project\nThe team at Mammoth Interactive is here to take these problems from your hands once and for all.\nTeam Mammoth is passionate about teaching the world to code. We live and breathe e-learning!\nWe’re dedicated to creating efficient courses that teach the real-world skills of the future. We make sure anyone can take our courses regardless of experience. Whether you want to start a new hobby or change careers, we have a fun and straightforward course for you at an affordable price.\nOur passion for programming shows throughout the entire course, and it's our hope that you find programming joyful and valuable.You’ll be building an app for everyone you know, whether they use Android or iOS.\nWe believe (have proof through our outstanding students) that anyone can learn to code. If you know how to build apps, you’ll be ahead of the game in the long run as technology continues to be more important in every industry. You can have a stable and sound career or unleash your hidden talents with a side hustle.\nYou don’t need to spend years learning. With us you can learn in one course to develop your first app. You never know, your app could explode and change your life.\nThis course will open many doors for you, especially if you are looking to becoming a full-fledged app developer.\n— Team Mammoth",
      "target_audience": [
        "You’re new to app development or want to improve how you build by learning the most trending framework",
        "You want to become a cross-platform app developer",
        "You have ideas for apps and want to bring them to reality",
        "You want to learn to code with clean and efficient technique",
        "You appreciate support, motivation, and like to be guided through the learning process with no time wasted every step of the way.",
        "You want to design, create and publish a social app to sell",
        "Not on this list? Shoot us a comment/message, and we’ll answer any of your questions."
      ]
    },
    {
      "title": "Master Flutter By Building A Video And Voice Call App",
      "url": "https://www.udemy.com/course/master-flutter-by-building-a-video-and-voice-call-chat-app/",
      "bio": "Master Real World App Building Technique for iOS and Android",
      "objectives": [
        "Flutter real world production ready video and voice chatting app including text messages",
        "Learn how to set up different servers together and use in one project",
        "Learn how to work with firebase, custom backend and third party servers",
        "Learn about Laravel Framework, Firebase Firestore and Agora SDK",
        "Learn about building API using Laravel Framework and use the API from Flutter Framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Demo video"
        ],
        "Project structure and folder": [
          "Basic project structure of the app",
          "Create new project folder"
        ],
        "Welcome module": [
          "Welcome module and controller",
          "Welcome module and binding controller",
          "Welcome module and create library",
          "Welcome module and view",
          "Welcome module and main.dart",
          "Welcome module and onboard screen",
          "Welcome module summary"
        ],
        "Message module and middleware": [
          "Message module controller, binding, view and library",
          "Understanding the middleware"
        ],
        "Sign in module": [
          "Sign in module controller, binding and library",
          "Sign in module routing and binding"
        ],
        "Dependency Injection": [
          "Inject dependencies globally"
        ],
        "Local storage and dependencies": [
          "Understand StorageService class and SharedPreferences",
          "More on StorageService and SharedPreferences",
          "Difference between Get.put, Get.lazyPut and Get.putAsync"
        ],
        "Sign in module with third party login": [
          "Sign in module and page logo",
          "Sign in module and third party login button",
          "Build sign in page and dynamic name and logo part 0",
          "Sign in module and phone number login part 1",
          "Sign in module and phone number login part 2",
          "Set up firebase with CLI",
          "Sign in module and handleSignIn() part 1",
          "Sign in module and handleSignIn() part 2",
          "Sign in module and handleSignIn() part 3"
        ],
        "Learn to reconfigure iOS and Android settings and SHA1 and SHA256 key generation": [
          "Must know about Google login",
          "iOS and Android login and configuration",
          "iOS and Android login and fingerprint",
          "iOS and Android change bundle id and package name and generate SHA256 key",
          "iOS and Android login and reset reverse client id"
        ],
        "Learn what we are going to do next": [
          "Knowing about next new hours"
        ]
      },
      "requirements": [
        "Flutter and Dart SDK are installed as well PHP and Composer Installed"
      ],
      "description": "Here you will build a real world app and master app building technique by learning Flutter, Laravel, Firebase and third party SDK for audio and video call app.\nWho will take it\nBeginners to advanced learners\nFor landing a job\nFor colleague thesis\nFor prototyping\nFor mastering app building\nApp functional features\nThird party login\nPhone number login\nText chat\nImage chat\nAudio call chat\nVideo call chat\nSending notification (text, audio and video chat)\nProfile page\nNotification on text message receive\nNotification on audio call\nNotification on video call\nSound on initiating audio call\nSound on initiating video call\nSave chat history\nThird party login would involve Google, Facebook and Apple login. We will also see how to login using phone number. The chatting feature of this is very seamless since we used SQFLITE to save the chatting history locally. First we save chat messages locally and send them to the other end in the background service.\nSo users feel like the app very fast sending messages. The same happens for sending images. We first save the image locally and then send to other user.\nWe also save user profile locally, so you don't have to confirm with Firebase or Laravel for login.\nNext time a user logs in, user will feel like it's fast, since we read the data locally first. The same happens for chatting history. Chat history is read from local storage first.\nFlutter framework\nWe used Flutter framework for building beautiful UI for both iOS and Android. In Flutter framework, we also cover a lot of Dart knowledge and how to use models and classes to work with view and controllers.\nFirebase service\nWe used Firebase for sending users registration and phone number login. We used Firebase also for sending notification. Here in this tutorial you will more complex features of firebase like saving chat history, images, listening to document updates and uploading images.\nLaravel framework\nLaravel framework we used for building API for authentication. We used it also for saving basic information and communicating with Firebase for sending notification.\nAgora SDK\nWe used Agora SDK for using video and audio call service. Agora provides very stable API for audio and video call.",
      "target_audience": [
        "From beginners to advanced leaners"
      ]
    },
    {
      "title": "Augmented Reality apps with ARKit and SceneKit on iOS",
      "url": "https://www.udemy.com/course/learnarkit/",
      "bio": "Build real world apps on iOS using ARKit, SceneKit and SpriteKit - includes all source codes and 3D design files",
      "objectives": [
        "Understand ARKit and SceneKit using swift",
        "Build Augmented reality apps for clients",
        "Make money in the new AR Category on the Appstore",
        "Create 3D shapes in Augmented reality both in code and using the scene editor from Xcode",
        "Measure real distances using the iPhone's camera",
        "Interact with 3D objects",
        "Add 3D objects to the real world through the phone : on the floor, on a table, on the wall...",
        "Detect horizontal and vertical planes in the real world",
        "Detect images in the real world",
        "Create optical illusions",
        "Add animations to 3D objects",
        "Use spacial 3D audio in your AR scenes",
        "Learn how to use Physics to create games",
        "Learn how to use particles to create snow, rain, fire, confettis, and much much more"
      ],
      "course_content": {
        "Welcome": [
          "How ARKit Works",
          "The App",
          "The AR Industry and Trends"
        ],
        "SceneKit Basics : Design 3D Objects in minutes with Xcode": [
          "Primitive 3D shapes (scene editor)",
          "Design in 3D with Code (SceneKit)",
          "Sphere and Box with Code",
          "Add Lights to the Scene programmatically",
          "AR Challenge!",
          "Xcode Project - Shapes"
        ],
        "Solar System without code! (using the Scene Editor)": [
          "Solar System Design",
          "Animations",
          "Omni Light",
          "Particle Systems"
        ],
        "Solar System (only with code this time!)": [
          "Planet custom class",
          "Create Planets with Code",
          "OmniLight with code",
          "Create Stars and the Sun Using particle systems",
          "Add Saturn's Ring",
          "Solar System Source Code",
          "Challenge"
        ],
        "Flat Surfaces Detection": [
          "Plane Detection Configuration",
          "Design A reusable Anchor Node",
          "Show Detected Surface using Extent",
          "Update Plane sizes for for detected ARAnchors",
          "Deferred Shadows",
          "Shadows and Occlusion",
          "3D Floating Cloud",
          "NEW ARKit 1.5 : Show ARSCNPlanegeometry",
          "Surface Detection Source Code",
          "Challenge : Magic Hole Optical Illusion"
        ],
        "Image Detection": [
          "AR Configuration & Resources Folder",
          "Triggering Audio Content (Speech Synthetiser)",
          "BONUS : Make movie Posters come to life!",
          "Image Detection Source Code"
        ],
        "Measuring app": [
          "Set up ViewController and Storyboard",
          "AR Hit Test",
          "3D Pointer",
          "Smooth Pointer Movement",
          "Measure and Add Line (custom Geometry Extension)",
          "Add 3D text for the measurement",
          "Measure Source Code"
        ],
        "Spacial Sound": [
          "Design a 3D Drone with animations",
          "Attach a sound file to the droneNode and play it in loop.",
          "Spacial Sound Source Code"
        ],
        "Physics": [
          "Create the Scene",
          "Physics",
          "Create the ArrowNode",
          "Place the GameNode on the Floor in Front of the user",
          "Throw Fireballs!",
          "AR Game Source Code"
        ],
        "ARKIt with SpriteKit - Emoji AR app": [
          "Augmented Reality Template using SpriteKit",
          "ARKit + SpriteKit Template overview and cleanup.",
          "User Interface Design in Storyboard",
          "User interface Animations - Open & Close functions",
          "Collection View Protocol",
          "Xcode Project"
        ]
      },
      "requirements": [
        "You need an Apple computer (MacBook, iMac, Mac mini)",
        "Xcode 10 or higher",
        "An iOS Device with an A9 Chip or higher to run your apps (iPhone SE, iPhone 6s and later, iPad 2017, iPad Pro",
        "iOS 11.0 or higher",
        "Basic Knowledge of Xcode and SWIFT is preferable"
      ],
      "description": "* Now including Face tracking *\nARKit was launched in June 2017 by Apple and instantly became the largest AR platform with 350 million compatible devices. ARKit makes it much easier for developers to code augmented reality apps than ever before.\n\nLearn the future of programming with ARKit today and be in demand!\nAR is disrupting the world and will become mass market very soon. Don't wait for the crowd, be a leader and innovator in this new exciting field :\nAugmented reality is going to change everything we know in the next few years\nSO WHAT WILL YOU LEARN?\nThis course will teach you :\n● How to design 3D objects, and text with and without code\n● Primitive Geometries, colors/textures/materials, lights, animations, physics and particle systems.\n● Physically based rendering for realistic appearance\n● How to use Scenekit's built in Physics engine\n\n\nARKit fundamentals :\n\n● Surface recognition (floor, tables, walls...)\n● Image detection (posters, paintings, postcards, magazines, book covers, business cards...)\n● Spacial sound for immersive experiences\n● Image detection and Tracking\n● Automatic environment texture\n● Face tracking and animation (requires iPhone X, Xs, XsPlus or Xr)\n\n\nFREE ARKIT COMPANION APP\nYou can try all the ARKit projects you will learn right now on your device. Look for \"Augmented Reality App\" on the App Store.\nWHAT'S INCLUDED\nAll source codes and 3D design materials are included and easy to re-use in your commercial apps and projects - This will save you countless hours, which is priceless\nFurthermore, you will learn the key concepts of good user experience in Augmented Reality apps!\nPeople are hungry for amazing AR experiences but today there is a lack of \"killer AR Apps\" on the App Store. This is a huge opportunity to get in early before it becomes a crowded space!\nBig brands are looking for skilled ARKit developers as augmented reality is already available on 380 million iOS devices, but the technology is so new that there is a lack of trained ARKit iOS developers.\nAR Games are gaining in popularity since Pokemon Go, but even in gaming, there is a shortage of good AR apps that people are raving about. What is your app idea? Could it make you the next app millionaire?!\n\n\nCREATE THE APPS OF THE FUTURE\nAfter completing this course, you will be ahead of the game! The Mobile AR Market is about to grow exponentially, so you will be in a great position to dominate the AR app section of the AppStore and hopefully make your creative ideas come to reality within a few weeks thanks to ARKit.\n\nARKit is here to stay, and we are only at the beginning as all the big brands are investing heavily in Augmented Reality platforms. Apple is betting big on ARKit and wants to feature your awesome ARKit apps as soon as possible!\n\n\nWHAT WILL YOU BUILD?\nSceneKit\n● Design 3D Shapes and add colors using the scene editor (no code required, infinite possibilities!)\n● Build the exact same with code only using SWIFT 4.1 & the SceneKit Framework from Apple.\n● Create Animated scenes using SCNActions (with and without code again!)\n● Physics\n\n\nARKIT\n● Horizontal surface detection\n● Vertical surface detection\n● Image detection\n● Shadows\n● Occlusion : Make objects disappear behind a door or under a table\n● Spacial Sound : For truly immersive Augmented Reality experiences, use 3D sound to delight your users\n● AR Game\n● Design with particle systems : add realistic smoke, fire, stars and much more to your AR Scenes\n● Measure real world distances with iPhone.\n● Create optical illusions!\n● Face tracking and animation\n● Play videos in AR\n● Using Arkit for virtual reality : play 360 videos\n\n\nSPRITEKIT\n● display 2D content and create AR apps using SpriteKit\nIntroduction to SpriteKit in a simple section. Learn how to use SpriteKit with ARKit to display simple 2D elements like text and emojis.\nHAVE FUN!\nAugmented Reality programming can be daunting at first sight but this course will give you the confidence to build your  own AR apps and grow your coding skills using Apple's latest and hottest framework ARKit, step by step, at your own pace.\n\n\n● We will design a 3D drone from scratch in Xcode and make it fly around the user\n\n● We will throw fireballs to Destroy a pyramid of bricks, right from your living room!\n\n● We will build a portable hole like in Roger Rabbit! (that one is a challenge actually, are you up for it?)\n● We will create and animate a 3D Face using Apple's latest hardware : the iPhone X, Xs, Xs Plus or Xr and perform AR on the selfie camera on people's face like in Instagram stories and Snapchat. We will learn how to use camera filters and lenses to interact with people's live emotions.\n\n\nIf you read all the way to this line, you know this is the right course for you! And after all, there is no risk as you can ask a full refund with 30 days if the course is not for you... I'm sure you'll love it though! I had so much fun recording it and can't wait to see what you build too!\nCome and learn ARKit and start your Augmented Reality Career today!",
      "target_audience": [
        "iOS Developers who want to make Augmented Reality apps",
        "Indie Game Developers who want to get into AR",
        "iOS Freelancers who need to stay on top of iOS Frameworks",
        "Developers who want to get ready for the new wave of devices coming soon : smart AR glasses.",
        "Designers who want to get into 3D and experience / show their portfolio in Augmented reality",
        "Architects who want to design real size models in AR and load them in apps",
        "Side project developers who want to have fun with Apple's latest technology"
      ]
    },
    {
      "title": "Full Android Development Masterclass | 14 Real Apps-46 Hours",
      "url": "https://www.udemy.com/course/full-android-course-with-14-real-apps-42-hours/",
      "bio": "The most comprehensive Android app development course, learn android development with Android Studio & Java and level up",
      "objectives": [
        "Android",
        "This is the most comprehensive Android course. Learn Android app development with practices and build your android development skills.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "My Android development course on Udemy keeps you ahead of this learning curve with hands-on lectures on Android operating systems and more.",
        "Learn the most used operating system on the planet",
        "Learn the new version of Android. Here it is: Android 11 (Android R)",
        "Learn Publishing Android App on Google Play",
        "Start from scratch and become a Professional Android App Developer",
        "In this course, we will build 14 different real Android Apps from scratch together",
        "Android applications' levels in this course are from easy to difficult",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "You will reinforce your existing Android information by applying",
        "Using SQLite database, you will understand how to work with external databases",
        "You will be able to develop Android applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "With Firebase, you will be able to develop real-time applications",
        "You will learn how to make a messaging app using Firebase",
        "You will be able to develop user-friendly interfaces using Material Design principles and components",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "You will learn to develop games using Java Programming Language and Android Studio",
        "You will learn to develop applications by getting real-time data from the Internet",
        "You will have 14 different applications that you will publish on Google Play",
        "You can enroll this course if you want to develop advanced Android Applications using web integrated, online database.",
        "android app development",
        "android development",
        "android studio",
        "Learn the key concepts of the Git",
        "Learn the entire Git workflow",
        "Learn create branches, resolve conflicts, undoing things etc.",
        "Create and fork repositories on GitHub and push changes back after locally",
        "Learn how to collaborate a GitHub project",
        "Android 11"
      ],
      "course_content": {
        "Intro to Full Android Development Masterclass | 14 Real Apps-46 Hours": [
          "Android Ecosystem",
          "Installing Android Studio - Part 1",
          "Installing Android Studio - Part 2",
          "Creating a New Project on Android Studio",
          "Project Files and Course Documents",
          "FAQ About android app development",
          "quiz"
        ],
        "Android Studio Interface": [
          "Android Studio Interface",
          "Installing Android Virtual Device (AVD - Emulator) in android studio",
          "Enabling Virtualization (VT-x or AMD-V, SVM) in BIOS",
          "Installing Genymotion Emulator",
          "Gradle Build System in android development",
          "Introduction to Manifest File in android app development from scratch",
          "Introduction to Resource in android app development course",
          "R Java File",
          "quiz"
        ],
        "Components of Android": [
          "Layouts in android development from scratch",
          "Textviews in for android developer",
          "Buttons in android from scratch",
          "Edittexts in app development",
          "Image View in android course",
          "Checkbox in android app",
          "Radio Buttons in android app development",
          "Toggle buttons for android developer",
          "Spinner in android from scratch",
          "Creating Top App Bar (Toolbar - Action bar)",
          "Adding Menu Items to Toolbar",
          "All Codes for Section - 3",
          "quiz"
        ],
        "User Interactions in android app development from scratch": [
          "Toast Messages in android development course",
          "Snackbar Messages in android developer course",
          "Dialog Messages in android course",
          "quiz"
        ],
        "Lists & Views in android development from scratch": [
          "Constraint Layout",
          "ListView",
          "Recycler View - Part 1",
          "Recycler View - Part 2",
          "Grid View",
          "Scroll View",
          "WebView",
          "quiz"
        ],
        "Components and LifeCycles in Android App Development": [
          "Application Lifecycle",
          "Activity & Lifecycle",
          "Fragment & Lifecycle",
          "Services",
          "Receivers",
          "Intents in android app development",
          "quiz"
        ],
        "Shared Preferences and data Saving": [
          "Shared Preferences Class",
          "Saving Data Local Memory",
          "Calling Back Data",
          "quiz"
        ],
        "Device Compatibility in android app development": [
          "Multiple Language Support in android development",
          "Supporting Different Pixel Densities",
          "Support Different Screen Sizes",
          "quiz"
        ],
        "Android Project 1": [
          "To Do List",
          "quiz"
        ],
        "Publishing Your App on Google Play": [
          "Apk Release Version",
          "Building APK Files",
          "Google Play Developer Account",
          "Release Your App",
          "quiz"
        ]
      },
      "requirements": [
        "No prior knowledge is required",
        "No coding knowledge required",
        "To have basic Java programming knowledge",
        "Having a working computer and internet",
        "Watching the course videos completely, to the end and in order",
        "Determination to learn and patience",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to the \"Full Android Development Masterclass | 14 Real Apps-46 Hours\" course\nThe most comprehensive Android app development course, learn android development with Android Studio & Java and level up\nAndroid tablets and phones are very popular, and apps created for this operating system can reach a large audience Whether you are interested in a career in mobile app development or looking to develop a game or app of your own design independently, let our top rated instructors on Oak Academy help prepare you with an Android development course\nAndroid is a prevalent mobile operating system in the smartphone and tablet markets It is used for games, business apps, and many other types of products for mobile devices A growing number of companies are developing for the Android user market As a result, the industry is seeing a greater need for Android developers An Android development course can get you started on this path or sharpen your existing skills in the field\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nIf your answer is “yes” , you are at the right place!\n\nThis is the most comprehensive Android course Learn Android app development with practices and build your android development skills\nAndroid is the most used operating system on the planet In fact, it’s almost omnipresent in the mobile ecosystem With millions of Android devices in use, and an incredible 500,000+ new Android devices activated daily, the popularity of Android applications is increasing exponentially - and with it, the demand for Android mobile application developers is soaring\n\nIf you're interested in developing new and innovative applications for the world’s mobile platform, this course is a perfect match for you\nThis \"Full Android 11 Masterclass Course | 14 Real Apps - 45 Hours\" course will take you from beginner to advance level\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course In this course, you will learn Android app development step-by-step While doing kind of show and tell in our lectures we are also explaining whys During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 14 major apps\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher\nIn this course you will learn;\n\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nPublishing Your App on Google Play and more\nYou will reinforce your existing android information by applying\nYou will learn to develop games using Android Studio\nYou will learn to develop applications by getting real-time data from the Internet\nUsing SQLite database, you will understand how to work with external databases\nYou will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room)\nYou will learn how to make a messaging app using Firebase\nWith Firebase, you will be able to develop real-time applications\nYou will be able to develop user-friendly interfaces using Material Design principles and components\nYou will be able to develop modern Android apps\nAt the end of this course, you have following apps in the Google Play Store:\nTo-Do List\nMath Game\nCalculator\nNumber Guessing Game\nMy Information Book\nNote Take App\nPhoto Album\nQuiz Game\nChat App\nWeather App\nFlag Quiz\nMP3 Player\nBalloon Burst Game\nHelp the Innocent Bird\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\nIs Android Development a good career?\nWith over 2 5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\nThis course will take you from a beginner to a more experienced level\nWe will take you from beginner to advance level You will learn step-by-step with hands-on demonstrations\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow the latest trends\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now \"Full Android Development Masterclass | 14 Real Apps-46 Hours\" course\nThe most comprehensive Android app development course, learn android development with Android Studio & Java and level up",
      "target_audience": [
        "Those who want to develop an Android mobile application",
        "Who wants to improve their existing android knowledge",
        "Those who want to develop applications using the Java programming language",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Firebase Real-Time Database, Architectural Components (View Model, Live Data, Room) and SQLite",
        "Those who are curious about the Android Mobile game World",
        "Those who want to improve their application development skills using Android studio and java programming language",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone planning a job transformation and wants to become an Android developer"
      ]
    },
    {
      "title": "The Complete Dart Language Guide for Beginners and Beyond",
      "url": "https://www.udemy.com/course/complete-dart-guide/",
      "bio": "Learn Dart Programming in depth. Includes: basic to advanced topics, exercises, and projects. Fully updated to Dart 2.15",
      "objectives": [
        "Dart Programming Language in-depth",
        "How to write command line apps with Dart",
        "Fundamental concepts in programming: variables, types, control flow, collections, functions, classes, asynchronous programming & more",
        "How to write clear and effective code using best practices",
        "All the basics needed to understand Flutter, Angular Dart, and Dart on Backend"
      ],
      "course_content": {},
      "requirements": [
        "A Windows, macOS or Linux machine",
        "Enough free space to install Visual Studio Code and the Dart SDK"
      ],
      "description": "Welcome to this full and complete course on the Dart language.\nDart is the language behind Flutter: Google's UI toolkit for building beautiful and fast native apps for iOS, Android, web and beyond.\nWith Dart you can build Flutter apps across all these different platforms with a single codebase.\nAccording to GitHub, Dart was the fastest growing programming language in 2019, making it a very valuable language to learn.\nCourse overview\nCovering all the fundamental concepts for Dart development, this is the most comprehensive and updated Dart course available online.\nAs a Google Developer Expert for Dart and Flutter, I'll teach you everything you need to know about Dart, even if you've never written a single line of code before.\nThis is a beginners course, but it goes well beyond the basics and teach you many advanced topics with clear diagrams and explanations.\nWhy is this important?\nTo make Flutter apps, you’ll use the Dart language every single day. If you want to go beyond simple apps, you must know and understand it well.\nThis course will prepare you for this, by covering the more advanced Dart features that are needed to build complex Flutter apps.\nThis Dart course also includes many exercises and practical projects. These will help you consolidate your knowledge as you make progress.\nIncluded in this course\nThe course follows a carefully designed structure, and guides you through all these topics:\nIntroduction\nDart Basics\nDart Type System\nControl Flow\nProject: Build a Command Line App\nCollections\nProject: Data Processing in Dart\nNull Safety\nFunctions: Basics\nFunctions: Advanced\nClasses: Basics\nClasses: Advanced\nProject: Simple eCommerce\nMixins and Extensions\nError Handling & Exceptions\nAsynchronous programming\nProject: Weather App\nI will teach you the language features using Dartpad - a free online editor for writing Dart code.\nBeyond that, you will also learn how to write command line applications in Dart, using Visual Studio Code.\nAs part of this, you will complete some real-world projects, and be prepared for the next steps in your programming journey.\nCourse Structure\nI designed this course to be a step-by-step guide, as well as a reference that you can use to explore specific topics in depth.\nIf you're new to Dart and programming in general, this is a great place to start and you can follow the course from beginning to end.\nOr if you already have some experience and you want to fill some gaps in your knowledge, you can jump right into the sections that are most relevant.\nThe course also comes with a complete GitHub page. This includes:\na complete list of all the course lessons, so that you can more easily find the content you need\nall the course exercises, along with their solutions\nall the course projects\nBy buying this course you'll have access to 10 hours of content as well as many exercises, and any bonus materials that I will include in the future.\nPremium Support Included\nYou can ask questions if you get stuck. I'll do my best to answer all questions within 24 hours - but please keep them relevant to the course material.\nEnroll Today\nThis is a great package, and by the end of this course:\nyou'll be comfortable with all aspects of the Dart Language.\nyou'll have a strong foundation that you can use as you continue your programming journey and learn about Flutter and beyond.\nI'm very excited to share this course with you, so enroll now to get started.",
      "target_audience": [
        "Students who are new to Dart and programming in general",
        "Experienced developers who want to dive into Dart & Flutter",
        "Flutter developers who want to learn Dart more in-depth"
      ]
    },
    {
      "title": "The Complete Flutter App Development Course for Android, iOS",
      "url": "https://www.udemy.com/course/the-complete-flutter-app-development-course-for-android-ios/",
      "bio": "A Complete Guide to the Flutter Framework for building native iOS and Android apps with single code base",
      "objectives": [
        "Start developing mobile apps for both Android and iOS with single code base"
      ],
      "course_content": {
        "Getting Started with Flutter": [
          "Why develop Android and iOS apps using Flutter?",
          "Flutter Installation for Windows, Mac OS and Linux ( ubuntu )"
        ],
        "Creating your First Flutter Application": [
          "Create First Flutter Application: Flutter Dart Tutorial",
          "First Flutter Application using Dart: Continued",
          "Organize your code",
          "Adding Logic"
        ],
        "Exploring Commonly used Flutter Widgets": [
          "Exploring Widgets in Flutter",
          "Container, Margin, Padding and Box Constraints",
          "Custom Fonts",
          "Column and Expanded Widgets",
          "Image Asset",
          "Raised Button and Alert Dialog"
        ],
        "Implementing ListView and attached Widgets": [
          "ListView",
          "Long ListView",
          "Floating Action Button and SnackBar"
        ],
        "Stateful Widgets in Flutter": [
          "Introduction",
          "Stateful vs. Stateless Widget",
          "Building App with Stateful Widget",
          "Dropdown Button"
        ],
        "Building Simple Interest Calculator App": [
          "Overview",
          "Apply Styles and Themes",
          "Add Logic to your Simple Interest Calculator App",
          "Forms and TextField Validation"
        ],
        "Building a NoteKeeper Application": [
          "Overview",
          "Building UI",
          "Navigation: Push, Pop and WillPopScope",
          "Asynchronous Programming in Flutter"
        ],
        "SQLite Database in Flutter using SQFLITE Plugin": [
          "SQLite in Flutter: SQFLITE plugin",
          "Implementing Model Class",
          "Creating DatabaseHelper Class: CRUD Operation",
          "Completing NoteKeeper App: Connect database to UI",
          "Finishing Touches"
        ],
        "Conclusion": [
          "Summary"
        ]
      },
      "requirements": [
        "Basic programming language knowledge",
        "A computer: Windows or Mac or Linux",
        "Curiosity and Enthusiam"
      ],
      "description": "2024 Update: My Udemy courses are not being updated anymore.\nI have joined Droidcon Academy and leading the platform. I will continue my passion for teaching by working with thousands of instructors and helping them create high-quality courses for you. Thank you for your enormous support.\n-\nFlutter - a framework developed by Google - allows you to learn one language (Dart) and build beautiful native mobile apps in no time. Flutter is a SDK providing the tooling to compile Dart code into native code and it also gives you a rich set of pre-built and pre-styled UI elements (so called widgets) which you can use to compose your user interfaces.\nFlutter is extremely trending and gets used for major Google apps like their Adwords app - it's now marked as \"ready for production\", hence now is the time to jump in and learn it!\nThis course will teach Flutter & Dart from scratch, NO prior knowledge of either of the two is required! And you certainly don't need any Android or iOS development experience since the whole idea behind Flutter is to only learn one language.\nYou'll learn Flutter not only in theory but we'll build a complete, realistic app throughout this course. This app will feature both all the core basics as well as advanced features like using Google Maps, the device camera, adding animations and more!\nWith Flutter, you'll be able to write code only once and ship your apps both to the Apple AppStore and Google Play.\nUse Google's Material Design to build beautiful, yet fully customizable, apps in no time with almost zero effort. You can use the rich widget suite Flutter provides to add common UI elements like buttons, switches, forms, toolbars, lists and more - or you simply build your own widgets - Flutter makes that a breeze, too.\nHere's what's included in the course:\nDetailed setup instructions for both macOS and Windows\nA thorough introduction to Flutter, Dart and the concept behind widgets\nAn overview of the built-in widgets and how you may add your own ones\nDebugging tips & tricks\nPage navigation with tabs, side drawers and stack-based navigation\nState management solutions\nHandling and validating user input\nAdding Google Maps\nUsing native device features like the camera\nAdding beautiful animations & page transitions\nHow to publish your app to the app stores\nAnd more!",
      "target_audience": [
        "Anyone who is enthusiastic to start developing apps in Flutter"
      ]
    },
    {
      "title": "SwiftUI Mastery - The iOS 18 Reference Library of Code",
      "url": "https://www.udemy.com/course/swiftui-the-complete-developer-course/",
      "bio": "The iOS 18 SwiftUI Framework, Explained! - From the Blockbuster Best Seller \"SwiftUI For Masterminds\" by JD Gauchat",
      "objectives": [
        "Students will learn how to work with the SwiftUI Framework",
        "Get hundreds of downloadable SwiftUI code snippets",
        "Build high quality apps using the technologies taught in this course",
        "Upload your apps to the app store"
      ],
      "course_content": {
        "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources": [
          "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources!!",
          "Download all the iOS 18 project code here!",
          "The Companion Book for this course is available at JD's website"
        ],
        "Chapter 1 - App Development - How to use this Course": [
          "Table of Contents",
          "1.0 Welcome - How to use this iOS 18 course",
          "1.1 App Development Overview",
          "1.2 Xcode 16",
          "1.3 Development - Languages - Frameworks - APIs - Compilers"
        ],
        "Chapter 2 - Introduction to Swift": [
          "2.1 Computer Programming - Playground",
          "2.2 Variables",
          "Variables",
          "2.3 Data Types",
          "Data Types",
          "2.4 Part 1 - Conditionals and Loops - If else",
          "Conditionals and Loops - If else",
          "2.4 Part 2 - Conditionals and Loops - switch",
          "Conditionals and Loops - switch",
          "2.4 Part 3 - Conditionals and Loops - while - repeat while - for in",
          "Conditionals and Loops - while - repeat while - for in",
          "2.4 Part 4 - Conditionals and Loops - Control transfer statements",
          "Conditionals and Loops - Control transfer statements"
        ],
        "Chapter 3 - Swift Paradigm": [
          "3.1 • 3.2 - Part 1 - Programming Paradigms - Functions",
          "Programming Paradigms - Functions",
          "3.2 Part 2 - Generic Functions",
          "Generic Functions",
          "3.2 Part 3 - Standard Functions",
          "Standard Functions",
          "3.2 Part 4 - Scopes",
          "Scopes",
          "3.2 Part 5 - Closures",
          "Closures",
          "3.3 Part 1 - Structures",
          "Structures",
          "3.3 Part 2 - Key Paths",
          "Key Paths",
          "3.3 Part 3 - Methods",
          "Methods",
          "3.3 Part 4 - Initialization",
          "Initialization",
          "3.3 Part 5 - Computed Properties",
          "Computed Properties",
          "3.3 Part 6 - Property Observers",
          "Property Observers",
          "3.3 Part 7 - Type Properties and Methods",
          "Type Properties and Methods",
          "3.3 Part 8 - Generic Structures",
          "Generic Structures",
          "3.3 Part 9 - Primitive Type Structures",
          "Primitive Type Structures",
          "3.3 Part 10 - Range Structures",
          "Range Structures",
          "3.3 Part 11 - String Structures",
          "String Structures",
          "3.3 Part 12 - Array Structures",
          "Array Structures",
          "3.3 Part 13 - Set Structures",
          "Set Structures",
          "3.3 Part 14 - Dictionary Structures",
          "Dictionary Structures",
          "3.4 Part 1 - Enumerations",
          "3.4 Part 2 - Raw Values",
          "3.4 Part 3 - Associated Values",
          "Enumerations",
          "3.5 Part 1 - Objects - Definition of Objects",
          "Objects - Definition of Objects",
          "3.5 Part 2 - Type Properties and Methods",
          "Type Properties and Methods",
          "3.5 Part 3 - Reference Types",
          "Reference Types",
          "3.5 Part 4 - Self",
          "Self",
          "3.5 Part 5 - Memory Management",
          "Memory Management",
          "3.5 Part 6 - Inheritance",
          "Inheritance",
          "3.5 Part 7 - Type Casting",
          "Type Casting",
          "3.5 Part 8 - Initialization",
          "Initialization",
          "3.5 Part 9 - Deinitialization",
          "Deinitialization",
          "3.5 Part 10 - Access Control and Modifiers - Singletons",
          "Access Control and Modifiers - Singletons",
          "3.6 Part 1 - Protocols",
          "3.6 Part 2 - Definition of Protocols",
          "3.6 Part 3 - Generic Protocols",
          "3.6 Part 4 - Swift Protocols",
          "Protocols",
          "3.6 Part 5 - Extensions",
          "Extensions",
          "3.6 Part 6 - Delegates",
          "Delegates",
          "3.7 Part 1 - Errors - Throwing Errors",
          "3.7 Part 2 - Handling Errors",
          "3.7 Part 3 - Results",
          "Errors",
          "3.8 Part 1 - Property Wrappers",
          "Property Wrappers",
          "3.8 Part 2 - Macros",
          "Macros"
        ],
        "Chapter 4 - Introduction to Frameworks": [
          "4.1 - 4.2 - Part 1 - Frameworks - Importing Frameworks - Foundations",
          "Frameworks - Foundations & Standard Functions",
          "4.2 Part 2 - Strings",
          "Strings",
          "4.2 Part 3 - Ranges",
          "Ranges",
          "4.2 Part 4 - Numbers",
          "Numbers",
          "4.2 Part 5 - Dates",
          "Dates",
          "4.2 Part 6 - Measurements",
          "Measurements",
          "4.2 Part 7 - Timer",
          "Timer",
          "4.3 Regular Expressions",
          "Regular Expressions",
          "4.4 Core graphics",
          "Core Graphics"
        ],
        "Chapter 5 - SwiftUI Framework": [
          "5.1 - Part 1 - XCode - Projects - Editor Area",
          "5.1 - Part 2 - SwiftUI Files",
          "5.1 - Part 3 - Canvas",
          "5.1 - Part 4 - Opaque Types",
          "5.2 - Part 1 - Text View",
          "5.2 - Part 2 - Modifiers",
          "Opaque Types - Text Views - Modifiers",
          "5.2 - Part 3 - Color View",
          "5.2 - Part 4 - Materials",
          "5.2 - Part 5 - Images",
          "Color View - Materials - Images",
          "5.2 - Part 6 - SF Symbols",
          "5.2 - Part 7 - Event Modifiers",
          "5.2 - Part 8 - Custom Modifiers",
          "SF Symbols - Event Modifiers - Custom Modifiers",
          "5.3 - Part 1 - Layout - Stacks",
          "5.3 - Part 2 - Safe Area",
          "5.3 - Part 3 - Priorities",
          "Layout - Stacks - Safe Area - Priorities",
          "5.3 - Part 4 - Alignment Guides",
          "5.3 - Part 5 - Groups",
          "5.3 - Part 6 - Grids",
          "Alignment Guides - Groups - Grids",
          "5.3 - Part 7 - Custom Views",
          "5.3 - Part 8 - Custom Layout",
          "5.3 - Part 9 - Generic Views",
          "5.4 - Environment",
          "Custom Views - Custom Layout - Generic Views - Environment"
        ],
        "Chapter 6: Declarative User Interface": [
          "6.1 Part 1 - States - @State",
          "6.1 Part 2 - @Binding",
          "6.1 Part 3 - Binding Structures",
          "6.2 Part 1 - Control Views - Button View",
          "6.2 Part 2 - TextField View",
          "6.2 Part 3 - SecureField View View",
          "6.2 Part 4 - TextEditor View",
          "6.2 Part 5 - Toggle View",
          "6.2 Part 6 - Slider View",
          "6.2 Part 7 - ProgressView View",
          "6.2 Part 8 - Stepper View",
          "6.2 Part 9 - GroupBox View",
          "6.3 Part 1 - Model",
          "6.3 Part 2 - Accessing the Model"
        ],
        "Chapter 7 - Lists": [
          "7.1 Part 1 - Lists - Lists of views",
          "7.1 Part 2 - ScrollView View",
          "7.1 Part 3 - Lazy Grids",
          "7.2 Part 1 - List View",
          "7.2 Part 2 - Sections",
          "7.2 Part 3 - Edit Mode",
          "7.2 Part 4 - Swipe Actions",
          "7.2 Part 5 - Custom Buttons",
          "7.2 Part 6 - Refreshable",
          "7.2 Part 7 - Outline List",
          "7.3 - Tables",
          "7.4 Part 1 - Picker View",
          "7.4 Part 2 - Date Picker View",
          "7.5 Part 1 - Forms",
          "7.5 Part 2 - Disclosure Group",
          "7.6 Custom Containers"
        ],
        "Chapter 8 - Navigation": [
          "8.1 Part 1 - Multiple Views",
          "8.1 Part 2 - Toolbar",
          "8.1 Part 3 - Search",
          "8.1 Part 4 - Navigation Link",
          "8.1 Part 5 - Zoom Transition",
          "8.2 Part 1 - Modal Views - Sheets",
          "8.2 Part 2 - Inspector",
          "8.2 Part 3 - Popover",
          "8.2 Part 4 - Alert Views",
          "8.2 Part 5 - Confirmation Dialog",
          "8.2 Part 6 - Tip Views",
          "8.3 Part 1 - Tab View",
          "8.3 Part 2 - Search",
          "8.3 Part 3 - Pages",
          "8.3 Part 4 - Sidebar",
          "8.3 Part 5 - Real Life Application",
          "8.4 Part 1 - Adaptivity - Size Classes",
          "8.4 Part 2 - GeometryReader View",
          "8.4 Part 3 - Preferences",
          "8.5 Part 1 - Universal Interface",
          "8.5 Part 2 - Three Columns Layout",
          "8.5 Part 3 - Configuration"
        ],
        "Chapter 9 - Concurrency": [
          "9.1 Part 1 - Asynchronous and Concurrent Tasks",
          "9.1 Part 2 - Tasks",
          "9.1 Part 3 - Async and Await",
          "9.1 Part 4 - Errors",
          "9.1 Part 5 - Concurrency",
          "9.1 Part 6 - Data Races",
          "9.1 Part 7 - Main Actor",
          "9.1 Part 8 - Asynchrous Sequences",
          "9.1 Part 9 - Task Group",
          "9.1 Part 10 - Asynchronous Images"
        ]
      },
      "requirements": [
        "No experience is necessary - the course teaches the Swift language from the beginning"
      ],
      "description": "This course is built using the latest Apple release, iOS 18\nWelcome to \"SwiftUI Mastery - The iOS 18 Reference Library of Code, the definitive guide to to learning everything SwiftUI.\nThis is a SwiftUI Reference Course / Cookbook  / and Set of Documentation, for everything SwiftUI. There are hundreds of downloadable examples / video instruction / and projects here so you can get the code you need and add it directly into your projects / create your own SwiftUI docs, or add this to your own existing SwiftUI docs.\nMy name is Steve DeStefano, i am a SwiftUI developer, and working together with the brilliant programmer J.D. Gauchat, I have turned his best selling book \"SwiftUI for Masterminds, the iOS 18 edition\" into this complete developers mastery course.\nThis course is different than other courses, in that we don’t just scratch the surface, or build a few simple apps… in here, I give you the SwiftUI framework, explained.\nAll the instruction, all the downloadable examples, and all the tools that you need to build your own insanely cool apps, without any wasted time or chatter. I am strictly on point reading from the book, typing the code, and explaining how it all works. I use labels, graphics, animations, and other callouts to help draw your attention to the flow of the code.\nYou get the step by step instruction for each technology in the SwiftUI framework, and see how to use the different views, initializers, methods, and modifiers that are available for each of those technologies.\nAlso included in the course is the code file for every lecture, so you can download it and use in your apps right away, all built with the latest release, and tested to run perfectly. This is a huge library of code, hundreds of examples highlighting the SwiftUI Framework, neatly categorized for easy look up and reference, so you have everything you need to create your own stunning apps to submit to the App Store.\nIf you’re new to Swift, no problem, there is a language section in the beginning of the course that will walk you through the Swift Language and get you up to speed, fast.\nIf you’re an experienced programmer, this course will be your go to resource, because it is a huge repository of instruction and downloadable code thats perfect to add to your own set SwiftUI docs.\nHere are some of the topics covered:\nApp Development • Swift Language (complete language) • Protocols • Frameworks • User Interface • View Protocol • Opaque Types • Text • Modifiers • Color View • Image View • Event Modifiers • Custom Modifiers • Layout • Safe Area • Priorities • Alignment Guides • Groups •  Custom Views • Previews • Regex Framework • Grids • Preview Modifiers • Environment • Property Wrappers • @State • @Binding • @Environment • @AppStorage • Model • Observable • @EnvironmentObject • View Model • Combine Framework • Publishers • Subscribers • Transforming values • Operators • Subjects • Controls Button View • TextField View • SecureField View • Toggle View • Slider View • Stepper View • Navigation View • NavigationLink View • TabView View • Sheets • Popovers • Alert Views • Action Sheets • Split Views • Custom Navigation • Size Classes • Orientation • GeometryReader View• Preferences • Mac Catalyst • Conditional Code • Menu • Multiple Windows Support • Lists • ForEach View • ScrollView  • List View • Sections Edition Mode • Custom Buttons • Search • Picker View • DatePicker View • Forms • Shapes • Charts • Gradients • Images • Paths • Custom Shapes Transformations • Animations • Hit Testing • Transitions • Gesture • Notification Center • System Notifications • User Notifications • Provisional Notifications • User Defaults • File Manager • URLS and Paths • Files and Directories • Bundle • Archiving • Encoding and Decoding • JSON • Core Data • Core Data Model • Core Data Stack • Sort Descriptors • iCloud • Testing Devices • Key Value Storage • @AppStorage • UIKit Integration • Web  • Safari View Controller • MapKit • Camera • Photo Library • Custom Camera • AviKit FrameWork • Custom Video Player • Collection View • Apple Developer Program • Publishing to the App Store • Certificates, Provisioning Profiles, Identifiers • App Store Connect • Swift Language .•  And much more.\nSo come code along with JD and myself, working with an incredibly cool and insane set of design tools, and learn everything you need to know about the SwiftUI Framework, and how to implement and leverage all of its great new technologies.",
      "target_audience": [
        "Beginner iOS / macOS / watchOS / tvOS developers through intermediate and advanced"
      ]
    },
    {
      "title": "This is How You Make an iMessage Sticker Pack for iPhone",
      "url": "https://www.udemy.com/course/how-to-make-an-imessage-sticker-pack-for-iphone/",
      "bio": "Artists, illustrators, and entrepreneurs can turn their images & designs into interactive iMessage stickers for iOS",
      "objectives": [
        "Create a sticker pack and submit it to The App Store",
        "Test a sticker pack on an iPhone and the iOS simulator",
        "Prepare sticker packs for The App Store",
        "Distribute a sticker pack in The App Store"
      ],
      "course_content": {
        "Intro": [
          "Course Intro"
        ],
        "Free Tools": [
          "Downloading the free software we need"
        ],
        "Making A Basic Sticker Pack": [
          "How to Create A Sticker Pack"
        ],
        "Animated Stickers And More": [
          "Animated Stickers and Preparing A Sticker Pack for The App Store"
        ],
        "Submitting to The App Store": [
          "Submitting to The App Store"
        ],
        "Bonus: Tips for Standing Out in The App Store": [
          "Four Tips For Improving Your App Store Listing",
          "iMessage App Resources"
        ]
      },
      "requirements": [
        "The software required to make a sticker pack is free and we'll show you where to get it. But only runs on a Mac (i.e. an Apple Computer) running OS X version 10.11.5 or greater",
        "We provide you with example stickers to follow along with making a sticker pack. If you want to create your own sticker pack, you should be able to create png image files of the stickers you want to create.",
        "We will cover adding a prepared animation to a sticker pack. We won't cover creating animations in animator software like Motion."
      ],
      "description": "Celebrities, big brands, and independent artists are creating sticker packs for iPhone/iPad users to use in iMessage. You can too! Unlike every other kind of app, creating a sticker pack doesn't require writing any code.  Maybe you want to experiment with your own sticker pack that you can put on your iPhone and send stickers to your friends.  Or do you want to create a sticker empire to rival Kim Kardashian?  Either way, I will show you how to get started creating a sticker pack, enhancing it with animations and accessibility, and distributing your stickers globally in The App Store.  You can watch as I create the I Love Pizza Sticker Pack and submit it to The App Store where it's available now.",
      "target_audience": [
        "This course is great for artists, illustrators, or designers who want to put a sticker pack in The App Store",
        "This course is great for people who want to get started selling apps in The App Store without having to write any code",
        "This course is good for people who want to learn a marketable, in-demand skill (creating sticker packs) that they can offer to clients",
        "This course is not designed to teach you illustration or Photoshop techniques."
      ]
    },
    {
      "title": "Android Retrofit 2 complete course in Kotlin",
      "url": "https://www.udemy.com/course/retrofit/",
      "bio": "Learn to use all features of Retrofit for your Android network communication requirements",
      "objectives": [
        "Retrofit",
        "Network communication for Android",
        "Paging",
        "Synchronous vs asynchronous communications",
        "Build different types of requests",
        "URL manipulation",
        "Work with headers",
        "Logging",
        "Caching"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media"
        ],
        "Retrofit basics": [
          "Section overview",
          "Basics",
          "Android Studio",
          "Project setup and explanation",
          "Implement the Retrofit components",
          "Performing the Retrofit call",
          "Response",
          "Logging"
        ],
        "Requests": [
          "Section overview",
          "URL resolution",
          "Methods: GET, POST etc",
          "Queries",
          "Url manipulation",
          "Request body",
          "Sending form data",
          "Headers",
          "Custom interceptor - add header to all requests",
          "ResponseBody"
        ],
        "Other concepts": [
          "Section overview",
          "Synchronous vs async communication",
          "Canceling requests",
          "Caching",
          "Pagination",
          "Authentication",
          "RxJava with Retrofit"
        ],
        "Project: StackOverflow": [
          "Project overview",
          "Setup project",
          "Setup Retrofit",
          "Get data and display it",
          "Paging",
          "Finishing the main screen UI",
          "Challenge",
          "DetailActivity",
          "DetailActivity layout",
          "Passing the question to DetailActivity",
          "Answers Retrofit",
          "DetailViewModel",
          "AnswersAdapter",
          "Putting it all together"
        ],
        "Project: Github": [
          "Project overview",
          "Setup project",
          "Github setup",
          "Authentication flow",
          "Authenticate",
          "Create Github test repository",
          "Retrieve user repositories",
          "Retrieve Pull Requests (PRs)",
          "Challenge",
          "Retrieve comments",
          "Post comment"
        ],
        "Conclusion": [
          "Conclusion",
          "Further resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Mac or PC",
        "Android development knowledge"
      ],
      "description": "This is the most complete resource online for learning about Retrofit for Android development\nThis course will take you step by step, through each concept related to Retrofit, discuss it in detail, then apply it in a practical project.\nWe will cover topics such as:\nBasic Retrofit implementation\nLogging\nURL resolution\nGET, POST and other request methods\nQueries\nURL manipulation\nRequest body\nSending form data\nHeaders\nCanceling requests\nCaching\nPagination\nSynchronous vs asynchronous communications\nRetrofit with RxJava\nAuthentication\nIn addition, we will also be working on two Android apps to apply the knowledge we learned.\nStockOverflow communication app\nGitHub authentication and data retrieval app\nThis course is great if you want to take your Retrofit skills to the next level.\nSign up today and let's start learning about Retrofit for Android.",
      "target_audience": [
        "Beginner Android developers",
        "Intermediate Android developers"
      ]
    },
    {
      "title": "Xamarin Android - A Master Guide to App Development in C#",
      "url": "https://www.udemy.com/course/xamarin-android-a-master-guide-to-mobile-app-development/",
      "bio": "Complete Xamarin.Android Reference for Building Apps in C#. Threading, Images, Controls, Animations and Much More!",
      "objectives": [
        "Create fantastic and functional Android Apps",
        "Understand common Android design patterns",
        "Use graphics and animations",
        "Create list views with custom designs"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "How You Should Use This Course (Important, Please do not Skip)",
          "Xamarin.Android and Simulator Setup on a Mac",
          "Xamarin.Android and Simulator Setup on a PC"
        ],
        "Create Your First Xamarin.Android App": [
          "Introduction to Create Your First Xamarin.Android App",
          "Creating and Running a Xamarin.Android App",
          "Walkthrough of Android Specific Project Layouts",
          "Task - Your First Xamarin.Android App",
          "Solution - Your First Xamarin.Android App",
          "Summary of Create Your First Xamarin.Android App"
        ],
        "Xamarin Android Layouts and Basic UI": [
          "Introduction to Xamarin Android Layouts and Basic UI",
          "Linear Layouts (and Layouts in General)",
          "Relative Layouts",
          "Text Views and Edit Text Views",
          "Manipulating Screen Objects with Button Clicks",
          "Task - Slow Text Mover",
          "Solution - Slow Text Mover",
          "Summary of Xamarin Android Layouts and Basic UI"
        ],
        "More Xamarin Android Basic UI": [
          "Introduction to More Xamarin Android Basic UI",
          "Radio Buttons, Radio Groups and How to Debug Android Apps",
          "Toggle Buttons",
          "Spinners for Selecting Items from Drop Down Lists",
          "Task - Create a Radio Group to Select 2 Separate Lists",
          "Solution - Create a Radio Group to Select 2 Separate Lists",
          "Summary of More Xamarin Android Basic UI"
        ],
        "Create a Xamarin.Android App With Scrolling Lists": [
          "Introduction to Creating a Xamarin.Android App With Scrolling Lists",
          "Scrolling Lists on Android - What is a List View?",
          "Create a List View with Basic Rows",
          "Handling List View Clicks",
          "Show More Complicated Data with a Custom Adapter",
          "Create a List View with Custom Rows",
          "List View - Fast Scrolling and Section Indexing",
          "Summary of Creating a Xamarin.Android App With Scrolling Lists"
        ],
        "Resources on Xamarin.Android": [
          "Introduction to Resources on Xamarin.Android",
          "How to Load an Image in a Layout or Programmatically",
          "How to Translate Your App With no Extra Coding",
          "Differences Between Assets and Resources",
          "Creating Images for Different Screen Densities",
          "Summary of Resources on Xamarin.Android"
        ],
        "Activities on Xamarin.Android": [
          "Introduction to Activities on Xamarin.Android",
          "What is an Activity Exactly?",
          "How to Start New Activities",
          "How to Pass Data Between Activities",
          "Activity Lifecycles - What Happens and When",
          "Summary of Activity Lifecycles on Xamarin.Android"
        ],
        "Graphics and Simple Animation on Xamarin Android": [
          "Introduction to Graphics and Simple Animation on Xamarin.Android",
          "Where Can You Use Graphics and Animation?",
          "XML Drawable Graphics",
          "XML Drawable Graphics for Button States",
          "Fading Between Images with XML Drawable Animations",
          "View Animations (Original Android API)",
          "Property Animations (Preferred)",
          "Summary of Graphics and Simple Animation on Xamarin.Android"
        ],
        "Directories, Files, Reading and Writing": [
          "Introduction to Directories, Files, Reading and Writing",
          "The Android File System Structure",
          "Where can Android Apps Write Files to?",
          "How to Create and List Files and Folders in Xamarin.Android",
          "How to Read and Write a Text File in Xamarin.Android",
          "Task - Log File Creation",
          "Solution - Log File Creation",
          "Summary of Directories, Files, Reading and Writing"
        ],
        "Alerts and Notifications on Xamarin.Android": [
          "Introduction to Alerts and Notifications on Xamarin.Android",
          "Basic Alert Dialogs and List Dialogs on Android",
          "Toasts on Android",
          "Local Notifications on Android",
          "Summary of Alerts and Notifications on Xamarin.Android"
        ]
      },
      "requirements": [
        "A Mac or PC running Xamarin Studio (installation covered in course)"
      ],
      "description": "*************\nReleased End of April 2016 this course contains up to date instructions on creating fantastic Android apps using the latest version of Xamarin 4.0\n*************\nThis course is designed to be the complete reference guide for building apps in Xamarin.Android. I will teach you Android specific concepts and cover most of the code you will ever need!\nTake this course and you will go from beginner to completely proficient. No more translating of Java code to try make your Xamarin Android application work. Now you have all the C# and .Net coding answers contained in this course!\n\n*************\nForget the $2000 fee at Xamarin University, get the same information here for a fraction of the cost!\n\nWhat You'll Learn:\nMake your First Xamarin.Android App\nBasic UI Elements on Android\nAdvanced UI Elements on Android\nList Views (scrolling lists)\nAndroid resources\nActivities on Android\nActivity life cycles (very important)\nXML drawable graphics\nAnimations\nAndroid file system structure\nWhere your app can store files\nApp permissions\nAlerts and notifications\nMaterial design themes\nCreating toolbars\nLauncher icons (or app icons)\n*************\nBONUS 1: I give you lots of handy tips and advice in lectures (not included in list above)\n*************\nBONUS 2: Ask me to create a lecture for anything you want to see in this course. Completely FREE.\n*************\nPromo music courtesy of Ben Sound.",
      "target_audience": [
        "Beginners to C# should ONLY take this course after completing an intro to C# course!",
        "Those with coding experience but little Xamarin or Android experience should take this course"
      ]
    },
    {
      "title": "Mastering Flutter & Firebase for Mobile Apps Development",
      "url": "https://www.udemy.com/course/mastering-flutter-firebase-for-mobile-apps-development/",
      "bio": "Learn Flutter & Firebase to Build Scalable, Cross-Platform Mobile Apps with Authentication, Firestore, and More",
      "objectives": [
        "Build full-featured mobile apps using Flutter and Firebase.",
        "Implement secure authentication and real-time Firestore database management.",
        "Integrate Firebase Storage, Cloud Functions, and push notifications.",
        "Optimize app performance with Firebase Analytics and Remote Config."
      ],
      "course_content": {
        "Course Overview and Setup first": [
          "Introduction to Course",
          "Overview of Flutter & Firebase",
          "Create New Project and Setup Firebase in Project",
          "Flutter Setup"
        ],
        "Flutter Basics Project Setup and Widget": [
          "Flutter Project Structure",
          "StateFul and Statless Widget with Example",
          "Flutter Text Widget",
          "Container Widget in Flutter",
          "Expanded Widget in Flutter",
          "CircularAvatar, SizedBox and Divider in Flutter",
          "TextFormField Widget",
          "Stack Widget in Flutter",
          "ListTile Widget in Flutter",
          "ListView Builder in Flutter"
        ],
        "Firebase Authentication Basics": [
          "Firebase Setup and Autheniaction setup",
          "Sign-In Screen Update",
          "Adding Images in Your Flutter Project",
          "Building a Sign-in Form in Flutter",
          "Sign-Up Firebase Function",
          "Sign-In Firebase Function",
          "Loader-Added on SignUp and SignIn",
          "Firebase Google Sign In Function",
          "Firebase Google Sign In Function Part 2",
          "Creating Forget Password Screen"
        ],
        "Firestore Database Firebase Storage – CRUD operations with Firestore": [
          "Home Screen Show Poll and Create Poll Screen part 1",
          "Home Screen Show Poll and Create Poll Screen part 2",
          "Home Screen Show Poll and Create Poll Screen part 3",
          "Fixing Issue in Create Poll",
          "Edit Screen with Firebase",
          "Delete Poll in Firebase",
          "Handle Votes and Show Voters Tab",
          "Splash Screen in Flutter"
        ],
        "State Management for Real-Time Data with Provider": [
          "Introduction to State Management",
          "State Management using Provider",
          "State Management Provider"
        ],
        "Firebase Cloud Messaging (FCM) and APK Generation for Android & IOS": [
          "Firebase Cloud Messaging (FCM)",
          "Flutter App Icon Setup & Build APK for Android & IOS"
        ],
        "Offline Data Management with SQFLite & Firebase Sync": [
          "SQFLite Setup and Data Storage",
          "Checking Internet Connection Availability",
          "Syncing Offline Polls to Firebase When Online part 1",
          "Syncing Offline Polls to Firebase When Online part 2",
          "Updating SQFLite Records & Syncing Updates",
          "Deleting SQFLite Records & Syncing Deletion Logs"
        ],
        "Google Maps Integration and Proximity-Based Filtering": [
          "Google Maps Setup",
          "Displaying Google Maps",
          "Implementing 'Locate Me' & Sending Location to Firebase",
          "Displaying Proximity-Based Polls"
        ],
        "Version Control with Git and GitHub": [
          "GitHub Desktop Installation and Setup",
          "Creating Repository and Pushing Changes to GitHub",
          "Cloning Repository and Creating Branches",
          "Merging Branches and Discarding Unwanted Changes"
        ],
        "Subscription Management with Stripe and Paypal": [
          "Creating UI for featuring Poll",
          "PayPal Setup",
          "Implementing Subscription Using PayPal",
          "Sorting and Highlighting Featured Polls",
          "Auto-Unfeature Polls After a Time Limit",
          "Setting Up Cloud Functions for Setting Up Cloud Functions for Stripe Payments",
          "Publishing Stripe Cloud Functions part 1",
          "Publishing Stripe Cloud Functions part 2",
          "Deploying Stripe Cloud Functions to Firebase",
          "Stripe Setup",
          "Implementing Payment Using Stripe",
          "Tokenizing and Transferring Card Details",
          "Generating Customer Stripe ID",
          "Securely Handle Subscription Creation with Full Error Handling",
          "Managing Subscription Data",
          "Implementing restrictions in Free Tier"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge",
        "A Computer with Internet Access",
        "Flutter & Dart Basics (Optional)",
        "Willingness to Learn"
      ],
      "description": "Are you ready to build real-world mobile apps using Flutter and Firebase? This course will take you from the basics of Flutter and Dart to developing full-featured, cross-platform applications without the need for server-side coding. You’ll learn how to create beautiful, responsive user interfaces, implement secure authentication with email/password and Google sign-in, and manage real-time data using Firestore. The course also covers state management with Provider, file uploads with Firebase Storage, and automating backend tasks with Cloud Functions. You’ll dive into push notifications (FCM), Firebase Analytics, and Remote Config to optimize app performance and enhance user experience.\nBut that's not all! You'll also explore best practices for structuring Flutter projects, optimizing performance, and debugging common issues. Understanding how to efficiently manage app state and handle real-time updates will give you the confidence to build scalable applications. We will also cover deep linking with Firebase Dynamic Links, enabling seamless navigation across platforms, and show you how to implement A/B testing with Remote Config to fine-tune user experiences.\nBy the end of this course, you’ll have the skills to build and deploy a complete social media app, applying everything you’ve learned, from authentication and data management to notifications and analytics. This hands-on course is designed for both beginners and experienced developers looking to level up their Flutter skills. Whether you want to create your own startup app or advance your career as a mobile developer, this course will equip you with the necessary tools and knowledge.\nSo, what are you waiting for? Enroll now and start building powerful mobile apps with Flutter and Firebase today!",
      "target_audience": [
        "Beginners & Aspiring Mobile App Developers",
        "Web & Software Developers",
        "Entrepreneurs & Startups",
        "Students & Tech Enthusiasts"
      ]
    },
    {
      "title": "Build Instagram to Master Swift 4 and Firebase",
      "url": "https://www.udemy.com/course/build-instagram-to-master-swift-and-firebase/",
      "bio": "We offer you the biggest iOS social network course on the internet.",
      "objectives": [
        "High-level thinking to become a great iOS developer",
        "Build real world applications which can be published on the app store right away to serve millions of users.",
        "Design attractive UI for iOS apps.",
        "Be able to realize your idea",
        "Design your app",
        "Give likes, exactly same as in Instagram",
        "and many many more!"
      ],
      "course_content": {
        "Start Here": [
          "Get Familiar with Xcode",
          "Update Code to Swift 4",
          "Add Sign In Scene",
          "Add Sign Up Scene.",
          "Add Auto Layout and StackView",
          "Add TabbarViewController",
          "Customize TabbarViewController and add NavigationViewController",
          "Storyboard References Part 1",
          "Storyboard References Part 2",
          "Customize Sign In, Sign Up Scenes"
        ],
        "Email Sign Up and Log In with Robust Error Checking.": [
          "Introduction Firebase, and How to Integrate Firebase SDK to Our App",
          "Authentication with Firebase - Sign Up New Users part 1",
          "Authentication with Firebase - Sign Up New Users part 2",
          "Authentication with Firebase - Sign Up New Users part 3",
          "Authentication with Firebase - Validate TextField",
          "Authentication with Firebase - Signing In User",
          "Log Out and Auto Sign In.",
          "Best Coding Practices 1: Create Modular Services for Specific Tasks.",
          "Dismiss Keyboard and Show Authentication Progress."
        ],
        "Share Posts": [
          "Design The Camera Tab.",
          "Upload Photos to Firebase and Design Efficient Database: Don't Include Users in",
          "Share posts."
        ],
        "New Feeds": [
          "Start Building The News Feed",
          "Grab Post Data from Firebase Database: Don't Show Data on Views Directly.",
          "Model - View - Controller (MVC): Build A Model to Encode Post Data.",
          "Best Coding Practices 2: Construct a Good Model.",
          "Design the Home View.",
          "Show Fake Data on News Feed and Use Dynamic Cells to Display Long Content.",
          "Efficiently Display Real Post Data on the News Feed: A Model-View-Controller App",
          "Show User Profiles on News Feed: The Inefficient Way That Everyone Teaches You",
          "Shows User Profiles On News Feed: A Scalable Way That Everyone Fails to Teach Yo",
          "Enhance User Experience: Show A Loading Indicator."
        ],
        "Comment": [
          "Design The Comment View: Add Table View to Show Comments.",
          "Design The Comment View: Add Comment Input Text Field and Send Button.",
          "Send Comments: Design Scalable Comment Databases.",
          "Tie Up Posts and Comments on The Database The Right Way: Scalably.",
          "Fast and Efficiently Display Comments for A Single Post.",
          "Show Keyboard, Type Comments, Hide Keyboard, and All That.",
          "Fast and Efficiently Display Comments for ANY Post.",
          "Best Coding Practices 3: Write Your Own APIs to Conveniently Observe Data."
        ],
        "Like Posts The Scalable Way: We Can Let Thousands of Users Like A Post at The Sa": [
          "Like Posts: The Common (and NOT Scalable) Database Design That Every",
          "Like Posts: The Unscalable Way Everyone Copying from Each Other.",
          "Like Posts: A Scalable Way That No One Was Able to Teach You.",
          "Improve The Like Feature: Smoothly Update Like When Scrolling View."
        ],
        "Design Profile View and Display User Information": [
          "Design and Auto Layout a Good Looking Profile View.",
          "Feed Fake Data to The Profile View.",
          "Best Coding Practices 4: Views Should Not Work With Database.",
          "Who Post What? Efficiently Design Matching Database and Retrieve Posts for Users",
          "Display Posts on User Profile, and Arrange Them Nicely.",
          "Best Coding Practices 5: Factor Your Code Completely with Model-View-Controller."
        ],
        "Follow, Unfollow, and All That": [
          "Discover Users to Follow: Design a Clean UI.",
          "Discover Users to Follow: Efficiently List Discovered Users",
          "Follow and Unfollow A User: Start with A Good Database Design.",
          "Follow and Unfollow The Right Way: It's All About Talking To Your Database.",
          "Observe Database Properly to Smoothly Update Follow States When Scrolling View."
        ],
        "Like and Follow The Best Way: An MVC Approach.": [
          "A Clever Trick to Update Follow and Unfollow Information.",
          "Smartly Update Like Information."
        ],
        "News Feed: Show Your Posts and Those by Followed Users": [
          "It's All about Cleverly Designing A Good Database.",
          "Your News Feed Is Then Merely A Projection of Your Feed Database."
        ]
      },
      "requirements": [
        "You need a Mac, with XCode 10 installed (which is free).",
        "You should know Swift 4 basic."
      ],
      "description": "We offer you the biggest iOS social network course on the internet. By building this massive social network, you will master every crucial iOS programming concepts and skills which are vital for building high-value apps. You will be influent in using Firebase as a backend for real-time applications.\nBuild attractive walkthrough scenes.\nImplement a comprehensive authentication system:\nlogin and signup with emails,\nsend signup confirmation emails to users,\nreset password for existing users.\nEfficiently model super complex social networks with\nNews feed,\nPosts,\nUser profiles,\nNotifications,\nSearch.\nLet users post photos and videos; design and apply attractive filters to photos.\nLet users comment, like, and share posts; show comment and post dates.\nLet users follow each others; mention a user in a post or comment.\nBuild a hashtag system.\nImplement a real-time notification feature:\nUser receives notifications when a post got commented, liked, or shared; or when there is a new follower.\nUser gets notifications when there is a new post from a followed user.\nAllow users search username, and popular posts.",
      "target_audience": [
        "Who know a bit of iOS programming but still don't know how to build a complete, viable iOS app.",
        "Anyone who wants to learn iOS programming.",
        "Anyone who wants to turn ideas into professional apps that can serve millions of users.",
        "Anyone wanting to learn how to build full Instagram app",
        "Anyone wanting to learn how to build social apps, like Twitter, Facebook, Vine, Tumblr, Flickr, etc",
        "Anyone who fed up with empty promises of Instructors and want to learn to create FULL app with designing and coding all details"
      ]
    },
    {
      "title": "The Total Kotlin Course : Learn Kotlin Today",
      "url": "https://www.udemy.com/course/the-total-kotlin-course-learn-kotlin-today/",
      "bio": "Develop Real World Applications with Kotlin, the Number One Programming Language for Modern Multi-platform Applications",
      "objectives": [
        "At the end of this course you will have a strong understanding on using Kotlin alongside Java.",
        "After completion, you should have a good decision on if Kotlin is right for you."
      ],
      "course_content": {
        "Welcome to The Total Kotlin Course": [
          "What is Kotlin?",
          "IDE Setup",
          "Setting Up Kotlin",
          "Running Your First Kotlin Code"
        ],
        "Basics of Using Kotlin": [
          "Var and Val",
          "Get User Input",
          "Types"
        ],
        "Conditional Statements": [
          "If Statements",
          "If Statements Or",
          "When()",
          "When to Use When()"
        ],
        "Lists and Loops": [
          "Lists",
          "For Loop",
          "Best Friends List"
        ],
        "Arrays and While Loops": [
          "Array List",
          "While Loop",
          "Deleting Friends from Our Best Friends List 1/2",
          "Deleting Friends from Our Best Friends List 2/2",
          "When to Use a While Loop"
        ],
        "Functions": [
          "Introduction to Functions",
          "Function Returning"
        ],
        "OOP": [
          "Classes",
          "Private Variables",
          "Extending",
          "Constructors",
          "Advanced Constructors",
          "Data Classes",
          "Interfaces",
          "Singletons",
          "enumClass",
          "Getter & Setter",
          "OOP Test"
        ],
        "Bank Application.": [
          "Create Project",
          "Get User Input",
          "Create Bank Class",
          "Deposit",
          "Withdraw"
        ],
        "Nulls": [
          "What is a Null?",
          "Using != Null",
          "Null Safety",
          "Null Safety Quiz"
        ],
        "Date": [
          "Getting Current Date",
          "Formatting Date"
        ]
      },
      "requirements": [
        "This course is a beginner's course to using Kotlin and isn't suited for anyone who already uses and understands Kotlin.",
        "Students should be able to navigate around Android Studio and know the basics of writing in Java.",
        "The course will teach some fundamentals of programming but is not intended to teach you advanced development; further education into programming should be found outside of this course."
      ],
      "description": "If you’re a beginner that has no experience with programming then this course is for you! You’ll learn programming from scratch and will build real world applications with Kotlin.\n\nDo you want to learn Kotlin, the newest programming language for modern, multi-platform applications?\nHave you spent time and energy trying to figure out the differences between using Kotlin versus regular Java?\nDoes your code need the structure and framework only Kotlin can give, but you don't know where to start?\nIf you answered yes to any of these questions, you're in the right place!\nThis course was created to teach people just like you how to easily get started with Kotlin.\nKotlin is the best new programming language for development on the market right now, and we have developed a system to allow you to learn just what you need to know, only when you need it.\nHave fun while learning! Learn by actually doing!\nAfter enrolling in this course, you'll learn everything that you need to get started with Kotlin, from installation to writing your very own code!\nIn this course you will learn:\nInstallation of Kotlin\nDifference between Kotlin and Java\nVariables\nObject Oriented Programming\nLists & Arrays\nInput and Output\nLoops\nFunctions\nand so much more!\n\n\nWhether you just want to enhance your programming skills or have a specific project you need done right this instant, this course is for you. We will guide you every step of the way and are here to make sure you succeed in your ventures. We are always available to answer any messages, discussions, questions, or feedback that you have.\nGet a Certificate of Completion when you finish the course!\nWith our 30-Day 100% money back guarantee, there's no reason hesitate!\nENROLL NOW",
      "target_audience": [
        "This course is for anyone who has never used Kotlin before and wants to see what it's capable of!",
        "This course is not for those who are already familiar with Kotlin and feel comfortable using it in your workflow.",
        "Students who want a beginner's glance at using Kotlin should check out this course!"
      ]
    },
    {
      "title": "Android OS Internals / AOSP in Depth",
      "url": "https://www.udemy.com/course/android-os-internals-aosp-in-depth/",
      "bio": "Android Open Source Project Development (AOSP) - Deep OS Analysis, Android Startup, AMS, WMS, System UI and more..",
      "objectives": [
        "AOSP Development",
        "Android OS",
        "Android Internals",
        "Android Framework Development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to AOSP"
        ],
        "Android Architecture": [
          "Android Architecture in Detail"
        ],
        "AOSP Setup Linux Environment": [
          "Environment Setup",
          "Install Packages",
          "Install Repo"
        ],
        "Download and Build Phone Emulator": [
          "Download Source",
          "Build Phone Emulator"
        ],
        "Android Build System": [
          "Soong",
          "Build Architecture",
          "envsetup",
          "croot, m, mm",
          "grep",
          "module",
          "envsetup script walkthrough",
          "definitions.mk"
        ],
        "IDE Setup Tools": [
          "aidegen tool"
        ],
        "AOSP Project Folders Explained in Detail": [
          "AOSP Folders Part - 1",
          "AOSP Folders Part - 2",
          "AOSP Folders Part - 3",
          "AOSP Folders Part - 4",
          "AOSP Folders Part - 5",
          "AOSP Folders Part - 6"
        ],
        "Android Startup in Detail": [
          "Init Process",
          "Zygote Startup",
          "System Server",
          "System UI Introduction",
          "System UI Startup",
          "System UI CodeWalkthrough"
        ],
        "AMS Introduction": [
          "Introduction"
        ],
        "AMS Startup": [
          "AMS Startup Part 1",
          "AMS Startup Part 2"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge"
      ],
      "description": "Over the years, android has captured mobile Phones, tablets, TV, Wear devices, Automotive, and many embedded devices. It's running on 2.5 billion active devices. Even though AndroidOS has been in the market for a long time, it’s still pretty hard to find structured courses or online resources for AOSP development. That's the reason we thought of making this course. This course is specially designed for Developers of any level who wants to learn about developing Android OS, focusing more on deep internals OS Startup, AMS, WMS, and SYSTEM UI.\nThis course is also helpful for Android Application developers. You can be a better programmer when you know more about the Android OS Internals. We have tried to make this course as compact as possible so that you can learn something new each minute of the tutorials.\n\n\nOn a high level, the course is structured as follows.\n\n\nIntroduction\nArchitecture\nDevelopment Environment Setup\nFolder Structure and important modules\nBuilding the source\nAndroid Startup(Init, System Server, Zygote)\nActivity Management\nWindow Management\nand more...\nThe Course starts with the Basics of AOSP development like Architecture, Environment setup and it covers Advanced and deep analysis of System Startup, Activity Management, Window Management, and so on. This course will help you to build your confidence in Android as a Framework Developer or an App Developer. Kindly have a look at the latest course curriculum under the course contents.\n\n\nThis course is perfect for those new to the AOSP world or who want to learn more about different aspects of AOSP development. At the end of the course, you should gain enough knowledge to create your own Android version.\n\n\nPlease feel free to ask me questions if you need support while taking the course. Thank you and all the very best.",
      "target_audience": [
        "Android Developers curios to learn how Android OS works",
        "Android Framework Developers",
        "Android Platform Developers",
        "Android ROM Builders"
      ]
    },
    {
      "title": "Build a Medical Booking App without coding using FlutterFlow",
      "url": "https://www.udemy.com/course/build-a-medical-booking-app-without-coding-using-flutterflow/",
      "bio": "Understand how to build a medical booking app without coding using FlutterFlow - Chats, Payment and Video Call features",
      "objectives": [
        "Convert UiUx design from Figma into Pages in FlutterFlow using Widgets",
        "Use custom functions to implement difficult features in FlutterFlow",
        "Understand Firebase and how to use it for your FlutterFlow project",
        "Web Publishing",
        "Understand how to Implement Chatting Functionality",
        "Understand CRUD (Create Read Update Delete)"
      ],
      "course_content": {
        "Frontend and Backend Development": [
          "Frontend - Backend - Part 1 - Splash Screen - Onboarding",
          "Frontend - Part 2 - Sign up - Login Screen",
          "Frontend - Backend - Part 3 - Login - Sign up - Home Screen",
          "Frontend - Part 4 - All Doctors Screen",
          "Frontend - Part 5 - Doctors Details Page",
          "Frontend - Part 6 - My Bookings",
          "Frontend - Part 7 - Chats and Messages",
          "Backend - Part 8 - Sign up - Login - Logout - Home page",
          "Backend - Part 9 - Popular Doctors - Doctors Details Page - Payment - My Booking",
          "Backend - Part 10 - Stripe Payment Gateway Integration - My Bookings",
          "Backend - Part 11 - Stripe Payment Gateway Integration Testing - Booking Success",
          "Backend - Part 12 - Chatting Functionality",
          "Backend - Part 13 - Doctors Dashboard",
          "Backend - Part 14 - Admin Panel",
          "Backend - Part 15 - Web Publishing - View and Download Codes - Commit to Github",
          "Backend - Part 16 - Cloning the Project"
        ]
      },
      "requirements": [
        "No programming skills need. No prior nocode skills needed. This course is beginner friendly."
      ],
      "description": "In this course, you will learn how to build a medical booking app that allows users (patients) to search and find doctors and book appointments with them, pay with Stripe the get on a video call with them either with a link to Google Meet or in-app video call.\n\n\nThe users will also be able to track their bookings and chat with Doctors.\n\n\nYou will learn the following and much more:\nHow to convert UiUx designs in Figma into Frontend in FlutterFlow\nHow to execute CRUD - Create Read Update Delete - in your FlutterFlow project with ease\nHow to add a Stripe payment gateway for receiving money\nHow to implement in-app chatting functionality in your project\nHow to implement in-app video calling functionality in your FlutterFlow project\nHow to set up Firebase rules\nHow to publish your app to the web\nHow to implement conditional visibility\nHow to make your app responsive across all mobile devices\n\nThis course is totally beginner-friendly and you don't need to have prior knowledge of Nocode development to get started but you need to have enough enthusiasm and willingness to learn and practice what is taught in this course and apply them to your own projects.",
      "target_audience": [
        "Beginner to Professional Mobile App Development without coding using FlutterFlow"
      ]
    },
    {
      "title": "(Jetpack, Architecture & More)Advanced Android Bootcamp 2025",
      "url": "https://www.udemy.com/course/android-architecture-componentsmvvm-with-dagger-retrofit/",
      "bio": "Android App Development with Jetpack, Compose, MVVM Clean Architecture, Dagger/Hilt, Coroutines, Testing, Retrofit, ...",
      "objectives": [
        "Android Jetpack : Data Binding, View Binding, View Model, Live Data, Room Data Persistence, Paging, Work Manager, Navigation, LifeCycle aware components",
        "Jetpack Compose : Fundamentals , Advanced Concepts(State Handling, Side Effects, Uni Directional Data Flow,....), Advanced Project Examples With Jetpack Compose",
        "Kotlin Coroutines, Dependency Injection With Dagger 2 & Hilt, Networking With Retrofit 2, Unit Testing",
        "Advanced Android Architecture Best Practices, MVVM Clean Architecture",
        "Unit Testing Android Applications with JUnit, Truth and Mockito.",
        "6 Complete Larger Project Examples Covering Real World Applications Of Jetpack Libraries, Dagger/Hilt, Coroutines, Retrofit and Clean Architecture"
      ],
      "course_content": {
        "Course Overview(Watch this first)": [
          "Course Curriculum Overview",
          "Course Curriculum Overview(Written)",
          "How To Enable Subtitles(Captions)",
          "How To Ask Questions In The Course",
          "How To Download And Use Code Samples",
          "A Gift For You : 120 Android Interview Questions (PDF) E Book."
        ],
        "Data Binding Fundamentals.": [
          "A Simple Data Binding Example",
          "BuildFeatures(new update)",
          "Coding Challenge 1",
          "Coding Challenge 1 Answer",
          "Data Binding With Objects",
          "Section Summery(Short Note)",
          "Frequently Asked Questions.",
          "Practical Applications Of Data Binding"
        ],
        "Working With View Models.": [
          "Why Do We Need A View Model?",
          "A Simple View Model Example",
          "How To Add Dependencies To Android Studio's New Gradle",
          "Coding Challenge 1",
          "Coding Challenge 1 Answer",
          "When is the ViewModel's onCleared() called?",
          "Inheritance from an interface with '@JvmDefault' members Error.",
          "View Model Factory",
          "New way to get an instance of ViewModel.",
          "Section Summery(Short Note)",
          "Frequently Asked Questions."
        ],
        "Live Data": [
          "LiveData Fundamentals",
          "Coding Challenge 1",
          "Coding Challenge 1 Answer",
          "Section Summery(Short Note)",
          "Frequently Asked Questions"
        ],
        "View Model & Live Data With Data Binding.": [
          "View Model With Data Binding",
          "Live Data With Data Binding",
          "Two Way Data Binding",
          "When do we use Two Way Data Binding ?",
          "Coding Challenge",
          "Coding Challenge Answer"
        ],
        "Activity And Fragment Lifecycles": [
          "Android Activity Lifecycle",
          "Fragments Introduction"
        ],
        "Navigation Architecture Components.": [
          "Introduction To Navigation Architecture Component",
          "Project SetUp",
          "Navigation Graph",
          "Navigation Host Fragment",
          "Navigation Destinations",
          "Navigation Actions",
          "Transforming Data Between Destinations",
          "Animations For Actions",
          "Coding Challenge 1",
          "Coding Challenge 1 :Solution"
        ],
        "Android RecyclerView Fundamentals.": [
          "Android RecyclerView Fundamentals",
          "RecyclerView with Data Binding and ViewBinding"
        ],
        "Kotlin Coroutines Part 1 : Coroutines Fundamentals": [
          "Introduction",
          "Importance of Asynchronous Programming",
          "Our First Coroutine",
          "Scopes, Dispatchers & Builders",
          "Coding Challenge 1",
          "Coding Challenge 1 :Solution",
          "Switch The Thread Of A Coroutine",
          "How to fix the Error occured with coroutines version 1.3.7",
          "Suspending Functions",
          "Async & Await",
          "Unstructured Concurrency",
          "Structured Concurrency",
          "View Model Scope",
          "Life Cycle Scope",
          "LifecycleScope.launchWhenCreated { } is deprecated.",
          "Live Data Builder",
          "Coroutines Flows",
          "When to use different coroutines",
          "Practical Applications(Project Examples) of Coroutines."
        ],
        "Room Data Persistence Library Mastery(With A Complete MVVM Project Example)": [
          "Introduction",
          "Project SetUp",
          "Room Entity Classes",
          "Data Access Object Interface(DAO)",
          "Room Database Class",
          "Repository In MVVM",
          "Design The View",
          "Create A ViewModel",
          "Implementing CRUD Functionalities : Part 1",
          "Implementing CRUD Functionalities : Part 2",
          "Implementing CRUD Functionalities : Part 3",
          "Displaying Toast Messages With ViewModel and LiveData",
          "Verification With Returned Values From Database",
          "User Input Validations",
          "More Efficient RecyclerView",
          "Working With Room Short Note",
          "MVVM Architecture For Android Development Short Note",
          "Flow Instead Of LiveData"
        ]
      },
      "requirements": [
        "Beginner level knowledge of Android Studio",
        "Beginner level knowledge of Kotlin or Java",
        "Basic Android Development Skills( at least, have followed a beginner level course or a tutorial)",
        "(you may need to provide an email address to sign up to third party TMDB free REST API )"
      ],
      "description": "Become a highly qualified Professional Level Android Developer by mastering most demanded Android skills of 2024!\n\nIf you are an Android Developer with some coding experience, If you want to level up your skills and become a professional level Android Developer this course is for you!\nThis large course is a collection of 7 advanced Android Development courses.\n\n\n1) Complete Android Jetpack Masterclass\nYou will get a complete android jetpack masterclass from this course.\nCovering all the areas such as Data Binding, View Binding, View Model, Live Data, Room, Navigation, Work Manager and Notifications.\nI will tach you advanced areas like Room Migrations as well.\nAfter learning the basics, You will be developing 6 complete, larger projects to master practical applications of the knowledge you gained. You will be able to learn how to use jetpack components with dagger and hilt, coroutines, retrofit and testing libraries. And how to integrate the with MVVM and MVVM Clean Architecture.\n\n\n2) Jetpack Compose Masterclass\nI will step by step tach you everything you need to know in order to start using jetpack compose in your android projects.\nYou will start by learning fundamentals such as modifiers, layouts and View components and creating RecyclerViews using lazy columns.\nWe will also cover advanced areas such as State in Jetpack Compose, remembering state before the recomposition, property delegates, How to work with Side Effects, Unidirectional Data Flow and State Hoisting, Saving the state with remember saveable and how to effectively use view models with jetpack compose.\n\n\n3) Dependency Injection With Dagger and Hilt Crash Course\nAs section 16 of this course you will get a dependency injection with dagger crash course. And in the section 19 you will learn everything you need to learn about HILT.\nWe will start with very basic pure dependency injection examples.And step by step progress to more advanced areas of dagger and hilt. You will learn about application class, modules, component interfaces, constructor injection, field injection and scopes.\nNot only that, you will be able to experience creating 3 larger projects using dagger/hilt as the dependency injection framework.\n\n\n4) Kotlin Coroutines Masterclass\nWe will discuss about scopes, dispatchers, builders, suspending functions, structured concurrency, view model scope, lifecycle scope and live data builder with easy-to-understand code samples. You will also be able master Coroutine Flow fundamentals, State Flow , Shared Flow, Buffer and Collect Latest, Flow Operators and how to use flows with view models.\n\n\n5) Networking With Retrofit Crash Course\nI will show you how to communicate with a REST APIs using retrofit library.\nYou will learn how to send GET and POST request to a server, how to effectively use path and query parameters,\nhow to receive data from a server, logging interceptors, timeouts, converting JSON formatted data received from server to Kotlin as well as how to use coroutines with retrofit.\n\n\n6) MVVM and MVVM clean architecture Masterclass\nWith this course you will be able to master MVVM and MVVM clean architecture with single activity multiple fragments model and single activity multiple composables model.\nWe will be step by step building 6 larger well architected projects with Jetpack Architecture components and other supporting libraries such as Dagger/Hilt, Coroutines and Retrofit.\n7) Unit Testing With JUnit And Mockito Crash Course\nYou will be able to learn how to unit test android applications using JUnit and third party libraries like Mockito and Truth.\nI will teach you fundamentals of android unit testing with easy to understand code samples.\nWe will talk about test doubles, testing view model , live data and room db components, as well as testing with mock web servers.\n\n\nWith over 340 lectures and more than 35 hours of video, this comprehensive course leaves no stone unturned! .\nI will start by teaching  you each major topic with easy to understand simple project examples . Later, we will complete larger/complex project examples applying all the things we learnt.\nTo improve the student engagement  coding challenges(homework assignments) and quizzes have included to each chapter, as well as 6 major projects aimed to provide a clear idea about how all those components work together!\nThis course will teach you  Advanced Android Development in a practical manner, with every lecture comes a full coding screen-cast, corresponding  short notes and downloadable code samples! Learn in whatever manner is best for you!\nYou will get lifetime access to over 340 lectures plus corresponding code samples and notes for the lectures!\n\nThis course comes with a 30 day money back guarantee! If you are not satisfied in any way, you'll get your money back. Plus you will keep access to the Notes and Code Samples as a thanking for trying out the course!\nSo what are you waiting for? Start mastering Android Jetpack, Jetpack Compose, Android Architecture Best practises, Dagger/Hilt, Kotlin Coroutines, Retrofit and Unit Testing in a way that will advance your career and increase your knowledge, all in a fun and practical way!\n\n\nWho is the target audience?\n· Beginners level Android Developers (with the basic knowledge of Android Development fundamentals).\n· Intermediate level android developers who want to level up their skills!\n\n\nNote:\nDuring the course (in one section) to demonstrate different usages of retrofit, we will use TMDB free online REST API  . You may need to provide an email address to sign up and get a free API key from them.",
      "target_audience": [
        "Beginner level Android Developers(with the knowledge of Android Development fundamentals)",
        "Professional Android developers.",
        "Determined students who are willing to become professional Android developers.",
        "Anyone who has a passion to build awesome Android applications using cutting edge technologies."
      ]
    },
    {
      "title": "Mastering Android App Development with Kotlin [XML +COMPOSE]",
      "url": "https://www.udemy.com/course/mastering-android-app-development-with-kotlin-build-38-apps/",
      "bio": "Build apps with XML & Jetpack Compose - Master MVVM, Retrofit, ROOM DB, Firebase, Jetpack, MySQL, JSON and Much More...",
      "objectives": [
        "Kotlin Basics (Syntax, Loops, Conditions, Variables..)",
        "Kotlin OOP (Class, Object, Inheritance, Polymorphism, Abstraction, Interfaces)",
        "Kotlin Data Structures (Lists, Maps, Tree, Collections)",
        "Kotlin Lambda Expressions & Anonymous functions",
        "Android Studio User Interface",
        "Working with Android Views in XML (Button, TextView, EditText, ImageView, Rating Bar, SeekBar..)",
        "Android Layouts in XML (Linear, Constraint, Relative)",
        "App Components (Intents, Manifest, Gradle..)",
        "RecyclerView, CardView, ViewPager, ListView, TabLayout, Navigation Drawer",
        "Android Data Persistence (Shared Preferences, SQLite Database, ROOM Database)",
        "Android Jetpack (Data Binding, Live Data, View Model, Navigation)",
        "Kotlin Coroutines",
        "MVVM Architecture with ROOM Database (Parsing Data from Local Storage)",
        "MVVM Architecture with Retrofit (Parsing Data From JSON Files)",
        "MVVM Architecture with MySQL Database (Parsing Data from Local Host)",
        "Dependency Injection in Android",
        "Firebase, Firestore, Firebase Storage, Firebase Authentication...",
        "Composables in Jetpack Compose (Image, Text, TextField, Radio Button, Checkbox, Scaffold,",
        "More Composables (Cards, Lazy Column, Lazy Rows, Lazy Vertical Grid...)",
        "State Management in Jetpack Compose",
        "Navigation component in Jetpack Compose",
        "View Model with Jertpack Compose",
        "MVVM + Retrofit + Compose [Building the Actors App]",
        "MVVM + ROOM + Compose [Building the Library App]",
        "And Much Much Mooreeeeeeeeeeeeeeeeeeeeeee....."
      ],
      "course_content": {
        "Introduction": [
          "The Success Keys"
        ],
        "Getting Started with Android Studio": [
          "Section Overview",
          "Installing Android Studio with SDK",
          "Creating Android Emulator - AVD",
          "Creating a Hello World App",
          "How Android Works?"
        ],
        "Android Studio Deep Dive": [
          "Section Overview",
          "Android Studio UI",
          "The Editor",
          "The Layout Editor",
          "Project Structure"
        ],
        "Kotlin Basics": [
          "Running Kotlin Projects in Android Studio",
          "Kotlin Syntax",
          "Printing out & Output",
          "Comments",
          "Variables",
          "Data Types",
          "Numbers",
          "Decimals",
          "Booleans",
          "Characters"
        ],
        "Kotlin Object Oriented Programming - OOP": [
          "Creating Functions",
          "Passing Parameters to Functions",
          "Returning Values from Functions",
          "What's OOP - Object Oriented Programming",
          "Classes",
          "Objects",
          "Primary Constructor",
          "What's Inheritance?",
          "Inheritance Example",
          "Secondary Constructors",
          "Super Keyword",
          "Getters & Setters",
          "Visibility Modifiers",
          "Abstract Classes",
          "Interfaces",
          "Nested Classes"
        ],
        "Kotlin Data Structures": [
          "Collections Oveview",
          "Immutable List",
          "Mutable List",
          "Immutable Set",
          "Mutable Set",
          "Immutable Map",
          "Mutable Map"
        ],
        "Kotlin Exercise": [
          "Coding Exercise #1",
          "Coding Exercise #2",
          "Coding Exercise #3",
          "Coding Exercise #4",
          "Coding Exercise #5",
          "Coding Exercise #6",
          "Coding Exercise #7",
          "Coding Exercise #8"
        ],
        "Kotlin Lambda Expressions & Higher Order Functions": [
          "Function Literals in Kotlin",
          "Lambda Expressions",
          "Types of Lambda Expressions",
          "Anonymous Function",
          "More Shorter Syntax",
          "Types of Anonymous Functions",
          "Higher Order Functions",
          "Deep Dive into HIgher Order Functions",
          "\"It\" Keyword",
          "\"it\" Example",
          "Passing Anonymous Function as Parameter",
          "Returning Regular Functions from HOF"
        ],
        "Views & Widgets": [
          "Views & View Groups",
          "Views Attributes",
          "TextView",
          "EditText",
          "Buttons",
          "ImageView",
          "The Greetings App",
          "The Counter App"
        ],
        "Unit Converter App": [
          "Designing Layout",
          "Declaring Widgets",
          "Adding Functionalities",
          "Running the App"
        ]
      },
      "requirements": [
        "A Windows, Mac or Linux Computer",
        "No Programming knowledge required - I'll teach you everything you need to know"
      ],
      "description": "So you want to become an Android developer and start publishing your own apps?\nDo you have no programming experience whatsoever? Or maybe you have worked with another programming language in the past?\nYou came to the right place, where you'll master android app development from zero to hero through step-by-step explanations and well-crafted curriculum to take you with no or probably few coding skills to start creating professional android apps.\nYou have a great idea for an app and you just need to learn how to make it happen? Or your friends know that you are tech-savvy and they constantly come to you with their great ideas and want you to build them?\n\nIn this course, you will learn everything you need to know, to build your own apps, no matter what you need them for. For your company, your friends, your own business, or simply for fun. You'll become a real Android App Developer by getting the best Android App development course on Udemy.\nIf you sign up now you will get all this Android app development content:\nOver 50 hours of high quality & high definition 1080p video content\nThe complete code with step by step guides (in the code itself). So either you follow along in the video, or you get right into the action in Android Studio yourself.\nLoads of exercises that make sure, that the knowledge really sticks.\nThe best Android 13 app development course money can buy.\nYou will build these amazing Android apps\nLucky Number App\nUnit Converter App\nMusic Player App\nVideo Player App\nFrench Teacher App\nWorld Cup App\nTop Games App\nVaccines App\nFragments App\nNavigation Drawer App\nView Pager App\nTab Layout App\nView Model App\nData Binding App\nContacts Manager App [ MVVM + ROOM Database + Databinding]\nNavigation App\nCoroutines App\nThe Movies App [MVVM + ROOM + Retrofit + Databinding\nQuiz App [MySQL + MVVM + Retrofit + Databinding]\nFirebase Real-Time DB App\nFirestore App\nJournal App [Firestore + Storage + Auth]\nUnit Converter [Jetpack Compose]\nCredit Cards App [Jetpack Compose]\nThe Library App [Jetpack Compose]\nThe Courses App [ Jetpack Compose]\nCounter App [Jetpack Compose]\nAnd much more.......\n\n\nGet started now and become an Android app developer in just 6 weeks! You will learn all relevant Android App development techniques. I can tell you Android development is a lot of fun! This course will make your journey to becoming an Android developer fun as well.\nDon't waste any more time and get right into the action. This course consists of precisely curated content with fun example applications, exercises, presentations, and demos. As our main goal is to make sure, that you become a successful Android developer. We also offer high-quality support, so in case you get stuck, we will be there for you, answering your questions in the Q&A.\n\n\nREMEMBER… There is a full 30 DAY-money-back guarantee.\nSo what are you waiting for? Click the \"Buy now\" button. You’ve got nothing to lose only to gain from this world-class Android app development course.",
      "target_audience": [
        "Who want to learn coding from zero to hero",
        "Who is looking for complete coding course",
        "who want to publish apps on playstore",
        "who want to develop professional and clean architecture apps",
        "Who wants to Become a professional android app developer"
      ]
    },
    {
      "title": "Build an Augmented Reality android app in 1 hour!",
      "url": "https://www.udemy.com/course/build-an-augmented-reality-android-app-in-1-hour/",
      "bio": "Learn how to create an AR (Augmented Reality) based app for Android using Unity and Vuforia.",
      "objectives": [
        "Skills to build beautiful real-world Augmented Reality applications from scratch",
        "Build amazing AR apps for Android, iPhone, Windows, Linux and Mac",
        "Have a thorough understanding of good practices and principles of Unity and Augmented Reality Developement",
        "Learn to integrate complex 3D models with your Augmented Reality application",
        "Learn to use Vuforia to easily detect images on your mobile camera and display 3D models",
        "Get a hands on experience of using Unity and a deep understanding of its various features"
      ],
      "course_content": {},
      "requirements": [
        "An Internet connection is required",
        "You won’t need to buy any software – everything we are going to use will be free",
        "Desire to learn and improve your skills"
      ],
      "description": "Have you always wanted to build amazing Augmented Reality applications but didn't know where to start? May be you did not have any idea as to which skills were important to learn for building Augmented Reality Applications? May be you didn't want to dive too deep but still wanted make at least one Augmented Reality app? What if I told you that, with no previous knowledge at all you can actually build wonderful augmented reality apps starting today in just 1 hour?\nReviews\n\n\"This Augmented Reality course if the best AR course I have ever experienced. The instructor doesn't waste time explaining useless stuff and directly goes to the meat of the concept. It is a good Introduction to Augmented Reality, Unity and Vuforia. I was able to complete my project within an hour without any problems\" - Joe Manda\n\n\"This is the first course i have taken on Udemy. Learned a lot. Thankyou\" - Damir mahi\n\nIn this course we will cover every concept that is important to building Augmented Reality android apps and applications. We will be using the most famous framework for AR applications called Vuforia and integrate it with a game building engine called Unity 3D to making amazing looking Applications. We will cover every step in detail and I will explain why that step is important. By the end of this course creating Augmented Reality Applications will be a piece of cake for you.\n\nSo, why choose me as an instructor? Why buy this course among all those other courses?\nWhen i was a kid i saw this YouTube video on how make a folder invisible on Windows XP. I was so fascinated with this idea. Since then my love for technology has only grown. I understand the people who are passionate about learning new things. We will create this project together from start to finish.\nSo, why wait? If all this sounds great to you, Press on “Take this Course” and start learning today! 100% money-back guarantee!",
      "target_audience": [
        "People who want to step into the world of Augmented Reality but don't know where to start",
        "Students who know already know Unity but want to start building amazing AR applications",
        "Anyone who wants to start a career in Augmented Reality",
        "Do NOT take this course if are AR expert with many years of experience"
      ]
    },
    {
      "title": "Complete Flutter development - build 14 ios and android apps",
      "url": "https://www.udemy.com/course/complete-flutter-development/",
      "bio": "Includes API handling, database projects, Firebase and BLOC",
      "objectives": [
        "In depth flutter knowledge with projects",
        "Learn to make Apps for Android and iOS",
        "Become a Jr. flutter developer"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Dart programming language (if you have any programming experience in past, you will be fine)"
      ],
      "description": "Welcome to Complete Flutter development - build 14 iOS and Android apps. Flutter is a new framework created by Google. Whole inspiration behind creating this framework is to get single codebase for Android and iOS apps. Getting single code base reduces the learning curve to create multi platform apps. Also this single code base concept allows the companies to have less number of people and roll out features for both mobile systems at the same time.\n\n\nThis course is designed to make sure that students, who are not much familiar with app development, can also start with their app development journey. Making apps with flutter is easy as many UI components are built in and super easy to implement.\n\n\nWe will start this course by installing flutter and creating our first hello world application. Then we will create apps that helps in building logic. Apps like Dice Roller, Tic Tac Toe, Scratch and Win, Spanish number app will help you in building logics.\n\n\nFurther we will learn Camera and gesture by making apps. Further we will learn Navigation and keys in flutter. After that we will learn about API handling. Course also includes sqlite database for flutter. Finally we will learn about Firebase. We will make firebase app for Authentication and database. After that we will create WhatsApp UI for fun purpose.\nFinal section of this course will help you to learn advance concept like BLOC\n\n\nHere are some kind words by our students:\n\n\nI really loved the approach in which the instructor taught i,e to go with the documentation. He actually teaches you how to learn new things. I just loved the course.\n— Surabhi Nirgudwar\n\n\nThis course is one of the best course have ever done. The tutor is also the best tutor have ever encounter. I love how he was able to carry everybody along, i understood everything in this course and i look forward in doing more course from you.\n— Deborahvery\n\n\nstraight forward, covers everything (including minor details), easy to follow and understand\n— Cara\n\nNow, it's time to make some amazing stuff with dart programming language.\nCatch you inside the course!",
      "target_audience": [
        "Beginners in flutter development",
        "Beginners in app development",
        "Beginners in Android and iOS development"
      ]
    },
    {
      "title": "React Native: Create an Unbeatable & Multiplayer Tic-Tac-Toe",
      "url": "https://www.udemy.com/course/react-native-tic-tac-toe/",
      "bio": "Create, Publish & Monetize a Single Player Bot & Multiplayer Tic-Tac-Toe with Expo, Typescript & AWS Amplify GraphQL API",
      "objectives": [
        "Learn About Typescript & What's its purpose.",
        "Learn About Expo & the Difference between Expo & Vanilla React Native.",
        "Install & Run an Expo Application on a Physical Device, Android Emulator & iOS Simulator.",
        "Learn How to Use Typescript with Expo.",
        "Integrate ESLint, Prettier & Husky for a Better Workflow.",
        "Using React Navigation Efficiently with Typescript Integration.",
        "Create a Single Player Tic Tac Toe Game.",
        "Implement the Minimax Algorithm to Create a Tic Tac Toe Bot with Different Difficulties (From Easy to Unbeatable).",
        "Use Sound Effects and Haptics Feedback in Our Game.",
        "Create Custom React Hooks for Code Re-usability.",
        "Create Simple Animations Using the Animated API",
        "Creating Persistent App Settings Using React Context & AsyncStorage.",
        "Learn About AWS Amplify & its Purpose.",
        "Use AWS Amplify & AWS Cognito to add Authentication to our App.",
        "Create a GraphQL API with AWS Amplify, AWS AppSync & AWS Lambda Functions.",
        "Create a Real Time Multiplayer Tic Tac Toe with the GraphQL API.",
        "Learn How to Send Push Notifications Using Expo & Lambda Functions.",
        "Monetize Your Game Using Google AdMob.",
        "Build & Publish your App to the iOS App Store & Google Play Store."
      ],
      "course_content": {},
      "requirements": [
        "JavaScript (ESNext) Knowledge is Required.",
        "Typescript Basics Knowledge is Preferred.",
        "React Knowledge is Required.",
        "At Least Some React Native Basic Knowledge is Required (I Will not Discuss React Native Basics like Views and Styles).",
        "GraphQL Basic Knowledge is Required (When we use GraphQL, I will put you links to quick free material that you can watch/read).",
        "Some AWS (Amazon Web Services) Knowledge is not Required But Will be Helpful.",
        "A macOS Device is Required BUT Only if You would like to Use the iOS Simulator & Publish the App to the App Store.",
        "An AWS Account is Required for the Multiplayer Part. You have to Enter Credit Card Information to Create an Account. You Will Probably Not Be Charged Just By Following this Course as You Get a Monthly Free Usage.",
        "Apple Developer Account is Required ($99/Year) if You Would Like to Publish the App on the Apple App Store.",
        "Google Developer Account is Required ($25) if You Would Like to Publish the App on the Google Play Store."
      ],
      "description": "In this course we are going to create a Tic-Tac-Toe game using React Native (Expo). Although the Tic Tac Toe game is simple, our project won't be very simple. We are going to use Typescript in the project. Typescript is a tool that adds types of the JavaScript language. Having types allows us to avoid certain bugs in our code in addition to many other benefits.\nOur app will contain a single player game. For that we are going to use an algorithm called the Minimax Algorithm in order to create a bot with different difficulties. In addition to that, we will also have a multiplayer game. In the multiplayer game we are going to create an API and manage Authentication using a service called AWS Amplify. AWS Amplify allows us to easily build a GraphQL API that we will use in our game.\n\n\nLet's breakdown what will be discussed in each section:\nSection 1\nThis is an optional section for students without or with limited Typescript knowledge. We are going to have a very quick introduction to Typescript. We will discuss things like basic types, types, interfaces and generics.\n\n\nSection 2\nIn this course we are going to use a tool called expo. Expo is a tool that simplifies building apps using React Native. We will see what is the difference between expo and normal React Native. And then we will install expo, create a new expo project and run it on a physical device, Android emulator and the iOS simulator.\n\n\nSection 3\nIn this section we are going to setup some tools that will be very helpful in our workflow. First we will install Typescript for type checking. Then we will use Prettier to automate formatting our code. We will also use ESLint to enforce JavaScript rules. Husky to make sure we run all these tools before committing our code to git. And we will finally install a module resolver to make importing files and components in our project a lot easier.\n\n\nSection 4\nIn this section we are going to do some general setup for our application. Including loading fonts, creating a custom text component, setting up navigation and more.\n\n\nSection 5\nIn this section we will build our single player game. This includes the UI, the bot player, adding sounds and haptics, creating a settings page to choose difficulty and other options and persisting the settings on the phone using react context and AsyncStorage.\n\n\nSection 6\nThis section will just be an introduction to AWS Amplify and some AWS concepts like IAM. We will also install amplify and set it up in our project.\n\n\nSection 7\nHere we will use AWS Cognito which is a service that comes with Amplify to add authentication in our app. This includes login, register, otp confirmation, resend password, reset password, forget password and more.\n\n\nSection 8\nThis section will cover creating a GraphQL API using Amplify for the multiplayer game. We are going to learn how to create a model in our database and add authorization rules for this model to restrict its access by the API depending on authorization methods. We are going to create models for our players and our game and connect these models together. In addition to that, we will create multiple lambda functions that will handle different parts in the game like starting a new game and playing a move and we will see how to trigger these functions using our API. We will also create the necessary GraphQL subscription to listen for changes for each game so that we can have a real time experience.\n\n\nSection 9\nAfter completing the API for the multiplayer game, here we will start building our UI. This includes listing games, paginating games, searching for players, starting a new game and handling updating the game in real time. When consuming our API, we will learn how to use amplify to generate typescript types for our queries, mutations and subscription for a great development experience.\n\n\nSection 10\nThis section is entirely dedicated to sending push notifications with expo. Sending notification may seem simple; however there are a lot of stuff that need to be handled that we will discover in this section. Eventually we will be able to send a notification to a player when he is invited to a new game.\n\n\nSection 11\nThis short section will show you how simple it is to add ads in your game using AdMob which is integrated in expo.\n\n\nSection 12\nIn this final section we will discover how smooth building and publishing your app with expo is. We will build our apps for Android and iOS and publish the builds to the App and Play stores.",
      "target_audience": [
        "Students with Some React Native Knowledge that Would Like to Create a Full-stack Complicated Project.",
        "React Native Developers with little Typescript Experience Who Would Like to See How to Create a Big Project with Typescript & React Native.",
        "React Native Developers Interested in Learning About AWS Amplify & Integrating it With React Native.",
        "React Native Developers Interested in Creating a Full App with Expo Including Push Notifications, Building & Deployment."
      ]
    },
    {
      "title": "MVI architecture with Jetpack Compose for Android",
      "url": "https://www.udemy.com/course/androidmvi-compose/",
      "bio": "Learn MVI - Model View Intent - Architecture with Jetpack Compose. We use MVVM, Coroutines, Retrofit, Glide and Kotlin",
      "objectives": [
        "Android Architectures",
        "MVI Architecture",
        "MVVM Architecture",
        "Android development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Android Architectures",
          "Why MVI",
          "MVI Architecture"
        ],
        "MVI": [
          "Project introduction",
          "Dependencies",
          "Create project and add dependencies",
          "Setup Retrofit",
          "Intent and State",
          "ViewModel",
          "View Composables",
          "Running the app"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Android development knowledge"
      ],
      "description": "In this course we discuss the MVI - Model View Intent - architecture for Android development using Jetpack Compose.\nThe MVI Architecture is the newest iteration in the MVX types or architectures for Android, and brings with it a few different benefits. Most importantly, user interaction traceability, system state predictability and ultimately, improved scalability and testability.\nAs an Android developer, it's important to stay up to date with the latest developments.\nThis architecture has distinct advantages and disadvantages that are important to know when deciding whether to implement it in your application. In addition, it’s important to be able to discuss it in an Android interview, where you might be judged on whether or you have heard of it.\nIn this course, we will go through a theoretical description of Android architectures in general, such as MVC - Model View Controller, MVP - Model View Presenter and MVVM - Model View ViewModel. Finally we will see what the new MVI Architecture brings to the table.\nWe will also implement the knowledge we learned in a practical application. We will build an app that retrieves a list of animals from a backend api, and displays it in a list in the application. The application will showcase how to use the MVI architecture in a simple case, so that it’s easier to understand.\nThis is also an excellent project course for someone who wants to sharpen their Android development skills.\nSo sign up today and let's learn about the MVI architecture as it applies to Android development.",
      "target_audience": [
        "Beginner Android developers",
        "Intermediate Android developers"
      ]
    },
    {
      "title": "Android apps with artificial Intelligence",
      "url": "https://www.udemy.com/course/building-ai-android-applications/",
      "bio": "Building Android applications",
      "objectives": [
        "You will learn the basics of building machine learning models",
        "You will learn the basics of Android Studio and how to use it in building applications",
        "You will learn the basics of the Kotlin and python languages",
        "You will learn about MLkit library and how do you use it to build AI apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction about machine learning",
          "lecture test"
        ],
        "Solve handwritten digits classification task using ML": [
          "Build and train your model",
          "lecture test"
        ],
        "Building your first app": [
          "Building Eye state classification app",
          "lecture test"
        ],
        "Building your second app": [
          "Building image labeling application",
          "lecture test"
        ],
        "Building your third app": [
          "Introduction about object detection",
          "lecture test",
          "upload images & take a photo using your camera",
          "building object detection app",
          "Object detection & image labeling",
          "lecture test"
        ]
      },
      "requirements": [
        "You need to download Android Studio program",
        "It would be good if you have a little experience in any programming language"
      ],
      "description": "In this course, you will learn how to build Android applications and also learn about MLkit to use artificial intelligen in your application . Here we will make three applications , all of which use mlkit . You do not need strong experience in programming or artificial intelligence and machine learning , just a simple experience where we will explain from scratch . In each section you will find its own code . The most important thing is that you apply every example we take in practice to do this, you must download the Android studio program In the course, we will talk a little about Python and how to train models after that we will use Android studio to build applications . we will use kotlin to build these applications . We will also learn how to design the user interface to our app . The first application will be about classifying the state of the eye, whether it is closed or open the second application will be about how to identify the contents of images the last application will be about identifying objects in any imageEach one of these applications will teach you a lot of things and techniques that you can use elsewhere, for example uploading images or taking photos, in addition to learning the mlkit library.",
      "target_audience": [
        "For all developers who want to put AI into their apps"
      ]
    },
    {
      "title": "iOS 12 Swift 4.2 - The Complete iOS App Development Bootcamp",
      "url": "https://www.udemy.com/course/ios-12-app-development-bootcamp/",
      "bio": "From Beginner to iOS App Developer with Just One Course!",
      "objectives": [
        "Be able to build any app you want",
        "Start your own app based business",
        "Create a portfolio of apps to apply for junior developer jobs at a technology company",
        "Become a digital nomad by working as a freelance iOS developer",
        "Master creating Augmented Reality apps using Apple’s new ARKit2",
        "Create apps that use Machine Learning using Apple’s new CoreML2 and CreateML",
        "Level-Up as an iOS developer by getting to grips with the latest APIs",
        "Master app design so you'll know how to wireframe, mockup and prototype your app idea",
        "Master app marketing so you can publish your apps and generate downloads"
      ],
      "course_content": {
        "Getting Started with iOS 12 and Swift 5": [
          "IMPORTANT ANNOUNCEMENT",
          "What You'll Get in This Course",
          "Syllabus Download",
          "How to Make the Most of the Bootcamp",
          "The Giant List of Resources",
          "How Do Apps Actually Work?",
          "How Apps are Made",
          "Tools and Materials for iOS App Development",
          "Download Xcode",
          "While You're Waiting for Xcode to Download",
          "A Walkthrough of the Xcode Development Environment",
          "How to Get Help When You're Stuck",
          "Pathfinder"
        ],
        "iOS Interface Builder - The $999 App": [
          "The I Am Rich App",
          "How to Properly Create a New Xcode Project",
          "What is a Bundle Identifier?",
          "Let's Design the User Interface Using Storyboards",
          "A Quick Note About the Next Lesson",
          "How to Position User Interface (UI) Elements",
          "Download the Pre-Prepared Image Assets Here",
          "How to Incorporate Image Assets into Your Xcode Project",
          "What's the Difference Between Points and Pixels & How to Design iOS Image Assets",
          "App Icon Dimensions and a Brief History of Graphics",
          "How to Design Your Own App Icon and Image Assets",
          "Run and Test Your App!",
          "Join the Student Community"
        ],
        "Running Your App on a Real Device - Sideloading in iOS": [
          "What is Sideloading and How Can You Get Your App onto Your iPhone?",
          "A Note About Sideloading and Permissions",
          "How to Sideload Your App using Xcode",
          "Sideloading Wirelessly Through the Air",
          "[Optional] How to Get a Professional Apple Developer Account"
        ],
        "Coding Challenge #1 - Using Interface Builder in Xcode": [
          "What are Coding Challenges?",
          "What You Will Create by the End of this Challenge",
          "What is GitHub and How to Download the Stub Projects",
          "Step 0 - Download the Project Stub",
          "Step 1 - Add a UILabel",
          "Step 2 - Add and Arrange the ImageView",
          "Step 3 - Design your App to your Heart's Content",
          "Show Off Your Work!"
        ],
        "Build a iOS Dice App to Learn Swift Programming Basics": [
          "What You'll Make by the End of This Module",
          "How to Design Your App",
          "Linking Design with Code",
          "\"Not Key Value Coding Compliant\" - What to Do if You Get this Error",
          "A Quick NoteFor Students Working with Older Versions of Xcode",
          "How to Create Randomisation in Swift",
          "Data Types, Constants and Variables",
          "How to Solve the Error: \"The Maximum Number of Provisioning Profiles Reached\"",
          "Learn About Arrays in Swift and Programmatically Update the Display",
          "[How to Become a Better Programmer] The DRY Principle",
          "How to Add Motion Detection in to Your App",
          "Download the Completed App Project"
        ],
        "Coding Challenge #2 - Swift Data Types, Variables and Arrays": [
          "What You'll Build in this Coding Challenge",
          "Step 1 - Create a New Xcode Project",
          "Step 2 - Download the Image Asset's We've Already Prepared for You",
          "Step 3 - Add App Icons to Your Project",
          "Step 4 - Add the 8 Ball Images",
          "Step 5 - Setup the Canvas",
          "Step 6 - Design the App in Interface Builder",
          "Step 7 - Link the Design with Code",
          "Step 8 - Make the Ball Image Change with Your Code",
          "Step 9 - Make a Method",
          "Step 10 - Add Shake Gesture Detection",
          "If You Get Stuck..."
        ],
        "Programming in Swift 5 for Beginners [Using Swift Playgrounds]": [
          "Introduction to the Programming Modules",
          "Comments, Print Statements and Debug Console",
          "Optional Review: Data Types, Constants and Variables",
          "Swift Functions: Part 1 - The Simple Function",
          "Swift Functions: Part 2 - Functions with Inputs",
          "Swift Functions Part 3 - Functions with Outputs",
          "A Quick Note About the Next Lesson",
          "Control Flow with Conditional Statements in Swift (IF/ELSE)",
          "Download the Completed Swift Playgrounds",
          "[Challenge] Make a BMI Calculator in Swift Playgrounds",
          "Optional: BMI Calculator Challenge Solution",
          "Introduction to Loops in Swift - The For In loop",
          "Using Loops in Your Program",
          "Optional: A Brain Teaser with Loops and the Fibonacci Sequence"
        ],
        "Apple iOS APIs - Make a Music App": [
          "What You'll Make by the End of This Module",
          "Download the Skeleton Project",
          "How to Use Tags in the Storyboards",
          "How to Use the Apple Documentation to Tap into Any iPhone Capability You Want",
          "The Swift 5 Programming Language Guide from Apple",
          "Incorporate AVFoundation to Play Sound",
          "Error Catching in Swift 5 - Do, Catch and Try",
          "Create a Method to Contain the Sound Playing Functionality",
          "[Common Swift Errors] \"Index Out of Range\" and How to Debug it",
          "Make the App Play a Different Sound for Each Button",
          "The Importance of \"Scope\" in Programming",
          "Download the Completed App Project"
        ],
        "The Model-View-Controller (MVC) Design Pattern - Make a Quiz App": [
          "What You'll Make by the End of This Module",
          "Download the Skeleton Project",
          "Set up the Project",
          "What is a Property List (.plist)?",
          "Let's Create a Data Model",
          "Further Reading",
          "Object-Oriented Programming - What are Objects and Classes?",
          "Object-Oriented Programming (OOP) a Quick Note from Steve Jobs",
          "Creating the Question Bank Class",
          "[ELI5] The Model View Controller (MVC) Design Pattern - Explain Like I'm 5",
          "Initialise the First Question",
          "How to Progress Through the Question Bank",
          "[Debugging Practice] Using the Xcode Debug Console",
          "How to Implement a UIAlertController and Show a Popup to the User",
          "A High Level Overview of How Our App Works",
          "How to Track Progress and Score",
          "A Quick Note About the Next Lesson",
          "How to Incorporate Objective-C Code in to Swift",
          "Background on the Questions",
          "Download the Completed App Project"
        ],
        "Coding Challenge #3 - Control Flow - Build a Story App Like Lifeline": [
          "What You'll Build in This Coding Challenge",
          "A Choose Your Own Adventure Game",
          "Step 1 - Download the Skeleton Project",
          "Step 2 - Make a Note of the Tag Properties",
          "Step 3 - Set up the Introductory Screen",
          "Step 4 - Take the Story One Step Further",
          "Step 5 - Keeping Track of State",
          "Step 6- Use Comparators to Let the User Progress Through the Game",
          "Optional: Destini Solution Walk Through"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "A Mac laptop or iMac (or a PC running macOS)",
        "No paid software required - all apps will be created in Xcode 10 (which is free)",
        "I'll walk you through, step-by-step how to get Xcode installed set up"
      ],
      "description": "PLEASE NOTE: This is the 2018 version of the course. It is for students who cannot update to iOS 13 or macOS Catalina. For the latest version of this course, please search for \"Angela Yu iOS 13\".\nWelcome to the Complete iOS App Development Bootcamp. With over 23,000 ratings and a 4.8 average my iOS course is the HIGHEST RATED iOS Course in the history of Udemy!\nAt 50+ hours, this iOS 12 course is the most comprehensive iOS development course online!\nThis Swift 4.2 course is based on our in-person app development bootcamp in London, where we've perfected the curriculum over 3 years of in-person teaching.\nOur complete app development bootcamp teaches you how to code using Swift 4.2 and build beautiful iOS 12 apps for iPhone and iPad. Even if you have ZERO programming experience.\nI'll take you step-by-step through engaging and fun video tutorials and teach you everything you need to know to succeed as an iOS app developer.\nThe course includes 50+ hours of HD video tutorials and builds your programming knowledge while making real world apps. e.g. Pokemon Go, Whatsapp, QuizUp and Yahoo Weather.\nIt's updated to include over 7 hours of content on Apple's brand new ARKit 2 for making Augmented Reality apps as well as CoreML2 & CreateML for making intelligent apps with Machine Learning. You'll be building your own machine learning models that use Artificial Intelligence to recognise images and emotions in tweets. You'll also be building 3D augmented reality apps that look like Pokemon Go and Harry Potter's magical newspapers!\nBy the end of this course, you will be fluently programming in Swift 4.2 and be ready to make your own apps or start a freelancing job as an iOS 12 developer.\nYou'll also have a portfolio of over 25 apps that you can show off to any potential employer.\nSign up today, and look forwards to:\nOver 50 hours of HD 1080p video content, everything you'll ever need to succeed as a iOS developer.\nBuilding over 20 fully-fledged apps including ones that use Firebase, Core Data, Cocoapods, machine learning and augmented reality\nAll the knowledge you need to start building any app you want\nThousands of dollars worth of design assets\nOur best selling 12 Rules to Learn to Code eBook\n$8000+ app development bootcamp course materials and curriculum\nFrom Beginner to iOS 12 App Developer with Just One Course\nWe know that you're here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they're doing, you'd be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and we're always on hand to answer student questions.\nSo by the end of the course, you'll completely understand:\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, classes and protocols.\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\nData Structures: How to work with collections, such as arrays and dictionaries.\nSoftware Design: How to organise and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nNetworking: How to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nPersistent Local Data Storage: How to use Core Data, Realm, Codable and User Defaults to store your app data locally.\nHow to Implement In-App Purchases with Apple StoreKit\nMachine Learning: How to make artificially intelligent apps and build your own machine learning models using iOS 12's new CoreML2 and CreateML frameworks.\nAugmented Reality: How to create 3D objects in augmented reality and create incredible 3D animations and real-life interactions using Apple's latest ARKit2 framework.\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos on YouTube. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it and why over 18,000 students rated it 5 stars!\nDon't waste your money\nInside this course, you're getting exactly the same course materials and curriculum as our 12 week in-person programming bootcamp. Instead of spending $8000 dollars and taking time off work, save loads of money by getting this course and do it at your own pace!\nDon't just take my word for it, see what my past students had to say about the course:\n\"You will not find a better teacher than Angela. She does a wonderful job of encouraging you to learn swift the right way. I want to encourage everyone thinking about taking this class to get it, as it is the BEST Swift programming class I've seen on anywhere and I've tried more than a few of them. If you are looking for an excellent swift programming course, stop there here because you have found it. You will learn Swift from the very beginning of programming all the way through making your own apps that you can upload to the App store.\" - Ian Hopjins\n\"SO GOOD!!! Retention rate is incredible because Angela does a great job in explaining and teaching every aspect of what we are doing. Most of the other instructors on Udemy put code on the screen and pretend nothing happened. This course is amazing! 5/5\" - Muhammad Ibrahim\n\"Angela is a spectacular teacher!\" - Marco Zanirato\n\"This course was terrific. Only after taking a few more courses from others that I realized how good this course was. This course taught me more than I was expecting, it provided great instructions and a lot of hands-on tasks to drill-in the concept.\" - Marc\n\"Best use of your money! I was a complete beginner but Angela made me a pro in weeks.\" - Burak Tunçbilek\n\"IT IS #1!!!!!!!!! Absolutely Amazing. The best iOS course i have ever taken. Angela explains everything the way it needs to be explained, so everything is easily understood. The concept of this course is built to make you learn, not just watch and repeat. Angela is highly educated and it is very much noticeable during the entire course. Again, it is fantastic. Thank you. Please create more courses!!!!!\" - Eduard Khachian\nAre you trying to choose between all the different iOS courses on Udemy? Take a look at what students on my course had to say about this:\nI have revamped my expectation for what a 5 star course should be for Udemy. Angela, you're awesome! I already rated the course as 5 stars early on (at about 20% completion), but after completing roughly 70% of the course, I can say this is my favourite Udemy course as of today. Brilliant course Angela! - Alberto L\n\"I took a lot of courses on Udemy and elsewhere and non of them were as clear and perfectly paced as this one! Angelas approach is really awesome, deep and clear.\" - Žan Fras\n\"I have taken several iOS courses, so far this course had the best explanation on swift and xcode documentation. The lecturer is kinda humorous sometimes which make this course even more enjoyable.\" - Bryan Pukanda\n\"I have taken lots of courses on udemy and elsewhere for self learning and i can tell you with all the honesty this is one course which i did not want it to end. It is like one of those movies that you wish keeps going. Whatever concepts are covered were covered very beautifully and made learning quite simple. I got so many answers to Why? in this course like how closures work and why they work that way... why delegates work that way. Thank you so much for this course.\" - Arun Lakhera\n\"I compare this to another top iOS class on Udemy, but I think that this one beats it. The reason? Angela doesn't show you a plethora of material and then say that we will discuss this later, or say \"just do this. You will see why later.\" She goes into the reason for doing something before doing it.\"  - Clyde Addison\nDo you have some experience developing iOS apps and wonder if this course is for you? Take a look at what students on my course had to say about this:\n\"This is the best-organized course for starting Swift that I've seen. The course is excellent for teaching Swift programming including vital information using Xcode, Github, Cocoapods, Stack Overflow, Alamofire, Firebase, REST APIs and all the services commonly used by app developers. They show all the ways of using Xcode and other services that took me months to learn willy nilly. Wish I had this course a year ago but even with a year of Swift experience I still found a lot of great information and helpful tips. Love all the extras the course provides especially the assets(graphics, sound files, etc) for practice projects as I'm always taking too much time to find some assets to play with. This course understands how to teach programmers by giving them the toolsets and abilities they need to build apps. The course teaches the foundation of the language as well as skills to build your knowledge and improve your troubleshooting skills. Angela is a wonderful speaker and should do the voiceovers on everyone's instructional videos, seriously. :)\" - Marcy Vernon\n\"Def. an amazing and awesome class for learning iOS programming. I've been coding for years and taken many programming related classes on Udemy and this is def. one of the best. The instructor walks you through all the in's and out's of developing apps for the iOS platform. Top Shelf A++ class.\" - Mirko Cukich\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's most highly rated iOS 12 app development course.",
      "target_audience": [
        "If you are an absolute beginner to coding, then take this course.",
        "If you are a seasoned programmer, then take this course to to get up to speed quickly with Swift 4.2 and native app development. Start with the Xcode walkthrough lesson and we'll get you familiar with iOS development in no time!",
        "If you are switching from Objective-C to Swift then this is a fast-track way of doing it. You can get started straight away with the Intermediate Swift Language module.",
        "If you are a pro iOS developer and want to quickly get up to date with Apple's new iOS 12 APIs, then start with the modules on ARKit2 and CoreML2."
      ]
    },
    {
      "title": "Beast Android Development: Firebase Necessities",
      "url": "https://www.udemy.com/course/become-a-beast-android-developer-firebase-necessities/",
      "bio": "Learn how to store user accounts, create real time databases, and implement Facebook login with Googles Firebase.",
      "objectives": [
        "Implement Googles Firebase as a backend for android apps.",
        "Save user information and authenticate users using Firebase.",
        "Create and show a real time database using Firebase.",
        "Use Facebooks login API to register and autheticate users.",
        "Effectively use an event bus and android flavor to organize server code.",
        "Check for certain errors client side before a server request is sent.",
        "Appropriately handle firbase errors."
      ],
      "course_content": {
        "Preparing Our Project": [
          "Introduction",
          "Getting our dependencies/Adding a flavor",
          "Square's Otto",
          "Adding Firebase to our project"
        ],
        "Registering/Logging In Users": [
          "Registration and login screen Pt.1",
          "Registration and login screen Pt.2",
          "Registration and login screen Pt.3",
          "Registering a user Pt.1",
          "Registering a user Pt.2",
          "Logging in a user",
          "Facebook Login API Pt.1",
          "Facebook Login API Pt.2",
          "Facebook Login API Pt.3"
        ],
        "Authenticating Users/Log Out Feature": [
          "Creating a splash screen and authentication check",
          "Bug Fix",
          "Logging a user out",
          "Finishing user accounts Pt.1",
          "Finishing user accounts Pt.2"
        ],
        "Real Time Data Base": [
          "Adding a shopping list Pt.1",
          "Adding a shopping list Pt.2",
          "Adding a shopping list Pt.3",
          "Using a recycler-view with Firebase Pt.1",
          "Using a recycler-view with Firebase Pt.2",
          "Deleting a shopping list Pt.1",
          "Deleting a shopping list Pt.2",
          "Firebase sorting Pt.1",
          "Firebase sorting Pt.2"
        ],
        "Effective Firebase Structure/Updating Children/Challenges": [
          "Our new activity",
          "Changing a list name Pt.1",
          "Changing a list name Pt.2",
          "Changing a list name Pt.3",
          "Challenge #1: Adding items to a shopping list",
          "Challenge #1: Solution Pt.1",
          "Challenge #1: Solution Pt.2",
          "Challenge #2: Displaying shopping list items",
          "Challenge #2: Solution Pt.1",
          "Challenge #2: Solution Pt.2",
          "Challenge #3: Deleting an item/Changing an item name",
          "Challenge #3: Solution Pt.1",
          "Challenge #3: Solution Pt.2",
          "Challenge #3: Solution Pt.3",
          "Challenge #4: Adding a bought by feature/Deleting a shopping list and items",
          "Challenge #4: Solution Pt.1",
          "Challenge #4: Solution Pt.2"
        ],
        "Sharing with Firebase": [
          "Challenge #5a: Allowing users to add friends",
          "Challenge #5a: Solution Pt.1",
          "Challenge #5a: Solution Pt.2",
          "Challenge #5a: Solution Pt.3",
          "Challenge #5b: Allowing users to share a shopping list",
          "Final Challenge: Putting it all together",
          "Congratulations/Thank you!"
        ],
        "Extra: Firebase Security": [
          "Validation Pt.1",
          "Validation Pt.2"
        ]
      },
      "requirements": [
        "Download and install Android Stuidos.",
        "Have two working android devices for development. Emulators are acceptable.",
        "Have an excellent grasp on the object oriented programing language java.",
        "Understand how to use android butterknife.",
        "Understand how to use an event bus to decouple difference parts of an android application. We will be using Squares otto for this course.",
        "Have a clear understanding of android topics such as the activity life cycle, flavors, and dialogs.",
        "Obtain your SHA1 development fingerprint",
        "Have excellent experience debugging android apps"
      ],
      "description": "This is a course for advanced android developers that showcases Googles Firebase. You as the student will grasp Firebase by building one complicated shopping list app from start to finish with the instructor.\nFirebase will be used to register and authenticate users into our application, create and display a real time database, and allow a sharing feature between users. In addition to learning about Firebase, advanced android topics are shown as well. These topics include checking for user errors client side, using an event bus, and finally implementing the Facebook login API.\nThe course is structured as a code along however towards the end you will be presented with challenges. These challenges will allow you to put your Firebase knowledge to the test and more importantly push you as a developer. At the end of the course, you will have your final challenge and unlike the other challenges, there will be no solution. However, the instructor will be there to help and guide you as needed.\nIt is critical to have a back end for any android application. Even if user authentication if not needed, the apps data should be stored somewhere other then the users phone. By taking this course, you will be able to use one of the most powerful back ends out there. With over 10 hours of content, you will obtain a clear understanding of Firebase.",
      "target_audience": [
        "This course is designed for an advanced android developer who wants to learn about Firebase.",
        "If you are looking for a beginner this course is not for you.",
        "Intermediate developers should read the course requirements before proceeding."
      ]
    },
    {
      "title": "The Complete Android 14 & Kotlin Development Masterclass",
      "url": "https://www.udemy.com/course/android-kotlin-developer/",
      "bio": "Learn Android 14 App Development From Beginner to Advanced Developer. Build Apps like Trello, 7Min Workout, Weather App",
      "objectives": [
        "You can build any Android app you can think of. No matter if it is an idea that you or your friends have, or if it is a contract job that you need to develop.",
        "You will build Apps for your portfolio to apply for jr. Android developer Jobs.",
        "You Will Be Proficient in XML",
        "You Will Be Proficient using Jetpack Compose",
        "You'll be able to work as an Android freelancer and work from anywere in the world.",
        "Publish your apps on Google Play and generate revenue with Google Pay and Google Ads",
        "You'll be able to develop cloud apps using Google Firebase",
        "You will be very confident using Kotlin and programming in general"
      ],
      "course_content": {
        "Day 1 - Setting Everything Up": [
          "What you will learn in this course and how is it structured",
          "Thanks a lot for taking the course",
          "How to get most out of this course",
          "Kotlin Updates and Why you should Not Worry",
          "WARNING Android and Kotlin Updates and how they affect this course",
          "DOWNLOAD LINK for Android Studio!",
          "Day 1 - Downloading Android Studio",
          "Day 1 Installing Android Studio",
          "Install Android Studio on Linux",
          "Day 1 - Setting up our First Project",
          "Day 1 - Overview of the Android Studio Interface",
          "Day 1 - Understanding Gradle",
          "Day 1 - Changing the Scaling in Android Studio",
          "Day 1 - Setting up our Emulator",
          "Day 1 - Tip of the Day",
          "Day 1 - Changing our code for the first time",
          "Day 1 - Understanding Preview",
          "Day 1 - Imports and Packages",
          "Day 1 - Understanding the MainActivity OnCreate and Composable",
          "Let's test your initial understanding and see if you are ready for the next day!",
          "Day 1 - Finishing Day 1"
        ],
        "Day 2 - Rock Paper Scissors and Kotlin Basics": [
          "Day 2 - Welcome to Day 2",
          "Day 2 - Overview of what Rock Paper Scissors is build of",
          "Day 2 - Overview of what variables are",
          "Day 2 - Int data type",
          "Day 2 - Running Hello World",
          "Day 2 - Val vs Var and print ints on the console",
          "Coding Exercise - Understanding Variable Types and Printing in Kotlin",
          "Day 2 - Int, Long, Short, Byte and specifying the type manually",
          "Day 2 - Float and Double",
          "Coding Exercise - Demonstrate the use of floating point data types in Kotlin",
          "Day 2 - Unsigned Integers",
          "Day 2 - Booleans true false negation",
          "Coding Exercise - Understanding Booleans in Kotlin",
          "Day 2 - Char, Unicode and Backslash escape character",
          "Day 2 - Strings",
          "Day 2 - If Else Statements",
          "Day 2 - Readln and toInt to convert strings into int variables",
          "Day 2 - Else if and the in keyword",
          "Coding Exercise - Exploring \"if-else if-else\" in Kotlin",
          "Day 2 - Rock Paper Scissors Part 1 - Getting The Computers choice",
          "Day 2 - Rock Paper Scissors Part 2 - Finding out the winner",
          "Day 2 - Rock Paper Scissors Part 3 - Presenting the Winner",
          "Day 2 - While loops with counters",
          "Day 2 - While loops with user input",
          "Coding Exercise -String to Integer Conversion and Basic Input Handling in Kotlin",
          "Coding Exercise - Validate Player Input in Rock-Paper-Scissors Game",
          "Day 2 - Finishing Day 2",
          "Summary of Day 2",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ],
        "Day 3 - Functions, Objects and Coffee Machines": [
          "Day 3 - Welcome to Day 3",
          "Day 3 - Amy and her Coffee Function",
          "Day 3 - Adding Sugar - Functions with Parameters",
          "Sugar Spoon Grammar",
          "Day 3 - Quiz Challenge Solution - 1 Spoon 2 Spoons",
          "Coding Exercise - Enhancing the Coffee Machine in Kotlin",
          "Day 3 - Quiz Challenge Solution - Who is the coffee for",
          "Day 3 - BONUS Quiz Challenge Solution - Who is the coffee for with user input",
          "Day 3 - Functions that return something",
          "Coding Exercise - User Input Arithmetic in Kotlin",
          "Day 3 - Quiz Challenge Solution - Get User Input to Add two numbers",
          "Day 3 - More about Return types",
          "Day 3 - Limitations of Output - Return Types",
          "Day 3 - Classes Story Time",
          "Day 3 - Creating our First Class and Object",
          "Day 3 - Understanding Constructors and Default Values",
          "Coding Exercise -Implementing a Kotlin Class with Constructors and Default Value",
          "Day 3 - Accessing and Changing Properties",
          "Day 3 - Data Classes and Coffee",
          "Day 3 - Finishing Day 3",
          "Summary of Day 3",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ],
        "Day 4 - Lists and Objects": [
          "Day 4 - Welcome to Day 4",
          "Day 4 - Multiline Comments",
          "Day 4 - Listof and MutableListOf",
          "Day 4 - Index in Lists",
          "Day 4 - Modifying specific items in a List",
          "Day 4 - Set Method on Lists",
          "Day 4 - Contains Method - Check if item is in the list",
          "Coding Exercise - List Manipulation Practice in Kotlin",
          "Day 4 - For Loops with Lists",
          "Day 4 - Getting the Index in a for loop",
          "Coding Exercise - Looping Through Lists in Kotlin",
          "Day 4 - BankAccountApp - Private Keyword and Defining List Type",
          "Day 4 - BankAccountApp - Implementing the functionality",
          "Coding Exercise - Enhancing the BankAccount Class in Kotlin",
          "Day 4 - Finishing Day 4",
          "Summary of Day 4",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ],
        "Day 5 - Our First App - Unit Converter": [
          "Day 5 - Welcome to Day 5",
          "Day 5 - XML and Jetpack Compose",
          "Day 5 - Creating a Project and Understanding the Code with our New Knowledge",
          "Day 5 - Creating our own Composables and Understanding Column",
          "Day 5 - OutlinedTextField and Anonymous Functions",
          "Day 5 - Adding a Preview",
          "Coding Exercise - Implementing and Previewing Composables in Jetpack Compose",
          "Day 5 - Button, onClick and Toast",
          "Day 5 - Box, Icons and DropDownMenus",
          "Day 5 - Modifier, VerticalArrangement and HorizontalAlignment",
          "Day 5 - Spacer vs Padding",
          "Coding Exercise - Exploring Spacing: Padding vs Spacer in Jetpack Compose",
          "Day 5 - Adding DropdownMenus and DropDownMenuItems",
          "Day 5 - Finishing Day 5",
          "Summary of Day 5",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ],
        "Day 6 - Unit Converter Part 2 and Understanding State": [
          "Welcome to Day 6",
          "Day 6 - State - Recomposition - Remember and MutableState",
          "Day 6 - Captains Remember States and Treasures",
          "Coding Exercise: Enhancing the Captain Game with Additional Features",
          "Day 6 - Challenge Solution - Storm or Treasure",
          "Day 6 - Understanding the by keyword",
          "Day 6 - Implementing State to our OutlinedTextField",
          "Day 6 - Implementing iExpanded for DropdownMenu and collapse it",
          "Day 6 - Converting and Finishing the DropDownMenu Input",
          "Day 6 - Taking Care of the right output and Bug fixing",
          "Day 6 - Changing the Font of our Text",
          "End of Day 6",
          "Summary of Day 6",
          "DOWNLOAD SOURCE - UNIT CONVERTER",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ],
        "Day 7 - Shopping List App - Learning Loads of UI Features": [
          "Welcome to Day 7",
          "Day 7 - The Shopping List App",
          "Day 7 - Starting with the Shopping List UI by adding a button",
          "Day 7 - Lucy's Infinite Bookshelf and Jamies LazyColumn",
          "Day 7 - Adding the LazyColumn and the Data Class",
          "Day 7 - Moving our ShoppingListApp Code into a separate file",
          "Day 7 - Understanding and setting up the AlertDialog",
          "Day 7 - Modifying our AlertDialog and Understanding that there",
          "Day 7 - Finishing our AlertDialog and saving the Shoppinglist item",
          "Day 7 - Setting up how a listitem should look like",
          "Day 7 - A little more on Lambda expressions",
          "Day 7 - Finishing our ShoppingListItem Composable using IconButtons",
          "Day 7 - ShoppingItemEditor",
          "Day 7 - Map Keyword",
          "Day 7 - Copy Method",
          "Day 7 - let and nullable",
          "Day 7 - Finalizing the App",
          "Understanding the Shopping List App Composable Structure",
          "Day 7 - Finishing Day 7",
          "Summary of Day 7",
          "DOWNLOAD SOURCE - SHOPPING LIST APP",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ],
        "Day 8 - MVVM - Model View ViewModel - Architecture - Counter App Part 2": [
          "Welcome to Day 8",
          "Day 8 - Kingdom of Appdom and The Royal Orchestra MVVM",
          "Coding Exercise - Implement a Counter App using ViewModel in Kotlin",
          "Day 8 - Counter App - Rotating Phone and Losing State",
          "Day 8 - Converting Counter App with MVVM",
          "Day 8 - Functions that didn't exist and could be called",
          "Day 8 - Inheritance 2 - Override and Super Keywords",
          "Day 8 - Interfaces - learning from multiple sources",
          "Day 8 - Why Interfaces",
          "Day 8 - Setting up the Model and the Repository for MVVM",
          "Day 8 - Why MVVM and Why Repository",
          "Day 8 - Finishing Day 8",
          "Summary of Day 8",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ],
        "Day 9 - JSON, Retrofit, HTTP Requests and Restful APIs - Recipe App": [
          "Welcome to Day 9",
          "Day 9 - The Scroll of DataVille - JSON Analogy",
          "Day 9 - JSON - what it really stands for",
          "Day 9 - Understanding the Structure of JSON",
          "Understanding JSON and Data Classes in Kotlin",
          "Day 9 - TheMealDB and how we will use it",
          "Day 9 - Adding Dependencies for ViewModel, Network Calls JSON",
          "Day 9 - Setting up our Categories Data Classes",
          "Day 9-Using Retrofit, the Suspend Key and Coroutines to get Access to Categories",
          "Day 9 - Try And Catch And Finally",
          "Day 9 - Setting up Our MainViewModel and Fetching Data",
          "Day 9 - Preparing our RecipeScreen",
          "Day 9 - How each Category Item should look like",
          "Day 9 - Adding Internet Permission and Running the App",
          "Day 9 - Going through the whole flow of our application",
          "Day 9 - Finishing Day 9",
          "Summary of Day 9",
          "DOWNLOAD SOURCE - MY RECIPE APP",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ],
        "Day 10 - Navigation in Android": [
          "Welcome to Day 10",
          "Day 10 - Setting up First Screen for Navigation",
          "Day 10 - Setting up The Second Screen for Navigation",
          "Day 10 - NavHost NavController and Navigating",
          "Coding Exercise - Add a 3rd Screen to navigate to and do so",
          "Day 10 - Passing Variables from One Screen To Another",
          "Coding Exercise - Pass Age as well",
          "Day 10 - Setting up the CategoryDetailScreen for our Recipe App",
          "Day 10 - Preparing our UI for Navigation",
          "Day 10 - Setting up the Routes with a Sealed Class",
          "Day 10 - Implementing the Navigation and Passing Objects",
          "Day 10 - Serialization and Deserialization with Parcelable",
          "Day 10 - Finishing Day 10",
          "Summary of Day 10",
          "DOWNLOAD SOURCE - DAY 10 - NAVIGATION SAMPLE AND MYRECIPEAPP",
          "CHEATSHEET - Download your Daily Cheatsheet here!"
        ]
      },
      "requirements": [
        "A Windows, Mac or Linux Computer",
        "No Programming knowledge required - I'll teach you everything you need to know"
      ],
      "description": "Unlock Your Dream Career with Our Comprehensive Android Masterclass!\nDreaming of a lucrative career in Android development? Or perhaps you have a killer app idea but don't know how to bring it to life? Look no further! Whether you're a complete beginner or a programmer looking to diversify your skill set, our course is designed just for you.\nWhy Choose This Course?\nInstructor-Led by Industry Expert: Learn from Denis Panjuta, a German engineer with 8+ years of programming and teaching experience.\nAll-Encompassing Curriculum: From Kotlin to Firebase, you'll gain mastery over all critical aspects of Android development.\nHands-On Experience: Our course is jam-packed with exercises, example applications, and demos to solidify your learning.\nTop-of-the-Line Content:\n45+ hours of HD video content\nIn-code step-by-step guides\nNumerous practical exercises\nAnd more!\nBecome Proficient in:\nKotlin and Object-Oriented Programming\nControl flows and Data Structures\nNetworking & Asynchronous API Calls\nThird-Party Libraries: GSON, Google Places, RETROFIT, and more\nDevice Features: Camera, Gallery, SQLite, GPS\nBest Practices in Kotlin and Android Development\nWhat Will You Build?\nIn Android 14:\nA Unit Converter\nA Shopping List APP\nA GeoLocation Application\nA Music Application\nAnd still more to come!\nIn Android 12:\nA Trello Clone\nA Quiz App\nA 7-Minute Workout App\nA Weather App\nA Drawing App\nAnd many more!\nLIMITED TIME OFFER: 30-DAY Money-Back Guarantee!\nSo, what's holding you back? Secure your spot today and start building a brighter future!",
      "target_audience": [
        "If you have an idea for an App, then take this course.",
        "If you want to quit your job and work as a developer from anywhere in the world, e.g. a beautiful beach, then take this course",
        "If you have no idea about programming and want to get started, then this course is for you.",
        "If you don't want to waste any time becoming a developer, this is the right fast track course for you."
      ]
    },
    {
      "title": "Kotlin for Android: Beginner to Advanced",
      "url": "https://www.udemy.com/course/devslopes-android-kotlin/",
      "bio": "Kotlin is an expressive, concise & powerful development language on Android. Learn everything you need to know to start",
      "objectives": [
        "Build professional, fully functional apps using Kotlin",
        "Apply for Jr. Android app development jobs",
        "Submit apps to the Google Play store"
      ],
      "course_content": {
        "Android Studio and First App": [
          "Intro to Kotlin and Android Course",
          "First look at Kotlin",
          "Install JDK and Android Studio for Mac",
          "Install JDK and Android Studio for Windows",
          "Android Emulator",
          "DinnerDecider Part 1",
          "DinnerDecider Part 2",
          "DinnerDecider Part 3",
          "Exercise: Make your own decider!",
          "Run on a real device!",
          "Run on a real device from Windows!",
          "Quiz: Kotlin"
        ],
        "Kotlin Foundation": [
          "Installing IntellijIDEA for Mac",
          "Installing IntellijIDEA for Windows",
          "Variables with Kotlin",
          "Strings with Kotlin",
          "Numbers and Operators with Kotlin",
          "Quiz: Kotlin Foundation",
          "Functions with Kotlin",
          "Exercise: Practice writing functions",
          "Conditional Logic with Kotlin",
          "Collections with Kotlin",
          "Loops with Kotlin",
          "Nullability with Kotlin",
          "Classes and Inheritance with Kotlin",
          "Exercise: You’re so classy!",
          "Lambda with Kotlin",
          "Quiz: Knowledge Check"
        ],
        "Terminal & Version Control": [
          "Intro to Git and Terminal",
          "Git & Version Control - The Fun Way",
          "Terminal Basics - Changing directories",
          "Terminal Basics - Creating directories & files",
          "Terminal Basics - copying & renaming files",
          "Terminal Basics - deleting files & directories",
          "Git Basics",
          "Setting up Github",
          "Working with Local & Remote Repositories",
          "Handling Git Merge Conflicts",
          "Exercise: Pushing your project to GitHub",
          "Using Git with Android Studio",
          "Importing Projects and Merge Conflicts"
        ],
        "All About Layout": [
          "Intro to Android Constraint Layout",
          "Phone Portrait Layout Part 1",
          "Phone Portrait Layout Part 2",
          "Quiz",
          "Tablet Portrait Layout",
          "Tablet Landscape",
          "Exercise: Make your own layout"
        ],
        "Activity Lifecycle": [
          "Intro to the app",
          "Welcome Screen Layout",
          "League Selection Layout",
          "Intents and Context",
          "Lifecycle Overview",
          "Quiz",
          "Lifecycle in action",
          "Skill Selection Layout",
          "Buttoning up the Activities",
          "Toggling the skills",
          "Parcelable",
          "Instance State",
          "Swoosh Challenge",
          "Exercise: Taking it to the big time."
        ],
        "List and Recycler Views": [
          "CoderSwag Intro",
          "Data Structure",
          "Simple ListView",
          "Custom List Adapter",
          "View Holder",
          "RecyclerView Adapter",
          "Quiz",
          "RecyclerView Clicks",
          "Product List View",
          "Product Recycle Adapter",
          "Exercise: Show me the product."
        ],
        "Smack Chat App": [
          "Smack Intro",
          "Project Setup",
          "MainActivity UI Setup",
          "Login Activity UI",
          "CreateUserActivity UI",
          "Generate Avatar and Background Color",
          "Webrequests and APIs",
          "Hosting API",
          "Local Hosting API",
          "Quiz",
          "Our first web request",
          "Registering a user",
          "Login User",
          "Creating User",
          "Polishing up Create User Activity",
          "Broadcast Receiver",
          "Find User",
          "Polishing up the Login Activity",
          "Add Channel Dialog",
          "Sockets",
          "Socket.On",
          "Downloading Channels",
          "Shared Preferences",
          "Channel Selection",
          "Send and receive message",
          "Downloading Messages",
          "Displaying Messages",
          "Date Formatter"
        ],
        "Publishing Your App": [
          "Intro to Section - Google Play Store",
          "Side Loading",
          "Registering Account",
          "Removing Logs",
          "Generate Signed APK",
          "Store Listing",
          "Published!"
        ]
      },
      "requirements": [
        "Must have PC with Windows 8+ OR macOS OR Linux/Ubuntu",
        "Recommend having an actual Android device but it is not required"
      ],
      "description": "KOTLIN FOR ANDROID\nWelcome to the world's most comprehensive course on Kotlin for Android development. Whether your a developer coming from Java, or have NO Android experience, we start from the ground up and teach you everything you need to know how to build apps using Kotlin.\nWHY TAKE THIS COURSE?\nWe don't only focus on the Kotlin language like most courses on Kotlin do. Learn to code the Devslopes way. We'll teach you everything about developing with Kotlin, working with interface builder and all the SDK's you actually need to build apps. And as always, you'll be building professional, amazing looking apps from start to finish.\nHere are some of the things you'll be able to do after taking this course:\n\nLearn to code how the PROs code - not just copy and paste\nLearn everything you need to know about submitting to the Google Play store\nBuild beautiful Apps - We don't build trash - you'll create amazing real-world apps\nBuild Real Projects - You'll get to build projects that help you retain what you've learned\nWHAT YOU WILL LEARN:\nInstalling JDK and Android Studio as well as IntelliJ\nHow to run apps on own device\nThose looking to get a full time job as a developer\nKotlin Foundations - Variables, Strings, Collections, Classes, Inheritance, Lambda Expressions\nIn depth look at activity life cycle, intents, and context\nDeep dive on constraint layout and supporting multiple device sizes.\nEnhance your UI with custom drawables\nUsing Kotlin with Android SDK\nComprehensive overview of List and Recycler Views\nLearn all about web requests and working with APIs and even implement web sockets in a fully functional Slack app clone.\nDon't forget to join the free live community where you can get free help anytime from other students.",
      "target_audience": [
        "This course is for absolute beginners with no coding experience",
        "Programmers coming from Java who want to learn Kotlin for Android"
      ]
    },
    {
      "title": "Mastering Jetpack Compose: Building Dynamic User Interfaces",
      "url": "https://www.udemy.com/course/mastering-jetpack-compose/",
      "bio": "Mastering Jetpack Compose, Navigation, MVVM, Retrofit, ROOM DB, Kotlin Basics, OOP, Lambdas, View Model, State & More...",
      "objectives": [
        "What’s Jetpack Compose and Its Advantages over the Imperative way of building Android Apps",
        "Kotlin Programming basics, Intermediate and advanced concepts (Optional - you can skip if you need to)",
        "Master how to customize UI elements in Compose",
        "Understand how MutableState, and Flow work with Composable Functions",
        "Master how to build 8 Jetpack compose apps that range from simple to complex (Unit Converter, Actors App, Library App, Courses App, Navigation App, Cards App",
        "Learn how to Parse JSON data from APIs using Retrofit",
        "Build Compose apps that use the Android ROOM database",
        "And so much more (check out the curriculum to get the complete list of topics!)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installing Android Studio & Emulator": [
          "Installing Android Studio + SDK",
          "Creating the Emulator (Android Virtual Device)"
        ],
        "Kotlin Basics": [
          "Running Kotlin Projects in Android Studio",
          "Kotlin Syntax",
          "Printing the Output",
          "Comments",
          "Variables",
          "Data Types",
          "Numbers",
          "Decimals",
          "Boolean",
          "Characters",
          "Operators",
          "Operators [Part 2]",
          "Strings",
          "Conditional Statements",
          "When Expressions",
          "While Loop",
          "Do While Loop",
          "Break & Continue",
          "Arrays",
          "For Loop",
          "Ranges"
        ],
        "Object Oriented Programming": [
          "Creating Functions",
          "Passing Parameters",
          "Function Parameters",
          "What's OOP?",
          "Classes",
          "Objects",
          "Primary Constructor",
          "What's Inheritance",
          "Inheritance Example",
          "Secondary Constructor",
          "Super Keyword",
          "Getters & Setters",
          "Modifiers",
          "Abstract Class",
          "Interfaces",
          "Nested Classes"
        ],
        "Data Structures in Kotlin": [
          "Collections Intro",
          "Immutable List",
          "Mutable List",
          "Immutable Set",
          "Mutable Set",
          "Immutable Map",
          "Mutable Map"
        ],
        "Composable Functions": [
          "Introduction to Jetpack Compose",
          "Composable Functions",
          "SetContent()",
          "@Preview Annotation",
          "Modifiers"
        ],
        "Basic Composables": [
          "Text Composable",
          "Layouts",
          "Paddings & Margin",
          "Coding Challenge",
          "Scrollable Text with Modifiers",
          "Rows & Columns",
          "Box Layout",
          "Arrangement & Alignment",
          "Button Composable",
          "Custom Buttons",
          "Types of Buttons",
          "Text Fields",
          "Image Composable",
          "Custom Images"
        ],
        "State in Jetpack Compose": [
          "Introduction to State",
          "Without Using State",
          "Using Mutable State",
          "Recomposition",
          "Remember Keyword",
          "Delegation in Kotlin",
          "Quick Recap [Recomposition, By & MutableState]",
          "Stateful Composables",
          "State Hoisting",
          "Stateful to Stateless"
        ],
        "More Composables": [
          "Checkbox Composable",
          "Switch Composable",
          "Radio Buttons Composable",
          "Radio Group",
          "Texts Beside Radio Button",
          "List of Checkboxes",
          "Circular Progress Indicator Composable",
          "Coding Challenge #2 - The Progress App",
          "Scaffold Composable",
          "Top App Bar Composable",
          "Top App Bar Customisation",
          "Bottom Navigation Composable",
          "Bottom Navigation Items",
          "Floating Action Button",
          "Extended Floating Action Button",
          "Card Composable"
        ],
        "Higher Order Functions in Kotlin": [
          "Function Literals in Kotlin",
          "Lambda Expressions",
          "Types of Lambda Expressions",
          "Anonymous Functions",
          "Shorter Syntax of Anonymous Functions",
          "Types of Anonymous Functions",
          "Higher Order Functions",
          "Deep Dive into Higher Order Functions",
          "\"it\" Keyword",
          "\"it\" Example",
          "Passing Anonymous Function as Parameter",
          "Passing & Returning Regular Function from HOF"
        ]
      },
      "requirements": [
        "No Programming Experience"
      ],
      "description": "Jetpack Compose is a modern and powerful UI toolkit for building Android applications. In this comprehensive course, you will learn how to leverage Jetpack Compose to create dynamic and visually stunning user interfaces (UI) for your Android apps.\nWhether you're a beginner or an experienced Android developer, this course will equip you with the skills and knowledge needed to master Jetpack Compose and take your UI development to the next level.\n\n\nCourse Highlights:\nIntroduction to Jetpack Compose: Gain a solid understanding of the core concepts and principles behind Jetpack Compose. Learn how it differs from traditional Android UI frameworks and why it's becoming the preferred choice for UI development.\nComposable Functions: Explore the power of composable functions and how they enable a declarative and modular approach to building UI components. Discover the various Compose primitives, modifiers, and layouts to design responsive and flexible user interfaces.\nState Management: Dive into the world of state management in Jetpack Compose. Understand how to handle UI state, manage user interactions, and update the UI dynamically. Learn about the different state management options available, including state hoisting and using ViewModel.\nMaterial Design: Discover how to implement beautiful and intuitive Material Design interfaces using Jetpack Compose. Learn about the MaterialTheme, built-in components, typography, theming, and animations, enabling you to create delightful and consistent user experiences.\nNavigation and Routing: Master the art of navigating between screens and handling complex UI flows in your Android apps. Explore Jetpack Compose's navigation component and learn how to implement navigation graphs, handle deep links, and pass arguments between destinations.\nCustom UI Components: Unlock the full potential of Jetpack Compose by creating your own custom UI components. Understand the process of designing reusable and modular components and explore techniques for creating complex UI layouts.\nMVVM: Learn how to build apps following the clean architecture patterns \"MVVM\"  and getting the data from remote data source \"API & JSON\" and local data source \"ROOM database\"\nROOM Database: Discover the ROOM database in android applications, and how to store data locally.\nRetrofit: Dive into fetching data from the servers and parse JSON files into android apps.\nBy the end of this course, you will have a strong foundation in Jetpack Compose and be able to build sophisticated, performant, and responsive user interfaces for your Android apps. Join us on this learning journey and unlock the true potential of Jetpack Compose to create exceptional UI experiences.",
      "target_audience": [
        "Beginner Android developers",
        "Android Developers curious about building modern android apps using Jetpack Compose and Kotlin",
        "Android Developers who want to learn Kotlin and build Android apps with Jetpack Compose",
        "Anyone who wants to Learn Kotlin and Android Development"
      ]
    },
    {
      "title": "Angry Birds, Crossy Road & more: Game Development in Swift 4",
      "url": "https://www.udemy.com/course/angry-birds-crossy-road-game-development-swift-4-spritekit-scenekit/",
      "bio": "Learn how to develop mobile games like Angry Birds, Crossy Road, Color Switch and more for iOS11 in Swift 4",
      "objectives": [
        "How to develop an Angry Birds App",
        "How to develop a Crossy Road App",
        "How to develop a Color Switch App",
        "How to develop a Simon Says App",
        "How to develop 2D Games for iOS11 with SpriteKit",
        "How to develop 3D Games for iOS11 with SceneKit",
        "How to do App Store Optimization",
        "How to create 3D Models for Mobile Games in MagicaVoxel"
      ],
      "course_content": {
        "Introduction & Curriculum": [
          "Welcome to the Course",
          "Resources",
          "Important Notice"
        ],
        "UIKit Games": [
          "UIKit Framework Introduction",
          "Simon Says Introduction",
          "Simon Says 1 - Project Setup and Layout",
          "Simon Says 2 - Circular Buttons",
          "Simon Says 3 - Playing Color Sequences",
          "Simon Says 4 - Repeating Color Sequences",
          "Simon Says 5 - Multiplayer"
        ],
        "SpriteKit Crashcourse": [
          "SpriteKit Introduction",
          "Introduction to the SpriteKit Framework",
          "How to create a SpriteKit Project in Xcode",
          "Introduction to SKNode & SKScene",
          "SKNode & SKScene Example",
          "Introduction to SKSpriteNode",
          "SKSpriteNode Example",
          "Introduction to SKActions",
          "SKActions Example",
          "Introduction to SKPhysics",
          "SKPhysics Example",
          "Introduction to the Asset Catalogue",
          "Asset Catalogue and Animation Example",
          "Introduction to the Update Loop",
          "Introduction to SKTileMapNode",
          "SKTileMapNode Example Part 1",
          "SKTileMapNode Example Part 2",
          "Other Node Classes",
          "The SpriteKit Button Class"
        ],
        "2D Games with the SpriteKit Framework": [
          "Color Switch 1 - Project Setup",
          "Color Switch 2 - Game Scene",
          "Color Switch 3 - Physics",
          "Color Switch 4 - Physics Delegate",
          "Color Switch 5 - Game Logic",
          "Color Switch 6 - Points",
          "Color Switch 7 - Adding a Menu",
          "Color Switch 8 - Persisting Data with UserDefaults",
          "Color Switch 9 - Finishing Touches"
        ],
        "Angry Birds": [
          "Angry Birds 1 - App Template",
          "Angry Birds 2 - TileMap",
          "Angry Birds 3 - Camera Node",
          "Angry Birds 4 - Panning",
          "Angry Birds 5 - Camera Constraints",
          "Angry Birds 6 - Pinch to Zoom",
          "Angry Birds 7 - Bird Class",
          "Angry Birds 8 - Moving the Bird",
          "Angry Birds 9 - Bird Constraints",
          "Angry Birds 10 - Camera Updates",
          "Angry Birds 11 - Round States",
          "Angry Birds 12 - Block Class",
          "Angry Birds 13 - Contact Delegate",
          "Angry Birds 14 - Challenge Solution",
          "Angry Birds 15 - Block Graphics",
          "Angry Birds 16 - Bird Graphics",
          "Angry Birds 17 - Scene Manager Delegate Protocol",
          "Angry Birds 18 - Menu Scene",
          "Angry Birds 19 - Level Scene",
          "Angry Birds 20 - New Levels",
          "Angry Birds 21 - Animation",
          "Angry Birds 22 - Level Data",
          "Angry Birds 23 - Menu Backgrounds",
          "Angry Birds 24 - Adding the Slingshot",
          "Angry Birds 25 - Enemies Part 1",
          "Angry Birds 26 - Enemies Part 2",
          "Angry Birds 27 - PopupNode Class",
          "Angry Birds 28 - In Game Popups",
          "SpriteKit Recap"
        ],
        "3D SceneKit": [
          "SceneKit Introduction",
          "SceneKit Basics 1 - Template Project",
          "SceneKit Basics 2 - Scene Setup",
          "SceneKit Basics 3 - First Nodes",
          "SceneKit Basics 4 - SceneView Properties",
          "SceneKit Basics 5 - Challenge Solution",
          "SceneKit Basics 6 - Physics & Gravity",
          "SceneKit Basics 7 - Physics & Forces Part 1",
          "SceneKit Basics 8 - Physics & Forces Part 2",
          "Crazy Road 1 - Project Setup",
          "Crazy Road 2 - Floor & Camera Nodes",
          "Crazy Road 3 - Grass Floor",
          "Crazy Road 4 - Lanes",
          "Crazy Road 5 - Utility",
          "Crazy Road 6 - Lights",
          "Crazy Road 7 - The Player Node",
          "Crazy Road 8 - Jumping",
          "Crazy Road 9 - Camera Updates",
          "Crazy Road 10 - Lane Updates",
          "Crazy Road 11 - Vegetation",
          "Crazy Road 12 - Vehicles",
          "Crazy Road 13 - Vehicle Driving Animations",
          "Crazy Road 14 - Adding PhysicsBodies",
          "Crazy Road 15 - Adding Collisions",
          "Crazy Road 16 - Blocking Directions",
          "Crazy Road 17 - Head Up Display",
          "Crazy Road 18 - Finishing Touches",
          "SceneKit Recap"
        ],
        "App Store Optimization": [
          "App Store Optimization - Introduction",
          "App Store Optimization - App Icon",
          "App Store Optimization - Keywords",
          "App Store Optimization - Screenshots & Videos",
          "App Store Optimization - Ratings, Reviews, Updates, Localization"
        ],
        "Create your own 3D Art with MagicaVoxel": [
          "Magica Voxel Introduction",
          "Magica Voxel Tutorial"
        ],
        "App Store Submission": [
          "App Store Submission Introduction",
          "App Store Submission - Prerequisites",
          "App Store Submission - iTunes Connect",
          "App Store Submission - Upload"
        ]
      },
      "requirements": [
        "Either a Mac or Macbook",
        "Xcode 9 or higher",
        "Basic knowledge of the Swift Programming Language"
      ],
      "description": "Become a mobile game developer by building some of the most famous iOS Games like Angry Birds, Crossy Road, Color Switch and more.\n\nMobile game development is an incredibly extensive and exciting topic, which is why we have created this complete course that will allow you to become part of the amazing world of mobile game development.\nIn each chapter of this course we’ll learn all there is to know about a certain framework. We’ll take an in depth look at its functionality and the theory behind it. Then we’re going to use what we’ve learned and apply it by creating multiple games from scratch.\nWe’ll start with simple games while getting to know the UIKit Framework, once we’ve gotten more comfortable we’ll advance to developing multiple 2D games with the SpriteKitFramework, which is the basis for most 2 dimensional iOS Games. We’ll start this chapter by developing our own version of the popular Color Switch app that will teach us already a lot about this framework.\nThen we’ll develop an incredible Angry Birds game from scratch, where we will learn how to design levels, work with physics and so much more.\nWe’ll then move on to the SceneKit Framework which is the basis for most of the 3 dimensional iOS games. To really understand the concepts we’re going to be working with them while developing our own version of the famous Crossy Road app.\nWhile developing this amazing app we will also teach you how to create your own 3D Models in MagicaVoxel that you can use in your own games or even sell.\nWe don’t just want to teach you how to develop games in this course. We want to really help you develop your game and publish it on the app store. That’s why we have an entire chapter dedicated to App Store Optimization, teaching you how to optimize your app store entry, so that you can get the most amount of downloads for your game. We’ll look at how you can use keywords, videos, screenshots, ratings and reviews to your advantage and increase your number of downloads.\nThis course is designed to provide the perfect balance between theory, working on real life projects and exercises to really enable anybody to create their own iOS Games.\nIt doesn’t matter if you already have some experience in the subject or not. This complete course will teach you all you need to know to make your game ideas become a reality - no matter what framework you would like to use. You get all of the resources like project files, graphics and much more and you’re free to do with them whatever you like.\nWe’ll also give you valuable tips that go far beyond the development of games and if you run into any problems or have any questions while taking this course, you can always count on us to help you. So if you want to learn how to make your own games for iOS and become a real game developer you should really join this course. I look forward to seeing you in the course.\nThis course was produced using Swift 4.0 and Xcode 9. The course is currently undergoing maintenance to update all projects to Xcode 10 and the downloads will be available shortly.",
      "target_audience": [
        "iOS Developers that want to develop their own games",
        "People that want to become Mobile Game Developers for iOS",
        "People that want to learn how to develop 2D & 3D Games for iOS"
      ]
    },
    {
      "title": "Flutter Web: Create A Responsive Sleek Developer Portfolio",
      "url": "https://www.udemy.com/course/flutter-web-create-a-responsive-sleek-developer-portfolio/",
      "bio": "Create beautiful and responsive portfolio with Flutter Web, to impress recruiters and employers, without HTML/CSS",
      "objectives": [
        "Build a Complete, Real World Website with Flutter Web and Firebase",
        "Build beautiful, fast and good quality website with Flutter Web",
        "Build a sleek portfolio to impress any recruiter",
        "Become proficient in one of the fastest growing technologies",
        "Build a website without learning HTML, CSS and Javascript"
      ],
      "course_content": {},
      "requirements": [
        "A computer",
        "Have at least 10 GB of free space in your computer",
        "All software or programmes used in this course is free to download and install",
        "Internet, that connects your computer to the world wide web (WWW)"
      ],
      "description": "Have you discovered Flutter and enjoyed the experience creating fast and beautiful apps? However, you want to create a website but do not want to learn another web framework or language? Well, this course Create A Beautiful Developer Portfolio, is for you!\nFlutter is not only great at creating fast and beautiful apps, it is now venturing into websites and desktops. Therefore, Flutter would be an excellent framework where you code once and build anywhere.\nThe course includes 7+ hours of HD video tutorials and build your programming knowledge while making a sleek looking portfolio website for prospective recruiters and employers.\nBy the end of this course, you will be ready to build your own fantastic looking Flutter Web websites and become a fully fledged Flutter developer.\nSign up today, and look forward to:\nOver 7 hours of HD video content, everything you will ever need to create a clean looking portfolio\n\n\nBuilding a website that use Firebase Hosting, FutureBuilder, Cards, Responsive Design, your own RSS Feed and so many more\n\n\nAll the knowledge you need to start building any website you want\nLevel up to be A Flutter Web Developer with This Course\nSo by the end of the course, you'll understand:\nFundamental concepts in Flutter e.g. Widget tree, state management, animations, theme data and many more\n\n\nFundamental programming concept in Dart e.g variables, constants, finals, lists, maps, futures and many more\n\n\nResponsive Design: How to make use of MediaQuery and Responsive builders to build for screens as big as 1080p to as small as an iPhone SE screen\nRSS Feed: you are able to update your blog sections using RSS feed and Medium as a blog source\nDon't just take my word for it, see what my past students had to say about my courses:\n\"First of all, hands off to the Instructor for making the course so lively and understandable. As a beginner, I didn't expect to understand the concept so well. Also, the assignments given have helped a lot to self-evaluate myself. Overall...a great experience!\" - Ash\n\"Haris is covering stuff that you won't find in other Flutter courses. He does so in a funny, engaging way. Pretty advanced stuff but easy to understand. Amazing how much he knows about Flutter and how well he delivers it.\" - Willard Jansen\n\"I thought the course was great.\" - JW Truver\n\"Yes, the way you present the class is great. The examples that you use to compare real life situations with programming is the one which I found the most engaging. As a beginner, I was able to understand about programming concepts better than I imagined. Thank you for that!\" - Aiswarya Deepak\n\"He's fast, funny, and straight to the point.\" - Jeffrey Heisler",
      "target_audience": [
        "If you are interested in web development and wanted to try building one without HTML, CSS, or Javascript",
        "If you have mobile development in Flutter and want to expand your skills as a web developer",
        "If you are a traditional web developer, and you want to try creating a website in another way"
      ]
    },
    {
      "title": "Build 15 Augmented Reality (AR) apps with Unity & Vuforia",
      "url": "https://www.udemy.com/course/develop-augmented-reality-book-ar-business-card-with-unity/",
      "bio": "Augmented reality (AR) tutorials on Markerless tracking, Cloud AR, 3D Object detection, + more with Unity & Vuforia",
      "objectives": [
        "Understand different forms of Augmented Reality and their applications",
        "Build 15 Augmented Reality Apps from scratch for Android & iOS",
        "Developing and ARBook app which will detect multiple image targets.",
        "Creating an interactive business card using AR Virtual buttons",
        "An AR greeting card app, which plays sound, and animation once opened.",
        "Detecting a real toy car using 3D Object tracking and superimposing a digital car on top of the real car.",
        "Tracking of cylindrical objects and placing digital models surrounding the cylinder",
        "Placing a life size Lamborghini car in real world using Markerless tracking",
        "Placing a life size drone in air using Vuforia Mid Air feature.",
        "Play / Pause video's in real world.",
        "Cloud recognition and best practices.",
        "Understand the basic difference between Virtual Reality & Augmented Reality",
        "Students will create AR apps by writing codes in C# programming language"
      ],
      "course_content": {
        "INTRODUCTION TO AUGMENTED REALITY": [
          "What is Augmented Reality",
          "WHAT IS VIRTUAL REALITY | Differences between AR & VR",
          "Installation of Unity, 2019.2 Update",
          "Session End Quiz"
        ],
        "Basics of Unity": [
          "Basics of Unity | Section Intro",
          "Understanding different panels in Unity",
          "Moving, rotating & scaling Gameobjects in Unity",
          "Game Panel in Unity",
          "Physics in Unity",
          "Increasing the light intensity",
          "Adding colors to Gameobject",
          "Adding textures to Gameobject",
          "Parent and child Gameobjects in Unity",
          "Local/Global and Pivot/Center tools in Unity",
          "Prefabs in Unity",
          "What are Scripts?",
          "Rotating the spheres",
          "Revolving the spheres"
        ],
        "AUGMENTED REALITY ONE (UPDATED 2020)": [
          "AUGMENTED REALITY ONE (ARONE) SECTION INTRODUCTION",
          "Importing Vuforia package inside Unity",
          "Importing Vuforia package via Vufora Core Samples",
          "Web Camera output and creating the ARONE License Key",
          "Capturing an Image",
          "Creating a Vuforia Database and uploading Image Targets",
          "Projecting Barbarian 3D Model on Image Target",
          "Testing the output on iPhone or iPad",
          "Building the app for Android devices"
        ],
        "AUGMENTED REALITY BOOK (ARBOOK) UPDATED": [
          "Sketching the Images for ARBook",
          "Importing the License Key",
          "Upload the Image Targets inside Vuforia Database",
          "Customising the Sun Image Target",
          "Customising the House Image Target",
          "Customising the Car Image Target",
          "Customising the Ship Image Target",
          "Customising the Aeroplane Image Target",
          "Adding and moving the cloud objects",
          "Understanding the problem behind Aeroplane Image Target",
          "Resetting the position of Aeroplane model",
          "Resetting the position of Cloud models",
          "Customising the AR Book Cover Image Target",
          "Integrating 3D Text",
          "Building the ARBook app"
        ],
        "AUGMENTED REALITY BOOK APPLICATION (LEGACY)": [
          "Outdated Section",
          "Augmented Reality Book Intro",
          "Sketching images on a drawing book",
          "Update: Importing Vuforia in Unity 2019.2 and later",
          "Setting Up License Key for ARBook app",
          "Customizing Sun Image Target",
          "Customizing the HOUSE Image Target",
          "Customizing the SHIP Image Target",
          "Customizing the CAR Image Target",
          "Customizing the FOREST Image Target",
          "Customizing the AeroPlane Image Target",
          "Adding Cloud models",
          "Customizing the ARBOOK Cover Image Target",
          "Adding 3D Text on top of Image Target",
          "Building the APK file of ARBOOK App",
          "Output of ARBook Application",
          "Problem related to Ship & Aeroplane Image Target",
          "DefaultTrackableEventHandler Script Update",
          "Solution for Ship & Aeroplane Image Target problem",
          "ARBOOK FINAL OUTPUT",
          "Reset the SHIP to it's original position",
          "Reset the Aeroplane and Cloud Gameobject"
        ],
        "SIMULTANEOUS IMAGE TRACKING USING A GREETING CARD (AR GREETING CARD)": [
          "Section Introduction",
          "Which greeting card to use?",
          "Importing the Vuforia package and adding the License key",
          "Creating Image Target within Unity",
          "Customising the first Image Target",
          "Creating a college on second Image Target",
          "Tracking multiple image targets simultaneously",
          "Playing a video file in Augmented Reality",
          "Playing an audio file when the card is opened",
          "Happy birthday text using 3D Text",
          "Crediting the author",
          "Building the app on an Android smartphone"
        ],
        "DESIGNING MENU'S INSIDE UNITY": [
          "Section Introduction",
          "Creating a Canvas and adding a Background image",
          "Adding a 2D UI Text",
          "Designing UI buttons inside the Canvas",
          "What is an Eventsystem in Unity",
          "Programming the UI buttons",
          "Programming Back and Exit button inside the AR Scene"
        ],
        "Virtual Buttons in Augmented Reality": [
          "Section Introduction",
          "Adding license key and database",
          "Creating a Virtual Button on the Image Target along with Sphere and Cube",
          "Programming the Virtual Button",
          "Building the Application"
        ],
        "AR Businesscard using Multiple Virtual Buttons": [
          "AR Businesscard section introduction",
          "Adding License Key and Database",
          "Creating Multiple Virtual Buttons",
          "Playing multiple video files on Image Target",
          "Deactivating the videos",
          "Programming the 3 Virtual Buttons",
          "Building the app and testing the output"
        ],
        "Markerless Augmented Reality : Ground Planes and Mid Air": [
          "Section Introduction",
          "List of Ground Plane supported device",
          "Setting up the Project",
          "Markerless Augmented Reality : Placing an object on ground surface",
          "Placing a Life Size Car in Real World",
          "Adding Realistic shadows to the Car",
          "Mid Air feature : Placing a miniature Helicopter in Mid air"
        ]
      },
      "requirements": [
        "A Windows or Mac Computer system",
        "Android SmartPhone or an iPhone",
        "Basic programming knowledge will be of Great help"
      ],
      "description": "Curious about Augmented Reality, You have come to the right place. Learn the basics fundamentals and programming techniques required for building fully functional Augmented Reality android and iOS apps. For this course you will need an Android Smartphone or iPhone.\nSo what is Augmented Reality?\nAccording to Wikipedia, Augmented reality (AR) is a live direct or indirect view of a physical, real-world environment whose elements are \"augmented\" by computer-generated or extracted real-world sensory input such as sound, video, graphics or GPS data.\nIn Augmented Reality the real view is modified by a computer (Smartphone in this case). Augmented reality (AR) enhances one’s current perception of reality, whereas in contrast, virtual reality replaces the real world with a simulated one. Augmentation techniques are basically performed in real time,\nEg : Displaying live scores and statistics inside a live video of a sporting event\nPower of Augmented Reality\nI came across Augmented Reality in 2015 after watching a video of Augmented Reality Book. I was fascinated to know that such technology actually exists. So I started researching on different Augmented Reality platform. Vuforia platform seemed very promising as developers all over the World have used Vuforia for developing Augmented Reality apps.\nPokemon Go game is the best example of Augmented Reality. Other than that Augmented Reality apps expand over a wide range of topics from Education, Business, Architecture, Health Industry, Home Decoration and obviously mobile gaming.\nCourse Content and Overview\nThis course is designed for students interested in creating Augmented Reality apps. No coding experience is required; all you need is an Android or iOS device for testing your Augmented Reality apps. We will start from basics of Unity, C# platform and then move to higher topics\nIntro & Basics of Augmented Reality\nIn the first section you will first understand as to what is Augmented Reality? Next we will look at the four different augmented reality techniques and its application. After this I will explain you what is Virtual Reality and the differences between Augmented Reality (AR) & Virtual Reality (VR)\nBasics of Unity\nAfter understanding Augmented Reality next we will look at the basics of Unity as Unity is the main software which we will use for building Augmented Reality apps.\nAugmented Reality One (ARONE) application\nARONE is the first Augmented Reality Application which you are going to create. In this app you will\nCreate Vuforia account\nCreate License Key for the AR app\nUpload an Image as Image Target\nUnderstand Vuforia Image Recognition system\nSolution to White ImageTarget problem in Vuforia version 6.2.10\nDownload 3D model from Unity Asset Store\nPlace 3D Model on top of Image Target\nDownload ARONE app database from Vuforia and activate it inside Unity\nBuild this app for Android & Ios\nAugmented Reality Book (ARBOOK) application\nIn the ARBook application we will first create few sketches inches a drawing book. Next we will download some 3D Models from the asset store and project the 3D Model on top of each image target.\nApplication like ARBOOK can be implemented in Schools & Colleges for teaching complicated subjects in a fun and easier way.\nVirtual Button & Augmented Reality Business Card (ARBusinessCard)\nIn this section I will explain first explain you the concept of Virtual Button in Vuforia and the six important factors that should be considered while working with Virtual Button.\nNext you will create a simple Virtual Button app called AugmentedRealityVirtualButton in which you will understand the important function & interface that are required for working with Virtual Button.\nAfter the ARVirtualButton app we will then create and ARBusinessCard. In the ARBusinessCard app you will first place multiple virtual buttons on top of an Image Target. Next I will show you how to play video file inside Unity, After this we will write a C# script to play a particular video when the virtual button for a particular video is pressed\nAugmented Reality Greeting Card\nIn this section, you will learn the process of detecting multiple image targets simultaneously at the same time. You will also add an mp3 file in the app that will start playing only when the greeting card is opened.\n\n\nSuperimposition based AR | Object tracking –\nIn this section you will first scan a 3D model using Vuforia’s 3D scanning android application. Next we will import this model inside Unity and on top of this model we will superimpose a digital car.\n\n\nCylindrical Object tracking\nIn this section you will learn the technique for detecting a cylindrical object. After detecting the cylindrical object you will create a beautiful 3D scenic view around the cylinder with the help of airplanes, low poly clouds and low poly terrains.\n\n\nVuforia Cloud Recognition\nIn this section you will understand the working of Vuforia cloud databases. You will create an application called BookInfoAR. This application will scan a book cover(marker) and display information panel beside the book cover. The information of the marker is stored in cloud database.\n\n\nGround Planes and MidAir\nIn this section you will create your first markerless augmented reality using Vuforia Ground Plane. With ground plane feature we will place a lifesize Lamborghini model in real world. Next using the MidAir feature we will place a drone in mid air.\n\n\nUser Defined Target\nIn this section you will understand a feature called User Defined Target feature from the Vuforia Core Sample. With the help of User Defined Target feature we can use any image as an marker.\nSo after explaining you the course content I hope to see you inside this Augmented Reality course",
      "target_audience": [
        "Computer programming students interested in C# programming for building Augmented Reality applications",
        "Unity Developers interested in Augmented Reality platforms",
        "Anyone who wants to develop their own AR Applications"
      ]
    },
    {
      "title": "Mastering MapKit for iOS",
      "url": "https://www.udemy.com/course/mastering-mapkit-for-ios/",
      "bio": "Learn the art of creating MapKit iOS applications using Swift from start to finish.",
      "objectives": [
        "Ability to create iOS apps with MapKit",
        "Ability to create apps that work with GPS and geofencing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "Hello Maps": [
          "Displaying Maps",
          "Displaying User's Current Location",
          "Requesting User's Permission",
          "Zooming into User's Location",
          "Switching Map Type",
          "Simulating Locations on iPhone Simulator"
        ],
        "Annotations": [
          "Add Pin Annotation",
          "Implementing a Custom Annotation",
          "MKMarkerAnnotationView",
          "Customizing Callout Using Accessory Views",
          "Displaying Imagery Using MKMapSnapshotter",
          "Implementing a Custom Callout",
          "Refactoring Custom Callout"
        ],
        "Reverse Geocoding and Geofencing": [
          "Mapping Address to Map Using Reverse Geocoding",
          "What is Geofencing?",
          "Adding Point of Interest",
          "Rendering an Overlay",
          "Monitoring Regions"
        ],
        "Calculating Directions": [
          "Opening Map Apps for Directions",
          "Getting Directions",
          "Displaying Directions in UITableView",
          "Implementing Directions Overlay on Map"
        ],
        "Searching Nearby Points of Interest Using MKLocalSearch": [
          "What is MKLocalSearch?",
          "Implementing MKLocalSearch",
          "Launching Maps When Annotation is Selected"
        ],
        "Conclusion": [
          "Next Steps",
          "Resources",
          "Bonus"
        ]
      },
      "requirements": [
        "Student should have knowledge of iOS architecture",
        "Student should have knowledge of Swift language and Xcode"
      ],
      "description": "Are you interested in learning MapKit for iOS?\nMapKit is an amazing framework for iOS that allows you to build map enabled applications. This means you can create apps like Google Maps, Apple Maps and more.\nMy name is Mohammad Azam, creator of many popular online courses including\nMastering ARKit for iOS\nBlockchain Programming Using Swift in iOS\nMastering Siri Shortcuts for iOS\nMastering Server Side Swift Using Vapor 3\nand many more.\nI have worked with fortune 500 companies as a lead mobile developer and helped them grow their business. At present I am a full time Instructor at DigitalCrafts where I teach users how to create amazing applications.\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 4 hours.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nBuy this course today and this is what you’ll get.\nFirstly, I am using the latest released version of Xcode and Swift, I will show you how to learn and integrate MapKit in your iOS application.\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and make sure that every questions is answered.\nCan you believe you get all this (and more) for just $199?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nWhy learn MapKit?\nMap applications are one of the most downloaded and used apps in the App Store. Google Maps, Apple Maps as well as Waze has been downloaded by more than a million users.\nIntegrating your app with MapKit can enhance the overall experience of your app.\nLearning MapKit will allow you to make apps like Uber, Lyft and other transportation apps.\nWho is this for?\nThis course is for anyone who wants to take their skills to the next level. MapKit framework is an integral part of the iOS architecture and it will become essential in the GPS enabled modern apps.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the mobile community with a large following. I do a lot of speaking engagements in which I spread knowledge and education.\nI am confident that you will enjoy the course and you will utilize the knowledge you learned in this course in your future applications.\nWhat are the requirements?\nA Mac Computer\nXcode 9.3 or above\nBasic understanding of the any Swift language - I'll teach you everything you need to know about MapKit\nWhat am I going to get from this course?\nLearn to implement MapKt applications\nBuild apps like Uber, NearMe, Lyft, Google Maps\nWho is the target audience?\n\nAnyone who wants to be an app developer: This is a complete course, just like my iMessages, ARKit, Kotlin, Vapor and Swift courses.\nAnyone who wants to learn to integrate MapKit in their iOS application. MapKit is the future of mapping apps and the future is right NOW.\nAnyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work is your key to a hugely powerful world.",
      "target_audience": [
        "Developers who wants to take their skills to the next level and build MapKit applications",
        "Developers who wants to make apps like Google Maps, Apple Maps etc"
      ]
    },
    {
      "title": "Master the Android System Design Interview",
      "url": "https://www.udemy.com/course/mobile-system-design-interview-prep/",
      "bio": "Tips on how to master your mobile system design interview at FAANG companies – plus 2 extensive mock interviews!",
      "objectives": [
        "Practice solving real-world mobile system design interview questions",
        "Understand the mobile system design interview process",
        "Get to know useful tips and tricks during the interview",
        "Understand how to design apps for billions of users",
        "Be able to discuss a wide variety of topics including networking, storage, mobile system resources, and much more"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Introductory Notes",
          "Download your slides"
        ],
        "Networking": [
          "Networking: Intro",
          "Client-Server Communication Methods",
          "HTTP Short Polling & Long Polling",
          "HTTP Streaming",
          "Web Sockets",
          "Server-Sent Events",
          "REST",
          "GRPC",
          "GraphQL",
          "Push Notifications – Firebase Cloud Messaging",
          "Pagination",
          "Additional Topics",
          "Quiz: Networking",
          "Optional: HTTP Evolution - HTTP 0.9 & HTTP 1.0",
          "Optional: HTTP Evolution - HTTP 1.1",
          "Optional: HTTP Evolution - HTTP 2.0",
          "Optional: HTTP Evolution - HTTP 3.0 & QUIC"
        ],
        "Storage": [
          "Storage: Intro",
          "File System Storage",
          "SharedPreferences & DataStore",
          "Databases - SQL vs. NoSQL",
          "Storing Large Objects (LOBs)",
          "Secure Storage: Storing Sensitive Data",
          "Choosing the Right Storage Type",
          "Quiz: Storage"
        ],
        "Build for Billions": [
          "Build for Billions: Intro",
          "Connectivity: Networking",
          "Connectivity: Image Optimization",
          "Connectivity: Offline Capability",
          "Data Cost",
          "Device Ranges",
          "Battery Consumption",
          "User Interface",
          "Doze Mode & App Standby",
          "App Startup",
          "Memory",
          "Quiz: Build for Billions"
        ],
        "Interview Strategies": [
          "Interview Strategies: Intro",
          "Interview Process & Timing",
          "Getting to Know, Question & Define Task",
          "Ask Clarifying Questions",
          "Gather Requirements",
          "High Level Design",
          "Detailed Design",
          "Questions to the Interviewer",
          "Final Advice"
        ],
        "Mock Interviews": [
          "Mock Interviews - Introduction",
          "Chat Application: Q&A",
          "Chat Application: Requirements",
          "Chat Application: Try it Yourself",
          "Chat Application: High Level Design",
          "Chat Application: Networking Design",
          "Chat Application: Storage Design",
          "Chat Application: Sum Up",
          "Push Notification System: Q&A",
          "Push Notification System: Requirements",
          "Push Notification System: Try it Yourself",
          "Push Notification System: High Level Design",
          "Push Notification System: Subscriptions",
          "Push Notification System: Push Notifications & Dispatcher",
          "Push Notification System: Heartbeats & Network Failures",
          "Push Notification System: Sum Up"
        ],
        "Q&A": [
          "Q&A: Intro",
          "Communication Methods: Practical Examples",
          "Resumable Up- & Downloads: github",
          "Resumable Up- & Downloads",
          "Dynamic Images: Server Load vs. Connectivity",
          "Best Practices: Large Media Up- & Downloads"
        ],
        "Google I/O 2023 Additions": [
          "Google I/O 2023: Intro",
          "Networking: Pagination Testing",
          "Networking: Pagination Testing Demo",
          "Storage: Media Permissions",
          "Storage: Media Permissions Demo",
          "Storage: Preventing State Loss",
          "Build for Billions: Running in the Background",
          "Build for Billions: Per-App Preferences",
          "Build for Billions: Jetpack Compose",
          "Build for Billions: Jetpack Compose Demo",
          "Build for Billions: Splashscreen API",
          "Build for Billions: Splashscreen API Demo",
          "Build for Billions: Baseline Profile and Macrobenchmarks",
          "Build for Billions: Baseline Profile and Macrobenchmarks Demo"
        ],
        "Google I/O 2024 Additions": [
          "Google I/O 2024: Intro",
          "Google I/O 2024: Overview",
          "Google I/O 2024: Background Work",
          "Google I/O 2024: Baseline Profiles & Macrobenchmark API",
          "Jetpack Compose: API Design",
          "Jetpack Compose: Phases",
          "Jetpack Compose: Stability",
          "Jetpack Compose: Performance",
          "Demo Part I: Recap & Lookout",
          "Demo Part II: Startup Benchmark",
          "Demo Part III: Feature Benchmark",
          "Demo Part IV: Recompositions",
          "Demo Part V: Defer Recompositions"
        ],
        "Google I/O 2025 Additions": [
          "Google I/O 2025: Intro",
          "Google I/O 2025: Accessibility",
          "Google I/O 2025: Jetpack Compose"
        ]
      },
      "requirements": [
        "Some prior experience in mobile app development (preferably Android) and computer science is expected."
      ],
      "description": "Prepare for and master your mobile system design interview at any big tech or FAANG company, whether it be Google or Apple. Get a detailed walkthrough of several important topics asked in these interviews, and tips and tricks from a Google Developer Agency Tech Lead.\nStefan started developing Android apps - almost from Android's birth - in 2011, and since then had to design and develop a handful of Android, iOS, and Multiplatform apps. During that time he also walked through system design interviews at FAANG companies by himself and therefore wants to share his experience in this course.\nMobile technical interviews at big tech companies are quite challenging and the mobile system design part is often the most unclear and demanding. Many learning resources on the Internet cover backend system design, but there are very limited resources available for mobile system design. This course brings light to mobile system design interviews and gets you prepared for landing your dream job at one of the big tech companies. Despite the course being especially targeted at Android, most concepts also apply to iOS.\n\nAbout 9 hours of on-demand video content will cover what you need to know for your mobile system design interview:\nDiscussion of most important networking concepts, background work, and failure handling\nChoosing the right networking protocol/technology among polling, web sockets, server-sent events, REST, gRPC, GraphQL, REST, Push Notifications, and more for a given use case\nLearn about different pagination techniques for large amounts of data\nOverview of storage types including the file system, preferences, SQL and NoSQL databases, and secure storage, and learn when to use which\nLearn how to scale your app and backend for billions of users by taking into account the concepts of connectivity, data cost, device ranges, battery consumption, responsive UI, app startup time, and memory footprints\nTechniques on how to build an offline-capable app\nGet advice on the process and timing of mobile system design interviews\nInterview strategies for structuring your mobile system design interview\nTwo extensive mock interviews with real-world mobile system design interview questions, from requirements definition to high-level and detailed design",
      "target_audience": [
        "Android or iOS app developers preparing for interviews at FAANG companies"
      ]
    },
    {
      "title": "Learn Flutter and Dart to create Android and IOS apps",
      "url": "https://www.udemy.com/course/learn-flutter-in-30-days/",
      "bio": "Learn to create Awesome Mobile Apps using Flutter and Dart",
      "objectives": [
        "Learn Flutter and Dart from square one, step-by-step",
        "Understand all the fundamental concepts of Flutter development",
        "Master Dart & Flutter Framework",
        "Build Android & iOS apps using one programming language(Dart)",
        "Become a competent ,fully-fledged Flutter developer",
        "Build multi-screen apps using various widgets in Flutter"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming language will help but is not a must-have",
        "You can use either Windows, macOS or Linux for Android app development - iOS apps can only be built on macOS though",
        "No prior knowledge or experience regarding iOS or Android development is required",
        "Willingness to learn Everyday by Practicing"
      ],
      "description": "You don't need to learn Android/ Java and iOS/ Swift to build real native mobile apps!\nFlutter - a framework developed by Google - allows you to learn one language (Dart) and build beautiful native mobile apps in no time. Flutter is an SDK providing the tooling to compile Dart code into native code and it also gives you a rich set of pre-built and pre-styled UI elements (so-called widgets) which you can use to compose your user interfaces.\n\n\nOur complete Flutter development Bootcamp teaches you how to code using Dart and build beautiful, fast, native-quality iOS and Android apps. Even if you have ZERO programming experience.\n\n\nFlutter is the new Cross-platform Mobile Development Framework created by Google, allowing developers to build Android and iOS Apps with one single codebase!\nFlutter is the BEST way to create cross-platform apps that otherwise would require two distinct mobile development teams to create.\nWhy is Flutter a BIG Deal?\nFlutter is a big deal because any developer (or anyone who wants to learn mobile development) can now build native Android and iOS apps with one codebase ONLY! This means, instead of having to learn Objective-C or Swift to build iOS apps, and Java, or Kotlin to build Android apps, you can now use Flutter Mobile Development Framework to build apps that run natively on both iOS and Android devices using the General-purpose Dart Programming Language.\n\n\nTopics that are going to cover during these 30 days:-\n1. Core Concept of Dart\n2. Core Concept of Flutter\n3. Basic ideas of widgets\n4. App implemented through widgets\n5. Firebase Database\n6. App with database implementation",
      "target_audience": [
        "Anyone whoever is interested in developing Android & iOS apps.",
        "Anyone who wants to choose his/her career as mobile app developer.",
        "Android Developers Who Want to Build both Android and iOS Apps with Single Codebase",
        "iOS Developers Who Want to Build both Android and iOS Apps with Single Codebase",
        "Beginner or intermediate Dart and Flutter developers",
        "Students who wants to learn/clear all the fundamental concepts of Dart and Flutter"
      ]
    },
    {
      "title": "iOS 10 & Swift 3: From Beginner to Paid Professional™",
      "url": "https://www.udemy.com/course/devslopes-ios10/",
      "bio": "The most comprehensive course on iOS development - become a master of app development",
      "objectives": [
        "Build iOS 10 & Swift 3 apps",
        "Apply to jr. iOS development jobs",
        "Work as an iOS contractor",
        "Submit iOS apps to the Apple App Store"
      ],
      "course_content": {
        "Getting Started With iOS 10 & Swift 3": [
          "Intro to Course",
          "Get $5000 worth of AMAZING graphics for FREE",
          "Download your FREE graphics here",
          "Student success story",
          "Register as an Apple Developer",
          "Downloading Xcode 8",
          "Installing Xcode 8",
          "Building your first Swift 3 iOS 10 App",
          "Student success story #2 app in the world!!",
          "More testimonials!"
        ],
        "Learn to code with Swift 3": [
          "Intro to Xcode 8 Changes",
          "Variables, operators, & how computers work",
          "Source Code",
          "Swift 3 strings",
          "Swift 3 numbers",
          "Swift 3 functions",
          "Swift 3 Booleans & conditional logic",
          "Swift 3 constants & logical operators",
          "Swift 3 arrays",
          "Swift 3 loops",
          "Swift 3 Dictionaries",
          "Swift Optionals: Xcode 8 Updates",
          "Swift Optionals",
          "Object oriented programming",
          "Inheritance",
          "Polymorphism",
          "Xcode 8 - Tips & Tricks",
          "Swift 3 Quiz"
        ],
        "Version Control With Git & Github": [
          "About version control",
          "Git basics",
          "Setting up Github",
          "Github vs Bitbucket",
          "Local & remote Git repositories",
          "Working through Git merge conflicts",
          "Github Desktop"
        ],
        "Foundational iOS": [
          "iOS 10 App: Miracle Pills - Xcode 8 Updates",
          "iOS 10 App: Miracle Pills 01 - Autolayout & project creation",
          "iOS 10 App: Miracle Pills 02 - Width, height, leading, trailing constraints",
          "iOS 10 App: Miracle Pills 03 - UIPickerView",
          "Working with UIScrollView",
          "Working with UIStackview",
          "Changing Screens with Segues - Xcode 8 Updates",
          "Changing screens with segues",
          "iOS 10 App: Retro Calculator Intro",
          "iOS 10 App: Retro Calculator - Xcode 8 Updates",
          "iOS 10 App: Retro Calculator - UIStackView & auto layout",
          "iOS 10 App: Retro Calculator - Custom fonts on iOS 10",
          "iOS 10 App: Retro Calculator - Playing audio files on iOS 10",
          "iOS 10 App: Retro Calculator - Math & logic",
          "Exercise - Enhancing the Calculator",
          "Size classes on iOS 10 & Xcode 8",
          "iOS 10 App: Party Rock Mansion Intro",
          "iOS 10 App: Party Rock - Xcode 8 Updates",
          "iOS 10 App: Party Rock - Designing the UI",
          "iOS 10 App: Party Rock - Custom table cells, and data modeling",
          "iOS 10 App: Party Rock - Downloading images & async",
          "iOS 10 App: Party Rock - Showing Youtube videos in a web view",
          "Model View Controller (MVC)",
          "Create a Progress Bar with PaintCode"
        ],
        "Working With REST & Web Requests on iOS 10 & Swift 3": [
          "How web requests work on iOS 10",
          "Understanding JSON on iOS 10",
          "iOS 10 App: Rainy Shine - Xcode 8 Updates",
          "iOS 10 App: Rainy Shine - App intro & project creation",
          "iOS 10 App: Rainy Shine - Intro to Cocoapods",
          "iOS 10 App: Rainy Shine - Installing Cocoapods & Alamofire",
          "iOS 10 App: Rainy Shine - Creating the interface with IBOutlets",
          "iOS 10 App: Rainy Shine - Table view, delegate, & datasource",
          "iOS 10 App: Rainy Shine - OpenWeather API Registration",
          "iOS 10 App: Rainy Shine - Data model and constants",
          "Downloading data from the API with Alamofire",
          "iOS 10 App: Rainy Shine - Parse JSON data",
          "iOS 10 App: Rainy Shine - Updating UI with data from the API",
          "iOS 10 App: Rainy Shine - Data modeling & initializing weather Dictionary",
          "iOS 10 App: Rainy Shine - IBOutlets & custom weather cell",
          "iOS 10 App: Rainy Shine - User location with CLLocationManager",
          "iOS 10 App: Pokedex - Intro to app",
          "iOS 10 App: Pokedex - Xcode 8 Updates",
          "iOS 10 App: Pokedex - Project setup, images, data, github",
          "iOS 10 App: Pokedex - Creating a Pokemon class",
          "iOS 10 App: Pokedex - Collection view, storyboard layout",
          "iOS 10 App: Pokedex - Custom collection view cell",
          "iOS 10 App: Pokedex - Collection view delegate, data source, flow layout",
          "iOS 10 App: Pokedex - Parsing CSV files",
          "iOS 10 App: Pokedex - Audio & custom fonts",
          "iOS 10 App: Pokedex - Search bar & search filtering",
          "iOS 10 App: Pokedex - Detail controller & segue",
          "iOS 10 App: Pokedex - Stack view & detail view controller",
          "iOS 10 App: Pokedex - IBOutlets & model changes",
          "iOS 10 App: Pokedex - The API, Github, Cocoapods & Alamofire",
          "iOS 10 App: Pokedex - Downloading & parsing data part 1",
          "iOS 10 App: Pokedex - Downloading & parsing data part 2",
          "iOS 10 App: Pokedex - Finishing the Pokedex"
        ],
        "Data Persistence & Core Data": [
          "Intro to Core Data App",
          "Why Use Core Data",
          "Core Data Architecture Overview",
          "iOS 10 App: DreamLister Part 1 - Creating a Data Model",
          "iOS 10 App: DreamLister Part 2 - Designing the Views",
          "iOS 10 App: DreamLister Part 3 - Connecting the Views",
          "iOS 10 App: DreamLister Part 4 - NSFetchedResultsController",
          "iOS 10 App: DreamLister Part 5 - Fetching and Displaying Data",
          "iOS 10 App: DreamLister Part 6 - Laying Out The Details Screen",
          "iOS 10 App: DreamLister Part 7 - Implementing UIPickerView",
          "iOS 10 App: DreamLister Part 8 - Saving Data from a Form",
          "iOS 10 App: DreamLister Part 9 - Editing Existing Data",
          "iOS 10 App: DreamLister Part 10 - Deleting Data and Adding Images",
          "iOS 10 App: DreamLister Part 11 - Sorting Data",
          "iOS 10 App: DreamLister Part 12 - ItemType Challenge",
          "iOS 10 App: Converting Swift 2 to Swift 3 Core Data Project"
        ],
        "Protocol Oriented Programming and Advanced Swift 3": [
          "Intro to Protocol Oriented Programming",
          "Writing your first protocols",
          "Creating protocol extensions",
          "Generics & protocols",
          "Protocol Oriented Programming - Xcode 8 Updates",
          "Practical examples using protocol oriented programming",
          "Recursive Functions"
        ],
        "iOS 10 Hot New Features": [
          "iOS 10: iMessage Sticker App Extension",
          "iOS 10: Speech Recognition API",
          "iOS 10: User Notifications - Xcode 8 Updates",
          "iOS 10: User Notifications"
        ],
        "Building Full Stack Apps With Firebase": [
          "Intro to Firebase",
          "Firebase Push Notifications - Creating the project",
          "Firebase Push Notifications - Creating a push cert",
          "Firebase Push Notifications - Connecting via code to Firebase messaging",
          "Sorting Data in Firebase - Xcode 8 Updates",
          "Sorting Data in Firebase"
        ],
        "Maps, GPS, Geolocation, Pokemon & Firebase": [
          "iOS 10 App: PokeFinder - Intro to App",
          "iOS 10 App: PokeFinder - Xcode 8 Updates",
          "iOS 10 App: PokeFinder - Installing Firebase & GeoFire",
          "iOS 10 App: PokeFinder - Custom image for user location",
          "iOS 10 App: PokeFinder - Saving Pokemon to a GPS location",
          "iOS 10 App: PokeFinder - Showing Pokemon annotations on the map",
          "iOS 10 App: PokeFinder - Location permissions & final app"
        ]
      },
      "requirements": [
        "Must have a computer with OSX or macOS on it"
      ],
      "description": "Welcome to the world's most comprehensive course on iOS development. This course is designed like an in-person coding bootcamp to give you the most amount of content and help with the least amount of cost.\nHere are some of the things you'll be able to do after taking this course:\nSubmit apps to the app store\nUnderstand programming & basic algorithms\nWork fluently with Swift 3 & iOS 10\nApply to jr iOS development jobs\nWork as an iOS contractor\nIf you are absolutely new to programming you should start at the beginning of the course and go to the end.\nI've designed this course to take you down a guided learning path. Lectures are not broken out by specific topics. You build apps and then learn a ton of principles within those apps. So don't skip around!\nIf you already know Swift then you can skip the Swift section since the changes between Swift 2 and Swift 3 are minor.\n\nSwift 3 broke a lot of things in Swift 2. We cover those changes periodically throughout the course so don't worry about watching Swift videos again if you already know Swift.\nIf you are a student of iOS 9: From Beginner to Paid Professional then feel free to start taking this iOS 10 course.\nKeep in mind that this iOS 10 course has a bunch of new apps. So there is a HUGE benefit to ALSO go through the iOS 9 course - or you'll miss out on awesome content.\nDon't forget to join the free live community where you can get free help anytime from other students and teacher's aides.",
      "target_audience": [
        "If you are an absolute beginner to coding take this course",
        "If you are an absolute beginner to iOS or mobile development then take this course"
      ]
    },
    {
      "title": "Learn Mobile App Development with .NET MAUI",
      "url": "https://www.udemy.com/course/learn-net-maui/",
      "bio": "Build Native Cross Platforms Real World Mobile Applications with .NET MAUI",
      "objectives": [
        "You'll be able to learn the fundamentals of .NET MAUI",
        "Work with different kind of layouts",
        "Learn how to use the Hierarchical Navigation and implement modal pages",
        "Add List View and Collection View and create a fruits application",
        "Design News Application from scratch",
        "Consume News Restful Api's in .NET MAUI",
        "Implement Styles in .NET MAUI application",
        "Work with tool bars and share the news on social media",
        "Create Weather App From Scratch with Real Time Data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Structure",
          ".NET MAUI Installation",
          "Installation Guide"
        ],
        "Create First .NET MAUI App": [
          "Create New Project",
          "Project Architecture"
        ],
        "Xaml Controls and Layouts": [
          "StackLayout",
          "Margin & Padding",
          "XAML Controls",
          "ScrollView",
          "FlexLayout",
          "GridLayout",
          "Span in GridLayout"
        ],
        "Navigation and Passing Data": [
          "Hierarchical Navigation",
          "Adding Content Page in .NET MAUI",
          "Implement PushAsync",
          "Implement Pop Async",
          "Modal Pages",
          "Passing Data"
        ],
        "ListView & CollectionView": [
          "Listview Overview",
          "Implement ListView in MAUI",
          "Item Template / Data Template in ListView",
          "Data Source & Data Binding",
          "Interactivity with ListView",
          "Consume ListView Selected Data on Detail Page",
          "ListView Selection Issue",
          "Collection View Overview",
          "Implement Collection View in MAUI",
          "Interactivity with Collection View",
          "Items Spacing in Collection View"
        ],
        "NEWS App in MAUI": [
          "News App Overview",
          "Design News Page",
          "Categories Collection View",
          "News Collection View",
          "Get News Api",
          "Create C# Model Classes",
          "Create Api Service Class",
          "Consume News Api",
          "Populate Category Data in Categories Collection View",
          "Change News According to the Category",
          "Navigation from News-to-News Detail Page",
          "Design News Detail Page",
          "Change Image Aspect Property",
          "Issues in News App"
        ],
        "Styles in MAUI": [
          "Implicit Styles",
          "Explicit Styles",
          "Global Styles"
        ],
        "ToolBar & Share Functionality": [
          "ToolBar Items",
          "ToolBar Items with Images",
          "ToolBar Event Handler",
          "MAUI Essentials Documentation",
          "Add Permission in IOS Info.Plist",
          "Share News with Essential Plugin",
          "Source Code"
        ],
        "Create Weather App in MAUI": [
          "Overview",
          "How to get Weather Api ?",
          "Generate C# classes from JSON",
          "Create Api Service Class",
          "Get Weather By City",
          "Design Weather Page",
          "Collection View For Weather Data",
          "Display Current City & Weather Description",
          "Display Current Weather Data",
          "Display Weather Images",
          "Weather Collection View",
          "Data Binding in Weather Collection View",
          "Get Device Location",
          "Your location Tapped Event",
          "Get Weather Data By City",
          "Design Welcome Page",
          "Version Tracking",
          "Source Code Weather App",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "You should be familiar with C#. Because knowledge of C# is must for this course.",
        "Visual Studio 2022 with windows edition Or Mac Edition if you want to build apps for IOS.",
        "Android Device or Emulator for android app testing",
        "IOS Simulator or device for IOS app testing."
      ],
      "description": "Welcome to the First Real World App Development course with .NET MAUI.\nI'm Asfend Microsoft Most Valuable Professional (MVP) and Xamarin University Most Valuable Professional and in this course I'll explain you every single aspect of real world application in .NET MAUI.\nThis courses teaches you how to code and build beautiful Android and iOS apps by using .NET MAUI\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll be able to :\n\n\nLearn the fundamentals of .NET MAUI\nLearn the Layouts & Controls in .NET MAUI\nUnderstand the Hierarchical Navigation and Model pages\nWork with List View and Collection View\nConsume Restful Api's.\nCreate NEWS Application From Scratch\nImplement Styles in .NET MAUI\nWork with the toolbar\nShare NEWS on Social Media\nConsume Weather Api\nCreate Weather App with Real Time Data\n\n\nPrerequisites\nIn order to complete this course you must have a knowledge of C# and XAML. Xamarin Forms knowledge is also a plus point but if you're very new in .NET MAUI then don't worry because we'll cover everything from scratch.\n\n\nRemember\nWell in this course we'll use the Windows machine to develop the .NET MAUI applications. With Windows machine you can build applications for Android and Windows but in order to test the IOS applications you need an iPhone. All the code we'll use in this course will be used on all the platforms including Android , Windows , IOS but we can't run the IOS applications without the IOS device and MacBook and this limitation is not only for .NET MAUI and Xamarin Forms. In fact this will be for all kind of development including Flutter , React Native , Unity etc. because apple assembly won't allow you to test the app without apple machine.\nBut we don't care because we'll create the application on windows machine and will target the Android and if any one of you have a MAC OS then he can also test the IOS applications.\n\n\nWhat you'll get from this course ?\nAfter this course you'll get all the Application Source Code.\nYou'll get the helping material like code snippets and assets along with this course.\nI know time is money and that's why I've tried my level best to keep this course short so that you don't lose momentum and learn all things in .NET MAUI in short time.\nSo what are you waiting for? Click the buy now button and join the Complete Real World .NET MAUI Development Course and lets' start learning.",
      "target_audience": [
        "If you've an experience of C# then take this course.",
        "If you're already a Xamarin Developer and wants to build application with .NET MAUI then take this course.",
        "If you want to make cross platform applications with a single code base then take this course."
      ]
    },
    {
      "title": "React Native Design - Build front end of 10 mobile Apps",
      "url": "https://www.udemy.com/course/react-native-design/",
      "bio": "Build front end of 10 Apps for Android and iOS using React Native. Expo, Native Base, Elements - All covered",
      "objectives": [
        "You will be able to write front end of any design of mobile apps",
        "Build youtube front end clone",
        "Build Tinder cards with Animations",
        "Complete knowledge of front end of React native",
        "You will be building 10 apps front end in React native",
        "Ready to apply as Jr app developer (Android and iOS combo)",
        "Never look back about device size issues",
        "Keyboard aware loing and much more"
      ],
      "course_content": {
        "Before we begin": [
          "Introduction to the course",
          "Get all the tools - Do not skip",
          "Setting up Expo, AVD and XCODE",
          "File structure of expo project",
          "Exercise files",
          "Configure Atom - Important"
        ],
        "Project 1 - Getting the basics right": [
          "Basics of React Native and styling",
          "Creating a seperate component",
          "Flexbox basics and free resource to learn flexbox"
        ],
        "Project 2 - Horizontal tutorial screen for App": [
          "Getting ScrollView ready for screens",
          "Styling tips for scrollViews",
          "Running it on Actual Android device"
        ],
        "Project 3 - Login screen with keyboard awareness": [
          "Getting started with login screens and situations",
          "Nesting components styling",
          "Avoiding keyboard in login",
          "Running app on Actual Android device"
        ],
        "Project 4 - Shopping cart Experience": [
          "Shopping cart top bar",
          "Adding hero image",
          "Adding Scrollable body with prop components",
          "Overlay Text over images",
          "Running project on Actual Android devices"
        ],
        "Project 5 - Customized photo gallery, Instagram style": [
          "Designing Header for Gallery",
          "Styling Text elements of header",
          "Mid section - subscribers",
          "Scrollable gallery"
        ],
        "Project 6 - A youtube clone with dummy API data": [
          "Getting started with youtube logo",
          "Getting the material icons",
          "Having bottom bar of youtube",
          "Designing body of video tiles",
          "Debugging and running it on Android Devices"
        ],
        "Project 7 - Horizontal Card scroll with Native base and elements": [
          "Introduction to Native Base",
          "Installing Native base with Expo Client",
          "Fixing Android issue related to fonts",
          "React Native Elements setup",
          "Horizontal card view with ListView"
        ],
        "Project 8 - Drawer with Horizontal and vertical cards scroll": [
          "Setting up Native base for Drawer",
          "Getting Instagram style cards",
          "Getting a footer with badges",
          "Creating sidebar component",
          "Sidebar and scrollable card in both directions",
          "Running it on Actual Android device"
        ],
        "Project 9 - Tinder cards with animations": [
          "Creating a project for Tinder cards",
          "Custom header components",
          "Tinder swipe cards components"
        ]
      },
      "requirements": [
        "Knowledge of Javascript is required like loops and arrow functions of JS (need not to be a guru)",
        "REACTJS is not required for this course as we will start from basics and will focus more on design",
        "WINDOWS or MAC - both are great for this course",
        "ATOM or Sublime text or any other text editor"
      ],
      "description": "What is the problem that we are solving with this course?\nWhen you want to learn app development, for iOS it’s swift and for Android it’s Java or Kotlin.\nWhen screen size varies on any device, it’s really hard to make sure that your app looks consistency\nGetting same look on both Android and iOS is another nightmare.\nThese are the issues that you will never look back after taking this course. We will use Javascript code to build Native mobile apps for both android and iOS. We will use React native, used by Facebook, messenger, Instagram, tesla etc, to build our apps. This is like a front end course for mobile apps.\nWith React Native, you can use your web skills to produce native mobile apps. Further to help us in fast production, we will use Expo client to generate boiler plate code. Expo is very popular tool in industry to create React native apps.\nWe will create 10 apps, each addressing different design issues that you will face in your app development journey. Apps like tutorial screen, login screen with keyboard awareness are must to put in your bag.\nAlso we will create some clones like youtube app clone, of course front end only, so that you can replicate any design that is passed to you.\nAfter taking this course, you will be able to create front end of mobile apps, both android and iOS, using react native. All apps are tested on both iPhone and Android devices and have consistent look on both platform.\nReact native is a state of art technology, used by Facebook and loved by developers. Now, finally you can focus on your project concept instead of being worried about learning many languages to create an app.\nHave a look at Promo video and there we have mention about the apps that we will be creating in this course.\nSee you inside the course !\nHappy coding!",
      "target_audience": [
        "Students interested in app development",
        "Want to build Android or iOS app",
        "Want to use their web skills into app development",
        "students who wants layout and design issues for their apps"
      ]
    },
    {
      "title": "Android App Development - Complete Course",
      "url": "https://www.udemy.com/course/android-developer-course/",
      "bio": "Become an Android App Developer",
      "objectives": [
        "Android Application Development",
        "Kotlin Programming",
        "Design Thinking for Mobile and Android App Development"
      ],
      "course_content": {
        "Android Basics": [
          "Intro",
          "Android Studio",
          "Reviews",
          "Android Virtual Device",
          "Layout Editor",
          "Understanding Android Studio",
          "Reviews",
          "Accessing Components",
          "Accessing UI Components",
          "Buttons",
          "Views",
          "Speeding the Videos Up",
          "Image Views",
          "Switch",
          "Edit Text",
          "End of Section"
        ],
        "Kotlin Basics": [
          "Intro",
          "Print, Toast, and Comments",
          "Variables and Primitives",
          "Operators",
          "Break",
          "Control Flow",
          "Collections",
          "Dice Generator",
          "End of Section"
        ],
        "Intermediate UI": [
          "Intro",
          "Layouts & Constraints",
          "Linear Layouts",
          "Hard Coding Components",
          "Radio Buttons",
          "Activities, Intent and Data",
          "Break",
          "Calendar View",
          "Number Picker",
          "Seek Bars",
          "End of Section"
        ],
        "Property Finder App UI": [
          "Intro",
          "Starting a New App",
          "A Property Card",
          "Property Details",
          "Intent to a Property",
          "Populating Text Data",
          "Main Activity Data",
          "Break",
          "Bundle of Extras",
          "Fetching Extras",
          "Populating Image Data",
          "Fetching Image Data",
          "Clicking on the Image View",
          "Finishing Up",
          "End of Section"
        ],
        "Advanced Kotlin": [
          "Intro",
          "Classes and Objects",
          "Functions",
          "Custom Constructors",
          "Data Classes",
          "Inheritance and Overriding",
          "Extending a Class",
          "Optionals and Null Safety",
          "Break",
          "Interface",
          "Companion Object",
          "Enums",
          "Generics",
          "Exception Handling",
          "Data Type Conversions",
          "End of Section"
        ],
        "Advanced UI": [
          "Intro",
          "Scroll Views",
          "Scroll View Events",
          "Recyclerview",
          "Recyclerview Item Touch",
          "Break",
          "Fragments",
          "Recyclerview in Fragment",
          "View Pager",
          "Alert Dialogues",
          "End of Section"
        ],
        "Todo App": [
          "Intro",
          "Exploring the App",
          "New App and the UI",
          "Group and Item Rows",
          "Data Classes and Initial Data",
          "Groups Adapter and ViewHolder",
          "Creating New Groups",
          "Clicking on a Group",
          "Break",
          "Items Activity",
          "Items Adapter and ViewHolder",
          "Clicking on an Item",
          "Adding a New Item",
          "Refresh and Delete Groups",
          "Adding Animations",
          "End of Section"
        ],
        "Touches and Animation": [
          "Intro",
          "Touch Events",
          "Touch an Object",
          "Single Gesture Detector",
          "Touch and Scale",
          "View Effects",
          "Break",
          "Pixels and DPs",
          "Vector Drawables",
          "Value Animator",
          "Object Animator",
          "Animation Listener",
          "Animation Set",
          "Card Flip Animation",
          "End of Section"
        ],
        "Memory Game": [
          "Intro",
          "Designing Main Activity",
          "Square Frame Layout",
          "Game Fragment View",
          "RecyclerView in Fragment",
          "Using RecyclerView",
          "Tile Class",
          "Three States of Tiles",
          "Break",
          "Adding a Tap",
          "Basic Game Logic",
          "Compare Method",
          "Game Won Status",
          "Restart",
          "Animating the Tiles",
          "Dynamic Grid Size",
          "Refactoring the Code",
          "End of Section"
        ],
        "Maps and Location": [
          "Intro",
          "Maps",
          "Map Markers",
          "User Location",
          "Location Update",
          "Drawing a Path",
          "End of Section"
        ]
      },
      "requirements": [
        "Basic Understanding of Computer"
      ],
      "description": "Hello and welcome to the Android Developer Course. Throughout this course, you will learn how to develop a variety of Android applications. In preparing this course, I've done my best to bring about a decade worth of experience in teaching and developing mobile applications to you. We will begin with the simplest of topics to build our confidence and one step at a time move towards more complex and advanced topics. As a result, this course includes everything you need, to start your career as Android developer or develop the app that you have in mind.\nThat is done by carefully selecting the best and the latest technology and techniques and also making sure everything in the course has an absolute immediate benefit to you as a learner. Over a span of nearly six months, the content of this course has gone through a multitude of edits and the current curriculum brings about the best possible combination.\nThe course is designed in 18 sections and each section covers an area in its entirety. In what follows you can get a quick sense of what the 18 different sections will cover:\nAndroid Basics\nKotlin Basics\nIntermediate UI\nProperty Finder App (Sample UI Design App)\nAdvanced Kotlin\nAdvanced UI\nTo-do App (Sample List Taking App)\nTouches and Animation\nMemory Game (Developing a Puzzle Game in Android)\nMaps and Location\nTesting and Debugging\nMedia and Device\nMultitasking\nPersistent Data\nTo-do List in Room (Adding Data Persistency to our To-do App)\nNetworking and Web\nFirebase\nCloud To-do List (Porting our To-do App to Firebase Cloud)\nBy going through these 18 sections, you will have a complete and thorough understanding of how to think about Android App Development as well as how to use the variety of tools to actually execute your ideas.\nA lot of excitement ahead, and we look forward to see you at the finish line.",
      "target_audience": [
        "Beginner Mobile Developers",
        "Beginners and Intermediate Android Developers",
        "Entrepreneurs Planning to Developarg Their Apps"
      ]
    },
    {
      "title": "Flutter - Beginners Course",
      "url": "https://www.udemy.com/course/flutters-beginners-course/",
      "bio": "Learn Flutter mobile programming",
      "objectives": [
        "Make basic flutter applications"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Dart 2 - version changes (some videos will be re-recorded)",
          "Read me - major changes to Dart and Flutter",
          "Setup Android Studio",
          "Setup IntelliJ",
          "Flutter Doctor",
          "First Application",
          "Live template",
          "Nullable types Version change example - isEmpty",
          "Section 1 - Assignment",
          "Section 1 - Quiz"
        ],
        "Button Widgets": [
          "Raised Button",
          "Raised Button with Parameters",
          "Flat Button",
          "Icon Button",
          "Section 2 - Assignment",
          "Assignment Source",
          "Section 2 - Quiz"
        ],
        "Input Widgets": [
          "TextField",
          "Checkbox",
          "Radios",
          "Switches",
          "Slider",
          "Date Picker",
          "Section 3 - Assignment",
          "Assignment Source",
          "Section 3 - Quiz"
        ],
        "Scaffold": [
          "AppBar",
          "Floating Action Button",
          "Drawer",
          "Footer Buttons",
          "Bottom Navigation Bar",
          "Section 4 - Assignment",
          "Assignment Source",
          "Section 4 - Quiz"
        ],
        "Notification": [
          "Bottom Sheet",
          "Snack Bar",
          "Alert Dialog",
          "Simple Dialog",
          "Section 5 - Assignment",
          "Assignment Source",
          "Section 5 - Quiz"
        ],
        "Layouts": [
          "Rows and Columns",
          "Card",
          "Expanded",
          "Listview Builder",
          "Section 6 - Assignment",
          "Assignment Source",
          "Section 6 - Quiz"
        ]
      },
      "requirements": [
        "Understanding of the Dart language"
      ],
      "description": "Learn how to create fast and stunning mobile applications using Flutter, a new mobile framework by google. In this course you will quickly learn how to build an application in Flutter with no previous experience. It is HIGHLY recommended you understand the Dart programming language, see my Dart programming tutorials.",
      "target_audience": [
        "Anyone interested in learning Flutter mobile development"
      ]
    },
    {
      "title": "Ionic 2 Crash Course: Learn Ionic2 Fundamentals in 1.5 Hours",
      "url": "https://www.udemy.com/course/ionic2-tutorial/",
      "bio": "Use Your Angular 2+ Skills to Build and Deploy Mobile Apps to iOS and Android Devices",
      "objectives": [
        "Build and deploy mobile apps to iOS and Android",
        "Work with components",
        "Display data in lists",
        "Implement multi-page apps",
        "Add navigation",
        "Display modal dialog boxes",
        "Use icons",
        "Work with input fields",
        "Access native device functionality",
        "Access contacts on the mobile device",
        "Capture images using the camera",
        "Work with geolocation",
        "Display Google maps",
        "Theme your Ionic apps",
        "Customize app icon and splash screen"
      ],
      "course_content": {
        "Ionic Fundamentals": [
          "Introduction",
          "What is Ionic?",
          "Building Your First Ionic App",
          "Deploying to an Android Device",
          "Deploying to an iOS Device",
          "Components",
          "Lists",
          "Pages",
          "Navigation",
          "Modals",
          "Icons",
          "Inputs",
          "Buttons",
          "Asking Questions"
        ],
        "Accessing Native Functionalities": [
          "Introduction",
          "Platform Service",
          "Plugins",
          "AppVersion",
          "Contacts",
          "Camera",
          "Geolocation",
          "Google Maps"
        ],
        "Theming": [
          "Introduction",
          "Theming Ionic Apps",
          "Overriding Ionic Variables",
          "Custom CSS",
          "Page-specific Styles",
          "Icon and Splashscreen"
        ]
      },
      "requirements": [
        "Familiarity with the fundamentals of Angular2+"
      ],
      "description": "UPDATE: The course now includes closed captions!\n\n\nAre you familiar with the fundamentals of Angular 2+? Did you know that you can use your Angular 2+ skills to build and deploy mobile apps to iOS and Android devices?\n\n\n\nIn Ionic Crash Course, Mosh, author of several best-selling courses on Udemy, takes you from the ground and gives you a solid foundation to use the Ionic framework to build apps for iOS and Android.\n\n\nIf you're looking for a short and sweet course that gives you all the essential knowledge without rambling and wasting your time, this course is for you.\n\n\nBy the end of this course, you'll be able to:\nBuild and deploy apps to iOS and Android devices\nWork with components\nDisplay data in lists\nImplement multi-page apps\nAdd navigation\nDisplay modal dialog boxes\nUse icons\nWork with input fields\nAccess native device functionality\nAccess contacts on the mobile device\nCapture images using the camera\nWork with geolocation\nDisplay Google maps\nTheme your Ionic apps\nCustomize app icon and splash screen\n\n\n\n\nIf you've taken any of Mosh's courses before, you know what you get. And if not, this is how Mosh's students describe him and his teaching:\nA passionate and knowledgable instructor\n\nHighly pragmatic\nOutstanding delivery\nClear and straight to the point\nReal-world examples\nWorld-class production\n\n\n\n\n\n\nWHY THIS COURSE?\nThere are several other courses on here and most include several hours of content. So, why this short course?\n\n\nLet's be honest. How many times have you watched a 10-hour course to the end? Most of us live a busy life and with all the commitments we have, there is limited time for training. Plus, software industry progresses so fast and there are lots and lots of new things to learn about on a daily basis. Who has several hours to spend on each of these new tools, frameworks and languages?\n\n\nIn this short, 1.5-hour course, Mosh gives you all the essential knowledge you need to know to get started. You don't have to jump from one tutorial to another, or get lost in the documentation. Let Mosh show you the path and you can follow the rest on your own. Once you know the high-level architecture and the big picture, you'll be able to follow the official documentation to find your way around. And that's exactly what you're going to learn by the end of this course.\n\nSo, it's your choice. If you prefer a 10-hour course with a rambling instructor and lots of repetitive examples and content that you may not necessarily need, there are other courses out there. Otherwise, if you're looking for a crash course that teaches you the big picture and you can learn the rest on demand, based on the projects you are currently working on, stop looking elsewhere and enroll in the course now. You'll start building your first app in 10 minutes!\n\n\nAnd on top of that, this course now has closed captions and if you having hearing problems or are not a native English speaker, you'll be able to digest all the information in the course.\n\n\n\n\n\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture and if you feel like you haven't gained the confidence to build mobile apps using Ionic, ask for a full refund within 30 days. All your money back, no questions asked.\n\n\n\n\nABOUT YOUR INSTRUCTOR\nMosh (Moshfegh) Hamedani is a software engineer with 15 years of professional experience. He is the author of several best-selling courses on Udemy and Pluralsight with over 74,000 students in 172 countries. His students describe him as a passionate, pragmatic and motivational instructor.\n\n\nSo, do you want to use your Angular skills to build and deploy apps to iOS and Android devices?\nEnroll in the course now and you'll start building your first app in 10 minutes!",
      "target_audience": [
        "Anyone who wants to use their Angular skills to build mobile apps for iOS and Android"
      ]
    },
    {
      "title": "Android App Development & Android Hacking, Android Security",
      "url": "https://www.udemy.com/course/android-development-and-android-application-hacking/",
      "bio": "Android Application Development, Android Hacking, Android security concept with Android Penetration Testing from scratch",
      "objectives": [
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market. As more businesses develop mobile apps.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "Learn Android App Development step by step",
        "Learn Java",
        "Android Studio",
        "Gradle Build System",
        "Android Components",
        "Learn Publishing Android App on Google Play",
        "Learn Releasing Android App",
        "Become a professional Anroid App developer",
        "Android Software Stack",
        "Android Run time (ART)",
        "Analysis of APK file Structure in Android Studio",
        "Android's Security Model",
        "Application Sandboxing",
        "Permissions and Selinux",
        "Connect Emulator or real device and Kali",
        "Rooting Basics",
        "Reverse Engineering an APK file",
        "Information Gathering",
        "Repackaging and Resigning an APK",
        "Static Analysis with MobSF",
        "Root Detection",
        "Obfuscation Techniques",
        "OWASP Mobile Top 10 Vulnerabilities",
        "Android Pentesting on vulnerable mobile apps",
        "Enroll now, start your own App business and work from anywhere in the World",
        "android",
        "android app development",
        "android development",
        "Android Hacking",
        "Android Hack",
        "Hack Android",
        "Android Ethical Hacking",
        "Android",
        "Android App Development",
        "Android Development",
        "Android Studio",
        "Android 11"
      ],
      "course_content": {
        "Andorid App Development Course Overview": [
          "Introduction to Android App Development & Android Hacking, Android Security",
          "Project Files for Android",
          "FAQ about Android, Java and Android Hacking"
        ],
        "Introduction to Android": [
          "History of Android",
          "Android Ecosystem"
        ],
        "Android Architecture": [
          "Android Software Stack",
          "Android Run Time (ART)"
        ],
        "Introduction to Android Development": [
          "android developer overview",
          "Intro to Java"
        ],
        "Environment Setup": [
          "Getting Started with Java (JDK, JRE and JVM)",
          "Installing Java on Windows",
          "Installing Java on Linux",
          "Installing Java on Mac",
          "Quiz"
        ],
        "Development Environment | Android Development": [
          "What is IDE?",
          "Download and Run Eclipse",
          "First Java Program - Hello World",
          "Compiling and Running Applications",
          "Closer Look at the First Java Program",
          "Quiz"
        ],
        "Basics of Java Syntax": [
          "Closer Look at the Java",
          "What are Variables",
          "Basic Output",
          "Basic Input",
          "Comments in Java",
          "Data Types in java mobile app development",
          "Type Conversion & Type Casting",
          "Stack & Heap",
          "Arrays",
          "Quiz"
        ],
        "Operators in Java": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Unary Operators",
          "Equality and Relational Operators",
          "Conditional Operators in full stack java",
          "Operator Precedence in java full stack",
          "Expressions, Statements and Blocks",
          "Quiz"
        ],
        "Control Flow Statements": [
          "If, If-Else Statement",
          "If-Else - If Ladder Statement, Nested If Statement",
          "Switch-Case Statement",
          "Project 1: Calculator",
          "For Loops",
          "For-Each Loop",
          "While Loop",
          "Do - While Loop",
          "Break Keyword in mobile app",
          "Continue Keyword in full stack app development",
          "Return Keyword in android",
          "Project 2: Fibonacci Series",
          "Quiz"
        ],
        "Methods Functions in Android": [
          "What is Method?",
          "Method Calling",
          "Types of Methods & Method Return Types",
          "Method Overloading",
          "Project 3: Find Exponential Number",
          "Quiz"
        ]
      },
      "requirements": [
        "No prior knowledge about android app development is required!",
        "No Android or java programming knowledge required!",
        "4 GB (Gigabytes) of RAM or higher (8 GB recommended)",
        "64-bit system processor is mandatory",
        "10 GB or more disk space",
        "Enable virtualization technology on BIOS settings, such as “Intel-VTx”",
        "Desire to learn Android Application Development, understand hacker tools and techniques",
        "All items referenced in this course are Free",
        "A strong work ethic, willingness to learn and plenty of excitement about the back door of the digital world",
        "Don`t worry. Setup and installation instructions are included for each platform",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Determination to learn and patience for Android 11",
        "Determination to learn and patience for Android Development",
        "No programming Android App Development knowledge required!",
        "Nothing else! It’s just you, your computer and your ambition to get started today for build android app"
      ],
      "description": "Hi there,\nWelcome to the “Android App Development & Android Hacking, Android Security” course.\nAndroid Application Development, Android Hacking, Android security concept with Android Penetration Testing from scratch\n\nIn this course, you will learn Android development and Android Hacking at the same.\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nOAK Academy's Java instructors specialize in a wide array of Java programming practices. Whether you need a basic introduction to Java and website building using Selenium WebDriver or are continuing your Android app developer education, OAK has you covered.\n\nI really like the approach of this course. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download. That's way in this course, we also focused on android Hacking, android Hack, hack android, android ethical hacking and android hacking.\n\nChances are, you’ve heard of Android many times. You may even have an Android smartphone, tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or denies permission. App permissions in Android ensure the user’s protection from malware and software viruses.\n\nView free Android Development courses\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to learn java from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nDo you care about the security of your application?\nIf your answer is “yes” to these questions and if you want more, you are at the right place!\nYou will learn Android development step-by-step with hands-on demonstrations. In this course, we will learn to build and publish 2 major apps. During the lectures, we will also be practicing with more than 10 examples.\nFirst of all, I will teach the java programming language that we will use while developing an android application. Java programming is a very old and widely used language. Developing an android application with java will make your job much easier. Thus, you will be able to easily develop your android apps.\n\nAlso, Android is the world's most popular mobile operating system and as a result, there are potentially millions of smartphone users at risk of data theft and other cyber attacks. That's why in this course, we also focused on Android Hacking, Android Hack, Hack Android, Android Ethical Hacking, and android hacking.\nMobile phones, tablets, computers, and more have become an essential part of our daily life. People using the phones could be hit by bugs that are distributed widely and can be exploited by hackers relatively easily. These devices store critical information that needs to be protected from those who want to access it without our knowledge such as our contact list, passwords, emails, etc.\nThis is where the importance of the mobile phone's security comes into play.\nThis course is for all levels. We will take you from beginner to advance level. You will learn step-by-step with hands-on demonstrations.\nAt the end of the course you will learn;\nLearn Android App Development step by step\nLearn Java\nAndroid Studio\nGradle Build System\nAndroid Components\nLearn Publishing Android App on Google Play\nLearn Releasing Android App\nBecome a professional Android App developer\nAndroid Software Stack\nAndroid Run time (ART)\nAnalysis of APK file Structure in Android Studio\nAndroid's Security Model\nApplication Sandboxing\nPermissions and Selinux\nConnect Emulator or real device and Kali\nRooting Basics\nReverse Engineering an APK file\nInformation Gathering\nRepackaging and Resigning an APK\nStatic Analysis with MobSF\nRoot Detection\nObfuscation Techniques\nOWASP Mobile Top 10 Vulnerabilities\nAndroid Pentesting on vulnerable mobile apps\nEnroll now, start your own App business and work from anywhere in the World\nAndroid Hacking\nAndroid Hack\nHack Android\nAndroid Ethical Hacking\nAndroid\nAndroid App Development\nAndroid Development\nAndroid Studio\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\nWhat’s important\nThere’re a lot of people out there teaching Android 11 who are not developers. We’re developers with many years’ field experience with the Android platform. So you will learn from an expert who has a great knowledge on Android. This course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\nFirst of all, I will teach the java programming language that we will use while developing an android application. Java programming is a very old and widely used language. Developing an android application with java will make your job much easier. Thus, you will be able to easily develop your Android apps.\nEveryone is talking about design, coding but no-one is talking about how to make money with apps.  There are a tons of tutorials for how to make game, but everyone is silent about making money with apps and they are keeping it as a secret. We believe the power of sharing. Sharing is caring, any? So we decided to come out and teach you how to actually make money with apps.\n\n\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge.\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increases its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\n\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\n\nVideo and Audio Production Quality\nAll our contents are created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the “Android App Development & Android Hacking, Android Security” course.\nAndroid Application Development, Android Hacking, Android security concept with Android Penetration Testing from scratch",
      "target_audience": [
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone who wants to become an Android Developer",
        "Anyone who has no previous coding experience but wants to become expert",
        "Penetration testers who want to do a Penetration Testing against Android mobile phones.",
        "Application developers who want to write secure mobile applications.",
        "Anyone who want to protect themselves against mobile attacks.",
        "Programmers who are interested in building Android apps",
        "Mobile app developers who want to learn how to expand their skills into a business",
        "Technical or non-technical entrepreneurs who want to start mobile app business",
        "Freelancers who want to add development services to their offerings",
        "If you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications",
        "Who wants to improve their existing android and android development knowledge.",
        "Those who want to develop applications using the Java programming language.",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to create Android Applications",
        "Anyone who wants to learn Android 11",
        "Those who want to develop an Android mobile application.",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Anyone who become an android developer from scratch",
        "Those who want to develop an Android Hacking"
      ]
    },
    {
      "title": "Ionic 3 - Learn How to Design Ionic Apps",
      "url": "https://www.udemy.com/course/design-ionic-apps/",
      "bio": "Improve your Ionic Framework knowledge by learning how to design & develop Ionic Mobile Apps.",
      "objectives": [
        "Design & Develop Ionic Apps",
        "Freelance as Ionic App Designers",
        "Design and Develop Ionic App Themes for Resale",
        "Seek Employment as an App Designer"
      ],
      "course_content": {},
      "requirements": [
        "You should have access to a computer.",
        "Being familiar with Ionic will be an advantage but is not necessary.",
        "Be familiar with HTML and CSS"
      ],
      "description": "Hi there!\nThanks for checking out this course. So, everyone seems to be talking about how to develop Ionic apps, but no one ever seems to really talk about HOW TO DESIGN IONIC APPS!\nYou might end up learning all the development principles for Ionic (and that is great), but most of these course only teach you things like, how to create a to-do-list and other similar apps, but don't really teach you design!\nThis course is NOT focused on teaching you how to DEVELOP Ionic apps, BUT rather, HOW TO DESIGN ionic apps.\nThis course will cover the following:\nHow to create an Intro / Welcome Slider\nHow to use Google Fonts in your Ionic Apps\nHow to setup Font Awesome in your projects\nHow to design Attractive Login Pages\nHow to create Video Streaming Pages for YouTube and Vimeo\nHow to create Parallax Images for your Apps\nCreating Automatic Sliders\nHow to create Side Menu Pages\nPlus a host of other cool things along the way!\nIf you are wanting to increase your Ionic knowledge, then join me on this journey and let's get started!",
      "target_audience": [
        "Anyone wanting to learn Ionic",
        "Designers interested in designing Ionic Apps",
        "Anyone looking at generating money from designing Ionic Apps"
      ]
    },
    {
      "title": "The Complete Flutter and Firebase Developer Course",
      "url": "https://www.udemy.com/course/flutter-development/",
      "bio": "Build Stunning Serverless Android & iOS Apps using Google’s great new mobile UI framework.",
      "objectives": [
        "Build a Beautiful Flutter App from scratch",
        "Dart Programming experience for other Frontend and Mobile projects",
        "Cloud Firestore Database integration for our Flutter App",
        "Firebase Authentication for our Flutter App",
        "Firebase Functions to safely handle changes to Cloud Firestore"
      ],
      "course_content": {},
      "requirements": [
        "No Prior Knowledge is required! - Just get Excited about learning",
        "Access to a computer (Windows, MacOS, Linux)",
        "A free Firebase account through Google (We'll walk you through making one!)"
      ],
      "description": "Flutter is Google's brand NEW mobile UI framework build to make developing beautiful and functional interfaces for both iOS and Android natively. Flutter Apps are written in a language called Dart, which is a simple client/server language that you'll learn along the way!\nThis course is designed specifically for people just starting out with Flutter and Mobile development who want to build a fully functioning, app that serves a real purpose. You'll learn how to tie your app into Firebase services in order to make it truly Serverless.\nSome of the Firebase Services you'll learn along the way:\nCloud Firestore - NoSQL Cloud Database\nFirebase Storage - Raw Cloud File storage\nGoogle Sign-in Authentication - Plus options to add sign-in for GitHub, Facebook, Email etc.\nFirebase Functions - Write a number of Cloud functions that our app with use to safely handle requests",
      "target_audience": [
        "Anyone who wants to kickstart a career or hobby developing apps",
        "Anyone who wants to build stunning cross-platform mobile apps",
        "Anyone who has worked with other UI frameworks and are looking to up-skill",
        "Anyone wanting to learn to code in a practical way",
        "Anyone looking to start Building Serverless applications"
      ]
    },
    {
      "title": "Learn and Understand Building Modern iOS Apps",
      "url": "https://www.udemy.com/course/modern-ios-dev/",
      "bio": "Learn from USC professor on how to build modern iOS apps",
      "objectives": [
        "Master programming fundamentals - no previous experience needed!",
        "Understand how to build quality iOS apps that sell on the App Store",
        "Leverage the powerful Xcode 11 IDE to write code more quickly",
        "Use popular industry design patterns, ensuring you'll write quality code",
        "Structure your code for reuse using Object Oriented Programming",
        "Clone the core feature set of two top iOS Apps - Lyft and Spotify",
        "Build proficiency with Swift 5.0 programming language"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites"
      ],
      "description": "This course is carefully designed to take someone with either no programming or iOS experience, and teach them exactly what it takes to build an app.  You'll learn how to build modern iOS apps by building the core features of two iconic apps of our time: Lyft and Spotify.\n\n\nI've taken the best of my material and experience of 5+ years of teaching  at University of Southern California and General Assembly, and packaging it together in this course, just for you.\n\n\nUIKit vs SwiftUI\nThis course will be covering UIKit over SwiftUI for several reasons:\nUIKit is undeniably the predominate framework used by Fortune 500 and tech companies. If you're looking for an iOS career or you're working with an existing codebase, virtually all of these iOS apps will be UIKit driven. We are comparing a technology with over a decade of history (UIKit) vs one that was introduced in less than a year (SwiftUI).\n\n\nSwiftUI has a steeper learning curve, less documentation, and  significantly smaller community size. Apple’s SwiftUI documentation is limited at best. Many developers have been writing books, articles, and tutorials on SwiftUI. But at this time, everyone is a beginner and no one is an expert. There’s much less SwiftUI learning material and much more open issues / unanswered questions than UIKit.\n\n\nSwiftUI needs much more time to mature. From interviewing iOS engineers I know who's worked directly with SwiftUI at production level, it isn't a technology that's ready for primetime and has several limitations (i.e. limited catalogue of view components, no custom view extensions, etc.). This takes time for Apple engineers to introduce updates and bug fixes.\n\n\nSwiftUI is currently at a place where it's not easy for beginners, and not ready for professionals. For those reasons, this course offers a much more widely used, stable, and easier to develop with technology.\n\n\nZero Risk\nThis course comes with a full 30 day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, simply let me know and I’ll refund you 100%, every last penny no questions asked.\nYou either end up with iOS skills, go on to develop great apps and potentially make an awesome career for yourself, or you try the course and simply get all your money back if you don’t like it…\n\n\nReady to get started?\nEnroll now using the “Add to Cart” button on the right, and get started on your way to creative, advanced Java brilliance. Or, take this course for a free spin using the preview feature, so you know you’re 100% certain this course is for you.",
      "target_audience": [
        "People who have an app idea and want to build the app of their dreams",
        "Engineers who want to learn iOS development",
        "People who are looking for a career switch into iOS development"
      ]
    },
    {
      "title": "Develop Full iOS Twitter Clone App in Swift & Custom Backend",
      "url": "https://www.udemy.com/course/swift-php-mysql-html/",
      "bio": "Best Swift, PHP, HTML Course Ever | Build Full Twitter Clone | All Features & Functionalities | Build iOS Social Network",
      "objectives": [
        "Create own social network on custom backend",
        "Program own backend server",
        "Code on Swift and Xcode",
        "Code on PHP",
        "Code on MySQL",
        "Code on HTML",
        "Develop outstanding animations and effects of App’s User Experience and User Interface",
        "Build professionally well designed database",
        "Create live background view",
        "Deep and advance programming",
        "Code professional User Experience and User Interface",
        "Select profile picture and save it in our server",
        "Show all posts made by user",
        "Search users in database with Swift",
        "See all the users in database with Swift",
        "Go to Home Page of certain user",
        "See posts made by certain user",
        "Add records to database with Swift",
        "Delete records from database with Swift",
        "Search records in database with Swift",
        "Update records in database with Swift",
        "Upload files to database with Swift",
        "Be professional programmer",
        "Make posts",
        "Upload files to own server",
        "Advance Swift & Xcode knowledges",
        "Login",
        "Sign Up",
        "Email of restoration confirmation",
        "Email of resetting and creating new password",
        "and many many more!"
      ],
      "course_content": {},
      "requirements": [
        "You need only Mac OS"
      ],
      "description": "Create App to make you rich and popular? - Yes! We learn it.\nImprove yourself FROM BEGINNER (average) TO ADVANCE? - Yew! You'll be Advance developer at completion.\nBecome professional Server Developer? - Yes! We learn it.\nLearn several language at once? - Yes! We do it and combine them all together.\nCreate any in your mind? - Yes! We learn it.\nYou are, where you should be! Your destiny brought you here!\nWHY EXACTLY ME:\nMy name's Akhmed. I am the creator of most popular coding courses, like:\n- Develop Full iOS Facebook Clone App in Swift, Xcode and PHP\n- The Complete iOS Development Course. Swift Programming A-Z\n- Develop Full iOS Twitter Clone App in Swift & Custom Backend\n- Develop Full iOS Instagram Clone App in Swift & Xcode\nTHIS COURSE IS EXACTLY FOR YOU!\n⭐️⭐️⭐️⭐️⭐️\"Before I was using, Parse, Heroku, Firebase, as a backend, but I always wanted to create app that will work on my independent server. With Akhmed's course I created my own social network along with my own server. My social network is getting popularity!\" - S. Goethe\n⭐️⭐️⭐️⭐️⭐️\"Akhmed's courses are very easy to follow. Akhmed shows difficult things in most easiest way. I am very happy with result. He writes professional code.\" - U. Shivaji\nProgramming skills?\nNo development skills required. This course guides your from scratch. I explain every detail of coding. I teach you several languages at once. I teach you to create outstanding iOS app working on your server you can make money from.\n⭐️⭐️⭐️⭐️⭐️\"Before I knew only Swift but with this course I learned additionally PHP, MySQL, HTML. So, I am thinking to become web devebper as well, because now I have a good base!\" - I. Christos\n⭐️⭐️⭐️⭐️⭐️\"Explanation is very clear. Akhmed is explaining every detail of programming. I've gotten good experience. Keep going making such a greet courses.\" -T. Benton\nWhat at completion?\nDon't worry, at completion of the course, you'll know all about Swift, PHP, SQL, HTML languages; about Server Development; Databases Logic Creation; Database Structure Creation; Server & Database Connection to Your App; about Creating Social App working with your own Server and many many many more.\n⭐️⭐️⭐️⭐️⭐️\"Very great teacher. Teaches you a lot of new tricks that never been shown before by others.\" - B. Okafor\n⭐️⭐️⭐️⭐️⭐️\"After I completed this course I was able to create my apps submitted to AppStore. I am very happy. People like my apps and it brings me income.\" - Q. Javed\nThis course teaches you:\nFull Swift Language and Programming\nFull PHP Language and Programming\nFull SQL Language and Programming\nMain HTML Programming\nFull Apache Development\nFull iOS Development In-Depth\nFull Backend (server) Development\nDatabase Structure Development\nAdvance Structures Development\nDatabase Logic Development and Implementation\nFull App Development that works synchronously with your Backend Server\nCreate outstanding Designs for your app\nCreate professional Ul and UX with deep programming\nand many many many more\n⭐️⭐️⭐️⭐️⭐️\"This course is amazing. The instructor explains how to make your own custom backend server which is something I really wanted to learn long time ago and not to depend on other backends that might be retired. He always answer our questions. I highly recommend this course!\" - S. Sol\n⭐️⭐️⭐️⭐️⭐️\"The material is well presented and easy to follow. Great content and video / audio quality. A++\" - M. Cukich\nThis course makes you:\nProfessional OS Developer you can start earn money on freelance or apply for a developer job\nCode confidently on Swift\nCode confidently on PHP\nWork confidently with MySQL\nCode confidently on HTML\nProfessional Backend (server) Developer\nGreat in Web Development\nProfessional builder of Database Logics and Structures\nProfessional in creating App Designs\nProfessional in creating Web Designs\nAble to realize any of your idea\nCreate outstanding project and get rich\n⭐️⭐️⭐️⭐️⭐️\"All the lessons are so clear and very easy to follow. I am coming from Android platform and surprisingly it was very easy to follow and understand. All the php concepts are explained very well especially for beginners.\" - M. Allababidi\n⭐️⭐️⭐️⭐️⭐️\"I can honestly say that I've learned more about application development from Akhmed's courses than anywhere else.\nBEFORE I THOUGH I DON'T NEED SERVER DEVELOPMENT. NOW I REALIZED - IF APP WORKS WITH NO SERVER YOU HAVE LESS CHANCE TO HAVE SUCCESS.\" - K. Grozav\nHow we'll work?\nWe start from installing necessary softwares.\nI introduce you to server side: what is it, why we need it, how to deal with, how it works, how to configure.\nI teach you full SQL language from scratch.\nI teach you to work with Databases and Logics.\nI teach you full PHP programming language from scratch.\nI teach you main of HTML and Web Development.\nI teach you full Swift programming language to become advance developer.\nI teach you to Design and Customize Your App.\nWe will create ready-to-publish outstanding amazing and professional iOS Social App.\nI teach you professional programming tricks.\nYOU CAN CREATE ANY PROJECT IN YOUR MIND\n⭐️⭐️⭐️⭐️⭐️\"As always he made a completely comprehensive tutorial. And also as always I'm very pleased with my purchase. I can't wait to see what he comes out with next. Although my programming skills are increasing exponentially you're never too old to learn more so I will buy anything he puts out. I would recommend this teacher and this tutorial to anyone serious about learning all the aspects of professional programming I would recommend this teacher and this tutorial to anyone serious about learning all the aspects of pro professional programming.\" - G. Harrison\n⭐️⭐️⭐️⭐️⭐️\"Great course!  Came in with only knowing basic programming and left with the ability to create my own server and swift app.\" - J. Buendia\n⭐️⭐️⭐️⭐️⭐️\"Good, you explained just what i need :)\" - Karim B.\n⭐️⭐️⭐️⭐️⭐️\"I love Akhmed!! His courses are so comprehensive.\" - Gerard\n⭐️⭐️⭐️⭐️⭐️\"Great value of money totally worth it.\" - Mohsin\n⭐️⭐️⭐️⭐️⭐️\"This course is really in-depth. I like how everything is covered in Xcode and Swift. I also bought Akhmed's other courses and they great as well.\" - Andre Serna\n⭐️⭐️⭐️⭐️⭐️\"A worthy adventure! Great content, exciting functionality, and continuous learning. Very satisfied.\" - Jimmy Fisher\n⭐️⭐️⭐️⭐️⭐️\"Learning a lot, language transition is very easy to understand unlike some other instructors\" - John Martin\n⭐️⭐️⭐️⭐️⭐️\"In this course I learned many things that I had not found in others all over the Internet. Very useful! Really worth it! The teacher is very well trained! Very good!\" - Julio Vicente Perez\n⭐️⭐️⭐️⭐️⭐️\"Perfect!. Exactly what I needed. This teacher does a fantastic job. He explains the concepts in a clear and easy to understand manner. I am new to IOS application programming, but I feel that I am acquiring a solid foundation. This teacher is incredible. Very good course.\" - J.P.\n⭐️⭐️⭐️⭐️⭐️\"The course is a great start for those who want to develop in Swift. The instructor gives as much information as needed to accomplish all the assignments. Great and easy-to-listen course!\" - Omar Hosni\n⭐️⭐️⭐️⭐️⭐️\"This course definitely changes my life. I did not know everything about Swift before learning it. But when finishing it, i get a job in a big company with highly paid. Thank you so much for changing my life, Akhmed Idigov\" - Thành Trung\n⭐️⭐️⭐️⭐️⭐️\"Everyone, this course is great. I recommend this to everyone. I have learnt a lot from watching Akhmed. He has also been great at helping me in the Discussions. Great teacher.\" - Jonathan M.\n⭐️⭐️⭐️⭐️⭐️\"This is course is worth more than we pay. If you really wanna know the logic behind Dynamic app, Social networking apps like Twitter, Instagram or any other platforms we see in daily life you should definitely take this course. Also the knowledge you gain by taking this course you can start working on your own ideas. It all depends on you how you use it. Keep learning and coding , Cheers.\" - Mirways S.\n\n\nThe Best Purchase\nIf you are not satisfied, I offer a full money back guarantee, so long as you request it within 30 days of your purchase of the course. I regularly update course with additional videos explaining different awesome features.\nYou'll get +30 hours professional HD video education content including coding, creating user interface, learning designing, source code, other materials, design sketches and many many more.\n\nWhat are you waiting for? This is the only course that worth to go through! Don't hesitate and enroll in this course. It's investment in your bright feature!\n\n\niOS 13 AND SWIFT 5 VERSION IS INCLUDED",
      "target_audience": [
        "People wanting to create own custom backend server",
        "People wanting to become Professional iOS Developer",
        "People wanting to create own social network",
        "People wanting to learn how to create outstanding app designs",
        "People wanting to learn how to make incredible UI and UX",
        "People wanting to learn deep programming",
        "People wanting to learn deep animation programming"
      ]
    },
    {
      "title": "Android App Development Course",
      "url": "https://www.udemy.com/course/android-app-development-course/",
      "bio": "Learn Android App Development Cours with Android 9 (Pie) Build real Apps like Uber , Whatsapp, Google News and Mx Player",
      "objectives": [
        "Professional Android development"
      ],
      "course_content": {
        "Setup": [
          "Download and install android Studio on Windows",
          "Hello World Project"
        ],
        "Basic Views and Layouts": [
          "Constraint Layout",
          "TextView",
          "Buttons",
          "EditText or Plain Text",
          "ImageView",
          "Currency Converter App",
          "Currency Converter App Solution"
        ],
        "Java basics": [
          "Hello World JAVA",
          "Java DataTypes",
          "Arrays in java",
          "HashMaps",
          "Classes and Objects",
          "Loops",
          "Inheretance Concept",
          "Inheritance Implementation",
          "Static Keyword"
        ],
        "Layouts and Media": [
          "Theme Demo",
          "Linear Layout",
          "Media Player",
          "Video View"
        ],
        "Activities and Passing Data": [
          "Actvities",
          "Activity Life Cycle"
        ],
        "ListView and RecyclerView Android": [
          "ListView",
          "recyclerview",
          "problem solution"
        ],
        "Google News App": [
          "fetching posts",
          "Completing Google News App"
        ],
        "Databases": [
          "Shared Preferences and SQLITE database",
          "Firebase"
        ],
        "Whatsapp": [
          "Firebase Authentication part 1",
          "Firebase Authentication part 2",
          "ViewPager",
          "Adding Users and Uploading Profile Pic",
          "output of hardwork",
          "Autologin and Profile Pic Settings",
          "Displaying Users",
          "Message Activity",
          "Sending Message",
          "Displaying Messages ...",
          "SIGN OUT",
          "ISSUES FIXED",
          "showing users with we have some chat",
          "User Online , offline."
        ],
        "video calling": [
          "calls fragment",
          "webrtc",
          "adding sinch to our project",
          "finalizing whatsapp"
        ]
      },
      "requirements": [
        "just one should be Eager to learn"
      ],
      "description": "Android App Development Course For Every Level of Students\n\n\nSo You want to Build Apps ?\nThen you are right place and you want to build apps at your on time , on your selected place from the comfort of home and you without having to read articles and books and you want see how the professional apps are created.\n\n\nIn this course i will teach you from scratch to the Expert and This course will make you  hero from zero. In this course i have taught from the very basic level to the advanced level.You will be able to build real world applications and lead the world with your innovative ideas to apps and you can earn from those apps.\n\n\nWhy Learn Android ?\nThere are 2.1 billion Android users and android has 88% of Market share and its growing day by day. Android is Ruling the Mobile World.\n\n\nWhat is In this Course ?\n\n\nFirst we will learn java and Object oriented programming concepts and practice them and Once they are ready then i will introduce you to the android development and we will learn the basics. Once are base is strong the we will try making apps and believe i will enable you to build apps like whatsapp, uber, Google News and Mx Player. If you were able to build these apps then no one can stop or come in way of your bright future.\n\n\nWho is this Course for ?\nAny one who is eager to learn, any one who want to be a successful android developer, any one who want to show the world that he can do it.\nNo Prior Programming Knowledge Required !! i have taught everything you need to know ..\nThe only requirement is will, believe and concentration.\n\n\nWho Am I ?\nI am a computer science graduate and i am eager to teach since i was in university. I have 3 years of Professional android development course, i have built plenty of android apps but the apps i cannot forgot are Mx Player Clone , Uber and Whatsapp ,Browser.\nI started learning android 5 years ago when i even did not know programming but within year everything changed so quickly that now i am teaching Android.\nIts my second course my first course was How to build Mx Player Clone. First course success with over 5000+ happy students\nmotivated me to create this course.\n\n\nWhy I Created this Course ?\nWhen i started learning android there was no one who was teaching how to create real apps every one just teaching the basic android, No one taking it to the advanced level, No one was sharing the process of creating apps. So i messed my head here and there to build apps and it took lot of time but it polished my skills and motivated me. Then i decided that one day i will create the course that will make the student understand how the professional apps are created and i will share my Experience with the world and final Here I am !!\n\n\nSo what are you Waiting For ?\nDo you want to learn or you want to keep reading and reading !!. Enroll In the course to make your ideas Reality.",
      "target_audience": [
        "Beginners to Android Development curious about android"
      ]
    },
    {
      "title": "Flutter Face Recognition - Build Attendance & Security Apps",
      "url": "https://www.udemy.com/course/face-recognition-detection-in-flutter-2023-guide/",
      "bio": "Build Face Detection & Recognition Apps in Flutter | Real-Time Camera Integration | AI Models | TFLite | iOS & Android",
      "objectives": [
        "Build face recognition apps in Flutter using AI models like FaceNet and MobileFaceNet",
        "Perform face detection with Google ML Kit using both images and real-time camera feed",
        "Implement real-time face recognition in Flutter using the camera and TensorFlow Lite",
        "Capture and process images from gallery and camera in Flutter for face analysis",
        "Use TensorFlow Lite to integrate machine learning models in cross-platform mobile apps",
        "Develop face-based login and authentication systems for Android and iOS",
        "Store and manage registered faces with user names in a Flutter database",
        "Create intelligent attendance and security systems powered by face recognition",
        "Learn how to display and process live camera frames for real-time AI tasks",
        "Master end-to-end flow of AI-powered facial recognition in Flutter app development"
      ],
      "course_content": {
        "Introduction": [
          "Face Recognition & Detection in Flutter - 2025 Guide",
          "Course Update December 2024",
          "How Face Recognition is Performed in Flutter"
        ],
        "Setup for MacOS": [
          "Install the Flutter SDK",
          "Install Android Studio",
          "Install and Setup XCode",
          "Creating A Flutter Project and Installing in IOS Simulator",
          "Install the Android Emulator"
        ],
        "Setup for Windows": [
          "Installing Flutter on Windows",
          "Installing Android Studio",
          "Creating Android Virtual Device"
        ],
        "Choosing or Capturing Images in Flutter": [
          "Creating a new Flutter Project and Creating Application GUI",
          "Adding Libraries and setting configurations for Android & IOS in Flutter",
          "Choosing Images From Gallery In Flutter",
          "Capturing Images using Camera in Flutter",
          "Image Picker Flutter Overview"
        ],
        "Face Detection With Images in Flutter": [
          "Section Introduction",
          "Setting up face detection & recognition flutter project",
          "What we have done so far in Flutter",
          "Adding Face Detection Library in Flutter",
          "Setup for IOS in Flutter",
          "Setup for Android in Flutter",
          "Performing Face Detection In Flutter With images",
          "Drawing rectangles around detected faces in Flutter",
          "Flutter Face Detector Painter class"
        ],
        "Face Recognition With Images In Flutter": [
          "Cropping detected faces in Flutter",
          "Adding face recognition models & libraries in Flutter",
          "Passing faces to face recognition model and getting face embedding in Flutter",
          "Registering faces in Flutter Application",
          "Face Registration Dialogue in Flutter",
          "Performing Face Recognition in Flutter",
          "Drawing recognitions on screens with faces in Flutter",
          "Validating Recognitions in Flutter"
        ],
        "Using Tensorflow Lite Models in Flutter for Face Recognition": [
          "Loading Tensorflow lite models in Flutter",
          "Passing Input to the tflite models and getting the outputs in Flutter"
        ],
        "Storing Registered Faces In Database in Flutter": [
          "Creating database and loading data in Flutter",
          "Registering new faces in database in Flutter",
          "Comparing face embeddings and getting recognitions in Flutter",
          "Using FaceNet model in Flutter"
        ],
        "Displaying Live Camera Footage In Flutter": [
          "Creating a new Flutter project and adding libraries",
          "Adding Libraries and Setup for Android & IOS",
          "Displaying Camera Footage in Flutter",
          "Getting frames of Camera Footage in Flutter One By One",
          "Flutter Camera Package Overview"
        ],
        "Realtime Face Detection In Flutter": [
          "Realtime Face Detection In Flutter",
          "Setting up the flutter project for realtime face recognition application",
          "What we have done so far in Flutter",
          "Getting frames of live camera footage in Flutter",
          "Switching camera directions in Flutter",
          "Performing face detection in Flutter with live camera footage",
          "Drawing rectangles around detected faces in realtime in Flutter",
          "Flutter Face Detector Painter"
        ]
      },
      "requirements": [
        "A desire to learn and apply AI and Machine Learning in mobile app development",
        "No prior experience with TensorFlow Lite or face recognition models is needed — everything is explained from scratch"
      ],
      "description": "Update December 2024 – All libraries and code fully updated for the latest Flutter and TensorFlow Lite versions.\nUnlock the power of AI and facial recognition in your mobile apps with this complete hands-on guide to Face Recognition in Flutter! Whether you're a beginner or intermediate Flutter developer, this course will take you from understanding the basics of face detection and recognition to building fully functional, real-world applications using TensorFlow Lite, ML Kit, and the device camera.\n\n\nWhat You’ll Learn:\nHow Face Recognition Systems Work (Face Detection + Face Matching)\nFace Registration and Storage using Images & Live Camera Input\nFace Recognition using AI Models like FaceNet and Mobile FaceNet\nReal-time Face Detection & Recognition in Flutter using Camera Plugin\nImage Selection from Gallery & Camera Integration\nUse of TensorFlow Lite Models for On-Device Processing\nFace Detection using Google’s ML Kit in Flutter\nImplementing Face-Based Authentication Systems\nBuild Real Apps for Security, Attendance, and User Verification\n\n\nReal-World Applications You’ll Build:\nFace Recognition Login App (Authentication via Camera)\nAttendance Tracking App for schools and workplaces\nSurveillance-Style App with real-time detection and recognition\nFace Database Management with user registration & name mapping\n\n\nTechnologies & Tools Covered:\nFlutter (Cross-platform mobile framework)\nTensorFlow Lite (For running ML models on-device)\nMobileFaceNet & FaceNet Models (Pre-trained models for recognition)\nML Kit Face Detection (Google's fast and reliable API)\nCamera Plugin & Image Picker (Capture & load images easily)\n\n\nWho Should Enroll?\nFlutter Developers interested in integrating Machine Learning\nAI Enthusiasts looking to build Face Recognition mobile apps\nApp Developers building secure login/authentication systems\nAnyone interested in AI-powered camera apps with real-world utility\n\n\nBy the End of This Course, You Will Be Able To:\nBuild and deploy AI-powered Face Recognition apps on iOS & Android\nUse TensorFlow Lite models in real-time with live camera footage\nDetect and recognize faces in both images and video frames\nCreate face-based user verification and attendance apps\nMaster image input pipelines and real-time processing in Flutter\n\n\nDon't miss this opportunity to master face recognition in Flutter, a must-have skill in today’s AI-driven mobile development landscape. Enroll now and start building powerful, intelligent apps that stand out!",
      "target_audience": [
        "Beginners eager to explore machine learning in mobile development with hands-on projects",
        "Flutter developers who want to integrate real-time face recognition and detection into their mobile apps",
        "App developers interested in using AI and TensorFlow Lite in Android & iOS apps",
        "Anyone looking to master real-time camera integration with AI models in Flutter",
        "Developers building security, attendance, or authentication apps using facial recognition"
      ]
    },
    {
      "title": "Android Firebase Firestore - Masterclass - Build a Shop App",
      "url": "https://www.udemy.com/course/android-firebase-firestore-masterclass-build-a-shop-app/",
      "bio": "Build A Complete Android E-Commerce App From Scratch, Using Google Firebase Firestore - NoSQL Database",
      "objectives": [
        "You will be able to create an Android E-Commerce Application from scratch using Google Firebase - Firestore",
        "You will learn Firebase basics, how to upload and download data to and from the online database, etc.",
        "Build your own cloud apps with cloud storage, like Whatsapp, Instagram, or Tinder",
        "Learn Firebase basics, how to upload and download data to and from the online database, etc.",
        "You will learn Build an application with Cloud Database Firebase",
        "You will know how to build different Firebase modules, such as authentication, cloud storage, database"
      ],
      "course_content": {},
      "requirements": [
        "A Windows, Mac or Linux Computer",
        "Basic Android Developer knowledge (e.g. completed first half of my Android Masterclass)"
      ],
      "description": "E-commerce is the future of commerce, and throughout this brand new course, we will learn how to build this future together.\nThis new course is specifically designed so you can build your own Firebase e-commerce application using simple technics and an easy step-by-step guide.\nYou probably already have some experience with Android Programming, but haven't worked with cloud solutions such as firebase yet? No problem at all! This course is suitable for everyone with the motivation to build his own application with a cloud database. I will give you simple explanations of the complex tools and will help you with every step.\nIn this course, you will learn how to build your own e-commerce app for Android using the Firestore database of Google Firebase\nYou will build the shop app MyShopPal which is an adjustable e-commerce application that you can use to create your own store or use it as a template to create an e-commerce app for your client. The code itself is worth hundreds if not thousands of dollars.\nIn this course we are covering such topics as\nFirebase basics\nHow to upload and download data to and from an online database\nDisplaying Images from the Cloud in your app\nCreating User Profiles\nUploading and displaying Products\nBuilding a Cart System\nSelecting images from your phone\nAfter my step-by-step guidance, you will be able to\nbuild your own Cloud Apps. Not only Shop apps but with the Firebase skills you will acquire, you will also be able to build Apps like Whatsapp, Instagram, or Tinder\nWe will build the application from scratch together. Starting with the login page and authentication, dashboard with your merchandise we will build the complete and finished app.\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you feel like this course is not for you, ask for a full refund within 30 days. All your money back, no questions asked.\nABOUT YOUR INSTRUCTOR:\nMy name is Denis Panjuta and in my courses, I have taught over 150.000 students how to code. I have a Bachelor of Engineering at the University of Applied Sciences in Constance (Germany). I love teaching and creating high-quality courses. My mission is, to teach programming to over 10 M people!",
      "target_audience": [
        "If you are Android Developer curious about Firestore",
        "If you are beginner Android Developer looking for the next exciting project",
        "If you want to quit your job and work as a developer from anywhere in the world, e.g. a beautiful beach, then take this course"
      ]
    },
    {
      "title": "Flutter & Dart Development For Building iOS and Android Apps",
      "url": "https://www.udemy.com/course/flutter-mobile-development/",
      "bio": "Flutter is created by Google and is the future of all iOS and Android applications. It is powered by the Dart language",
      "objectives": [
        "Flutter Design & Development",
        "Dart Programming",
        "Android Programming",
        "iOS Programming",
        "Mobile Development",
        "Swift Programming",
        "Objective-C Programming",
        "Kotlin Programming",
        "Java Programming",
        "Application Programming",
        "Mobile Design",
        "Semantics of general programming",
        "The format of coding applications",
        "All the features of Flutter",
        "Application programming",
        "Mobile programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup On Windows",
          "Setup On Linux",
          "Setup On Mac iOS",
          "Setup On Mac Android",
          "App Base Code"
        ],
        "Widgets": [
          "Text",
          "Container",
          "Row",
          "Column",
          "Stack",
          "Image",
          "Padding",
          "Center",
          "Align",
          "Constrained Box",
          "Baseline Class",
          "Aspect Ratio",
          "Sized Box",
          "Transform",
          "Quiz 1 - Widgets"
        ],
        "Gestures": [
          "Pointers",
          "Tap",
          "Double Tap",
          "Long Press",
          "Vertical Drag",
          "Horizontal Drag",
          "Pan",
          "Quiz 2 - Gestures"
        ],
        "Navigation Components": [
          "Scaffold",
          "Appbar",
          "BottomNavigationBar",
          "TabBarView",
          "Drawer",
          "SliverAppBar",
          "Quiz 3 - Navigation Components"
        ],
        "Input/Selection Components": [
          "FlatButton",
          "RaisedButton",
          "DropdownButton",
          "TextField",
          "CheckBox",
          "Radio Button",
          "PopupMenuButton",
          "IconButton",
          "ButtonBar",
          "Floating Action Button",
          "Switch",
          "Slider",
          "Date Picker",
          "Time Picker",
          "SimpleDialog",
          "AlertDialog",
          "BottomSheet",
          "ExpansionPanelList and ExpansionPanel",
          "SnackBar",
          "Cupertino Setup",
          "CupertinoActionSheet",
          "CupertinoActivityIndicator",
          "CupertinoAlertDialog",
          "CupertinoButton",
          "CupertinoPageScaffold",
          "CupertinoPicker",
          "CupertinoPopupSurface",
          "CupertinoSegmentedControl",
          "CupertinoSlider",
          "CupertinoSwitch",
          "CupertinoNavigationBar",
          "CupertinoTabBar",
          "CupertinoTabScaffold",
          "CupertinoTextField",
          "Quiz 4 - Input/Selection Components"
        ],
        "Information Displays": [
          "Icons",
          "Chip",
          "Tooltip",
          "DataTable",
          "Card",
          "LinearProgressIndicator",
          "CircularProgressIndicator",
          "Quiz 5 - Information Displays"
        ],
        "Layout": [
          "GridView",
          "ListView & ListTile",
          "Stepper & Step",
          "Divider & divideTiles",
          "Aligning Widgets",
          "Sizing Widgets",
          "Packing Widgets",
          "Nesting rows and columns",
          "Add, Update and Delete Widgets",
          "Quiz 6 - Layout"
        ],
        "Navigation & Routing": [
          "Navigate to a new screen and back",
          "Multiple Files For Each Screen",
          "Send data to a new screen",
          "Return data from a screen",
          "Navigate with named routes",
          "Animating a widget across screens",
          "Stateless vs Stateful Widgets",
          "Quiz 7 - Navigation & Routing"
        ],
        "Animation": [
          "Tween Animation",
          "Staggered Animation",
          "Reverse and Stop Animations"
        ],
        "Platform Specific Code": [
          "Call Android Java Code",
          "Send Parameters To Android Java Code",
          "Call Android Kotlin Code",
          "Send Parameters To Android Kotlin Code",
          "Call iOS Objective-C Code",
          "Send Parameters To iOS Objective-C Code",
          "Call iOS Swift Code",
          "Send Parameters To iOS Swift Code",
          "Quiz 8 - Platform Specific Code"
        ]
      },
      "requirements": [
        "Passion for learning Flutter & Dart",
        "Basic computer knowledge and skills",
        "Passion for programming",
        "Basic knowledge of computer science is optional",
        "Passion for mobile development"
      ],
      "description": "Learn about everything there is to know about Flutter Applications and How To Program Them. A step by step process is used to show explain every facet of these topics.\nNOTE: This course includes information on iOS and Android!\nGain a good understanding of the following concepts with this course:\nWhat Flutter is?\nFlutter Certifications\nHow to develop using Flutter Applications\nFeatures of the Dart programming language\nCoding semantics\nMobile programming\nDesign practises of applications\nApplication programming\nNetwork programming\nFlutter is one of the most popular mobile frameworks for iOS and  Android in the world that is requested by all companies such as Google, Facebook and Microsoft for mobile development. This course will ensure you are not left out as more and more companies request this awesome framework. This course will teach you everything about programming Flutter applications.\nYou will receive all the knowledge to use and leverage the powerful technology behind these amazing and wonderful platforms.\nOver 350,000 students have enrolled on my courses and all of them are extremely satisfied. You will also be satisfied with this course. If you do not like the course, remember that within 30 days you can request a full refund. I guarantee you satisfaction.\nIf you have any questions regarding the topics covered in this course, please feel free to ask. I'm always happy to help those who want to learn.\n\n\nTo summarise this is what you get:\n• Lifetime access to HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• All videos are downloadable. Learn wherever you want, even without an internet connection!\n• Downloadable starter code and final code for each section.\n• Free helpful support in the course Q&A when you have questions or get stuck.\n• Multiple coding challenges to practice your new skills (solutions included).\nSounds great? Then start this adventure today by clicking the “Take this course\" button, and join me in the only Flutter course that you will need!",
      "target_audience": [
        "Anyone looking to learn about Flutter & Dart",
        "Developers looking to learn the skills needed to utilise Flutter features",
        "Mobile developers",
        "People looking to learn about programming",
        "Those seeking to understand how Flutter works",
        "People seeking guidance on how to create Flutter based programs",
        "Beginners and experts in this field",
        "People seeking more knowledge on the various features of the Dart programming language",
        "People with a desire to improve their programming knowledge",
        "Mobile developers"
      ]
    },
    {
      "title": "The Complete Android N Developer Course",
      "url": "https://www.udemy.com/course/complete-android-n-developer-course/",
      "bio": "Learn Android App Development with Android 7 Nougat by building real apps including Uber, Whatsapp and Instagram!",
      "objectives": [
        "Make pretty much any Android app you like (your only limit is your imagination)",
        "Submit your apps to Google Play and generate revenue with Google Pay and Google Ads",
        "Become a professional app developer, take freelance gigs and work from anywhere in the world",
        "Bored with the same old, same old? Apply for a new job in a software company as an Android developer"
      ],
      "course_content": {
        "What Does The Course Cover?": [
          "What does the course cover?",
          "How To Get All The Free Stuff",
          "Frequently Asked Questions",
          "Asking Great Questions & Debugging Your Code"
        ],
        "Introduction To Android Studio": [
          "Introduction",
          "IMPORTANT: Android Studio Versions",
          "Installing Android Studio On MacOS",
          "Installing Android Studio On Windows",
          "Android Studio Overview",
          "Opening Sample Projects",
          "Opening Sample Projects (Android Studio files)",
          "Formatting Text",
          "Formatting Text (Android Studio files)",
          "Buttons",
          "Buttons (Android Studio files)",
          "TextFields",
          "TextFields (Android Studio files)",
          "Displaying Messages",
          "Displaying Messages (Android Studio files)",
          "Images",
          "Images (Android Studio files)",
          "Currency Converter",
          "Currency Converter (Android Studio files)",
          "Introduction To Android Studio Quiz"
        ],
        "Java Deep Dive": [
          "Introduction",
          "Hello World With Java",
          "Hello World With Java (Java files)",
          "Variables",
          "Variables (Java files)",
          "Arrays And Maps",
          "Arrays And Maps (Java files)",
          "If Statements",
          "If Statements (Java Files)",
          "Higher Or Lower",
          "Higher Or Lower (Android Studio files)",
          "Loops",
          "Loops (Java files)",
          "Classes And Objects",
          "Classes and Objects (Java files)",
          "App Number Shapes",
          "App Number Shapes (Java Code and Android Studio files)",
          "Java Deep Dive Quiz",
          "CCA Java Level 1"
        ],
        "Media: Images, Video and Sound": [
          "Introduction",
          "Layout",
          "Layout (Android Studio files)",
          "Fading Animations",
          "Fading Animations (Android Studio files)",
          "Other Animations",
          "Other Animations (Android Studio files)",
          "Game Connect 3",
          "Game Connect 3 (Android Studio files)",
          "Video",
          "Video (Android Studio files)",
          "Controlling Audio",
          "Controlling Audio (Android Studio files)",
          "Audio Volume Seeking",
          "Audio Volume Seeking (Android Studio files)",
          "Grid Layouts",
          "Grid Layouts (Android Studio files)",
          "App Basic Phrases",
          "App Basic Phrases (Android Studio files)",
          "Media Quiz"
        ],
        "Advanced Android Features": [
          "Introduction",
          "List Views",
          "List Views (Android Studio files)",
          "Times Tables Apps",
          "Times Tables App (Android Studio Files)",
          "Timers In Android",
          "Timers In Android (Android Studio files)",
          "App: Egg Timer",
          "App: Egg Timer (Android Studio files)",
          "Showing & Hiding UI Elements",
          "Showing & Hiding UI Elements (Android Studio files)",
          "App: Brain Trainer",
          "App: Brain Trainer (Android Studio files)",
          "Try And Catch",
          "Try And Catch (Java files)",
          "Downloading Web Content",
          "Downloading Web Content (Android Studio files)",
          "Downloading Images",
          "Downloading Images (Android Studio files)",
          "Advanced String Manipulation",
          "Advanced String Manipulation (Java code)",
          "App Guess The Celebrity",
          "App Guess The Celebrity (Android Studio files)",
          "Processing JSON Data",
          "Processing JSON Data (Android Studio files)",
          "App Whats The Weather",
          "App Whats The Weather (Android Studio files)",
          "Section Summary",
          "Advanced Android Features Quiz",
          "CCA Java Level 2"
        ],
        "Maps & Geolocation": [
          "Introduction",
          "Using Maps In Your Apps",
          "Using Maps In Your Apps (Android Studio files)",
          "Customising Your Maps",
          "Customising Your Maps (Android Studio files)",
          "Getting The User's Location",
          "Getting The User's Location (Android Studio files)",
          "Showing The Users Location On A Map",
          "Showing The Users Location On A Map (Android Studio files)",
          "Getting Information About Locations",
          "Getting Information About Locations (Android Studio files)",
          "App: Hiker's Watch",
          "App: Hiker's Watch (Android Studio files)",
          "Adding A New Activity",
          "Adding A New Activity (Android Studio files)",
          "App: Memorable Places",
          "App: Memorable Places (Android Studio files)",
          "Maps & Geolocation Quiz"
        ],
        "Permanent Data Storage": [
          "Introduction",
          "Storing Data Permanently",
          "Storing Data Permanently (Android Studio files)",
          "Customising The Action Bar",
          "Customising The Action Bar (Android Studio files)",
          "Using Alert Dialogs",
          "Using Alert Dialogs (Android Studio files)",
          "App: Notes",
          "App: Notes (Android Studio files)",
          "SQLite Databases",
          "SQLite Databases (Android Studio files)",
          "Advanced SQLite",
          "Advanced SQLite (Android Studio files)",
          "Webviews",
          "Webviews (Android Studio files)",
          "App: News Reader",
          "App: News Reader (Android Studio files)",
          "Permanent Data Storage Quiz"
        ],
        "Instagram Clone": [
          "Introduction",
          "Setting Up Parse Server On AWS",
          "Setting Up Parse On AWS (Android Studio files)",
          "Advanced Parse Techniques",
          "Advanced Parse Techniques (Android Studio files)",
          "Advanced Queries",
          "Advanced Queries (Android Studio files)",
          "Parse Users",
          "Parse Users (Android Studio files)",
          "Login & Signup",
          "Login & Signup (Android Studio files)",
          "Advanced Keyboard Management",
          "Advanced Keyboard Management (Android Studio files)",
          "Showing The User List",
          "Showing The User List (Android Studio files)",
          "Importing Photos From The Camera",
          "Importing Photos From The Camera (Android Studio files)",
          "Viewing Users' Feeds",
          "Viewing Users' Feeds (Android Studio files)",
          "Instagram Clone Quiz"
        ],
        "Uber Clone": [
          "Introduction",
          "Introducing Uber",
          "Introducing Uber (Android Studio files)",
          "Uber Login Page",
          "Uber Login Page (Android Studio files)",
          "The Rider Activity",
          "The Rider Activity (Android Studio files)",
          "The Driver Activities",
          "The Driver Activities (Android Studio files)",
          "Showing The Driver's Location To The Rider",
          "Showing The Driver's Location To The Rider (Android Studio files)",
          "Uber Clone Quiz"
        ],
        "Flappy Bird Clone": [
          "Introduction",
          "Introducing GDX",
          "Introducing GDX (Android Studio files)",
          "Working With Sprites",
          "Working With Sprites (Android Studio files)",
          "Interacting With Sprites",
          "Interacting With Sprites (Android Studio files)",
          "Bringing In The Pipes",
          "Bringing In The Pipes (Android Studio files)",
          "Collision Detection",
          "Collision Detection (Android Studio files)",
          "Scoring",
          "Scoring (Android Studio files)",
          "Game Over Screen",
          "Game Over Screen (Android Studio files)",
          "Flappy Bird Quiz"
        ]
      },
      "requirements": [
        "A Windows PC, Mac or Linux Computer",
        "ZERO programming knowledge required - I'll teach you everything you need to know"
      ],
      "description": "Please note support for this course has now stopped, and that there is a newer version of the course (The Complete Android Oreo Developer Course) available.\nIn this Android N version of the course I use Android Studio versions 2.0 and 2.1.2, and recommend students do the same.\n\n\nSo you want to build your own apps?\nAnd you want to build them… from the comfort of your home… in your own time… without having to attend class… or wade through endless textbooks (or online guides). Am I right?\nAnd let me guess: you only want the latest technology, software and techniques—because you’ve got big plans, big ideas—and let’s be honest… you’re impatient and you want to jump the queue?\nMy name’s Rob Percival, creator of the world’s best-selling online coding courses… andI’ve designed The Complete Android N Developer Course, especially for YOU.\nBuilding on last year’s runaway success: The Complete Android Developer Course (Udemy’s best-ever-selling Android course, with over 50,000 happy students), The Complete Android N Developer Course has been refined, honed and microscopically polished to deliver even more valuable content, all designed for the latest Android 7.\nA huge range of technologies are covered, including open source Parse Server, Firebase, Admob, GDX (game development), Bluetooth and a whole lot more.\nThis time, using hot-off-the-press Android Nougat (putting unparalleled levels of performance, productivity and security directly into your hands), The Complete Android N Developer Course includes building a WhatsApp clone PLUS three brand spanking new chapters on how to market your apps—and start piling in the cash.\nWhat’s stopping you from signing up to today?\n·      You don’t have enough time: Not an issue. We’ve designed this course so you can learn everything you need in as little as SIX WEEKS.\n·      You’re still weighing up the value: Listen. We’ve made this course bigger, better and more affordable—with even more content and more insider money-making tips—than EVER before. In fact, if you don’t 100% get everything you need from it… we’ll give you your MONEY BACK.\n·      You don’t have any previous experience: Seriously, not a problem. This course is expertly designed to teach everyone from complete beginners, right through to pro developers.  (And yes, even pro developers take this course to quickly absorb the latest skills, while refreshing existing ones).\n“Detailed instructions for beginners, easy to follow as all Rob's courses. I would definitely recommend this course :)”\n“As a full time developer, I dreamed of writing a game, but never got anywhere. Too much analysis, object-oriented development training. Then Rob built flappy birds right before my eyes. Now I have a game going into the app store. This course is great for pro-developers too!”\nStraight up: No other course will take you to expert app developer in as fast a time as this. Have other courses done this for you?\n\n\nBuy this course today and this is what you’ll get.\nFirstly, using Java and Android Studio, I'll teach you how to build real, marketable apps by cloning WhatsApp, Uber and Instagram.\nAnd by the way—just like my other record-smashing courses—this course is project based, which means you build your own apps in REALTIME…As. You. Learn.\nOver half a million students tell me this is THE most motivating and effective way to absorb information.\n·      You'll start by downloading Android Studio and building an easy-peasy Currency Converter app.\n·      Next up: you'll build a Favourite Places app and a Brain Training app, before working your way up to WhatsApp, Uber and Instagram clones — using Parse Server.\n·      You'll also get a full guide on submitting your apps to Google Play, plus THREE BRAND NEW WALK-THROUGH chapters explaining exactly how to effectively market your apps—and generate revenue with Google Ads.\n·      You'll learn all the latest Android N features, including App Permissions and Android Pay.\n·      And finally, we'll take a look at Android Wear - the future of wearable computing.\nCan you believe you get all this (and more) for just $200?\n“Amazing course that teaches you everything you want to learn about making android apps from the basic to the advanced. Even if you have no knowledge you can learn so much from this course.”\nWhat else will I get if I buy this course now?\n·      FULL LIFETIME ACCESS (including video downloads and updates) for a ludicrously affordable one-off fee.\n·      PEACE OF MIND: Learn from the creator of three of the most popular online courses, successfully teaching over 200,000 students and receiving 10,000 5* reviews.\n·      CONTINUOUS PROJECT SUPPORT: Whenever you need it, in the course forums.\n·      SUPERIOR LEARNING: Build your own real apps as you go, with not a yawnsome programming concept in sight.\n·      £300 WORTH OF EXCLUSIVE APP TEMPLATES, icons and backgrounds (designed for Android N)\n·      ONE YEAR’S FREE WEB HOSTING on Eco Web Hosting's Advanced Package, worth £119. *Limited to one year per student not per course*\n“So much more understandable than the other 6+ classes I have taken elsewhere. This course is a must! Thank you!”\nWhy learn to make Android apps?\n·      Android is without a doubt THE biggest mobile platform in the world, with over 80% market share and over 1 billion devices sold in 2016 alone.\n·      You can develop for Android on a Windows, Mac or Linux computer.\n·      Java is a fantastic language to learn, allowing you to make apps for PC, Mac and the web, as well as Android.\n·      Android app discovery is way superior to the App Store, so your app has a far better chance of getting seen—and bought.\n·      Ad-based revenue is a lot more common on Android than on iOS, and a cinch to set up with Google Ads.\n“Top class professional presentation of a well-constructed course. Consistently pitched at the right level to remain interesting and challenging, this course quickly brings the student to a point where generating their own applications is realistic and fun.”\nWho is this for?\nAnyone who wants to learn to code to become an app developer: This is a complete course, just like my Complete Web, iOS and Apple Watch courses. So once you’re up and coding like a demon app developer, it’ll ALSO teach you how to make money from your apps.\nSound good?\nIt’s also for anyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work opens news doors to our awesome digital world\n“Rob has a knack for explaining material in an easily digestible way. The mini challenges he presents within his lectures are an excellent way to commit things to memory. The lectures are well paced - fast enough to maintain your interest but not so fast that you get left in the dust!”\nIs this course right for me?\nLook: if you’re still not convinced, I urge you to check out my 5* reviews. There’s over half a million of them on Udemy, alone.  No other course on the World Wide Web has achieved such consistent ratings.\nCoding and app development is the future. Whether you’ve got plans to create the next Facebook, or you want to get ahead at work and increase your earning potential, I GUARANTEE anyone will find The Complete Android N Developer Course course show-stoppingly useful.\nA quick summary of why The Complete Android N Developer Course is the number one resource for budding app developers, like you:\n·      Time-tested, quick-to-pick up learning strategies\n·      Quality insider tips, that only the pros normally know\n·      Home-based learning—so you can go as fast or slow as you please\n·      Simple, jargon-free language and HD definition\nWho Am I?\nI'm Rob.\nI run three of the most successful online coding courses on the planet, and I’m so excited to share them with you.\nI have a degree in Mathematics from Cambridge University, and am a web and app developer based in Cambridge, UK. Since working as a secondary school teacher for 10 years, I’ve never lost my love for teaching.\nMaybe that’s why my goal is so simple: To get as many people benefitting from app development as possible. But more importantly, that my courses are enjoyable and deliver tangible results for you… Today and tomorrow.\nThese are the things that drive me to keep pushing what’s possible in online learning.\nOK, let’s begin…\n\n\n“Outstanding! Rob delivers high quality content once more. It's not just the endless content and the clear explanations that you get but more importantly the confidence that you build. A must for any developer.”",
      "target_audience": [
        "Anyone who wants to be an app developer: This is a complete course, just like my Complete Web, iOS and Apple Watch courses. It will teach you how to make money from your apps as well as how to code.",
        "Anyone who wants to learn to code: Java is a fantastic language to learn how to code with.",
        "Anyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work is your key to a hugely powerful world."
      ]
    },
    {
      "title": "Learn Angular JS for Beginners",
      "url": "https://www.udemy.com/course/learn-angular-js-for-beginners/",
      "bio": "We’ll help you understand the basics of AngularJS thoroughly with a practical “how-to” approach to working with data.",
      "objectives": [
        "Over 12 lectures and 2 hours of content!",
        "You will acquire knowledge of basic AngularJS components.",
        "You will be able to develop web-based application using AngularJS"
      ],
      "course_content": {
        "Introduction to AngularJS": [
          "Introduction",
          "Simple Hello World App",
          "Angular Expressions",
          "Abstracting the Controller into a Module"
        ],
        "Data Binding, ng-repeat and Form Submission": [
          "Two-way Data Binding",
          "Using ng-repeat",
          "Using ng-show, ng-hide, and ng-if",
          "Form submission"
        ],
        "Filters in AngularJS": [
          "Using a Filter to Search",
          "Currency, Uppercase, and Lowercase Filters",
          "Discussion on Form Validation",
          "Demo on Form Validation"
        ]
      },
      "requirements": [
        "Any Fresher Wants to Learn Basic AngularJS",
        "Expert who Needs to Brush up AjgularJS Skills"
      ],
      "description": "Description :\nThis course is designed to help you to understand the basics of AngularJS quickly and thorough. AngularJS is basically a JavaScript framework (an open source web application framework) library, which is distributed as JavaScript file. Mainly used in developing Single Page Application (SPA). It extendes HTML with additional new attributes hence making simple development and making it more responsive at user’s end, since HTML was never design for dynamics views. AngularJS is very easy to understand hence learning it is a fun. Every feature of it can be modified as per the the requirement.\nTo learn AngularJS you should have a basic understanding of web technologies such as HTML, CSS and JavaScript. You will have access to source code of lecture (wherever applicable).\nUnlike traditional courses that concentrate mainly on theory, we'll take a practical “how-to” approach to working with data.\nThis will have access to source code of lecture (wherever applicalbe)------- course will cover following AngularJS topics\n-Introduction to AngularJS\n-Your first simple Hello World App\n-Angular Expressions\n-Abstracting the controller into a module\n-2 Way data handling\n-Usage of ng-repeat, ng-show, ng-hide & ng-if\n-Form submissions\n-Usage of filter search\n-Uppercase and lowercase filter\n-Form validations\nI hope you enjoy the course, and I look forward to working with you!",
      "target_audience": [
        "Knowledge of HTML, CSS and JavaScript.",
        "Basic understanding of any text editor."
      ]
    },
    {
      "title": "Flutter - Intermediate",
      "url": "https://www.udemy.com/course/flutter-intermediate/",
      "bio": "Learn Flutter mobile programming",
      "objectives": [
        "Widgets",
        "Layout Widgets",
        "Create custom widgets",
        "Navigation",
        "State managment"
      ],
      "course_content": {
        "Widgets": [
          "Dart 2 - version changes (some videos will be re-recorded)",
          "Read me - major changes to Dart and Flutter",
          "Nullable types Version change example - isEmpty",
          "Tooltips",
          "Chips, keys and children",
          "Sliders and indicators",
          "PopupMenuButton",
          "Section 1 - Assignment",
          "Section 1 - Assignment Code",
          "Section 1 - Quiz"
        ],
        "Layout widgets": [
          "Expansion Panel",
          "TabBarView",
          "Stepper",
          "Gridview",
          "Section 2 - Assignment",
          "Assignment Source",
          "Section 2 - Quiz"
        ],
        "Charts": [
          "Charts Introduction",
          "Grouping data",
          "Animated Pie Charts",
          "Section 3 - Assignment",
          "Assignment Source",
          "Section 3 - Quiz"
        ],
        "Custom Widgets": [
          "Creating a custom widget",
          "Stateful Widgets",
          "Widget within a widget",
          "Child to parent",
          "Section 4 - Assignment",
          "Assignment Source"
        ],
        "Navigaton": [
          "PushNamed",
          "PushNamedUntilAndRemove",
          "Push and Pop",
          "Navigating from a child widget",
          "Section 5 - Assignment",
          "Assignment Source",
          "Section 5 - Quiz"
        ],
        "State managment": [
          "Global State",
          "Passing variables",
          "Redux",
          "Section 6 - Assigment",
          "Assignment Source",
          "Section 6 - Quiz"
        ]
      },
      "requirements": [
        "Advanced level dart knowledge",
        "Beginners level flutter knowledge"
      ],
      "description": "This is not a beginners course, and you should have a solid grasp of both the Dart language and a beginners understanding of Flutter. This course picks up where my Flutter for beginners course left off. In this course you will learn some of the more complex flutter widgets, along with using charts, navigation and routing, and state management from building your own to using Redux. I highly recommend you take my existing Dart and Flutter courses before attempting this one.",
      "target_audience": [
        "Anyone wanting to learn more about Flutter"
      ]
    },
    {
      "title": "Complete Android Developer Course - Android 11 with Java",
      "url": "https://www.udemy.com/course/complete-android-course/",
      "bio": "Create over 50+ android activities and create your own Twitter app clone. Become a master at Android Development.",
      "objectives": [
        "Designing a successful & complete Android Application",
        "Basics of Java Programming",
        "Working with UI Components, Layouts and Material Design",
        "Testing & Versioning Control",
        "Inter/Intra Process Communication",
        "Data Storage (SQLite) and Firebase Database",
        "Social Authentications",
        "Google Map Applications in Android",
        "Using Hardware units of an Android device (Accelerometors / Battery / Camera)",
        "APIs",
        "Localization",
        "Google AdMob and generating Ad Revenue",
        "Creating your own Twitter Clone",
        "Deploying Android App to the Google Play Store"
      ],
      "course_content": {
        "Introduction": [
          "Instructor Profile",
          "How to get your free stuff",
          "How to ask great questions",
          "Frequently Asked Questions",
          "History of Android Development",
          "Career Insights for an Android Developer"
        ],
        "Basics of Java": [
          "Introduction",
          "Setting up Java on your computer (MacOS)",
          "Setting up Java on your computer (Windows)",
          "Creating a \"Hello World\" Java File",
          "Programming Basics in Java - Part 1",
          "Programming Basics in Java - Part 2"
        ],
        "Getting Started": [
          "Introduction",
          "Downloading Android Studio (MacOS)",
          "Installing Android Studio (MacOS)",
          "Download Android Studio (Windows)",
          "Exploring Android Studio - Part 1",
          "Exploring Android Studio - Part 2",
          "Understanding Android Life Cycle",
          "Creating an Android Emulator",
          "Using an Android Emulator",
          "Running app on a Real Android Device",
          "Understanding Android Layouts",
          "A CountDownTimer App",
          "Application Themes and basic Color Preferences"
        ],
        "Designing a Successful Application": [
          "Introduction",
          "Exception Handling",
          "Monitoring the battery levels of an Android Device",
          "Creating Splash Screen in Android",
          "A Simple Flashlight / Torch App",
          "Setting First Run Preferences",
          "Formatting the Time and Date for Display",
          "Controlling Input with KeyListeners",
          "A Calculator App - Part 1",
          "A Calculator App - Part 2",
          "A Calculator App - Part 3"
        ],
        "Testing": [
          "Introduction",
          "Cloud based Testing",
          "Code Debugging"
        ],
        "Versioning Control": [
          "Introduction",
          "Creating a Github Account and Walk Through of the Platform",
          "What are Repos really?",
          "Creating / Updating / Deleting Repos",
          "Retrieving Repos"
        ],
        "Inter/Intra Process Communication": [
          "Introduction",
          "Opening a Web page, Phone Number, or Anything Else with an Intent",
          "Emailing Text from a View App",
          "Pushing String Values using Intent.putExtra()",
          "Retrieving String Values & Data",
          "Starting a Service after Reboot"
        ],
        "Graphics": [
          "Introduction",
          "Custom fonts on Android Applications",
          "Taking a picture with the camera",
          "Accessing the photo gallery"
        ],
        "User Interface": [
          "Introduction",
          "User Interface Guidelines",
          "Image Buttons",
          "Dropdowns / Spinners",
          "Long-Press / Long-Click Events",
          "EditText",
          "AutoComplete Text View",
          "Using Checkboxes and RadioButtons",
          "Making a Button with Rounded Corners",
          "onKeyDown (KeyBoard Methods)",
          "Rating Star Bar App",
          "Starting another Activity (2 Views)",
          "Custom Transition in Activity",
          "Custom Shake Animation"
        ],
        "User Interface Alerts (Menus / Dialogs / Toasts / Notifications)": [
          "Introduction",
          "Creating an Alert Dialog",
          "Creating a Progress Dialog",
          "Toasts",
          "Creating custom dialogs with buttons / images etc.",
          "Using TimePicker Widget",
          "Custom Title Bar",
          "Custom Menu",
          "Simple Calendar App"
        ]
      },
      "requirements": [
        "A computer & a good internet connection",
        "ABCs of Programming"
      ],
      "description": "This is The Complete Android Developer Course on Udemy that will not only help you make android projects for fun, but this course will land you a reputable career as an Android developer. The course not only tells you the basics of android, but we will take you on a journey across the entire android development system from the basics to advanced. You'll learn from doing practical coding.\nWhat to expect after completion of the course?\nYou should expect yourself to be fluent with Android Development using Java and you would have adequate experience from the basics of creating an Android App to deploying an Android Application in Google Play Store by yourself.\nThe entire goal of this course is to teach you about from basics of Android Development up to the level you need to complete a commercial Android Application. This is one of a kind course in the entire Udemy platform and the reason for that is, this course is not about theory, it's about practicality. Creating projects, and creating apps in every single module you are learning to become a true and a professional Android Developer and not an internet developer who knows a little about everything.\nLet's get started!",
      "target_audience": [
        "Students who wants to work in the industry as Android Developer",
        "Students who wants to gather an A-Z knowledge about Android Development"
      ]
    },
    {
      "title": "The Complete Android 15 Course [Part 1]-Master Java & Kotlin",
      "url": "https://www.udemy.com/course/the-complete-android-10-developer-course-mastering-android/",
      "bio": "Learn Android App Development in both Java & Kotlin Languages. You'll master Android from ZERO to HERO",
      "objectives": [
        "Learn Android App Development from Zero to Hero",
        "Building real apps and publish them to playstore",
        "Master the Basics, Intermediate and Advanced topic and programming skills",
        "Become a professional Native app developer",
        "Master Android with Java & Kotlin",
        "Understand the Coding Concepts, Data Structures and Algorithms",
        "Learn to create Apps following MVVM Architecture",
        "Build Basic, Intermediate and Advanced Apps",
        "Publish your Own Apps on PlayStore and start earning"
      ],
      "course_content": {},
      "requirements": [
        "No requirements"
      ],
      "description": "Apply this coupon to get [70% OFF] :\ncouponCode = MASTERCODING10\n\n\nSo you want to become an Android Developer & start publishing your apps?\nYou like to stay home & learn from your own computer?\nYou don't like to attend class?\nYou need to learn about latest technology & app development?\nYou have brilliant ideas & you need to develop them by creating your own apps by your hand?\nMy name’s Abbass Masri, creator of the world’s best-selling Android Teaching app called: \"Master Android App\"  and I’ve designed The Complete Android 15 Developer Course, especially for YOU.\n\n\nBuy this course today and this is what you’ll get:\nYou'll learn android app development from zero.\nYou'll get the source codes of all projects.\nYou'll create about 100 apps by the end of the course.\n\n\nDon't Think Twice!!\nStart your coding career now, by buying our course.\nI promise You ... As i helped 800,000 students to learn android, I will help you to become another pro..\nJust buy it now, don't waste time!\n\n\nRequirements:\nPC\nJava JDK (We will Download & Install it through the course)\nAndroid Studio ( We will Download & install it through the course)\n\n\nPrograms we will use:\nAndroid Studio ( Installation Process included in the course)\n\n\nThis is what you’ll learn in the course:\n· Develop apps for the very latest version of Android 15 that also work on older Android devices running older versions of the Android operating system.\n· Download, install and configure the necessary (free) software.\n· Create your first app.\n· Build a range of apps demonstrating key aspects of the Android framework.\n· Test your apps on emulators or a real Android phone or tablet.\n· You’ll learn Java programming because Android app development requires knowledge of Java. Included are Java tutorial videos that will get you up to speed fast.\n· Ensure your apps work with current and older Android versions on phones and tablets.\n· Use Android studio, the newest version of Google's premier Android tool.\n· Learn how to use databases, web services, and even get your apps to speak!\n· Understand the all new Constraint layout, for \"drag and drop\" screen creation.\n· Use powerful libraries of code to play videos, download website data, manipulate images, and a whole lot more!\n· Learn MVVM android architecture pattern.\n· Build MVVM + ROOM Apps\n·  Build MVVM + Retrofit Apps\n·  Build MVVM with MySQL Databases Apps\n·  Build Apps using Firebase\n·  Build Apps using Firestore\n·  Build Apps using Authentication, Firebase Storage and much mooooreee..\nSo, Why you are wasting Time? Enrol Now to get your feet wet in android coding.",
      "target_audience": [
        "Everyone who loved android",
        "Every developer despite his level",
        "Everyone who needs to start his coding career",
        "Anyone who like to have his own apps published on playstore"
      ]
    },
    {
      "title": "The Art of Doing: Dive Into Android Development with Kotlin",
      "url": "https://www.udemy.com/course/the-art-of-doing-dive-into-android-development-with-kotlin/",
      "bio": "Master the fundamentals and begin your journey into android application development today!",
      "objectives": [
        "How to create your own Android applications using Android Studio and the Kotlin programming language.",
        "How to test and upload your applications on your own physical/emulated devices.",
        "How to design app layouts using linear and constraint layouts.",
        "How to use binding objects (view binding and data binding) to improve projects.",
        "How to implement navigation and fragments into your applications to have dynamic apps.",
        "How to implement view models and live data.",
        "We will create 6 full fledge application as well as many more \"learning\" applications throughout the course."
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of computer programing principals such as variables, conditionals, loops, and functions. I will explain the basics as I go along but won't spend time to explicitly teach them.",
        "A computer capable or running Android Studio (please see system requirements).",
        "A computer capable of running the Android Emulator (please see system requirements) or a physical android device for testing."
      ],
      "description": "Have you found yourself confused, lost, or frustrated when following complicated Android Studio guides, not fully understanding what was going on?\nHave you always wanted to make your own mobile application but never new where to start?\nHave you done some basics in another language like Python or JavaScript and don't know where to apply your knowledge?\nAre you looking to code in Kotlin, Google's official language for Android application development?\nIf you've answered yes to any of the above then this course is for you! The Art of Doing:  Dive Into Android Development with Kotlin is a course that takes the time to lay a foundation and build upon it.  We won't just get Android studio installed and rush through all it does for us in creating a project.  Instead, we will walk through each file created and the given starter code, so you feel like you are in control of the applications you are writing!  We'll continue on this trend of fully explaining and gaining a mastery level understanding of concepts as we explore various views, layout styles, view and data binding, fragments and navigation, and lastly MVVM architecture.\n\n\nI'm a self learner.  I know what it is like to try to teach yourself a subject and be left following code someone else wrote but not fully understanding what you've done.  I've gone through various tutorials, constantly asking myself \"what does this line mean?\", \"Why did they do that here?\", \"How does this actually work?\".   Those frustrations helped motivate me to create this course.  While I may be a self taught programmer, I am a Master Teacher with a depth of experience in education.  I know how to teach, how to relate high level concepts at a fundamental level, and what makes knowledge stick.\nSo often, when students ask for advice they are told to, \"Go build something\" or \"Get involved on a project\" but have no idea what projects to build or get involved in.  This course will set you on your way!  In this course I will walk you though, step by step, on how to to design the layout and the functionality of unique, engaging, and purposeful apps.  By the end of this course, I promise that you will be coming up with your own app ideas and feel confident enough in your abilities to create them.\n\n\nTogether, we will work through 15 sections of this course.  Each section will highlight concepts and ideas, explaining every step along the way and answering any questions you might have.  I promise that you won't experience any of the frustrations I had while learning because I know how important it is to not just introduce knowledge, but also to provide context for that knowledge to grow.\nI'm sure there are other introductory courses out there that will try to teach you more...but I would imagine that the depth of knowledge in those courses is shallow.  My goal for this course was not to expose you to every single concept or idea in android development but rather provide you with the structure and context to feel like you fully understand the fundamentals presented to you in this course.\n\n\nAnyone can follow a guide and retype what someone else has already written.   But by taking this course, I believe you will have the confidence, knowledge base, and ownership of knowledge such that you won't have to follow someone else's work, but rather create something from your own mind.  After all, I believe the highest level of knowledge is creation.\nAfter taking this course, based on the way I break down each topic and present the material, you will have a mastery level understanding of the fundamentals of Android Studio, Android app development, and the Kotlin programming language.  I hope to see you in the class!",
      "target_audience": [
        "Beginner Android students looking to understand Android application development with Kotlin.",
        "Students who have gained an introductory level knowledge in another language (Python, JavaScript, etc..) and are looking for ways to apply their knowledge.",
        "Anyone interested in learning!"
      ]
    },
    {
      "title": "Dart & Flutter - Zero to Mastery [2025] + Clean Architecture",
      "url": "https://www.udemy.com/course/flutter-made-easy-zero-to-mastery/",
      "bio": "Comprehensive Flutter course to quickly and effectively start professional app development. And much more!",
      "objectives": [
        "Setup Dart&Flutter environment (Windows, Mac..)",
        "Dart Syntax. Learn and use the basics of the programming language Dart.",
        "All the important basics of the Flutter Framework in one small app. UI, navigation, animations, theming",
        "Professional Software Development: Clean software architecture implemented in an app that you can use as a template at any time.",
        "Layer Seperation",
        "Clean Architecture",
        "Dependency Injection",
        "State Management with BLoC/Cubit & Provider",
        "Unit Testing, Widget Testing, Golden Tests & Integration Testing",
        "The course is always CURRENT and will be expanded!",
        "Extra: Discord Community !",
        "This course is the English version of the best rated german Flutter course on Udemy!",
        "Adaptive Layout",
        "Forms + Validation with Cubits",
        "Hive",
        "Localization",
        "Firebase (Crashlytics, Firestore, Authentication)"
      ],
      "course_content": {
        "Start Here - Introduction & Structure": [
          "Trailer",
          "START HERE - Preface",
          "Introduction, structure of the course",
          "Discord Community",
          "Task Introduction",
          "Extra Free Content"
        ],
        "Setup Environment Dart - Hello World": [
          "Introduction",
          "Dart SDK - [MacOS]",
          "Dart SDK - [Windows]",
          "VS-Code & first programm"
        ],
        "Dart Basics": [
          "Introduction",
          "SOURCE CODE - Dart Basics",
          "Variables",
          "Data types",
          "Null Safety",
          "Arithmetic operators",
          "Task 1: Read a variable",
          "List & Map",
          "If statement",
          "Switch case",
          "Loops",
          "Do-while-loop",
          "Task 2: Calculate factorial",
          "For-loop",
          "For-each-loop",
          "Task 3: Guess a random number",
          "Void-functions",
          "Methods with a return value",
          "Task 4: Add some hints",
          "Object orientation",
          "Getter & Setter",
          "Constructors",
          "Task 5: Contact app",
          "Inheritance",
          "Asynchronous programming",
          "Streams",
          "Task 6: Hangman",
          "New stuff in Dart 3.0",
          "Dart Basics done - Congratulation!",
          "Tasks"
        ],
        "Setup Environment Flutter - Hello World App": [
          "Introduction",
          "Flutter SDK - [MacOS]",
          "Flutter SDK - [Windows]",
          "VS-Code & hello World",
          "Flutter Basic Commands + Cheat Sheet"
        ],
        "Flutter Basics": [
          "Introduction",
          "SOURCE CODE - Flutter Basics",
          "Flutter project structure",
          "Widgets - Flutter widgets",
          "Hot Reload - Hot Restart",
          "Widgets - Shortcuts & VS-Code helper",
          "Widgets - Scaffold & Material App",
          "Task F1",
          "Widgets - Container & Text",
          "Widgets - Column & Padding & SizedBox",
          "Widgets - Row & Expanded + Flex",
          "Task F2",
          "Widgets - Stack + add Assets",
          "Task F3",
          "Widgets - ScrollView",
          "Task F4",
          "Widgets - Media Query",
          "Widgets - Layout Builder",
          "Task F5",
          "Widgets - Structure",
          "Widgets - Buttons",
          "Widgets - custom Button",
          "Task F6",
          "Widgets - Real life example",
          "Widgets - Switch + Stateful Widget",
          "Widgets - ListView + Builder",
          "Task F7",
          "Navigation - BottomNavBar + IndexedStack",
          "Navigation - basic",
          "Task F8",
          "Navigation - named Routes",
          "Task F9",
          "Theme - create and use Theme",
          "Theme Service - State Management with Provider",
          "Animations I - Sunrise Sky",
          "Animations II - Sunrise Sun, Moon & Stars",
          "Task F10",
          "Flutter Basics done - Congratulation!",
          "Flutter Upgrade 3.22.x",
          "Flutter Upgrade 3.27.x",
          "Tasks"
        ],
        "Clean Architecture - App Project": [
          "Introduction",
          "Clean Architecture - What & Why?",
          "Project Setup",
          "SOURCE CODE - Clean Architecture",
          "Application Layer - UI",
          "Application Layer - BLoC State Management",
          "Application Layer - BLoC Provider",
          "Application Layer - Equatable",
          "Application Layer - Cubit",
          "Domain Layer - Entities & UseCases",
          "Domain Layer - Failures & Dartz",
          "Data Layer - Models & Datasources",
          "Data Layer - Exceptions & Failures",
          "Clean Architecture - Dependency Injection"
        ],
        "Clean Architecture - Testing": [
          "Introduction - Testing",
          "Unit Testing - datasources",
          "Unit Testing - repositories",
          "Unit Testing - usecases",
          "Unit Testing - business logic (bloc/cubit)",
          "Widget Testing",
          "Golden Tests",
          "Integration Tests",
          "Flutter 3.10.x update",
          "Flutter 3.22.x update",
          "Flutter 3.27.x update"
        ],
        "ToDo-App [Adaptive Layout, Go Router, Hive, Mock]": [
          "Section Intro",
          "Project and folder setup",
          "go router",
          "Task T01",
          "Responsive Layout explanation",
          "Add basic adaptive Layout",
          "Adaptive Layout - Tap Handling",
          "Task T02",
          "Named Routes",
          "Task T03",
          "ToDo Collection - domain & data",
          "ToDo Collection - mock & use case",
          "ToDo Collection - application",
          "Task T04",
          "ToDo Entry - data / domain",
          "ToDo Collection - application page",
          "Task T05",
          "ToDo Collection - application view states",
          "Task T06",
          "ToDo Entry - update",
          "Task T07",
          "Navigation Cubit",
          "Use Navigation Cubit",
          "Task T08",
          "create todo collection",
          "Task T09",
          "create todo entry",
          "Task T10",
          "Reloading data after adding new items",
          "Task T11",
          "local data source - memory",
          "locale data source - hive",
          "Polishing & Finish",
          "T12-15: Collection of Tasks to improve your skills",
          "Update to flutter 3.10.x",
          "Tasks"
        ],
        "ToDo-App [Firebase, Crashlytics, Firestore, Auth]": [
          "What is Firebase?",
          "Setup firebase project",
          "Add app to firebase",
          "Add authentication provider to firebase",
          "auth cubit",
          "Firebase UI auth config",
          "Task B01",
          "Add Login Button",
          "Task B02",
          "Login button for small breakpoint",
          "Task B03",
          "Create Firestore database",
          "Add remote data source interface",
          "Firestore remote data source - collection",
          "Task B04",
          "Firestore remote data source - entry",
          "Firestore repository",
          "Task B05",
          "Implement firestore update entry",
          "Task B06",
          "Improve firestsore security",
          "Task B07",
          "Create a advanced repository",
          "Crashlytics configuration",
          "Task B08",
          "Crashlytics integration",
          "Localization",
          "Testing breakpoints / adaptive layouts",
          "Flutter 3.22.x update",
          "Flutter 3.27.x update"
        ]
      },
      "requirements": [
        "This course is suitable for programming beginners and for people who come from another language and want to get started with app development with Flutter."
      ],
      "description": "Master Flutter & Build Scalable Apps – From Beginner to Pro\nAre you ready to take your app development skills to the next level? This comprehensive Flutter course is designed to empower developers worldwide and bring them together in a thriving community. Whether you’re a beginner or an experienced developer looking to refine your skills, this course will guide you through everything from the fundamentals to advanced software architecture.\nFlutter is one of the fastest-growing mobile frameworks, and skilled developers are in high demand. This course not only teaches you Flutter and Dart but also dives deep into best practices for scalable, maintainable, and efficient app development. You’ll learn professional techniques gained from years of freelancing experience—so you can build real-world apps that stand out.\nWhat You’ll Learn\nDart Programming Fundamentals – Master the basics of the Dart language, covering variables, object-oriented programming, asynchronous operations, and more.\nFlutter UI & App Development – Learn how to create beautiful, responsive, and feature-rich applications using Flutter’s powerful widget system.\nClean Architecture for Scalable Apps – Implement a structured software architecture with layer separation, dependency injection, functional programming, and the BLoC pattern for clean business logic.\nTesting Your Apps Like a Pro – Cover unit testing, widget testing, golden tests, and integration testing to ensure your apps are reliable and bug-free.\nBuilding Adaptive & Responsive Layouts – Learn how to create apps that adapt seamlessly across different screen sizes and platforms using Material 3’s adaptive layout system.\nData Persistence & Firebase Integration – Work with local storage solutions like Hive and integrate Firebase for cloud-based data storage, authentication, and crash reporting.\nProject-Based Learning – Develop real-world applications, including a fully functional To-Do app with local storage, Firebase integration, and adaptive layout support.\nWhy Choose This Course?\nUp-to-Date Content – Always aligned with the latest Flutter versions, including Flutter 3.27.3.\nReal-World Applications – Learn by building actual projects, not just theory.\nFreelancer Insights – Gain knowledge from a successful freelancer who works with major clients, including top banks in Germany.\nCommunity Support – Be part of a growing Flutter community where you can ask questions, share ideas, and get feedback.\nWho Is This Course For?\nDevelopers who want to learn Flutter from scratch.\nMobile developers looking to improve their architecture and testing skills.\nFreelancers or entrepreneurs who want to build their own apps or offer Flutter services.\nAnyone looking to transition into app development with a high-demand framework.\nWhat’s Next?\nWe continuously update this course to provide the best learning experience. Upcoming topics include:\nNull Safety Best Practices\nFirebase Performance Optimization\nFlutter is more than just a framework—it’s a gateway to opportunities. Whether you want to build your own apps, become a freelancer, or land a high-paying developer job, this course will set you on the right path.\nEnroll now and start building high-performance apps with Flutter today!",
      "target_audience": [
        "Everyone who wants to quickly and effectively immerse themselves in mobile app development benefits here. We are German Flutter Freelancers and have already been able to successfully implement many projects - we would like to share our experience of the last few years with you to help you start developing your projects successfully.",
        "We develop several apps together, get to know clean software architecture in Flutter and of course put our apps through their paces. We'll take you by the hand and show you everything from scratch.",
        "This course is the English version of the best German Flutter course on Udemy!"
      ]
    },
    {
      "title": "Complete Android Development with Kotlin Masterclass",
      "url": "https://www.udemy.com/course/complete-android-development-with-kotlin-masterclass/",
      "bio": "Learn Android Development from Scratch Using Android Studio 4+ and Android Q",
      "objectives": [
        "Learn Android Programming from scratch",
        "You will have a project base learning",
        "Not only learn how to code, but also how to write a clean and well structured code",
        "Android and Programming concepts will be taught in depth",
        "Learn how to use different APIs and web services",
        "Learn How to use Firebase to create real world applications",
        "Use Firebase Machine learning",
        "Learn How to use Navigation Component of JetPack",
        "Learn How to use ConstraintLayout",
        "Creating Fluid Animations",
        "Get ready to get a job or increase your current knowledge of android"
      ],
      "course_content": {},
      "requirements": [
        "A Windows PC or Mac",
        "No programming experience is required"
      ],
      "description": "Here in Complete Android Development with Kotlin you will learn how to create applications using Kotlin Programming language.\nAndroid leads the market of mobile operating systems, and it is now kotlin first. Numbers of  android developers using kotlin is increasing everyday, till now up to 60% of professional android developers has started using kotlin in their apps.\nIn this course we will start by basics of android, like creating simple user interfaces and having an introduction to layout scaling, then we start giving functionality to our apps, so the user can interact with the UI.\nIn creating every project you will learn coding in Kotlin gradually.\nWe will have an introduction to algorithms and how they could be helpful for solving our problems in code.\nWe will see how we can get and send data over internet, as most real world applications do.\nWe will have an introduction to ConstraintLayouts and how we can create complex layouts with it.\nWe will learn about creating Animations with ConstraintLayout.\nWe will learn about fragments and the newly JetPack Component called, Navigation Component.\nWe will Create a Diary App to Implement CRUD with SqlLite.\nWe will Create our own MusicPlayer.\nWe will Create a Chat Application using Firebase and its features like, firebase Authentication, firebase Cloud Messaging, Firebase Realtime Database, Storage.\nand We will use Firebase Machine Learning to integrate TextRecognition, BarcodeScanning, Image Labeling and Face Detection in our apps.\nDuring the course I tried to teach you not just code, but also Code in a clean and structured way, something that makes you a professional developer and separate you from other developers.",
      "target_audience": [
        "Students with no programming experience",
        "Experienced developers who want to increase their knowledge of android"
      ]
    },
    {
      "title": "Develop Android and iphone apps without coding",
      "url": "https://www.udemy.com/course/create-apps-for-android-and-iphone-without-coding/",
      "bio": "Learn to create apps for android and iphone without any coding",
      "objectives": [
        "create apps for android",
        "create apps for iphone and ipad"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Do we need programming knowledge"
        ],
        "Creating apps using appmakr": [
          "Introduction to appmakr"
        ],
        "Creating app for school": [
          "Create a app for school 1",
          "Adding and editing icons",
          "finishing our first app"
        ],
        "Create app for restaurant": [
          "Creating a app for restaurant",
          "Changing the look of the app content",
          "Finishing the restaurant app",
          "Making your own icons",
          "creating a app for students"
        ],
        "Building Apps using Appsgeyser": [
          "Quiz app creation",
          "Downloading app into your mobile",
          "Building Scratch quiz app",
          "Finishing Scratch quiz app",
          "Creating custom browser application",
          "Your own chat app",
          "which website is best",
          "youtube, radio, internet tv app",
          "Best icon maker"
        ],
        "Building games": [
          "Find the match game",
          "puzzle game",
          "15 game",
          "puzzle games ending",
          "shooting games",
          "Conclusion"
        ]
      },
      "requirements": [
        "no pre-requisite",
        "no programming knowledge required"
      ],
      "description": "Content will be added once in a week, so who enrolled this course earlier will be getting this content without paying any extra once uploaded as this course once enrolled will be in their library forever.\n\nThis course will teach you how to develop android, iPhone and iPad apps with zero programming experience.\nThis course teaches you by building several apps live using several portals available, By the end of the course you will be able to create your own apps for both android and iphone without any programming or coding.\nso lets get started.",
      "target_audience": [
        "anyone who is interested in creating mobile apps"
      ]
    },
    {
      "title": "React Native Masterclass: Build Real Apps (iOS & Android)",
      "url": "https://www.udemy.com/course/build-mobile-apps-with-react-native-from-to-zero-to-expert/",
      "bio": "Step-by-step React Native training: from setup to advanced features like auth, APIs, uploads, and app store readiness.",
      "objectives": [
        "Create a react native mobile app from scratch",
        "The difference between functional and class components",
        "Use React Context and React Hooks",
        "Integrate REST APIs in the project",
        "Tab Navigation with native navigation behavior",
        "Fetch and show data, filter by categories and search by keyword",
        "Implement login and signup via email and google",
        "Upload images from the phone",
        "Display swipeable image carousel",
        "Email or make a phone call from the app",
        "Link out to links outside of the app in the browser"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What we will build: App Design Preview",
          "Resources & Helpful Materials"
        ],
        "Get Ready": [
          "Environment Setup",
          "Typescript vs. Javascript",
          "Create a React Native App (and some debugging)",
          "Exploring The Default App Code",
          "Running on iOS",
          "Running on Android",
          "Running with Terminal"
        ],
        "Basics of React Native": [
          "What is JSX",
          "Imports and Exports: Creating components",
          "Functional vs. Class Components",
          "Explaining State for Functional and Class Components",
          "Lifecycles Explained",
          "Props in Components",
          "Understanding Styling"
        ],
        "Project Structure & Splash Screen": [
          "Identifying Components",
          "Project Structure",
          "Building the Splash Screen",
          "Button Component: Pressable vs. TouchableOpacity",
          "Colors Management"
        ],
        "Authentication Screens & Components": [
          "Authentication Screens Preview",
          "Creating Authentication Header",
          "Building Input Component",
          "Password Input Eye Toggling",
          "Building Checkbox Component",
          "Giving Custom Style to Reusable Components",
          "Building Separator Component",
          "React.memo: What it is and Why to Use",
          "Google Login: component & native setup",
          "Checking Google Login on Android & iOS",
          "Using Environment Variables",
          "Building Sign Up Footer Actions",
          "Building Sign in Screen"
        ],
        "Git Integration": [
          "Creating Github Repository & Git Initialization",
          "Pushing Changes to Git",
          "Git Branching System"
        ],
        "Project Navigation": [
          "React Navigation Introduction",
          "Setup React Navigation",
          "Manage Navigation Theme",
          "Moving Between Screens",
          "Hiding Default Navigation Header",
          "Fixing Safe Area Issues",
          "Setup Bottom Tabs",
          "Preparing Codebase for Tab Navigation",
          "Customizing Tabs Design",
          "Navigation Quiz"
        ],
        "Managing Lists": [
          "Build App Header",
          "Add Categories List",
          "Add Products List",
          "Filter by Categories",
          "Filtering by Typing Keywords",
          "Building Favorites List"
        ],
        "Building the Detailed Screen": [
          "Pass Data Between Screens",
          "Product Details Screen UI",
          "Build Sticky Footer",
          "Add Absolute Header",
          "Build Image Carousel",
          "Call or Email from the App"
        ],
        "Building Profile Related Screens": [
          "Build Profile Screen",
          "Add Settings Screen & Redirect to URLs",
          "Edit Personal Information",
          "Create New Listing Screen",
          "Installing Image Upload Package",
          "Image Upload Functionality",
          "Add Image Deleting Option",
          "Explaining Props Spreading",
          "Use Keyboard Avoiding View",
          "Building Custom Picker",
          "Finalize Create New Listing Screen",
          "Build My Listings UI"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript would be beneficial, but not required"
      ],
      "description": "Build Real Mobile Apps with React Native – From Beginner to Pro\n\n\nAre you ready to create professional cross-platform apps for iOS and Android? This course is a hands-on React Native masterclass designed to take you from beginner to advanced developer. By the end, you’ll have built a complete product-sharing mobile app packed with the same high-demand features used in real-world projects.\n\n\nWhat you’ll learn:\nReact Native basics: environment setup, JSX, state & props\nNavigation: stack, bottom tabs, and deep linking\nAuthentication: email & password, Google login, token storage\nREST API integration with real endpoints\nImage uploads & carousels for smooth user experiences\nCross-platform support for both Android & iOS\nGit & version control best practices\nClean project structure & ESLint for professional code quality\nWith over 30+ cross-platform apps built, I’ve distilled the most essential features every modern mobile project needs into this course.\n\n\nWhy this course?\nMost tutorials focus on isolated features. Here, you’ll build a real app from scratch, learning how features work together in a complete workflow—from setup to deployment.\n\n\nWho is this for?\nBeginners wanting a solid React Native foundation\nDevelopers upgrading their skills with practical, real-world projects\nAnyone aiming to build portfolio-ready apps to land jobs or freelance clients\nJoin today and gain the confidence to build your own React Native apps for real users and the app stores!",
      "target_audience": [
        "Beginner developers eager to learn mobile app development with React Native"
      ]
    },
    {
      "title": "Dart Mastery - Become a Dart Master From Zero to Hero",
      "url": "https://www.udemy.com/course/dart-mastery-become-a-dart-master-from-hero-to-zero-dart/",
      "bio": "Getting Started with Dart: A Journey from Novice to Expert",
      "objectives": [
        "Built-in Data Types - Essential concepts such as variables, lists, maps, and strings",
        "Conditional Statements Explore the power of decision-making",
        "Iterative Statements Unleash the potential of loops and iteration",
        "Functions Understand the essence of functions in Dart",
        "Exception Handling Error handling",
        "Master classes, objects, inheritance, polymorphism, and encapsulation",
        "Functional Programming Expand your programming paradigm with functional programming concepts",
        "Collection Explore Dart's powerful collection libraries"
      ],
      "course_content": {
        "Welcome": [
          "Welcome to the Course",
          "What you will learn?",
          "Visual Studio Code & Dart SDK Installation",
          "Section-1 Quiz"
        ],
        "Introduction": [
          "Section Overview",
          "Hello World Example",
          "Comments",
          "Section Conclusion",
          "Section-2 Quiz"
        ],
        "Built-in Data Types": [
          "Section Overview",
          "Variables & Data Types",
          "Literals & String Interpolation",
          "Constant",
          "Section Conclusion",
          "Section-3 Quiz"
        ],
        "Conditional Statements": [
          "Section Overview",
          "Conditional Statements",
          "Conditional Expressions",
          "Switch Case Statements",
          "Section Conclusion",
          "Section-4 Quiz"
        ],
        "Iterative Statements": [
          "Section Overview",
          "For Loop",
          "For In Loop",
          "While Loop",
          "Do While Loop",
          "Break Statement",
          "Continue Statement",
          "Labels",
          "Section Conclusion",
          "Section-5 Quiz"
        ],
        "Functions": [
          "Section Overview",
          "Functions",
          "Arrow Function",
          "Optional Positional Parameter",
          "Optional Named Parameter",
          "Optional Default Parameter",
          "Section Conclusion",
          "Section-6 Quiz"
        ],
        "Exceptional Handling": [
          "Section Overview",
          "Exception Handling",
          "Custom Exception Handling Class",
          "Section Conclusion",
          "Section-7 Quiz"
        ],
        "Object Oriented Programming": [
          "Section Overview",
          "Classes & Object",
          "Constructor",
          "Getter & Setter",
          "Inheritance",
          "Method Overriding",
          "Abstract Class",
          "Interface",
          "Static Variables & Methods",
          "Section Conclusion",
          "Section-8 Quiz"
        ],
        "Functional Programming": [
          "Section Overview",
          "Lambda Function",
          "High Order Functions",
          "Lexical Closure",
          "Section Conclusion",
          "Section-9 Quiz"
        ],
        "Dart Collection": [
          "Section Overview",
          "List",
          "Set & Hashset",
          "Map & Hashmap",
          "Section Conclusion",
          "Section-10 Quiz"
        ]
      },
      "requirements": [
        "No programming experience is needed.",
        "Desktop Computer or Laptop",
        "Any Text Editor"
      ],
      "description": "Course Description: Are you eager to become a skilled Dart programmer and create powerful, efficient, and scalable applications? Look no further! Welcome to the \"Dart Mastery - Zero to Hero Training Course,\" where you'll embark on an exciting journey to master Dart programming from the ground up.\nDart is a versatile and user-friendly programming language designed for building cross-platform applications, making it an ideal choice for web, mobile, and desktop development. Whether you're a beginner with little coding experience or an experienced developer looking to add a new language to your skillset, this comprehensive course is tailored for you.\nThe course is thoughtfully divided into ten carefully curated sections to ensure a smooth and progressive learning experience. Here's what you can expect in each section:\n\n\nSection-1: Welcome In this introductory section, you'll get a warm welcome and an overview of what to expect throughout the course. We'll set the stage for your exciting journey into the world of Dart programming.\n\n\nSection-2: Introduction Before diving into the technical aspects, you'll learn about the history and features of Dart. Get acquainted with the language's unique characteristics, tools, and ecosystem.\n\n\nSection-3: Builtin Data Types Building a strong foundation is crucial, and this section will focus on Dart's builtin data types. You'll master essential concepts such as variables, lists, maps, and strings.\n\n\nSection-4: Conditional Statements Explore the power of decision-making with conditional statements. You'll learn how to create branching logic and control the flow of your programs.\n\n\nSection-5: Iterative Statements Unleash the potential of loops and iteration in this section. You'll gain expertise in repeating tasks efficiently and handling complex scenarios.\n\n\nSection-6: Functions Understand the essence of functions in Dart. Learn how to create reusable code blocks and harness the full potential of modular programming.\n\n\nSection-7: Exception Handling Error handling is a critical aspect of any robust application. Discover how to gracefully handle exceptions and prevent unexpected crashes.\n\n\nSection-8: Object Oriented Programming Dive into the world of object-oriented programming (OOP) in Dart. You'll master classes, objects, inheritance, polymorphism, and encapsulation.\n\n\nSection-9: Functional Programming Expand your programming paradigm with functional programming concepts. Learn about higher-order functions, closures, and functional techniques.\n\n\nSection-10: Collection Explore Dart's powerful collection libraries and how they can enhance the efficiency and performance of your applications.\nThroughout the \"Dart Mastery - Zero to Hero Training Course,\" you'll find a perfect balance between theory and hands-on exercises. Our instructor, an experienced Dart developer, will guide you through real-world examples and projects, ensuring you gain practical experience and confidence in your coding abilities.\n\n\nBy the end of this course, you'll emerge as a Dart expert, fully equipped to tackle a wide range of software development challenges. So, are you ready to unlock your potential and elevate your programming skills to new heights? Enroll now and embark on this transformative learning adventure!",
      "target_audience": [
        "Computer Science or IT students",
        "People who want to learn cross-platform mobile applications.",
        "Beginner developers"
      ]
    },
    {
      "title": "Mobile Product Management for beginners",
      "url": "https://www.udemy.com/course/mobile-product-management-for-beginners/",
      "bio": "Learn the fundamentals to successfully work closely with designers and developers to build mobile applications",
      "objectives": [
        "Learn the fundamentals of mobile product management"
      ],
      "course_content": {
        "What is this course about and why do it": [
          "What is this course about",
          "Who am I and why am I making this course",
          "Feedback feedback feedback"
        ],
        "Product management fundamentals": [
          "What is the role of a product manager",
          "Why and when are mobile apps useful",
          "Differences between Android and iOS"
        ],
        "What are the different types of mobile apps": [
          "What will be covered in this section",
          "Native app",
          "Web apps",
          "Hybrid app",
          "Flutter and React Native",
          "How to decide which type to choose"
        ],
        "Common app components and views": [
          "What will be covered in this section",
          "Bars",
          "Action/bottom sheets",
          "Cards",
          "Dialogs",
          "Snackbars",
          "Buttons",
          "Selection controls",
          "Haptics"
        ],
        "Design guidelines": [
          "What will be covered in this section",
          "iOS Human design and Android material UI",
          "Device screen sizes and orientations",
          "Navigation",
          "Text",
          "Thumb friendly zones",
          "Launch screen"
        ],
        "Common app capabilities": [
          "What will be covered in this section",
          "Unintrusive permissions",
          "Notifications",
          "Authentication",
          "Localisation",
          "Deep linking",
          "Web views",
          "Security and privacy"
        ],
        "Releasing a native app": [
          "What will be covered in this section",
          "releasing native app compared to web",
          "Release scope and frequency",
          "App versioning",
          "Testing and environments",
          "Have a checklist",
          "Submitting to app or play store and roll-out"
        ],
        "Analytics": [
          "Basics of app analytics",
          "Common tools",
          "Collecting user feedback in-app and ratings"
        ],
        "Conclusion": [
          "Congratulations!"
        ]
      },
      "requirements": [
        "No pre-requisites, although familiarity with basic business concepts is helpful"
      ],
      "description": "The growing advent of smartphones, along with apps that run on them is perhaps the biggest technical phenomena in recent times. Smartphones have now become the remote control for our lives, with things happening in just a single tap through a surplus of mobile apps to choose from.\nDespite this, there is a lack of mobile product management courses available. This course will address this problem and teach specific topics to mobile product management:  what are the different types of mobile apps, common components and views, design guidelines, common capabilities, releasing a native app and analytics.\nStudents aren't required to know anything related to mobile product management beforehand. We'll cover the fundamentals as well as talking about more detailed topics and share my learnings on the job.\nYour instructor:\nAlexander Thomsen is an experienced product owner, having worked both in Asia and Europe. Currently, he is a product owner at Sparrow Ventures, a Swiss-based venture builder, where he is responsible for validating, prototyping and building MVPs in multiple industries.\nWho this course is for:\nAnyone looking to get a job in mobile Product Management\nAnyone aspiring to understand mobile development",
      "target_audience": [
        "Beginners to mobile product management"
      ]
    },
    {
      "title": "CoreData for Swift Development (Swift 4.2 & iOS 12)",
      "url": "https://www.udemy.com/course/coredata-for-swift-development/",
      "bio": "Master the Core Data in Swift 4.2 and iOS 12, and take your iOS development skills to the next level",
      "objectives": [
        "Deep understanding how CoreData data persistent works in iOS"
      ],
      "course_content": {
        "Welcome": [
          "Course Outline and Goals",
          "FAQ"
        ],
        "CRUD": [
          "Section Goal",
          "Note for Xcode 10 Storyboarding",
          "CoreData Project",
          "Keystone Park UI",
          "CREATE New Data 1",
          "CREATE New Data 2",
          "READ Current Data",
          "UPDATE Existing Data",
          "DELETE Existing Data"
        ],
        "Useful Tool": [
          "SimMagnifier"
        ],
        "Deletion Rule": [
          "Section Goal",
          "Rule 1: Nullify",
          "Rule 2: Cascade",
          "Rule 3: Deny"
        ],
        "NSFetchedResultsController": [
          "Section Goal",
          "Extract CoreData Boiler Plate",
          "Source Codes",
          "Extract JSON Data",
          "Fetching Data with NSFetchedResultsController",
          "TableView Datasource",
          "Data Update and Refresh",
          "Batch Update",
          "Data Removal",
          "Group and Cache"
        ],
        "Complex Search and Aggregate Functions": [
          "Section Overview",
          "Source Codes",
          "Entity Inheritance",
          "Extract Data for Inheritance",
          "Entity Extension",
          "Entity Relationships as Predicate",
          "Filter and Sort",
          "Compound Predicate and Multi Sort",
          "Aggregate Function - 1",
          "Aggregate Function - 2"
        ],
        "Thread Management": [
          "Section Overview",
          "Background Context",
          "Asynchronous Execution"
        ],
        "CoreData Object Model Generation": [
          "Section Goal",
          "Automatic Generation",
          "Object Model with Class Extension"
        ],
        "Performance Tuning": [
          "Section Goal",
          "Dealing with Large Images",
          "Fetch Data by Batch Size",
          "Measuring Performance"
        ],
        "Data Model Versioning and Migration": [
          "Section Overview",
          "Light Weight Migration",
          "Data Migration with Mapping Model - 1",
          "Data Migration with Mapping Model - 2"
        ]
      },
      "requirements": [
        "Understanding of basic Swift development"
      ],
      "description": "***** COURSE UPDATE RELEASED *****\nIf you are looking for Core Data in SwiftUI, please check the updated course: SwiftUI Series: Core Data in SwiftUI\nIf you want to develop Core Data using UIKit, keep reading the description below.\n*****************************************\n\n\nCoreData for iOS Development in Swift\nThis course was created and updated for Core Data with the latest Swift 4.x (as of WWDC 2018), targeted for both iOS 12 and 11. We will be using the latest Xcode 10 (Beta) as well as Xcode 9.4 for the course coverage.\nIf your project is dealing with older version of Core Data in iOS 9 or prior, and you intend to learn the previous version, my other course Mastering iOS Core Data with Swift is the course you want.\nWhat is Core Data? Why should I know about Core Data?\nCore Data is one of the most powerful framework that Apple has provided for developer. \"Core Data is a framework that you use to manage the model layer objects in your application. It provides generalized and automated solutions to common tasks associated with object life cycle and object graph management, including persistence.\" - Source from Apple\".\nIf you are passionate about learning mobile development for iOS and looking to take your iOS development skills to the next level, Core Data framework should be at the top of your list.\nBy the time you are done with CoreData for iOS Development in Swift course, you will be ready and very confident to take on any Core Data project coming your way. On top of that, you will be one step closer to become a well rounded iOS developer.\nWhat's in it for me?\nIn this course I will take you on a journey in the world of Core Data. We will cover all the important aspects of Core Data:\nEntity\nEntity Inheritance\nAttribute Type\nRelationships\nManagedObjectContext\nManagedObject\nPersistentContainer\nHandling JSON data\nPredicate\nCompoundPredicate\nFetching\nBatch Fetching and Update\nObject Deletion\nAsynchronous Fetching\nNSFetchedResultsController\nAggregate Functions\nGrouping\nCaching\nPerformance Tuning and Best Practices\nData Model Versioning\nAutomatic Lightweight Migration\nManual Migration with Model Mapping\nBackground process\nAutomatic Subclass and Class Extension Generation\nThroughout this course we will look in detail the Core Data framework to provide data storage functionality in iOS applications. We will start by creating a simple app that is utilizing Core Data framework, building our own Core Data stack and eventually using all different Core Data features into our application.\nPerformance Tuning and Best Practices\nWe will cover the various ways on fetching our data and how to efficiently using Core Data in our app. Unit testing and performance tuning will be an important part on how we can monitor our app performance in conjunction with Core Data in our application.\nAlong with Core Data versioning, migration and iCloud integration, I will take you on developing 5 iOS applications and how we can integrate all of these components into Core Data.\nDo at your own pace\nLots of students have different methods of learning. Through out this course I will provide both the starter and final Xcode project solution, so you can either follow along one step at a time or you can jump directly to the final solution. And by the end of this Core Data for Swift Development course, you should be comfortable and ready to integrate Core Data framework in your application.\nTarget Audience: All iOS developer that would like to take their skills to the next level.\nWhat are the requirements?\nA Mac laptop or iMac\nXcode\nSome knowledge of Swift development",
      "target_audience": [
        "Students who want to learn data persistent in Swift/iOS using CoreData"
      ]
    },
    {
      "title": "SwiftUI Cookbook - Over 100 Recipes for Building iOS Apps",
      "url": "https://www.udemy.com/course/swiftui-cookbook-over-100-recipes-for-building-ios-apps/",
      "bio": "A problem focused approach for learning SwiftUI to build iOS, macOS, watchOS and tvOS apps",
      "objectives": [
        "Students will learn different features of SwiftUI framework",
        "Students will educate themselves using a problem/solution approach",
        "Students will learn how to write modern iOS apps using SwiftUI",
        "Students will learn SwiftUI architecture and how to implement platform independent apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "What are recipes?",
          "Exercise Files",
          "Free Book: UIKit with SwiftUI Recipes",
          "Free Book: Navigation API in SwiftUI"
        ],
        "Lists": [
          "Display Items in List (Numbers, Custom Objects and Indices)",
          "How to display alternate row styles in a list?",
          "Adding, Removing and Moving Items in the List",
          "How to remove separate style from the list? (iOS 15 & Xcode 13 and above)",
          "How to group items in a List?",
          "Changing background color of the List",
          "How to implement pull to refresh in List? (iOS 15 & Xcode 13 and above)",
          "Filtering results in a List (iOS 15 & Xcode 13 and above)",
          "How to make the complete row clickable inside a List?",
          "How to auto scroll the List to a particular section?",
          "How to add swipe actions to a list? (iOS 15 & Xcode 13 and above)",
          "How to select multiple items in a List?",
          "How to make collapsible headers in a List?",
          "How to create infinite scrolling list? (Integrated with JSON API)",
          "How to create checkboxes in List?",
          "How to create radio buttons in SwiftUI?"
        ],
        "Grid & Stacks": [
          "How to display items in a Grid?",
          "How to create pinned views in Grid?",
          "How to perform hero animation using matchedGeometryEffect?",
          "How to wrap HStack in multiple lines using SwiftUI?"
        ],
        "SwiftUI Formatting Modifiers": [
          "Date formatting in SwiftUI",
          "List formatting in SwiftUI"
        ],
        "Gestures": [
          "How to magnify a view?",
          "How to rotate a view?",
          "How to drag a view?",
          "How to perform 3D rotation effect for a view?"
        ],
        "Data Flow": [
          "How to pass data from child to parent view using @Binding?",
          "How to implement global state using @EnvironmentObject?",
          "How to deal with optional bindings?",
          "How to listen for state changes using onChange modifier?",
          "How to listen for notifications changes using onReceive modifier?",
          "How to download and display images in SwiftUI?",
          "How to use @AppStorage in SwiftUI?"
        ],
        "Graphics, Shapes, Paths and Effects": [
          "How to create gradients?",
          "How to draw rounded corners?",
          "How to create shapes and paths?",
          "How to draw a line graph in SwiftUI?",
          "How to draw a bar chart in SwiftUI?",
          "How to build a rating view in SwiftUI?",
          "How to create blur effects?"
        ],
        "Navigation and NavigationBar": [
          "How to perform navigation based on Button click?",
          "How to pass data to a detail view from a List?",
          "How to programmatically perform a navigation?",
          "How to perform unwind navigation in SwiftUI?",
          "How to add bar item buttons to the navigation bar?",
          "How to add an image to the navigation title?",
          "How to color NavigationBar?",
          "How to perform pagination in SwiftUI?",
          "How to use NavigationStack?",
          "How to do programmatic navigation in NavigationStack?"
        ],
        "Xcode Previews": [
          "How to create a device specific preview?",
          "How to view dynamic fonts in Xcode previews?",
          "How to view app in dark mode?",
          "How to populate Xcode previews using JSON resource?",
          "How to create previews for view controllers?"
        ],
        "Sheets": [
          "How to open and close a sheet?",
          "How to open multiple sheets?",
          "How do I display quarter, half and full screen sheet in SwiftUI?"
        ]
      },
      "requirements": [
        "Familiarity with iOS app architecture",
        "Knowledge of Swift language is recommended",
        "Basic understanding of SwiftUI framework is required",
        "Xcode 14 or above",
        "macOS Catalina or above"
      ],
      "description": "SwiftUI is Apple's new framework for building next generation iOS, macOS, watchOS and tvOS applications. If you have been developing apps using UIKit then you will find SwiftUI to be quite different. This course is designed to teach you SwiftUI in the form of small tasks called recipes. Each section will cover different aspects of SwiftUI framework and by the end of the course, you will be familiar with all the different features of SwiftUI framework. Let's take a closer look at the contents of the course.\n\n\nWhy should I learn SwiftUI?\nSwiftUI is Apple’s new declarative framework for building iOS applications. Apple has made it clear that SwiftUI will be the future framework for building user interfaces for all devices. By learning SwiftUI, you are making an investment in your future. Few years from now, most of the companies will be using SwiftUI for building their modern applications. In order for you to stay relevant as an iOS developer, you must invest time to learn SwiftUI.\n\n\nWhat’s inside this course?\n- Lists\n- Grids and stacks\n- Gestures\n- Data flow\n- Graphics, shapes and paths\n- Navigation and navigation bar\n- Xcode previews\n- Sheets\n- Pickers\n- Maps 11\n- UIKit and SwiftUI interoperability\n- SwiftUI and Core Data\n- SwiftUI and Firebase\n- Testing\n\n\nOne of the benefits of taking this course is that I will be adding new recipes frequently. This means you will get all the new videos, free of charge. Each lecture is accompanied with a downloadable resource, which allows you to quickly test your code.\n\n\nIn this course we’ll find answers to questions like:\n“How to rotate a view in SwiftUI?”\n“How to connect a SwiftUI app with Core Data?”\n“How to perform paging in a List view?”\n“How to draw graphs in SwiftUI?”\n“How to implement a ratings view in SwiftUI?”\n\n\nAre there any course requirements or prerequisites?\nmacOS\nXcode 12 or above\nKnowledge of Swift language is required\nFamiliarly with SwiftUI framework is recommended\n\n\nWho is this course for?\nAnyone who wants to learn Apple’s new user interface framework called SwiftUI.\niOS developers who want to transition from UIKit based apps to SwiftUI apps.\nAnybody looking for a problem solution approach for developing iOS applications.\nThis course is for all developers who want to learn the SwiftUI framework. The course will help you to understand different aspects of SwiftUI development in the form of recipes.\n\n\nDon’t take my word for it, take a look at some of the amazing reviews for my other courses.\nGreat course, Azam skips the basic stuff yet does CLEARLY explain the important concepts that most courses miss or fail to provide clear details about. It looks like he keeps the course up to date as well, either by adding updated lessons or notes explaining changes in the swift framework in the notes.\nThis course was above my expectations indeed. Very valuable, and thank you Azam.\nAs every course by Azam is awesome, full of information and Great explanations and examples, simply amazing. Azam is such a Great Teacher. If you really want to learn and make good use of your money, he is the right Choice.\n\n\nThank you for your continuous support and I really hope you enjoy the course!\nAzam",
      "target_audience": [
        "Students who wants to learn SwiftUI development",
        "Students who wants to get a wide overview of SwiftUI frameworks",
        "Students who are interested in a problem solution approach"
      ]
    },
    {
      "title": "Modern Android Architectures - MVVM MVP MVC - in Java",
      "url": "https://www.udemy.com/course/androidarchitectures/",
      "bio": "Android Architecture Masterclass teaching you MVC, MVP and MVVM using Google Android Architecture Components in Java",
      "objectives": [
        "Android Architectures",
        "Theory and Practical Applications",
        "MVC, MVP, MVVM",
        "RxJava and Retrofit"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Android Studio",
          "Install Android Studio on a Mac",
          "Install Android Studio on a Windows PC",
          "Setting the project foundations",
          "App Structure",
          "Building the MODEL"
        ],
        "MVC": [
          "Introduction to MVC",
          "Building the VIEW",
          "Building the CONTROLLER"
        ],
        "MVP": [
          "Introduction to MVP",
          "Building the MVP architecture"
        ],
        "MVVM": [
          "Introduction to MVVM",
          "Building the MVVM architecture"
        ],
        "Conclusion": [
          "Conclusion",
          "Further resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Basic Android Development experience",
        "Interest in Programming",
        "Java development"
      ],
      "description": "Take your development to the next level with this course on Android architectures.\nWe will discuss several topics related to MVC, MVP and MVVM.\nwhat MVC, MVP and MVVM stand for\nhow they structure the code and why\nwe will learn the advantages and disadvantages of each one\nhow to know when to use which architecture\nwe will use the Google official library for Android Architecture Components to build our MVVM architecture\n\n\nI have designed this course with ease of use in mind. Learn quickly in a short amount of time. No need to waste hours watching someone waffle on. To the point.\n\n\nLearn by doing. This course is designed for you to follow along and code at the same time. That way you will have a deep understanding of all architectures and Android concepts presented.\nLastly, I have used these Architectures in real life industry applications that have millions of users on the play store. They are scalable, maintainable and make code easy to understand.\n\n\nSign up today and learn what the Android architectures are, when and how to use them.\n\n\n30 day money back guarantee - provided by Udemy\n\n\nStudent feedback:\n*****\n\"I needed a good example that compares MVC and MVP and MVVM and I hesitated at first but now I don't regret purchasing this course. What the most I liked beside the content it's the spontaneity of the instructor and the music at the begging and at the end of each video ;)\" - Skander\n\n\n*****\n\"From this course I understood Android Architectures - MVVM MVP MVC. The Instructor described to the point and each and every topic very clearly.\" - Cyrus",
      "target_audience": [
        "Beginner Android Developers",
        "Intermediate Android Developers"
      ]
    },
    {
      "title": "Make 10 Android/iOS Mobile Applications in Python",
      "url": "https://www.udemy.com/course/make-10-androidios-mobile-applications-in-python/",
      "bio": "Learn to make Awesome Looking Useful Android and iOS based Application in Kivy Python",
      "objectives": [
        "Learn to make Android and iOS Based Applications in Python",
        "Learn to make Advanced Level Application in Python",
        "Learn to deploy Applications",
        "Learn to make cool Looking GUI Apps in Kivy Python"
      ],
      "course_content": {
        "Installing Python and Setting up the Python IDE": [
          "Installing Python and Setting up the Python IDE",
          "Deploying Any Application on Android/iOS from Windows/Linux and Mac"
        ],
        "YouTube Download Manager Application in Python": [
          "YouTube Download Manager - Installing the PyTube Module",
          "YouTube Download Manager - Displaying the Window",
          "YouTube Download Manager - Displaying Label, Image and TextInput",
          "YouTube Download Manager - Getting Link Info",
          "YouTube Download Manager - Downloading the Video",
          "YouTube Download Manager - Choosing Video Resolution to Download",
          "YouTube Download Manager - Validating the Link",
          "YouTube Download Manager - Final Explanation"
        ],
        "Converting Textbook pdf to an Audio Book": [
          "Converting PDF to Audio Book - Installing all the Modules",
          "Converting PDF to Audio Book - Displaying the Window",
          "Converting PDF to Audio Book - Adding Widgets",
          "Converting PDF to Audio Book - Location and Success Label",
          "Converting PDF to Audio Book - File Chooser Function",
          "Converting PDF to Audio Book - Convert Function",
          "Converting PDF to Audio Book - Validating the Application"
        ],
        "MP4 to MP3 Convertor Application": [
          "Installing the MoviePy Module",
          "Displaying the Layout for the Application",
          "Putting Image, Label and Button",
          "Location Label and Convert Button",
          "Opening up the File Dialog Window",
          "Conversion Part from MP4 to MP3",
          "Final Explanation"
        ],
        "Language Translator Application - Translate into Different Languages": [
          "Creating the GUI Window for the Application",
          "Displaying the Title Label and Text Input Fields",
          "Creating the Translate Button",
          "Creating the DropDown for Selecting Any Language",
          "Translating the Text",
          "Validating the Application",
          "Final Explanation"
        ],
        "Audio Recorder Application": [
          "Installing the PyAudio Module",
          "Creating the Layout for the Application",
          "Adding Widgets to the Layout",
          "Writing and Saving the Audio",
          "Stopping the Audio",
          "Final Explanation"
        ],
        "Music Player Application - Make your own interactive Music Player": [
          "Creating a GUI Window and Layout for the Application",
          "Adding Play and Stop Button",
          "Making the Play and Stop Button Work",
          "Adding the Album Image",
          "Changing Image according to Song",
          "Disabling - Enabling Play Stop Button",
          "Creating and Updating Progress Bar",
          "Set Timeout Function for Music Player",
          "Adding Volume and Binding it with Music Player"
        ],
        "Extracting Text from Images Application": [
          "Installing Pillow and PyTesseRact Module",
          "Creating a GUI Window and MDRelative Layout",
          "Putting all the Required Widgets on Layout",
          "File Chooser Function for Image Selection",
          "Extracting Text Function"
        ],
        "Screen Recorder Application": [
          "Open Computer Vision in Python Crash Video",
          "Installing OpenCV, Numerical Python and PyAutoGUI",
          "Creating the Layout for the Application",
          "Putting the Record Button",
          "Toggle Recording Function",
          "Record Screen Function and Stop the Recording when we want",
          "Final Explanation"
        ],
        "Unit Convertor Application": [
          "Importing Everything",
          "Putting Widgets",
          "Defining Units",
          "Calculating Body Mass Numerical Value",
          "Length Unit Convertor",
          "Area and All 0ther Convertors",
          "Final Explanation"
        ]
      },
      "requirements": [
        "Basics of any Programming Language is required"
      ],
      "description": "Python is the most widely used Programming Language in the World. I have seen thousands of students who have done the Basic part of Python but they have never used their skills and Concepts to make something Professional Looking and of an Advanced Level in Python. Any Programming Language is useless like this. When you go in your Professional Career, you are assigned to make Cool Looking Professional Applications and this is what this course is for.\n\n\nIn this course, we have assumed that you know the basics of Python or any other Programming Language and that our Job is to teach you how to use Python to make Professional Level GUI Based Android and iOS Applications. It's time to take your skills up to the Level where you can make Cool Looking Real Time Applications. We have used one of the most commonly and popular Module for Mobile Development called the Kivy Module.\n\n\nWe are pretty sure that after taking this course in Python, you will then feel that you can now make any type of Android and iOS application using the Python Programming language and that you are now a professional programmer who now knows how to use a language to make something real out of it.\n\n\nIn this Course, if you have any problem you can directly message us or you can ask your question in the Q/A Sections where you will get your Questions Answered as soon as possible. Hope you will have an Awesome Time with this Course.\n\n\nStay Awesome!",
      "target_audience": [
        "For those who are looking to make Android/iOS Apps in Python",
        "For those who are looking to make Advanced Cool Looking GUI Based Apps in Python",
        "For those who want to deploy Apps"
      ]
    },
    {
      "title": "NativeScript 101: A Quickstart to Building Mobile Apps",
      "url": "https://www.udemy.com/course/nativescript-101-a-quickstart-to-building-mobile-apps/",
      "bio": "A quickstart to learning how to make great looking Android and iOS apps in no time using NativeScript.",
      "objectives": [
        "Build Android and iOS applications",
        "Know how to use NativeScript for mobile application development"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "What is NativeScript?",
          "What are we Going to Accomplish in this Course?",
          "NativeScript and our Expectations"
        ],
        "Getting Started": [
          "Installing NativeScript and its Dependencies",
          "Installing the Android SDK",
          "Creating a New NativeScript Project",
          "Getting Started with a New App"
        ],
        "Building, Running, and Troubleshooting Your Application": [
          "Building the Application for Android and iOS",
          "Testing the Application using the Genymotion Android Simulator and iOS Simulator",
          "Debugging the Android and iOS Application",
          "Seeing Your Application in Action"
        ],
        "NativeScript Fundamentals": [
          "Becoming Familiar with the XML Layouts",
          "Styling XML Layouts with a Subset of CSS",
          "A Closer Look at the NativeScript List View",
          "Structuring an Application for Maintainable MVVM Development",
          "Persist Data to Storage for Accessing Later",
          "Performing RESTful HTTP Requests Against APIs",
          "Using Native Device Features and APIs",
          "Mobile App Development Fundamentals"
        ],
        "Building a URL Shortener App": [
          "Understanding the TinyURL API",
          "Creating the URL List View",
          "Creating a View for Shrinking URLs",
          "Shrink URLs Defined by the User",
          "Storing Information About the Long and Short URL Data",
          "Launching Saved URLs in the Web Browser",
          "Our First Mobile Android and iOS Application"
        ],
        "Google URL Shortener Bonus": [
          "Google URL Shortener API in the Google Developer Console",
          "Switching TinyURL to Google"
        ],
        "Summary": [
          "Summary of Course and Source Code"
        ]
      },
      "requirements": [
        "Must have the free to download Atom editor by GitHub installed for writing application code",
        "Must have a Macintosh computer to build iOS applications as Linux and Windows can only build Android applications",
        "A Macintosh computer is NOT required to participate in this course"
      ],
      "description": "Have you ever wanted to build your very own mobile Android or iOS application? Already have some working knowledge of web development technologies like JavaScript, HTML, and CSS? Using NativeScript you can bring the web world and mobile world together.\nThis course will teach you how to easily develop hybrid mobile applications for Android and iOS using NativeScript by Telerik. We'll look at what is necessary to configure NativeScript on your Windows, Linux or Macintosh computer and develop visually pleasing applications with minimal amounts of code and design skills necessary.\nNativeScript 101 is designed to be a quickstart for beginners looking to develop mobile applications. This course will put you track for building mobile applications using common web technologies such as JavaScript, XML, and CSS. We'll see everything from designing application views to performing HTTP requests against remote web services. As a course goal, we'll create a fully functional URL shortener using the skills we developed through the span of the course.",
      "target_audience": [
        "This NativeScript course is meant for people with at least some knowledge of XML or HTML and JavaScript",
        "This course is NOT meant for people looking to develop Windows Phone or BlackBerry applications"
      ]
    },
    {
      "title": "Mobile App Development for Autism, Dyslexia (Neurodiverse)",
      "url": "https://www.udemy.com/course/mobile-app-development-for-people-with-autism-dyslexia-etc/",
      "bio": "#1 Mobile App Development Course for Autism, Dyslexia Individuals: The Step-by-Step Guide to Mobile App Development",
      "objectives": [
        "Learn from the ground up, even without any prior coding experience.",
        "Unlock potential and uncover talents through our step-by-step guide that is suitable even for complete beginners.",
        "Comprehensive mobile app development course specifically tailored to cater to the individuals with autism and dyslexia.",
        "Our main motive is to train them to enable to be self-sustainable and not to be dependent on any donations on handouts from anyone.",
        "The students will be introduced to MIT app inventor, where they will be able to develop Mobile Apps based on their creativity",
        "See them picking up skills and express their hidden creativities",
        "Stay up-to-date with the latest trends and technologies in mobile app development, which can be beneficial in any future endeavors.",
        "Enhance problem-solving and critical thinking skills, which can be useful in various aspects of life.",
        "Gain knowledge and skills that can lead to a potential career in the tech industry"
      ],
      "course_content": {
        "Introduction": [
          "Introduction of MIT App Inventor and Creating Account",
          "How to link Mobile Device to MIT App Inventor",
          "How to link Emulator to MIT App Inventor (part 1)",
          "How to link Emulator to MIT App Inventor (part 2)"
        ],
        "Lesson on App Inventor": [
          "Intro to Design Screen",
          "Layout Arrangements – Horizontal",
          "Selecting Components & Setting Properties",
          "Layout Arrangements – Vertical",
          "Introduction to Control Blocks – IF and ELSE",
          "Control Blocks – For Loop",
          "Control Blocks – For Loop continuation",
          "Introduction to Logic Blocks",
          "Logic Blocks - continuation",
          "Introduction to Math Blocks",
          "Math Blocks - continuation",
          "Introduction to List Blocks",
          "List Blocks – continuation",
          "Introduction to Text Blocks",
          "Text Blocks – continuation",
          "Introduction to Colour Variables Procedure",
          "Introduction to Procedure Blocks"
        ],
        "TUTORIALS": [
          "Tutorial 1",
          "Tutorial 2",
          "Tutorial 3",
          "Tutorial 4",
          "Tutorial 5"
        ],
        "Summary": [
          "Summary of the Course"
        ]
      },
      "requirements": [
        "A COMPUTER and MOBILE PHONE with internet connection is all you need.",
        "Basic Computer Skills and Familiarity WITH Technology.",
        "No Programming Knowledge Needed",
        "A Willingness to LEARN and Be OPEN to New Ideas"
      ],
      "description": "Are you an individual with autism or dyslexia looking for an opportunity to unlock your full potential and create a better future for yourself? Our Mobile App Development course is here to help! Join today and gain the skills and knowledge to develop your own mobile apps, specifically tailored to meet the needs of individuals with autism and dyslexia.\nDon't miss this chance to make a real difference in your life and the lives of others. With our course, you'll have the opportunity to learn from experienced instructors and collaborate with a supportive community of like-minded individuals. Plus, you'll develop a portfolio of projects and gain valuable problem-solving and critical thinking skills along the way.\nThe Special Needs people are known to have exceptional talents, which only need to be uncovered. However, once their hidden talents are tapped, they are capable of producing wonders. At the end of the lectures, tutorials are provided to students in the form of lectures, these tutorials can be followed through to see a complete design. The students would have the general idea of how to use those blocks on their personal projects once the course is completed.\n\n\nWe have had a wonderful journey in training these special needs people throughout these years. It has been wonderful to see our students growing from Zero to Heroes.\nOnce again, we'll lead you step-by-step through the entire process, ensuring that you have all the resources and support you need to succeed. So why wait? Enrol today and learn how to develop mobile apps.",
      "target_audience": [
        "This program is specifically for people with Autism / Autistic, Asperger’s Syndrome, Dyslexia, Cerebral Palsy etc)",
        "Special Needs Individuals who have a passion for technology and are interested in creating apps that cater to their unique needs and challenges.",
        "Students studying special education or assistive technology who want to expand their knowledge and skills in mobile app development.",
        "Adults with autism or dyslexia who are looking for a fulfilling career that allows them to use their skills and interests to make a positive impact in the world."
      ]
    },
    {
      "title": "Publish Your Flappy Bird* iPhone Game, EZ & No Coding, iOS9+",
      "url": "https://www.udemy.com/course/publish-your-flappy-bird-clone-iphone-game-ez-no-coding/",
      "bio": "Do you want to ride the trends of the Flappy Bird game? Create your own clone with this course + source code included.",
      "objectives": [
        "Publish your very own Flappy Bird iPhone game clone to the apple app store today"
      ],
      "course_content": {
        "Initial Setup": [
          "Getting the Apple Developer License",
          "Apple Developer Certificate for Distribution",
          "Get & install XCode tool and open it",
          "Verifying the Game Works in Xcode and on the iphone Simulator",
          "Troubleshooting newer xcode and iOS 7.1+",
          "App Bundle ID and Apple Developer Provisioning Profile",
          "Create a New App in Itunesconnect",
          "Setting up iad and leaderboards"
        ],
        "Advertising Networks and Provisioning Profiles": [
          "Setting up Revmob and Chartboost advertising networks",
          "Admob Advertising Account"
        ],
        "Reskinning Process": [
          "Modifying Game Icons and Launch Images - part 1",
          "Modifying Game Icons and Launch Images - part 2",
          "Modifying Main graphics - part 1",
          "Modifying Main Graphics - part 2",
          "Modifying Game Sounds"
        ],
        "Game Settings": [
          "Adding Game Settings: Revmob, admob, chartboost, and the app ID",
          "Game Settings - part 2",
          "Game Settings - part 3",
          "Creating itunes Test User for Testing Leaderboards",
          "Optional - Troubleshooting game center leaderboards"
        ],
        "Publishing the Game": [
          "Testing the Game Before Publishing it to the itunes App Store",
          "Admob - Enable LIVE mode in admob panel",
          "Publishing to the app store - part 1",
          "Publishing to the Apple app store - part 2",
          "Publishing to the Apple itunes store - part 3 / 3"
        ],
        "What to do Next": [
          "Admob Ad banner - Turn LIVE mode ON - disable test mode",
          "Get Informed of the Latest Trends and Deals",
          "Going Professional with Top Icon Templates",
          "New Source Code Genre Available: Flappy 2048",
          "Your very own App Trailer Demo",
          "BONUS"
        ]
      },
      "requirements": [
        "a MAC computer or a virtual image ( http://virtualmacosx.com/index.php/xcode-plans or macInCloud.com )"
      ],
      "description": "Ready for iOS 9.3\nThis course gives you the source code to create a clone of the ultra famous Flappy Bird game for iPhone. You are shown every single step it takes to turn the existing game into your very own. You can apply any theme that you want. Some examples are Flappy Angel, demons, ducks, or penguins. Your imagination is the limit!\nThis course assumes you know nothing about making games, and without coding not even a single line of code, you will publish your very own game to the apple app store!\nThe game comes with multiple advertising channels to bring your passive income.",
      "target_audience": [
        "everyone"
      ]
    },
    {
      "title": "Android Machine Learning with TensorFlow lite in Java/Kotlin",
      "url": "https://www.udemy.com/course/machine-learning-for-android-developer-using-tensorflow-lite/",
      "bio": "Build 10+ Machine Learning Powered Android Apps | Train ML Models for Android | Use ML Models in Android App Development",
      "objectives": [
        "Train machine learning models for Android Applications",
        "Use of Tensorflow Lite Models inside Android Applications using both Java and Kotlin",
        "Use Trained Machine Learning models inside Android Application using Android Studio",
        "Train 10+ machine learning models and build Android Applications for those models",
        "Train and deploy classification and regression models in Android",
        "Generating Tensorflow lite model from Keras model, saved model, concrete function",
        "Training image recognition models and creating Android Applications for those models",
        "Build a Cats and Dogs classification Android Application",
        "Rock Paper and Scissors Problem in Android",
        "Flowers Recognition Android Application",
        "Android Application to Recognize Precious Stones",
        "Fruits Recognition Android Application",
        "Android Application to Predict Fitness of a Person",
        "Human & Horse Problem in Android"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and course Overview"
        ],
        "Machine Learning & Deep Learning": [
          "Machine Learning Introduction",
          "Supervised Machine Learning: Regression & Classification",
          "Unsupervised Machine Learning & Reinforcement Learning",
          "Deep Learning and regression models training",
          "Basic Deep Learning Concepts"
        ],
        "Python": [
          "Google Colab Introduction",
          "Python Introduction & data types",
          "Python Lists",
          "Python dictionary & tuples",
          "Python loops & conditional statements",
          "File handling in Python"
        ],
        "Data Science Libraries": [
          "Numpy Introduction",
          "Numpy Operations",
          "Numpy Functions",
          "Pandas Introduction",
          "Loading CSV in pandas",
          "Handling Missing values in dataset with pandas",
          "Matplotlib & charts in python",
          "Dealing images with Matplotlib"
        ],
        "Tensorflow & Tensorflow Lite": [
          "Tensorflow Introduction | Variables & Constants",
          "Shapes & Ranks of Tensors",
          "Matrix Multiplication & Ragged Tensors",
          "Tensorflow Operations",
          "Generating Random Values in Tensorflow",
          "Tensorflow Checkpoints"
        ],
        "Basic Regression Example": [
          "Section Introduction",
          "Training a basic regression model for Android",
          "Testing our trained model and converting it to tensorflow lite format",
          "Training a basic regression model overview",
          "Analysing trained tensorflow lite models",
          "Creating new android project and building GUI of application",
          "Adding tensorflow lite library in Android and loading tflite model",
          "Passing input to tflite model and getting output in Android",
          "Using basic tflite model in Android overview"
        ],
        "Training Fuel Efficiency Prediction Model and Building Android Application": [
          "Getting dataset for training tensorflow lite models",
          "Loading dataset for training regression models",
          "Handling missing values in dataset",
          "Handling categorical columns in dataset",
          "Dividing dataset into training and testing",
          "Dataset normalization",
          "Training fuel efficiency prediction tensorflow lite model",
          "Testing model and converting it tensorflow lite format",
          "Fuel Efficiency prediction model training overview",
          "Setting up Android project for fuel efficiency prediction application",
          "What we have done so far",
          "Loading tensorflow lite model in Android and preparing input for model",
          "Normalizing data in Android for model input",
          "Passing input to tflite model in Android and getting output",
          "Testing fuel efficiency prediction android application",
          "Fuel Efficiency Prediction Android App Overview"
        ],
        "Concrete function and Saved model examples": [
          "Android Tensorflow lite Concrete Function Example",
          "Android Tensorflow lite Saved Model Example"
        ],
        "Handwritten digits recognition application": [
          "Android ML: Loading the dataset",
          "Android ML: Matplotlib and normalizing data",
          "Android ML: Training digit recognition model",
          "Android ML: Evaluating model and creating tflite file",
          "Android ML: Digit Recognizer Application 1",
          "Android ML: Digit Recognizer Application Part 2",
          "Android ML: Digit Recognizer Application Part 3",
          "Android ML: Testing digit recognition Application",
          "Kotlin: Digit Recognizer Android Application"
        ],
        "Recognition Section": [
          "Android ML: Transfer Learning",
          "Android ML: Google Colab",
          "Android ML: Flower Recognition loading data set",
          "Android ML: Flower Recognition Training and evaluating model",
          "Android ML: Flower Recognition Detailed Process",
          "Android ML: Flower Recognition model",
          "Android ML: Evaluating tflite model"
        ]
      },
      "requirements": [
        "A very little knowledge of Android Development"
      ],
      "description": "Tired of traditional Android App Development courses? Now it's time to learn something new and trending for Android. Machine Learning is at its peak and Android App Development is also in demand so what is better than learning both?\n\n\nThis course is designed for Android developers who want to learn Machine Learning and deploy machine learning models in their Android apps using TensorFlow Lite. If you have very basic knowledge of Android App development and want to learn Machine Learning use in Android Applications this course is for you. This course will get you started in building your FIRST deep learning model and Android Application using both Java and Kotlin Tensorflow Lite, and Android Studio. We will learn about machine learning and deep learning and then train your first model and deploy it in an Android application using Android Studio. All the materials for this course are FREE.\n\n\nYou can follow this course using both Java and Kotlin. Separate Lectures are provided for both of these languages.\nYou don't need any prior knowledge of Machine Learning to start this course. We will start by learning\nPython Programming Language\nData Science Libraries\nBasics of Machine Learning and Deep Learning\nTensorflow and Tensorflow Lite\n\n\nThen we will train our first Machine Learning model and Develop an Android Application using Android Studio.\nThe course includes examples from basic to advanced\nA very simple Machine Learning example\nPredicting fuel efficiency of automobiles (Regression Example)\nRecognizing handwritten digits (Classification example)\nCats and Dogs classification\nRock Paper and Scissors Problem\nFlowers Recognition Example\nStones Recognition Example\nFruits Recognition Example\nPredicting the Fitness of a Person Practice Activity\nHuman and Horse Practice Activity\nFor each of these examples, we will first train the machine-learning model and then build an Android Application\n\n\nWe will start by learning about the basics of the Python programming language. Then we will learn about some famous Machine Learning libraries like Numpy, Matplotlib, and Pandas. After that, we will learn about Machine learning and its types. Then we look at Supervised learning in detail. We will try to understand classification and regression through examples. After we will start Deep learning. We start by looking and the basic structure of neural networks. Then we will understand the working of neural networks through an example.\n\n\nThen we will learn about the Tensorflow 2.0 library and how we can use it to train Machine Learning models. After that, we will look at Tensorflow lite and how we can convert our Machine Learning models to tflite format which will be used inside Android Applications. There are three ways through which you can get a tflite file\nFrom Keras Model\nFrom Concrete Function\nFrom Saved Model\nWe will cover all these three methods in this course.\nWe will learn about Feed Forwarding, Back Propagation, and activation functions through a practical example. We also look at cost function, optimizer, learning rate, Overfitting, and Dropout. We will also learn about data preprocessing techniques like One hot encoding and Data normalization.\n\n\nNext, we implement a neural network using Google's new TensorFlow library.\n\n\nYou should take this course If you are an Android Developer and want to learn the basics of machine learning(Deep Learning) and deploy ML models in your Android applications using Tensorflow lite and Android Studio.\n\n\nThis course provides you with many practical examples so that you can learn how you can train and deploy machine learning models in Android. We will use Android Studio to develop Android Applications for the models we trained.\n\n\nAnother section at the end of the course shows you how you can use datasets available in different formats for a number of practical purposes.\n\n\nAfter getting your feet wet with the fundamentals, I provide a brief overview of how you can add your machine-learning model in Google's existing Android machine-learning project templates.\n\n\n\n\nWho this course is for:\nBeginner Android Developers want to make their Android applications smart\nAndroid Developers want to use Machine Learning in their Android Applications\nDevelopers interested in the practical implementation of Machine Learning and computer vision\nStudents interested in machine learning - you'll get all the tidbits you need to add machine learning models in Android using Android studio\nProfessionals who want to use machine learning models in Android Applications.\nMachine Learning experts want to deploy their models in Android using Android Studio and Tensorflow Lite",
      "target_audience": [
        "Beginner Android Developer curious about Machine learning and computer vision use in Android using Java or Kotlin",
        "Experienced Android Professional want to add Machine Learning models in their Android Applications",
        "Intermediate Android developers looking to enhance their skillset",
        "App developer want to learn use of Machine learning in their Android Applications"
      ]
    },
    {
      "title": "Modern Android App Development Bootcamp With Kotlin 2020",
      "url": "https://www.udemy.com/course/the-android-development-bootcamp-2019/",
      "bio": "Learn Android App Development With Kotlin From the Beginning All the Way to Advanced Topic With the Most Easy",
      "objectives": [
        "Become Android Expert",
        "Build Android Apps",
        "Learn Kotlin With Android",
        "Design Advanced Layout in Android Studio",
        "Android Job Requirements",
        "Be able to Think as Programmer"
      ],
      "course_content": {},
      "requirements": [
        "Install Android Studio [only this is Required]"
      ],
      "description": "Hi && Welcome\nModern Android App Development Bootcamp With Kotlin 2020\nLearn To Code By Making Android Apps From Scratch With Zero Coding Exp\nLearn To Think to Design To Build All in one Course\nif your are interested  in android app development then you are in the right place\nthis course will take you from the beginning all the way to the end.\nTime to become the next android developer\nWe are going to Talk About Basics topics Like Kotlin and Design\nthen we are going to Talk About Android Studio Functionality From Basics Like Adding a Text then Image then We are going to Talk About The intermediate Topics Like Animations and Play an Audios and Videos ListViews ,RecyclerView and also we are going to build 6 android apps\nand throw these two sections we are going to talk about the Android Views then we are going to talk about the advanced android Topics Like The Sqlite Database then Firebase Database  and also we are going to build 5 Advanced Android Apps\nThis Course is highly focus on Build Android Apps With Different Ideas Using the Latest Features From Android\nTopics Are Covered :-\nwhere you are going to Learn every thing that you need to developer Great Android Apps\nFrom Scratch and with no Coding EXP, We Are going to Build 25 android apps\nand this course contain Every thing that you need to know about android development\n\n\nTopics are :\n- Learn Kotlin\n- Learn java\n- TextView and buttons\n-Intents\n-Images\n-Audios\n-Videos\n-Animations\n- Design\n-Bottom Navigation View\n-Fragments\n-Android Libraries\n- Android Errors\n-ListViews\n-RecyclerView\n-Quiz App\n-Code Editor App\n-Advanced Android Features\n- Design Advanced Layout\n-Recording Video with the Camera\n-Take photo using Camera\n-Share Images\n-SQL Database\n-Searching Skills\n-  Advanced Fragment\n- ViewPager and Fragment\n- Fragment and RecyclerView\n- FireBase\n- Authntication\n- Password Rest\n- Email Verfication\n- Update Email\n- Database\n- Upload Data\n- Read Data\n- Upload Images\n- Create online school App With Firebase\n- Download Anything From the Internet\n- Market Your App\n- Motivation Section\n\n\n\n\n*if you have some EXP with Android then you can skip the 2 First Sections\n*you can see the app that we are going to Build in the first Video of each section and you can see\nif you want to skip the section or not\n\n\nif you want to be android developer then you are in the Right place Take this Course\nand Become an Android App Developer\n\n\n\n\nif (course == bad) {\n30DayMoneyBack = true\n} else {\nhaveFun()\n}\n\n\n\n\n\n\nif you want to be android developer then you are in the Right place Take this Course\nand Become an Android App Developer\n\n\nThank You SO Much",
      "target_audience": [
        "any one who want to Build Android Apps",
        "Web Developer",
        "programmer"
      ]
    },
    {
      "title": "Flutter with Spring Boot Crash Course",
      "url": "https://www.udemy.com/course/flutter-with-spring-boot-crash-course/",
      "bio": "Build Mobile apps for Android & iOS using Flutter and create REST endpoints with Spring Boot and MySql database",
      "objectives": [
        "How to use Flutter Widgets to build beautiful user interfaces efficiently",
        "How to create custom and re-usable Flutter Widgets",
        "How to manage State in Flutter and different State Management approach",
        "How to integrate external Plugins and Packages in Flutter",
        "How to make REST API call and receive response from server in Flutter",
        "How to create REST End Points in Spring Boot",
        "How to setup MySQL database and configure in Spring Boot",
        "How to make CRUD operations using Spring Data JPA",
        "How to sercure REST End Points using Spring Security",
        "How to authenticate user using JWT Token",
        "How to handle Exceptions in Spring Boot"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to this course",
          "App Overview",
          "Architectural Overview"
        ],
        "Flutter Project - Bus Reservation": [
          "Download the starter project",
          "Starter Project Overview",
          "Search Page-Dropdown Buttons",
          "Search Page-Date Picker",
          "Search Page-Form Data Validation",
          "Search Page-Find the Bus Route",
          "Search Page-Get Provider in Action",
          "Search Page-Define Name Routes",
          "Search Result Page-Show Schedules",
          "Search Result Page-Use of Consumer and Future Builder",
          "Seat Plan Page-Initial Setup",
          "Seat Plan Page-Create Seat Widget",
          "Seat Plan Page-Create Seat Plan Page View",
          "Seat Plan Page - Make the seats selectable",
          "Seat Plan Page - Get the reservations",
          "BookingConfirmationPage Part 1",
          "BookingConfirmationPage Part 2",
          "Seat Plan Page - Save reservation",
          "Seat Plan Page - Bug fixed",
          "Navigation Drawer overview",
          "Admin Panel-ExpansionPanelList overview",
          "Admin-Show reservations in ExpansionPanelList",
          "20. Admin-Search reservations",
          "Admin-Add Bus and Route",
          "Admin-Add Schedule"
        ],
        "Spring Boot Project-Bus Reservation": [
          "Welcome to Spring Boot",
          "Hello World - our first REST endpoint",
          "More endpoints-JSON output",
          "Reservation Backend-Use of Lombok",
          "Reservation Backend-Install MySql",
          "Reservation Backend-The Bus Entity",
          "Reservation Backend-Create Bus Controller Service and Repository",
          "Reservation Backend-Test Bus APIs with Postman",
          "Reservation Backend-Create a Response Model",
          "Reservation Backend-Create Exception Handlers",
          "Reservation Backend-Craete Bus Route components",
          "Reservation Backend-Test Route APIs with Postman",
          "Reservation Backend-One to One Association",
          "Reservation Backend-Schedule Repo and Service",
          "Reservation Backend-Test Schedule APIs with Postman",
          "Reservation Backend-Bug fixed",
          "Reservation Backend-Create Reservation components",
          "Spring Security-Introduction",
          "Important note about Spring Boot Update",
          "Spring Security-Add Security Filter Chain",
          "Spring Security-Introduction to JWT",
          "Spring Security-Create AppUser and UserDetails",
          "Spring Security-Create JwtTokenProvider",
          "Spring Security-Create JwtAuthFilter",
          "Spring Security-Create Auth Controller",
          "Spring Security-Modify Security Filter Chain",
          "Spring Security-Test Admin login API",
          "[New]Update SecurityConfig Class"
        ],
        "API Integration": [
          "API Integration-Admin Login Part 1",
          "API Integration-Admin Login Part 2",
          "API Integration-Admin Login Part 3",
          "API Integration-Admin Login Part 4",
          "API Integration-Introducing Freezed Library",
          "API Integration-Modify Add Bus",
          "API Integration-Test Add Bus API",
          "API Integration-Modify Bus Route",
          "API Integration-Modify Add Bus Schedule",
          "API Integration-Modify Search and Search Result",
          "API Integration-Save Reservation",
          "API Integration-View and Search Reservation"
        ],
        "Congratulations": [
          "Congratulations-You made it"
        ]
      },
      "requirements": [
        "Flutter basics are required. You should know how to create a Flutter project from scratch, how to deal with the basic widgets and file structure of a Flutter Project",
        "Android Studio/Visual Studio/IntellijIdea and Flutter SDK/Java JDK are required to be installed on your PC/Mac",
        "Having basic knowledge of Java programming language is required for smooth experience"
      ],
      "description": "Hello and welcome everyone to this course. If you want to build a mobile application that targets both Android and iOS and also create a backend for your application, you are in the right place. This course is all about bringing two big frameworks altogether – Flutter and Spring Boot. Throughout this course, we will build a mobile application that is backed by Spring Boot. Using Flutter, we will build our UI and we will use Spring Boot to build REST APIs that will be consumed by our Flutter app.\nFlutter and Spring Boot are two big players in the industry. Flutter took no time to become one of the most popular Mobile Apps development framework for its simplicity, easy to learn and multiplatform features while Spring Boot is a proven horse in the long race. Getting skilled according to market demand is every developer’s dream and to become a skilled person in any field takes considerable amount of time. To build a successful production level project, you may have to join many pieces together and go through a series of observations and considerations. Selecting the most suitable platform for your project is a big thing because there’re many eligible candidates out there in the market. Almost every mobile apps require a backend to persist, store it’s data and microservices. Learning different framework is time consuming, learning curve may differ significantly. Wouldn’t that be wonderful if you are introduced with the two most demanding framwork from scratch in a single course? That’s why you are here and this course is just for you.\nFlutter and Spring Boot are two big frameworks, getting skilled in each environment requires time. Combining these two in a single course was a bit challenging. Besides, putting more features from both the framework in the course could increase it’s length and could be a burden. For this reason, I have put minimum but most basic features from both the framework and tried to build an app by leveraging the power of both of them. By taking this course, you will have a better and strong understanding in both Flutter and Spring Boot. Besides, Dart and Java have many similarities between them. This will give you an advantage to learn both the languages in parallel. I hope you will get the best out of this course, you will learn how to build Flutter apps from scratch and also how to make a RESTFul service with Spring Boot. You will start as a beginner, and at the end of the course, you will be confident enough to go beyond your capabilities by yourself.\nWe will build one single project throughout this course, and that will be a Bus Ticket Booking or Seat Reservation app where app users will search for different routes on a specific day he/she wants to travel, select the suitable schedule, select one or more seats and then submit the reservation. We will have an Admin for our app whose responsibility is to add bus, routes and schedules. We will provide authentication functionalities for our Admin, we will talk about how we can secure our data or end points and authorization, that means, what kind of data our users can access or not.\nAlthough I will start from scratch, assuming you have no prior knowledge in Flutter and Spring Boot, I strongly recommend you to have a little basic knowledge of Dart and Java programming language to get a smoother experience from this course. If you don’t have any experience in Dart and Java, I suggest you to follow any YouTube channel to learn the basics of Dart and Java before you get to start this course. I have been always careful to keep the length of this course as short as possible. It is observed that long courses fails to keep their audiences till the end. You probably have bought other courses but never been able to reach the end. I want my students to have a smooth journey that ends with satisfaction and a bag full of skills and knowledge.\nI hope you will enjoy this course and it will add greater values to your skill.",
      "target_audience": [
        "For beginner Flutter developers who wants to learn Spring Boot from scratch",
        "For Flutter developers who want to explore and try Spring Boot for their backend project",
        "For Spring Boot developers who want to connect their Spring Boot project with Mobile devices and build beautiful UIs using Flutter"
      ]
    },
    {
      "title": "Instagram SwiftUI Clone | MVVM | Cloud Firestore",
      "url": "https://www.udemy.com/course/instagram-swiftui-clone-mvvm-cloud-firestore/",
      "bio": "Learn how to build a full scale mobile application with SwiftUI using the MVVM Architecture",
      "objectives": [
        "How to build an Instagram Clone with SwiftUI 2.0",
        "How to build a social network with posts, comments, likes notifications & followers",
        "Mastery of the MVVM Architecture Pattern",
        "How to create and interact with data models and APIs using SwiftUI",
        "How to engineer a back end from scratch with Cloud Firestore",
        "Fundamental programming and SwiftUI skills"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Xcode & Swift is preferred but not required",
        "Macbook Computer"
      ],
      "description": "What are we building?\nIn this course, you will learn how to build an MVP version of Instagram with strictly Swift UI using the MVVM architecture. This is the only course on the market that builds a fully functioning app as complex as Instagram using nothing but SwiftUI. We will be building this completely from scratch, starting with the User Interface skeleton, and working our way up to integrating our API with Firestore and data models. This course WILL take your development skills to the next level, using the latest and greatest techniques in modern programming.\nWe will be building all the core components of a social network. This includes following users, uploading/liking posts, a notification system, creating a user profile, and registering users. Throughout the process, you will develop high level programming, app design and app development skills.  We will be building this without the use of storyboards, fully programmatically.\nPrior Experience?\nSome programming and basic Xcode experience is preferred. The course will move a little fast if you're a complete beginner, but you will pick things up along the way.\nWhy take this course?\nLearning advanced development skills should be taught using real world examples. This course will teach you how to build a fully functional social network, from complete scratch. You will be learning advanced front and backend development skills, from a real life professional developer. You will learn how to code like a pro, and everything will be explained in detail along the way. This will teach you to build production ready applications, that are easily scalable and maintainable. This also makes for a great project to add to your portfolio, which you can use to show off to potential employers if you're trying to become a pro.\nWhat will you learn?\nHow to build a fully functioning social network (likes, follow, posts, comments & notifications) with SwiftUI\nHow to build a complex User Interface with strictly SwiftUI\nHow to integrate a backend with a complex SwiftUI application\nHow to implement Model View ViewModel (MVVM) architecture\nHow to engineer a backend server using Cloud Firestore\nHow to authenticate and register users with Firebase\nHow to communicate with a database (read/write)\nHow to monitor events in a database\nHow to upload images to Firebase Storage\nHow to structure data for optimum performance in Cloud Firestore\nHow to programmatically construct views and controllers\nHow to parse incoming JSON data from database\nHow to use Swift Package Manager (SPM) and custom third party APIs\nHow to work with Binding, Published and State variables\nHow to implement custom subclasses for clean and reusable code\nHow to create extensions and functions for clean and reusable code\nAdvanced level programming and app development skills\nAdvanced level User Interface Design\nAdvanced level back end engineering\nWhat features are included?\nNotifications\nCreate users\nCreate a user profile\nAuthenticate users with Firebase\nSearch for users\nUpload tweets\nHome feed with tweets\nLike tweets\nFollow/Unfollow users from profile\nLogging in and logging out",
      "target_audience": [
        "All levels of programmers looking to improve their skills and build an awesome application from scratch"
      ]
    },
    {
      "title": "Mastering ARKit for iOS",
      "url": "https://www.udemy.com/course/mastering-arkit-for-ios-using-swift/",
      "bio": "Build 25+ Augmented Reality Apps - Updated for ARKit 2.0",
      "objectives": [
        "Build amazing ARKit applications",
        "Learn how to use SceneKit with ARKit enabled apps"
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "Prerequisites",
          "What is Augmented Reality?",
          "Hello ARKit and Sample Code",
          "Understanding Hello ARKit Application"
        ],
        "Implementing ARKit Applications": [
          "Adding Virtual Objects to the Real World",
          "Displaying Virtual Text in Real World",
          "Adding Multiple Virtual Objects to the Real World",
          "Adding Tap Gesture and Sample Code"
        ],
        "Understanding Planes": [
          "What are Planes?",
          "IMPORTANT PLEASE WATCH - Understanding the Code",
          "Detecting Planes and Sample Code",
          "Overlaying Planes and Sample Code",
          "Placing Virtual Objects on Plane and Sample Code"
        ],
        "Physics": [
          "Adding Physics and Sample Code",
          "Collision Detection and Sample Code",
          "Applying Force and Sample Code"
        ],
        "Loading Models": [
          "Turning Models into DAE",
          "Importing Models Using SketchUp"
        ],
        "Launching Missile Using ARKit": [
          "Importing Missile Model",
          "Placing Missile Model into Real World",
          "Adding Smoke Particle Effect to Missile",
          "Launching the Missile",
          "Adding Fire Particle Effect and Sample Code"
        ],
        "Collision Detection by Implementing Target Shooting App": [
          "Understanding the App",
          "Adding Targets",
          "Shooting an Object",
          "Collision Detection",
          "Collision Contact Notification and Sample Code"
        ],
        "Building a Measuring App Using ARKit": [
          "Understanding the Scenario",
          "Understanding the Measurement App",
          "Adding a Crosshair in the Middle of the Screen",
          "Registering a Tap Gesture",
          "Adding Starting Location of Measurement",
          "Adding Ending Location of Measurement",
          "Calculating the Distance",
          "Displaying the Distance and Sample Code"
        ],
        "ARKit with Google Blocks": [
          "What is Google Blocks?",
          "Downloading the Model and Installing Blender",
          "Converting Google Blocks Models to ARKit Models",
          "Loading Google Blocks Models and Sample Code"
        ],
        "Light": [
          "Prerequisites",
          "Setting Up Starting Point of the App",
          "Default Lighting",
          "Adding a Spotlight",
          "Light Estimation and Sample Code"
        ]
      },
      "requirements": [
        "You should have familiarity with Swift Language",
        "iOS 11 either released or beta version",
        "Physical iPhone 6S or better, running iOS 11 either released or beta"
      ],
      "description": "Are you interested in learning how to write Augmented Reality Apps?\nAugmented Reality is the future of digital transformation. And now you can learn it from the comfort of your home.. in your own time.. without having to attend class.\nMy name is Mohammad Azam, creator of many popular online courses including Mastering MapKit in iOS Using Swift and Creating Stickers and iMessages Applications in iOS 10 Using Swift 3, Mastering Micro Services Using JPA, Mastering Server Side Swift Using Vapor and more.\nI have created over 2 dozens apps and some of my apps were even featured by Apple on the App Store. I have worked with fortune 500 companies as a lead iOS developer and helped them grow their business ten folds.\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 4 hours. In fact if you think that the course fell short on delivering topics then we will give you your MONEY BACK.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nBuy this course today and this is what you’ll get.\nI will show you how to build real and amazing augmented reality apps using ARKit. I will start from the very beginning covering the basics of AR and how to setup your AR project. Next we will dive into advanced concepts of plane detection, physics and collision detection. I will also show you how you can load models from Google 3D Warehouse using SketchUp.\nThe course is accompanied with all the code sample files.\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and make sure that every questions is answered.\nCan you believe you get all this (and more) for just $195?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nWhy learn ARKit?\nARKit is the next step towards the future of apps. AR is going to allow users to enter fourth transformation and consume information more seamlessly.\nARKit allows iOS developers to use their existing skills to create amazing augmented reality experiences.\nAugmented Reality will play an important role in education. Take advantage of ARKit and create attractive and intuitive experiences.\nWho is this for?\nThis course is for anyone who wants to take their skills to the next level. ARKit is a new technology and companies will be jumping on it to create their future app experiences. Augmented Reality Using ARKit can also help you to earn higher salary since now you know how to write a complete app which deals with placing virtual objects in the real world.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the iOS community with a large following. I do a lot of speaking engagements in which I spread knowledge and education.\nIf you are not satisfied with the course then I offer a 100% REFUND. I am confident that you will enjoy the course and you will utilize the knowledge you learned in this course in your future applications.\nWhat are the requirements?\nA Mac Computer\nXcode 10 or above\nPhysical iPhone 6S or better running iOS 11 or above\nBasic understanding of the Swift language and the iOS SDK - I'll teach you everything you need to know about ARKit.\nWhat am I going to get from this course?\nCreate amazing Augmented Reality Apps Using ARKit Using Swift\nBuild apps for the fourth transformation by placing virtual objects in the real world\nLearn SceneKit framework through the use of ARKit\nBecome a professional app developer, take freelance gigs and work from anywhere in the world\nBored with the same old, same old? Apply for a new job in a software company as an iOS developer\nWho is the target audience?\n\nAnyone who wants to be an app developer: This is a complete course, just like my Complete MapKit, iMessages and Swift courses.\nAnyone who wants to learn to code: Augmented Reality is the future and the future is right NOW.\nAnyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work is your key to a hugely powerful world.",
      "target_audience": [
        "Anyone who wants to learn about Augmented Reality Using ARKit for iOS",
        "Anyone who wants to build applications for the fourth transformation"
      ]
    },
    {
      "title": "Flutter UI Bootcamp | Build Beautiful Apps using Flutter",
      "url": "https://www.udemy.com/course/the-complete-flutter-ui-course-build-amazing-mobile-ui/",
      "bio": "A complete guide to building beautiful and immersive mobile applications using Flutter for iOS and Android",
      "objectives": [
        "Build engaging native mobile apps for both Android and iOS",
        "Learn all the basics and advanced features related to UI development in Flutter",
        "Master the art of creating beautiful and functional UI with Flutter"
      ],
      "course_content": {
        "Introduction": [
          "Introduction | Important Notice!"
        ],
        "Dart Basics": [
          "Dart | Variables",
          "Dart | Functions",
          "Dart | Classes and Objects"
        ],
        "Gamify | Project 1 | Flutter Fundamentals": [
          "Gamify | App Showcase",
          "Home Page | Getting Started",
          "Home Page | Featured Games Background",
          "Home Page | Background Gradient",
          "Home Page | Top Utilities Bar",
          "Home Page | Featured Games Information",
          "Home Page | Featured Games Information 2",
          "Home Page | Scrollable Games List View",
          "Home Page | Scrollable Games List View 2",
          "Home Page | Featured Games Banner",
          "Home Page | Completion"
        ],
        "Authify | Project 2 | Animations and Page Transitions": [
          "Authify App | App Showcase",
          "Login Page | Getting Started",
          "Login Page | Finishing UI",
          "Login Page | Enter Animation",
          "Home Page | Getting Started",
          "Login Page + Home Page | Custom Page Transition",
          "Login Page + Home Page | Custom Page Transition 2",
          "Project | Completion"
        ],
        "Bonus: Discover | Project 3 | Advanced UI Features": [
          "Introduction | Design Breakdown",
          "Home Page | Getting Started",
          "Home Page | Location Bar",
          "Home Page | Articles List #1",
          "Home Page | Articles List #2",
          "Home Page | Articles List #3",
          "Home Page | Articles List #4",
          "Home Page | Articles List #5 (Rating Widget)"
        ]
      },
      "requirements": [
        "Basic Flutter and Dart knowledge"
      ],
      "description": "Join the most comprehensive Flutter development course and learn how to build amazing user interfaces for iOS and Android.\nYou don't need to learn Android/ Java and iOS/ Swift to build real native mobile apps!\nThis course will teach you the basics on how to get started with building beautiful mobile apps.\nYou'll learn Flutter not only in theory but we'll build multiple fully functional and beautiful, real world applications. This course is going to focus on both the core basics and advanced features for building engaging user interfaces with flutter.\nIn this course you'll fully utilize the extensive Material Design library provided by Flutter. You will use all the common Ui elements provided by Flutter like buttons, switches, forms, toolbars, lists and more - and make your own custom widgets for more complex scenarios.\nHere's what's included in the course:\nComprehensive and in-depth lectures on creating beautiful UI's with Flutter\nAn overview of the built-in widgets and how you may create your own\nDebugging tipps & tricks\nPage navigation with tabs, side drawers and stack-based navigation\nAdding beautiful animations & page transitions\nCreating student requested UI tutorials.\nAnd more!\nThis course is for you if ...\nYou're interested in building real native mobile apps for the two most popular mobile platforms - iOS and Android\nDon't want to spend hours learning two completely different languages\nCourse prerequisites:\nBasic Dart language knowledge\nBasic Flutter knowledge.\nYou DON'T need to know iOS (Swift/ObjectiveC) or Android (Java)",
      "target_audience": [
        "Basic Dart knowledge will help but is not a must-have",
        "NO prior iOS or Android development experience is required"
      ]
    },
    {
      "title": "Kotlin for Android & Java Developers: Clean Code on Android",
      "url": "https://www.udemy.com/course/kotlin-android/",
      "bio": "Become a professional Kotlin developer and write cleaner code in your Android apps than in Java, avoid boilerplate code",
      "objectives": [
        "Write clean code with Kotlin",
        "Avoid ceremony and boilerplate code around Android APIs",
        "Use functional programming to write concise, expressive code",
        "Create Android apps with Kotlin",
        "Write readable SQLite transactions using extension functions in Kotlin",
        "Use the Kotlin Android Extensions to avoid findViewById()",
        "Create multiple activities, layouts and menus"
      ],
      "course_content": {
        "Introduction": [
          "What You'll Learn in this Course",
          "Make the Most of this Course!",
          "Who's Using Kotlin?"
        ],
        "Get Ready": [
          "Introduction",
          "Install the Java JDK 8",
          "Install Android Studio",
          "Set Up a Project in Android Studio",
          "Recap"
        ],
        "Kotlin Basics": [
          "Introduction",
          "Variables and Data Types",
          "Null Safety in Kotlin",
          "Conditionals: \"if\" Expressions",
          "Conditionals: \"when\" Expressions",
          "Collections",
          "\"for\" Loops",
          "\"while\" Loops",
          "Functions",
          "Get Ready for Serious Kotlin Coding (Set up IntelliJ IDEA)",
          "Create a main() Function",
          "Challenge: Reading the User's Name from the Console",
          "Challenge: Using Collections and Loops",
          "Named Arguments & Default Parameter Values",
          "Exceptions",
          "Why No Checked Exceptions?",
          "Recap"
        ],
        "Functional Programming": [
          "Introduction",
          "What is Functional Programming?",
          "Functional Programming II",
          "Lambdas & Higher-Order Functions",
          "Use map() and flatMap()",
          "Use take() and drop()",
          "Use zip()",
          "Challenge: Functional Programming for Data Analysis",
          "Chain Functions Together",
          "Lazy Sequences",
          "Case Study: Performance of Lazy Sequences",
          "Code Along: Infinite Lazy Sequence of All Prime Numbers",
          "Use \"let\" Operator for Scoping and Nullables",
          "Use \"with\" for Many Calls on the Same Object",
          "Use \"use\" for Closeable (like try-with-resources)",
          "Inline Functions",
          "Recap"
        ],
        "Object-Orientation in Kotlin": [
          "Introduction",
          "Classes",
          "Properties with Getters & Setters",
          "Primary and Secondary Constructors",
          "Methods",
          "Extension Functions",
          "Data Classes",
          "Enums",
          "Inheritance",
          "Code Along: Inheritance Example",
          "Abstract Classes",
          "Interfaces",
          "Overriding Rules",
          "Smart Casts",
          "Visibilities",
          "Companion Objects for \"Static\" Members",
          "Object Declarations as Singletons",
          "Packages and Imports",
          "Generic Classes",
          "Generic Functions",
          "Covariance",
          "Covariance: Java vs Kotlin",
          "Covariance vs Contravariance: \"out\" and \"in\"",
          "Recap"
        ],
        "Kotlin for Android -- Fundamentals": [
          "Introduction",
          "Create the App Project",
          "Understand the Android Versions",
          "Create a CardView Layout and Add UI Elements",
          "Use the \"Kotlin Android Extensions\"",
          "Challenge: Set Texts and Image Source Programmatically",
          "Challenge Solution"
        ],
        "Kotlin for Android -- Implement a RecyclerView": [
          "Introduction",
          "What is a RecyclerView?",
          "Create the Data Class \"Habit\"",
          "Implement the \"HabitsAdapter\" - Part I",
          "Implement the \"HabitsAdapter\" - Part II",
          "Implement the \"HabitsAdapter\" - Part III"
        ],
        "Kotlin for Android -- Let Users Create Habits": [
          "Introduction",
          "Add a Menu",
          "Add a Second Activity",
          "Use Intents to Switch Activities",
          "Challenge: Build the Activity Layout",
          "Challenge Solution",
          "Let Users Choose an Image",
          "Get the Selected Image Back (onActivityResult)",
          "Show Error Messages to the User",
          "Code Along: An Extension Function for \"EditText\""
        ],
        "Kotlin for Android -- Use SQLite the Kotlin Way!": [
          "Introduction",
          "Introducing SQLite",
          "Define the Contracts",
          "Implement the Database Helper",
          "Store a Habit to SQLite",
          "Implementing Secure Transactions (that support Rollback)",
          "Clean Code: Improving Transactions in Kotlin",
          "Clean Code: Further Improving Transactions and Performance",
          "Store the Habit in \"CreateHabitActivity\"",
          "Read All Habits from SQLite",
          "Challenge: Improve SQLiteDatabase.query(...)",
          "Challenge Solution",
          "Challenge: Improve Cursor.getString(...)",
          "Challenge Solution",
          "Add Files to the Virtual Device (Excursus)"
        ],
        "Bonus": [
          "Bonus: Reach Your Full Potential As A Software Developer"
        ]
      },
      "requirements": [
        "Some programming experience (e.g. Java)",
        "At least some Android experience"
      ],
      "description": "Learn to use Kotlin the right way to actually improve your Android app code\nWrite null-safe, concise, and readable code in Kotlin using functional and object-oriented concepts\nWork around unnecessary boilerplate code when using Android APIs (e.g. SQLite) using higher-order extension functions\nUse Android Studio effectively to speed up your development workflow\nGet your questions answered along the way should you ever get stuck\n\n\nWhy Take This Course?\nI've been involved with Kotlin since late 2015, before it was released in its first stable version. As the instructor of the course \"Kotlin for Beginners\", I know which topics students are interested in or get stuck with.\nMy first Kotlin course is recommended from the official Kotlin website and from the official Android website as a resource to learn Kotlin for Android. So you can be sure to get quality teaching here.\nAfter this course, you'll be able to confidently use Kotlin for any kind of project -- but we'll of course apply what we learn to Android app development in this course.\n\n\nWhat Makes This Course Special?\nSince Google's #IO17 announcement to officially support Kotlin on Android, many new courses on the topic have been released -- which is great because it further helps to spread the language.\nWhat makes this course special is that while most other courses do not teach good coding style, this course will focus on producing clean code and teaches you to make use of Kotlin's amazing features to actually write better code than in Java. This way, you will get a huge benefit using Kotlin instead of Java, e.g. by avoiding boilerplate code around many Android APIs.\n\n\nWhat This Course Is NOT\nThis course is not an Android reference, I assume you already have at least some Android experience. Instead, you'll learn to write cleaner code for your apps by applying Kotlin's powerful language features to avoid unnecessary ceremony around Android APIs. Also, at the end of the course, you'll be able to use Kotlin for any kind of project -- not just for Android apps.\n\n\nWhat Students Say About Me (taken from \"Kotlin for Beginners\")\n\"TLDR; One of the best Kotlin course for beginners on Udemy! I took some time to write this review and wanted to finish the course THEN watch other courses offered here on Udemy and THEN want to see how good Peter was in teaching me basics of Kotlin so that I can apply the knowledge while writing actual android apps. And I am happy to report that it has helped me immensely. It wouldn't be wrong if I say that the I was easily understanding the WHYs and WHATs even if the teacher wasn't explaining in detail in other courses... Thank you Peter! You have taught me well! [...]\"\n- Hasaan\n\"Great introduction to Kotlin and programming for beginner programmers!\"\n\n- Per-Erik\n\n\n\"Easy to follow, instructor goes at a great pace that's friendly for beginners.\"\n- Ronaldo\n\"beyond excellent!!!!\"\n- Mike\n\"Great start so far. Looking forward to a great course. Best online course I have taken, by far!!\"\n- James\n\n\n\"Found this to be a very good course to get an overview of Kotlin. Everything was explained clearly and the examples and exercises were very helpful. I'm glad that Peter is considering a course for Android using Kotlin since I'm curious about that subject.\"\n- James\nWhat You'll Learn\nHow to set up all you need for Android development using Kotlin (e.g. how to install Android Studio)\nThe basics of Kotlin: variables, null safety, immutability, conditionals, loops, functions, exception handling\nFunctional programming in Kotlin: higher-order functions, lambda expressions, lazy evaluation, lazy sequences, the Kotlin standard library\nObject-oriented programming in Kotlin: all you know from Java + data classes, extension functions, smart casts, object declarations, differences from Java concerning inheritance\nAndroid development with Kotlin: creating activities, layouts, menus, click listeners, working around unnecessarily complex Android APIs, improving SQLite transactions with extension functions, avoiding null in your code\n------\nWhat is Kotlin?\nKotlin is a modern language for the JVM, and the only officially supported language on Android beside Java. It's developed by Jetbrains, the makers of IntelliJ on which Android Studio is based.\nSince Google's announcement to officially support Kotlin in 2017, interest in the language has radically increased -- and with it the number of tutorials, courses, books, and also job offers for Kotlin. It's a great time to dive into this modern language and get ahead of other Android developers!\nWith its modern language design that incorporates industry best practices, Kotlin allows you to write highly expressive, understandable and safe code -- while being 100% interoperable with Java. You can use any Java classes and methods from Kotlin and the other way around.\nThis courses shows you what language features I mean, and how you can apply them in order to write world-class code.",
      "target_audience": [
        "Android developers",
        "Java developers",
        "Anyone with some programming experience who wants to learn Kotlin for Android"
      ]
    },
    {
      "title": "iOS & Swift: Become An App Developer",
      "url": "https://www.udemy.com/course/devslopes-ios12/",
      "bio": "Beginner's Guide to Learn iOS, Swift, ARKit, CoreML, App Design, Advanced Programming and Much More",
      "objectives": [
        "Submit iOS apps to the Apple App Store",
        "Understand the basic concepts of programming",
        "Apply for JR iOS developer jobs",
        "Work fluently with Swift and iOS",
        "Work as an iOS freelancer",
        "Master Swift from basics to advanced",
        "Learn mobile app design with Sketch",
        "Build ARKit & CoreML apps"
      ],
      "course_content": {
        "Getting Started With iOS 12": [
          "Course overview",
          "⚠️MUST WATCH Installing Xcode & understanding Xcode versions",
          "How to get Xcode in dark theme mode",
          "Join Our Free Private Facebook Group",
          "Building your very first iOS app",
          "Building the Hustle App: Graphics, UI, and Sound"
        ],
        "Intro to Programming & Swift 4 Basics": [
          "Variables, operators, & how computers work",
          "Strings in Swift 4",
          "Numbers in Swift 4",
          "Booleans & conditional logic in Swift 4",
          "Constants & logical operators in Swift 4",
          "Arrays in Swift 4",
          "Loops in Swift 4",
          "Dictionaries in Swift 4",
          "Object oriented programming in Swift 4",
          "Inheritance in Swift 4",
          "Polymorphism in Swift 4",
          "Optionals in Swift 4",
          "Swift 4 Quiz"
        ],
        "Git & Version Control": [
          "Git & Version Control: The fun way",
          "Terminal Basics: Changing directories",
          "Terminal Basics: Creating directories & files",
          "Terminal Basics: Copying & renaming files",
          "Terminal Basics: Deleting files & directories",
          "Git Basics",
          "Setting up Github",
          "Working with Local & remote repositories",
          "Handling git merge conflicts"
        ],
        "Swoosh App: Intro to Interface Builder & Auto Layout in Xcode 10": [
          "Creating the welcome screen",
          "Working with frames",
          "Intro to Auto Layout",
          "Working with UIStackView",
          "Intro to segues (Changing screens in iOS)",
          "Refactoring in Xcode",
          "Debugging setValue forUndefinedKey",
          "Programmatic segues",
          "IBActions & data models",
          "Passing data between view controllers"
        ],
        "Profile App: Digging Deeper With Auto Layout": [
          "Auto Layout for iPhones",
          "Auto Layout for iPads & size classes"
        ],
        "Window Shopper App: Your First Fully Functional iOS 12 App": [
          "Creating custom text fields",
          "Input accessory view and IBDesignable",
          "Creating simple unit tests",
          "Writing logic for calculations",
          "Custom drawing in iOS 12 with drawRect"
        ],
        "Coder Swag App: Tables & Data in iOS 12": [
          "Project creation & IBOutlets",
          "UITableView, delegate, and data source",
          "Creating a UICollectionView",
          "Creating the data models",
          "Working with UITableViewCell"
        ],
        "Intro to Model View Controller": [
          "MVC in Theory",
          "Creating the Xcode project",
          "Managing groups (folders) for MVC",
          "Creating data models",
          "Creating the views",
          "Connecting the views and data with view controllers",
          "Securing the model layer",
          "Challenge"
        ],
        "XYZ & Listy App: Working with iOS Accelerometer": [
          "XYZ: Intro to app",
          "XYZ: Creating project",
          "XYZ: CoreMotion & CMMotionManager explained",
          "XYZ: Receiving accelerometer updates",
          "XYZ: Handling accelerometer data",
          "Listy: Intro to app",
          "Listy: Building UI",
          "Listy: Creating ParallaxCell Subclass",
          "Listy: Configuring ImageArray & Populating UITableView",
          "Listy: Writing parallax function to apply to UIImageView",
          "Listy: Accelerometer challenge"
        ],
        "Splitter App: Working With UISplitViewController": [
          "Splitter: Intro to App",
          "Splitter: Creating Project & Dummy Data",
          "Splitter: Setting Up MasterVC",
          "Splitter: Building ImagePresentationVC",
          "Splitter: Passing Images To ImagePresentationVC",
          "Splitter: Challenge"
        ]
      },
      "requirements": [
        "Requires a computer running macOS Sierra or Mojave"
      ],
      "description": "Welcome to the world's most comprehensive course on iOS development. This course is designed like an in-person coding bootcamp to give you the most amount of content and help with the least amount of cost.\nNO PRIOR CODING EXPERIENCE REQUIRED\nOVER 88 HOURS OF CONTENT\nHere are some of the things you'll be able to do after taking this course:\nSubmit apps to the app store\nUnderstand programming & basic algorithms\nWork fluently with Swift & iOS\nApply to jr iOS development jobs\nWork as an iOS contractor\nWho this course is for:\nPeople who want to build apps\nThose who want to create their own startup\nThose looking to get a full time job as a developer\nBusiness owners\nStudents & teenagers\nPeople who want to make money building apps\nIf you are absolutely new to programming you should start at the beginning of the course and go to the end.\nI've designed this course to take you down a guided learning path. Lectures are not broken out by specific topics. You build apps and then learn a ton of principles within those apps. So don't skip around!\nIf you already know Swift then you can skip the Swift section since the changes in Swift between iOS 11 and 12 are minor\nIf you've never programmed before, make sure you DO take the Swift lessons. We'll teach you core foundational principles so you can build complex apps.\nDon't forget to join the free live community where you can post questions to coding issues\nHere are a few things you'll learn:\nSwift\nXcode\nInterface Builder\nFirebase & Cloud Firestore\nBuild a Slack Clone\nMaps & GPS\nCore Data\nARKit & Augmented Reality\nCoreML & Machine Learning\nTables & Data\nAPIs, HTTP, and Networking\nApp Design\nStoryboards & Segues\nSiriKit\nReplayKit\nAnd a lot more...\nNEW ADVANCED TOPICS\nAfter you master the foundational iOS and Swift principles you will want to start taking the advanced sections.\nThe advanced topics are designed to take your skills to the highest level so you can land your first job.\nSome of the advanced topics are:\nMastering protocols & delegates\nDiving deep into Swift extensions\nSwift data structures\nProtocol oriented programming\nReactive programming in Swift\nUnit Testing\nUI Testing\nAnd more\n\n\nSOME OF OUR REVIEWS\n\"Great course so far. Definitely better than codecademy, teamtreehouse and freecodecamp\" - Luke\n\n\n\"When you're a beginner deciding that you want to learn to code, it is by far not easy by any means. I have purchased books from iBooks about Swift and while some were better than others, it just doesn't sink in for me like watching this course. The way Mark explains things and his analogies are easy to understand and his teaching style has me genuinely excited about learning to code.\" - Jay\n\n\n\"amazing course and teachers!\nawesome actual stuff here! this course prepares you for real life, and help you to get hired as professional developer. I watched this course and i got development job.\" - Vladimir\n\n\n\"I am a 15 year old developer who struggled to find comprehensive tutorials online which I could follow without getting confused because there was prior knowledge I did not know. You start from the ground up making this course useful for anyone including beginners and experienced programmers which has boosted my confidence as I know that i have built some complicated apps which shows me that I am capable of building large projects. Thanks :) \" - Roel",
      "target_audience": [
        "People new to programming",
        "Existing programmers who want to learn iOS",
        "Anyone who wants to build iOS apps",
        "Anyone who wants to get a job as an iOS developer",
        "Students and teenagers",
        "Business owners and startups"
      ]
    },
    {
      "title": "Visual Embedded Android (AOSP) with Drawings and Practice",
      "url": "https://www.udemy.com/course/embedded-android-training/",
      "bio": "Explore Android Open Source Project and design powerful systems using Android 11",
      "objectives": [
        "Understand embedded system essentials and purpose",
        "Understand high level operating systems (Linux, Android) and purpose of using one",
        "Understand Linux software stack essentials",
        "Understand Android software stack essentials",
        "Customize Android Open Source Project",
        "Work with Android 11 source",
        "Run Android 11 on ASUS Tinkerboard 2",
        "Create custom Android builds for ASUS Tinkerboard 2",
        "Create Android native services",
        "Port native binaries to Android build system",
        "Get around with Android build system (Soong, Makefile)",
        "Use Android Debugging Bridge (ADB) confidently for talking with embedded devices",
        "Use Fastboot confidently for flashing images",
        "Create and work with SELinux policies",
        "Work with AOSP directories confidently",
        "Understand and work with partitions in Android",
        "Port custom Android applications to AOSP",
        "Run Google Compatibility Test Suite (CTS)",
        "Design Android Software compatible with CTS",
        "Get and set system features by manipulating Android system properties",
        "Define and integrate AIDL interfaces",
        "Understand Linux and Android boot process and their differences"
      ],
      "course_content": {
        "Introduction to Embedded Systems": [
          "Course Promotional Video",
          "Introduction to Embedded Systems",
          "A Generic View on an Embedded System"
        ],
        "Embedded Android Architecture": [
          "Android vs Linux",
          "Linux Architecture Basics",
          "Android Architecture",
          "How Linux and Android Boots?"
        ],
        "Building Android Source and Flashing Android Image": [
          "Obtaining and Building Android Source",
          "Downloading Android 11 source for ASUS Tinkerboard 2",
          "Building Android 11 source for ASUS Tinkerboard 2",
          "Update: Building Instructions for Ubuntu 22.04 and Ubuntu 24.04 Users",
          "Flashing Android 11 image to ASUS Tinkerboard 2"
        ],
        "A Tour Through Android Source and Partitions": [
          "Android Source Code Directories Explained",
          "Android Filesystem Partitions"
        ],
        "Accessing Android Device": [
          "Introduction to ASUS Tinkerboard 2 Hardware and Interfacing using Serial",
          "Introduction to ADB and Fastboot",
          "Flashing seperate partitions using Fastboot tool",
          "ADB Remote Screen"
        ],
        "Exploring ASUS Tinkerboard 2 directories and sources": [
          "Board, build, and device configuration files",
          "Init Scripts (RC files)",
          "Devicetree and Kernel Config Files",
          "Files for Android Framework Customization"
        ],
        "Customizing Android Framework": [
          "Integrating a Custom Launcher in Android Build System",
          "Creating a New Device Workspace to Contain Our Changes",
          "Integrating a Prebuilt Application (Apk) in Android Build System",
          "Customizing Android Framework to Enable Night Mode",
          "Customizing Android Framework to Modify Default Wallpaper"
        ],
        "Working in Android Build System": [
          "Android System Properties",
          "Integrating Plain C Applications in Android Build System",
          "Deploying Binaries to Various Partitions using Android Build System",
          "Taking a Partial Build using mm Command"
        ],
        "Understanding and Creating Native C++ Service": [
          "Introduction to Native Service Creation in Android",
          "Creating Native AIDL Service using C++",
          "Creating Init Script for Our Example Service",
          "Modifying Manifest Files for adding AIDL Interface",
          "Creating Aidl Interface Library using Android Build System",
          "SELinux Configuration for Example Service",
          "Creating Test Application to Talk with Example Service over AIDL Interface"
        ],
        "Going Forward": [
          "An Example Approach to Fixing System-wide Issues",
          "Testing and Certification in Android",
          "ADB Commands for System-wide Debugging"
        ]
      },
      "requirements": [
        "Basic Linux understanding (commands, bash scripts, code compilation, basic concepts)",
        "Basic embedded system understanding (basic concepts, cross compilation, system images)",
        "Basic C and C++ programming understanding (not a must but good to have)"
      ],
      "description": "Hi,\nMy name is Mustafa Ozcelikors, a Linux & Android Engineer with more than +7 years of experience working in automotive, who have won Google SOC event in 2017. Here comes a unique beginner to intermediate course that is dedicated to teach Android Open Source Project and Embedded Android concepts to a larger audience.\nVisual Embedded Android Training is a unique course in the way that I use slideshows, pen and canvas for theoretical subjects, whereas makes hands-on examples for the practical subjects. I have mastered this technique over the years, teaching my colleagues at work, teaching on Youtube, and now I have decided to move on to Udemy to reach larger audience.\nTheoretical subjects are carefully planned and almost for every important subject, multiple block diagrams have been created for better understanding. Almost every figure, schematic, drawing comes from years of experience in the field, not from the internet or from any book. In practical subjects we take a deep dive in exploring AOSP directories and open up a terminal to achieve things within it.\nAt the end of the course we together will have a custom Android with custom launcher and custom theme, with integrated AIDL service and test application.\nYou are in this now for the following great content:\nUnderstand embedded Android and Linux software stacks\nGet around with Android 11 source code and Soong (Android.bp) build system\nUse ASUS Tinkerboard 2 and run Android 11 on it , completely from the source.\nCreate AIDL interfaces, native C++ Android services, create test applications\nPort existing Android Java applications to Soong (Android.bp build system\nUnderstand AOSP folder layout, partitions\nUnderstand and work with SELinux policies\nFlash images confidently using fastboot tool\nTalk to embedded device confidently using adb tool\nRun CTS tests\nLog and dump Android system information\nThank you!!\nKindly yours,\nMustafa",
      "target_audience": [
        "Beginners and enthusiasts who understand Linux and want to learn AOSP and Embedded Android",
        "Hobbyists who want to work with ASUS Tinkerboard 2 and AOSP",
        "Beginners who would like to develop their car infotainment, or mobile devices based on Android",
        "Professionals who want a great wrap-up on their favourite subject"
      ]
    },
    {
      "title": "Master React Native Animations",
      "url": "https://www.udemy.com/course/master-react-native-animations/",
      "bio": "Simple, easy to follow, step-by-step lessons for every type of animation",
      "objectives": [
        "How to use Animated, understand how Animated works, how to breakdown animations, and how to build complex animations"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to create a React Native component, and understand basic layout"
      ],
      "description": "Animations are fundamental to user experience. When it comes to building a mobile app they have been generally difficult and cumbersome to add.\nNow with the power of React Native and the Animated library, enhancing your applications experience has been easier than ever!\nIn this course we'll start by walking through all of the functions and animation types that you can leverage with React Native.\nWe'll step it up to some advanced topics live interpolating colors, rotations, using extrapolate, .99 cliffs, interrupted animations and many more concepts.\nAfter that we'll learn how Animated actually works and rebuild some custom animations using d3-interpolate and other libraries to animate SVG paths.\nFinally we get to the real world. We'll use our new found knowledge of Animated to breakdown animations into their pieces, and then rebuild them with the Animated library.\nOverall you'll emerge with a new found understanding of animations in general, but the skills to be able to build any animation you want with React Native and Animated.",
      "target_audience": [
        "Anyone who wants to learn how to do animations with React Native"
      ]
    },
    {
      "title": "Build Full Realtime Chat + Tinder App",
      "url": "https://www.udemy.com/course/build-full-realtime-chat-tinder-app/",
      "bio": "to Master iOS 12, Swift 5 and Firebase 5",
      "objectives": [
        "Build a real world application",
        "Firebase Database, Storage and User Authentication",
        "A comprehensive authentication system, Sign In/Sign Up with Facebook and Google",
        "Efficiently model super complex Realtime Chat and Dating architecture",
        "Handing address location on MapKit",
        "Real-time show User's location/information.",
        "Details of an User with the route on the MapKit",
        "Allow users search username",
        "Send/Receive Messages & Push Notifications",
        "Realtime User's location queries",
        "Interactive Swipe and Match user interface like Tinder"
      ],
      "course_content": {},
      "requirements": [
        "PC or Mac",
        "Interest in app development",
        "You need a Mac, with XCode 10 installed (which is free)."
      ],
      "description": "This is the most comprehensive iOS Chat/Dating Application on the internet in which you will learn to:\nA comprehensive authentication system:\nSign In/Sign Up with emails.\nSign In/Sign Up with Facebook and Google.\nReset Password for existing users.\nEfficiently model super complex Realtime Chat and Dating architecture with:\nUser profiles.\nInbox.\nMessage (Text, Photo and Video)\nSearch.\nPush Notification.\nHanding address location on MapKit\nReal-time show User's location/information.\nDetails of an User with the route on the MapKit.\nAllow users search username.\nSend/Receive Messages & Push Notifications.\nRealtime User's location queries.\nAnd so much more!\nThis course is all about communication. We are going to create an awesome Chat/Dating App that will include features like push notifications., real time updates, find and chat with the people nearby. This App is called JChat.\n\nAfter outlining the challenges we are facing when creating a messaging application we are going to compile all the resources we are going to need to create our JChat App. Using Firebase as a backend service, we will then start developing a possibility for users to login and register with Email, Google and Facebook for the JChat.\nThe core of our JChat App is of course a great user interface for exchanging messages. After setting up a iMessage-like UI we will focus our efforts on efficiently loading and sending messages.\nAs important as a way to register to a messaging service is an intelligent way to find users that we want to talk to. So we will also implement a great search feature.\nIf you want to chat with the people nearby, you can give your location and the app will show people around you. You can also link your Facebook account with the app. But there is also an option to make an account with the email id.\nYou'll learn how to create user profile, manage swipes and matches, like Tinder. Users can like and dislike profiles of other users to find a match, after finding a match user can engage start seamless conversations and exchange unlimited images and messages.\nFurthermore, you'll build a push notification feature in which users will get notified instantly when their profiles were liked by others.\nWhat are you waiting for? Enroll in this course for step-by-step instructions to guide you through building your own professional app in no time!",
      "target_audience": [
        "Beginner developers",
        "People with an interest in apps",
        "Who know a bit of iOS programming but still don't know how to build a complete, viable iOS app.",
        "Anyone who wants to learn iOS programming.",
        "Anyone who wants to turn ideas into professional apps that can serve millions of users."
      ]
    },
    {
      "title": "MERN Stack E-Commerce App using React Native & Redux Toolkit",
      "url": "https://www.udemy.com/course/mern-stack-e-commerce-app-using-react-native-redux-toolkit/",
      "bio": "MERN Stack Ecommerce App using React Native, Node.Js, Express.Js, MongoDB, and Redux Toolkit",
      "objectives": [
        "Building scalable cross platform application",
        "Creating Custom Hooks",
        "Custom Error Handling",
        "Optimization Technique like Debouncing & Throttling",
        "Creating Admin Dashboard with working Chart",
        "Why Redux Toolkit is better than Redux",
        "Creating APIs and using on a different origin using Cors",
        "JWT Authentication",
        "How to Upload Images on Cloudinary",
        "Building MongoDB Schemas",
        "Protect Admin Specific Routes",
        "Styling in React Native",
        "How to React Native is different from ReactJs",
        "React Native basics",
        "React Native UI Library",
        "Using Camera in React Native",
        "Access Gallery in React Native",
        "Uploading pic from Camera to Cloudinary",
        "Stripe Payment Integration in Backend",
        "Confirming Payment with Stripe and Placing Order"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Demo"
        ],
        "React Native Basics": [
          "Course Guide",
          "Source Code",
          "Installing the App",
          "React Native Basics",
          "Navigation Setup",
          "Basic Styling"
        ],
        "Building Home Screen": [
          "Creating Home Screen",
          "Header Component",
          "Search Button",
          "Categories Component",
          "Search Component",
          "Product Card Component",
          "Creating Footer"
        ],
        "Product Details Screen": [
          "Creating Carousel",
          "Designing Product Details Layout",
          "Add to Cart Button",
          "Toast Message"
        ],
        "Building Cart Screen": [
          "Cart Heading",
          "Cart Layout",
          "Cart Item Component",
          "Checkout Handler",
          "Confirm Order Screen",
          "Confirm Order Item Component",
          "Payment Screen"
        ],
        "Authentication UI": [
          "Building Login Screen",
          "Forget Password Screen",
          "Sign-up Screen"
        ],
        "Profile Routes UI": [
          "Building Profile Screen",
          "Button Box Component",
          "Loader Component",
          "Profile Navigation Handler",
          "Edit Profile UI",
          "Change Password Screen"
        ],
        "Building Orders Screen": [
          "Creating Orders Screen",
          "Order Item Component"
        ],
        "Building Admin Routes UI": [
          "Creating Admin Panel",
          "Product List Item Component",
          "Creating Chart in React Native",
          "Admin Navigation Handler",
          "Building Manage Category Screen",
          "Admin Orders Screen",
          "Update Product UI",
          "New Product Screen",
          "Manage Product Images"
        ],
        "Building Camera Screen": [
          "Creating Camera Screen & Accessing Gallery Photos",
          "Capture Image Using Camera",
          "Using Camera in Actual Phone"
        ]
      },
      "requirements": [
        "Basic knowledge of MongoDB, Express, ReactJs, NodeJs and Redux"
      ],
      "description": "This course provides in-depth training on building a complete e-commerce mobile application using the MERN (MongoDB, Express, React Native, and Node.js) stack and Redux Toolkit.\nThe course covers all aspects of e-commerce app development, including frontend, backend, and integration.\nIn the frontend section, students will learn how to use React Native to create visually appealing cross-platform mobile apps, with a focus on UI design and user experience.\nThe backend section covers the use of Node.js and Express.js for server-side development, with an emphasis on database management using MongoDB. State management is also covered using Redux Toolkit, which will help students create an efficient and scalable application.\nThe course also covers performance optimization techniques such as debouncing and throttling, which will help students improve the app's performance and user experience.\nIn addition, students will learn how to use the camera and gallery on their mobile device to capture images and upload them to Cloudinary for secure storage.\nOnline payments are integrated using Stripe, a popular payment platform.\nIn the integration section, students will bring everything together by integrating the deployed server with the app to create a complete and functional e-commerce application.\nBy the end of the course, students will have a complete understanding of building a complete e-commerce app, from frontend to backend, and will have the skills needed to deploy and maintain a live e-commerce app.",
      "target_audience": [
        "Web Developers who want to build a powerful mobile app"
      ]
    },
    {
      "title": "iOS 9 and Swift 2: Step It Up!",
      "url": "https://www.udemy.com/course/build-ios9-swift-2-music-video-app-using-rest-apis/",
      "bio": "Learn By Doing & Take Your App Building Skills to the Next Level",
      "objectives": [
        "Learn source control with Git/Github & Xcode integration",
        "Understand the model-view-controller design pattern & best coding practices",
        "Use available REST-APIs to build apps",
        "Understand the JSON format & use the JSON Editor",
        "Handle back-end processing using grand central dispatch",
        "Obj C Class - Reachability using Swift Bridging Header",
        "Add search bar",
        "Create a settings page",
        "Add refresh functionality",
        "Stream and play videos",
        "Implement Touch ID",
        "Implement social media sharing",
        "Implement In-App Email"
      ],
      "course_content": {
        "Introduction": [
          "Music Video App Demo",
          "Meet Michael",
          "Goals of the class - The Big Picture",
          "Why take this course?",
          "Course Roadmap - our journey together"
        ],
        "Web Service Technologies": [
          "REST-API Concepts - the developers opportunity",
          "JSON Fundamentals - unleash the power of data",
          "Intro to the iTunes REST-API",
          "Challenge 1"
        ],
        "Object Oriented Programming Principles in Swift": [
          "Object Oriented Programming Principles",
          "Classes and Objects",
          "Inheritance",
          "Polymorphism",
          "Encapsulation",
          "Abstraction",
          "The power of OOP - iOS Frameworks and Foundation",
          "Object Oriented Programming Principles"
        ],
        "Key Concepts in iOS Development": [
          "Model-View-Controller Design Pattern",
          "Model-View-Controller Communication Rules",
          "Delegation and Protocols Design Pattern",
          "Singleton Design Pattern",
          "Application Lifecycle",
          "View Controller Lifecycle",
          "Key Concepts in IOS Development"
        ],
        "Source Control Management": [
          "Git Basic Concepts - command-line tool",
          "Add git repository manually to Xcode Project",
          "GitHub - Web Based Git repository hosting system",
          "Managing source code with Xcode and GitHub",
          "Exercise - create free account with GitHub",
          "Source Control Management"
        ],
        "Building Our App Back-End": [
          "Overview of the Back-End Processing",
          "Setting up our project",
          "Part 1 Project Setup",
          "Connect to the API",
          "Part 2 NSURLSession",
          "Convert the NSData to JSON",
          "Part 3 NSJSONSerialization",
          "Define the data model",
          "Part 4 Create class with custom initializer",
          "Exercise - Finish the custom initializer",
          "Part 5 Review the completed custom initializer",
          "Recap - what we learned so far....",
          "Part 6 Call custom initializer to build array",
          "Part 7 Obj-C Reachability bridging header",
          "Part 8 Obj-C Reachability App Delegate",
          "Part 9 Obj-C Reachability view controller",
          "Part 10 Debugging tips",
          "Challenge 2"
        ],
        "User Interface - list screen Part 1": [
          "Overview of the User Interface",
          "Table View vs. Table View Controller explained",
          "Part 11 - Tableview",
          "Part 12 - Table View Controller",
          "Part13 - Reachability final touches",
          "Objectives - Implement custom cell",
          "Part 14 - Implement custom cell",
          "Part 15 - Get image from the URL",
          "Part 16 - App Transport Security",
          "Part 17 - Preferred Fonts",
          "Challenge 3"
        ],
        "User Interface - detail screen Part 2": [
          "Part 18 - Create detail screen and setup UI",
          "Part 19 - Pass data to detail screen from row selected",
          "Part 20 - Size Classes",
          "Exercise - Preferred Fonts"
        ],
        "User Interface - settings page Part 3": [
          "Part 21 - Create and layout UI",
          "Part 22 Create class and connect to storyboard",
          "Part 23 -Switch and NSUserDefaults",
          "Part 24 - Slider and NSUserDefaults",
          "Exercise - Implement About screen"
        ],
        "Featured Functionality - Part 4": [
          "Part 25 - AVPlayerViewController",
          "Part 26 - UIRefreshControl",
          "Part 27 - UIActivityViewController",
          "Part 28 - MFMailComposeViewController",
          "Part 29 - AuthenticationwithBiometrics",
          "Our Design Session",
          "Part 30 - Setup search bar and code datasource",
          "Part 31 - Search - code our string matching",
          "Part 32 - Class Extensions",
          "Challenge 4"
        ]
      },
      "requirements": [
        "You should have a computer running OS X El Capitan",
        "You should have Xcode 7.01 or higher installed on your computer."
      ],
      "description": "Emphasis on solid theoretical background, design principles, app architecture, best coding practices, monthly new videos and updates.\n34 coding sessions, 4 challenges, 4 exercises, 3 quizzes and interview questions\n\nNEW - refer to the bonus section\nSWIFT Coding Challenge\nMusic Video App Open Source Project  - Challenges\nAsk Michael - Q & A -  Interview Questions\nApple’s Annual World Wide Developers Conference (WWDC 2016 Updates)\n\n\nThe goal is for everyone to take the skills learned throughout this course and apply them to the challenges. This will allow you to gain more experience through actual work and collaboration.\n\nThis is not just a course but a growing community to constantly push the limits and share and collaborate.\nHave you taken an iOS development course that has left you with more questions? Do you have the basic fundamentals, but want to take your knowledge to the next level? If so, this course is for you!\nYou can Step It UP using REST-APIs. Through this interactive course, you will have the opportunity to use available APIs to build apps that are specific to your interests and build incredible mobile apps.\nWith each of the 77 lectures building off of the proceeding one, you’ll build a music video app from scratch following the model-view-controller design pattern and best coding practices. You will have the opportunity for hands on practice to apply the newly acquired skills to your own concept through challenges and exercises.\nAfter the completion of this course our journey just begins. You will have the opportunity to continue your education by watching a new lecture presented every month. Your feedback will determine the direction of additional content in the bonus section.\nI look forward to taking this journey with you.",
      "target_audience": [
        "This course is designed for developers who already have taken prior iOS development course.",
        "You should be comfortable working with Xcode integrated development environment.",
        "You should have a basic understanding of the Swift programming language."
      ]
    },
    {
      "title": "Flutter & Firebase Tutorial: Build 5 Social Media Apps",
      "url": "https://www.udemy.com/course/flutter-firebase-tutorial-build-5-social-media-apps/",
      "bio": "Learn Flutter & Firebase by building Instagram, TikTok, Twitch, Zoom & WhatsApp!",
      "objectives": [
        "Learn about Firebase Firestore, Auth, Storage",
        "Build Real World Projects with Firebase",
        "Know When & Why To Use Firebase",
        "Deployment",
        "Build Cross Platform Apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Best Way To Follow Along"
        ],
        "Instagram Clone": [
          "Demo",
          "Setup & Theming the App",
          "Building Responsive Layout Widget",
          "Setting Up Firebase",
          "Login Screen UI (Mobile)",
          "Signup Screen UI (Mobile)",
          "Firebase Signup Auth",
          "Firebase Login Auth",
          "Persisting Auth State",
          "Modelling User Data",
          "User Data State Management",
          "Null Check Operator Error Fix",
          "Mobile Bottom App Bar",
          "Add Post Screen UI",
          "Selecting Image",
          "Storing Post Data in Firebase",
          "Feed Posts UI",
          "Displaying Post Data from Firebase",
          "Like Animation",
          "Updating Likes",
          "Comments Screen UI",
          "Storing Comments in Firestore",
          "Displaying Comments",
          "Deleting Post",
          "Searching Users",
          "Showing Posts on Search Screen",
          "Creating Reusable Profile Screen UI",
          "Displaying Profile Data",
          "Following Users",
          "Signing Out",
          "Creating Responsive UI"
        ],
        "TikTok Clone": [
          "Demo",
          "Setup",
          "Login Screen UI",
          "Sign Up Screen UI",
          "Authentication Logic",
          "Firebase Setup",
          "Creating User Model",
          "Persisting User State",
          "Bottom Tab Bar",
          "Add Video Screen",
          "Confirm Video Screen",
          "Uploading Video",
          "Displaying Videos",
          "Add Video Controller",
          "Liking Posts",
          "Commenting & Liking Comments on Posts",
          "Search Screen",
          "Profile Screen"
        ],
        "Zoom Clone": [
          "Demo",
          "Flutter Setup",
          "Login Screen UI",
          "Firebase Setup & Google Sign In",
          "Firebase Setup (iOS)",
          "Firebase Setup (Android)",
          "Persisting User State",
          "Home Screen UI",
          "Setting Up Jitsi Meet (iOS)",
          "Create New Meeting",
          "Join Video Screen UI",
          "Storing User Meetings",
          "Displaying User Meetings",
          "Logging Out",
          "Testing on Physical Android Device & iOS Simulator",
          "Jitsi Meet Error",
          "Pros & Cons"
        ],
        "Twitch Clone": [
          "Demo",
          "Project Layout",
          "Routes",
          "Onboarding Screen UI",
          "Signup & Login Screen UI",
          "Firebase Setup",
          "Firebase iOS Setup",
          "Firebase Android Setup",
          "Signing Up Users",
          "Logging in Users",
          "Persisting Login State",
          "Designing Bottom NavBar",
          "Go Live Screen UI",
          "Picking Image from Gallery",
          "Fixing Memory Leaks & Adding Loaders",
          "Storing Livestream Data in Firebase",
          "Agora Android Setup",
          "Solving Firebase Livestream BUG",
          "Agora iOS Setup",
          "Initialising Agora",
          "Get Agora App ID",
          "Joining Channel",
          "Designing Broadcast Screen",
          "Leaving Channel",
          "Switching Camera",
          "Muting/Unmuting",
          "Realtime Chatting",
          "Installing GO",
          "Creating & Deploying API using GO",
          "Sending HTTP Request to our API",
          "Designing & Displaying Feed Screen",
          "Correcting Join Channel Bug",
          "Firebase & Agora Web Setup",
          "Making The App Responsive",
          "Adding End Stream Button",
          "Start Screensharing Functionality",
          "Stop Screensharing Functionality",
          "Firebase & Agora MacOS Setup",
          "Deploy Web App",
          "Conclusion Part 2"
        ],
        "WhatsApp Clone": [
          "Introduction",
          "Project Setup",
          "Project Runthrough",
          "Flutter Firebase App Connection",
          "Flutter Firebase iOS Setup",
          "Flutter Firebase Android Setup",
          "Landing Screen UI",
          "Login Screen UI",
          "Phone Authentication",
          "Adding Riverpod",
          "Auth Controller",
          "About Riverpod",
          "Resolving iOS App Error",
          "OTP Screen UI",
          "Verifying OTP",
          "User Information Screen UI",
          "Saving User Data To Firestore",
          "Persisting Auth State",
          "Displaying Contacts in User’s Phone",
          "Displaying Name and online/offline status",
          "Modifying Bottom Chat Field UI",
          "Sending Text Message",
          "Displaying Chat Contacts",
          "Displaying Messages",
          "Automatic Scrolling on New Message",
          "Changing Online/Offline Status",
          "Sending Image Message",
          "Displaying Cached Image",
          "Sending Video Message",
          "Sending Emojis",
          "Sharing GIFs",
          "Recording & Sharing Audio in Flutter App",
          "Playing Audio",
          "Replying to Messages",
          "Seen Feature",
          "Uploading Statuses/Stories",
          "Displaying Statuses/Stories",
          "Creating Groups",
          "Displaying Groups",
          "Fetching Group Chats & Chatting in Group",
          "Managing Agora Dashboard & Credentials",
          "Video Calling",
          "Disconnecting Call",
          "Group Calling",
          "Code Refactoring",
          "Note on Firebase Functions",
          "Testing on Physical Device (Android)"
        ],
        "[BONUS] Firebase Authentication": [
          "Introduction",
          "Starter Project Explanation",
          "Connecting to Firebase",
          "Email Password Signup",
          "Email Verification",
          "Phone Sign In",
          "Email Password Login",
          "Facebook Sign In",
          "Anonymous Sign In",
          "State Management",
          "Displaying User Details",
          "Google Sign In",
          "Sign out",
          "Delete Account",
          "Firebase Auth Quiz"
        ]
      },
      "requirements": [
        "Basic Knowledge of Flutter",
        "Experience with Dart Programming Language"
      ],
      "description": "Build 5 Real World Social Media Applications in this tutorial!\nWe will go through Firebase Auth in detail after which work on real world projects like Instagram, TikTok, Zoom, Twitch & WhatsApp! These projects don't just talk about Firebase, projects like Twitch and Zoom even include third party SDK's to give a feel of how, when and why to use Firebase. The aim of this course is to make you familiar with Firebase and have 5 real world projects which you can work on, after this course to turn into a single app.\nThis course will have constant repetition which will ensure your confidence is high, even after completing this course and you don't have to take yet another course. If you have any questions during the course, I'll be more than happy to help you out with it! Keep Learning :)\n\n\nFeatures of the projects we are going to build:\n1. Instagram\nResponsive Instagram UI\nEmail & Password Authentication\nShare Posts with Caption\nDisplay Posts with Caption\nLike & Comment on Posts\nSearch Users\nFollow Users\nDisplay User Posts, Followers & Following\nEVERYTHING REAL TIME\nSign Out\n2. TikTok\nAuthentication with Email & Password\nUploading Videos with Caption\nCompressing Videos\nGenerating Thumbnails Out of Video\nDisplaying Videos with Caption\nLiking on Posts\nCommenting on Posts\nLiking the Comments\nSearching Users\nFollowing Users\nDisplaying Followers, Following, Likes & Posts of User\nTikTok Like UI\n3. Zoom\nGoogle Sign In\nCreate New Meeting\nJoin Meeting\nMute/Unmute Audio\nMute/Unmute Video\nChange Display Name while Joining\nRaise Hand\nStart Screen Sharing\nMute Everyone\nStart Live Stream\nScreen Share\nChat\nSwitch Front/Rear Camera\nPicture in Picture\nEnter Tile View\nDisable Camera\nEnd Call\nSee Your Meeting History\nLog out\n4. Twitch\nEmail & Password Authentication\nScreensharing\nSelecting Thumbnail\nGoing Live\nJoining LiveStream\nSwitching Camera\nMuting/Unmuting\nChatting\nCross Platform\nResponsive UI\nToken Generation using GO (Create Your API)\nDeploy Server\nDeploy Website\n5. WhatsApp\nPhone Number Authentication\n1-1 Chatting with Contacts Only\nGroup Chatting\nText, Image, GIF, Audio(with Recording), Video & Emoji Sharing\nStatus/Stories Visible to Contacts Only and Disappears after 24 hours\nVideo Calling\nOnline/Offline Status\nSeen Message\nReplying to Messages\nAuto Scroll on New Messages\nCaching Images & Video",
      "target_audience": [
        "Beginner Flutter Developers wanting to learn more about backend stuff!"
      ]
    },
    {
      "title": "Introduction to Server Driven UI in iOS, Swift & SwiftUI",
      "url": "https://www.udemy.com/course/introduction-to-server-driven-ui-in-ios-swift-swiftui/",
      "bio": "Learn how server driven UI can enable faster iterations and allowing apps to instantly update on multiple platforms",
      "objectives": [
        "Learn the principles of server driven user interface",
        "Identify the benefits of server driven UI approach",
        "Implement JSON server using Node and Express",
        "Instantly update your app on multiple platforms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Credits",
          "Prerequisites",
          "Exercise Files"
        ],
        "Understanding Server Driven UI": [
          "What is Server Driven UI?",
          "Benefits of Server Driven UI",
          "Understanding the Core Architecture of Server Driven UI"
        ],
        "Pets - Setting Up Server": [
          "What we will be building?",
          "Creating Your First Node/Express Project",
          "Returning JSON Template from the Server",
          "Implementing Webservice"
        ],
        "Pets - UIModels, Components and Displaying Views": [
          "Implementing ScreenModel and ComponentModel",
          "Creating FeaturedImage Component and FeatureImageView",
          "Implementing PetListViewModel",
          "Displaying View on the Screen"
        ],
        "Pets - Adding Components and JSON Decodable Type": [
          "Implementing LocalFile Service to Consume JSON",
          "Understanding the Current Decoding Problem",
          "Implementing JSON Type",
          "Integrating JSON Type with the App",
          "Adding Carousel Component and View"
        ],
        "Pets - Navigation and Actions": [
          "What are Actions?",
          "Implementing Action, ActionType and Route",
          "Implementing Light Weight Navigation Engine",
          "Performing Navigation Using Navigator",
          "Passing Payload Using Navigator to Destination",
          "Passing Pet ID as a Parameter to Pet Detail Screen"
        ],
        "Pets - Displaying Details": [
          "Updating uniqueId to a UUID",
          "Hosting JSON on the Server",
          "Implementing Pet Detail End Point",
          "Displaying Pet Details",
          "Displaying Text Row",
          "Displaying Rating Row"
        ],
        "Pets - Lists": [
          "Updating Server to Support List and Row Types",
          "Implementing List and Row Models",
          "Implementing List and Row Components",
          "Navigating to Pet Details",
          "Ignoring Missing Components"
        ],
        "Conclusion": [
          "Next Steps & Resources",
          "Starter Project for ReactJS Server Driven UI Project",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Familiarity with iOS development and Swift language is recommended",
        "Familiarity with SwiftUI framework is recommended",
        "Understanding of MVVM design pattern is recommended",
        "No server driven UI experience is needed. You will learn everything you need to know",
        "Open mind and ability to find solutions through research",
        "Familiarity with Node/Express and JavaScript is recommended but not required"
      ],
      "description": "What if there is a way to update the user interface of your app instantly, without having to submit a new version?\n\n\nCompanies like Airbnb, Spotify, Flipkart, Swiggy and several others use a technique called Server Driven UI, which allows them to remotely update their user interfaces based on the response received from the server. This allows them to bypass the review process and keep their apps sync on multiple platforms.\n\n\nIn this course, you are going to learn how to get started with building a server driven UI in iOS. You will learn the advantages and disadvantages of the approach and how to architect server driven UI apps. By the end of this course, you will have enough information to start building server driven UI for your applications.\n\n\nLet’s check out the contents of the course:\n\n\nUnderstanding Server Driven UI\nIn this section you will learn the concepts behind server driven UI and how it is different from basic API responses. You will also learn the benefits of using server driven UI. Finally, you will learn about the architecture of server driven UI apps and how it is different from creating default iOS applications.\n\n\nSetting Up Server\nIn this section, you will learn how to set up your own custom server, which will return the JSON responses to the iOS app. You will learn how to implement a basic server using Node and Express. You will also learn about implementing a JSON template, which will be responsible for constructing the user interface for your application.\n\n\nUIModels, Components and Displaying Views\nIn this section, you will learn how to create UI models for your app. The UI models will be responsible for holding the decoded data from the JSON response. You will also learn how to create components for your app, which will be responsible for displaying views on the screen.\n\n\nNavigation and Actions\nIn this section, you will learn how to implement actions for your app. You will mainly learn about the navigation action, which allows the user to navigate to different screens. You will also learn how to create a dynamic navigation engine, which can be controlled from the server.\n\n\nImplementing and Displaying Lists\nIn this section, you will learn how to implement list components using server driven UI. You will learn how to accommodate lists through your JSON template and how to render rows based on the provided data from the server.\n\n\nWho is this course for?\n\n\nDevelopers interested in learning about a new way of building dynamic iOS applications.\nDevelopers who are interested in releasing their apps on multiple platforms instantly.\nDevelopers who want to move to the senior role by learning advanced techniques for app development.\n\n\nI had so much fun in creating this course, I consider this to be one of my best courses. Thank you so much for your continuous support. Hope you enjoy the course.\n\n\nThank you so much for your continuous support. I hope you enjoy the course and when you publish your iOS app, implemented using the principles of server driven UI then contact me with a link to your app. I would be more than happy to download your app.\n\n\nThanks,\nAzam",
      "target_audience": [
        "Beginner iOS developers curious about server driven UI in iOS",
        "Intermediate and advanced developers looking to increase their knowledge about new architecture"
      ]
    },
    {
      "title": "Learn Qt and QML by Creating Cross Platform Apps with Felgo",
      "url": "https://www.udemy.com/course/learn-qt-qml-v-play-and-keoba/",
      "bio": "Cross platform apps built for Windows, Mac, Linux, Embedded Linux, iOS and Android using a single codebase!",
      "objectives": [
        "How to use QML to create desktop and mobile apps in ultra fast time",
        "Learn the Qt framework fundamentals",
        "Make good looking and scalable layouts using QML",
        "Use Felgo to create mobile versions of your app - without any extra code",
        "Understand how to make HTTP API calls and deliver the data to your app",
        "Learn how to leverage events and button clicks in Felgo",
        "Correctly structure apps in QML and QtQuick"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Is this Course For you?",
          "CORRECTION - Link to download Felgo",
          "Installation"
        ],
        "Creating the Project, Understanding File Structure and Running It": [
          "Introduction to Creating a Mobile Project",
          "How to Create a Blank Mobile App using Qt and QML",
          "Understanding Files and Folders",
          "Running the Basic App Locally",
          "How to Run the App on Multiple Devices Simultaneously with Live Code Reload",
          "Summary"
        ],
        "Structuring a Project and Your First Piece of Code": [
          "Introduction",
          "Explaining the Existing Code (Navigation Stack, Pages and Content)",
          "Structuring an App Correctly with an Item Object",
          "Creating the Main Page of the App",
          "Summary"
        ],
        "Understanding QML Layouts, Property Listeners and Button Click Events": [
          "Introduction",
          "Creating a Basic Search Page",
          "Adding a Sensible Layout with Columns and Rows",
          "Adding Input and Text Elements to a QML Page",
          "Events and Listeners to Detect Changes in Input Text",
          "Buttons and Click Events",
          "Summary"
        ],
        "Retrieving Remote Data using Signals and Logic (Equivalent to Events)": [
          "Introduction",
          "Making a Simple HTTP API Request Using HttpRequest",
          "Creating a Client to Store Http Requests and Tidy up Code",
          "Creating Search Client Functions",
          "Communicating Between QML Objects Using Signals",
          "Communicating with Signals - Firing a Signal",
          "Subscribing to a Signal",
          "Creating and Handling Callbacks for Received Data",
          "Summary"
        ],
        "Creating Scrolling List Views": [
          "Introduction",
          "Creating Logic to Parse Received Data",
          "The Data Received Signal",
          "Creating a List View - Making a List Page",
          "Creating a List View - Showing Listings",
          "Creating a List View - Showing a New Page and Passing Data to it",
          "Searching for the Next Page of Listings and Fixing the Loading Icon",
          "Summary"
        ],
        "Implement Favorites using Arrays and Local Storage": [
          "Introduction",
          "Checking for Favorites",
          "Adding and Removing Favorites Using Signals",
          "Showing Existing Favorites",
          "Persisting Favorite Data Across App Launches",
          "Summary"
        ]
      },
      "requirements": [
        "Must have a little knowledge of programming in any language",
        "Must be able to comfortably navigate an IDE"
      ],
      "description": "_________________\nIMPORTANT NOTICE:\nThis is a course for learning the Qt Framework. It was commissioned by Felgo, an official Qt Technology Partner.\n_________________\n\n\nLearn all the basic concepts, tools, and functions that you need to build fully functional cross platform apps using Qt, QML and Felgo.\nFelgo is an extension for Qt that allows you to build fully functional cross platform applications on Android, iOS, Windows, Mac Linux and Embedded Linux using a single code base, with increased efficiency than the plain Qt framework.\nThis course will show you how to create ‘Property Cross’, an application that taps into an API on the web to download available real estates to buy nearby.\nVia this one app, you will learn everything you need to know about creating apps. User interfaces, web API calls, programmatic events and more!\n\nBuild a Strong Foundation in QML and Qt with this Course for Beginners\nLearn how to use QML to create desktop and mobile apps in ultra fast time\nUnderstand how to structure a Qt application correctly\nLearn the Qt Framework\nDiscover how to make asynchronous requests to a server without slowing down your app\nDisplay asynchronously downloaded images in a single line of code\nCreate infinite scrolling lists of real estates\nSave favourite real estates\nLearn about app navigation basics\nCreate fully functional apps using 10 times less code than other frameworks!\nAnd so much more!\n\n\nA Rapid Prototyping Technology Awaits\nLearning the fundamentals of Felgo places a powerful and useful tool at your fingertips. It comes with many tools and features that native mobile developers don’t have immediate access to, including the ability to download asynchronous images without plugins!\nIn fact, Qt and QML are used by over a million developers worldwide. Chances are extremely high that you've used software built in Qt. VLC is but one of the well known examples.\n\n\nContent and Overview\nThis course is suitable for beginner to intermediate programmers (although you should have some experience in any programming language prior to starting).\nThroughout our time together we’ll create ‘Property Cross’, a fully fledged property search app that shows you real estates at a chosen location. What’s more it also allows you to browse based on location of your device as well as saving your favourite real estates!\nAlong the way you’ll learn most of the Qt and QML fundamentals that you need in order to become a fully fledged cross platform developer.\n\n\nHow You’ll Proceed\nStarting with the installation of Felgo (and the free Qt Creator IDE), this course will take you through creating fluid interfaces using the powerful yet simple QML language.\nAfter mastering the basics you’ll learn how to do essentials such as listening to events and responding to button clicks.\nFollowing that we’ll deep dive into how you should correctly structure an application in terms of fetching internet data and relaying signals to the main view. This knowledge will benefit you immensely as it is useful across all software development frameworks - not just Qt and QML.\nYou’ll also learn another fundamental - an infinite scrolling list of data. You’ll learn how to show rows of images, text and more as well as allowing users to click through to a new page and see the details of a chosen property.\nDuring this journey you’ll gain a thorough understanding of how mobile apps are constructed - an extremely useful skill that can be transposed to any other development framework, in any other programming language.\nOn completion you’ll be able to create your own fully fledged cross platform apps ready to publish on any popular platform!\nI look forward to working with you!",
      "target_audience": [
        "Developers new to the Qt Framework",
        "Developers looking to create cross platform apps in a single codebase",
        "Beginners to development with only a few months experience"
      ]
    },
    {
      "title": "Code a Swift iOS To Do List App, UIKit, CoreData, Table View",
      "url": "https://www.udemy.com/course/ios11swift4todolist/",
      "bio": "Learn Widely Used Concepts and Best Practices Used in Modern Day iOS Development to Hone Your Craft and Skill as a Dev",
      "objectives": [
        "you will learn the CoreData framework in Swift 4 and Xcode 9",
        "you will learn the updated UIKit Framework in Swift 4 and Xcode 9",
        "You will learn how to build apps without using storyboards! (Which is a very good skill)",
        "You will learn how to build an app from start to finish",
        "You will learn how to make an app using UILayoutConstraints programmatically, so think of it as storyboards but with only code!",
        "Make iOS Apps.",
        "Be able to code in Swift 4",
        "Make mobile apps",
        "deal with objects",
        "more object oriented programming knowledge",
        "custom UIKit controls",
        "custom UIViews"
      ],
      "course_content": {
        "Source Code": [
          "source code link"
        ],
        "App Setup + The WelcomeController": [
          "Instructor & Course App Overview",
          "Setting Up Our Application in appDelegate.swift without storyboards",
          "Introduction to AutoLayout Constraints Programmatically",
          "Build a Custom Gradient UIView by overriding CALayer as CAGradientLayer",
          "UIColor Extensions + Convenience Initializers",
          "Custom Hex Color Code Initializer",
          "Static UIColor Class Variables + Why I am Teaching You The Way I Am",
          "Creating and Placing the App Title Label on the Welcome Screen",
          "Build a Custom UILabel Subclass",
          "How to Use Custom Fonts in Xcode 9 and Swift 4",
          "Putting the Welcome Message On The Screen",
          "Copyright Label",
          "Build a Custom UIButton Subclass",
          "Button Animations Using CGAffineTransform",
          "Programmatic ViewController Navigation Without Storyboards"
        ],
        "Build The Header, Add Button, and Write Your First Protocol": [
          "Custom Header UIView",
          "Placing our Custom HeaderView in the ListController",
          "Placing Header GDLabels in the GDHeaderView",
          "OptionSet(s) In Swift",
          "Placing the Add Button Using UIlayoutConstraints (auto-layout in code)",
          "How to Use Swift OptionSet(s) to Make our Front-end App Scale with Ease",
          "How to Write a Custom Protocol for our GDHeaderView"
        ],
        "Build a Popup View to Allow Users The Ability to Add ToDos": [
          "Building a PopupView by Subclassing GDGradient.",
          "PopupView Buttons",
          "Placing the Add Button and Giving our Buttons Selectors",
          "Creating a Custom UITextField Subclass and Placing It In Our View",
          "Styling our Custom UITextField Class",
          "Adding Insets to our Custom UITextField",
          "Using NSNotificationCenter to Retrieve Keyboard Height",
          "Animating Views With CGAffineTransform and UIViewAnimations",
          "Implementing the UITextFieldDelegate",
          "Creating a Custom Protocol Delegate for the NewItemPopupView Class",
          "Pass UITextField Text Through a Protocol Method to the ListController",
          "Cancel Functionality and Keyboard TextField Animation Extension"
        ],
        "Custom UITableView with Other Concepts": [
          "Build a Custom UITableView",
          "Using AutoLayout to Place The TableView in the ListController",
          "How to Use UITableViewCells in a UITableView",
          "How to Put Unique Data Within A UITableViewCell",
          "Build a Custom UITableViewCell",
          "Building a \"ToDo\" Data Structure",
          "Using ToDo Data in UITableViewCells",
          "How to add Space Between UITableViewCells",
          "Using A UITextField instead of a UILabel in the GDListCell class",
          "Adding Insets our UITableView",
          "Build a CheckBox Control",
          "How to Toggle the CheckBox Button",
          "How to Use Custom Icons In your Apps",
          "How to Toggle the CheckBox PT 2",
          "Using More than One Section in A UITableView with Titles",
          "Using the Map and ForEach Functions in Swift to Count Cells based on ToDo Status",
          "Filtering Item Data In Sections Correctly",
          "Writing a Protocol for the GDListCell",
          "Updating ToDo ListData"
        ],
        "Header Fixes + Add New Item Popup View": [
          "Status Bar Color and Header Insets",
          "Protocol Refactor",
          "Updating The HeaderView Items Left Label with the Amount of Items Left ToDo.",
          "Animating Views Off and On The Screen.",
          "Setting Corner Radius on Specific Corners",
          "Adding Functionality to the Cancel Button",
          "Bug Fixes",
          "UILayoutConstraint Animations",
          "More Bug Fixes"
        ],
        "Core Data. A Solid Introduction (basic models, entities, fetch queries + more)": [
          "Intro to Core Data and setup.",
          "Inserting New ToDo Entities Into the CoreData View Context",
          "How to Fetch an Array or Collection from CoreData stores.",
          "More on Entities + Brief Refactoring to Utilize Our New ToDo Model.",
          "Deleting Data From CoreData",
          "Core Data Bug Fixes",
          "Core Data WrapUp (for now)"
        ],
        "NSUserDefaults": [
          "Using NSUserDefaults to Determine if the Application has Been Opened Before."
        ]
      },
      "requirements": [
        "Xcode and Swift",
        "Programming experience in JavaScript, and any other language is not required but might help!",
        "No coding experience is required though! I walk you from start to finish!",
        "should probably be alive and breathing, could help."
      ],
      "description": "Learn Swift, Xcode, and the iOS SDK from a unique perspective by developing a more involved todolist app for the Apple App Store. As a developer it is extremely important you learn specific concepts and technologies that are in demand. In my opinion it is equally important to learn from multiple perspectives and not from just one or two specific instructors. That being said, I think my course offers a very unique perspective on development and this course will teach you the following concepts from my perspective as a professional developer: CAGradientLayer, CoreData, UITableViews, Object Oriented Programming Subclassing, UIKit, self defined Protocols, OptionSet(s) and at least a few more concepts that are contained within the bigger ones. For example, in this course you will learn how to build a custom UITableViewCell and that would fall under learning about UITableViews which is why I didn't initially mention it in this description.",
      "target_audience": [
        "Beginners, and professionals who want to learn the latest in Swift 4, Xcode 9, and the iOS SDK",
        "In this course I walk you very carefully yet at a swift speed (no pun intended lol) so beginners and professionals will both have something to grasp",
        "Developers interested in learning Apple's CoreData framework / library",
        "Developers interested in learning Apple's UIKit framework",
        "Developers interested in learning how to use UITableViews, UILayoutConstraints programmatically!, UITextFields, and much more!"
      ]
    },
    {
      "title": "The Ultimate iOS 11 & Swift 4 Course. Learn to Build Apps!",
      "url": "https://www.udemy.com/course/ios11tutorial/",
      "bio": "A Beginner's Guide to Xcode 9, Swift 4.0, ARKit, Core ML, SpriteKit, WatchKit, and more. Design AND code from scratch.",
      "objectives": [
        "Navigate Xcode 9's interface.",
        "Make real apps from scratch.",
        "Code in Apple's programming language, Swift 4.0.",
        "Build apps for the iPhone from start to finish.",
        "Use Photoshop for User Interface (UI) design.",
        "Build games for the iPhone using SpriteKit.",
        "Make the code AND the art for projects from scratch.",
        "Navigate ARKit.",
        "Make interactive Apple Watch apps with WatchKit.",
        "Test your coding skills with coding exercises.",
        "And more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Top 10 Reasons Why This Course is Awesome!",
          "How to Use this Course",
          "How to Get Xcode",
          "Don't Have a Mac Computer?",
          "How to Download Xcode 9",
          "*Beta is free",
          "Updates"
        ],
        "Swift 4 - Language Basics": [
          "Language Basics Topics List"
        ],
        "Swift 4 - Language Basics 01) Variables and Constants": [
          "Topics List and Learning Objectives",
          "Intro to Variables and Constants",
          "Primitive Types",
          "Strings",
          "Nil Values",
          "Tuples",
          "Type Conversions",
          "Assignment Operators",
          "Conditional Operators",
          "Source Code"
        ],
        "Swift 4 - Language Basics 02) Collection Types": [
          "Topics List and Learning Objectives",
          "Introduction to Collection Types",
          "Creating Arrays",
          "Common Array Operations",
          "Multidimensional Arrays",
          "Ranges",
          "Source Code"
        ],
        "Swift 4 - Language Basics 03) Control Flow": [
          "Topics List and Learning Objectives",
          "Intro to If and Else Statements",
          "Else If Statements",
          "Multiple Simultaneous Tests",
          "Intro To Switch Statements",
          "Advanced Switch Statement Techniques",
          "Testing for Nil Values",
          "Intro to While Loops",
          "Intro to for...in Loops",
          "Complex Loops and Loop Control Statements",
          "Source Code"
        ],
        "Swift 4 - Language Basics 04) Functions": [
          "Topics List and Learning Objectives",
          "Intro to Functions",
          "Function Parameters",
          "Return Statements",
          "Parameter Variations",
          "Returning Multiple Values Simultaneously",
          "Source Code"
        ],
        "Swift 4 - Language Basics 05) Classes, Structs and Enums": [
          "Topics List and Learning Objectives",
          "Intro to Classes",
          "A. Properties as fields - Add to Class Implementation",
          "B. Custom Getters and Setters",
          "C. Calculated Properties",
          "D. Variable Scope and Self",
          "E. Lazy and Static Variables",
          "Behaviour as Instance Methods and Class type Methods",
          "Class Instances as Field Variables",
          "A. Inheritance, Subclassing and SuperClassing",
          "B. Overriding Initializers",
          "C. Overriding Properties",
          "D. Overriding Methods",
          "Structs Overview",
          "Enumerations",
          "Comparisons between Classes, Structs and Enums",
          "Source Code"
        ],
        "Introduction to XCode": [
          "00. Intro and Demo",
          "01. General Interface Introduction",
          "02. File System Introduction",
          "03. ViewController Introduction",
          "04. Storyboard File Introduction",
          "05. Connecting Outlets and Actions",
          "06. Running an Application",
          "07. Debugging an Application",
          "Source Code"
        ],
        "*APP Swift 4 - Simple Calculator": [
          "Intro and Demo",
          "Building the UI",
          "Connecting Outlets and Actions",
          "Implementation Planning",
          "Storing Input Values and Choosing Operation",
          "Implementing Calculate and Clear Function",
          "Error Checking and Handling",
          "Beautifying App and Finishing Touches",
          "Source Code"
        ],
        "*APP Swift 4 - RGB to Hex Code Color Converter": [
          "Intro and Demo",
          "Building the UI",
          "Connecting Outlets and Actions",
          "Planning Implementation and Setting Bluerpint",
          "Implementing Conversion Selection",
          "Implementing Hex to RGB Conversion",
          "Implementing RGB to Hex Conversion",
          "Improving App Appearance",
          "Source Code"
        ]
      },
      "requirements": [
        "You must have a Mac computer and Xcode 9.",
        "PC development is not recommended or supported.",
        "Adobe Photoshop, Illustrator, and Blender for some art asset creation."
      ],
      "description": "Want to make apps and learn to code? With The Ultimate iOS 11 Course, you too can design and code practical apps from scratch. ⭐ ⭐ ⭐ ⭐ ⭐\n\nExpert programmers John Bura, Nimish Narang, and Chris Veillette from Mammoth Interactive will teach you everything you need to know to whet your palette in iOS 11. We’re here to show you how to use Xcode to become the app developer.\n\nMake the following:\nSimple Calculator App\nRGB to Hex Code Color Converter App\nTip Calculator App\nAverage Calculator App\nSavings Calculator App\nGames in SpriteKit\nApple Watch App\nAnd more!\nEven if you’ve never coded before, you can take this course. One of the best features is that you can watch the tutorials at any speed you want. This means you can speed up or slow down the video if you want to.\nThis course is project-based, where you follow along with your instructor to build real projects. The best way for you to learn how to make your own app is to follow project-based training content. By taking The Ultimate iOS 11 Course, you learn practical, employable skills immediately. You can put the apps you make in this course in your portfolio!\nWhy Xcode?\nXcode is Apple's FREE software for app development. Xcode is user-friendly and allows you to make complex and creative apps. At the same time, it is accessible for beginners who want to make simple apps. Swift 4.0 is the programming language to learn if you want to make apps for Apple products.\nWhy this course is different.\n\nYour teachers will teach you practical skills using real-world examples. Founder of Mammoth Interactive John Bura has created many games, apps, and training courses. This is an instructor that does not only teach - he produces apps. This means you get the most relevant information on how to code.\nStart from the beginning, or pick and choose your desired topic. Take this course to build your portfolio today.",
      "target_audience": [
        "Absolute beginners who want to learn to code.",
        "Beginners who want to be iOS developers.",
        "Absolute beginners to mobile development who want an introduction to Swift 4 and Xcode 9."
      ]
    },
    {
      "title": "Hacking with Swift 2 - Beginner to Pro - Build 20 Apps",
      "url": "https://www.udemy.com/course/build-5-very-cool-apps-with-swift-from-start-to-finish/",
      "bio": "Learn how to work with Apple's fun new language \"Swift\", and go from a newbie to transforming your ideas into real apps",
      "objectives": [
        "Create your own amazing apps using your new skills combined with your unique creativity",
        "Become completely proficient with Swift and IOS App Development"
      ],
      "course_content": {
        "Getting to know Xcode 7": [
          "Welcome - How to use this course",
          "Part 1 - Getting to Know Xcode 7",
          "Part 2 - The Project Navigator - Adding files to the project",
          "Part 3 - The Navigators Continued",
          "Part 4 - Template, Code Snippet, and Media Libraries",
          "Part 5 - Utilities Pane - The Object Library and Document Outline",
          "Part 6 - Xcode wrap up",
          "Working with controls - Part 1 - Getting to know controls - Creating segues",
          "Working with controls - Part 2 - Adding some code"
        ],
        "The Swift Language - Swift 2.2": [
          "Variables / Constants Part 1",
          "Variables / Constants Part 2 - Data Types - Type Annotation - Type Inference",
          "Operators - Part 1 - Unary, Binary, Ternary, Assignment, and Remainder operators",
          "Operators - Part 2 - Increment, Decrement, Minus Unary, Compound, Nil Coalesing",
          "Operators - Part 3 - Range, and Logical operators",
          "Functions - Part 1 - Declaring / Syntax / Return",
          "Functions - Part 2 - Working with functions",
          "Functions - Part 3 - Working with more functions",
          "Functions - Part 4 - Nested functions",
          "Optionals",
          "Structs",
          "Computed Properties",
          "Extensions",
          "Property Observers",
          "Protocols and Delegation Part 1 - Syntax and declaring - Adding functions",
          "Protocols and Delegation Part 2 - Adding properties - Delegation- Static keyword",
          "enums part 1",
          "enums part 2",
          "Generics part 1",
          "Generics part 2",
          "Type Casting - Part 1 - The \"as\" and \"is\" operators",
          "Type Casting - Part 2 - Using AnyObject and Any",
          "Nested Types",
          "Tuples",
          "Closures Part 1 - Syntax and Optimizations",
          "Closures Part 2 - Trailing Closures",
          "Closures Part 3 - Capturing Values"
        ],
        "Control Flow": [
          "if statement - else if - nested if's",
          "Switch Statement",
          "For-in loops",
          "While loop - repeat while loop"
        ],
        "Collections": [
          "Arrays - Part 1 - Declaring and initialiizing an array",
          "Arrays - Part 2 - Accessing and modifying an array",
          "Arrays - Part 3 - More of accessing and modifying an array",
          "Dictionaries - Part 1",
          "Dictionaries - Part 2",
          "Sets Part 1 - Declaring and initializing them",
          "Sets Part 2 - Accessing and modifying - Set membership functions"
        ],
        "Strings": [
          "Strings Part 1 - Literals, Mutability, Interpolation, Characters",
          "Strings Part 2 - Accessing and modifying strings",
          "Strings Part 3 - More accessing and modifying strings",
          "Strings Part 4 - Even more of accessing and modifying strings"
        ],
        "Classes - Properties - Inits - Subclassing": [
          "Classes - Properties - inits",
          "Subclassing"
        ],
        "Swift 2 - Whats New?": [
          "Print - do try catch - repeat while",
          "The guard statement",
          "Counting Strings - Compiler Warnings - Synthesized Headers - Protocol Extensions"
        ],
        "Debugging": [
          "Part 1 - Using print() for debugging",
          "Part 2 - Assertions",
          "Part 3 - Breakpoints - Conditional Breakpoints",
          "Part 4 - View debugging"
        ],
        "Beginner Apps - 4 easy to build apps for the beginning level": [
          "Beginner Apps Intro",
          "RGB part 1 - User Interface setup - Outlets and Actions",
          "RGB part 2 - Adding labels and logic",
          "RGB Part 3 - Add the reset and animation",
          "Ad Libs Generation - Part 1 - Setting up the UI",
          "Ad Libs Generation - Part 2 - Outlets and actions",
          "Ad Libs Generation - Part 3 - Delegate - IBActions",
          "Crazy Animal Facts - Part 1 - Setting up the UI",
          "Crazy Animal Facts - Part 2 - Animating the labels and button",
          "Crazy Animal Facts - Part 3 - Expanding and shrinking the button",
          "Fun with animating part 1 - Setup",
          "Fun with animating part 2 - Adding a pause and randomize function",
          "Fun with animating part 3 - Xcode 7.3 Updates"
        ],
        "Project 1 - Storm Viewer": [
          "Storm Viewer Intro",
          "Part 1 - Setup",
          "Part 2 - Deleting Sleleton Code",
          "Part 3 - Listing Images with NSFileManager",
          "Part 4 - Introducing Interface Builder",
          "Part 5 - Loading images with UIImage",
          "Part 6 - Final Tweaks - HidesBarsOnTap"
        ]
      },
      "requirements": [
        "You will need a Mac, and Xcode 7 which is a free download from the App Store, and simply a desire to transform your ideas into an amazing app"
      ],
      "description": "This course aims to show you that building IOS Apps with swift is fun and relatively easy. Learn how to create 20 apps using apples new language Swift. Each app will be a bit more complex, but we build it together, so theres no guesswork as to the process and what the code is doing. A lot of work goes into my courses to make the code as easy to understand as possible..i use callout graphics, highlighting, and deep explanations to help guide you along the path of the code, each step of the way.\nSome of what you will be leaning:\nFeaturing apps built by the award winning programmer Paul Hudson of HackingWithSwift dot com\nThe Swift language - we go from variables to creating our own functions and more\nLearn Swift by use of diagrams / highlighting / graphics\nLearning the ins and outs of Xcode 7 and its many attributes\nWorking in storyboards and all it nuances\nHow to use with controls / Outlets and Actions\nHow to use logic for smooth control flow\nUsing segues and passing data, in storyboards, and programmatically\nUsing delegates and protocols\nAdding audio / Animations\nMaster strings in Swift\nWorking with the NSTimer class\nUsing stackView\nThe new safari view controller class\nUsing core image\nUsing core data\nImplement a slide-out controller to use as a settings page or other data\nLearn the best Debugging Techniques\nUsing core spotlight\niAds - Learn how to add advertising to your apps\nWorking with the many swift classes available to us\nMore than 30 hours of video describing the details of building iOS apps\nCreating an iCloud app\nUsing Push Notifications in an app\nSpriteKit / Build a Flappy Bird Clone in under 1 hour\nLearn sketch 3 (fast becoming the industry standard for UI design)\nAutolayout easy and advanced - create constraints using VFL\nLearn how to work with JSON data in swift\nAll videos are recorded in HD for maximum resolution and clarity\nSwift is the new language of the future, And with this course you will get plenty of instruction on how to implement Swift code in unique ways, in an easy to understand step by step format. Everything is explained in detail using graphics, animations, and annotations, so there's no guesswork as to how or why the code works the way it does, it just all makes sense, and is easy to implement, and before you know it you will have built yourself a wonderful working app that you can submit to the app store.\nThis course assumes you have no programming experience, so its perfect for the beginner. Its also a nice fit for the intermediate and experienced coder as the course covers advanced techniques as well...like creating autolayout constraints in code using VFL.\nBy adding your own creativity and data, you will be transformed into an Apple Developer in a very short time.\nHappy Coding :-)",
      "target_audience": [
        "This course is for those who are new to IOS developing and have a burning desire to get their own creative ideas translated into an app ready for the app store, and for the intermediate and advanced developer as well",
        "This is the perfect course if your coming from another language like Objective C or any other language, and you'll see how easy it is to transition to swift."
      ]
    },
    {
      "title": "Dagger2 Dependency Injection for Android Developers",
      "url": "https://www.udemy.com/course/advanceddagger2/",
      "bio": "Learn the basic and advanced feature of Dependency Injection with Dagger2, and update your Android development skills",
      "objectives": [
        "Dagger2",
        "Dependency injection",
        "Understand the architectural importance of DI",
        "Understand the DI pattern",
        "Learn how to use Dagger2 in an application",
        "Build an example project using DI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media"
        ],
        "Dependency injection and Dagger2": [
          "Section overview",
          "What is Dependency Injection",
          "Java annotations",
          "Dagger history and advantages"
        ],
        "Component and Injection": [
          "Section intro",
          "Android Studio",
          "Create project and setup dagger2",
          "Constructor injection and component",
          "Field injection",
          "Method injection"
        ],
        "Modules": [
          "Section overview",
          "Module and provides annotation",
          "Binds annotation",
          "Inject values at runtime",
          "Code refactor"
        ],
        "Component builder": [
          "Section overview",
          "Component builder and bind instance",
          "Named annotation",
          "Dagger graph and generated code",
          "Singleton"
        ],
        "Custom component": [
          "Section overview",
          "Component scope",
          "Custom scope",
          "Subcomponent",
          "Subcomponent builder",
          "Component factory"
        ],
        "Practice app": [
          "Section overview",
          "Starter code and explanation",
          "Challenge: Constructor and field injection",
          "Constructor and field injection",
          "Challenge: Modules",
          "Modules",
          "Challenge: Scope",
          "Scope"
        ],
        "Conclusions": [
          "Conclusions",
          "More resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Basic Android knowledge",
        "Android development"
      ],
      "description": "Dependency Injection is now an indispensable component of Android development. All well built, large projects use it to make development easier and more practical.\nDagger2 is the most widely used framework for DI in Android.\nThis course will\ntake you from a complete beginner in the technology\nexplain in detail the theoretical aspects of Dagger 2 injection\nexhaustively go through all the components that make Dagger2 such a successful library\nimplement it in a practical application, to show you a real world scenario\nAfter this course you will have the knowledge and experience to use Dagger2 in all your app development projects, and will allow your apps to grow and expand seamlessly.\nWe will learn about:\nDagger history and advantages\nComponent\nModule\nAnnotations\nConstructor injection\nField injection\nMethod injection\nSingleton pattern\nCustom components\nSubcomponents\nComponent factory\nPractical work\nWe will build everything in Kotlin.\nWe cover a lot of ground in this course, and we will implement the concepts practically so that you get not only theoretical knowledge but practical experience as well.\nSign up today, and let's learn how to use Dagger2 to build a modern Android Application.",
      "target_audience": [
        "beginner Android developers",
        "intermediate Android developers"
      ]
    },
    {
      "title": "Android App Development Master Course with Java | Android",
      "url": "https://www.udemy.com/course/full-android-11-masterclass-course-with-java-53-hours/",
      "bio": "Android Java | Learn Android App Development java with Android Studio & Java to master your android development skills",
      "objectives": [
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My Android development course.",
        "What is Android Development?Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devi",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "This is the most comprehensive Android course. Learn Android app development with practices and build your android development skills.",
        "You can enroll this course if you want to develop advanced Android Applications using web integrated, online database.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Proficiency in Java 11",
        "Proficiency in Eclipse",
        "Obtain Core Java skills",
        "Essential Java basics",
        "What Java is and how it works",
        "Programming fundamentals with Java",
        "Java Development Kit - JDK",
        "Java Runtime Environment – JRE",
        "Java Virtual Machine - JVM",
        "All concepts of Object-Oriented Programming",
        "How to use ‘static’ keyword and ‘nested and inner’ classes",
        "Super Classes and Sub Classes",
        "Wrapper Classes",
        "Throw vs Throws",
        "Exceptions",
        "Enum Types and more",
        "Swing",
        "Android",
        "Learn the most used operating system on the planet",
        "Learn the new version of Android. Here it is: Android 11 (Android R)",
        "Learn Publishing Android App on Google Play",
        "Start from scratch and become a Professional Android App Developer",
        "In this course, we will build 14 different real Android Apps from scratch together",
        "Android applications' levels in this course are from easy to difficult",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "You will reinforce your existing Android information by applying",
        "Using SQLite database, you will understand how to work with external databases",
        "You will be able to develop Android applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "With Firebase, you will be able to develop real-time applications",
        "You will learn how to make a messaging app using Firebase",
        "You will be able to develop user-friendly interfaces using Material Design principles and components",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "You will learn to develop games using Java Programming Language and Android Studio",
        "You will learn to develop applications by getting real-time data from the Internet",
        "You will have 14 different applications that you will publish on Google Play",
        "android app development",
        "android development",
        "android studio",
        "Learn the key concepts of the Git",
        "Learn the entire Git workflow",
        "Learn create branches, resolve conflicts, undoing things etc.",
        "Create and fork repositories on GitHub and push changes back after locally",
        "Learn how to collaborate a GitHub project",
        "java",
        "mobile app development",
        "mobile development",
        "Android app",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development",
        "java programming",
        "selenium",
        "selenium java",
        "java projects",
        "Android 11"
      ],
      "course_content": {
        "Introduction to Android App Development Master Course with Java | Android": [
          "Getting Started With Java? ( JDK, JRE and JVM )",
          "JAVA and ANDROID Project Files and All Course Documents",
          "FAQ About android app development",
          "Quiz"
        ],
        "Android java Environment Setup": [
          "Installing Java on Windows",
          "Installing Java on Linux",
          "Installing Java on Mac"
        ],
        "Development Environment": [
          "What is IDE?",
          "Download and Run Eclipse",
          "First Java Programming - Hello World",
          "Compiling and Running Applications",
          "Closer Look at the First Java Program",
          "Quiz"
        ],
        "Basics of Java Syntax": [
          "Closer Look at the Java",
          "What Are Variables?",
          "Basic Output in java",
          "Basic Input",
          "Comments in Java",
          "Data Types",
          "Hexadecimal Octal and Binary Data Types",
          "Type Conversion & Type Casting",
          "Stack & Heap",
          "Arrays",
          "Quiz",
          "Input & Output"
        ],
        "Operators in Java Programming": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Unary Operators",
          "Equality and Relational Operators",
          "Conditional Operators",
          "Bitwise and Bitshift Operators",
          "Char Data Type",
          "Operator Precedence",
          "Expressions, Statements and Blocks",
          "Quiz"
        ],
        "Arrays": [
          "Introduction to Arrays",
          "Sorting Arrays",
          "Searching Arrays",
          "Multi-dimensional Arrays",
          "Quiz"
        ],
        "Control Flow Statements": [
          "If, If-Else Statement",
          "If-Else - If Ladder Statement, Nested If Statement",
          "Switch-Case Statement",
          "Project 1: Calculator",
          "For Loops",
          "For-Each Loop",
          "While Loop",
          "Infinite Loop",
          "Do - While Loop",
          "Break Keyword",
          "Continue Keyword",
          "Return Keyword",
          "Labeled Loops",
          "Project 2: Fibonacci Series",
          "Quiz"
        ],
        "Methods ( Functions )": [
          "What is Method?",
          "Method Calling",
          "Types of Methods & Method Return Types",
          "Java Var-Args",
          "Method Overloading",
          "Project 3: Find Exponential Number",
          "Quiz",
          "Creating Method in Java"
        ],
        "Java Object Oriented Concept": [
          "Object & Class",
          "Stack & Heap",
          "Access Modifiers",
          "Naming Conventions",
          "Constructors",
          "Packages",
          "“Static” Keyword",
          "Static import",
          "Nested & Inner Classes",
          "Local inner classes",
          "Quiz",
          "Decleration fileds"
        ],
        "Object Oriented Programming": [
          "Section Overview",
          "Inheritance",
          "Sealed Class",
          "Method Overriding",
          "“Super” and “This” Keywords",
          "“Final” Keyword",
          "Abstract Classes",
          "Interfaces",
          "Polymorphism",
          "Encapsulation",
          "Anonymous ClassAnonymous Class",
          "Quiz"
        ]
      },
      "requirements": [
        "We prefered Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems. We also provided specific videos on installations for each platform",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "No prior android knowledge is required",
        "No java coding knowledge required",
        "Watching the Android course videos completely, to the end and in order.",
        "Determination to learn Android and patience",
        "Desire to learn Java and Android App Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "Desire to learn Android Application Development"
      ],
      "description": "Hi there,\nWelcome to the \"Android App Development Master Course with Java | Android\" course.\nAndroid Java | Learn Android App Development java with Android Studio & Java to master your android development skills\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My Android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\n\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nOak Academy’s top-rated Java instructors specialize in a wide array of Java programming practices. Whether you need a basic introduction to Java and website building using Selenium WebDriver or are continuing your Android app developer education, Oak Academy has you covered.\n\nThis is the most comprehensive Android course. Learn Android app development with practice and build your android development skills.\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nChances are, you’ve heard of Android many times, and Do u want to the android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or denies permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\n\nAndroid is the most used operating system on the planet. In fact, it’s almost omnipresent in the mobile ecosystem. With millions of Android devices in use, and an incredible 500,000+ new Android devices activated daily, the popularity of Android applications is increasing exponentially - and with it, the demand for Android mobile application developers is soaring.\n\nIf you're interested in developing new and innovative applications for the world’s mobile platform, this course is a perfect match for you.\nThis \"Android App Development 11 Master Course with Java | Android\" course will take you from beginner to advance level.\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course. In this course, you will learn Android app development step-by-step. While doing kind of show and tell in our lectures we are also explaining whys. During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 14 major apps.\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\nIn this course you will learn;\n● Android Environment Setup - Download, install and configure the necessary software\n● Creating a New Project\n● Android Studio\n● Android Components\n● Components and Life Cycles\n● Publishing Your App on Google Play and more\n● You will reinforce your existing android information by applying.\n● You will learn to develop games using Android Studio\n● You will learn to develop applications by getting real-time data from the Internet.\n● Using SQLite database, you will understand how to work with external databases\n● You will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).\n● You will learn how to make a messaging app using Firebase.\n● With Firebase, you will be able to develop real-time applications\n● You will be able to develop user-friendly interfaces using Material Design principles and components.\n● You will be able to develop modern Android apps.\nAt the end of this course, you have the following apps in the Google Play Store:\nTo-Do List\nMath Game\nCalculator\nNumber Guessing Game\nMy Information Book\nNote Take App\nPhoto Album\nQuiz Game\nChat App\nWeather App\nFlag Quiz\nMP3 Player\nBalloon Burst Game\nHelp the Innocent Bird\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increases its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nThis course will take you from a beginner to a more experienced level.\nWe will take you from beginner to advance level. You will learn step-by-step with hands-on demonstrations.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nYou'll also get:\n● Lifetime Access to The Course\n● Fast & Friendly Support in the Q&A section\n● Udemy Certificate of Completion Ready for Download\n\n\nDive in now \"Android App Development Master Course with Java | Android\" course.\nAndroid Java | Learn Android App Development java with Android Studio & Java to master your android development skills\nWe offer full support, answering any questions.",
      "target_audience": [
        "Beginners with no previous coding of Android App Development experience",
        "Anyone who wants to learn important subjects of Java like Strings, Exceptions, Swing and Enum Types and etc.",
        "Anyone who wants to create desktop applications, web applications, enterprise applications, mobile applications, computer games with Java",
        "Anyone who are planning job transformation and want to become Java developer",
        "Anyone who wants to become a computer programmer like Java",
        "Those who want to develop an Android mobile application",
        "Who wants to improve their existing android knowledge",
        "Those who want to develop applications using the Java programming language",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Firebase Real-Time Database, Architectural Components (View Model, Live Data, Room) and SQLite",
        "Those who are curious about the Android Mobile game World",
        "Those who want to improve their application development skills using Android studio and java programming language",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Udemy’s top-rated Java instructors specialize in a wide array of Java programming practices.",
        "Whether you need a basic introduction to Java and website building using Selenium WebDriver, or are continuing your Android app developer education, Udemy has you covered."
      ]
    },
    {
      "title": "How to make an E-commerce Application with android",
      "url": "https://www.udemy.com/course/how-to-make-an-e-commerce-application-with-android/",
      "bio": "Build your future application with us",
      "objectives": [
        "Developing high quality app",
        "android studio",
        "firebase",
        "payment integration (Razor Pay, Stripe and PayStack)",
        "pagination and real time database",
        "java and xml"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Android Basic Test"
        ],
        "Second Module": [
          "Splash Screen",
          "MainScreen",
          "Login Screen",
          "SignUp Screen",
          "SignUp Funtion",
          "Login Funtion",
          "Quiz Time"
        ],
        "Third Module": [
          "Adding Category layout 1",
          "Adding Fragment",
          "Adding Category layout 2",
          "Adding Category layout 3",
          "Adding Feature layout 1",
          "Adding Feature layout 2",
          "Quick review"
        ],
        "Forth Module": [
          "Payment UI 1",
          "Payment UI 2",
          "Payment java 1",
          "Payment java 2",
          "Toolbar Design",
          "Toolbar Logout",
          "all Item 1",
          "Android Recap",
          "Quiz 5"
        ],
        "Fifth Module": [
          "All Item 2",
          "Category item",
          "All Item",
          "Search Item 1",
          "Search Item 2",
          "Search Item 3",
          "Quiz 6"
        ],
        "Section 7": [
          "Order 1",
          "Order 2",
          "Quiz 7"
        ],
        "Section 8": [
          "Stripe Payment Server Code",
          "Stripe Payment Java 1",
          "Stripe Payment Java 2",
          "Stripe Payment Deploy server code",
          "Finishing Payment",
          "Quiz 8"
        ],
        "Bolt E-commerce Cart Features": [
          "How to add cart item bolt part 1",
          "How to add cart item bolt part 2",
          "How to add cart item bolt part 3",
          "How to add cart item bolt part 4",
          "How to add cart item bolt part 5",
          "How to add cart item bolt part 6",
          "How to add cart item bolt part 7",
          "How to add cart item bolt part 8"
        ],
        "Paystack Payment ateway for african country": [
          "Paystack payment gateway part 1",
          "Paystak Payment android integration part 2",
          "Paystak Payment android integration part 3"
        ]
      },
      "requirements": [
        "Understand basic java concept",
        "Little knowledge about firebase"
      ],
      "description": "In this course. Unlike other course,Instead of building basic app such as making hello world app, calculator app and other app which I won't call it app. We will see how to make an real life android application. just like chatting app like messenger,blog app like Instagram and e-commerce app like amazon. I promise you after taking this course you will be able to make your own app without any other course.\nNote:We won't cover every feature of app as it will consume lot of  time.But we will try to implement most of the feature.",
      "target_audience": [
        "beginner java programmer",
        "basic programming concept",
        "curious about application development",
        "making money with android application"
      ]
    },
    {
      "title": "Android Multithreading Masterclass",
      "url": "https://www.udemy.com/course/android-multithreading/",
      "bio": "Master multithreading in Android: from a single thread to Thread Pools, RxJava and Kotlin Coroutines",
      "objectives": [
        "Write multithreaded code of any complexity in your Android apps",
        "Learn the difference between the UI and background threads",
        "Understand advanced concepts like Synchronization, Locks, Volatility and Happens-Before",
        "Analyze and reason about the thread-safety of your code",
        "Manage hundreds of inter-dependent threads",
        "Prevent memory leaks",
        "Compare popular concurrency frameworks for Android: AsyncTask, RxJava, Coroutines"
      ],
      "course_content": {
        "Introduction": [
          "Java and Kotlin",
          "Tutorial Application Overview and Important Info"
        ],
        "Concurrency and Multithreading Fundamentals": [
          "Motivation for Hardware Intuition",
          "CPU Operation Basics",
          "Single-Tasking System",
          "Cooperative Multitasking System",
          "Preemptive Multitasking System",
          "Multiprocessing System",
          "Android Processes and Threads"
        ],
        "Thread Class, Garbage Collector, Memory Leaks": [
          "java.lang.Thread Class",
          "Exercise 1",
          "Garbage Collector in Android",
          "Memory Leaks in Android",
          "Threads Termination",
          "Exercise 2",
          "Thread Class, Garbage Collector, Memory Leaks Summary"
        ],
        "UI Thread in Android Applications": [
          "UI Thread vs Background Thread in Android",
          "Demonstration of UI Thread",
          "User Interface Responsiveness",
          "Protection of User Interface from Background Threads",
          "Execution of Code on UI Thread",
          "Handler and Looper Intuition",
          "Exercise 3",
          "UI Thread in Android Applications Summary"
        ],
        "Multithreading Challenges": [
          "Introduction To Multithreading Challenges",
          "Visibility",
          "Atomicity",
          "Volatile Variables",
          "Concurrency Bug Fix, or When Volatility Isn't Sufficient",
          "Atomic Classes",
          "Threads Synchronization",
          "Immutability",
          "Happens Before",
          "Happens Before Demonstration",
          "Exercise 4",
          "Exercise 4 Solution",
          "Amendment to Exercise 4 Solution",
          "Multithreading Challenges Summary"
        ],
        "Paused (Blocked) Threads": [
          "Pausing Threads",
          "Thread Sleep",
          "Thread Wait",
          "Thread Join",
          "Amendment To Thread Join",
          "Exercise 5",
          "Solution Exercise 5",
          "Paused (Blocked) Threads Summary"
        ],
        "Clean Design of Multithreaded Code": [
          "Importance of Clean Design",
          "Refactoring to Use Case and Observer",
          "Java 8 Lambdas",
          "Exercise 6",
          "Clean Design of Multithreaded Code Summary"
        ],
        "Thread Pool": [
          "Simple Cached Thread Pool",
          "Thread Pool Issues",
          "Custom Configuration Of ThreadPoolExecutor",
          "Interplay Between Core Threads and Keep Alive Time",
          "Misconfiguration of ThreadPoolExecutor in AsyncTask",
          "Providing Multithreading Classes Using Dependency Injection",
          "Exercise 7",
          "Thread Pool Summary"
        ],
        "AsyncTask": [
          "Why You Need to Know AsyncTask",
          "AsyncTask Demonstration and Highlight of Issues",
          "AsyncTask Summary"
        ],
        "ThreadPoster": [
          "ThreadPoster Demonstration",
          "Exercise 8",
          "ThreadPoster Summary"
        ]
      },
      "requirements": [
        "Basic experience with Android development"
      ],
      "description": "Multithreading is an essential topic in Android development because, to write snappy and reliable Android applications, you must use more than one thread. Unfortunately, multithreading is also a very complex technique that introduces unique challenges. Incorrect multithreaded code manifests itself as unresponsive user interfaces, freezes, memory leaks, crashes and other bugs, all of which can be very challenging to find and fix.\nIn this course, you'll dive into the fundamentals of multithreading and learn to write correct and performant multithreaded code of any complexity in your Android applications!\nTopics covered in this course:\n\n\nWhat  a thread is\n\nWhy multithreading is uniquely challenging\n\nKeep the user interface responsive\n\nMake your multithreaded code thread-safe (i.e. correct and reliable)\n\nAnalyze the performance of multithreaded code\n\nManage up to hundreds(!) of concurrent threads\n\nCompare several multithreading frameworks for Android, including AsyncTask, RxJava and Kotlin Coroutines\nMore...\n\nYou'll practice everything you'll learn here by solving a series of carefully designed, hands-on exercises. So, after completing this course, you'll have extensive hands-on experience with multithreaded code.\nWe'll review several popular concurrency frameworks and see how they accommodate the same complex multithreaded feature. This will allow you to grasp the full landscape of multithreading in Android ecosystem. This will allow you to choose the framework you like the best to use in your Android projects!\nSo, if you want to become an expert in Android multithreading, this course is perfect for you!",
      "target_audience": [
        "Android developers"
      ]
    },
    {
      "title": "Introduction to Android Development for beginners",
      "url": "https://www.udemy.com/course/introduction-to-android-development-for-beginners/",
      "bio": "Create an Android App step by step from scratch",
      "objectives": [
        "Download and Install Android Studio",
        "Create new Android projects",
        "Set constraint layouts",
        "Add images to android project",
        "Communicate with toast",
        "Create virtual devices",
        "Create a one screen android app",
        "Connect XML widgets to code",
        "Add game logic with conditional statements and operators",
        "Deploy your app to a physical device",
        "Create an icon for your app"
      ],
      "course_content": {
        "Introduction and Android Development Setup": [
          "Introduction",
          "What is an Android App",
          "What is Android Studio",
          "Android Studio Installation Requirements",
          "Downloading and Installing Android on Windows",
          "Installing Android on Macs",
          "Creating a test android app part 1",
          "Creating a test android app part 2",
          "Creating a test android app part 3"
        ],
        "Exploring Android Studio": [
          "Android Project Structure",
          "Opening and Closing Android Projects",
          "Component Tree",
          "User Interface",
          "Gradle build system",
          "The Palette",
          "Constraint Layout",
          "Modifying our test app",
          "Running your app on multiple devices"
        ],
        "Project: Creating a Dice Rolling App": [
          "What we will create",
          "Creating a new android project",
          "Exploring key files",
          "Creating a variable to hold the score",
          "Testing what we've done so far",
          "Modifying the textview widget",
          "Adding a button widget",
          "Adding some Java Code",
          "Creating a random number generator",
          "Creating a single dice",
          "Creating three dice with an ArrayList",
          "Adding dice images Part 1",
          "Adding dice image part 2",
          "Accessing Image Views in Java Code",
          "Making images dynamic part 1",
          "Making dice images dynamic - Part 2",
          "Adding Scoring display",
          "Adding scoring logic",
          "Using material design button",
          "Chaining dice image part 1",
          "Chaining dice image part 2",
          "Adding some style",
          "Adding an Icon",
          "Deploying your app on a physical device."
        ],
        "Very basic introduction to XML": [
          "What is XML",
          "Text Editors",
          "XML Syntax",
          "XML Attributes",
          "XML Naming",
          "XML Document Structure",
          "XML Tags",
          "XML Namespace",
          "XML Elements"
        ],
        "Java: A basic introduction": [
          "What is Java",
          "Installing JDK and NetBeans Bundle",
          "Your first java program",
          "Basic structure of a java program",
          "What is a java package",
          "Primitive Data Types",
          "Basic Operators",
          "Variables",
          "Arrays",
          "What is Class",
          "Running a java program outside IDE"
        ],
        "Java Project: Creating a basic calculator": [
          "Creating the project and adding a form",
          "Adding a textbox and button",
          "Changing form properties",
          "Java form events",
          "Coding the plus button",
          "Coding the equal and clear button",
          "Coding the maths operators",
          "Building and deploying your project",
          "Thank You"
        ]
      },
      "requirements": [
        "A basic understanding of XML",
        "A basic understanding of Java",
        "Basic programming concepts"
      ],
      "description": "Android powers the majority of smartphones on the planet and a growing number of devices, from Android Wear on your wrist to Android Auto for your car.\nThis course is designed to teach anyone how to make a new Android app from scratch.\nLearn all the basics of the platform and all the skills an Android app developer needs\nto be successful. Discover the tools and technologies that you will use when you create\nApps for Android, including Java, XML, and the Android SDK.\nIn this course we will be using the latest version of Android Studio which at the time of publishing this course is version 2.3.3 also referred to as Android O.  Android tool is  the official  integrated development environment that you will need to create android apps.\nMaking apps for Android is a lot of fun. The project we are going to work on\nis a simple game that will review the basics of programming\nas well as the tools and technologies you'll use to build Android apps.\nTopics include:\nInstalling Android Studio\nExploring Android Studio user interface\nWorking with constraint layouts\nCommunicating with toasts\nCoding in Java and XML\nGetting a head start with starter templates\nWorking with emulators\nCreating a project, variable, and toast\nConnecting XML widgets to code\nAdding images\nAdding game logic with conditional statements and operators\nChanging the data or design",
      "target_audience": [
        "Absolute beginners to Android Development",
        "Absolute beginners to programming",
        "Anyone who wants to learn the basics of android development"
      ]
    },
    {
      "title": "Unit Testing Swift Mobile App",
      "url": "https://www.udemy.com/course/unit-testing-ios-mobile-app/",
      "bio": "Apply Test-Driven Development(TDD) process to iOS mobile app development in Swift",
      "objectives": [
        "Unit Test iOS Mobile App",
        "XCTest Framework",
        "Create, Run and Debug Unit Tests",
        "Mock Dependencies",
        "Use Dependency Injection",
        "UI Testing"
      ],
      "course_content": {
        "Introduction": [
          "Source Code",
          "Introduction"
        ],
        "Basics of Unit Testing in Xcode": [
          "Introduction",
          "Testing Pyramid",
          "The F.I.R.S.T Principle",
          "Test-Driven Development Lifecycle",
          "Enable Unit Tests in Xcode Project",
          "The Default Unit Test Case Class Explained",
          "The addTeardownBlock()",
          "Creating a New Test Case Class",
          "Ways to Run Unit Test in Xcode",
          "The Default Order of Unit Tests",
          "Unit Test Naming Requirements",
          "Ways to Disable or Skip Unit Test",
          "Viewing Test Results",
          "Code Coverage",
          "100% Code Coverage",
          "Test Method Code Structure. Arrange, Act, Assert.",
          "Assertions",
          "Enabling the Failure Debugger Breakpoint",
          "Parallel Distributed Testing on Multiple Simulator Clones"
        ],
        "TDD. Implementing Model Validator": [
          "Introduction",
          "Test That User First Name is Valid",
          "Test for a very short First Name",
          "Test for a very long First Name",
          "Challenge: Apply TDD to Implement Validation of Last Name and Email Address",
          "Test if user passwords match",
          "Test if user passwords do not match"
        ],
        "Test Code in Isolation": [
          "Introduction",
          "Dependency Injection",
          "Use of Protocols",
          "Test Toubles - Fake, Mock, Stub, Dummy"
        ],
        "TDD. Implementing Network Service Class.": [
          "Introduction",
          "Create Initial SignupWebServiceTests Unit Test class",
          "Create Initial SignupWebService Class",
          "Implementing SignupFormRequestModel",
          "Adding CompletionHandler to Signup Method Signature",
          "Implementing the Initial SignupResponseModel",
          "Implementing the Initial SignupErrors Enum",
          "Organize Project Folders",
          "Assert that the Response Status is Equal to \"ok\"",
          "Adding an Expectation and an Asynchronous Wait Method",
          "Inject URL String",
          "Prepare URL",
          "Prepare URL Request Object",
          "Create DataTask",
          "Inject URLSession",
          "Return Response Model",
          "Trying how it works with Real HTTP Request",
          "Mock URLProtocol",
          "Make URLSession use MockURLProtocol",
          "Handle Unknown JSON Response Model",
          "When Empty URL Provided Return a Specific Error Message",
          "Refactor SignupErrors Enum",
          "Test URL Request Failure",
          "Check Code Coverage"
        ],
        "TDD. Implementing Presenter Class in MVP Application": [
          "Introduction",
          "Create Presenter Unit Test Class and Test Method",
          "Create Signup Form Model Struct",
          "Create SignupPresenter class and the processUserSignup() method",
          "Create Initial MockSignupModelValidator class",
          "Create Validator Protocol",
          "Inject Validator Mock and validate each property",
          "Refactor",
          "Unit Test to verify the signup() was called",
          "Create SignupWebService Mock Class",
          "Signup Web Service Protocol",
          "Inject Signup Web Service Mock in to Presenter",
          "Unit Test to assert that Presenter calls a method on View Delagate",
          "Create View Delegate Protocol and MockSignupViewDelegate",
          "Inject View Delegate into Presenter",
          "Counting number of times a method was called",
          "Verify that successfulSignup() called one time only",
          "Refactor",
          "Coding Challenge",
          "Assert that Presenter calls a Error Handler on View Delagate",
          "Review Code Coverage of Presenter Class"
        ],
        "Unit Testing View Controller": [
          "Introduction",
          "Create a New Test Class and a Test Method",
          "Test UITextFields are initially empty",
          "Test UITextField has a referencing outlet",
          "Test UIButton has @IBAction assigned to it",
          "Test UIButton Action invokes code in Presenter",
          "Create MockSignupPresenter class",
          "Inject MockSignupPresenter into View Controller"
        ],
        "Testing Old or Legacy Code": [
          "Introduction",
          "Refactor Massive View Controllers",
          "Use Protocols and Dependency Injection",
          "Adding code to existing methods",
          "Break large functions into smaller ones",
          "Wrapping existing classes. Decorator pattern."
        ],
        "Examples: Ways to Load UIViewController in a Unit Test": [
          "Loading UIViewController that uses a Storyboard",
          "Loading UIViewController that uses XIB",
          "UIViewController that creates Views programmatically"
        ],
        "Examples: Testing methods that throw Error": [
          "XCTAssertThrowsError example",
          "XCTAssertNoThrow example",
          "An example of Do Try and Catch instead of XCTAssertThrowsError",
          "An example of Do Try and Catch instead of XCTAssertNoThrow"
        ]
      },
      "requirements": [
        "Knowledge of Swift",
        "Mac OS and Xcode"
      ],
      "description": "Unit Testing is a must-have skill and this video course is about Unit Testing Swift code.\nIf you take this video course, you will learn how to follow a Test Driven Development process to implement a feature for an iOS mobile app built with Swift.\nThis video course starts with Unit Test basics and continues with a very practical set of lessons that demonstrates how to follow a Test-Driven process to implement the User Signup feature in the Model View Presenter mobile app.\nBy the end of this video course, you will have a very clear understanding of how to write Unit Tests and UI Tests for your Swift mobile application, and you will be able to test even very complex Swift code.\nIf you are a freelance developer you might postpone learning how to unit test iOS app for some time. But if you are planning to join a bigger team, then unit testing is a must-have skill for you to be able to work on important app features.\nHave a look through the curriculum of this course to see what it covers. Watch a few sample video lessons. And if you have questions, I am always here to help you.",
      "target_audience": [
        "Beginner Swift developers with no experience with Unit Testing"
      ]
    },
    {
      "title": "Flutter ios&Android App With Firebase Backend (Project Base)",
      "url": "https://www.udemy.com/course/flutter-iosandroid-app-with-firebase-backend-project-base/",
      "bio": "Build Complete ios & Android app With Flutter and Firebase Cloud Firestore-You Will Learn Flutter Material design",
      "objectives": [
        "You Will Learn ios and Android App Development",
        "You Will Learn How to Develop Real World App Using Flutter",
        "You Will Learn Firebase Cloud Firestore",
        "You Will Learn Flutter Material Design",
        "After Complete this course you will have a complete ios and android app using Flutter and Firestore Backend",
        "You Will Learn How to Implement Navigation Drawer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "What you will make by the end of this course": [
          "Project OverView"
        ],
        "Create Project and Appbar Design": [
          "Create Project and Appbar Design Part-1"
        ],
        "Navigation Drawer Design": [
          "Navigation Drawer Design Part-2"
        ],
        "Connect Firebase and Implement Firestore Functionality": [
          "Connect Firebase and Implement Firestore Functionality Part-3"
        ],
        "Retrieve data to horizontal ListView Part-4": [
          "Retrieve data to horizontal ListView Part-4"
        ],
        "Retrieve data to Vertical ListView Part-5": [
          "Retrieve data to Vertical ListView Part-5"
        ],
        "Create Detail Page Part-6": [
          "Create Detail Page Part-6"
        ],
        "Page Routing Part-7": [
          "Page routing Part-7"
        ],
        "Set Data to Details Page Part-8": [
          "Set Data to Details Page Part-8"
        ]
      },
      "requirements": [
        "A Windows PC, Mac or Linux Computer",
        "Android Studio or Any other IDE"
      ],
      "description": "Welcome to this (Flutter ios&Android App With Firebase Backend (Project Base))App Development Course. This Flutter Course Students Will Learn How to complete Real World ios and Android App Using Cloud Firestore.\nWhen you will develop this Flutter App. Here are Some Lists That You Are Going To Learn When you will Complete This Course\n\n\nFlutter Navigation Drawer\nFlutter AppBar\nFlutter Material Design\nFlutter Card View\nFlutter Widget\nFlutter Row and Column\nFlutter ListView Builder\nYou Will Learn Firebase Cloud Firestore\nios and Android App Development  Using Flutter\nYou, Will, Build Real World Flutter Application.\nYou Will Learn Flutter Horizontal Listview\nYou Will Learn Flutter Vertical ListView\n\n\nSign Up Today And You Will Learn:\nHow To Become a Flutter Developer\nHow To Develop A Complete ios and Android App\nHow To Work With Cloud Firestore\nHow To Work With Firestore StreamSubscription\nHow To Work With Cloud Firestore Advanced Query\nHow To Work With Firestore Collections\nHere is Some Feedback about my courses from my Students:\n\n\n\"I wanted an app development course that would show what is really important and that is what I got. I learned all features of Android for becoming an Android developer. Certainly would recommend the course. \"\n\n\n\"Best android apps development course so far. First I learn the basics of all android components. After that, I learn how to develop real-world android apps for clients and the App Store. I mostly like all the firebase sections of this course. The instructor shows how to develop real-world apps using firebase. After complete this section, I learn a lot about firebase and I build many real-world android apps. Thanks for your course.\"\n\n\n\"Best Android development course I have taken so far. The teacher has amazing teaching skills. He has the ability to describe all parts very clearly on a step-by-step basis. Highly recommended! \"\n\n\n\"Very well made course about Android Development. Will continue and hope to learn a lot more. I am very happy with what I have learned so far!\"",
      "target_audience": [
        "Who is want to become a Flutter Developer",
        "Who is Want to Build ios & Android App Using Flutter",
        "Who is Want to Build Real World ios and Android App",
        "Who is Want to learn Flutter Material Design",
        "Who is Want to learn Cloud Firestore"
      ]
    },
    {
      "title": "iOS 10 iPhone App Development: Learn the Basics in 2 hours",
      "url": "https://www.udemy.com/course/bucketlist-1-create-an-app-and-put-it-on-your-own-iphone/",
      "bio": "Build a fully functioning App and run it on your own personal iPhone",
      "objectives": [
        "Build an App for the iPhone or iPad",
        "Put that App on your own iPhone or iPad",
        "Use the Xcode interface for further development"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Course Supplementary Material",
          "Appy Socials",
          "What This Course Is",
          "What This Course Is Not",
          "Equipment Needed",
          "Are You Ready to Carry On?"
        ],
        "Intro to Xcode and your FIRST APP": [
          "Download Xcode",
          "Your FIRST App = Hello, World!",
          "Outro"
        ],
        "The Main Event - Build An App": [
          "The Big One: App #1 on Your iPhone - \"Who's Round?\"",
          "Polishing off the App",
          "Very Brief Intro to Coding - You May Know More Than You Realise!",
          "Download of Code for App (Article)"
        ],
        "Get the App on YOUR actual iPhone": [
          "Sign Up for an Apple Developers Account",
          "Install App on your iPhone"
        ],
        "What Next?": [
          "Summing Up",
          "Final Quiz"
        ],
        "BONUS": [
          "BONUS: Get at least 80% off any of my courses"
        ]
      },
      "requirements": [
        "A willing mind ready to learn",
        "A Mac computer running OS either Yosemite or El Capitan",
        "An iPhone 4s or newer"
      ],
      "description": "This course is designed to help beginners to get to grabs with building apps for the iPhone or iPad. The course goes from the basics of downloading the needed software, to building an app, and finishing with putting that app on your own iPhone.\n\n\nCreate, Design, Build, and Export an iPhone App\nPut an app on your iPhone\nThis course can be completed in a short period of time\n\n\nBuild an app and put it on your iPhone in one evening.\n\n\nIn this course you will use how to use a Mac computer (useful if you come from a Windows background), how to download the necessary software, and have an introduction into how to use it.\nYou will then build your first app and run it on a simulator. Once you have achieved that we move onto building a fully functional app, and by the end of the course this app will run on your own iPhone.\nTo keep things moving fast and fun this course is only 14 lectures in length and comprises a mixture of talking head videos, screen videos, articles, and quizzes. It is a really engaging course that will keep you interested and alert from start to finish.\nThe holy grail of this course is that by its completion (usually can be done in one evening) you will end up with a fully functioning app on your iPhone which you can proudly show off to your friends and family.\n\n\nSo what are you waiting for.....go and purchase it today!!!",
      "target_audience": [
        "This course is designed for absolute beginners to app development",
        "It is best suited for those who like to learn and achieve something in a very short period of time",
        "This course will not put your App in the Apple App Store",
        "This course is not for someone who already has a decent knowledge or building apps"
      ]
    },
    {
      "title": "A Complete Guide to Lean Controllers in iOS",
      "url": "https://www.udemy.com/course/a-complete-guide-to-lean-controllers-in-ios/",
      "bio": "Taming the Massive Controllers",
      "objectives": [
        "At the end of this course students will be able to write cleaner, reusable code",
        "Learned advanced iOS development techniques and principles",
        "Take control of your massive controllers and turn them into leaner controller"
      ],
      "course_content": {
        "Welcome to Learn Controllers": [
          "Introduction",
          "What is Massive View Controllers?",
          "What is a Lean Controller?"
        ],
        "Setting Up the Grocery Application": [
          "Designing Wireframes Using Keynote",
          "Implementing User Interface in Storyboard",
          "Integrating with Core Data",
          "Creating Custom View to Add New Shopping List"
        ],
        "Persisting Data Using Core Data": [
          "Saving New Records",
          "Fetching Records and Displaying them in UITableView",
          "Deleting Records"
        ],
        "Implementing Data Managers and Providers": [
          "Recap of the Grocery App",
          "Implementing Core Data Manager",
          "Implementing Shopping List Data Providers"
        ],
        "Implementing and Configuring Data Sources": [
          "Implementing Shopping List Data Sources",
          "Communicating Between Data Provider and Data Source",
          "Deleting Shopping Lists Using Data Source and Provider"
        ],
        "Creating Custom Controls": [
          "What's Wrong with the Current Approach",
          "Creating a Custom Add New Item Control",
          "Adding Custom Initializer to Configure Place Holder Text",
          "Passing Data from AddNewItemView Using Delegates",
          "Passing Data from AddNewItemView Using Closures"
        ],
        "Generic Data Providers and Data Sources": [
          "What's Wrong with the Current Approach",
          "Creating a Generic Data Provider",
          "Implementing a Generic TableView Data Source Part 1",
          "Implementing a Generic TableView Data Source Part 2",
          "Saving Records Using Generic Providers and Data Sources"
        ],
        "Building Better View Controller Segues": [
          "Default Segues",
          "Modern Segues Using Extensions"
        ],
        "Secure TabBar Items Using Protocol Extensions": [
          "Understanding the Scenario",
          "Presenting LoginViewController",
          "Implementing LoginHandler",
          "Creating Base TabBarController"
        ],
        "Networking": [
          "Understanding the Scenario",
          "Developing a Webservice Class",
          "Refactoring Webservice Class"
        ]
      },
      "requirements": [
        "You should have knowledge of the Swift programming language",
        "You should have Xcode 8.2 or above installed on your Mac"
      ],
      "description": "Are you interested in taking your iOS skills to the next level?\nDoes your view controller consists of hundreds or thousands of lines of code?\nThe answer to your headaches is \"Lean Controllers\". And now you can learn it from the comfort of your home.. in your own time.. without having to attend class.\nMy name is Mohammad Azam, creator of many popular online courses including Mastering MapKit in iOS Using Swift, Creating Stickers and iMessages Applications in iOS 10 Using Swift 3 and Mastering Sever Side Swift Using Vapor.\nI have created over 2 dozens apps and some of my apps were even featured by Apple on the App Store. I have worked with fortune 500 companies as a lead iOS developer and helped them grow their business ten folds. At present I am a full time iOS Instructor at The Iron Yard where I teach users how to create amazing iOS applications.\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 4 hours. In fact if you think that the course fell short on delivering topics then we will give you your MONEY BACK.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nThis course explains everything I wanted to know about Server Swift Development. It is really a benefit to my skills, that are now improved. Thank you very much.\nIt's a great course, especially if you are an beginner and don't know where to start from. It gives you the start to build your own backend in Swift rather than learning a new language just to save some data in DB. Many thanks to the author and hope many others will start using Vapor and Swift on server :D It's amazing!!!\nBuy this course today and this is what you’ll get.\nFirstly, I am using Xcode 8.2 with Swift 3.0 with this course. I will show you how to build real apps that uses the principles of lean development. You will learn the techniques on how to write cleaner, leaner code by separating the concerns into multiple classes and components.\nThe course is accompanied with all the code sample files.\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and make sure that every questions is answered.\nCan you believe you get all this (and more) for just $195?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nt's a great course, especially if you are an beginner and don't know where to start from. It gives you the start to build your own backend in Swift rather than learning a new language just to save some data in DB. Many thanks to the author and hope many others will start using Vapor and Swift on server :D It's amazing!!!\nWhy Lean Controllers?\nController's job is to orchestrate the flow of the application, yet it always end up with hundreds and sometimes even thousands of lines of code. This course discusses the best practices of iOS development which results in Learn Controllers.\nBy creating reusable iOS components we can quickly build our application without copy pasting code into multiple places.\nThe amazing techniques discussed in this course can setup your path from intermediate to advanced developer.\nWho is this for?\nThis course is for anyone who wants to take their skills to the next level. Lean controllers enforces best practices in iOS development and make your code easy to maintain for future iterations. Tired of writing thousands of lines of code in your view controllers. Tired of copy and pasting code all over the place in your application.\nImplementing your code using the best practices of Lean Controllers helps you deal with the above problems. You will learn to create reusable custom controls. You will implement generic data providers capable of fetching and persisting models of any type. You will create generic data sources which can be plugged with any UITableViewController.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the iOS community with a large following. I do a lot of speaking engagements in which I spread knowledge and education.\nIf you are not satisfied with the course then I offer a 100% REFUND. I am confident that you will enjoy the course and you will utilize the knowledge you learned in this course in your future applications.\nWhat are the requirements?\nA Mac Computer\nXcode 8 or above and Swift 3.0\nGood understanding of the Swift language and the iOS SDK - I'll teach you everything you need to know about converting your massive controllers into lean controllers.\nWhat am I going to get from this course?\nTake your skills to the next level by learning the advanced techniques used by iOS professionals.\nLearn the principles behind creating Lean Controllers.\nWrite more maintainable and reusable code.\nBecome a professional app developer, take freelance gigs and work from anywhere in the world\nBored with the same old, same old? Apply for a new job in a software company as an iOS developer\nApply the lean principles and climb the cooperate ladder from junior developer to senior developer.\n\n\nWho is the target audience?\nAnyone who wants to be an app developer: This is a complete course, just like my Complete MapKit, iMessages, Server Side Swift and Swift 2.0 courses.\nAnyone who wants to learn to code: Lean Controllers allows you to write more maintainable, reusable code. Your journey towards greatness starts right NOW.\nAnyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work is your key to a hugely powerful world.",
      "target_audience": [
        "This course is for developers who want to take their existing skills to the next level",
        "Developers who want to move from intermediate level to advanced",
        "Writing cleaner, leaner and easily maintainable iOS code"
      ]
    },
    {
      "title": "Power Apps for Beginners",
      "url": "https://www.udemy.com/course/powerapps-for-beginners/",
      "bio": "The perfect beginners' course to you get you started with PowerApps and the Power Platform.",
      "objectives": [
        "Build mobile applications for Android and Apple devices.",
        "Build web-based business applications.",
        "Automate business processes and integrate with Microsoft cloud services",
        "Working with different data types",
        "Integrate Office 365 products such as OneDrive and Outlook with your apps",
        "Write expressions using Power FX",
        "Creating forms, columns and views",
        "Creating data tables",
        "How to use basic tools to design and plan applications",
        "Create Business Rules",
        "Create Business Processes",
        "Deployment",
        "System and User administration",
        "Security"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Update on Microsoft Trial Registrations",
          "Getting setup",
          "What is a canvas app?",
          "What is a model-driven app?",
          "What is Power Automate?",
          "What is the Dataverse? (Common Data Service)",
          "30-Day Trial Environment"
        ],
        "Orientation of the Power Apps Maker Environment (updated Jan 24')": [
          "Introduction to section 2 - Power Apps Maker Studio",
          "How to access Power Apps maker and landing page overview",
          "Where to start building Apps from",
          "Where to find your Apps",
          "What are solutions",
          "What are Flows",
          "What are Tables",
          "What are Dataflows",
          "Wrap-up with miscellaneous features"
        ],
        "Orientation of the Power Apps Design Studio (updated Jan 24')": [
          "Introduction",
          "Orientation of the left navigation",
          "Orientation of the design area",
          "Orientation of the object properties",
          "About the formula bar",
          "Wrap up of section 3"
        ],
        "How to create Apps automatically from existing data (updated Jan 24')": [
          "Introduction",
          "Create a simple app using Microsoft Excel Data",
          "Create an simple App using an existing SharePoint list",
          "Create a simple App using an existing Dataverse table",
          "Create a simple App using Copilot"
        ],
        "Practise working with Power Apps controls - Part 1 (Updated Sep 24')": [
          "Introduction",
          "How to add screens to your app (Updated Feb 24')",
          "Import the exercise template",
          "Working with labels",
          "Working with buttons",
          "Working with inputs (Part 1)",
          "Working with Inputs (Part 2)"
        ],
        "Practise working with Power Apps controls - Part 2 (Updated Sep 24')": [
          "Working with containers",
          "Working with the timer control",
          "Exploring the address input control using geospatial services",
          "Working with Forms",
          "Working with the image control",
          "Working with sound - Microphone and Audio Controls",
          "Working with icons",
          "Working with the Add Picture control"
        ],
        "Practise working with Power Apps controls - Part 3 (Updated Oct 24')": [
          "Comparing Excel with Power Fx",
          "How to configure the navigate function",
          "Understand the three types of variables",
          "How to invoke a Power Automate Flow from a button click"
        ],
        "Power FX Formulas (Hand-on part 1)": [
          "Important Update",
          "Filter - Setup database for filtering exercise",
          "Filter - Configure Galleries on Canvas",
          "Filter - Write the expression to filter contacts",
          "Filter - Using a dropdown to Filter Data",
          "How to use the Search expression",
          "Edit an exiting record",
          "Delete a record",
          "Mapping the current user details to a record",
          "And, Or, Not Operators",
          "Setting global variable within the APP Object",
          "Using the Sum expression",
          "Using the Calendar Object",
          "Using the ColorFade Expression",
          "Using Concatenate to join strings",
          "Using CountRows in a table",
          "Date calculations",
          "One click dialing",
          "Download function"
        ],
        "Introduction to the Dataverse": [
          "Introduction to Model-driven Apps",
          "Creating an app with the new designer",
          "Introduction to Tables",
          "Introduction to Forms",
          "Introduction to Views",
          "Introduction to Table Relationships",
          "Introduction to Datatypes",
          "Introduction to Business Processes",
          "Introduction to Business Rules"
        ],
        "Dataverse - Creating Table Columns": [
          "Introduction to columns",
          "Setup for column exercise",
          "Text Field",
          "Multiline Text Column",
          "Whole Number",
          "Decimal Number",
          "Text Area Column",
          "Yes/No Option",
          "Choice Column",
          "Choices Column",
          "URL Field",
          "Status & Status Reason Fields",
          "Phone Column",
          "Owner Field",
          "Image Column",
          "Email Column",
          "Date and Time columns",
          "Lookup Column",
          "Columns and data types"
        ]
      },
      "requirements": [
        "This course is designed for absolute beginners",
        "Having a basic understanding of Excel formulas would be advantageous.",
        "No programming experience required, you will learn everything you need to know during the course",
        "Having two screens to go through the course will make it easier to follow along with the instructor"
      ],
      "description": "If you are looking to gain deeper insight as to the possibilities with the Power Platform or perhaps you are starting your journey in becoming a Power Apps developer, then this is the course for you. With over 36 hours of content and more than 200 lectures, the course takes you from an absolute beginner to a confident application developer within 30 days.\nThis course is a step-by-step beginner's guide on how to build applications using the Power Platform. You will learn how to build mobile and desktop applications as well as set up background automation using Power Automate. If you prefer a step-by-step non-technical approach then this is the course for you.\nSince this is a beginner's course, we will cover two of the four Power Platform tools within the course curriculum, Power Apps and Power Automate. Furthermore, you will also learn to integrate with common Office 365 products such as Outlook and One Drive.\nThe course starts off with an orientation of the Power Platform which includes hands-on demonstrations of each of the available functions and features we use to build applications. By the time you have completed this course, you should have full confidence to design, build and deploy applications within your organization.",
      "target_audience": [
        "Aspiring PowerApps developers",
        "People curious about the possibilities of PowerApps",
        "Dynamics 365 and Power Platform learners"
      ]
    },
    {
      "title": "MERN Stack E-Commerce Mobile App with React Native [2023]",
      "url": "https://www.udemy.com/course/mern-stack-e-commerce-mobile-app-react-native-redux-expo/",
      "bio": "Build E-Shop Mobile App with Admin Panel and Authentication using React Native, Expo, Redux, Context API and much more",
      "objectives": [
        "Build a Great eCommerce Mobile Application with React Native, Redux, Node, Express & MongoDB",
        "Develop cross-platform (iOS and Android) mobile apps without knowing Swift, ObjectiveC or Java/ Android",
        "An actual real-world project built in a linear and progressive manner",
        "Great Division of the course so you can pick up FullStack, Frontend or Backend",
        "Admin area to manage customers, products & orders from mobile phone!",
        "Product search, carousel & more",
        "Learn NodeJS API (Backend) Development",
        "Learn to Implement Authentication based on JWT",
        "Understand the terminology and concepts of Redux",
        "Get up to speed with React design principles and methodologies",
        "Make truly reusable components that look great",
        "Discover mobile design patterns used by experienced engineers"
      ],
      "course_content": {
        "Welcome to the course": [
          "What are we going to build?",
          "What is MERN Stack?",
          "How to Get the Most of This Course",
          "How to use this course",
          "If you get stuck and Errors",
          "Course Outlines"
        ],
        "Tools and Environment": [
          "Installing NodeJs",
          "Installing Expo",
          "Installing and running Android Studio",
          "Installing and running iOS Simulator",
          "Installing our Coding Editor (IDE)",
          "Installing PostMan to Test our API's",
          "Configure MongoDB Atlas"
        ],
        "Working with Backend": [
          "Introduction",
          "Overview to our RESTful API",
          "File Structure",
          "Creating the Backend Server with Express",
          "Reading Environment Variables",
          "Create First API Call & Parsing Json Data",
          "Important note about parsing json data",
          "Logging API Requests",
          "Installing Mongoose and Connect to MongoDB Database",
          "Read/Write Data to Database Using API",
          "Analysing the E-Shop Database",
          "Create Backend API Routes & Schemas",
          "Enabling CORS & Why Do We Need It?"
        ],
        "Backend: Products & Categories": [
          "Introduction",
          "Products Model & Scheme",
          "Categories Model & Scheme",
          "Add and Delete Categories",
          "Get Categories and Category Details",
          "Update Category",
          "Post a New Product REST API",
          "Get a Product & List of Products REST API",
          "Population of Category in Get a Product API",
          "Update a Product REST API",
          "Delete a Product REST API and Validate Id",
          "Get Products Count for Statistics Purposes",
          "Get Featured Products REST API",
          "Filtering and Getting Products by Category",
          "Changing \"_id\" key to \"id\" - more frontend friendly",
          "Section Code"
        ],
        "Backend : Users & Authentication": [
          "Introduction",
          "User Models and Schemas",
          "Post/Register a New User REST API",
          "Hashing the User Password",
          "Get User and List of Users Excluding Password",
          "Login a User REST API & Creating a Token",
          "Protecting the API and Authentication JWT Middleware",
          "Authentication Error Handling",
          "Excluding REST API Routes From Authentication",
          "Add More Secret User Information to Token",
          "Users & Admins - User Role",
          "Get User Count REST API",
          "Section Code"
        ],
        "Backend: Orders": [
          "Introduction",
          "Orders & Order-Items Model & Scheme",
          "Array of Refs - Example of Link Order to Order Items to Products",
          "New Order & Create Order Items on Posting New Order",
          "Get Order Detail and Populate Products in Order Items and User Data",
          "Update Order Status & Delete Order",
          "Delete Order Items after Deleting the Order",
          "Explaining the Solution",
          "Calculating Total Price of one Order",
          "Get Total E-Shop Sales using $sum",
          "Get User Orders",
          "Section Code"
        ],
        "Backend: Product Image & Gallery Upload": [
          "Introduction",
          "Configure Server Side Upload",
          "Testing Image Upload with Postman",
          "Validating Uploaded File Types",
          "Image Upload With Product Post Request",
          "Image Upload With Product PUT Request",
          "Product Gallery Multiple Images Upload",
          "Excluding Uploads Folder From Authentication",
          "Section Code"
        ],
        "React Native Fundamentals: Todo List": [
          "React Native Fundamentals",
          "Project Setup and Folder Structure",
          "Components",
          "State",
          "Props",
          "Style",
          "ScrollView and TextInput",
          "Add Item",
          "Delete Item",
          "Expo Menu",
          "Section Code"
        ],
        "Easy Shop: Products": [
          "Intro and Folder Structure",
          "FlatList Products",
          "Product List",
          "Product Card",
          "Regarding Layout and Images",
          "Header",
          "Important note on Native Base",
          "Native Base",
          "Searched Product",
          "Search List",
          "LogBox",
          "Banner",
          "Section Code"
        ],
        "Easy Shop: Categories": [
          "Categories",
          "Category Filter",
          "Category Badges",
          "Category Container",
          "Section Code"
        ]
      },
      "requirements": [
        "Basic Knowledge with Javascript"
      ],
      "description": "***IMPORTANT*** THIS COURSE IS OUTDATED AND CURRENTLY BEING REFORMULATED AND UPDATED WITH NEW AND MODERN FEATURES. STAY CONNECTED WITH OUR SOCIAL TO GET UPDATES REGARDING THE NEW RELEASE OF THIS COURSE.\nYOU CAN FIND MORE INFO IN BONUS LECTURE\n\n\nBuilding cross-platform mobile apps has become less time consuming and more effective with one of the most popular frameworks, React Native.\nThis is not a reading documentation course. You have here a real-world project to learn from, and you will see the exact place of every feature of every technology used in this course.\nYou will learn how to build a Mobile Application for iOS and Android with MERN stack using React Native.\nIn this course you will learn to use technologies like:\n- React Native\n- NodeJs\n- Express\n- MongoDB\n- Redux\n- Context API\n- React Navigation\n- Styled Components\n- And Native Base\n\n\nYou will learn the basics of building React Native apps. First, you will discover how to set up your environment in record time, including how to debug and run your app on your phone. Then, you will explore the React Native component library and how to style your layouts for a great feel. Finally, you will delve into how to call an HTTP API from your app.\nWhen you’re finished with this course, you will have the basic skills and knowledge of React Native needed to tackle profitable, cross-platform mobile projects without learning at least two new programming languages.\n\n\nAlso, this course is a perfect to the concepts of server-side web development. You’ll learn the different parts that make up the back-end of a website or web application, and you’ll gain familiarity with the Node.js runtime environment. After this course, you’ll be set up to explore popular Node frameworks like Express.js to build great API's.\nYou learn in this course how to use mongoDb without any installing extra tools, MongoDB is now on cloud, so you will store your database in safe place!\n\n\nThe main features:\nFull featured shopping cart\nTop products carousel\nProduct pagination\nProduct search feature\nUser profile with orders\nAdmin product management\nAdmin user management\nAdmin Order details page\nChanging the orders states (shipped, delivered ..)\nCheckout process (shipping, payment method, etc)\nUsing Database in the cloud\nand much more ...\n\n\nAnd not only this, you will have optional tasks to do and we can review them for you! Just pick up one task from the board and create the pull request to get the review, to be like in a real world experience!\nAfter this course you will have a full working e-commerce iOS and Android App that you can use or add to your portfolio.",
      "target_audience": [
        "Full stack, Forntend or Backend web developers that want to learn MERN by building a real-world app"
      ]
    },
    {
      "title": "Jetpack Compose Modern App development using latest tech",
      "url": "https://www.udemy.com/course/jetpack-compose-modern-app/",
      "bio": "Jetpack Compose, Coroutines, Flows, Retrofit, Hilt DI, Room database, Navigation, BottomNavBar and lots more",
      "objectives": [
        "Modern Android app development",
        "Jetpack Compose",
        "MVVM",
        "Coroutines and Flow",
        "Navigation",
        "Scaffold with BottomNavBar",
        "Retrofit",
        "Hilt Dependency Injection",
        "Room database",
        "Android System Services - Network Connectivity Monitor"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media"
        ],
        "Project setup": [
          "Section overview",
          "gradle config files",
          "Project setup",
          "api key config",
          "Getting the api keys"
        ],
        "Compose Navigation": [
          "Section overview",
          "Jetpack Compose Navigation",
          "Dummy screen composables",
          "NavHost and Scaffold",
          "Vector assets",
          "BottomNavBar"
        ],
        "Api communication, Retrofit and Hilt": [
          "Section overview",
          "Retrofit and Api",
          "Hilt",
          "Character response data type",
          "Api query",
          "Api service and standard parameters",
          "NetworkResult.kt",
          "ApiRepo",
          "AndroidManifest.xml configuration",
          "Hilt implementation"
        ],
        "ViewModel": [
          "Section overview",
          "LibraryViewModel",
          "LibraryScreen.kt",
          "Library UI"
        ],
        "Database setup": [
          "Section overview",
          "Room database",
          "Add Character data type",
          "Character DAO",
          "Database setup",
          "Update Hilt"
        ],
        "Character detail screen": [
          "Section overview",
          "Retrieve single character functionality",
          "CharacterDetailScreen.kt",
          "Character detail screen",
          "CollectionDbViewModel",
          "Update detail screen UI",
          "CollectionScreen.kt",
          "Collection screen"
        ],
        "Adding notes": [
          "Section overview",
          "Note data types",
          "NoteDao",
          "Update collection database",
          "Update ViewModel",
          "CollectionScreen.kt",
          "Update the UI"
        ],
        "Connectivity monitoring": [
          "Section overview",
          "SingletonHolder",
          "Connectivity manager",
          "Update the UI"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Android development foundations",
        "Jetpack Compose"
      ],
      "description": "When learning to build an Android application, you start by learning the basics and then move to learn the libraries used in Android development. But you rarely learn the correct way to use these libraries together, to make a consistent, well designed and well developed application. This is where this course comes in.\nHere we use the latest tools and techniques to build an app that is scalable and maintainable, to the latest standards in Android development.\nAfter taking this course, you will know how to build a new app from scratch, in a way that you can later expand and improve without compromising on architecture.\nWe will use many of the most common libraries and tools in use today in Android development.\n- Jetpack Compose as a foundation is imperative these days, and the whole ecosystem is moving towards this development pattern\n- MVVM architecture is a standard in all well designed apps\n- Kotlin Coroutines and Flows are extremely useful and recommended by Google to run functionality on the background thread\n- Jetpack navigation for moving around in the app\n- Retrofit for network communications is a standard for all apps that talk to a backend API\n- Hilt Dependency Injection has become a standard library that decouples object creation from use\n- Room database is essential for storing data in the app long term\n- A network monitoring service is a very common practice to keep the user updated of any changes in network connectivity\n\n\nAll these tools and libraries are common place in most apps that you will build, and this course teaches you how to use them together to implement an app that is scalable, maintainable and testable.\nIf you want to take your development skills to the next level and become an expert Android developer, this course is for you.",
      "target_audience": [
        "Beginner Android developers",
        "Intermediate Android developers"
      ]
    },
    {
      "title": "React Native with Typescript - The Practical Guide (2022)",
      "url": "https://www.udemy.com/course/react-native-with-typescript-the-practical-guide-2022/",
      "bio": "Create an app in React Native - from basic knowledge to working app. Learn React Native components, Typescript, and more",
      "objectives": [
        "Create a working app made in React Native & Typescript",
        "Understand React Native in practical and fun way",
        "Use gained knowledge to create your own applications",
        "Establish yourself in the field of the exciting mobile app development environment"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to resolve issues"
        ],
        "Project startup": [
          "Development Environment",
          "Simulators",
          "What is react native"
        ],
        "Navigation": [
          "New Screens",
          "Navigation",
          "Navigation Push",
          "Navigation navigate",
          "Native stack header props",
          "Bottom Tab Navigator",
          "AI Navigation",
          "Hide Header",
          "Add Icons"
        ],
        "Workout management": [
          "Data",
          "Flat List",
          "Types",
          "Workout Item",
          "Workout item styles",
          "List style flex"
        ],
        "Font Loading": [
          "useCachedResources",
          "load fonts",
          "Display new font",
          "Montserrat Text component",
          "Children type"
        ],
        "Utility functions": [
          "sec to min",
          "format sec",
          "Improve format",
          "Pressable"
        ],
        "Detail screen": [
          "Workout detail screen",
          "Screen title",
          "Display slug",
          "Navigation Type"
        ],
        "Async storage": [
          "Async Storage",
          "Contains data",
          "Workout storage",
          "Clear Workouts",
          "Get workouts"
        ],
        "Use Workouts": [
          "Use Workouts",
          "UseIsFocused",
          "Get workout",
          "useWorkoutBySlug",
          "Check for undefined",
          "Pressable Sequence",
          "Pressable Component"
        ],
        "Modal": [
          "Modal",
          "Modal visibility",
          "Modal Styling",
          "Reusable Modal",
          "Reusable Activator part 1",
          "Reusable Activator part 2",
          "AI Passing Props",
          "Pass props to modal",
          "Display sequence",
          "Sequence improvements",
          "Workout Item Children"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge",
        "React basics, recommended but isn't must have"
      ],
      "description": "What is React Native?\nReact Native combines the best parts of native development with React, a best-in-class JavaScript library for building user interfaces. React primitives render to native platform UI, meaning your app uses the same native platform APIs other apps do. Simplified, with React Native you can create a native application on IOS and Android devices, only with a knowledge of one language (Javascript).\nIs this course right for you?\nIf you plan to start your career as a developer or improve your programming skills, this course is right for you.\nYou will get the confidence and skills required to start your own projects.\nWhat are you going to work on?\nYou will create a \"Workout\" mobile application with Javascript programing language.\nThe course is divided into multiple parts (check curriculum).\nIn the first part, you will set up a development environment simulator and learn more about React Native theory.\nRight away after that, you will start working on the application. First, you will learn to create multiple screens(views) and navigation between them. An instructor will show you different ways and techniques to set up navigation and, most importantly, how navigation works.\nIn the next part, you will discover some React Native components. Native components are similar to those used in the browser. If you have some basics in HTML, it will be for your piece of cake to grasp these concepts.\nLoading external resources such as fonts is very important for UX. You will create a simple resource loader and prepare a function to boot up all required initial data of your application.\nIn the next couple of lectures, you will create a detailed workout page, displaying more precise information. You will learn how to pass parameters in navigation and use them to fetch data.\nThe next part of the course covers data management, storage, and data manipulation. It's important to know where to store data and retrieve them. An instructor will show you an easy way how to do that. As storage, you will use native storage of your phone(simulator).\nHooks functions are an essential part of React environment. You will learn how to use them to get data.\nIn the following section, you will go back to the detail screen of the application. You will learn how to create a reusable component, modal. A modal window will be responsible for displaying a sequence of workout exercises.\nThe application's core feature is to display a countdown(timer) for currently active exercise. In the eighth section, you will work precisely on this feature. An instructor will guide you through creating a reusable hook function that will provide \"countdown\" functionality.\nCountdown functionality goes hand-in-hand with the feature to display the currently \"active\" exercise, and after the countdown is finished, load the next exercise and reload the countdown again.\nIn the next section, you will work on a form to create a workout and add/remove exercises in the workout.\nThe course is finishing with you working on the \"theme\" feature. This simple functionality allows users to toggle between the dark and light theme of the application.\nThe last part of the course covers testing the application on the device and in the simulators.",
      "target_audience": [
        "Beginners as well as experienced devs interested in mobile development with React Native.",
        "People looking for the practical development guide.",
        "This course is for everyone eager to understand how to build an app from scratch"
      ]
    },
    {
      "title": "Android App Development with Kotlin and Mobile App Marketing",
      "url": "https://www.udemy.com/course/android-app-development-with-kotlin-and-mobile-app-marketing/",
      "bio": "Kotlin, android, android studio, android development, android app development, app marketing, app monetization at once",
      "objectives": [
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is popular for both Android developers and Java developers.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "kotlin",
        "android kotlin",
        "android app development with kotlin",
        "android application development",
        "android ecommerce app",
        "android game development",
        "app android",
        "android app design",
        "mobile app development",
        "mobile development",
        "android development",
        "What is Kotlin",
        "Kotlin Programming Language",
        "Kotlin Android Fundamentals",
        "Java Development Kit - JDK",
        "Android Studio",
        "Variables in Android Kotlin",
        "Kotlin Data Types",
        "Type Conversions in kotlin for android",
        "Arrays in The complete Android Kotlin Developer Course",
        "Operators in android app development kotlin",
        "Control Flow Statements",
        "Loops in Android App Development",
        "All concepts of Object-Oriented Programming",
        "kotlin java",
        "android studio kotlin",
        "kotlin for java developers",
        "java kotlin",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Learn the most used operating system on the planet",
        "Learn Android App Development using the Kotlin programming language",
        "Learn the latest version of Android",
        "Android Studio",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "Start from scratch and become a professional Android App developer",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "Android app, android application development",
        "android",
        "Kotlin is popular for both Android developers and Java developers",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language, Udemy has a top-rated course to help you",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices.",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "I really like the approach of this course. It first teaches you Java which is highly important for designing apps in Android.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android oper",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer",
        "With over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "kotlin android"
      ],
      "course_content": {
        "Intro to Android App Development with Kotlin and Mobile App Marketing": [
          "What Will You Learn In This Kotlin Android Course?",
          "Kotlin Overview",
          "Some Information about Android Ecosystem",
          "Basic Programming Terms",
          "Project Files",
          "Documents",
          "FAQ about Android App Development, Kotlin, Mobile App Marketing",
          "Quiz"
        ],
        "Environment Setup in Android Studio Kotlin": [
          "Installing Java on Windows",
          "Installing Java on Mac",
          "Android Studio Installation - Part 1",
          "Android Studio Installation - Part 2",
          "Creating a New Project on Android Studio",
          "Android Studio Interface",
          "Quiz"
        ],
        "Fundamentals of Kotlin": [
          "First Kotlin Program",
          "Variables in Kotlin",
          "Data Types in Android Kotlin",
          "Type Conversions",
          "String Data Types",
          "Arrays in android app (kotlin)",
          "ArrayList in Kotlin",
          "Set in Android Development",
          "Map in Android App Development",
          "Quiz"
        ],
        "Operators in Kotlin": [
          "Arithmetic Operators in Kotlin",
          "Assignment Operators in Kotlin",
          "Unary Operators",
          "Equality and Relational Operators in kotlin",
          "Conditional Operators in kotlin",
          "Operator Precedence in Kotlin",
          "The “rangeTo()” Function and “in” operator",
          "Console Input",
          "Quiz"
        ],
        "Control Flow Statements": [
          "If, If-Else Statement",
          "If-Else - If Ladder Statement, Nested If Statement",
          "Kotlin: When Statement",
          "Quiz"
        ],
        "Loops in Kotlin": [
          "Kotlin: For and For Each Loops",
          "Kotlin: While and Infinite Loop",
          "Kotlin: Do-While Loop",
          "Quiz"
        ],
        "Functions in Android Kotlin": [
          "Kotlin: Functions",
          "Types of Functions",
          "Quiz"
        ],
        "Kotlin: Object Oriented Programming (OOP)": [
          "Object and Class in Kotlin",
          "Access (Visibility) Modifiers",
          "Naming Convention",
          "Constructor - Part 1",
          "Constructor - Part 2",
          "Encapsulation",
          "Inheritance",
          "Function Overriding",
          "Abstract Classes",
          "Interfaces",
          "Quiz"
        ],
        "Introduction to Android App Development": [
          "Installing Android Virtual Device (AVD - Emulator)",
          "Enabling Virtualization (VT-x or AMD-V, SVM) in BIOS",
          "Installing Genymotion Emulator",
          "General Information About Gradle Build System",
          "Introduction to Manifest File in android app development",
          "Introduction to resources (Strings, Drawables etc)",
          "quiz"
        ],
        "Android Components": [
          "Layouts in Android App",
          "Constraint Layout in Android 11",
          "Textviews in Android App Development",
          "Buttons in Android",
          "Edittexts Android app",
          "ImageView in Android",
          "CheckBox in Android",
          "Radio Buttons in Android App Development",
          "Toggle Buttons in Android",
          "Spinner in Android App Development",
          "Creating Top App Bar (Toolbar - Action bar)",
          "Adding Menu Items to Toolbar",
          "quiz"
        ]
      },
      "requirements": [
        "No prior android kotlin knowledge is required",
        "No Kotlin coding knowledge required",
        "Watching the Adroid app development with kotlin course videos completely, to the end and in order",
        "Determination to learn and patience for Kotlin",
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We prefered Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Desire to learn Android Application Development",
        "Watching the Android course videos completely, to the end and in order.",
        "Desire to learn Android App Development",
        "Desire to learn Android Development with kotlin",
        "Desire to learn mobile app development",
        "Desire to learn kotlin android",
        "Desire to become android developer with android app development and kotlin",
        "Desire to learn kotlin, android, app marketing, mobile app marketing",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to Android App Development with Kotlin and Mobile App Marketing course.\nKotlin, android, android studio, android development, android app development, app marketing, app monetization at once\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\nKotlin is popular for both Android developers and Java developers. Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to the language, Udemy has a top-rated course to help you achieve your goals.\nKotlin is a very new and up-to-date programming language. Kotlin android is accepted by Google as the official language for Android development. Therefore, it is a language that everyone who wants to be an android developer should know. In this course, we teach Kotlin programming language from beginner to advanced level, considering the importance of Kotlin.\nKotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices. Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.\nIf you don't know anything about the Kotlin programming language and you want to improve yourself, this course is for you.\n\nThis is the most comprehensive Android course. Learn Android app development with practice and build your android development skills.\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android 11 is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses a .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nChances are, you’ve heard of Android many times, and Do u want to the android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or denies permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\nAndroid is the most used operating system on the planet. In fact, it’s almost omnipresent in the mobile ecosystem. With millions of Android devices in use, and an incredible 500,000+ new Android devices activated daily, the popularity of Android applications is increasing exponentially - and with it, the demand for Android mobile application developers is soaring.\n\nIf you're interested in developing new and innovative applications for the world’s mobile platform, this course is a perfect match for you\n· Do you want to improve your career options by learning android?\n· Do you want to learn android app development from scratch?\n· Do you want to learn android development from scratch?\n· Do you want to be an android studio master?\n· Do you want to build your first app?\n· How to make money with your apps?\n· How to put ads into your apps?\n· How you can turn a non-paying user to a paying user?\n· What can you sell to your subscribers?\n· How can you re-engage with your users?\nIf your answer is “yes” to these questions and if you want more, you are at the right place!\nAndroid is the most used operating system on the planet. In fact, it’s almost omnipresent in the mobile ecosystem and Android 11 has become the most popular Android version.\nThis course is specifically designed for the Beginner all the way up to Advanced\nYou will learn Android development step-by-step with hands-on demonstrations. In this course, we will learn to build and publish 2 major apps. During the lectures, we will also be practicing with more than 10 examples.\nWho needs to learn how to successfully Market, Promote and Monetize your apps, so that you can actually make a living doing what you enjoy the most!\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses a .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\nWhat’s important\nThere’re a lot of people out there teaching Android 11 who are not developers. We’re developers with many years’ field experience with the Android platform. So you will learn from an expert who has a great knowledge on Android. This course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\nFirst of all, I will teach the kotlin programming language that we will use while developing an android application. After learning the Kotlin programming language, you will ear android app development with kotlin. Also this part of the course, ypu will develop two major android app and you will learn publish your apps in the Google Play Store. Finally, you will learn mobile app marketing.\nEveryone is talking about design, coding but no-one is talking about how to make money with apps. There are a tons of tutorials for how to make game, but everyone is silent about making money with apps and they are keeping it as a secret. We believe the power of sharing. Sharing is caring, any? So we decided to come out and teach you how to actually make money with apps.\nIn this course you will learn;\nWhat Kotlin is and how it works,\nProgramming Fundamentals with Kotlin,\nAndroid Studio\nJava Development Kit – JDK\nVariables in android kotlin\nKotlin Data Types\nArrays in kotlin for android\nOperators in android app development kotlin\nControl Flow Statements\nLoops in android studio kotlin\nFunctions\nKotlin for java developers\nAll Concepts of Object-Oriented Programming such as Class, Object, Constructor, Encapsulation, Inheritance etc.\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating New Project\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nKey Metrics ( Revenue Metrics, User Acquisition, Engagement Tracking, etc )\nApp Publishing Process\nApp Monetization Types\nAd Monetization ( Ad Networks, Ad Mediation Platforms, Ad Placement Strategies )\nAd Placement Strategies ( Banner, Native, Interstitial, Rewarded Video )\nAd Monetization Tips\nIAP Monetization\nSubscription Model\nRetention Increasing Tips\nkotlin android\nandroid app development\nandroid app development kotlin\nKotlin, android app development, android, kotlin android, android kotlin, android development, app development, android app development kotlin, ktor,\nmobile app marketing for android app developers, ios developers\nAndoid app development with kotlin, java, java programming\nAndroid 11\nAndroid 12\nandroid studio java, android 11, android 12\nAndroid jetpack, android studio\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nNot only is Kotlin thoroughly covered in this course, but the content is both brought alive and given significantly more depth by leveraging your knowledge of Java. This concentration is especially relevant given that Java interoperability is one of the language's guiding principles.\nThe instructor is extremely knowledgeable and has an effective way of explaining complicated subjects so that even a beginner can understand. I highly recommend this course.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the knowledge. With this course you will always have a chance to follow trends.\nVideo and Audio Production Quality\nAll our contents are created/produced as high quality video/audio to provide you the best learning experience.\nYou will be,\n· Seeing clearly\n· Hearing clearly\n· Moving through the course without distractions\nYou'll also get:\n· Lifetime Access to The Course\n· Fast & Friendly Support in the Q&A section\n· Udemy Certificate of Completion Ready for Download\nDive in now!\nAndroid App Development with Kotlin and Mobile App Marketing\nKotlin, android, android studio, android development, android app development, app marketing, app monetization at once\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone who is planning job transformation and want to become a Kotlin developer",
        "Anyone who wants to learn important subjects of kotlin android",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Those who want to develop an Android mobile application with Kotlin",
        "Who wants to improve their existing Android App Development Kotlin knowledge",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications using the Kotlin programming language",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "Anyone who would like to work from anywhere in the world",
        "Anyone who wants to learn the most up to date android",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "People who want to learn android development or android app development",
        "People who want to learn android app development with kotlin",
        "People who want to become android app developer",
        "People who want to learn mobile development or mobile app development",
        "People who want to learn kotlin",
        "People who want to mobile app development, android, kotlin, java"
      ]
    },
    {
      "title": "Flutter - Animations from Zero to Hero",
      "url": "https://www.udemy.com/course/flutter-animations-from-zero-to-hero/",
      "bio": "Learn Animations in Flutter for Beginners",
      "objectives": [
        "Basics of Flutter Animations",
        "Best Practices for Animations",
        "Implicit Animations",
        "Explicit Animations",
        "Page Transition Animations",
        "Custom Paint Animations",
        "Lottie Animations",
        "Flare Animations"
      ],
      "course_content": {
        "Introduction": [
          "Lecture 1: About the Course",
          "Lecture 2: What is Animation in Flutter?",
          "Lecture 3: What are Animation Concepts in Flutter?",
          "Lecture 4: What are Animation Types in Flutter?",
          "Lecture 5: Flutter Animtions Tree"
        ],
        "Animations Basics": [
          "Lecture 6: Animation Controller OverView",
          "Lecture 7: Animation Controller in Deep",
          "Lecture 8: Animation and Tweens",
          "Lecture 9: Animation Curves",
          "Lecture 10: Vertical Synchronization and TickerProvider",
          "Lecture 11: Animation Builders"
        ],
        "Implicit Animations": [
          "How To Get Source code?",
          "Lecture 13: Prepare the project",
          "Lecture 14: Animated Align Demo",
          "Lecture 15: Animated Align",
          "Lecture 16: Animated Container Demo",
          "Lecture 17: Animated Container",
          "Lecture 18: Animated Default Text Style Demo",
          "Lecture 19: Animated Default Text Style",
          "Lecture 20: Animated Opacity Demo",
          "Lecture 21: Animated Opacity",
          "Lecture 22: Animated Padding Demo",
          "Lecture 23: Animated Padding",
          "Lecture 24: Animated Physical Model Demo",
          "Lecture 25: Animated Physical Model",
          "Lecture 26: Animated Positioned Demo",
          "Lecture 27: Animated Positioned",
          "Lecture 28: Animated Positioned Directional Demo",
          "Lecture 29: Animated Positioned Directional",
          "Lecture 30: Animated CrossFade Demo",
          "Lecture 31: Animated CrossFade",
          "Lecture 32: Animated Switcher Demo",
          "Lecture 33: Animated Switcher",
          "Lecture 34: Animated List State Demo",
          "Lecture 35: Animated List State"
        ],
        "Explicit Animations": [
          "Lecture 36: Poistioned Transition Demo",
          "Lecture 37: Poistioned Transition",
          "Lecture 38: Size Transition Demo",
          "Lecture 39: Size Transition",
          "Lecture 40: Rotation Transition Demo",
          "Lecture 41: Rotation Transition",
          "Lecture 42: Animated Builder Demo",
          "Lecture 43: Animated Builder",
          "Lecture 44: Fade Transition Demo",
          "Lecture 45: Fade Transition",
          "Lecture 46: Positioned Directional Transition Demo",
          "Lecture 47: Positioned Directional Transition",
          "Lecture 48: Tween Animation Builder Demo",
          "Lecture 49: Tween Animation Builder",
          "Lecture 50: Default Text Style Transition Demo",
          "Lecture 51: Default Text Style Transition",
          "Lecture 52: Inexed Stack Transition Demo",
          "Lecture 53: Inexed Stack Transition"
        ],
        "Page Transitions Animation": [
          "Lecture 54: Page Fade Transition Demo",
          "Lecture 55: Page Fade Transition",
          "Lecture 56: Page Scale Transition Demo",
          "Lecture 57: Page Scale Transition",
          "Lecture 58: Page Rotation Transition Demo",
          "Lecture 59: Page Rotation Transition",
          "Lecture 60: Page Slide Transition Demo",
          "Lecture 61: Page Slide Transition",
          "Lecture 62: Page Size Transition Demo",
          "Lecture 63: Page Size Transition",
          "Lecture 64: Page Mix Fade Size Transition Demo",
          "Lecture 65: Page Mix Fade Size Transition",
          "Lecture 66: Page Mix Scale Rotate Transition Demo",
          "Lecture 67: Page Mix Scale Rotate Transition"
        ],
        "More Animations": [
          "Lecture 68: Custom Paint Animations Demo",
          "Lecture 69: Custom Paint Animations",
          "Lecture 70: Lottie Animations Demo",
          "Lecture 71: Lottie Animations",
          "Lecture 72: Rive (Flare) Animations Demo",
          "Lecture 73: Rive (Flare) Animations"
        ]
      },
      "requirements": [
        "Just know the basics of dart and flutter, No expeirence needed in animations"
      ],
      "description": "This course is prepared to teach you how to create engaging and dynamic UI using animations in Flutter.\nYou will learn the fundamentals of creating animations in Flutter using the Animation and Tween classes, and explore more.\nThe course will cover best practices for creating animations in Flutter, such as optimizing performance and minimizing visual clutter. Real-world examples and case studies will be used to demonstrate how animations can enhance the user experience and add personality to an app.\nBy the end of the course, you will have the skills and knowledge they need to create beautiful and engaging UI in Flutter applications using animations.\n\nYou will learn how to use implicit animations to create basic animations such as changing the color or size of a widget. You will also explore advanced techniques for implicit animations, such as using the AnimatedBuilder widget and working with animations in a widget tree. Best practices for implicit animations will be covered, such as optimizing performance and minimizing visual clutter.\nIn addition, you will learn how to use explicit animations to create custom animations that reflect their app's unique personality. You will learn how to use the Animation and Tween classes to create complex animations, such as animating widgets along a path. The course will also cover best practices for explicit animations, such as optimizing performance and using animations to enhance the user experience.",
      "target_audience": [
        "For developers who have the passion in learning flutter Animations from zero"
      ]
    },
    {
      "title": "Ionic 2 Tutorial with Two Complete Apps",
      "url": "https://www.udemy.com/course/ionic-2-tutorial-course-learning-by-example-with-complete-apps/",
      "bio": "Learn Ionic 2 by creating increasingly complex and functional mobile apps for iOS, Android, and Windows 10",
      "objectives": [
        "Create iOS and Android Apps with Ionic 2",
        "Manage data sharing across the app",
        "Theme your Apps using SASS",
        "Store data offline with SQL Storage",
        "Consume APIs and JSON responses",
        "Simulate server responses",
        "Master Google Map APIs",
        "Latest advances in Ionic 2",
        "Learn Angular 2 and TypeScript",
        "Conquer Angular 2 Components & Directives",
        "Practiced at Angular 2 Page, Pipe, Provider, Service, Dependency Injection and more",
        "Create two real mobile apps for the App Stores",
        "Structure complex apps",
        "Incorporate auto-completion and code-sense with TypeScript and Type Definitions",
        "Publish your app to millions of users",
        "Publish Subscribe in Angular 2",
        "Skills to create any mobile app imaginable",
        "Become a professional mobile app developer",
        "Able to create any mobile app imaginable"
      ],
      "course_content": {
        "Intro to Course": [
          "Intro",
          "Intro to Weather App",
          "Intro to Uber App"
        ],
        "Weather App": [
          "Introduction",
          "Create an Ionic 2 App",
          "Add Weather Modal",
          "Create a Service to Fetch Weather from an API",
          "Display Weather from Multiple Cities",
          "Convert Kelvin Temperature to Celsius/Fahrenheit Using a Pipe",
          "Drill Down to 7-Day Forecast",
          "Show Local Weather Using Geolocation",
          "Create Reusable Weather Component",
          "Persist Weather Offline",
          "Give It Some Style",
          "Publish to iOS App Store",
          "Publish to Android Google Play Store"
        ],
        "Uber App": [
          "Intro",
          "Create App with Google Maps",
          "Google Maps Component",
          "Add Pickup Button",
          "Get Current Location using Geolocation",
          "Add Pickup Marker - Part 1",
          "Add Pickup Marker - Part 2",
          "Available Cars - Part 1",
          "Available Cars - Part 2",
          "Pickup Car - Part 1",
          "Pickup Car - Part 2",
          "Pickup Car - Part 3",
          "Publish & Subscribe Service",
          "Destination - Part 1",
          "Destination - Part 2",
          "Rate the Driver",
          "Prepare App to Publish",
          "Publish to Android Google Play Store",
          "Publish to iOS App Store",
          "Publish to Windows"
        ]
      },
      "requirements": [
        "Download & Install XCode and Android Studio",
        "Install Code Editor (like Visual Studio Code)",
        "You should be familiar with HTML, CSS, and JavaScript",
        "Familiarity with Ionic and Cordova will make the course easier, but it's not necessary"
      ],
      "description": "Learn Ionic 2 with two in-depth, step-by-step mobile apps. Updated for Ionic 2 beta 10.\nThere is a large, active Ionic community that has developed over a million apps. Ionic 1 has attracted a lot of people because it leveraged existing technologies that developers were familiar with on the web to create mobile apps. With the new advances in Angular 2 and TypeScript, Ionic 2 changes how we develop hybrid, mobile apps. Fortunately, this course teaches these new frameworks as you develop apps in an easy progression that will have you writing Ionic 2 apps within a couple hours.\n\nAs the video progresses, viewers will learn how to get the best of both worlds in terms of using Ionic and Angular together to create stunning apps with interactive UIs and real-time functionality.\nBy the end of this course, a viewer will be a professional Ionic 2 developer with the skills and deeper understanding to create any app imaginable.",
      "target_audience": [
        "Ideal student would have some experience with Ionic",
        "NOT for developers new to Javascript/HTML/CSS",
        "Ionic 1 developers wanting to get their hands dirty with Ionic 2",
        "Ionic 2 beginners will progress to intermediate and advanced skills",
        "Existing mobile web developer wanting to learn the new Ionic framework",
        "Desire concrete step-by-step instructions from start to publish",
        "Understand the differences from Ionic 1",
        "Want to stay up-to-date with Ionic 2",
        "Stuck at simplistic Ionic 2 examples like the ToDo App? Take this course!"
      ]
    },
    {
      "title": "Flutter - Firebase - SQLite : Multi-store App (Full - Deep)",
      "url": "https://www.udemy.com/course/flutter-multi-store/",
      "bio": "Building E-Commerce Multi Shop App from scratch with Flutter , Dart , Firebase, mysql and Stripe payment Gateway",
      "objectives": [
        "How to use flutter widgets and get the most benefits of each widget",
        "How to create a new firebase project and install it to IOS and Android.",
        "How to allow Users to Authenticate with your application .",
        "How to allow suppliers to upload Products to their stores or to application in general",
        "How to Stream Data again from firebase Cloud to your application and arrange them in pages and categories",
        "How to allow Customers to Add Items to Cart and help them to place an Order",
        "How to make your application intelligent and treat the input data we are getting from users",
        "How to Integrate Stripe Payment Account and link it to your application to receive payments",
        "How to add animations to your design",
        "How to save data locally into SQL Database",
        "How to Push Notifications Automatically to suppliers and customers to keep track of their orders"
      ],
      "course_content": {
        "Introduction": [
          "intro of [ v1.0 ]",
          "Previewing & Testing App [ v 1.0 ]"
        ],
        "layout ******[ V 1.0 ]": [
          "Section Summary",
          "Migration to Flutter 3",
          "Set your Starting Project",
          "Understanding -counter example-",
          "Bottom Navigation Bar",
          "Home Screen Design",
          "Search Bar",
          "category screen [ Stack Wdiget]",
          "Category Screen [Side Naviagtor]",
          "Category Screen [category view]",
          "Category Screen [grid view]",
          "Subcategory Products Screen",
          "Adding SliderBar",
          "Refactoring Code",
          "Adding Category Screens",
          "Fonts & Appbar Widgets",
          "Stores Screen",
          "Cart Screen",
          "Customer Profile Screen p1",
          "Customer Profile Screen p2",
          "Customer Profile Screen p3",
          "Supplier Home Screen",
          "Dashboard Screen",
          "Welcome Screen p1",
          "Welcome Screen p2",
          "Welcome Screen p3[ Animations ]",
          "Navigations",
          "Adding Dashboard Screens [Problem]",
          "Dashboard Screens [Solution]",
          "Adding Customer Screens [Cart problem]",
          "Navigating to Cart Screen [ solution ]"
        ],
        "Firebase Authentication [ Level 1 ]": [
          "Section Summary",
          "Authentication Form Design",
          "Refactor Code",
          "show / hide password typing",
          "Text Form Field Validation",
          "RegExp",
          "How to display this format in app ( 123,456,789.99 ) using RegExp",
          "Saving Data into variables",
          "SnackBar Class",
          "Image Picker",
          "Create Firebase Project",
          "Install firebase for Android",
          "Install Firebase for IOS",
          "Login Anonymously",
          "Logout",
          "Signup",
          "Uploading Customer Info.",
          "Firestore cannot be enabled ?",
          "Adding Loading Indicator",
          "Login",
          "previewing Customer info. in his profile",
          "Supplier Authentication",
          "Anonymous User Info. [ problem ]",
          "Anonymous User info. [ Solution ]"
        ],
        "Upload Product [ Cloud Firestore ]": [
          "Section Summary",
          "Uploading Form Design",
          "Text Form Validation",
          "Saving Data into Variables",
          "Pick Multiple Images",
          "Edit Picked Images",
          "Drop Down Button p1",
          "Drop Down Button p2",
          "Drop Down Button p3",
          "Drop Down Button p4",
          "Upload Product Images",
          "Upload Product info. [ problem ]",
          "Upload Multiple Images [ Solution ]",
          "Naming Product Document",
          "Adding Loading Spinner"
        ],
        "Streaming Data to Application": [
          "Section Summary",
          "Uploading Real Products",
          "Stream Products",
          "Product Model",
          "Adding Gallery Screens",
          "Product Details Screen",
          "Passing product info. to Details Screen",
          "Full Screen View p1",
          "Full Screen View p2",
          "Streaming Stores",
          "Visit Store",
          "Follow / Unfollow Store",
          "Current Supplier's Store",
          "Adding Edit Store Button",
          "Adding Contact Supplier Button",
          "Anonymous Login [ problem ]",
          "Anonymous Login [ solution ]"
        ],
        "State Management [ Add To Cart - Wishlist ]": [
          "Section Summary",
          "Product Class",
          "Provider [ Consumer ]",
          "Cart Model",
          "Increment Item Quantity",
          "Limit of Quantity",
          "Check if Existing in Cart",
          "Remove Item & Clear Cart",
          "Calculate Total Price",
          "Add to Wishlist & Delete",
          "Add or Remove Item [ Wishlist ]",
          "Move Item from wishlist to Cart",
          "Move Item from Cart to wishlist",
          "Refactoring Code",
          "Adding Badge to Cart Icon"
        ],
        "Checkout & Upload Order": [
          "Section Summary",
          "Place Order p1",
          "Place Order p2",
          "Payment Screen p1",
          "Payment Screen p2",
          "Confirm Order",
          "Upload order info. [Boss Problem]",
          "Update Quantity for Products [solution]",
          "Loading Dialog (progress package)",
          "Check if item out of stock",
          "Streaming customer Orders",
          "Expansion Tile ( Customer Order Model )"
        ],
        "Dashboard Components": [
          "Section Summary",
          "Streaming Supplier Orders",
          "Supplier Order Model",
          "Shipping (Date Picker) & Delivered",
          "Adding Badge To Supplier Dashboard",
          "Statics Screen UI",
          "Streaming Store Statics",
          "Count Up Animation",
          "Balance Screen"
        ],
        "Adding Discount to products": [
          "Section Summary",
          "Adding Discount Field & Validation",
          "Calculate Price After Discount",
          "Passing Sale Price to Cart/Favourites"
        ],
        "Search Engine ====== end of v1.0": [
          "Section Summary",
          "Streaming Products in Search Screen",
          "Filtration Search Results",
          "Product Search Model"
        ]
      },
      "requirements": [
        "Computer, internet and little previous Knowledge about flutter and dart"
      ],
      "description": "Nowadays we live the age of e-commerce applications we can sell and shop anywhere around the world\nIn parallel with going through new technologies everyday so that’s why this course was built.\nBuilding this kind if applications is the most convenient way to grow up your programming skills and your way of thinking as well\nGoing through this course will take you to another level of skills and thinking\nAnd also solving problems , so don’t miss a deal to dream your next design and lead it to professional zone\nhere you will learn :\nHow to use flutter widgets and get the most benefits of each widget.\nHow to create a new firebase project and install it to IOS and Android.\nHow to allow Users to Authenticate with your application .\nthey can Signup , Login , Logout\nHow to allow suppliers to upload Products to their stores or to application in general.\nHow to Stream Data again from firebase Cloud to your application and arrange them in pages and categories.\nHow to allow Customers to Add Items to Cart and help them to place an Order.\nHow to make your application intelligent and treat the input data we are getting from users.\nHow to Integrate Stripe Payment Account and link it to your application to receive payments Online\nHow to add Animations to your design.\nHow to save data locally on device which application is running on - SQL DATABASE -.\nHow to Push Automated Notifications to different Devices.",
      "target_audience": [
        "People who have little previous experience in flutter basics"
      ]
    },
    {
      "title": "The Ultimate 70+ Hours iOS Development Bootcamp",
      "url": "https://www.udemy.com/course/the-ultimate-60-hours-ios-development-bootcamp/",
      "bio": "Beginner to Senior Developer! SwiftUI, MV Pattern, Core Data, SwiftData, Vapor, MapKit, Testing, Combine and much more!",
      "objectives": [
        "Master the modern declarative UI framework provided by Apple to create beautiful and responsive user interfaces effortlessly.",
        "Understand and implement the Model-View design pattern to structure iOS apps for scalability, maintainability, and reusability.",
        "Unlock the potential of Core Data to efficiently manage complex data models and enable seamless data persistence within iOS applications.",
        "Utilize Swift's powerful features to manipulate data effectively, including sorting, filtering, and querying.",
        "Integrate MapKit into iOS apps to provide immersive and interactive mapping experiences, including annotations, overlays, and geolocation.",
        "Learn best practices for testing iOS applications, including unit tests, integration tests, and UI tests, to ensure reliability and quality.",
        "Explore Firebase services such as Firestore, Authentication, and Cloud Messaging to enable real-time data synchronization and user authentication in iOS apps.",
        "Dive into server-side Swift development using Vapor to build robust web APIs and backend services, including RESTful APIs, authentication, and database interact"
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with programming concepts such as variables, loops, conditionals, and functions in any programming language.",
        "Some prior experience or knowledge of Swift programming language basics would be beneficial, although not mandatory.",
        "Access to a Mac computer running macOS, as iOS development primarily requires Xcode, which is only available on macOS.",
        "Installation of the latest version of Xcode, Apple's integrated development environment (IDE) for iOS app development, available for free on the Mac App Store.",
        "A strong willingness to learn and dedication to completing the course exercises and projects to reinforce understanding and skills development."
      ],
      "description": "Welcome to \"The Ultimate iOS Development Bootcamp,\" where your journey into the world of iOS app development begins. This comprehensive course, spanning over 70+ hours of high-definition content, is meticulously crafted to guide you from novice to expert in the art of building powerful and intuitive iOS applications.\n\n\nWhat You'll Learn:\n\n\n1. SwiftUI Fundamentals:\nDive into the modern declarative UI framework provided by Apple, SwiftUI. Learn how to create beautiful and responsive user interfaces with ease, leveraging SwiftUI's intuitive syntax and powerful features.\n\n\n2. Model-View Design Pattern:\nUnderstand the importance of architectural design patterns in iOS development and master the Model-View pattern. Explore how to structure your apps for scalability, maintainability, and reusability.\n\n\n3. Combine Framework:\nLearn how to use Apple's Reactive Framework, Combine in your applications.\n\n\n4. Core Data:\nUnlock the potential of Core Data, Apple's framework for persistent data storage. Discover how to seamlessly integrate Core Data into your apps to manage complex data models efficiently.\n\n\n5. SwiftData Manipulation:\nHarness the power of Swift to manipulate data effectively within your iOS applications. Explore advanced techniques for data handling, including sorting, filtering, and querying.\n\n\n6. MapKit Integration:\nLearn how to integrate MapKit into your apps to provide immersive and interactive mapping experiences. Explore features such as annotations, overlays, and geolocation to create location-aware applications.\n\n\n7. Testing Methodologies:\nMaster the art of testing in iOS development to ensure the reliability and quality of your applications. Discover best practices for writing unit tests, integration tests, and UI tests to validate your app's behavior.\n\n\n8. Firebase Integration:\nExplore Firebase, Google's comprehensive platform for app development, and learn how to integrate it into your iOS projects. Discover how to leverage Firebase services such as Firestore, Authentication, and Cloud Messaging for real-time data synchronization and user authentication.\n\n\n9. Server-Side Swift with Vapor:\nDive into server-side Swift development with Vapor, a powerful framework for building web APIs and backend services. Learn how to create RESTful APIs, handle authentication, and interact with databases using Swift on the server side.\n\n\nCourse Structure:\n- Structured Curriculum: Follow a carefully designed curriculum that progresses from foundational concepts to advanced topics, ensuring a seamless learning experience.\n- Expert Instruction: Benefit from expert instruction from industry professionals with years of experience in iOS development, who will guide you every step of the way.\n\n\nWho Is This Course For?\n\n\nWhether you're a complete beginner eager to dive into iOS development or an experienced programmer looking to enhance your skill set, this bootcamp is for you. With its comprehensive coverage of iOS development topics, this course caters to learners of all levels.\nEmbark on this exhilarating journey into the world of iOS app development and unlock your potential to create innovative and impactful applications. Join us in \"The Ultimate iOS Development Bootcamp\" and take the first step towards building a successful career as an iOS developer.",
      "target_audience": [
        "Individuals who are new to iOS development and want to learn from the ground up.",
        "The CMS adheres to the NQF definition that never events are (1) errors in medical care that are clearly identifiable and preventable, (2) serious in their consequences for patients, and (3) indicate a real problem in the safety and credibility of a healthcare facility (CMS, 2006). To be included, the event has to be unambiguous or clearly identifiable and measurable, and thus feasible to include in a reporting system. The event is usually preventable, which recognizes that some events are not always avoidable. The effect is serious in that it results in death or loss of a body part, disability, or more than transient loss of a body function. Finally, the event’s impact is either adverse and/or indicative of a problem in a healthcare facility’s safety systems and/or important for public credibility or public accountability (CMS, 2006).",
        "College students or individuals studying computer science or related fields who want to specialize in iOS app development.",
        "Professionals working in the tech industry who want to expand their skill set and stay updated with the latest trends and technologies in iOS development.",
        "Aspiring entrepreneurs who want to build their own iOS apps or understand the development process to better communicate with their development teams.",
        "Individuals looking to switch careers and pursue opportunities in iOS development.",
        "Anyone who has a passion for iOS devices and apps and wants to learn how to build their own applications for iPhone, iPad, and other Apple devices."
      ]
    },
    {
      "title": "iOS 9 and Swift 2: From Beginner to Paid Professional™",
      "url": "https://www.udemy.com/course/ios9-swift/",
      "bio": "The BEST online iOS 9 Swift 2 course online. Lets learn iOS 9 & Swift 2",
      "objectives": [
        "Apply to Jr iOS development jobs",
        "Build apps at your current development job",
        "Master iOS 9",
        "Master Swift 2",
        "Build and release iOS 9 & Swift 2 apps to the Apple App Store"
      ],
      "course_content": {
        "Installation, Setup, Git, and Your First App": [
          "Student Success Story",
          "How to Run Mac on a PC",
          "DO NOT SKIP THIS VIDEO",
          "Apple Developer Account & Xcode Installation",
          "Increase & decrease Xcode font size dynamically",
          "Intro to iOS 9 App",
          "iOS 9 App: Your First App!",
          "Student Orientation - Things you NEED to know",
          "Learning Resources - Train Your Brain!",
          "Intro to Swift 2",
          "Swift 2 Variables & Constants",
          "Swift 2 Comments & Semi-Colons",
          "Swift 2 Numbers & Type Safety",
          "Exercise - Building an iOS App on Your Own",
          "Exercise - Variable Operations",
          "Terminal Basics",
          "Version Control",
          "Git Basics",
          "Working With Github",
          "Exercise - Pushing Your Project to Github",
          "Quiz 01"
        ],
        "Moving Forward with Swift and iOS": [
          "Warmup",
          "Swift 2 Conditionals (if / else) Part 1",
          "Swift 2 Conditionals ( && || ) Part 2",
          "Swift 2 Functions",
          "Exercise - Functions",
          "iOS 9: Auto Layout Basics",
          "iOS 9: Auto Layout (Digging Deeper)",
          "Exercise - Auto Layout",
          "Intro to iOS 9 App",
          "iOS 9 App: Tapper",
          "Exercise - Multiples App",
          "Quiz 02"
        ],
        "Progressing With iOS: Arrays, Loops, Audio, & an Awesome App": [
          "Warmup",
          "Swift 2 Arrays",
          "Swift 2 Loops",
          "Swift 2.2 Loops Update",
          "Exercise - Arrays & Loops",
          "iOS 9: Intro to Stack View",
          "Exercise - Stack Views",
          "Intro to iOS 9 App",
          "iOS 9 App: Retro Calculator Part 1",
          "iOS 9 App: Retro Calculator Part 2",
          "Exercise - Enhancing our Calculator",
          "Quiz 03"
        ],
        "Being a Better Coder: OOP, Dictionaries, & Proper Programming": [
          "Warmup - BooYa",
          "Swift 2 Dictionaries",
          "Intro Object-Oriented Programming & Classes",
          "Inheritance",
          "Polymorphism",
          "Swift 2 Optionals Part 1",
          "Intro to iOS 9 App",
          "iOS 9 App: Building a Simple APP With OOP",
          "Exercise - Build an App Using OOP",
          "Intro to iOS 9 App",
          "iOS 9 App: My Little Monster Part 1",
          "iOS 9 App: My Little Monster Part 2",
          "iOS 9 App: My Little Monster Part 3",
          "iOS 9 App: My Little Monster Part 4",
          "Exercise - Enhancing Your Gigapet"
        ],
        "Finishing Foundational Swift & Mastering Basic iOS": [
          "Model View Controller (MVC)",
          "UIViewController",
          "Size Classes Part (Different Layouts for Screen Sizes)",
          "Exercise - Size Classes",
          "UITabBarController",
          "Storyboard Segues",
          "App: Building a No-Storyboard App (XIBs)",
          "Exercise - No Storyboards",
          "Subclassing Views (Custom UIView)",
          "Intro to App",
          "App: Favorite Place",
          "Exercise - Your Own Favorite Place"
        ],
        "Tables & Data": [
          "Swift 2 Enums",
          "Swift 2 Extensions",
          "UITableViewController",
          "WKWebView",
          "App: Ugly Stuff - Custom TableView and Custom Cells",
          "NSUserDefaults",
          "UINavigationController",
          "App: The Walking Dead (UIScrollView)",
          "Intro to App",
          "App: MyHood Part 1",
          "App: MyHood Part 2",
          "App: MyHood Part 3",
          "Intro to App",
          "App: Recipez Part 1 (Core Data)",
          "App: Recipez Part 2 (Core Data)",
          "Student Showcase",
          "Exercise - Favorite Movies"
        ],
        "**NEW** Maps & GPS": [
          "DevCamp iOS 9 App: Creating the project",
          "DevCamp iOS 9 App: Working with user location",
          "DevCamp iOS 9 App: Zooming in on the map",
          "DevCamp iOS 9 App: Annotations & Geocoding"
        ],
        "Web Requests": [
          "How Web Requests Work",
          "Working with POSTMAN",
          "Web Requests (NSURLSession)",
          "**Important Update For Next Lecture**",
          "Cocoapods",
          "JSON"
        ],
        "Microsoft Cognitive Services: Facial Recognition": [
          "Intro to Cognitive Services",
          "Signing Up & API Keys",
          "Setting Up A Server With Images",
          "Creating the UI",
          "Implementing the Collection View",
          "Downloading Images from the Server",
          "Working with UIImagePicker",
          "Understanding Microsoft Cognitive API Docs",
          "Implementing the Microsoft Cognitive iOS SDK",
          "Using the Microsoft Cognitive Face Detect API",
          "Selecting the Image to Detect",
          "Verifying Results with Microsoft Cognitive Face API",
          "Missing Persons Exercise & Source Code"
        ],
        "Pokedex": [
          "Intro to App: Pokemon Pokedex",
          "App: Pokedex Part 1 - Project Setup, Images, Data, Github",
          "App: Pokedex Part 2 - Creating a Pokemon Class",
          "App: Pokedex Part 3 - UICollectionView, Storyboard Layout",
          "App: Pokedex Part 4 - Custom UICollectionViewCell",
          "App: Pokedex Part 5 - UICollectionViewDelegate, Data Source, Flow Layout",
          "App: Pokedex Part 6 - Parsing CSV Files",
          "App: Pokedex Part 7 - Audio & Custom Font",
          "App: Pokedex Part 8 - UISearchBar, Search Filtering",
          "App: Pokedex Part 9 - Detail View Controller & Segue",
          "App: Pokedex Part 10 - UIStackView & The Detail View Controller",
          "App: Pokedex Part 11 - IBOutlets Detail View Controller, Updating Class",
          "App: Pokedex Part 12 - The API, Github, Cocoapods, Alamofire",
          "App: Pokedex Part 13 - Downloading & Parsing Data",
          "App: Pokedex Part 14 - Completing the App",
          "Exercise - Weather App",
          "Weather App Solution"
        ]
      },
      "requirements": [
        "Mac or PC running OSX",
        "You should be very familiar with computers and Mac OSX",
        "You should be able to type at least 50 WPM",
        "Familiarity with basic programming principles such as Functions, Loops, Types, and Classes is helpful but not required",
        "No experience with Swift 2 or iOS 9 needed!"
      ],
      "description": "iOS 9 and Swift 2 developers are some of the highest paid coders throughout the planet right now. There couldn't be a better time to join the world of app development.\nAbout this iOS 9 & Swift 2 Course\nYou are going to learn everything you need to know to be able to work professionally as a Jr. iOS 9 developer. Even if you aren't interested in a career change this course will give you the necessary skills to build and publish iPhone and iPad apps to the Apple App Store.\nAll concepts and apps built within this course are designed with careful purpose. You won't be learning some obscure concept just to learn that concept - you will learn the technologies and principles that actually matter when building professional applications.\nYou will learn Swift 2 and iOS 9.\nWhy Choose this iOS 9 & Swift 2 Course?\nSo many programming courses are built by people who are just looking to make a buck. They learn the coding skills literally right before they teach them! I am a professional iOS developer and have built 58 mobile apps to date with both Swift 2 and Objective-C. I also am a professional instructor at a coding bootcamp. I know what skills you will use in the industry (It is so important to learn Swift). I know how to help you learn. Most importantly, I am most interested in helping you change careers and/or increase your income.\nStudents I have helped have jumped from as little as $32,000 a year to $85,000 a year in a matter of months.\nOther courses take you from A-Z teaching you each iOS concept one by one. This is not effective for retaining knowledge - information overload. This course will teach you iOS 9 and programming concepts in the order of importance - what potential employers are looking for and the core skills you need to make professional applications. Then you will test against those principles and build exercises to practice what you have learned. We will cover all of iOS 9 and Swift 2, but everything is prioritized for your benefit.\niOS 9 & Swift 2 Course Structure\nYou should watch the concepts and follow along building what we build in the videos. Then build the exercises and do the warmups on your own. If you really want to become a great iOS & Swift developer watch the concepts, and then do the exercises, warmups, and quizzes.\nWarmups\nWarmups will help you learn how to think like a programmer and are more algorithmic based. It is important to keep training your brain.\nQuizzes\nThis course will be treated as closely to an live in-person course as possible. After each core principle is taught you will be given real industry-standard interview questions, meaning questions that you would likely be asked in a iOS development job interview.\nExercises\nAt the end of each core principle you will be given an exercise that you must build that demonstrates the skills you have just learned.\nTestimonials for this iOS 9 & Swift 2 Course\n\"This course helped me to get my first job as an iOS Developer, I am really happy with it, it is the best course you can get if you want to switch careers and make cool stuff with Xcode and Swift. It really covers everything you need.\" - Rigoberto\n\n\"Mark has helped me learn several technologies. Not only he has wide array of technologies under his belt but also he has amazing teaching skills. Every class Mark taught, class material was covered step by step and with implementation. That really helped me understand what I was learning. Moreover, he is energetic and passionate about making learning process fun.\" - Amit Chaudhari\n\"It is obvious that he is passionate about teaching coding. He makes sometimes dry subjects very entertaining with his humor and overall teaching style. He never loses patience with students and takes the time to make sure you understand.\nMark also goes the extra mile with students. Whenever I would be stuck or in need of help on a project he would take time to help me. I was lucky he took the time to get to know me and assist in the understand subjects I had difficulty with.\" - Jacob Evans\n\"...More impressive is his ability to teach. He's patient, optimistic, and able to take complex ideas and teach them with examples and in ways that are digestible, energetic, and fun. He's taught bootcamps and mentored many developers that I know. As a teacher and mentor, I couldn't give anyone a higher recommendation. If you can enlist his tutelage, you're in good hands.\" - Jonathan Wood\n\"Mark is a smart, experienced, patient mentor, teacher and iOS Engineer. As I have gone from knowing nothing about iOS to full fledge iOS engineer Mark has been there every step of the way to both guide and encourage.\" - Pearson Basham creator of NoThyme iOS App\n\"He has this way of teaching that captivates your attention and makes all the ones and zeros come to life. Mark taught me that learning computer science doesn't have to be the way it was in college, simply put: boring, time-consuming, and overwhelming. He mentored me in the course materials and I am an even better developer today and I make a lot more money too, all because of the example Mark set and the individual time he spent with me.\n\nSeriously, an hour spent with this man teaching you technical subjects will be worth 100 hours spent in another course or bootcamp taught by someone else\" - Erik Slack",
      "target_audience": [
        "The Swift 2 language portion of the course will emphasize core programming principles (learn programming through Swift) which may feel too slow for advanced programmers. All other iOS 9 concepts are taught for all skill levels.",
        "This course is designed for people with little or no programming experience who are focused on changing careers, getting a promotion, or who desire to build iOS 9 & Swift 2 apps professionally. Existing programmers looking to become professional iOS developers will also find this course incredibly valuable. Though comprehensive, this course is structured to teach you practical iOS development skills that you will use on a regular basis in a career setting, so if you are looking to learn less common iOS 9 concepts then this course might not be for you."
      ]
    },
    {
      "title": "iOS 12 & Xcode 10 - Complete Swift 4.2 & Objective-C Course",
      "url": "https://www.udemy.com/course/ios-12-xcode-10/",
      "bio": "A Complete iOS 12 and Xcode 10 Course with Swift 4.2 & Objective-C",
      "objectives": [
        "Full understanding of Xcode 10 and all it has to offer",
        "Learn how to program for IOS 12 to create your own apps",
        "Create fully featured games",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS 12 development",
        "Develop in Objective-C and Swift 4.2",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started with iOS 12 and Xcode 10": [
          "Download and Installing Xcode 10",
          "Navigating Xcode 10",
          "Adding Objects to the Interface Builder",
          "Creating Actions and Outlets",
          "Coding in the Classes",
          "Using the iOS 12 Simulators",
          "Creating My First iOS 12 Application",
          "My First iOS 12 Application Source Code",
          "Building to a Real Device"
        ],
        "Programming in Swift 4.2 - Learning the Basics": [
          "Swift 4.2 Vars vs Lets - Variables vs Constants",
          "Swift 4.2 Strings",
          "Swift 4.2 Emojis",
          "Swift 4.2 Characters",
          "Swift 4.2 Ints - Integers",
          "Swift 4.2 Floats & Doubles - Decimals 32 & 64 bit",
          "Swift 4.2 Booleans",
          "Swift 4.2 Arrays",
          "Swift 4.2 Dictionaries",
          "Swift 4.2 Sets",
          "Swift 4.2 If Statements",
          "Swift 4.2 AND and OR Statements",
          "Swift 4.2 For Loops",
          "Swift 4.2 While Loops",
          "Swift 4.2 Switch Statements",
          "Swift 4.2 Functions",
          "Swift 4.2 Optionals"
        ],
        "Swift 4.2 Creating Functions": [
          "Displaying Text within the Application",
          "Dismissing the Keyboard from the View",
          "Changing the Text Properties",
          "Displaying External Custom Fonts",
          "iOS 12 APP: Fancy Text Creator Application",
          "Fading and Revealing Objects",
          "Hiding and Revealing Objects",
          "Enabling and Disabling Objects",
          "Creating and Using NSTimers",
          "Displaying the Time and Date",
          "iOS 12 APP: Digital Clock Application"
        ],
        "Swift 4.2 Reaction Based Games": [
          "iOS 12 APP: Traffic Lights Game Part 1 - Creating the Interface",
          "iOS 12 APP: Traffic Lights Game Part 2 - Adding the Functionality",
          "iOS 12 APP: Tap Me Fast Reaction Based Game Part 1 - Creating the Interface",
          "iOS 12 APP: Tap Me Fast Reaction Based Game Part 2 - Adding the Functionality"
        ],
        "Swift 4.2 Random Generators": [
          "Creating a Random Number Generator",
          "iOS 12 APP: Roll of a Dice Application",
          "Creating a Random Word Generator",
          "iOS 12 APP: Random Facts Application",
          "Creating a Random PList Generator",
          "iOS 12 APP: Random Car Statistics Applications"
        ],
        "Swift 4.2 Creating Actions": [
          "Creating a Action with a Button",
          "Delaying Actions with a Timer",
          "Toggling Actions with UISwitches",
          "Using UISegmentedControls",
          "Controlling Actions with UISliders",
          "Displaying UIActionSheets",
          "Creating URL Links to Websites"
        ],
        "Swift 4.2 Calculation Applications": [
          "iOS 12 APP: Calculator Application Part 1 - Creating the Interface",
          "iOS 12 APP: Calculator Application Part 2 - Adding the Functionality",
          "iOS 12 App: Temperature Calculator Part 1 - Creating the Interface",
          "iOS 12 App: Temperature Calculator Part 2 - Adding the Functionality"
        ],
        "Swift 4.2 Gesture Based Games": [
          "Detecting Shake Gestures with the Device",
          "iOS 12 APP: Shake Me Silly Part 1 - Creating the Interface",
          "iOS 12 APP: Shake Me Silly Part 2 - Adding the Functionality",
          "Detecting Swipe Gestures on the Screen",
          "iOS 12 APP: Simon Says Part 1 - Creating the Interface",
          "iOS 12 APP: Simon Says Part 2 - Adding the Functionality"
        ],
        "Swift 4.2 Displaying Views": [
          "Using UIViews",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Designing Interfaces with UIStackViews",
          "Switching to a New Storyboard View",
          "Switching to a New XIB View",
          "Changing the Status Bar Colour",
          "Removing the Status Bar",
          "Using UIPickerViews",
          "Using UIDatePickerViews"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 10"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad iOS 12 Apps but are not sure where to start or even begin? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is the perfect course for you!\nThis iOS 12 and Xcode 10 - Complete Swift 4.2 & Objective-C Guide will give you everything your need to start your new career in IOS 12 development, The course has been structured to support Swift 4.2 and Objective-C, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nCreate Over 25 Real iOS 12 Applications throughout the course from fun and simple games to powerful utility apps using the native features of IOS 12 devices to help you understand the process of creating applications within Swift 4.2 and Objective-C.\nCreate Sticker Pack & iMessage Applications One of the many amazing features iOS 12 application development allows you can create your own iMessage extensions and sticker pack applications.\nSell Your App to Millions of Users and earn extra revenue from Ad networks, Making money has never been so easy!\nNot only do you get the best online IOS 12 development course online but you also get first class responsive support by email, Twitter or on the forums, So you can rest assure you have full guidance in your new career!\nWhy Choose My Course?\nMy names Aaron Caines and i have created over 15+ Best Selling iOS courses for Swift 4.2 and Objective-C, if you have already enrolled into one of my courses int he past you already know how exciting and fun they can be and how jam packed they are with information!\nIf this is your first time seeing one of my courses you can expect to see reviews like this:\n***** \"i owe this guy a beer. this guy is the best ios teacher here . ive returned many videos . hope you could make an advanced course. i could totally work with the instructor\" - No Basic S\n***** \"the course is very well done and addictive, it teaches a lot of notions very very useful in a very clear way. great!\" - Luca Torroni\n***** \"The course is clear and detailed. Covers a good range of functions for almost any kind of app. My go-to course whenever I am unsure how to implement features!\" - Loh Chung Kit\n***** \"This is one great course indeed! I truly enjoy Aaron's teaching style. He is so easy to follow and understand. Great for beginners and intermediates. I am finally seeing my app come to life!\" - Annabelle Ramos\nWhy Choose This iOS 12 & Xcode 10 Course?\nMany programmers learning to create there first iOS 12 application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This iOS 12 & Xcode 10 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 10 and to offer any advice needed and before you know if you will have created your first iOS 12 app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode 10, iOS 12, Interface Builder, Simulator and Project Types\nLanguage basics and building blocks\nSwift 4.2: Get to know the new updated language\nObjective-C: Full guide to creating full featured apps\nCreate over 25 real iOS 12 applications in both languages\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nPlaying and Streaming Video Support\nFull Featured iOS 12 Apps\nEarning Revenue Ad Networks\nIn App Purchases\nFun and Simple iOS 12 Games\nCore Data Applications\nCamera Support Applications\nSticker Pack Applications\niMessage Extensions\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to learn Swift 4.2",
        "Anyone who wants to learn Objective-C",
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS 12 Apps",
        "Anyone looking for a new career"
      ]
    },
    {
      "title": "Advanced iOS & Firebase: Rideshare",
      "url": "https://www.udemy.com/course/advanced-ios-firebae-build-an-uber-clone-app/",
      "bio": "Learn advanced iOS & Firebase by building your very own full stack Uber clone App",
      "objectives": [
        "Build a full-stack Uber clone - Both driver and user, custom UI, maps, GPS - everything!re an absolute beginner to macOS development then take this course",
        "Beginner to advanced Firebase - real time location tracking and data storage of GPS coordinates",
        "Master Apple MapKit - custom annotations, search, real time location tracking and more",
        "Advanced iOS development techniques - custom animation, code management, UI design, back-end data management"
      ],
      "course_content": {
        "Intro to App & Building App UI": [
          "Intro to Course - Uber clone app",
          "iOS App: Xcode Project Creation",
          "iOS App: Building HomeVC’s User Interface",
          "iOS App: Creating Custom View Subclasses for HomeVC",
          "iOS App: Creating a Sliding Tray Menu with ContainerVC",
          "iOS App: Creating a UIView Extension",
          "iOS App: Building LoginVC’s User Interface",
          "iOS App: Creating Custom View Subclasses for LoginVC",
          "iOS App: Adding RevealingSplashView"
        ],
        "Setting Up Firebase & Configuring Authentication": [
          "Firebase: Creating project in Firebase & adding it to Xcode",
          "Firebase: Creating a DataService Singleton",
          "Firebase: Enabling Sign In and Authentication",
          "Firebase: Configuring Side Menu Changes Based On Account Type"
        ],
        "Advanced iOS & Firebase: Displaying Users on MapView": [
          "Advanced iOS: Configuring Location Services and Permissions",
          "Advanced iOS: Creating an UpdateService Singleton",
          "Advanced iOS: Creating the DriverAnnotation Subclass",
          "Advanced iOS: Loading Instances of Driver from Firebase",
          "Advanced iOS: UX Improvement 1: CenterMapButton Improvements",
          "Quiz 1"
        ],
        "Advanced iOS & Firebase: Search Functionality": [
          "iOS App: Setting up UITextFieldDelegate Methods",
          "iOS App: Searching for Nearby Locations",
          "iOS App: UX Improvement 2: Animating and Hiding UITableView",
          "iOS App: Selecting A Search Result",
          "iOS App: Dropping A Pin For The User’s Desired Destination",
          "iOS App: Showing Trip Route",
          "iOS App: UX Improvement 3: Loading View",
          "iOS App: Removing Destination Coordinate from Firebase",
          "iOS App: Zooming in on MKMapView",
          "iOS App: Showing Alerts",
          "Quiz 2"
        ],
        "Advanced iOS & Firebase: Configuring Ride Experience": [
          "iOS App: Building PickupVC in Interface Builder",
          "iOS App: Allowing Passengers To Request Trips",
          "iOS App: Allowing Drivers to Accept Trips",
          "iOS App: Showing Routes and Annotations",
          "iOS App: Allowing a Passenger or Driver to Cancel Trip",
          "iOS App: Modifying Function to Show and Zoom Routes",
          "iOS App: Fixing and Removing Duplicate Overlays on MKMapView"
        ],
        "Advanced iOS & Firebase: Configuring Start & End a Trip": [
          "iOS App: Setting up CLRegion for Passenger and Destination",
          "iOS App: Making the Action Button ‘Smart’",
          "iOS App: Starting a Trip"
        ],
        "Advanced iOS & Firebase: Wrapping Up": [
          "Finishing the Ride Share App: Getting Directions with Apple Maps",
          "Ride Share App: Code Cleanup and Creation of Constants File"
        ]
      },
      "requirements": [
        "Must have a computer with OSX or macOS on it"
      ],
      "description": "Advanced iOS & Firebase: Ride Share (Uber clone app)\n\nWelcome to advanced iOS & Firebase development. In this course you'll learn advanced development skills by building a polished full stack and fully functional Uber clone app. We start from the ground up and teach you everything you need to know from UI design and frontend and backend development.\n*BASIC KNOWLEDGE OF SWIFT AND XCODE IS ASSUMED\nWHY TAKE THIS COURSE?\n\nLearning advanced development skills should be taught using real world examples. In this course you're going to learn to code the Devslopes way. We teach by building real world, professional, amazing looking apps from start to finish.\nHere are some of the things you'll be able to do after taking this course:\nUnderstand advanced Firebase backend development\nWork fluently with iOS & Firebase\nApply to jr iOS development jobs\nWork as an iOS contractor\nWho this course is for:\n\nPeople who want to build advanced iOS apps!\nThose who want to create their own startup\nThose looking to get a full time job as a developer\nBusiness owners\nStudents & teenagers\nPeople who want to make money building apps\nIf you are a student of our iOS 11: From Beginner to Paid Professional - or have any other basic understanding of iOS development, then this is a perfect next step to advanced your iOS and Firebase skills.\nWHAT YOU WILL LEARN:\n\nMajor focus on user experience\nSetting up Cocoapods\nCustom View Subclasses\nUIView extensions\nUIViewController extensions\nCreating a sliding menu\nAdvanced Firebase for the backend\nFirebase sign in and authentication\nLocation Services\nSaving and showing real time driver annotations on the map\nUsing Firebase for real time user requests\nMapViews\nAnd much more!\nDon't forget to join the free live community where you can interact with other students and ask questions to the community.",
      "target_audience": [
        "If you have basic experience with iOS development take this course",
        "If you have basic experience with iOS or mobile development then take this course"
      ]
    },
    {
      "title": "Augmented Reality Portal using Apple ARKit framework for AR",
      "url": "https://www.udemy.com/course/arkit-portal-learn-how-to-create-a-portal-using-arkit/",
      "bio": "Augmented reality portals! The most popular and Amazing thing in ARKit iOS 11. Let's learn how to build it.",
      "objectives": [
        "Learn to make Awesome inter dimensional Portal in Augmented reality using ARKit",
        "How to build your own realistic models such as Tv, paintings",
        "Learn to build a well furnished house interior with beautiful wallpapers and wooden flooring",
        "Learn how to detect horizontal planes and how to place objects on them",
        "Learn how to import models in .obj and .dae format to xcode",
        "Learn how to work with sceneKit editor",
        "Learn about lightning"
      ],
      "course_content": {
        "Introduction": [
          "prerequisites",
          "what are we going to make?",
          "Steps to make a portal",
          "Demo code template explanation"
        ],
        "Horizontal Plane detection and placing objects": [
          "Overview",
          "Horizontal plane detection",
          "Placing objects"
        ],
        "Let's make our portal": [
          "overview",
          "prepare Room walls and led Tv",
          "prepare bed asset using blender",
          "preparing side table and lamp",
          "making entrance to our portal",
          "Hiding the interior part - 1",
          "Hiding the interior part - 2"
        ]
      },
      "requirements": [
        "Familiarity with Swift Language and xcode environment",
        "physical iPhone 6s or later",
        "iOS 11(beta or release) installed on your iphone and xcode 9(beta or release) installed on your mac"
      ],
      "description": "Finally the wait is over! People all over the world are so excited to learn how to build a portal in ARKit. So i have put up a course together in which i am going to show you step by step how we can make it.\nIn this course i will be making a portal to a well furnished room.\nIn the process of learning how to make a portal, this course will teach you many concepts required to build Advanced Augmented reality apps using ARKit.\nYou will learn\nHow to make an Awesome portal (of course!)\nHow to Detect horizontal planes and place objects on it.\nHow to import any asset from 3d modeling websites and use it into xcode with the help of blender.\nHow to make your own realistic assets within xcode.\nI will explain each and everything in detail and will tell you the reason behind each and everything that i do.",
      "target_audience": [
        "Anyone who wants to learn how to make Augmented reality apps (specially a portal) using Apple's framework ARKit"
      ]
    },
    {
      "title": "Launch Your Startup Without Code – Build an App in 1 Day",
      "url": "https://www.udemy.com/course/launch-an-app-without-code/",
      "bio": "Build an app and launch your online business in no time using Figma, Adalo, Zapier, and Airtable",
      "objectives": [
        "Quickly validate your business or product idea by building an MVP",
        "Build and launch a website and mobile apps for iOS and Android with Adalo",
        "Design mockups and clickable prototypes with Figma",
        "Gather customer feedback before and after your launch to inform your product strategy",
        "Build beautiful landing pages in 1 hour using Carrd",
        "Set up automated email marketing campaigns with Zapier, Mailchimp and Gmail",
        "Get paid by integrating payments into your app with Stripe",
        "Set up a lightweight CRM system with Airtable",
        "Learn how to use the latest no code tools"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "What You Will Be Able to Make Afterwards",
          "Who Is Your Instructor"
        ],
        "Bringing Your Idea to Life": [
          "Applying a Lean Startup Mindset",
          "Conceptualizing an Idea",
          "Exercise: Flesh Out Your Idea"
        ],
        "Testing Your Idea With Potential Customers": [
          "Intro: What You Will Learn in This Section",
          "Creating a Colour Scheme",
          "Creating Your Own Logo with Canva",
          "Intro to Mailchimp for Audience Building",
          "Building a Landing Page with Carrd",
          "Connecting the Signup Form",
          "Exercise: Create Your Own Website"
        ],
        "Designing Your App": [
          "Intro: What You Will Learn in This Section",
          "Wireframes, Mockups and Prototypes",
          "Essential Resources to Get Started",
          "Resources: Essential Links",
          "Sneak Peek: Final Prototype",
          "Creating a Clickable App Prototype",
          "Sharing the Prototype for Feedback",
          "Exercise: Create Your Own Prototype"
        ],
        "Building Your App": [
          "Intro to No-Code and End Product Sneak Peek",
          "How Adalo Works",
          "Your First Screens",
          "Setting up Signup and Login",
          "Building a Dropdown List",
          "Adding a Navigation Bar",
          "Creating the Main Dashboard",
          "Adding a Create Function",
          "Adding an Edit Function",
          "Adding a Delete Function",
          "Creating a Chart Screen",
          "Updating the User Profile",
          "Adding a Feedback Form",
          "Enabling Payments",
          "Exercise: Create Your Own App"
        ],
        "Connecting & Automating Workflows": [
          "Intro: What You Will Learn in This Section",
          "Setting up a Base in Airtable",
          "Triggered Data Transfer on User Signup",
          "Triggered Email on User Signup",
          "Triggered Email on User Feedback",
          "Exercise: Make Your Life Easier With Automation"
        ],
        "Launching Your App": [
          "Intro: What You Will Learn in This Section",
          "Setting up Analytics with Mixpanel",
          "How to Launch on the Google Play Store",
          "How to Launch on the Apple App Store",
          "Relevant Material to Launch"
        ]
      },
      "requirements": [
        "Anyone with an internet connection can get started right away"
      ],
      "description": "In this hands-on course, you will learn everything you need to know to launch your startup and build a mobile and web app without writing any code.\nGo from idea to App Store launch for iOS or Android within just 2 hours.\nYou don't have to be a software engineer or spend a lot of money hiring one to create your MVP within 1 day to validate your startup or feature idea with real users. This will enable you to learn, iterate, and improve your product quickly, following a lean startup best practice.\nYou will earn all the essential steps to start your product-based business:\nValidating ideas and opportunities\nBuilding your website and visuals with Canva & Carrd\nSetting up your CRM for email marketing with Airtable, Mailchimp & Gmail\nUX / UI design, wireframing and prototyping with Figma\nBuilding your mobile app with Adalo\nEnabling payments with Stripe\nIntegrating analytics to understand your user behavior with Mixpanel\nAutomating workflows and connecting with other apps with Zapier\nYou will be introduced to the latest and most popular no-code tools out there that enable you to build something quickly on your own. At the end of the course, you will be able to launch your own app on the Google Play Store and the Apple App Store.\nGet practical tips and first-hand insights from your instructor Sebastian, who has launched several online businesses himself.\nYou will also get access to our community of makers, where you can share your work and get valuable feedback.\n\n\nYour instructor\nSebastian Hoffmann is a Product Management Leader at DAZN and a former strategy consultant at PwC. Throughout the past nine years, he gained experience in various positions at startups, scale-ups, and corporates. He founded multiple online businesses and is a featured expert in publications such as Wired, NASDAQ, or Hackernoon.\n\n\nWho this course is for\nAspiring entrepreneurs\nSmall business owners\nStartups\nIndie Makers\nProduct Managers\nMarketers\nDesigners\nUX researchers\nCorporate Innovators & Intrapreneurs\nStudents\nAnd even developers!",
      "target_audience": [
        "Anyone who wants to quickly test ideas with an MVP",
        "Entrepreneurs who want to launch an online business",
        "Small business owner who want to create a mobile and web app for their business",
        "UX designers, researchers and marketers who want to validate ideas with real users",
        "Product Managers who want to spin up something quickly without waiting for UX or engineering",
        "Anyone in an organization who wants to share an idea and get stakeholders onboard",
        "Students who want to build something as an assignment",
        "Engineers who don't want to spend too much development effort upfront",
        "Startups with limited budget for engineers"
      ]
    },
    {
      "title": "Dart - from Novice to Expert Complete Course",
      "url": "https://www.udemy.com/course/dart-from-novice-to-expert/",
      "bio": "Visualize, Understand, Learn & Practice absolutely every concept of Dart - the underlying language of Flutter Framework",
      "objectives": [
        "Do you want to learn Flutter? It's a must that you get to know Dart Language at first!",
        "Visualize the most important concepts of Dart Language",
        "Learn and Understand some of the trickiest challenges posed by Dart",
        "Get to know all of the fundamentals and advanced topics developed by the Dart Team",
        "Develop new skills into Dart Packages, Dart Libraries, Dart Linting",
        "Understand Sound Null Safety in great detail",
        "Learn all of the advanced particularities on which Dart runs the code behind the scenes",
        "Practice OOP Concepts with Dart Classes"
      ],
      "course_content": {
        "Introduction to the particularities of Dart Language": [
          "Particularities of Dart Language"
        ],
        "Installing the Dart SDK": [
          "Installing the Dart SDK (Winows, Linux, MacOS)"
        ],
        "Creating the First Dart Project": [
          "Creating the First Dart Project"
        ],
        "Structural components of a Dart Project": [
          "Structural components of a Dart Project"
        ],
        "JIT & AOT Compilers": [
          "JIT & AOT Compilers Explained"
        ],
        "Kernel, JIT & AOT Snapshots": [
          "Kernel, JIT & AOT Snapshots"
        ],
        "Everything about Dart Packages": [
          "Dart Packages"
        ],
        "Effective Dart Rules & Analysis Options File": [
          "Effective Dart Rules & Analysis Options Linting"
        ],
        "Sound Null Safety": [
          "Sound Null Safety"
        ],
        "Dart Variables": [
          "Dart Variables"
        ]
      },
      "requirements": [
        "The course is structured so that you can become a Dart Expert with little to no programming experience!",
        "All concepts will be explained in great detail so that everybody will be able to understand them!"
      ],
      "description": "Welcome to the most updated Dart Complete Course in 2021!\nBy following this course from start to finish, no matter what level you're on, I can guarantee you will certainly become a Dart Expert Developer!\nHere's a small list of what you'll be able to learn in this course:\nWhy you need to learn Dart prior to Flutter?\nWhat is Dart and what are its general particularities? (Type Safety, Soundness, Type inference, Null Safety, Compilers etc.)\nInstalling the Dart SDK on multiple platforms (Windows, Linux, MacOS + Dart CLI)\nThe structure of a Dart Project\nDart Packages\nDart Libraries\nDart Linting\nJIT & AOT Compilers, the Dart VM\nRunning the code from source using JIT/AOT Compiler\nKernel, JIT & AOT Snapshots\nEverything about Dart Packages\nEffective Dart & Linting + Analysis_options.yaml file\nSound Null Safety Explained\nDart Variables (Top level, static, instance, local\nvar vs dynamic vs const vs final\nBuilt-in Types (Numbers, Strings, Booleans, Lists, Sets, Maps, Runes)\nDart Functions Explained, Anonymous functions (closures, lambdas), Function parameters (positional, named)\nDart Operators Explained\nDart Control Flow Statements Explained\nDart Classes In-depth Chapter\nInheritance\nInstance variables & methods\nConstructors\nSingleton, Operators overridden, Static\nPolymorphism\nAbstraction, classes, methods, interfaces\nMixins\nExtension methods\nDart Generics Explained\nDart Libraries & Private Fields\nDart Testing Explained\nDart Isolates Explained (Sync & Async Chapter)\nDart Isolate Structure, Event Queue, Event Loop, Single Thread, Memory\nParallelism\nIsolate Groups\nMicrotask queue\nIterables and Lists\nFutures in-depth\nStreams in-depth\nmany many more I forgot\nThank you for choosing it and I hope you'll have a great time learning Dart!",
      "target_audience": [
        "Wannabe Dart & Flutter Developers",
        "Beginner in Dart Language curious about all of its features and concepts",
        "Experienced Dart Developer curious about really advanced Dart features and concepts",
        "Everyone curious about one of the best programming language available to date"
      ]
    },
    {
      "title": "Jetpack Compose -Android App Development Course with Jetpack",
      "url": "https://www.udemy.com/course/jetpack-compose-android-app-development-course-with-jetpack/",
      "bio": "Android Jetpack Compose | Install Android Studio, build your Kotlin Jetpack Compose Apps and publish it in Google Play",
      "objectives": [
        "Learn Android App Development with Jetpack Compose",
        "Jetpack Compose with Android Studio",
        "App Design with Material3 Library",
        "Jetpack Compose with new Material 3",
        "Learn the latest version of Android",
        "Android Studio",
        "Develop 2 Big Android Jetpack Compose Project and make more than 20 exercises",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "You will be able to develop modern Android apps",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is popular for both Android developers and Java developers.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Firebase is a platform developed by Google for creating mobile and web applications. It was originally an independent company founded in 2011."
      ],
      "course_content": {
        "Introduction to Android App Development with Jetpack Compose": [
          "What will you learn in this course in this Jetpack Compose Course?",
          "Why Jetpack Compose?",
          "Kotlin Overview",
          "Some Information about Android Ecosystem",
          "Basic Android App Development Programming Terms",
          "Project Files",
          "FAQ About Android App Development with Kotlin",
          "Quiz"
        ],
        "Environment Setup": [
          "Installing Java on Windows",
          "Installing Java on Mac",
          "Installing Android Studio - Part 1",
          "Installing Android Studio - Part 2",
          "Quiz"
        ],
        "More About the Android Studio": [
          "First Project in Android Studio",
          "Android Studio Interface",
          "Installing Android Virtual Device (AVD - Emulator)",
          "Enabling Virtualization (VT-x or AMD-V, SVM) in BIOS",
          "General Information About Gradle Build System",
          "Introduction to Manifest File",
          "Introduction to resources",
          "Quiz"
        ],
        "Components in Jetpack Compose": [
          "Layouts in Android Jetpack Compose (Column - Row - Box)",
          "Arrangements and Alignments",
          "Buttons",
          "TextField",
          "Image",
          "CheckBox",
          "Radio Buttons",
          "Switch",
          "Dropdown Menu",
          "Quiz"
        ],
        "User Interactions in Jetpack Compose": [
          "Toast Message",
          "Snackbar Message",
          "Dialog Message",
          "Top App Bar in Compose",
          "Options Menu in Jetpack Compose",
          "Quiz"
        ],
        "Navigation in Jetpack Compose": [
          "Navigation in Jetpack Compose - Part 1",
          "Navigation in Jetpack Compose - Part 2",
          "Navigation in Jetpack Compose - Part 3",
          "Navigation in Jetpack Compose - Part 4",
          "Quiz"
        ],
        "Lists in Jetpack Compose": [
          "Introduction to Lists in Jetpack Compose",
          "Lazy Column - Part 1",
          "Lazy Column - Part 2",
          "Lazy Column - Part 3",
          "Lazy Column - Part 4",
          "Lazy Row",
          "Lazy Grid",
          "Quiz"
        ],
        "Project 1: TODO List with Jetpack Compose": [
          "TODO List - Part 1",
          "TODO List - Part 2",
          "TODO List - Part 3",
          "TODO List - Part 4",
          "TODO List - Part 5",
          "Quiz"
        ],
        "Publishing Your App on Google Play": [
          "App Release Version",
          "Building APK & AAB Files",
          "Creating a Google Play Developer Account",
          "Publishing the App on Google Play Store",
          "Quiz"
        ],
        "Project 2: Math Game with Jetpack Compose": [
          "Introduction to Math Game Project",
          "Design of the First Page",
          "Design of the Second Page – Part 1",
          "Design of the Second Page – Part 2",
          "Creating Game Logic – Part 1",
          "Creating Game Logic – Part 2",
          "Creating Count Down Timer",
          "Creating the Result Page",
          "Quiz"
        ]
      },
      "requirements": [
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We preferred Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Basic knowledge of Kotlin is required.",
        "Desire to learn Android Application Development",
        "Watching the Android course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to \"Jetpack Compose -Android App Development Course with Jetpack course.\nAndroid Jetpack Compose | Install Android Studio, build your Kotlin Jetpack Compose Apps and publish it in Google Play\"\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n\nAndroid is a prevalent mobile operating system in the smartphone and tablet markets. It is used for games, business apps, and many other types of products for mobile devices. A growing number of companies are developing for the Android user market. As a result, the industry is seeing a greater need for Android developers. An Android development course can get you started on this path or sharpen your existing skills in the field.\n\n\nJetpack Compose is Android's recommended modern toolkit for building native UI. It simplifies and accelerates UI development on Android. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nDo you want to improve your career options by learning android and jetpack compose?\nDo you want to learn android app development from Scratch with Jetpack Compose?\nDo you want to learn android development from Scratch with Jetpack Compose?\nDo you want to be an android studio master?\nDo you want to build your first android app with Jetpack Compose?\nIf your answer is “yes” , you are at the right place!\n\nAndroid tablets and phones are very popular, and apps created for this operating system can reach a large audience. Whether you are interested in a career in mobile app development or looking to develop a game or app of your own design independently, let our top rated instructors help you with our Android development courses.\n\nI really like the approach of this course about the Android app. In this course, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learning android application development with Jetpack Compose. jetpack compose, kotlin, jetpack, compose, android, android compose, kotlin jetpack compose, android jetpack compose, android jetpack, android development, android app development, android studio\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nChances are, you’ve heard of Android many times, and Do u want to android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or deny permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design with Jetpack Compose.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\nMy \"Android App Development Course with Jetpack Compose\" course will take you from beginner to advance level.\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course. In this course, you will learn Android app development step-by-step. While doing kind of show and tell in our lectures we are also explaining whys. During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 2 major apps.\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\n\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\n\n\nWhat is the use of Jetpack Compose?\nJetpack Compose is a modern toolkit for building native Android UI. Jetpack Compose simplifies and accelerates UI development on Android with less code, powerful tools, and intuitive Kotlin APIs. In this tutorial, you'll build a simple UI component with declarative functions.\n\n\nWhy we use Jetpack in Android?\nJetpack is a suite of libraries to help developers follow best practices, reduce boilerplate code, and write code that works consistently across Android versions and devices so that developers can focus on the code they care about.\n\n\nIs Jetpack Compose an API?\nJetpack Compose is Android's recommended modern toolkit for building native UI. It simplifies and accelerates UI development on Android. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs.\n\n\nIs Jetpack a framework?\nAndroid Jetpack is a set of software components, libraries, tools, and guidance to help in developing robust Android applications. Launched by Google in 2018, Jetpack comprises existing android support libraries, android architecture components with an addition of the Android KTX library as a single modular entity.\n\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\n\n\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\n\n\nWhat skills do I need to be an Android Developer?\nAn Android developer works with the Android SDK (software development kit) and the Android operating system. They will need to understand the Android SDK, different versions of Android, and how these two things interact. An Android developer may need to know Java, Kotlin, C++, or all three languages and will need to understand the basics of SQL and XML. Java and Kotlin are programming languages used with Android, while SQL is used for database work, and XML is used for markup. Android developers should generally be competent programmers who understand both back-end and front-end development, emphasizing back-end or full-stack engineering. In terms of front-end knowledge, they should know the basics of UI (user interfaces) and UX (user experience). Android developers may work alone or in teams and may also need knowledge of project management strategies such as Agile.\n\n\nWhat is Android SDK and why is it important?\nAndroid SDK refers to the Android Software Development Kit. The Android SDK is a collection of tools that have been released and supported for the express purpose of creating Android software. Through the Android SDK, programmers can collect, create, and manage their code. It is a comprehensive development environment that is well-supported, not only by the Android team but also by its community. However, the Android SDK isn’t the only development environment available for Android technology. There are numerous solutions that will port programs out to the Android OS and Android-specific solutions such as Android Studio. Developers who are new to Android development will often start with the Android SDK, but they may decide that a different solution is ideal for them in the future.\n\n\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\n\n\nIn this course you will learn;\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project in Android Studio\nMuch more about Android Studio\nAndroid Components in Jetpack Compose\nNavigation and Lists in Jetpack Compose\nPublishing Your App on Google Play and more\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow latest trends.\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\n\nDive in now!\nWe offer full support, answering any questions.\nSee you in the \"Jetpack Compose -Android App Development Course with Jetpack course.\nAndroid Jetpack Compose | Install Android Studio, build your Kotlin Jetpack Compose Apps and publish it in Google Play\"",
      "target_audience": [
        "Anyone who wants to learn to Jetpack Compose",
        "Programmers who are interested in building Android apps with Jetpack Compose",
        "Anyone who wants to create Android Applications using the Kotlin programming language and Jetpack Compose",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing Android App Development Kotlin knowledge with Jetpack Compose"
      ]
    },
    {
      "title": "The Complete iOS9 Developer Course - Build 50 Swift Apps",
      "url": "https://www.udemy.com/course/the-complete-ios9-developer-course-build-50-swift-apps/",
      "bio": "Learn the secrets behind great apps like Uber, Tinder, Instagram and more! Learn develop apps in Swift today!",
      "objectives": [
        "Build apps",
        "Code in Swift",
        "Learn to build apps from Scratch",
        "Learn how to use XCode",
        "Learn how to design apps for optimum user experience"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "01. Learn Swift 2 in 1 hour": [
          "02. Course Requirements",
          "03. Talking about Xcode projects",
          "04. Setting up the Xcode environment",
          "05. Adding items to the main story board",
          "06. Hooking up the swift file",
          "07. Using the swift file",
          "08. Changing the button text",
          "09. Adding in functions",
          "10. Variables",
          "11. If Statements",
          "12. Multiple condition if statements",
          "13. Else if statements",
          "14. Printing a user selected number",
          "15. Apple UI and interactivity",
          "16. Course conclusion"
        ],
        "02. Learn SpriteKit for iOS9 in 1 hour": [
          "02. Course Requirements",
          "03. Introduction to spritekit",
          "04. Running the app on the simulator. Test early and often",
          "05. Talking about the GamScene file",
          "06. Talking about the touches began",
          "07. Learning about moving code to functions",
          "08. Talking about feature scope",
          "09. Talking about variables",
          "10. Setting and pritning variables",
          "11. Breaking up functions into smaller functions",
          "12. Talking about classes and removing objects",
          "13. Talking about images and nodes",
          "14. Conclusion"
        ],
        "03. Tip Calculator for iOS9": [
          "01. Starting a new project for the tip calculator",
          "02. Setting up the main Storyboard",
          "03. Designing the app",
          "04. Testing early and often on the iPhone",
          "05. Hooking up the outlets to the swift file",
          "06. Hooking up the Actions to the siwft file",
          "07. Setting up the variables",
          "08. Separating the app into functions",
          "09. Taking in the user inputed text",
          "10. Converting the strings into Floats",
          "11. Calculating the tip",
          "12. Printing the variables",
          "13. Formatting to two Decimal Places",
          "14. Adding the clear button to the app",
          "15. Changing the keyboard input type",
          "16. Hiding the keyboards",
          "17. Designing the app",
          "18. Challenge - Build a new app and design it differently"
        ],
        "04. Make a letter counting app with arrays for iOS9": [
          "01. Introduction to the name changing app",
          "02. Designing the app",
          "03. Hooking up the swift code",
          "04. Adding functions to the app",
          "05. Enterting the name data",
          "06. Making the app count the characters",
          "07. Putting the characters into an array",
          "08. Adding in the clear button functionality",
          "09. Hiding the keyboard",
          "10. Designing the app",
          "11. Challenge - Make a 4 box character counting app"
        ],
        "05. Reversing words app for iOS9": [
          "01. Introduction to the word reverser",
          "02. Designing the app",
          "03 Hooking up the actions and the outlets",
          "04. Adding in functions to the app",
          "05. Setting up variables",
          "06. Setting up the user input and testing the app",
          "07. Reversing the characters",
          "08. Talking about user experience and code",
          "09. Designing the app and adding the clear function",
          "10. Hiding the keyboard",
          "11. Challenge - Count the characters of the reversed word"
        ],
        "06. Inspirational Quote App for iOS9": [
          "01. Introduction to the motivational quote app",
          "02. Designing the app",
          "03 Hooking up the Swift File",
          "04. Setting up the variables and the arrays",
          "05. Adding in the function to the app",
          "06. Printing the variable",
          "07. Selecting the random number",
          "08. Changing the button Text",
          "09. Adding in checking logic",
          "10. Designing the app",
          "11. Challenge - Add another array item box to the project"
        ],
        "07. Making an innovative calculator for iOS9": [
          "01. Introduction to the innovative calculator",
          "02. Talking about the main storyboard",
          "03. Adding in the other views",
          "04. Changing the names of the tabs",
          "05. Changing the colors of the slides",
          "06. Designing the first page",
          "07. Designing the first page for productivity",
          "08. Copying the items to the other view controller",
          "09. Setting up the outlets",
          "10. Hooking up the swift file",
          "11. Adding in the addition variables",
          "12. Taking in the user data",
          "13. Adding in the calculation and printing the answer",
          "14. Adding in the clear Button",
          "15. Hiding the keyboard",
          "16. Adding in the multiplication tab",
          "17. Setting up the division page",
          "18. Setting up the subtraction page",
          "19. Finding different solutions",
          "20. Putting final touches on the design",
          "21. Challenge add in two more tabs"
        ],
        "08. Stock Price Calculator for iOS9": [
          "01. Introduction to the stock price calculator",
          "02. Designing the app",
          "03. Hooking up the Swift code",
          "04. Setting up the variables",
          "05. Adding in functions to the app",
          "06. Taking in the user data",
          "07. Converting variables to floats",
          "08. Adding in the price and hiding the keyboard",
          "09. Fixing the percent error",
          "10. Calculating the profit",
          "11. Rounding to two decimal places",
          "12. Clearing the app",
          "13. Designing the app",
          "14. Challenge - Limit the amount of characters in the profit section"
        ],
        "09. Savings app for iOS9": [
          "01. Introduction to the savings app",
          "02. Designing the labels to the app",
          "03. Hooking up the swift file",
          "05. Setting up the functions",
          "06. Taking in the data",
          "07. Calculating the income",
          "08. Calculating the savings",
          "09. Printing the variables",
          "10. HIding the keyboard and testing the app",
          "11. Finxing the bugs",
          "12. Testing and setting up the clear functionality",
          "13. Designing the app",
          "14. Final bugs in the app",
          "15. Challenge - Add more financial items to the app"
        ]
      },
      "requirements": [
        "A mac computer (not a PC)",
        "XCode 7"
      ],
      "description": "This course was funded through a massively successful Kickstarter campaign.\nDo you want to learn how to make apps? This course is for you! In this course you will get to learn how to build real world apps through example. Learning by doing is the best way to become a rock star developer, producer and entrepreneur.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 150k students worldwide\nWho is this class for?\nPeople who want to improve their technical skills\nComplete beginners\nPeople who want to make money. I show people the tools on how to make money through various methods of passive income\nPeople who want to get ahead of the pack by learning online.\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "Complete Beginners",
        "Not advanced programmers",
        "People who want to learn Swift and XCode"
      ]
    },
    {
      "title": "Modern Android app using Java, MVVM, Dagger2, RxJava &more",
      "url": "https://www.udemy.com/course/modernandroidappjava/",
      "bio": "Learn the latest Android technologies including Dagger2, MVVM, Java, RxJava, Retrofit, Mockito and Glide",
      "objectives": [
        "Android development",
        "Mobile applications",
        "Android architecture",
        "Dagger2",
        "Java",
        "RxJava",
        "MVVM",
        "Retrofit",
        "Mockito",
        "Unit testing"
      ],
      "course_content": {},
      "requirements": [
        "Interest in Android development",
        "Java development knowledge",
        "Mac or Windows PC"
      ],
      "description": "Learn how to make a modern Android App with this new course on Android development in Java.\nMost tutorials and how to's on Udemy show you the basics of app building, but they don't show you how to use the latest technologies and libraries.\nMost projects and jobs require you to know how to use the latest libraries. This is what this course is all about.\nThe purpose of this course is to give you a practical example of how to use these technologies, all while building a simple example app.\n\n\nWe will learn about:\nMVVM architecture using the Google recommended Android Lifecycle Extensions\nDagger2 for dependency injection\nRxJava as a reactive framework\nRetrofit and JSON for remote server communication\nGlide for seamless image loading\nUnit tests to test the application and make it stable and robust\nAnd we will build everything in Java\nIf you want to get that job as an Android Developer, you need to know how to use these technologies.\nIf you want to build an app that scales and is robust, these technologies will make your life easy in the long term.\n\n\nSign up today, and let's learn how to properly build a modern Android Application.\n\n\n30 day money back guarantee - provided by Udemy\nHighly rated instructor with over 8000 active students and growing monthly.",
      "target_audience": [
        "Intermediate Android Developers",
        "Beginner Android Developers",
        "People Interested in Mobile App development"
      ]
    },
    {
      "title": "Android Lifecycles Masterclass",
      "url": "https://www.udemy.com/course/android-lifecycles/",
      "bio": "Master the core concept in Android Development, Lifecycles, to create reliable and responsive Android applications",
      "objectives": [
        "Discover the central role of Lifecycles in Android App Development",
        "Master the Lifecycles of the main Android components: Application, Activity, Fragment, ViewModel and Service",
        "Prevent bugs and crashes due to configuration changes and process death",
        "Detect when Android app transitions between the foreground and the background",
        "Handle multi-resume to support split screen and picture-in-picture features",
        "Hack Android Lifecycles to implement special requirements",
        "Prepare to answer questions about Android Lifecycles in job interviews"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Tutorial Application"
        ],
        "Application Lifecycle": [
          "Application",
          "Review System",
          "Process",
          "Process Lifecycle",
          "Application Class",
          "Global Objects",
          "Application.onCreate()",
          "Application Lifecycle Summary"
        ],
        "Activity Lifecycle": [
          "Activity Lifecycle",
          "Activity as Context",
          "Activity onCreate() and onDestroy()",
          "Activities Back Stack",
          "Activity onStart() and onStop()",
          "Activity onResume() and onPause()",
          "Overlapping vs Non-Overlapping Lifecycle States",
          "Multi-Resume",
          "Memory Leaks",
          "Activity Lifecycle Callbacks",
          "Activity Lifecycle Summary"
        ],
        "Fragment Lifecycle": [
          "Fragment Lifecycle",
          "Fragment Code Review",
          "Fragment onCreateView() and onDestroyView()",
          "Fragment onViewCreated()",
          "Fragment onCreate(), onStart() and onResume()",
          "Fragment Lifecycle Demonstration",
          "Fragments Back Stack",
          "Activity - Fragment Lifecycle Coupling",
          "Fragment View Lifecycle",
          "Fragment View Recreation Optimization",
          "Fragment onAttach() and onDetach()",
          "Fragment Lifecycle Callbacks",
          "Fragment Navigation Libraries",
          "Fragment Lifecycle Summary"
        ],
        "Configuration Changes": [
          "Configuration Changes",
          "Configuration Changes Demonstration",
          "Configuration Changes Mechanics",
          "Fixing Background Detection Code",
          "FragmentManager During Configuration Changes",
          "Views During Configuration Changes",
          "Custom State During Configuration Changes",
          "Custom State During Configuration Changes - Part 2",
          "Manual Handling of Configuration Changes",
          "Deprecated APIs",
          "Configuration Changes Summary"
        ],
        "ViewModel Lifecycle": [
          "ViewModel Lifecycle",
          "ViewModel Demonstraion",
          "Observable ViewModel",
          "LiveData",
          "ViewModel onCleared()",
          "ViewModel Lifecycle Summary"
        ],
        "Save & Restore (Process Death)": [
          "Save & Restore (Process Death)",
          "Memory Management in Android",
          "Testing Save & Restore Scenario",
          "Background Process Limit",
          "Stopping Cached Process",
          "Killing a Process From ADB",
          "Save & Restore in Activities",
          "Save & Restore in Fragments",
          "Save & Restore in ViewModel",
          "Save & Restore in Global Objects",
          "How to Support Save & Restore in Global Objects",
          "Save & Restore and Mutable Static State",
          "Save & Restore vs Configuration Changes",
          "Save & Restore (Process Death) Summary"
        ],
        "Service Lifecycle": [
          "Service Lifecycle",
          "Service Demonstration",
          "Background Work Restrictions",
          "Foreground Service Demonstration",
          "Service During Configuration Changes",
          "Service During Save & Restore",
          "Fixing Service Lifecycle Bug",
          "Service Lifecycle Summary"
        ],
        "Course Summary": [
          "Course Summary",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic Android development experience"
      ],
      "description": "Lifecycles are central topic in Android app development because all main Android components, such as Activities, Fragments, and ViewModels, have unique Lifecycles. That's why a deep understanding of Android Lifecycles is essential for becoming a good Android developer and building reliable and responsive Android applications.\nFurthermore, many Android job interviews include questions about Lifecycles, underscoring their fundamental importance.\nUnfortunately, there are many different Lifecycles in Android and even small mistakes in their handling can lead to tricky bugs. These bugs often appear in real-world Android applications and require extensive effort to investigate and resolve.\nIn this course, you'll master Android Lifecycles. From foundational concepts to advanced strategies, we'll cover everything you need to know about this important topic.\nYou will learn:\nWhy Android components need lifecycles.\nThe lifecycles of the main Android components:\nProcess\nApplication\nActivity\nFragment\nViewModel\nService\nOverlapping vs non-overlapping lifecycles.\nMulti-resume feature.\nHow to handle Configuration Changes.\nHow to handle Process Death.\nBest practices for efficient Lifecycle management.\nHacks and ad hoc solutions for unique Lifecycle-related challenges.\nCommon pitfalls and gotchas to avoid in your projects.\nThe tutorial code for this course is available in an open-source, real Android application. This application will demonstrate all the material taught in the lectures, and allow you to test tricky lifecycle behaviors when working on your own projects.\nSo, whether you're a newcomer to Android, or a seasoned Android developer, you'll find a wealth of new information in this course. Enroll now, and join me on this epic journey into the depths of Android lifecycles!",
      "target_audience": [
        "Android developers"
      ]
    },
    {
      "title": "Make 5 Android Apps in 1 Hour No Coding With App Inventor 2",
      "url": "https://www.udemy.com/course/make-5-android-apps-in-1-hour-no-coding/",
      "bio": "Learn how to use a free tool to make 5 legitimate Android Apps in only 1 hour!",
      "objectives": [
        "Use App Inventor 2 to start making your own Android Apps without coding.",
        "Be able to build on what you learn to start making your own apps that you can sell on Google Play to make money.",
        "Learn the basic fundamentals of App Inventor 2."
      ],
      "course_content": {
        "Introduction and Installing App Inventor 2 Components": [
          "Installing App Inventor 2 Components",
          "How To Use The Emulator"
        ],
        "Making Our First App": [
          "Counter App User Interface",
          "Making The Counter App Work"
        ],
        "Making Our Second App": [
          "Animals App User Interface",
          "Making The Animals App Work"
        ],
        "Making Our Third App": [
          "Texting App User Interface",
          "Making The Texting App Work"
        ],
        "Making Our Fourth App": [
          "Web Browser User Interface",
          "Making The Web Browser Work"
        ],
        "Making Our Final App": [
          "Translator User Interface",
          "Making The Translator App Work"
        ],
        "Monetize Your App With Ads!": [
          "Monetize Your App With Ads!"
        ],
        "BONUS SECTION!!!!!": [
          "Translator BONUS Video Adding Speech Recognition",
          "BONUS Video Splash Screen Tutorial"
        ],
        "BONUS LECTURE!!!!!": [
          "Get My Other Course For Only $10"
        ]
      },
      "requirements": [
        "How to use an Android Smartphone."
      ],
      "description": "My Udemy Courses have been taken by over 6,000 people in 135 countries. They have also received high ratings throughout Udemy.\nAndroid devices are used worldwide and over 1.15 billion Android Devices are predicted to ship this year. Did you know that's more than apple?\nMaking Android Apps has sort of always been thought of as some magical process that only programmers can do. It was never thought possible that anybody would be able to make Android Apps.\nI'm here to tell you that it is possible! Plus, you never have to write a single line of code! In this course I teach you how to use a tool called App Inventor 2 to make Android Apps using an easy mouse-driven drag and drop block system to make your app work. You build the user interface visually,and then just click the blocks together using the mouse to make it work.\nI know you might be thinking that apps you can make are limited, right? In all honesty, most any kind of app can be made using App Inventor 2, and they are updating it quite often.\nApp Inventor 2 is also free to use. It's run by MIT and you use your Google Account. Easy!\nIn this course you learn how to use App Inventor 2 to make 5 apps. You will see how you can make those 5 apps in only 1 hour while learning the power of App Inventor 2.\nWhat are the requirements?\nYou will need a computer with an internet connection. Can be Windows/Mac/Linux.\nYou should have an Android device, but not required. Although would make it easier.\nA desire to learn.\nWhat am I going to get from this course?\nOver 1 hour of video lectures showing you how to create Android Apps without coding!\nYou learn the App Inventor 2 environment\nYou get periodic course updates.\nLearn how to monetize your apps with ads.\nA good understanding of how Android Apps are made and work.\nA way to make your ideas a reality.\nWhat is the target audience?\nBeginners interested in learning to make Android Apps.\nAnybody interested in learning how to make Android Apps without coding.\nAnybody who has an app idea that needs to learn how to make it a reality.",
      "target_audience": [
        "You should take this course if you want to learn to make Android Apps.",
        "It's a beginner course, not for the expert app creator.",
        "Non-programmers will love this course!"
      ]
    },
    {
      "title": "The iOS Development Animations Course - Swift 5 & Xcode 10",
      "url": "https://www.udemy.com/course/coreanimation/",
      "bio": "Master Quartz Core, Core Animation, Core Graphics, KeyFrames, and Animated NSLayoutConstraints in PURE code.",
      "objectives": [
        "High Market Value Animations as Seen in Apps Like Snapchat.",
        "Complete Source Code Included - Commit Link Access on Each Lecture.",
        "Build a Drag to Refresh Animation with CAShapeLayer, UIBezierPath, and CADisplayLink.",
        "Build and Animate Programmatic Auto Layouts with NSLayoutConstraint.",
        "Build Custom Subclasses with Built In Animations.",
        "Every Basic AND Advanced Animation Topic in Swift 5.2 & Xcode 10.2"
      ],
      "course_content": {
        "Course Gameplan and Resources.": [
          "Course Resources - Source Code & Where You Can Get Help."
        ],
        "Image Sprites - Create The Twitter Heart Button Sprite Animation in 10 Minutes.": [
          "Make Your Own Twitter Heart Animation with UIImageView Sprite Animations."
        ],
        "UIView Animations in Swift.": [
          "What the Swift Docs Say - UIView Animations Apple Documentation Overview.",
          "Animating View Properties with Block Objects",
          "Spring Animations & Constraints - Write Bouncy NSLayoutConstraint Animations.",
          "Animate when a user taps with UITapGestureRecognizer."
        ],
        "Project - Create your own Animated UIButton Subclass": [
          "Section GamePlan.",
          "Write your own UIButton Subclass - phase two init’s & layer properties",
          "Add targets and gesture recognizers - and the difference between the the two.",
          "Animate CGAffine properties with spring animations.",
          "Animating Programmatic Auto Layout NSLayoutConstraints"
        ],
        "UIViewPropertyAnimator Animations - With UISlider.": [
          "UIViewPropertyAnimator Docs Discussion",
          "Use UISlider with UIViewPropertyAnimator for smooth animations.",
          "Using UIViewPropertyAnimator with Spring Damping and a Completion Handler.",
          "Create a Sized BlurEffect Slider Animation with UIVisualEffectView & UIImageView"
        ],
        "Overview of Quartz Core, Core Graphics, and Core Animation": [
          "Quartz Core & Core Animation Docs Discussion.",
          "What is the difference between Quartz Core and Core Animation?",
          "Core Graphics Docs Discussion."
        ],
        "Core Graphics - CGAffineTransform Animations.": [
          "How to Chain Various CGAffine Transform Properties and Spring Animate Changes."
        ],
        "Core Animation - CABasicAnimations, KeyPaths, and CASpringAnimations.": [
          "CABasicAnimation Docs Discussion.",
          "Key Paths - Animate View Properties with CABasicAnimation.",
          "Create Spring animations with CASpringAnimation."
        ],
        "Core Animation - CAGradientLayer.": [
          "CAGradientLayer Docs Discussion.",
          "Make and Animate Gradient Layers with CAGradientLayer."
        ],
        "Core Graphics - Timed Keyframes with CAKeyframe Animation.": [
          "CAKeyframeAnimation Docs Discussion.",
          "Use CAKeyframeAnimation to create smooth keyframe animations.",
          "Create a UIView shaking animation with CAKeyFrameAnimation",
          "UIView animateKeyframes Docs and Implementation - Alternative Keyframe Animation"
        ]
      },
      "requirements": [
        "Have Xcode Installed."
      ],
      "description": "Become a Swift Programming God.\nLearn everything from basic Swift coding to advanced Core Animation in this course complete with updates, source code access, and additional learning resources to guide you to becoming a mobile iPhone x developer.\nWhich group do you belong to?\nAre you a web developer? Maybe a React Native Developer?\nAre you a professional iOS developer making close to six figures, maybe above six figures?\nor are you still on your journey to getting that six figure mobile programming job?\n\n\nEither way, you need to master and maintain your mobile animation skill set. This course will do BOTH.  Let's talk.\nFirst you will develop an awesome Twitter heart sprite based animation button with UIImageView to start things off fun and interesting. This includes tiles that we will turn into an interactive sprite button within ten minutes of coding.\n\n\nConcepts - From Stuck, to Project Mastery.\nBefore we can jump into more advanced projects, we need to cover basic even if you understand them.\nYou will cover and review basic animation concepts that have very likely been stuck using.  These mobile concepts include\nUIView property animations\nSpring Loaded Animations, yep even those fancy nice ones are basic.\nCGAffineTransform - yessir still pretty basic, keep reading.\n\n\nStep by Step. Enter UIViewPropertyAnimator\nOnce we see the disadvantages of basic UIView animations we will learn & tackle the next level of animation ability in Swift and Xcode. This is where we take our iOS animation foundation and build upon it with UIViewPropertyAnimator for a different type of control which is explained in the free promo video of this course.\nUIViewPropertyAnimator\n\n\nMini Project One - UIButton Control Subclass - NSLayoutConstraint Animations Intro.\nHere you will build a subclass UIControl button and utilize animations and programmatic auto layout which will be built straight within the class, not outside of it.\nUIButton\nNSLayoutConstraint\nUIView property animations\n\n\nQuartz Core - Core Graphics - Core Animation - What is the DIFFERENCE between these Swift frameworks, are they frameworks?\nAfter we have built a button control class and used more property based animations with UIViewPropertyAnimator, we will dive into a section purely reviewing Apple Developer Documentation. In this section you will be given an overview of the three framework / api topics and a general idea of what the key differences are.\nApple Developer Docs\nCore Animation\nCore Graphics\nQuartz Core\n\n\nCore Animation - CABasicAnimations, KeyPaths, and CASpringAnimations. UISlider too.\nIt's time to utilize your knowledge and turn it into tangible skill. Enter Core Animation. In this section we will build animations with CA based animation classes like ca basic animations and spring animations. We also talk about subclasses and superclasses in this section.\nCABasicAnimation\nCABasicAnimation.keyPath\nCASpringAnimation\nUISlider\nUIBlurEffect\nUIVisualEffectView\n\n\nCAGradientLayer - It's animatable.\nNext you will build and animate gradients with Core Animation.\nCAGradientLayer\n\n\nCAKeyframeAnimation - Helpful and Powerful.\nWe then take a look at keyframe based animations and use them to build cool effects.\nCAKeyframeAnimation\nUIView.animateKeyframes\n\n\nCocoaPods - Use them sparingly\nAn entire dedicated section to CocoaPods my friends.\nNVActivityIndicatorView\nPopupDialog\nAnimatedSegmentSwitch\n\n\nAdvanced Project - Create an Elastic Snapchat Style Pull To Refresh Animation.\nThis is where things get exciting. In this section you will put your skills to the test and build a Snapchat style drag to refresh animation with advanced core animation and ui classes.\nCAShapeLayer\nCADisplayLink\nUIBezierPath\n\n\nThat's it for curriculum until the next monthly update. Yes, this course is evergreen and will be maintained!\n\n\nContent.\nWe love awesome animations, and this course will finally fill in your animation skill gap through video content. Maxcodes, your instructor, will teach you everything animations in Swift 5.2 & Xcode 10. You will not only learn commonly used animations in Swift & Xcode, but you will also learn advanced topics such as CAGradientLayer animations, programmatic NSLayoutConstraint animations, and even CABasicAnimations for specific animation keys such as shimmerKey to integrate animations you see on top tier apps like Facebook.\n\n\nDevelopers are not designers, well not all of them.\nIt's already hard enough to develop these animations with code, let alone design them. This course is designed to help you as a developer master your implementation skills in the least amount of time possible. We don't want to spend hours trying to come up with awesome designs, we just want to know how to build them! Even if you ARE a designer; the first step is learning how to actually build these animations with pure code, and that is exactly what maxcodes teaches you in this course.\n\n\nClean cut & professional.\nThis course is designed to deliver you NEW programming skills through a clean cut, crystal clear medium via video tutorials. Rest assured, that I have designed this course to be clear, concise and to the point. I want you to learn, period.\n\n\nLet's get it. Welcome to Swift Animations by maxcodes.",
      "target_audience": [
        "Pro or beginner developers who want to master their Swift Animation Skills.",
        "iOS Developers"
      ]
    },
    {
      "title": "Full Stack Mobile Application Development - Master Class",
      "url": "https://www.udemy.com/course/full-stack-mobile-application-development-master-class/",
      "bio": "Native Android,Native IOS,Flutter,React Native,Xamarin",
      "objectives": [
        "You will learn about Full Stack Mobile App Development with native and Hybrid mobile apps framework.",
        "Android with Java and Kotlin",
        "IOS with Swift",
        "Flutter with Dart",
        "React Native with JavaScript",
        "Xamarin with C#",
        "Tools - Android Studio - Xcode - Visual Studio and Visual Studio Code",
        "Weekly Updates with new Material on demand"
      ],
      "course_content": {
        "What you will Learn and what to expect": [
          "Course Learning Introduction"
        ],
        "Mobile App Development Lifecycle": [
          "Intro"
        ],
        "Mobile Application Lifecycle": [
          "Android Application Lifecycle",
          "IOS Application Lifecycle",
          "Flutter Application Lifecycle",
          "React Native Application Lifecycle",
          "Xamarin Application Lifecycle"
        ],
        "Hello World Application": [
          "Android Hello World Application",
          "IOS Hello World Application",
          "Flutter Hello World Application",
          "React Native Hello World Application",
          "Xamarin Hello World Application"
        ],
        "Android Layouts and Views": [
          "Android Layouts Intro",
          "Android Relative Layout",
          "Android Constraint Layout",
          "Android TextView",
          "Android Edittext",
          "Android Button",
          "Android ImageView",
          "Android RecyclerView"
        ],
        "IOS Layouts and Views": [
          "IOS Storyboard Intro",
          "IOS UILabel , UITextField and UITextView",
          "IOS Buttons",
          "IOS UIImage View",
          "IOS Table View Controller",
          "Swift UI Intro"
        ],
        "Flutter Layouts and Views": [
          "Flutter Text",
          "Flutter Button",
          "Flutter TextField",
          "Flutter ListView"
        ],
        "React Native Layouts and Views": [
          "React Native Text",
          "React Native Button",
          "React Native Text Input",
          "React Native Flex Layout",
          "React Native Image"
        ],
        "Xamarin Layouts and Views": [
          "Xamarin Label",
          "Xamarin Button",
          "Xamarin Editor",
          "Xamarin Image",
          "Xamarin List"
        ],
        "Android Multimedia": [
          "Introduction - Android MultiMedia Theory",
          "Android Media Player Code Walk"
        ]
      },
      "requirements": [
        "Basic Programming knowledge",
        "Java ,Kotlin, Swift, Dart, C#"
      ],
      "description": "Explore the dynamic world of full-stack mobile app development in this comprehensive course. Discover the essential features of full-stack environments and delve into core native and hybrid mobile alternatives. Learn how to navigate the factors influencing platform selection, empowering you to make informed decisions.\n\n\nAs billions worldwide embrace smartphones and tablets, the demand for full-stack apps soars. Uncover the intricate web connecting client-side devices to distributed server infrastructures, comprising microservices, authentication servers, and CDN assets. Master critical processes like testing, continuous integration, deployment, scaling, and containerization, essential for seamless app operation.\n\n\nThis course equips you with the skills to thrive in today's tech landscape, where versatility is paramount. Gain proficiency in React Native, Swift, Kotlin, and more, ensuring you're adept at crafting cross-platform solutions. With a focus on SEO-driven content, this learning journey ensures you're primed to meet the demands of modern businesses seeking agile, all-encompassing mobile development expertise.\n\n\nWhat you will learn in this course ?\n\nApp development lifecycle Introduction\nAndroid and IOS Layout and Widgets\nAndroid and IOS MultiMedia\nAndroid and IOS Maps\nAndroid and IOS Networking\nAndroid and IOS Storage\nAndroid and IOS Firebase\nAndroid and IOS GraphQL\nAndroid and IOS Camera\nAndroid and IOS Best Practices for coding and design pattern\nGit and GitHub Intro\nAndroid and IOS Mobile Application Security Tips\nAndroid and IOS App Publication",
      "target_audience": [
        "Junior Mobile apps developers"
      ]
    },
    {
      "title": "The Complete iOS 11 Developer Course - Beginner To Advanced",
      "url": "https://www.udemy.com/course/the-complete-ios-10-developer-course-beginner-to-advanced/",
      "bio": "In the complete iOS 11 Developer Course students will learn Swift4 creating real apps like Instagram & Foursquare clones",
      "objectives": [
        "Create your own mobile applications on iPhone and iPad",
        "Design your applications from scratch and publish them in the app store",
        "Create your own social media application like Facebook or Instagram!",
        "Be sufficient in programming and development to get a high paying job as a Jr. professional developer"
      ],
      "course_content": {},
      "requirements": [
        "Students will learn from scratch! No prior knowledge is needed to take this course",
        "Students will need either a Mac computer or device compatible with a Mac operating system",
        "XCode (A free downloadable software) which we show you how to get in the course!",
        "Sketch or any design software like Canva or Photoshop (optional)"
      ],
      "description": "⇉ Join one of the Biggest & Most Comprehensive iOS 11 Developer Courses Ever Created!\n\n⇉ This course is MASSIVE! You get Over 200+ Lectures and 21+ hours of HD content!\n⇉ Watch the promo video to see how you can become a iOS Developer From Scratch!\n__________________________________________________________________________\nWelcome The Complete iOS 11 Developer Course - Beginner To Advanced!\n\n\n⇉ Join Over 950,000+ Students Who Have Enrolled In My Udemy Courses This Year!\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nThen this course is for you! Click \"Take This Course Now\" For Instant Life-Time Access!\n__________________________________________________________________________\n\nLearn building an iPhone application from scratch!\nIn this course you will start as a beginner and make your way to the top as you progress through the course. You will learn by building real applications like Instagram Clone & Foursquare Clone. Not only you will experience the finest examples of coding but you will also learn about designing your applications in Sketch so that you will be able to upload your great app idea to the App Store.\nWhen you complete the course you will be able to create almost any kind of application that you want in iOS!\nYou will learn useful skills about topics below:\nSwift 4 Basics\nLayout\nDesign with Sketch\nEssentials of Swift\nPush Notifications\nTable Views\nParse\nFirebase\nAPIs\niOS 11 Extra Features\nOne Signal\nCocoapods\nGitHub\nWorking with Servers\nAWS Server Setup\nMachine Learning\nSocial Media & Networks\nContent and Overview\nThis course is great for people who are eager to learn Swift 4 & iOS 11. If you do not have any prior programming language or design experience it is totally fine. We will start from basics and make our way to the top! You will be ready to implement your own idea into a real application and upload it to the App Store when you finish this course!\nWe will learn the related subjects and practice them by building applications like \"Art Book\", \"Catch The Kenny Game\", \"IMDB Api\",\"Instagram Clone\", \"Travel Map\", \"Foursquare Clone\", \"Image Recognition\" and much more... Furthermore you will have the chance to learn Push Notifications which is an uncovered subject in almost all of the online guides & courses!  On the top of everything you will get to learn both Firebase & Parse in this course whereas in most of the online guides you would have to choose one of them!\nI will also share the final source code of all applications that we create during the course. So you will be able to compare the products when you write your own applications!\n__________________________________________________________________________\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin learning how to become a professional iOS 11 Developer!\nWhen I learn something new about confidence and self-esteem, I add it to the course -at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But it can be done!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button, top right, now...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys & Atil Samancioglu",
      "target_audience": [
        "People who want to learn programming",
        "People who want to learn mobile app development",
        "People who want to build iPhone Apps",
        "People who want to learn Swift 4 & iOS 11",
        "People who want to learn Sketch",
        "People who want to become a Junior iOS Developer",
        "People who want to learn about Social Media development",
        "People who want to learn about Firebase",
        "People who want to learn about Parse",
        "People who want to learn push notifications"
      ]
    },
    {
      "title": "Firebase Firestore for Android",
      "url": "https://www.udemy.com/course/devslopes-firestore-for-android/",
      "bio": "Learn all about the brand new Firestore - a NoSQL document based technology",
      "objectives": [
        "Add, edit and delete data for a Firestore database in your apps",
        "Implement powerful login capabilities into your apps using Firebase Authentication",
        "Add Firestore security features to protect your database and restrict access to authorized users only",
        "By the end of this course you will know advanced skill with Firestore and how to integrate it into your apps"
      ],
      "course_content": {
        "Firestore Introduction": [
          "Intro To Firestore",
          "Project Setup",
          "What is Firestore",
          "AddThoughtVC UI Setup",
          "Making your first database entry!",
          "MainActivity UI Set up",
          "Making the custom adapter",
          "Performing one time data fetch",
          "Real time updates",
          "Adding likes"
        ],
        "Firestore Authentication": [
          "Intro to Firestore Authentication",
          "Login Flow UI Setup",
          "Create User",
          "Loggin In",
          "Adding a comment",
          "Comments Adapter",
          "Displaying Comments",
          "Security Rules"
        ],
        "Firestore Security Rules": [
          "Intro to Firestore Security Rules",
          "Project Setup",
          "Interfaces",
          "Deleting a comment",
          "Updating a comment",
          "Advanced comments security rules",
          "Deleting a thought",
          "Thought security rules",
          "Where to go from here?"
        ]
      },
      "requirements": [
        "Must have PC with Windows 8+ OR macOS OR Linux/Ubuntu"
      ],
      "description": "Firestore for Android\nWelcome to beginner Firestore development. In this course you'll learn all about the brand new Firestore, a NoSQL document based technology. We start from the ground up and teach you everything you need to know from the fundamentals, authentication and a deep dive into Firestore security rules.\n*BASIC KNOWLEDGE OF ANDROID IS ASSUMED\nWHY TAKE THIS COURSE?\nLearning the new Firestore should be taught using real world examples. In this course you're going to learn to code the Devslopes way. We teach by building real world, professional, amazing looking apps from start to finish.\nHere are some of the things you'll be able to do after taking this course:\nBuild your own apps using the new Firestore real time database\nLearn how to create and save data to your Firestore database\nAdd powerful login capability to your apps using Firebase authentication\nUse Firestore security features to protect your database and restrict access to authorized users only\nWho this course is for:\nPeople who want to build advanced Android apps!\nThose who want to create their own startup\nThose looking to get a full time job as a developer\nBusiness owners\nStudents & teenagers\nPeople who want to make money building apps\nIf you are a student of our Android N: From Beginner to Paid Professional - or have any other basic understanding of Android development, then this is a perfect next step to advanced your Android and Firestore skills.\nDon't forget to join the free live community where you can interact with other students and ask questions to the community.",
      "target_audience": [
        "If you have basic experience with Android development take this course"
      ]
    },
    {
      "title": "iOS, Swift & SwiftUI - Complete iOS App Development",
      "url": "https://www.udemy.com/course/ios-16-swift-complete-app-development/",
      "bio": "Learn iOS App development using iOS, Swift, SwiftUI and UIKit",
      "objectives": [
        "You will become a top iOS engineer",
        "You will create your own iOS app portfolio",
        "Learn how to create iOS apps using iOS 16, Xcode 14, Storyboards, Swift UI and Interface Builder",
        "Learn and master Swift 5 fundamentals",
        "Build apps using SwiftUI and integrate SwiftCharts",
        "Learn what's new in iOS 16 and Xcode 14",
        "Learn reactive programming frameworks such as Combine",
        "Build iOS Views programmatically using Auto Layout/PureLayout",
        "Build iOS apps using UIKit & Storyboards",
        "Master writing unit tests",
        "Discover and practice building applications with networking libraries (AlamoFire, Apple)",
        "Build applications that use Core Location and MapKit",
        "Learn how to use MVVM design pattern and differences between MVVM and MVC",
        "Learn how to use CocoaPods",
        "Learn about Notifications and Delegates",
        "Learn about CoreData & UserDefaults"
      ],
      "course_content": {
        "Introduction to iOS & Xcode": [
          "How to download Xcode from Developer Apple Portal",
          "Create an initial Xcode iOS app project",
          "Get familiar with Xcode 14 controls, components and project structure"
        ],
        "Swift 5 Fundamentals": [
          "Constants, variables, operators",
          "Strings and Characters",
          "Strings: indices",
          "Strings: substrings",
          "Strings: comparison",
          "Strings and characters",
          "Collection Types: Introduction",
          "Collection Types: Arrays",
          "Arrays",
          "Arrays: Part 1",
          "Arrays: Part 2",
          "Arrays: Part 3",
          "Collection Types: Sets",
          "Sets",
          "Sets Part1: Main Operations",
          "Sets Part2: Operations",
          "Sets Part 3: Membership and Equality",
          "Collection Types: Dictionaries",
          "Dictionaries: Part 1",
          "Dictionaries: Part 2",
          "Control flow: for loop",
          "Control flow: while loop",
          "Control flow: repeat while",
          "Control flow: if else conditional statements",
          "Control flow: switch statements",
          "Control flow: Switch, Part 1",
          "Functions: parameters, return types, multiple return types, arguments, inout",
          "Functions: nested functions, function types",
          "Optionals",
          "Closures: expressions, single expression, short-hand, operator method",
          "Closures: autoclosure, trailing closures, escaping closures",
          "Enumerations",
          "Classes and Structs",
          "Inheritance",
          "Protocols: Introduction",
          "Protocols: Delegates",
          "Protocols: Extensions",
          "Protocols: Synthesized Implementation",
          "Protocols: Types and Inheritance",
          "Protocols: Composition",
          "Protocols: Conformance Check",
          "Protocols: Optional protocol requirements"
        ],
        "Implement iOS app with UIKit and Storyboard to show table view (MagicTravel app)": [
          "What is MVC?",
          "MVC",
          "What is UITableView?",
          "Create a starting project (MagicTravel app)",
          "Adding UITableView to Storyboard and linking it to View Controller via IBOutlet",
          "UITableViewDataSource",
          "UITableViewCell",
          "Configuring table view cell and table view to show data",
          "Handle tapping on row / table view cell?",
          "Displaying additional data inside UITableViewCell"
        ],
        "Coding Challenge (Assignment): UITableView": [
          "Implement an iOS app that has a table view",
          "Solution to Assignment"
        ],
        "Navigation in UIKit based apps (MagicTravel app)": [
          "Navigation: modal presentation",
          "Navigation: pushing view controllers on navigation stack",
          "Navigation: Segues"
        ],
        "Coding Challenge: Navigation": [
          "Implement navigation from table view cell to a different view controller",
          "Solution"
        ],
        "Autolayout (MomentFan app)": [
          "What is Autolayout? Setting constraints in Storyboard / Interface Builder",
          "Setting constraints in Storyboard (part 2), StackViews",
          "Constraints: hugging and compression resistance"
        ],
        "Cocoa Pods (NYCSchools app)": [
          "What is Cocoa Pods?",
          "Installing Cocoa Pods in your system using Gem",
          "Installing Cocoa Pods in your system using HomeBrew",
          "Debugging & resolving CocoaPods installation error",
          "Create a new XCode project",
          "Fixing a \"rvm\" or \"pod\" command not found issue",
          "How to set up Cocoa Pods for Xcode project?",
          "PureLayout, SDWebImage, AlamoFire"
        ],
        "App Structure & Organization": [
          "Basic project settings, files & folders provided by Xcode initially",
          "Organizing Xcode project files and code using Folders/Groups"
        ],
        "Networking: Alamofire, Codable, Decodable, URL Components, URL Session": [
          "NYC Schools Open Data APIs",
          "Setup Networking/Data Layer service",
          "Setup Constants to hold your URL and other important information",
          "Data Error enum",
          "Codable & Decodable to parse incoming JSON data",
          "HTTP",
          "Networking using iOS standard services: URLComponent and URLSession (part 1)",
          "Networking using Apple standard services (part 2)",
          "Networking using Apple Standard service (part 3)",
          "AlamoreFire: how to make a networking call using AF library (part1)",
          "AlamoFire: using Decodable to parse data in the response (part2)",
          "JSON format and details",
          "Completion callbacks / closures"
        ]
      },
      "requirements": [
        "No programming experience in iOS required. You can learn through practicing and watching course lectures",
        "MacOS & Xcode (can be downloaded)",
        "Some general knowledge of programming may help in learning, but the instructor does best to explain concepts."
      ],
      "description": "In this course you can learn about iOS 16, Swift 5, iOS App Development using UIKit & SwiftUI and latest frameworks from Apple, best engineering and industry practices on how to develop iOS apps that scale.\n\n\nThe course has 170+ downloadable Xcode project resources, 10+ live coding exercises, 4+ coding challenges, 5+ quizzes, 2 practice tests, 4+ iOS apps and 165+ course materials such as video course lectures, slides and external references to help solidify course materials.\n\n\nThe main focus of the course will be:\nget familiar with iOS development environment: Xcode 14 and iOS 16\nlearn what's new in iOS 16\nlearn fundamentals of Swift5\nlearn about Swift Charts\nlearn about CoreData & UserDefaults\nlearn how to build apps using Storyboards, SwiftUI and programmatically\nmaster best engineering and industry practices related to iOS development\nlearn how to use popular iOS frameworks: Combine, MapKit, CoreLocation\nget experience building apps with Networking using Alamofire and URLSession\nlearn how to build UI both using Autolayout and programmatically using PureLayout\nget experience with design patterns such as MVC & MVVM\nlearn how to use Notifications & Delegates\nlearn how regular expressions in Swift 5.7 work\n\n\nSwift is a powerful language that Apple recommends to use for iOS development. We will explore basics and fundamentals of Swift 5 language in addition to learning more advanced concepts in Swift 5.\nWe will learn through examples how to use important components of iOS (Table Views, Collection Views, Text Views, Buttons, Text Fields).\nOne of the important best practices of development is to use unit tests. Hence, we will also learn how to write unit tests in iOS.\nWe will learn how to use the latest SwiftUI to build iOS apps. SwiftUI is a next generation tool developed by Apple that can be helpful to build iOS app fast in using responsive and declarative statements. Combine is one of the latest additions from Apple.",
      "target_audience": [
        "New and beginner students who would like to learn iOS",
        "iOS developers / engineers who are already familiar will also benefit from new and additional knowledge about iOS"
      ]
    },
    {
      "title": "iOS Development Kickstart: Craft Your First App With SwiftUI",
      "url": "https://www.udemy.com/course/ios-development-craft-your-first-app-with-swiftui/",
      "bio": "Jump into App Development. Your First Step to a Six-Figure Salary, Solving Real Problems, and Transforming Ideas in Apps",
      "objectives": [
        "You will create your first ever app, which accepts first user-input",
        "Understand how to work in an Xcode environment",
        "Tailor basics of Swift programming language",
        "Experience with Swift variables and constants",
        "Master Swift data types and operators",
        "Understand how to use a Swift control flow",
        "Work with different Swift functions",
        "Embrace the fundamentals of SwiftUI",
        "Understand how HStack, VStack, and ZStack work",
        "Tailor SwiftUI modifiers",
        "Craft all components of your first app",
        "Make the button that acts on your UI"
      ],
      "course_content": {
        "Prepare to Your iOS Development Journey": [
          "Introduction to the Course",
          "What Is an iOS Development?",
          "Swift Programming Language",
          "How to Start with iOS Development",
          "How to Study on Udemy Effectively"
        ],
        "Master Swift Coding Fundamentals": [
          "Playground Tour. Write Your First Swift Code",
          "Variables and Constants",
          "Creating Your First Variable",
          "Data Types",
          "Creating Integer Constant",
          "Data Operators",
          "Control Flow",
          "Creating Your First Control Flow",
          "Functions",
          "Functions with Parameters"
        ],
        "Dive into SwiftUI": [
          "Tour of the Xcode Project",
          "Uncover SwiftUI Basics"
        ],
        "Start Your First Project: Create Weather App": [
          "The Weather App Project Overview",
          "Set Up a New Project in Xcode",
          "Decompose Your Project",
          "Craft the Background and the First Text",
          "Add Gradient and Images",
          "Find More Comprehensive Images for Your App",
          "Define a Separate View for Code Reuse",
          "Adjust Your App Design with Own Color Shade",
          "Create Your First Button",
          "Make Your Button to Act on Your UI",
          "App Pitch Simulation: Present Your First iOS App Built with SwiftUI"
        ],
        "Successfully Finish Your Course": [
          "Final Lecture",
          "How to Leave a Review",
          "How to Get a Certificate",
          "TOP 90 AI Tools in 2024-2025"
        ],
        "BONUS": [
          "BONUS Lecture"
        ]
      },
      "requirements": [
        "No programming experience is needed; I'll teach you everything you need to know",
        "A Mac computer running macOS 14 (Sonoma) or a PC running macOS",
        "No paid software is required; everything will be created in Xcode 15 (which is free to download)"
      ],
      "description": "Unlock the door to a thrilling career in iOS development!\nAs the tech industry evolves, the demand for skilled iOS developers continues to rise. By joining this course, you're stepping into a world where creativity meets innovation, with a SIX-FIGURE PAY, a significant IMPACT ON SOCIETY, and the flexibility to work in diverse environments.\nWelcome aboard! It's great to see your enthusiasm to learn iOS development from the ground up. Whether you're new to programming or looking to switch gears, I'm here to guide you every step of the way.\nIn this course, you'll learn how to code with Swift 5.9 and develop stunning apps for iOS 17 on the iPhone—even with zero programming experience! Through engaging, fun video tutorials, I'll walk you through the fundamentals of app development, equipping you with the skills needed to excel as an iOS app developer.\n\n\nThe course includes 3.5 HOURS of HD video tutorials and builds your programming knowledge while doing real world tasks.\nEvery lesson contain practical topic and given by small chunks, so you never get bored and you will use your new knowledge exactly after each lesson. Because practice - is most important in programming.\nMORE THAN 80% OF THIS COURSE IS PRACTICE, PRACTICE AND PRACTICE.\n\n\nYOU WILL LEARN HOW TO:\nWrite code with the Swift programming language\nMake a basic UI with SwiftUI\nBring it all together to build a real app that works and reacts to user input!\nBy the end of this course, you will know the basics of Swift 5.9 and be ready to make a simple app with basics of SwiftUI.\n\n\nOTHER REASONS TO JOIN THIS COURSE:\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos on YouTube. Or instructors who you can't understand. Or teachers who have no real-world, in-person teaching experience. Your time is precious!\nDon't waste your money\nInside this course, you're getting exactly the same curriculum as I give my students in person in personal classes. Instead of spending a lot of $ on offline courses, where you don’t get such a deep understanding of how things work, or taking time off work for those! Save loads of money by getting this course, and start building your career by completing small practical tasks!\n\n\nWHO AM I?\nMy name is Illia Postoienko! I’m an iOS engineer from Ukraine. I’ve been working for 6+ years in iOS development, and I have over 7 years of overall experience in IT. By this time, I was working for big and small companies, outsource and products, and even one tech giant from the Fortune 500 list: Cisco Systems. And even now, I'm working on new beautiful apps that help people fulfill their needs and solve real-life problems.\n\n\nI’m happy to share my knowledge with you. With me, you could also become an iOS developer and help people solve real life problems within their phones by connecting them with business/organisations or just providing a useful service for their needs.\nDoesn’t that sound amazing?\n\n\nREMEMBER…\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's a complete no-brainer; sign up today with ZERO risk and EVERYTHING to gain.\nSo, what are you waiting for? Click the “Buy Now” button and take your first step toward the career of an iOS developer!",
      "target_audience": [
        "Beginners in iOS Development: It's designed for individuals new to iOS development. This includes those with little to no prior knowledge of programming or app development who are interested in learning how to create applications on the iOS platform",
        "Aspiring App Developers: The course is well-suited for people looking to start a career in app development, particularly those interested in developing for Apple devices. The foundational knowledge in Swift and SwiftUI provided by the course is essential for anyone aspiring to build iOS apps professionally or as a hobby",
        "Career Changers: Those looking to switch careers into tech and software development, particularly in mobile app development, might see this course as a useful starting point. The foundational skills taught in the course can serve as a stepping stone to more advanced studies or entry-level positions in iOS development",
        "Students and Lifelong Learners: This audience includes students (whether in high school, college, or adult education) who have a keen interest in technology and software development. Lifelong learners who are continually looking to add new skills or transition into tech fields might also find this course beneficial",
        "Tech Enthusiasts with a Specific Interest in Apple Products: Individuals who are fans of Apple products and want to understand more about how apps are developed specifically for iOS devices will find this course appealing",
        "Anyone interested in understanding iOS development fundamentals"
      ]
    },
    {
      "title": "Learn iOS Programming from Scratch",
      "url": "https://www.udemy.com/course/learn-ios-programming-from-scratch/",
      "bio": "The Most Comprehensive iOS Resource on the Web",
      "objectives": [
        "To create full fledged iOS Applications",
        "To understand the core concepts of iOS Programming",
        "To understand the features and specifications of Xcode",
        "To master Objective C"
      ],
      "course_content": {
        "Introduction to iOS programming and Objective C": [
          "Introduction to iOS Programming Course",
          "Xcode Installation",
          "Hello World for iOS7",
          "Hello World - The first iOS Program",
          "The Xcode Interface",
          "Data Types in Objective C",
          "Introduction to OOPS",
          "Objective C Types and Classes",
          "Classes and Objects",
          "Properties in Objective C",
          "Overriding Init",
          "Strong and Weak Properties",
          "Section 1 Quiz"
        ],
        "iOS Views and Objective C Concepts": [
          "MVC and Application Structure",
          "Single View Template",
          "Empty Template in iOS",
          "Properties, Action Methods and Controls",
          "Introduction to pLIsts",
          "Introduction to NSArray",
          "Introduction to NSMutable Arrays",
          "UIPicker View",
          "UIPickerView with Mutable Array",
          "Saving and Loading with Plists",
          "Section 2 Quiz"
        ],
        "Target Action and Delegation in iOS": [
          "Understanding Target - Action",
          "Target -Action Controls in IB",
          "Controls using Code",
          "Delegation in iOS",
          "Delegation Demo",
          "Section 3 Quiz"
        ],
        "Controllers, Storyboards and Advance Objective C": [
          "Introduction to Storyboards",
          "A working example for storyboard",
          "The Unwind Segue",
          "Navigation Controllers",
          "Navigation Controller and Story Boards",
          "Navigation Controllers and Xib Files",
          "Categories and Extensions in Objective C",
          "Categories - Live Example",
          "Extensions - Live Example",
          "Section 4 Quiz"
        ],
        "Table Views and Tab Bar Controllers": [
          "Introduction to Table Views",
          "Implementing Table Views - Story Boards",
          "Populating Table Views",
          "Table View to Detail View",
          "Adding Rows",
          "Row Deletion",
          "Grouping Table Views",
          "Tab Bar Controller and App Organization",
          "Tab Bar Controller Demo"
        ],
        "Building an iOS Project - The Initial Steps": [
          "Introduction to Project",
          "Project Demo 1 - Adding Part to Inventory",
          "Updating the Project Model",
          "Correction to the Model",
          "Deleting Part of the Catalog",
          "Assembly Class"
        ],
        "Organizing View Controllers in an App": [
          "View Controllers for our App",
          "Parts Room App View Controllers",
          "Displaying the Parts Catalogue",
          "Adding and Deleting Parts",
          "Detail View",
          "Inventory Management"
        ],
        "Mastering SQLite": [
          "Introduction to SQLite",
          "Creating a SQLite DB",
          "CopyIng Database",
          "Connecting to DB and testing Queries",
          "Inner Join"
        ],
        "Multimedia in iOS": [
          "Multimedia in iOS",
          "Views with DB",
          "Audio Management",
          "Video in IOS",
          "Using Video in iOS - Demo"
        ],
        "Project - Integration and 2D Graphics": [
          "2D Graphics in App",
          "Relation Types in SQL",
          "Displaying DB",
          "Graphics Part 1",
          "Graphics Part 2",
          "Getting Drawing Instructions",
          "Implementing Graphics"
        ]
      },
      "requirements": [
        "Mac OS Snow Leopard and above. You can also use service like macincloud to do this course."
      ],
      "description": "The best iOS course on the web just got better. The iOS course now have been updated for the latest iOS7 SDK. This update not only covers the design basics but also cover topics such as Airdrop, Multitasking, Local Notifications, SpriteKit, Game Center, Core Motion, Core Location and Camera Updates. You will not only learn about the concepts but will get a proper understanding with live demo examples.\nThis 3+ hours update covers the real iOS7 changes and will sure add to you iOS competence.\nThis Video series is the most comprehensive course on net to learn and master iOS programming. We have designed the course keeping in mind the need of the developer community to have a complete a structured curriculum to learn this exciting technology. The course will allow even a beginner to grasp the important concepts and create apps by the end of this course. iOS apps are the most profitable across all Smartphone platforms and with a large community of active app users this technology continues to present great opportunity for any developer. This course is based on years of teaching iOS programming to thousands of students and build on the inputs received from students and industry professionals alike.\nThe course does not assume any prior knowledge of iOS or Objective C the primary programming language for iOS development and is well suited for both beginners and intermediate developers. Our course covers the latest OS version as permitted by Apple Developer NDA. By the end of the series you will be able to develop interesting and exciting Apps of your own or for your customers. This series has been created by our in house experts and focus on real and practical usage of the technology. This series is useful for anybody who wants to quickly learn iOS or wants to upgrade their knowledge for the latest OS.",
      "target_audience": [
        "Anyone with basic knowledge of programming can take this course."
      ]
    },
    {
      "title": "The Complete iOS11 Swift4 Development Course - Build 28 Apps",
      "url": "https://www.udemy.com/course/the-complete-ios-11-course/",
      "bio": "Use Xcode 9 & Swift 4 to make great apps. Learn CoreML (Machine Learning) & ARKit (Artificial Reality) for iOS 11",
      "objectives": [
        "Be able to develop simple and complex iPhone apps",
        "Write clean and functional codes in Swift",
        "Become proficient Xcode developer",
        "Be able to launch career as a freelancer or apply for iOS jobs"
      ],
      "course_content": {
        "Introduction and Preparation": [
          "Course Introduction - Why you should take this course",
          "Introduction Florist App",
          "Download Xcode from the App Store",
          "Create your first app in 8 minutes",
          "Things you need to follow the course",
          "How to follow the course and some useful tips",
          "About me"
        ],
        "Introduction to iOS Development - The Basics": [
          "Launching Xcode for the first time",
          "How to change Xcode settings",
          "Quick Xcode Tour",
          "Add background image and duplicating view controllers",
          "Introduction to UILabels",
          "Introduction to UIButtons",
          "How to use Xcode preview",
          "Introduction to UITextView and how to set the initial view controller",
          "Adding missing constraints to views automatically",
          "Adding layout constraints manually to views",
          "Layout constraint errors",
          "Editing layout constraints and how to reset frames",
          "Introduction to Stack View",
          "Toggle between software and hardware keyboard on the simulator",
          "Introduction to segue",
          "Adding a UINavigationController to our app",
          "Clip the image view for smooth segue transition",
          "Customising the UINavigation bar",
          "Adding title to the UINavigation bar (hack)",
          "Changing the tint color of barbutton item and back button",
          "How to change back button text and how to have no back button text",
          "UINavigationController push segue error",
          "Introduction to launch screen storyboard",
          "Introduction to plist.info and how to make app exit on suspend",
          "How to change view controller status bar color",
          "How to hide the status bar",
          "Using flaticon.com to download icons for our app",
          "Creating icon on canva.com",
          "App icon sizes and asset catalog creator tool",
          "Adding icon to iOS app",
          "Resolving build time issues in the app",
          "How to debug view hierarchy",
          "Memory usage basics",
          "How to simulate memory warnings",
          "Introduction to app delegates file",
          "Understanding ViewDidLoad and ViewWillAppear",
          "Apple documentation class reference",
          "Coordinate system in ios",
          "Adding UILabel to the app programmatically",
          "Programmatically adding UIImageView and accessing class reference from Xcode",
          "Creating IBOutlets and reference***",
          "Creating view controller Swift file for other scenes",
          "Creating IBActions for UIButton click events",
          "IBOutlet connection error and how to recover",
          "Dynamically changing properties through button actions",
          "ViewWillAppear vs ViewDidLoad",
          "Florist app source code"
        ],
        "Introduction to Swift - Part 1 - The Basics": [
          "Introduction to playground",
          "Constants and variables",
          "Introduction to Data Types",
          "Introduction to String data type",
          "Introduction to Int data type",
          "Introduction to Float and Double types",
          "Introduction to Boolean data type",
          "String interpolation",
          "String interpolation continued...",
          "Good naming conventions to follow",
          "Arithmetic operators",
          "Integer division and possible errors",
          "Remainder operator",
          "Compound assignment operators",
          "Comparison operator",
          "Comparison operator - checking for equality",
          "NOT operator",
          "How to find out the data types of variables",
          "Type casting",
          "Problem Solution 1 - Swap variables",
          "Problem Solution 2 - Area and perimeter",
          "Problem Solution 3 - Calculate Percentage",
          "Problem Solution 4 - Last digits of a number",
          "Introduction to If statements",
          "Else branch",
          "Nested if statement",
          "Else...if statements",
          "Problem and Solution: Maximum of two numbers",
          "Problem and Solution: Even or odd number",
          "Problem and Solution: Divisibilty calculations",
          "Logical AND operator",
          "Logical OR operator",
          "Problem Solution: Class marks",
          "Problem Solution: Divisibility revisited",
          "Ternary conditional operator",
          "Switch statements",
          "Switch case - matching multiple values",
          "Switch range matching",
          "Switch break statement",
          "Fallthrough statement",
          "Introduction to Swift Array",
          "Reading values from array",
          "Getting multiple values using closed range",
          "Array type and Any type",
          "Merging two arrays",
          "Adding values to existing array",
          "Removing values from arrays",
          "Modifying values in arrays",
          "Mutable and immutable array",
          "Copying value from one array to another - reference and value types",
          "Introduction to Dictionary",
          "Retrieving values from Dictionary",
          "Adding a new key-value pair to a dictionary",
          "Updating value in a dictionary",
          "Removing items from dictionary",
          "Other dictionary methods",
          "Introduction to For Loop",
          "Using value of \"i\" in a loop and the underscore variable",
          "Looping through arrays",
          "Looping over dictionaries",
          "Problem and Solution: Maximum value in an array",
          "Problem and Solution: Separate numbers into odd and even",
          "Problem and Solution: Sum the content of an array",
          "Problem and Solution: Reversed array",
          "Inner loops",
          "Break statement",
          "Continue statement",
          "Introduction to While Loop",
          "Beware of an infinite loop",
          "Repeat while loop",
          "Repeat while loop example",
          "Problem and Solution: Separate numbers to array - while loop example",
          "Introduction to functions",
          "Function parameters",
          "Multiple parameters of a function",
          "Returning values from functions",
          "Calling a function from another function",
          "Parameter as a let constant",
          "Introduction to Optionals",
          "Introduction to Optionals contd...",
          "Returning nil from a function",
          "How to work with optional values",
          "Unwrapping optional values",
          "Force unwrap optional types",
          "Implicitly unwrapped Optionals",
          "Nil coalescing operator",
          "Multiple optional binding - unwrapping multiple optionals",
          "Optional Chaining",
          "Variable scopes"
        ],
        "Introduction to Storyboard, Segue and UINavigationController": [
          "Introduction to Bill Splitter app",
          "Designing the BillSplitter app UI",
          "Setting up the IBOutlets and IBActions for BillSplitter app",
          "Obtaining user inputs from UITextFields",
          "Cleaning up the calculation code and displaying result",
          "Dismissing the keyboard",
          "Formatting string for currency",
          "Setting up the result View Controller",
          "Using PrepareForSegue to send value to next screen",
          "Using the ShouldPerformSegue method",
          "Dismissing a view controller",
          "Unwind segue",
          "Calling segue programmatically",
          "Using segue identifier to choose the right segue",
          "Presenting view controller by code",
          "Using code snippets",
          "How to pop view controllers",
          "Separating scenes into multiple storyboard",
          "Manually referencing other storyboards ****",
          "Sending value to a view controller inside a UINavigationController",
          "Bill splitter app source code"
        ],
        "Introduction to UITabBarController, Segmented Control, Switch and UserDefaults": [
          "Introduction to MyQuotes App",
          "Designing the UI of MyQuotes app",
          "Implementing the forward and back buttons",
          "Alternative method without using a for loop",
          "Implementing the favorite feature",
          "Changing the app theme",
          "Changing the theme colours",
          "Persisting the theme for future launches",
          "Adding borders to the UIImageViews",
          "Changing borders of UIButtons and adding corner radius",
          "Change the tab bar appearance",
          "My quotes app source code"
        ],
        "Introduction to using Plist file, and using Custom Classes": [
          "Introduction to the workout app",
          "Designing the UI of the app",
          "UI Design continued...",
          "Adding a plist file to the app",
          "Reading the content of Plist",
          "How to create a custom class",
          "Using tags, class type and subview properties to customise views",
          "Dynamically updating title from plist",
          "Sending data to the details screen",
          "Design the details screen using tags to get view objects",
          "Change navigation bar color",
          "Using a constant file",
          "Using the app delegate to call functions from any view controller",
          "Workout guide app source code"
        ],
        "Introduction to TableViewController with default cell": [
          "Introduction to the MiniTasks app",
          "Setting up the UI for Minitask app",
          "Setting up the UIPickerView datasource and delegates",
          "Setting up the DidSelectRow on UIPickerView",
          "Implementing DatePickerView and DateFormatter",
          "Minimum date of UIDatePicker and adding values to array",
          "Introduction to UITableView",
          "Using the CellForRow method, displaying dates and numbering of data",
          "Final UI design",
          "Mini task app source code"
        ],
        "Introduction to UITableView object with custom cell": [
          "Introduction to FaveCar app",
          "Designing the UI of FaveCar app",
          "Subclassing UITableViewController",
          "Dismissing the keyboard using UITextfield delegate",
          "Characters count using UITextfield delegate",
          "Getting access to your photo library",
          "Importing photo using didFinishPickingMedia method",
          "Validating user inputs to make sure image and name are available before saving",
          "Using tags to configure cell",
          "Pop view controller and add items to top of the list",
          "Convenient method to load values",
          "Using a custom UITableViewCell",
          "Deleting data from the UITableView",
          "UITableView didSelectRow to perform segue and using cell segue to another VC",
          "Obtaining indexPath inside PrepareForSegue",
          "Fave cars app source code"
        ],
        "Introduction to UICollectionView": [
          "Introduction to Travelpics app",
          "Setting up the UI of the TravelPics app",
          "Displaying data in UICollectionView",
          "How to launch a camera",
          "How to use UIAlertAction",
          "Sizing the UICollectionViewCell",
          "Prepare for segue in UICollectionView",
          "How to zoom on images",
          "Travel pics app source code"
        ],
        "Swift Part 2 - Object Oriented Programming": [
          "Introduction to Tuples",
          "Shorthand for multiple declaration of constants and variables",
          "Checking for Tuples Equality",
          "Changing the value of a Tuple",
          "Tuples are value types",
          "Tuples quick example",
          "Introduction to enumerations",
          "Enumeration shorthand",
          "Introduction to Structs",
          "Struct default values",
          "Struct functions",
          "Changing the value of stored properties using var instead of let",
          "Restricting the ability to change a stored property value by using a let",
          "Allowing instance methods to change stored properties values",
          "Structs are values types",
          "Struct example with an enum",
          "Making a shadow copy",
          "Introduction to Classes",
          "Class functions - instance methods",
          "Type methods",
          "Class init method",
          "Introduction to Inheritance",
          "Inheritance example",
          "Adding new properties to a subclass",
          "More on class hierarchy",
          "Static property of a class",
          "Calling the super method in subclass",
          "Static and instance property and class and instance methods gotchas",
          "Computed properties",
          "Computed property example",
          "Class Extensions",
          "Extending the Double class",
          "Access control on properties",
          "Setter and getters on stored properties",
          "Property observers",
          "OldValue and NewValue in DidSet and WillSet"
        ]
      },
      "requirements": [
        "No pre-knowledge required - I'll teach you everything you need to know to make great apps",
        "A Macbook laptop, Mac mini or iMac",
        "No paid software is required - all coding is done using Xcode 9 (FREE)"
      ],
      "description": "***NEW Section added on how to send push notification on iOS using OneSignal SDK.\n\n\nMAKE YOUR DREAMS A REALITY\nDo you want to develop your own dream apps or become a pro iOS developer? Do you want to change career and become an iPhone app developer? You have come to the right course.\nI am Dee Odus and I have created this course to make your app development dream a reality. This course will TEACH you the basic, intermediate and advanced skills needed to call yourself an iOS app developer. Whether you want to create apps for yourself, change career to become an iOS developer and apply for iOS jobs or you want to earn money as a freelance developer, this course will get you started on your DREAMS, you will learn how to design and develop 28 apps.\nIn this course, you will develop professional quality apps. You don't need any previous programming skills. You simply need a desire to learn and a Mac computer.\nThe course is app-based, which means you will build a complete and professional app step-by-step during each section of the course. No other course teaches you this same way.\nBy the end of the course, you'll be able to:\n1. Design and build simple and complex apps (we’ll develop 28 apps in this course)\n2. Call yourself an app developer.\n3. Create your own apps worthy of publishing to the app store.\n4. You will be able to apply for iOS development jobs\n5. You will gain a confidence boost in your skills and your ability.\nABOUT ME\nI have been developing on iOS platform for the last five years. In this period of time I have developed over 120 apps and worked with 2 successful startups in bringing their apps to the market. I work full time as an iOS developer, as a freelancer. I have also developed around 10 apps of my own that you can find on my website.\n\n\nABOUT YOU\nThis course has been developed for beginner and intermediate programmer in mind. If you have never programmed before but you have a strong desire to learn programming on the iOS platform you will find this course adequate. Also if you are intermediate developer you will find lots of topics that will improve your skills and also some of the latest hot topics such as artificial reality, machine learning, vision framework, drag and drop and so on.\n\n\nHOW LONG DOES IT TAKE\nMastering any skills takes time and iOS development is no different. This course is over 40 hours long which means if you study 1 hour per day you are looking to complete the course in just over a month. However you will develop your first basic app within 30 mins into the course and within 2 hours of the course you develop a beautiful app that you will be proud of.\n\n\nSIGN UP/ENROLL NOW\nEnroll in the course now so you can start learning immediately. You have a 30 days money back guarantee if you change your mind. There’s no better time to learn iOS development. If you are ready to begin your iOS development journey CLICK THE ENROLL BUTTON now to begin your iOS development career.\nSUPPORT WHEN YOU NEED IT\nYou will be supported throughout your journey in this course. If you get stuck on any of the lectures, you can use the Q/A section of the course to ask for assistance. I am committed to supporting my students on this course, I am constantly involved in the Q/A to provide assistance to anyone that needs it.\n\n\nSOME OF THE TOPICS COVERED\niOS development basics\nNavigation and Tab bar controller\nStoryboard, segues, and common controls\nSwift beginner and intermediate, and object oriented programming\nHow to use tableview and collection view\nPlaying and recording audio\nVideo playback\nLocation and map API\nRich user notification\nSharing to Facebook and Twitter\nHow to work with JSON\nCore data\n3D Quick action\nCore graphics and Quartz 2D\nGesture recognizers\nTouch ID\nHow to download with URLSession\nVersion control with Xcode, Bitbucket and Source Tree app\nAnd so on…\n\n\nWHAT ABOUT IOS 11, XCODE 9 AND SWIFT 4\nThe course include new features added to iOS 11 and Xcode 9. We are going to create multiple apps that focus on each of the new features. Some of these new features include;\nARKit\nArtificial Reality app used to take thousands of lines of code and complex algorithm to achieve but with the new iOS 11 ARkit, it takes only few lines of code to make an AR app.\nMachine Learning\nMachine learning is gaining traction in the computer industry and there’s no better time to learn machine learning and how to develop an app that take advantage of it. We’ll develop a simple app that can recognise dominant object in a photo and an app that can recognise the faces of the people in a photo\nDrag and Drop\niOS 11 allows user to drag and drop content within one app and also between two different apps. We’ll develop a basic app that allows dragging text from one part to another part.\nVision\nWe’ll develop an app that allows you to track real world object directly through your phone’s camera. This is a nice feature.\nMany more...\nI’ll be adding more iOS 11 topics that include Natural Language Processing, SiriKit, PDFKit, Apple Music integration, new camera APIs, new Files app and so on…\nNow’s the best time to learn iOS 11, Swift 4 and Xcode now before the official release of the public version to the users.\nIf you're ready to become a proficient app developer to develop your own apps or to work as a freelance or full-time developer, click the \"Buy Now\" button and join the course today!\nSTILL NOT CONVINCED?\nWatch some of the FREE preview lectures to learn more about the course. Click the enroll button to join the course today.\n(*** All videos in this course will be updated to Xcode 9 once it's released by Apple)",
      "target_audience": [
        "Anyone who wants to learn how to make great apps",
        "Anyone who wants to make career change to become an iOS developer",
        "Anyone who wants to improve their iOS development skills"
      ]
    },
    {
      "title": "Machine Learning use in Flutter - The Complete 2025 Guide",
      "url": "https://www.udemy.com/course/machine-learning-for-flutter-the-complete-2023-guide/",
      "bio": "Most Comprehensive Flutter Machine Learning Course Available Online, Build 22+ Flutter ML, AI Apps | 2025 Flutter Guide",
      "objectives": [
        "Learn use of Machine Learning & Computer Vision in Flutter Apps",
        "Train Machine Learning Models on Custom Datasets for Flutter Apps",
        "Use Pre-Trained Tensorflow Lite Models in Flutter Dart Apps",
        "Train Custom Object Detection & Image Classification Models and build Smart Flutter Dart Apps",
        "Use Computer vision models in Flutter with both images & Live Camera Footage",
        "Build A Text Recognition Application in Flutter",
        "Build A Face Detection and Facial Expression Detection Application in Flutter",
        "Build A Text Translation Application in Flutter",
        "Develop a Human Pose Estimation Application in Flutter",
        "Image Labeling / Image Classification in Flutter",
        "Perform Object Detection in Flutter with Images and Videos",
        "Add Smart Reply Suggestion Models in Chat based Flutter Apps",
        "Extract entities or valuable information from text in Flutter",
        "Create a barcode scanner app in Flutter",
        "Build Hand Writing Recognition Application in Flutter (Digital Ink Recognition)"
      ],
      "course_content": {
        "Introductions": [
          "Course Update December 2024"
        ],
        "Setup for MacOS": [
          "Install the Flutter SDK",
          "Install Android Studio",
          "Install and Setup XCode",
          "Creating A Flutter Project and Installing in IOS Simulator",
          "Install the Android Emulator"
        ],
        "Setup for Windows": [
          "Installing Flutter on Windows",
          "Installing Android Studio",
          "Creating Android Virtual Device"
        ],
        "Choose Images from Gallery or capture Images using Camera in Flutter": [
          "Setting Up a new Flutter Project and Creating Application GUI",
          "Adding the Library and setting configurations for Android & IOS",
          "Choosing Images From Gallery In Flutter",
          "Capturing Images using Camera in Flutter",
          "Overivew"
        ],
        "Displaying Live Camera Footage in Flutter": [
          "Creating new Flutter project and Adding library",
          "Displaying Live Camera Footage in Flutter",
          "Getting Frames of Camera Footage One by One in Flutter",
          "Camera Package Overview"
        ],
        "Image Labeling / Classification in Flutter for Android & IOS": [
          "Section Introduction",
          "Setting up the Image Labeling With Images Flutter Project",
          "Adding Library in Flutter and Setup for Android and IOS",
          "Performing Image Labeling in Flutter With Images",
          "Showing ML models results on Screen to the User in Flutter",
          "Image Labeling with Images in Flutter Overview",
          "Building GUI of Image Labeling with Images Flutter Application",
          "Making Image Labeling Results Look better in Flutter"
        ],
        "Realtime Image Labeling in Flutter": [
          "Setting up Real Time Image Labeling Project in Flutter",
          "Setting up Image Labeling Library for Android & IOS in Flutter",
          "Converting Camera Frames and Processing them one by one in Flutter",
          "Passing Frames on Image Classification model and Getting Results in Flutter",
          "Building GUI of Realtime Image Classification Flutter Application",
          "Showing Frame Image on Camera Footage in Flutter"
        ],
        "Barcode Scanning in Flutter for Android & IOS": [
          "Barcode Scanning Section Introduction",
          "Setting up Barcode Scanner Application Project",
          "Adding Barcode Scanner Package and Creating Scanner",
          "Performing Barcode Scanning in Flutter with Images",
          "Barcode Scanning with Images Overview",
          "Setting up Realtime Barcode Scanning Application Project",
          "Performing Barcode Scanning with frames of live camera footage",
          "Testing Realtime Barcode Scanning Application",
          "Realtime Barcode Scanning Application Overview"
        ],
        "Face Detection in Flutter for Android & IOS": [
          "Face Detection Section Introduction",
          "Setting up the Face Detection with Images Project",
          "Adding the Library and creating Face Detector",
          "Performing Face Detection in Flutter With Images",
          "Drawing Rectangles around detected Faces on Images",
          "Drawing Facial Contours",
          "Facial Landmarks Detection",
          "Face Classification / Emotion Detection",
          "Face Detection with Images Overview",
          "Setting Up Realtime Face Detection Flutter Project",
          "What we have done so far",
          "Creating Face Detector",
          "Drawing Rectangles Around Detected Faces In Realtime",
          "Face Detector Painter",
          "RealTime Face Detection Application Testing",
          "Drawing Facial Contours In Realtime",
          "RealTime Facial Contours Detection Testing",
          "RealTime Face Detection In Flutter Overview"
        ],
        "Object Detection in Flutter for Android & IOS": [
          "Object Detection Section Introduction",
          "Setting Up Object Detection With Images Project",
          "Performing Object Detection With Images In Flutter",
          "Drawing Rectangles Around Detected Object In Flutter",
          "Object Classification With Images",
          "Setting Up Real Time Object Detection Application Project",
          "Performing Object Detection With Frames of Live Camera Footage in Flutter",
          "Drawing Rectangles Around Detected Objects In Realtime",
          "Realtime Object Detection Testing",
          "RealTime Object Classification in Flutter",
          "Realtime Object Detection Testing Drawing Names of Detected Classes",
          "Live Feed Object Detection Overview"
        ]
      },
      "requirements": [
        "A little Knowledge of App Development in Flutter"
      ],
      "description": "Welcome to Machine Learning in Flutter: The Complete 2025 Guide\nMaster the integration of machine learning models in your Flutter applications with the most comprehensive Google Flutter ML course available online.\nNo prior knowledge of machine learning or computer vision required! Whether you are a beginner or an experienced developer, this course will guide you through using and training machine learning models in Flutter (Android & iOS) applications.\nWhat You Will Learn:\nUtilize Existing ML Models: Learn to integrate pre-trained TensorFlow Lite models and Firebase ML Kit into your Flutter applications for both Android and iOS.\nTrain Custom ML Models: Discover how to train your own machine learning models for image classification and object detection without needing extensive background knowledge.\nComputer Vision Techniques: Implement advanced computer vision features like image classification, object detection, image segmentation, barcode scanning, pose estimation, and more.\nReal-time Applications: Build applications that process live camera footage for real-time ML tasks, including text recognition, face detection, and image labeling.\nComprehensive Flutter Projects: Create over 20 complete Flutter applications, showcasing your ability to handle various ML tasks and computer vision models.\nMachine Learning Features Covered:\nImage Classification: Classify images from the gallery and live camera footage.\nObject Detection: Detect objects in images and real-time camera frames.\nImage Segmentation: Make images transparent by segmenting them.\nBarcode Scanning: Scan barcodes and QR codes.\nPose Estimation: Detect human body joints.\nText Recognition: Recognize text in images.\nText Translation: Translate text between different languages.\nFace Detection: Detect faces, facial landmarks, and expressions.\nSmart Reply: Generate smart reply suggestions in chat applications.\nDigital Ink Recognition: Recognize handwritten text.\nLanguage Identification: Identify the language of a given text.\nEntity Extraction: Extract different entities from text.\nCourse Highlights:\nIntroduction to Key Libraries:\nImage Picker: Choose images from the gallery or capture with the camera.\nCamera: Access live camera footage frame by frame.\nFirebase ML Kit Integration:\nBuild applications using features like image labeling, barcode scanning, text recognition, face detection, and more with both static images and live camera footage.\nTensorFlow Lite Models:\nImplement pre-trained models for image classification and object detection.\nCreate real-time applications using models like MobileNet and EfficientNet.\nTraining Custom Models:\nGather and prepare datasets.\nTrain image classification and object detection models.\nConvert models to TensorFlow Lite format for use in Flutter apps.\nWho This Course is For:\nBeginners: Those new to Flutter and mobile app development.\nIntermediate Developers: Flutter developers looking to integrate advanced ML features.\nExperienced Developers: Developers seeking to enhance their apps with custom machine learning and computer vision models.\nTech Enthusiasts: Anyone interested in exploring AI and ML within mobile applications.\nWhy Enroll?\nComprehensive Content: Over 22 fully-fledged Flutter applications.\nExpert Instruction: Led by Muhammad Hamza Asif, with 6+ years of experience and a community of 60,000+ students.\nComplete Confidence: 30-day money-back guarantee from Udemy.\nJoin now and transform your Flutter development skills with powerful machine learning capabilities. Click \"Buy Now\" to start your journey in the world of AI-driven Flutter applications!",
      "target_audience": [
        "Anyone who took Basic Flutter course before",
        "Beginner Flutter Developer curious about Machine learning and computer vision use in Flutter",
        "Experienced Professional want to add ML models in their Flutter Applications",
        "App developer want to learn use of Machine learning in their Flutter Applications",
        "Intermediate Flutter developers looking to enhance their skillset"
      ]
    },
    {
      "title": "Android App Development Bootcamp : Kotlin | Certificated+",
      "url": "https://www.udemy.com/course/kotlin-android-training-android-app-development/",
      "bio": "Learn Kotlin from Scratch and Build Real Android Apps – No Experience Needed, Project-Based Learning with Kotlin Android",
      "objectives": [
        "Gain a comprehensive understanding of the Android Studio User Interface and its functionalities.",
        "Master the basics of Android Studio Editor for efficient app development.",
        "Understand the significance of learning Android Development and Kotlin for modern-day app creation.",
        "Learn the initial steps for creating an Android project in Android Studio",
        "Configure and create Android Virtual Devices (AVD) for effective app testing.",
        "Master the concept of defining variables in Kotlin for effective data handling.",
        "Understand the role of semicolons in Kotlin and their impact on code structure.",
        "Explore and implement assignment, addition, and subtraction operators in Kotlin for efficient computation.",
        "Learn to use division, multiplication, increment, and decrement operators in Kotlin.",
        "Implement and analyze the usage of String templates in a demo application for practical understanding.",
        "Gain proficiency in declaring various data types in Kotlin for flexible data handling.",
        "Grasp the concept of nullable types in Kotlin and their importance in error handling.",
        "Explore and implement solutions to the Kotlin null problem for robust application development.",
        "Master the art of type casting in Kotlin for effective data type conversions.",
        "Understand the importance and usage of comments in Kotlin for code documentation.",
        "Learn to implement equality operators in Kotlin for logical comparisons.",
        "Explore the functionality of logical AND and logical OR operators in Kotlin.",
        "Master the concept of variables in Kotlin for efficient data storage and retrieval.",
        "Gain proficiency in advanced usage of variables in Kotlin for complex data handling.",
        "Learn to implement if and else conditions for decision making in Kotlin.",
        "Master the concept of nested if statements for complex decision making in Kotlin.",
        "Explore the usage of when conditions for effective decision branching in Kotlin.",
        "Gain proficiency in implementing while and do-while loops in Kotlin for repetitive tasks.",
        "Learn to use for loops in Kotlin for efficient iteration over data structures.",
        "Gain a comprehensive understanding of Kotlin functions and their role in modular programming.",
        "Master the usage of the return keyword in Kotlin functions for effective data flow control.",
        "Explore and implement advanced function arguments in Kotlin for flexible function usage.",
        "Understand the process of declaring functions in Kotlin for efficient code organization.",
        "Implement and analyze the usage of parameters in Kotlin functions for dynamic data processing.",
        "Gain an in-depth understanding of object-oriented programming (OOP) concepts in Kotlin.",
        "Master the usage of class functions for encapsulating behavior in Kotlin.",
        "Understand the role of class variables in object-oriented programming for data encapsulation.",
        "Explore and implement the concept of encapsulation for secure data handling in Kotlin.",
        "Gain proficiency in using visibility modifiers such as public and private for controlled data access in Kotlin.",
        "Understand the importance and usage of the final modifier in Kotlin for data immutability.",
        "Master the concept of primary and secondary constructors in Kotlin for flexible object creation.",
        "Implement a game using object-oriented programming principles in Kotlin.",
        "Learn to enable and utilize ViewBinding for efficient view management in Android apps.",
        "Implement practical examples utilizing ViewBinding for effective UI management.",
        "Create a complete project for a note-taking application in Android.",
        "Design a user interface for the note-taking application.",
        "Further enhance the user interface for the note-taking application.",
        "Create a project and integrate RecyclerView for efficient data display in Android.",
        "Design and customize the user interface for the RecyclerView implementation.",
        "Code the ViewHolder for efficient data item management in the RecyclerView.",
        "Learn to create custom widgets from Kotlin files for enhanced user interface functionality.",
        "Explore and experiment with various Android UI widgets for interactive app design.",
        "Understand the concept of foreground processes in Android app development.",
        "Explore low priority processes and their impact on Android app performance.",
        "Analyze the functionality of the onCreate method in Android activity lifecycles.",
        "Gain proficiency in overriding lifecycle methods for efficient event handling.",
        "Illustrate and understand various activity lifecycle events for effective app management.",
        "Learn to save and restore the instance state of Android activities for seamless user experience.",
        "Master the manual process of saving and restoring instance state for advanced app management.",
        "Test and evaluate the application lifecycle events for robust app performance.",
        "Edit basic activities using the Android Studio layout editor for efficient UI design.",
        "Gain proficiency in using the Android Studio layout editor tool for enhanced app layout design.",
        "Explore advanced functionalities of the layout editor for complex UI design.",
        "Gain a comprehensive understanding of Constraint Layout and its key concepts for advanced UI design.",
        "Explore and implement the usage of chains and guidelines in Constraint Layout for flexible UI structuring.",
        "Master the usage of ConstraintLayout widget for efficient UI management.",
        "Gain an in-depth understanding of event handling mechanisms in Android apps.",
        "Implement and analyze the onClick event from XML for interactive app functionality.",
        "Explore different types of event listeners for diverse user interactions in Android apps.",
        "Implement onClickListener on a button for responsive user interactions.",
        "Learn to set onLongClickListener for handling long press events in Android.",
        "Experiment with motion events for advanced user interactions in Android apps.",
        "Learn effective techniques for fixing errors in Kotlin code for robust app development.",
        "Develop and analyze a bug in the application for practical debugging experience.",
        "Gain proficiency in identifying and fixing bugs in Android applications.",
        "Master the art of stepping in and stepping out for advanced code debugging in Kotlin."
      ],
      "course_content": {},
      "requirements": [
        "No experience need"
      ],
      "description": "*Earn the Official Certificate after Completing the Course\nWhy Choose Android Development with Kotlin?\nAndroid application development has gained immense popularity in recent years, and Kotlin has quickly become the preferred language for Android development. With its concise syntax, null safety features, and seamless interoperability with existing Java code, Kotlin offers a powerful and efficient way to build robust Android applications. By mastering Kotlin, you will be equipped to create cutting-edge Android apps that deliver exceptional user experiences.\nCourse Overview\nThis Android application development course with Kotlin is designed to provide you with a step-by-step learning experience. Each module covers essential topics and hands-on exercises to reinforce your understanding. Here's a breakdown of the course curriculum:\nModule 1: Introduction to Android Development\nIn this module, you will get an overview of Android development and the Kotlin programming language. You will set up your development environment, including Android Studio, and learn the basics of building Android applications using Kotlin.\nIntroduction to Android development\nSetting up the development environment\nExploring Android Studio\nBuilding your first Kotlin app\nModule 2: User Interface Design\nA well-designed user interface is crucial for creating engaging and intuitive Android applications. In this module, you will learn how to design user interfaces using XML and Kotlin code. You will also explore different UI components and layout techniques.\nIntroduction to user interface design\nCreating layouts with XML\nImplementing UI components\nApplying styles and themes\nModule 3: Data Persistence\nStoring and retrieving data is a fundamental aspect of Android application development. In this module, you will explore various data storage options in Android, including SQLite databases and SharedPreferences. You will learn how to work with data efficiently and securely in your apps.\nIntroduction to data persistence\nWorking with SQLite databases\nManaging data with SharedPreferences\nImplementing data encryption\nModule 4: Networking and Web Services\nModern Android applications often rely on network connectivity to fetch data from the web. In this module, you will learn how to interact with web services using Kotlin. You will explore techniques for making HTTP requests, parsing JSON responses, and handling network errors.\nIntroduction to networking in Android\nMaking HTTP requests with Kotlin\nParsing JSON data\nHandling network errors\nModule 5: Working with APIs and Libraries\nAndroid provides a rich ecosystem of APIs and libraries that can enhance the functionality of your applications. In this module, you will discover how to integrate popular APIs and libraries into your projects. You will also learn how to manage dependencies using Gradle.\nOverview of Android APIs and libraries\nIntegrating Google Maps API\nUsing Retrofit for RESTful API integration\nManaging dependencies with Gradle\nModule 6: Advanced Topics in Android Development\nThis module covers advanced topics that will take your Android development skills to the next level. You will explore topics such as background processing, notifications, multimedia, and security. By the end of this module, you will have a solid understanding of advanced Android concepts.\nBackground processing with services and threads\nImplementing notifications and push notifications\nWorking with multimedia: audio and video\nEnsuring app security: encryption and authentication\nModule 7: Testing and Debugging\nTesting and debugging are essential aspects of Android application development. In this module, you will learn different testing techniques and strategies to ensure the quality and stability of your apps. You will also discover tools and best practices for debugging and troubleshooting.\nIntroduction to Android testing\nUnit testing with JUnit and Mockito\nUI testing with Espresso\nDebugging tools and techniques\nModule 8: Publishing and Monetizing Your App\nOnce you have developed your Android application, it's time to share it with the world. In this module, you will learn how to publish your app to the Google Play Store. You will also explore strategies for app monetization, including in-app purchases\nEven though Kotlin is a full-fledged functional programming language, it preserves most of the object-oriented nature of Java as an alternative programming style, which is very handy when converting existing Java code. Kotlin has classes with constructors, along with nested, inner, and anonymous inner classes, and it has interfaces like Java 8. Kotlin does not have a new keyword. To create a class instance, call the constructor just like a regular function. We saw that in the screenshot above.\nKotlin has single inheritance from a named superclass, and all Kotlin classes have a default superclass Any, which is not the same as the Java base class java.lang.Object. Any contains only three predefined member functions: equals(), hashCode(), and toString().\nKotlin classes have to be marked with the open keyword in order to allow other classes to inherit from them; Java classes are kind of the opposite, as they are inheritable unless marked with the final keyword. To override a superclass method, the method itself must be marked open, and the subclass method must be marked override. This is all of a piece with Kotlin’s philosophy of making things explicit rather than relying on defaults. In this particular case, I can see where Kotlin’s way of explicitly marking base class members as open for inheritance and derived class members as overrides avoids several kinds of common Java errors.\nThen, you'll learn how to create apps and run them on virtual devices through guided exercises. You'll cover the fundamentals of Android development, from structuring an app to building out the UI with Activities and Fragments and various navigation patterns. Progressing through the chapters and lectures, you'll delve into Android's RecyclerView to make the most of displaying lists of data and become comfortable with fetching data from a web service and handling images. You'll then learn about mapping, location services, and the permissions model before working with notifications and how to persist data. Moving on, you'll get to grips with testing, covering the full spectrum of the test pyramid. You'll also learn how AAC (Android Architecture Components) are used to cleanly structure your code and explore various architecture patterns and the benefits of dependency injection. The core libraries of RxJava and Coroutines are covered for asynchronous programming. The focus then returns to the UI, demonstrating how to add motion and transitions when users interact with your apps. Towards the end, you'll build an interesting app to retrieve and display popular movies from a movie database, and then see how to publish your apps on Google Play. By the end of this course, you'll have the skills and confidence needed to build fully-fledged Android apps using Kotlin.\nAre you trying to start a career in Android programming, but haven't found the right way in? Do you have a great idea for an app, but don't know how to make it a reality? Or maybe you're just frustrated that to learn Android, you must already know Kotlin. If so, then this course is for you\nWhen Android first arrived in 2008, it was a bit drab compared to the much more stylish iOS on the Apple iPhone/iPad. But, quite quickly, through a variety of handset offers that struck a chord with practical, price-conscious consumers, as well as those who are fashion-conscious and tech-savvy, Android user numbers exploded. For many, myself included, developing for Android is the most rewarding pastime and business, bar none. Quickly putting together a prototype of an idea, refining it, and then deciding to run with it and wire it up into a fully-fledged app, is such an exciting and rewarding process. Any programming can be fun – I have been programming all my life – but creating for Android is somehow extraordinarily rewarding..\n\n\nKotlin is the most succinct language, and therefore is the least error-prone, which is great for beginners. Kotlin is also the most fun language, mainly because the succinctness means you can get results faster and with less code. Google considers Kotlin an official (first-class) Android language. There are some other advantages to Kotlin that make it less error-prone and less likely to make mistakes that cause crashes. We will discover the details of these advantages as we proceed.\nKotlin is an object-oriented language. This means that it uses the concept of reusable programming objects. If this sounds like technical jargon, another analogy will help. Kotlin enables us and others (like the Android API development team) to write code that can be structured based on real-world things, and here is the important part – it can be reused.",
      "target_audience": [
        "Beginner Kotlin Developers",
        "Android Kotlin Programming Training",
        "Mobile App Development Course"
      ]
    },
    {
      "title": "The Complete Flutter and Dart Guide",
      "url": "https://www.udemy.com/course/the-complete-flutter-and-dart-guide/",
      "bio": "Complete package for building interactive android and IOS apps with googles cross platform framework flutter",
      "objectives": [
        "Fundamental Flutter concepts e.g. Widget tree, state management, animations, themes and much more.",
        "Dart Programming",
        "Concepts of Object Oriented Programming (OOP)",
        "Software Design: How to organize and format code for readability",
        "Amazing flutter ui using very simple techniques and widgets",
        "Fetch data from the Internet, using API call",
        "State Management",
        "Use of asynchronous functions",
        "Build user-friendly app with error handling"
      ],
      "course_content": {
        "Introduction": [
          "What is Flutter ?",
          "Why Flutter ?",
          "Requirements for Flutter",
          "How to get the most out of the course"
        ],
        "Setup and installation": [
          "Installing flutter (windows)",
          "Installing android studio",
          "Running your app on android studio"
        ],
        "Installing Visual Studio Code (Optional )": [
          "Installing Vscode",
          "Running your app on vscode"
        ],
        "Contact Us App": [
          "Section intro",
          "Getting started from scratch",
          "Hello World",
          "Scaffold and hot reload",
          "Adding other widgets",
          "Using Container Widgets",
          "Styling and finishing up"
        ],
        "Testing your app on Physical Device": [
          "Adding icon in IOS and Android",
          "Testing your app on Android",
          "Testing your app on IOS"
        ],
        "Challange ( Diamond App )": [
          "Intro",
          "Solution steps",
          "Code"
        ],
        "Dart Programming": [
          "Section intro",
          "Write your first code in dart",
          "Basic Data types",
          "Dart string ,literals and string interpolation",
          "Final and constant",
          "if else_statement",
          "conditional statements",
          "switch case",
          "For_loop",
          "while and do while loops",
          "break statement",
          "Function",
          "Constructors",
          "Getter and setter",
          "Dart Map"
        ],
        "Pet App": [
          "Section Intro",
          "getting started and stack",
          "creating multiple screens",
          "creating customized appbar",
          "Tranforming Animated Container",
          "Decorating Text field",
          "Listview",
          "Creating Pet Row",
          "Making your screen Scrolable",
          "Building and navigating a new screen",
          "Finishing new screen layout",
          "Adding animation in image",
          "Font awesome icons and drawer Screen",
          "Finishing Drawer Screen"
        ],
        "Challenge ( Pet App UI Complete)": [
          "Section Intro",
          "Steps"
        ],
        "Weather App": [
          "Section Intro",
          "Getting started",
          "Finishing User interface",
          "HTTP package",
          "Finishing function",
          "Integrating weather Icon",
          "Progress Indicator",
          "Generating error message"
        ]
      },
      "requirements": [
        "A Computer - Mac or PC",
        "No prior programming knowledge required",
        "Willingness to Learn By Doing"
      ],
      "description": "The Complete Flutter and Dart Guide is a complete course about full-stack application development for Android and iOS using Google's new and popular framework . In this course, you will learn all about Flutter ,Dart programming from scratch and build interactive apps using these,No prior knowledge of either of the two is required! And you certainly don't need any Android or iOS development experience since the whole idea behind Flutter is to only learn one language.Through out my work time I have noticed though people can develop good applications but there is always  a lack of knowledge for building good user interface so keeping that in mid this course is specially designed for creating strong User Interface .\nYou will learn everything for being a good flutter developer,you will learn about\nApi calls\nHttp requests\nCreating drawers in screen\nDeploying app on real devices\nAnimations\ncreating mobile icons\nResponsive design\nState management\nAsynchronous functions\nDart programming\nand much more .............\nand most importantly after completing this course you can work as a freelancer or take a job and earn real money !!!\nFlutter is extremely trending and gets used for major Google apps like their Adwords app - it's now marked as \"ready for production\", hence now is the time to jump in and learn it!",
      "target_audience": [
        "Beginner and experienced developers who are interested in diving into mobile app development using one language for both platforms",
        "Anyone whoever is interested to develop Android & iOS apps.",
        "Anyone whoever wants to choose his/her career as mobile apps developer.",
        "Entrepreneurs Who Want to Build Android and iOS Apps with Single Code base",
        "Managers and Program Managers Who Want to Learn How to Build Android and iOS Apps with Single Code base"
      ]
    },
    {
      "title": "Complete Guide To Making Apps: 250,000+ Downloads",
      "url": "https://www.udemy.com/course/complete-guide-to-making-apps-how-i-got-over-250k-downloads/",
      "bio": "Learn how to create a successful mobile app business without prior experience",
      "objectives": [
        "Create a sucessful mobile app business",
        "Get inspiration for app ideas",
        "Develop the right mindset to achieve success",
        "Understand the formula for sucessful apps",
        "Choose profitable monetization tactics",
        "Outsource your work if you're not technical",
        "Program and app yourself"
      ],
      "course_content": {
        "Intro To Course": [
          "Introduction To Course",
          "My Story",
          "Course Objective"
        ],
        "Intro To Apps": [
          "Interview With Chad Mureta",
          "Intro",
          "App Ideas",
          "Right Mentality",
          "Little Cost",
          "Platforms",
          "Reviews!"
        ],
        "Interview With Jordan Schuetz": [
          "Interview With Jordan Schuetz Part 1",
          "Interview With Jordan Schuetz Part 2"
        ],
        "80/20 Principle": [
          "Intro 80/20",
          "80/20 Applied",
          "80/20 Apps"
        ],
        "App Strategy": [
          "Intro",
          "App Development Process",
          "What Is flow?",
          "Flow In Games",
          "Formula For Success",
          "Ketchapp Model",
          "First Impressions Matter",
          "What Is Re-skinning?",
          "Novelty In Re-skinning",
          "Quantity Over Quality",
          "Upload Many",
          "Apptopia",
          "Type Of App",
          "Target Audience",
          "Emoji - Case Study",
          "Observe The Market",
          "Simplicity"
        ],
        "Interview With Zach Latta": [
          "Interview With Zach Latta"
        ],
        "Monetization": [
          "Intro",
          "Novice Vs Expert",
          "Premium Model",
          "Freemium Model",
          "Free Model",
          "Ads Live Demo"
        ],
        "Marketing": [
          "Intro",
          "Cross Promotion",
          "Ketchapp Strategy",
          "3 Steps To Hit Top Charts",
          "Icon First",
          "Metadata",
          "Email Blast",
          "Reviews",
          "Cold Calling",
          "Kindle Case Study"
        ],
        "Programming": [
          "Intro",
          "Why Not Hire?",
          "80/20 Coding",
          "Learn How To Code",
          "Learn How To Learn",
          "Tips When Learning",
          "Corona SDK",
          "Corona SDK Configuration",
          "Sample Code",
          "Learning How To Learn"
        ],
        "Outsourcing": [
          "Intro",
          "9 Steps To Hire",
          "Beginner To Expert",
          "Why Upwork?",
          "Tips When Hiring",
          "Cost",
          "Management",
          "Work Less, Live More"
        ]
      },
      "requirements": [
        "Own a computer",
        "Have the will to achieve success in this business",
        "Have access to internet"
      ],
      "description": "Hey guys! Thanks so much for taking a look at my course. It really means a lot! :)\nFor those of you who don't know me, at 13 I started my mobile app business. At 15, I was making over $10,000+ a month with my app business, ultimately working less than 8 hours a week. After trial and error, I finally created a formula for success. No, not a get \"rich quick scheme\", but an actual system to create sucessful mobile apps. With my profits, I started outsourcing my work and hiring people all over the world to work on my apps, therefore expanding my business.\nThis course goes over many topics. At the end of this course you should be an expert in the mobile app world and release your own successful apps. I've decided to cut the nitty gritty, and give you the MOST important parts of this business, so you can be successful. This course is for anyone with the will to create a sucessful business. The TRUTH is, you don't need money, you don't need to be a genius, you don't need to be technical, you don't need any of that, all you need is the will succeed. The bottom line is that the app industry is bigger than hollywood. There is truly no better time than NOW to jump in.",
      "target_audience": [
        "This course is meant for people that want to create a successful mobile app business and make a consistent stream of income, ultimately working less than 10 hours a week.",
        "This course is not meant for people that want to get rich quick and have no passion for entrepreneurship and starting your own business."
      ]
    },
    {
      "title": "Flutter Zero To Hero - Complete Crash Course For Beginners",
      "url": "https://www.udemy.com/course/flutter-mapp-course/",
      "bio": "Master Flutter and Dart to Build Stunning Mobile Apps from Scratch",
      "objectives": [
        "Start from scratch and learn Flutter and Dart step-by-step.",
        "Make cool mobile apps that work on Android and iOS.",
        "Learn to create basic and advanced app layouts.",
        "Handle app states, user inputs, and navigation.",
        "Build clean, responsive designs for all devices.",
        "Integrate APIs, manage packages, and fix bugs."
      ],
      "course_content": {
        "Key Concepts": [
          "Create a project",
          "Widget inside Widget",
          "Capital (Widget) vs Lowercase (argument)",
          "Types",
          "Types cheat sheet",
          "Mouse over",
          "Types quiz"
        ],
        "Basic Layout": [
          "Container",
          "Column",
          "Row",
          "Center",
          "Images",
          "Extensions",
          "Stack",
          "Padding",
          "Sized Box",
          "Icon",
          "List Tile",
          "Print",
          "Wrap",
          "Basic layout quiz"
        ],
        "Master Layout": [
          "Material App & Scaffold",
          "App Bar",
          "Nav Bar",
          "Floating Action Button",
          "Drawer",
          "Safe Area",
          "Master layout quiz"
        ],
        "2-Step Process to Fix Bugs": [
          "Type 1",
          "Type 2",
          "Null Safety"
        ],
        "States": [
          "Stateful",
          "Recap",
          "Split your Widgets",
          "Widget tree",
          "Value Notifier",
          "Challenge",
          "Solution"
        ],
        "User Input": [
          "Text Field",
          "Checkbox",
          "Arrow Function",
          "Switch",
          "Adaptive",
          "Slider",
          "Single Child Scroll View",
          "Gesture Detector",
          "Ink Well",
          "Buttons",
          "Dropdown Button",
          "User input quiz"
        ],
        "Navigation (Routing)": [
          "Push",
          "Pop",
          "Push Replacement",
          "Send Data Through Pages",
          "Navigation quiz"
        ],
        "Clean UI Widgets": [
          "Clip R Rect",
          "Hero",
          "Snack Bar",
          "Alert",
          "Divider",
          "Card",
          "Text",
          "Clean UI Widgets quiz"
        ],
        "Package Management & modifications": [
          "Lotties",
          "Fitted Box",
          "UI modification",
          "Overrides",
          "UI modification",
          "UI modification",
          "Verify and fix your App",
          "UI modification",
          "Shared Pref",
          "UI modification",
          "UI modification",
          "UI modification",
          "Launcher Icon",
          "Circle Avatar",
          "Package management quiz"
        ],
        "Responsive UI": [
          "Fractionally Sized Box",
          "Layout Builder",
          "Media Query",
          "Aspect Ratio",
          "Expanded & Flexible",
          "Responsive UI quiz"
        ]
      },
      "requirements": [
        "The only requirement for this course is to have Flutter installed—no prior skills or experience needed, making it perfect for beginners!"
      ],
      "description": "In this course, Flutter Zero To Hero, you’ll go from a beginner to a confident Flutter developer, learning everything you need to build mobile apps. We begin by covering the key concepts of Flutter and Dart, giving you a solid foundation in app development. You’ll learn to create basic layouts and master layouts, which form the core structure or skeleton of your app.\nAs we move forward, you'll gain the skills to fix bugs and implement null safety to avoid errors and create stable, high-quality apps. We’ll also dive deep into state management, so you can handle dynamic content and interactions in your app, along with managing user input for a better user experience.\nYou’ll gain practical experience in navigation (routing), allowing you to create smooth transitions between screens. Along with this, you'll learn how to design a clean UI that looks good and performs well on all devices, and understand package management to enhance your project with external libraries.\nThe course also covers responsive UI design techniques to ensure your app works perfectly across various screen sizes. Finally, we’ll explore networking (APIs), enabling you to fetch and send data between your app and external servers. By the end, you'll be equipped to build beautiful, functional apps for both Android and iOS, becoming a skilled Flutter developer from scratch.",
      "target_audience": [
        "This course is for bright and motivated individuals who want to learn Flutter, from complete beginners to developers looking to expand their skills and create beautiful, responsive mobile apps for Android and iOS."
      ]
    },
    {
      "title": "iPhone Apps for Complete Beginners - Swift, SwiftUI & iOS17",
      "url": "https://www.udemy.com/course/iphone-apps-for-complete-beginners-make-ios-17-apps/",
      "bio": "You'll go from a complete beginner to having your own app in the App Store. Brand new (filmed Fall 2023) using Xcode 15",
      "objectives": [
        "Beginner and Intermediate Swift Skills",
        "Design Apps with SwiftUI",
        "Data Storage with the New SwiftData",
        "Getting Your Own App on the App Store"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Resume App - SwiftUI and Designing Apps": [
          "Xcode Tour",
          "Views",
          "HStack and VStack",
          "Modifiers",
          "Spacer and ZStack",
          "Resume App"
        ],
        "Text Editor App - Swift Basics": [
          "Variables and Constants",
          "Types: String, Int, and Double",
          "Comments and Print",
          "Displaying Data",
          "TextField",
          "Structs",
          "Reusable Views",
          "If Statements",
          "Finding Answers"
        ],
        "Daily Journal App Part 1 - Lists and Multi-Screen Views": [
          "Renaming and Refactoring",
          "Arrays",
          "Lists and Arrays",
          "Classes and Identifiable",
          "NavigationStack and NavigationLink",
          "Adding Properties",
          "Detail Views",
          "Row View",
          "For Loops"
        ],
        "Daily Journal App Part 2 - SwiftData": [
          "SwiftData Basics",
          "@Query and Fetching Data",
          "Saving SwiftData Objects",
          "Booleans",
          "Displaying a View with Sheets",
          "Forms and Data Input",
          "Dismissing Sheets",
          "Editing SwiftData Objects",
          "Deleting Objects from SwiftData"
        ],
        "Course List App - Web APIs and JSON": [
          "Course List Preview",
          "Functions",
          "Parameters and Return",
          "Optionals",
          "APIs and JSON",
          "URLSession and URLRequest",
          "JSONDecoder",
          "Listing Courses",
          "AsyncImage",
          "SF Symbols",
          "Design Polish"
        ],
        "Getting Your App on the App Store": [
          "Paid Developer Account",
          "Certificates, IDs, and Profiles",
          "Uploading",
          "Metadata"
        ],
        "Outro": [
          "So Long!",
          "Bonus - Adding Search to the Journal App"
        ]
      },
      "requirements": [
        "No Programming Experience Needed. Beginners Welcome!",
        "A Mac (Apple) Computer"
      ],
      "description": "Hi, I'm Nick. I LOVE to make iPhone apps. And I want to share the magic of making iPhone apps with you!\nI'm a self taught developer so I know what it's like to start as a true beginner. I've structured my course to be the course I wish I had when I was learning how to make apps for the first time. Filmed in Fall 2023, this course uses the latest tools of iOS 17 and Xcode 15.\nIn this course, we'll start first by learning the design side of making apps using SwiftUI. We'll go step by step from basic shapes, to creating your own mini-resume app! (It's the cutest resume you've ever seen)\nThen we'll start learning Swift, the programming language used to make iPhone apps. We'll start with basics topics like variables and constants, and then build on those skills so that by the end of the course you'll understand intermediate concepts like functions and classes.\nIn this course we'll make 4 apps:\nResume App\nText Manipulator App\nJournaling App (SwiftData)\nCourse Listing App (Web/APIs)\nWe'll then finish the course by teaching you the process to submit your own apps to the App Store!\nI can't wait to show you all the excitement that comes from creating your own apps and sharing them with the world. Let's get started!",
      "target_audience": [
        "Brand New or Beginner iPhone App Developers"
      ]
    },
    {
      "title": "React Native: Advanced Concepts",
      "url": "https://www.udemy.com/course/react-native-advanced/",
      "bio": "Master the advanced topics of React Native: Animations, Maps, Notifications, Navigation and More!",
      "objectives": [
        "Make compelling applications using expert-level features of React Native",
        "Create amazingly smooth and performant animations",
        "Build new React Native apps with Expo",
        "Understand the latest Navigation options for new React Native apps",
        "Add logic to your Firebase backend with Google Cloud Functions",
        "Update your users with cross platform Push Notifications",
        "Handle your users going offline with Redux Persist"
      ],
      "course_content": {
        "Expo Setup": [
          "Introduction - Start Here!",
          "Creating React Native Apps",
          "Why Expo?",
          "Creating Our First App"
        ],
        "Animations with React Native": [
          "Animation Systems",
          "The Animation Module",
          "Animation from Square One",
          "Moving a Ball",
          "How Animations Work",
          "Animation from Another Angle",
          "Swipe Deck Props",
          "Component Boilerplate",
          "Interplay Between Components",
          "Deck Data",
          "Customizing Individual Cards"
        ],
        "Handling Gestures": [
          "The Pan Responder System",
          "Pan Responder's Event Handlers",
          "The Gesture Object",
          "Dragging a Card"
        ],
        "Applying Animation Styling": [
          "Animating Single Cards",
          "How to Rotate Elements",
          "Interpolating Rotation Values",
          "Linear Relations with Interpolation",
          "Limiting Rotation with Interpolation",
          "Springing Back to Default",
          "Detecting Minimum Swipe Distance",
          "Programmatic Animation",
          "Forcing Swipes",
          "Callbacks on Swipe Completion"
        ],
        "Component Reusability": [
          "Writing Reusable Components",
          "The DefaultProps System",
          "Resetting Card Position",
          "Advancing the Deck",
          "Handling Empty Lists",
          "Getting the Cards to Stack",
          "Troubleshooting Flashing Images",
          "Cascading Card List",
          "Animating Advancing Cards",
          "Resetting the Index",
          "Deck Wrapup"
        ],
        "One Time Password Authentication": [
          "Review of Common Auth Flows",
          "The Details of One Time Passwords",
          "Tech Stack with Google Cloud Functions",
          "Traditional Servers vs Google Cloud Functions",
          "Layout of Google Cloud Functions",
          "Firebase Project Setup",
          "Deploying a Firebase Project",
          "Testing Deployed Functions",
          "Project File Structure",
          "The Request and Response Objects",
          "Generating a Service Account",
          "Sanitizing User Inputs",
          "Creating New Users",
          "Testing New User Creation"
        ],
        "Twilio Integration": [
          "Texting from Twilio",
          "Twilio Credentials",
          "Accessing Saved Users",
          "Quick Note",
          "Sending Texts to Users",
          "Generating Access Codes",
          "Verifying One Time Passwords",
          "Invalidating Used Codes",
          "Generating JWT's"
        ],
        "Client Side One Time Passwords": [
          "Transitioning to React Native",
          "App Boilerplate",
          "Defining Instance Properties",
          "Invoking Cloud Functions",
          "Refactoring with Async/Await",
          "Debugging with Async/Await",
          "Async/Await on User Signin",
          "Capturing Tokens",
          "Firebase Auth with a JWT",
          "Breather and Review"
        ],
        "Bringing it All Together": [
          "App Overview",
          "Screen Walkthrough",
          "More Screen Walkthroughs",
          "App Challenges and Solutions",
          "Screens vs Components",
          "React Native Navigation Options",
          "React Navigation in Practice",
          "Screen Boilerplate",
          "Implementing the First Navigator",
          "Nesting Navigators",
          "Wiring Up Stack Navigators",
          "Class vs Instance Properties",
          "Customization with Header Options",
          "Programmatic Navigation",
          "Styling the NavBar",
          "The Welcome Screen",
          "Styling the Welcome Screen",
          "Even More Welcome Screen Styling!",
          "Navigation from the Welcome Screen",
          "More on Welcome Screen Navigation"
        ],
        "Facebook Authentication": [
          "Facebook Auth Flow",
          "The Facebook Dev Console",
          "Redux Setup",
          "Using Async Storage",
          "Crazy Async/Await Syntax",
          "Logging in With Facebook",
          "Testing Facebook's Login Flow",
          "Quick Note",
          "World's Biggest Gotcha",
          "The Auth Reducer",
          "Skipping the Auth Screen",
          "Testing Auth Flow",
          "Advancing the Welcome Screen",
          "Resolving the Loading Screen"
        ]
      },
      "requirements": [
        "Basic understanding of React Native"
      ],
      "description": "Note: This course assumes you've got the basics of React Native down.  Check out my course 'The Complete React Native and Redux' course, its the perfect preparation!\n\nGo beyond the basics of React Native!  This course will teach you the advanced topics you need to make a #1 best-selling app.\nPush Notifications? You will learn it.  In Depth Animations? Included.  Offline Data Persistence? Of course!\n------------------------------\nWhat Will You Build?\nAll of my courses are 'learn-by-doing': no boring endless lectures with Powerpoints, only live, interactive coding examples.  In this course we'll build three separate apps with increasing complexity, each of which will profile different features of React Native.  By putting each concept into a real app, you'll get a better idea of when to use each unique and powerful feature.\n\n1) Build a Tinder-like Swipe Deck. Yes, the classic animated component!  We'll make a big stack of beautiful cards that a user can slide around the screen, swiping right to 'like' an item, or 'left' to dislike an item.  This warmup will get you familiar with interpreting touch input through the PanResponder system, moving elements around with the Animated module, and turning extrapolating animation values through the Interpolation system.\n2) Dive into the backend with One Time Password authentication. Ever been prompted to sign in using a code that gets texted to you?  One Time Passwords are a new authentication flow that leverages a user's phone number as their unique identifying token.  We will use the Twilio API to send a text message to a user to verify their identity, while securing our business logic into Firebase's new Google Cloud Functions.\n3) Your own Job-Search app.  Tinder for jobs! This app is is 100% feature complete!  We'll build an app with a full welcome-screen tutorial for our new user's, Facebook authentication, and map components.  The user will be presented with a list of jobs to like or dislike based on their location by leveraging Indeed's Job API, then follow up and apply to their choice jobs.\nBoth OSX and Windows supported - develop iOS or Android!\n------------------------------\nHere's what we'll learn:\nLearn the theory and practice of implementing complex Animation systems\nBootstrap your app using the new Expo platform\nNavigate your user around using React-Navigation\nEngage your users with automated Push Notifications\nEnhance authentication flows in your app with One Time Passwords with Twilio\nIncrease your app's reliability with Offline Data Persistence\nEducate your users on how to use your app with Welcome Tutorial pages\nAuthenticate your users using Facebook OAuth\nGo beyond the mobile front end with Google Cloud Functions: Add custom logic to your Firebase backend\nLocate your users with cross-platform MapView components\n\n\nI've built the course that I would have wanted to take when I was learning React Native. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "This course is for anyone looking to learn advanced topics of React Native"
      ]
    },
    {
      "title": "Hacking with Swift 3 - Beginner to Pro - Build 22 iOS Apps",
      "url": "https://www.udemy.com/course/swift-3-mastery-and-ios10/",
      "bio": "Learn how to code in iOS 10, and build amazing apps written by the award winning Swift programmer - Paul Hudson",
      "objectives": [
        "Place your own amazing apps into the hands of thousands of people through the App Store",
        "Become completely proficient with Swift 3 and iOS app development"
      ],
      "course_content": {
        "Paul Hudson and Hacking With Swift - Introduction - Tour HackingWithSwift.com": [
          "Paul Hudson and Hacking With Swift - Introduction - Tour HackingWithSwift.com"
        ],
        "Get to know Xcode 8": [
          "Part 1 - Navigating around",
          "Part 2 - The Project Navigator - Adding files to the project",
          "Part 3 - The Navigators Continued",
          "Part 4 - Template, Code Snippet, and Media Libraries",
          "Part 5 -Utilities Pane - The Object Library and Document Outline",
          "Part 6 - Playgrounds - segues - Xcode wrap up"
        ],
        "The Swift 3 Language": [
          "Variables - Part 1 - Data types - Type annotation - Type inference",
          "Variables - Part 2 - Data Types - Type Annotation - Type Inference continued",
          "Operators - Part 1 - Unary, Binary, Ternary, Assignment, and Remainder operators",
          "Operators - Part 2 - Increment, Decrement, Minus Unary, Compound Assignment",
          "Operators - Part 3 - Range, and Logical operators",
          "Optionals",
          "Structs",
          "Computed Properties",
          "Property Observers",
          "Extensions",
          "Protocols Part 1 - Syntax and declaring - Adding functions",
          "Protocols Part 2 - Adding properties -Delegation - Static keyword",
          "Enums Part 1 - Raw values - Associated values",
          "Enums Part 2 - Implicitly assigned raw values",
          "Enums Part 3 - Initializing - recursive enums",
          "Generics Part 1",
          "Generics Part 2",
          "Type Casting - Part 1 - The \"as\" and \"is\" operators",
          "Type Casting - Part 2 - Using AnyObject and Any",
          "Nested Types",
          "Tuples part 1 - Using and accessing values",
          "Tuples part 2 - Using them with functions and optionals",
          "Closures Part 1 - Syntax and Optimizations",
          "Closures Part 2 - Trailing Closures",
          "Closures Part 3 - Capturing Values"
        ],
        "Control Flow": [
          "if statement - else if - nested if's",
          "Switch",
          "for in loop",
          "while and repeat while loops"
        ],
        "Collections": [
          "Arrays part 1 - Declaring and initialiizing an array",
          "Arrays part 2 - Accessing and modifying",
          "Arrays part 3 - More of accessing and modifying",
          "Dictionaries - Part 1",
          "Dictionaries - part 2",
          "Sets Part 1 - Declaring and initializing sets",
          "Sets Part 2 - Accessing and modifying sets"
        ],
        "Functions": [
          "Functions - Part 1 - Declaring - Syntax - Return",
          "Functions Part 2 - Working with functions",
          "Functions Part 3 - Working with more functions",
          "Functions Part 4 - Nested Functions"
        ],
        "Strings": [
          "Strings Part 1 - Literals - mutability - interpolation - characters",
          "Strings Part 2 - Accessing and modifying strings",
          "Strings Part 3 - Comparing strings",
          "Strings Part 4 - Even more of accessing and modifying strings"
        ],
        "Classes - Properties - inits - Subclassing": [
          "Classes - initializers - properties",
          "Subclassing Part 1",
          "Subclassing Part 2"
        ],
        "Whats New in Swift 3.0": [
          "Part 1 - Depreciations - Method and Parameter names - Omit needless words",
          "Part 2 - Lowercase enums and properties - Foundation Framework namings",
          "Part 3 - Importing C Funcs - Dispatch - KVO - Verbs and Nouns"
        ],
        "Beginner Apps - Easy to build apps for the novice (more coming)": [
          "Part 1 - Setting up the UI",
          "Part 2 - Outlets and actions - updating the background color with code",
          "Part 3 - Updating the labels with values",
          "Part 4 - Adding animation"
        ]
      },
      "requirements": [
        "You will need a Mac, and Xcode 8 which is a free download from the App Store, and simply a desire to transform your ideas into amazing apps"
      ],
      "description": "This course is produced from the \"Hacking with Swift\" series of tutorials, which are written and authored by the award winning Swift programmer, Paul Hudson, and these videos were made with his permission and support. You can always be guaranteed you're learning the latest and greatest Apple technologies because all of Paul's tutorials are written for iOS 10. Here you learn smart, powerful, and expressive Swift 3, the way it was meant to be written. You learn while you make real-world iOS projects, which means you get to apply your new skills immediately and see them work in context. Hacking with Swift is one of the most popular Swift tutorial series online, which uses an approach that teaches you Swift programming incredibly quickly, and you end up with a huge library of finished projects that are yours to develop further, or ship to the App Store. Paul has received high praise from the creator of the Swift language himself, Chris Lattner, for his outstanding method of teaching, and series of Swift tutorials. And working together with iOS developer Steve DeStefano, the Hacking with Swift series of programming training videos are simply the fastest way to learn how to code in the Apple eco-system.\nCheck out all of Paul Hudson's Swift tutorials and books at HackingWithSwift - from beginner to pro, Paul will teach you to write Swift code in very little time.\nThe term \"Hacking with Swift\" means we are \"playing\" with the Swift language, and using it in unique and interesting ways.\nThis course incorporates the use of annotations, callouts, diagrams, highlighting, and deep explanations that help make complex subject matter, much easier to grasp, and guides you along the path of the code, each step of the way. This course also makes the perfect reference tool kit, to be used in conjunction with the Apple docs, so that you can go back and scrub through any of the lectures very quickly to pull out relevant code or instruction that you need, as there's no wasted chatter here, it's strictly on point with Swift and iOS 10.\nSome of what will be covered:\nFeaturing apps built by the award winning Swift programmer - Paul Hudson - HackingWithSwift dot com\nWe use Xcode 8 - The latest version\nThe Swift 3 language - we go from variables to creating our own functions and more\nLearn Swift by use of annotations / diagrams / highlighting / callouts\nLearning the ins and outs of Xcode 8\nWorking in storyboards and all it nuances\nHow to use controls / Outlets and Actions\nHow to use logic for smooth control flow\nUsing segues and passing data, in storyboards, and programmatically\nMaster table and collection view controller\nUsing delegates and protocols\nWork with the social framework - FB - Twitter etc.\nLearn how to refactor code\nThe ins and outs of GCD\nSpriteKit and Games\nUserDefaults - to persist data\nAdding audio / animations\nMaster strings in Swift 3\nUsing stackView\nThe safari view controller class\nCore Image\nLearn the best debugging techniques\nCreate an extension for your app\nLearn to work with MapKit\niBeacons\nAuto layout easy and advanced - create constraints using VFL\nLearn how to work with JSON data in swift\nLocal Notifications\nRecorded in HD for maximum clarity\nAnd a ton more...\nSwift is the new language of the future, and with this course you will get plenty of instruction on how to implement it in unique ways.\nThis course assumes you have no programming experience, so its perfect for the beginner. Its also a nice fit for the intermediate and experienced coder as it covers many advanced topics and techniques as well.\nIf you think this might be too difficult for you, think again, and come code along with me in a step by step format....just add a big portion of your own unique creativity, and before you know it, you will have built many amazing apps that you can submit to the App Store, and place in the hands of thousands of people.\nHappy Coding :-)",
      "target_audience": [
        "This course is for anyone who has a burning desire to get their own creative ideas translated into apps, ready for the app store. We cover the complete Swift 3 language and then how to build apps in iOS - From beginner to advanced",
        "This is the perfect course if your coming from another language like Objective C or any other language, and you'll see how easy it is to transition to swift 3."
      ]
    },
    {
      "title": "Build Android Apps with App Inventor 2 - No Coding Required",
      "url": "https://www.udemy.com/course/build-android-apps-with-app-inventor-2-no-coding-required/",
      "bio": "Android application,App Inventor 2,Google Play Store,Basic Programming",
      "objectives": [
        "Create Android Applications using App Inventor 2.",
        "Understand how to publish created applications to the Google Play Store.",
        "Understand how to update created applications once they have been published to the Google Play Store.",
        "Navigate and use the App Inventor 2 interface fluidly, effectively and efficiently.",
        "Understand the basics of programming."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Breakdown",
          "Introduction to App Inventor 2"
        ],
        "Setting Up App Inventor For Development": [
          "App Inventor Setup Introduction",
          "Creating A Gmail Account",
          "App Inventor Companion App - Option 1",
          "Setting Up Onscreen Emulator - Option 2",
          "Setting Up Usb Device Part 1 - Option 3",
          "Setting Up Usb Device Part 2 - Option 3",
          "Section Recap"
        ],
        "Breaking Down The Component Editor": [
          "Component Editor Introduction",
          "Palette Section",
          "Components Viewer & Components Section",
          "Properties Section",
          "Blocks Editor, Build Options & Media Section",
          "Components Editor In Action",
          "Section recap"
        ],
        "Breaking Down The Blocks Editor": [
          "Blocks Editor Introduction",
          "Blocks Drawer",
          "Blocks Viewer & Media Section",
          "Blocks Editor In Action",
          "Section Recap"
        ],
        "Your First App: Hello Purr": [
          "First App Introduction",
          "First Application Overview",
          "Setting Up Our First Application",
          "Component Spotlight: Button",
          "Component Spotlight: Label",
          "Creating Our First Application",
          "Running Our Application",
          "Section Recap"
        ],
        "Your Second App: Audiobook Log": [
          "Second App Introduction",
          "Second App Overview",
          "Component Spotlight - HorizontalArrangement",
          "Component Spotlight - VerticalArrangement",
          "Arranging Our Buttons",
          "Component Spotlight - Checkbox",
          "Naming Our Chapters",
          "Component Spotlight - Sound",
          "Setting Up Chapter Audio",
          "Adding Space To Our Layout",
          "Updating Our Component Names",
          "Block Time: Making Our Buttons Play Audio",
          "Testing Final App",
          "Section Recap"
        ],
        "Understanding Backing Up, Restoring & Sharing App Inventor Projects": [
          "App Backup, Restore & Share Introduction",
          "Understanding App Inventor File Types",
          "Downloading & Backing App Inventor Apps",
          "Uploading, Sharing & Restoring App Inventor Apps",
          "Section Recap"
        ],
        "Your Third App : Skeleton Review": [
          "Third App Introduction",
          "Third App Overview",
          "Component Spotlight: Canvas",
          "Layout Canvas & Labels",
          "Component Spotlight: Ball",
          "Implement Hotspots & Upload Media",
          "Block Time: Activating Selected Bones",
          "Block Time: Simplifying Activated Bone Blocks With Procedures",
          "Block Time: Resetting Hotspot Colors With Procedures",
          "Component Spotlight: Player",
          "Adding Vibration To Hotspots",
          "Section Recap"
        ],
        "Your Fourth App: My Business App": [
          "Fourth App Introduction",
          "Fourth App Overview",
          "Basic Home Screen Layout",
          "Navigation Drawer Layout",
          "Component Spotlight: ActivityStarter",
          "Implementing Website Activity",
          "Implementing Map Activity",
          "Component Spotlight: PhoneCall",
          "Implementing Call Screen Layout Part 1 - Intro To Multiple Screens",
          "Implementing Call Screen Layout Part 2 - Intro To Multiple Screens",
          "Component Spotlight - Textbox",
          "Implementing Email Screen Layout",
          "Block Time: Sending Emails with the help of variables",
          "Section Recap"
        ],
        "Your Fifth App: Free Form Task List": [
          "Fifth App Introduction",
          "Fifth App Overview",
          "Implementing Top Task Bar Layout",
          "Component Spotlight - Listview",
          "Component Spotlight - File",
          "Finalizing Main Screen Layout With ListView, File, And Empty List Image",
          "Implementing TaskForm Screen And Structure",
          "Component Spotlight - Listpicker",
          "Finalizing TaskForm Screen With ListPicker, & Form Input",
          "Block Time: Passing Data Between Screens",
          "Block Time: Adding Tasks To File - Understanding parsing pt1",
          "Block Time: Displaying Tasks From File Using ListView - Understanding parsing pt",
          "Block Time: Deleting our list & Toggling Filter Bar",
          "Block Time: Toggling Main Image And Canceling Tasks",
          "Block Time: Showing New Tasks First With List Reversal",
          "Block Time: Making Tasks Pretty Using Text Manipulation",
          "Section Recap"
        ]
      },
      "requirements": [
        "Students should have an adequate internet connection.",
        "Students should have a basic understanding of what an Android application is."
      ],
      "description": "Build Android Apps with App Inventor 2\nEverybody has a great idea for an app. The problem is, not many of those people have the skills or knowledge required to make that idea a reality. Building an app, regardless of its simplicity or platform, requires certain technical know-how like coding, UX/UI design, and more. App Inventor 2, however, cuts through all of the smoke and allows anyone – even those with no coding experience – to build Android apps from the ground up. This course will teach you how.\nBuild Apps Without Learning Code!\nGain a practical understanding of programming basics\nNavigate and use App Inventor 2 efficiently and effectively\nCreate and build your own apps for Android\nTest and update your apps after you've built them\nLearn how to publish your app to Google's Play Store\nAndroid Apps in an Instant\nThis course will teach you everything you need to know about building apps – without the complicated coding normally required. If you have a good internet connection, a basic understanding of what an Android app is, and a great idea for an app that doesn't yet exist, then you're the perfect candidate! While the course is aimed at beginner programmers or those with no coding experience whatsoever, experienced app builders who want to learn from a new angle will benefit too.\nDuring the 204 lectures and 17 hours of content contained within this course, you'll learn the basics of programming in a fun and practical way, while creating fully fledged, ready-to-use Android apps. You'll start off with setting up App Inventor 2 and choosing the options you'll need for your future apps. Then you'll get to know the interface and tools before diving straight in and creating not one, not two, but TEN apps. These apps will increase in complexity as you work through them, using features such as the component editor and blocks editor.\nWhen you've built your ten apps you'll also learn how to test, update, and publish them to the Play Store. By the end of this course, you'll be an advanced app builder using App Inventor 2.\nTools Used\nApp Inventor 2 is an open source web application originally developed by Google and now maintained by MIT. It is aimed at beginner programmers and specially designed to enable them to build Android apps. It turns complicated coding language into visual drag and drop blocks, so there is no need for the user to learn code before building their apps.",
      "target_audience": [
        "Any person who has a desire to create Android applications but that might be daunted by the idea of programming.",
        "Any person who has a great idea for an Android application that they want to see come to life.",
        "Any person who wants learn the basics of programming in a fun and practicle way",
        "Experienced programmers who already have knowledge in creating Android applications."
      ]
    },
    {
      "title": "Flutter BLoC State Management & Firebase [2025] From Scratch",
      "url": "https://www.udemy.com/course/flutter-bloc-state-management-2022-from-scratch/",
      "bio": "Flutter BLoC Pattern and Firebase. Build Real App - Step By Step | Flutter",
      "objectives": [
        "Flutter BLoC from scratch by step-by-step explanations",
        "Make Amazing Tasks App [To Do App] Using Flutter BLoC State Management",
        "Also you learn: Add task, Delete Task, Mark as Done/Undone, Mark as Favourite/Unfavourite, Restore Task, Clear Bin Folder, Change Theme ( Dark and Light )",
        "Flutter Widgets such as: Drawer, PopupMenu, ExpansionPanel, BottomNavigationBar and so on...",
        "Flutter Firebase works with Flutter Bloc"
      ],
      "course_content": {
        "Introduction": [
          "The full Introduction of 'Tasks App with Flutter Bloc and Firebase' course",
          "Introduction of the Course (old)"
        ],
        "Beginning part of Flutter BLoC": [
          "Download the Initial Project of Counter App",
          "Benefits of FLutter BLoC",
          "Download the Final Counter App Project"
        ],
        "Tasks App Using Flutter BLoC": [
          "Introduction of Tasks App",
          "Download Initial Tasks App Project",
          "Part 1. Implementing Flutter BLoC and Hydrated BLoC",
          "Part 2. Implementing Drawer & Recycle Bin",
          "Part 3. Theme Changing: Dark & Light Modes",
          "Part 4. Implementing Bottom Navigation Bar",
          "Part 5. Implementing Expansion Panel",
          "Part 6. Mark as Favorite, Edit Text and Restore Task",
          "Download Completed Course",
          "Hydrated Bloc ( v9.0.0 ) MIGRATION and fixed some bugs",
          "Wrap up"
        ],
        "Flutter BLoC with Firebase": [
          "Flutter BLoC & Flutter Firebase",
          "Download Source code",
          "Install Firebase CLI for MacOS",
          "Install Firebase CLI for Windows OS",
          "Firebase User Authentication (Register and Sign In)",
          "Reset User Password",
          "Error Handling Deep Dive",
          "Splash Screen",
          "Add & Get the Task on Firestore and the App",
          "Update Task (Making the Task as Done/Undone)",
          "Remove and Restore Task",
          "Delete one or All Tasks Permanently",
          "Marking a Task as Favorite",
          "Editing a Task"
        ]
      },
      "requirements": [
        "Beginning knowledge on Flutter and how it works",
        "Knowledge of the Dart programming language"
      ],
      "description": "Hi there!\nWelcome to Flutter BLoC State Management & Firebase [2025] From Scratch!\nThis Full Course about Real Tasks App [To Do App] Using Flutter BLoC Pattern State Management And here you learn:\n\nI. Flutter BLoC State Management with Hydrated Bloc (Hydrated Bloc saves data on local storage)\n1) Add tasks -  You can add a new task with its description and the task remains there even if you do hot-reload or hot-restart because of Hydrated BLoC.\n2) Delete Task - You can Delete a Task and that task moves to Recycle Bin folder of the App.\n3) Mark as Done/Undone - when you've done a task, it moved to Completed Tasks Tab or vice versa.\n4) Mark as Favourite/Unfavourite - you can mark a task as a favorite and you can find that task in the Favorites Tab.\n5) Restore Task - you can restore a task and that task re-appears in the Pending Tasks Tab.\n6) Clear Bin Folder - There is a ''Clear All Tasks'' button in the Recycle Bin folder, it deletes all tasks and clears the Recycle Bin folder.\n7) Change Theme (Dark and Light)  - In the Drawer, there is a switch, by which you can change the App Theme into Dark and Light mode.\nFlutter Widgets such as:\n- Drawer\n- Popup Menu\n- Expansion Panel\n- Bottom Navigation Bar\nand many other Flutter widgets.\n\nII. Flutter BLoC State Management with Firebase (All data will be saved on Firestore)\n1)  All the function above still works with Bloc, but saves data on Firestore\n2) Besides above, User authentication is added in the last section.\n\nI hope you enjoy the course.",
      "target_audience": [
        "Flutter Developer who wants to learn Flutter BLoC Pattern from scratch, step by step",
        "Developers who want to build apps with Flutter using BLoC State Management"
      ]
    },
    {
      "title": "Build Real World App In Xamarin Forms",
      "url": "https://www.udemy.com/course/build-real-world-app-in-xamarin-forms/",
      "bio": "Learn How to build real world app with xamarin forms",
      "objectives": [
        "At the end of this you'll be able to create any kinda of Xamarin Forms Application.",
        "You can create your Application Design",
        "You can build real world applications",
        "You can integrate Restful Web Api's",
        "You can handle the Application Flow",
        "You can add the beautiful UI design in your Xamarin Forms Applications.",
        "You can start your own mobile app startup business"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "App Design and Flow": [
          "Create App Icons",
          "Create Splash Screens",
          "Apply Splash Screens",
          "App Prototype"
        ],
        "RESTFUL WEB API'S": [
          "REST API'S Overview",
          "Application Backend",
          "Serialization and Deserialization"
        ],
        "Create Real World App": [
          "Create Home Page for Application",
          "Create Model Classes",
          "Create NowPlaying UI",
          "Integrate API's in Now Playing Page",
          "Create Movies Detail UI",
          "Integrate API’s In Movies Detail Page",
          "Booking Order Page UI",
          "Integrate API in Order Page"
        ],
        "Embed Videos In Xamarin Forms App": [
          "Embed Youtube Videos"
        ],
        "Handle Flaws In Xamarin Forms App": [
          "Handle Flaws"
        ],
        "Challenge Exercise": [
          "Upcoming Movies Challenge",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "The student's must have a laptop / PC and familiar with the Xamarin or Mobile Apps."
      ],
      "description": "The main focus of this course is only on the Xamarin Forms with some real world application. So if you're a good C# programmer or if you have a basic knowledge of XAML and you want to create some kinda real world application with Xamarin Forms then this is the right course for you.\nIn this course you will learn the how to create the the complex kinda application with real time implementation in Xamarin Forms . You will learn the Xamarin Forms with the challenging exercises. You'll also learn the the integration with restful web services. Also one interesting thing for the Xamarin Forms developer is included in this course that is Embedded videos.So you can also embed the videos of your choice in xamarin forms.\nBuild a strong foundation in Xamarin Forms Real World Application with this tutorial .\nCreate App Icons\nCreate Splash Screens\nApply Splash Screens\nApp Prototype\nRestful web api's\nIntegrate Web Api's In Xamarin Forms\nCreate Real World Application In Xamarin Forms\nAccess the Application Backend\nSerialization and Deserialization\nEmbed Videos In Xamarin Forms and your application.\nChallenging Exercise.\nA valuable Skill at Your Fingertips  Learning the Xamarin Forms put a powerful and attractive look in your mobile apps. Xamarin is open source, easy to learn,  has excellent Microsoft and Xamarin support, and is the best  Cross Platform Tool for Desktop and Mobile Applications.\nJobs in Mobile development are plentiful, and being able to learn the real time application with a professional look and integration with rest api's will give you a strong background to more easily pick up other challenging apps etc.\nContent and Overview  Suitable for C# programmers, Xamarin  Developers , XAML Developers and software engineers. Through this course , you’ll create a real world application and establish a strong understanding of the concept behind Xamarin Forms and rest api's.\nYou can also understand the embedded videos with the exercises.\nWhat am I going to get from this course?\nLearn Xamarin Forms from a Microsoft (MVP), Xamarin MVP from your own desk.\nCreate a Real World Mobile Application with me.\nSuitable for beginner & intermediate  programmers, xamarin developers, C# developers and ideal for users who learn faster when shown.\nVisual training method,with Hands on Lab Practice , coding and challenge exercises.\nBreaks even the most complex scenarios down into simplistic steps.\nI'll provide you the simplest and easy way to reduce your expenses in the development of mobile applications.\nAlso you'll be able to access the source code of rest ful api's that's deployed on Microsoft Azure free of cost and get xamarin forms application code.",
      "target_audience": [
        "Everyone who has some basic knowledge of XAML and c# and willing to start career in Xamarin Forms and want to create the real world application."
      ]
    },
    {
      "title": "Mastering Server Side Swift Using Vapor 3",
      "url": "https://www.udemy.com/course/mastering-server-side-swift-using-vapor-3/",
      "bio": "Take your Swift skills to the cloud",
      "objectives": [
        "Develop the backend service for their apps and websites using Vapor framework",
        "Take their skills to the next level, utilizing the Swift language to create server side API's",
        "Increase their bill rates since now they can build a complete backend using Vapor"
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "What is Server Side Swift?",
          "Server Side Swift Frameworks",
          "Exercise Files",
          "Installing Vapor",
          "Hello Vapor"
        ],
        "Understanding Routes": [
          "Nested Routes",
          "Grouping",
          "Parameters",
          "QueryString",
          "Exercise Files"
        ],
        "JSON": [
          "Custom Classes as JSON Data",
          "Returning an Array of JSON Objects",
          "Posting JSON Data"
        ],
        "Futures": [
          "What are Futures?",
          "flatMap and map"
        ],
        "SQLite Fluent Provider": [
          "Understanding Naila's Garden Web API",
          "Configuring SQLite with Vapor",
          "Creating Dish Model",
          "Saving Dishes",
          "Retrieving All Dishes",
          "Get Dish By Id and course",
          "Deleting Dishes"
        ],
        "Controllers": [
          "Understanding Controllers",
          "Route Collections",
          "Route Groups"
        ],
        "Integrating Vapor Web API with iPhone App": [
          "Tour of Naila's Garden iPhone App",
          "Adding a new Dish",
          "Displaying All Dishes",
          "Deleting Dishes",
          "Displaying Dishes by Course"
        ],
        "PostgresSQL Fluent Provider": [
          "Installing PostgresSQL Database",
          "Configuring PostgresSQL Database",
          "Updating Table Name and Schema without Migration",
          "Updating Table Structures Using Migrations",
          "Implementing CRUD Operations Using FluentPostgreSQL"
        ],
        "Getting Started with Vapor Leaf Templates": [
          "What are Leaf Templates",
          "Configuring Leaf Templates",
          "Hello Leaf",
          "Passing Data to Leaf Templates",
          "Implementing Base Templates"
        ],
        "Integrating Leaf Templates with PostgreSQL Database": [
          "Installing Leaf and PostgreSQL Packages",
          "Configuring Fluent PostgreSQL Models",
          "Adding Base Leaf Templates",
          "Configure Leaf Templates",
          "Adding New Dish",
          "Displaying All Dishes",
          "Deleting a Dish",
          "Updating a Dish"
        ]
      },
      "requirements": [
        "You should be familiar with Swift Programming Language",
        "You should be comfortable using Xcode. This course requires Xcode 9.3 and Swift 4.0"
      ],
      "description": "Are you interested in learning how to write a complete backend API using Swift?\nSwift on the server is the future of iOS development. And now you can learn it from the comfort of your home.. in your own time.. without having to attend class.\nMy name is Mohammad Azam, creator of many popular online courses including Mastering MapKit in iOS Using Swift and Creating Stickers and iMessages Applications in iOS 10 Using Swift 3.\nI have created over 2 dozens apps and some of my apps were even featured by Apple on the App Store. I have worked with fortune 500 companies as a lead iOS developer and helped them grow their business ten folds. At present I am a full time iOS Instructor at DigitalCrafts where I teach users how to create amazing iOS applications.\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 4 hours.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nBuy this course today and this is what you’ll get.\nFirstly, I am using Xcode 9.3 with Swift 4.0 for this course. I will show you how to build real apps that consume the Vapor backend service.\nThe course is accompanied with all the code sample files.\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and make sure that every questions is answered.\nCan you believe you get all this (and more) for just $195?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nWhy learn Server Side Swift?\nSwift has taken the world of programming by storm. It is one of the most fastest growing languages available. Cloud computing is changing the world everyday and now you can use the power and the simplicity of the Swift language to create Cloud enabled applications.\nVapor will allow you to create backend services which can be consumed by iOS, Android, Windows and Web Applications.\nBy using server side Swift using Vapor you will have complete control over your deployment process and strategy.\nWho is this for?\nThis course is for anyone who wants to take their skills to the next level. Server side Swift is a new technology and companies will be jumping on it in the future to create their backend systems. Server side Swift can also help you to earn higher salary since now you know how to write a complete backend from scratch.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the iOS community with a large following. I do a lot of speaking engagements in which I spread knowledge and education.\nI am confident that you will enjoy the course and you will utilize the knowledge you learned in this course in your future applications.\nWhat are the requirements?\nA Mac Computer\nXcode 8 or above and Swift 3.0\nBasic understanding of the Swift language and the iOS SDK - I'll teach you everything you need to know about server side Swift using Vapor\nWhat am I going to get from this course?\nCreate backend services and API using server side Vapor framework\nRemove the dependency on third party frameworks and non-iOS technologies\nBecome a professional app developer, take freelance gigs and work from anywhere in the world\nBored with the same old, same old? Apply for a new job in a software company as an iOS developer\nWho is the target audience?\nAnyone who wants to be an app developer: This is a complete course, just like my Complete MapKit, iMessages and Swift courses.\nAnyone who wants to learn to code: Server side Swift is the future and the future is right NOW.\nAnyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work is your key to a hugely powerful world.",
      "target_audience": [
        "This course is for app developers who want to learn Server Side Swift using Vapor",
        "This course is for developers who want to take their skills to the next level",
        "The course is for developers who wants to earn extra passive income on the side"
      ]
    },
    {
      "title": "The Complete iOS 12 & Swift Developer Course - Build 28 Apps",
      "url": "https://www.udemy.com/course/ios-12-developer-course/",
      "bio": "Use Xcode 10 & Swift 4 to make real iOS12 apps like Uber and Instagram, with CoreML & ARKit, and more!",
      "objectives": [
        "Develop any iOS app you want",
        "Become a professional iOS developer",
        "Build apps for your business or organisation",
        "Get app development jobs on freelancer sites"
      ],
      "course_content": {
        "Undefined": [
          "Introduction"
        ],
        "Introduction & Getting Started": [
          "How To Get The Free Stuff",
          "Frequently Asked Questions",
          "How To Ask Great Questions"
        ],
        "Getting Started With Xcode and Swift": [
          "Introduction",
          "Xcode Versions - Please Read",
          "Downloading & Installing Xcode",
          "Navigating The Xcode Interface",
          "Navigating The Xcode Interface (Xcode Files)",
          "Adding Labels To Your Apps",
          "Adding Labels To Your Apps (Xcode Files)",
          "Text Fields & Buttons",
          "Text Fields & Buttons (Xcode Files)",
          "Running Some Code",
          "Running Some Code (Xcode Files)",
          "Interacting With Buttons",
          "Interacting With Buttons (Xcode File)",
          "Adding Images To Your Apps",
          "Adding Images To Your Apps (Xcode Files)",
          "Your First App - Cat Years",
          "Your First App - Cat Years (Xcode Files)",
          "Introducing Xcode 9 and Swift 4 Quiz"
        ],
        "Swift 4 Deep Dive (Using Playgrounds)": [
          "Introduction",
          "Swift Playgrounds",
          "Swift Playgrounds (Xcode Files)",
          "Introducing Variables",
          "Introducing Variables (Xcode Files)",
          "Arrays & Dictionaries",
          "Arrays & Dictionaries (Xcode Files)",
          "If Statements",
          "If Statements (Xcode Files)",
          "Game - How Many Fingers",
          "Game - How Many Fingers (Xcode Files)",
          "While Loops",
          "While Loops (Xcode Files)",
          "For Loops",
          "For Loops (Xcode Files)",
          "Classes & Objects",
          "Classes & Objects (Xcode Files)",
          "Optionals Masterclass",
          "Optionals Masterclass (Xcode Files)",
          "Auto Layout",
          "Auto Layout (Xcode Files)",
          "App - Is It Prime? Part I",
          "App - Is It Prime? Part I (Xcode Files)",
          "App - Is It Prime? Part II",
          "App - Is It Prime? Part 2 (Xcode Files)",
          "Swift 4 Deep Dive (Using Playgrounds) - Quiz",
          "CCA Swift Level 1"
        ],
        "Advanced iOS Features: Timers, Tables, Permanent Storage & Web Content": [
          "Introduction",
          "Navigation Bars",
          "Navigation Bars (Xcode Files)",
          "App - EggTimer",
          "App - Egg Timer (Xcode Files)",
          "Table Views",
          "Table Views (Xcode Files)",
          "Times Tables App",
          "Times Tables App (Xcode Files)",
          "Storing Data Permanently",
          "Storing Data Permanently (Xcode Files)",
          "Multiple View Controllers",
          "Multiple View Controllers (Xcode Files)",
          "Controlling the Keyboard",
          "Controlling the Keyboard (Xcode Files)",
          "App - To Do List",
          "App - To Do List (Xcode Files)",
          "Downloading Web Content",
          "Downloading Web Content (Xcode Files)",
          "Manipulating Strings",
          "Manipulating Strings (Xcode Files)",
          "App - What's The Weather",
          "App - What's The Weather (Xcode Files)",
          "Advanced iOS Features: Timers, Tables, Permanent Storage & Web Content - Quiz"
        ],
        "Advanced iOS Features II: Animation, Games, Maps & Geolocation, Audio": [
          "Introduction",
          "Animations Part I",
          "Animations Part I (Xcode Files)",
          "Animations Part II",
          "Animations Part II (Xcode Files)",
          "Game - Tic Tac Toe",
          "Game - Tic Tac Toe (Xcode Files)",
          "Integrating Maps Into Your Apps",
          "Integrating Maps Into Your Apps (Xcode Files)",
          "Adding User Annotations To Maps",
          "Adding User Annotations To Maps (Xcode Files)",
          "Finding A User's Location",
          "Finding A User's Location (Xcode Files)",
          "App - Location Aware",
          "App - Location Aware (Xcode Files)",
          "Advanced Segues",
          "Advanced Segues (Xcode Files)",
          "App - Memorable Places",
          "App - Memorable Places (Xcode Files)",
          "Working With Audio",
          "Working With Audio (Xcode Files)",
          "App - Back To Bach",
          "App - Back To Bach (Xcode Files)",
          "Swipes & Shakes",
          "Swipes & Shakes (Xcode Files)",
          "App - Sound Shaker",
          "App - Sound Shaker (Xcode Files)",
          "Advanced iOS Features II: Animation, Games, Maps & Geolocation, Audio",
          "CCA Swift Level 2"
        ],
        "Core Data, Advanced Web Content, Json Data & Webviews": [
          "Introduction",
          "Introducing Core Data",
          "Introducing Core Data (Xcode Files)",
          "Advanced Core Data",
          "Advanced Core Data (Xcode Files)",
          "Downloading Images From The Web",
          "Downloading Images From The Web (Xcode Files)",
          "APIs & JSON Data",
          "APIs & JSON Data (Xcode Files)",
          "Blog Reader",
          "Blog Reader (Xcode Files)",
          "Core Data, Advanced Web Content, Json Data & Webviews - Quiz"
        ],
        "Instagram Clone": [
          "Introduction",
          "Parse Server & AWS",
          "Parse Server & AWS (Xcode files)",
          "Retreiving & Updating Data",
          "Retrieving & Updating Data (Xcode Files)",
          "Accessing The Camera Roll",
          "Accessing The Camera Roll (Xcode Files)",
          "Spinners & Alerts",
          "Spinners & Alerts (Xcode Files)",
          "Login & Signup",
          "Login & Signup (Xcode Files)",
          "The User Table",
          "The User Table (Xcode Files)",
          "Pull To Refresh",
          "Pull To Refresh (Xcode Files)",
          "Posting Images",
          "Posting Images (Xcode Files)",
          "Viewing Users' Feeds",
          "Viewing Users' Feeds (Xcode Files)",
          "Instagram Clone - Quiz"
        ],
        "Submitting Your App To The App Store": [
          "Introduction",
          "A Paid Developer Account",
          "Certificates And Profles",
          "iTunes Connect"
        ],
        "Creating A Website For Your App": [
          "Introduction",
          "Setup Your Marketing Website",
          "Installing The Appz Theme"
        ]
      },
      "requirements": [
        "No pre-knowledge required - I'll teach you everything you need to know",
        "A Mac laptop or iMac (or Windows PC running OSX)",
        "No paid software is required - all coding is done using Xcode 9 (which is free)"
      ],
      "description": "***Please note that 'The Complete iOS 14 & 1OS 13 Developer Course - and SwiftUI!' - is available! This newer version of the course was completely re-recorded and updated by Codestars and Atil Samancioglu, ahead of the latest iOS version launch***\n\n\nThe Complete iOS 12 Developer Course\nWant to build the fastest, most technologically advanced apps in the world?\nWant expert tips and tricks to give you an unfair competitive advantage?\nWant a deep dive coding experience that’s radically effective AND fun?\nIf you want to learn how to quickly and confidently build any app you want, sign up for The Complete iOS 12 Developer Course, today.\n* This is an EXCEPTIONAL course. Seriously professional grade teaching, walkthroughs, and resources give you the foundation you'll need to start figuring out your own apps by yourself.  D. Farrell\nWELCOME\nHello! My name’s Rob Percival, and I’m the highest-rated and best-selling online coding instructor on Udemy, with close to a million happy students.\nFor the last six months my expert team and I have been tucked away in our coding lab planning, structuring and designing our longest and most insanely practical course to date.\nI can’t WAIT to share the pyrotechnic lessons we’ve devised for you, including must-have secrets and insights to help you get the very most out of this awesome new technology.\nWhether you’re a complete beginner or an accomplished coder, you will not find a better, more detailed iOS 12 course on the market….\nOR YOUR MONEY BACK.\nSo pull up a seat my friends, click the buy now button now -- and let’s take an exciting journey into the opportunity-packed realms of iOS 12 – together.\nTo your coding success!\n* Worth every penny. I started out not knowing how to code ANYTHING! I was a total stranger to the world of coding. But after watching the first couple of videos, I am able to make actual sense of this. I was sceptical at first, but I had no idea that I would be able to independently start writing my own code (working with if statements and labels/button functions) in just one day! So happy these kind of tutorials exist, thanks so much!  Claire. C.\nWHY YOU’LL LOVE IOS 12\nMore power. More speed. More possibilities.\niOS 12 offers the biggest leaps in technology today and puts lightning fast opportunities right in the palm of your hands.\nHere are a just few highlights:\nCore ML 2\nIt’s now even easier to add machine learning to your apps. In playgrounds you can train a CoreML model to recognise images or text passages.\nIf you've ever included a CoreML model in your app you’ll know they can be BIG, upwards of 100MB! Apple has done a lot of work to shrink these models so they’re more manageable.\nAND now you can now make your own models. CoreML 2 makes machine learning far simpler and waaay more powerful.\nARKit 2\nAgain, Apple did a lot of fine tuning with the new ARKit to make it even easier to use. Get started in minutes with the demo apps, and multiple phones and iPads can be used to view the same scenes and games.\nYou now can have a scene in the real world that you've used to base AR on and keep it in between sessions. Also, tracking has improved for 2D objects as well as 3D.\nIn short, building AR apps is much more straightforward, and works much better than it did with ARKit 1.\nSiri Shortcuts\nApple introduced a new feature in iOS 12 called Siri Shortcuts. A shortcut allows you to perform complex tasks by simply asking Siri.\nFor instance, if you have a favourite pizza from a particular restaurant, you could make a shortcut and tell Siri \"Get my pizza!”.  Your device knows the steps to place the order and share your information.\nThis really opens up Siri to developers - you can create suggested shortcuts depending on user behaviour, and users can set them up with a single tap in your app.\nDark Mode\nNow I know this isn't as technical as the other features, but dark mode in the new version of MacOS and Xcode is great. Soft on the eyes and beautiful design. I think you’re gonna love it.\n* Rob is a very good teacher who encourages you to attempt the exercises on your own. This is of course the way that I would recommend any budding developers do as it forces you to think about the structure and figure out a solution to the problem in your own way and not a paint by numbers course that most tutorials on the net offer. P. Hall\nJOIN TODAY AND GET IMMEDIATE LIFETIME ACCESS TO:\nA woolly-mammoth sized programme of over 44 hours’ of video content\nThe full kit and kaboodle toolkit, with EVERYTHING you need to design your own apps with iOS 12, Swift 4, ARKit, MLKit, MusicKit and the new Depth Photo API\nAND… A side-scrolling running game (like a Super Mario clone) and a new Bluetooth app\n* Extremely easy to follow along. Concepts are explained as they are presented which allow the student to pick up on coding easier. Scott. P.\n* I have taken, or I am still in the process of taking, many courses on Udemy. This course is done better than any other beginner course for Swift/Application Development. It is explained excellently and they always answer the questions asked in the Q&A section. Jeremy McArthur\nPLUS you’ll get my famous “I CAN’T BELIEVE IT’S ALL FREE” bundle of extras\n$200 worth of unlimited web hosting (for a whole year) *Limited to one year per student not per course*\nImmediate access to my best-selling entrepreneurial book: How to Earn $10,000 While Learning To Code\nAn awesome graphical library, worth $300, packed with over 1000 backgrounds, buttons and icons.\n* The course is designed to go at a nice pace and teaches all of the concepts of iOS app design one step at a time with clear and concise explanations. M. Radoncic\nEasy to follow teaching style. Very well constructed syllabus, timeline and practice apps. Leonardo. R.\nENJOY THIS COURSE ENTIRELY RISK FREE\nI’m so confident that you’ll love this course, I offer a no-quibble money back guarantee within 30 days.\n* Great match. Everything is explained perfectly. Any time I have got stuck the forums and Rob are very quick to respond and assist. G. Hay.\n* This is the perfect way to cut my teeth on APP Development. Many thanks! D. Carroll\n* This course goes the extra mile by showing you how to create real-world apps like Instagram, Tinder. B. Holmes.\nHERE’S THE FULL COURSE OUTLINE\nXCode and Interface Builder\nInputs, Buttons, and Reactive Interfaces\nApple’s New Programming Language: Swift\nVariables, Arrays, Tables, and Loops\nNavigation, Storage, and Live Content\nImages, Maps and Music\nAccelerometers and Motion Feedback\nCore Data and JSON\nOnline Storage With Parse\nGames and the Sprite Kit\nInstagram and Snapchat Clones\nApp Store Submission\nMaking a Marketing Website For Your App\nWHY TAKE THIS COURSE?\nUnrivalled depth and scientifically-proven learning strategies.\nI’m a Cambridge University teacher so you’ll find the lessons easy to absorb\nOver 44 hours long - my longest course ever!\nIncludes MacOS development and Apple Watch Development\niOS 12 is jam-packed with exciting new features and is Apple’s most advanced operating system yet\n* I have been wanting to develop iOS apps from a long time, I didn't know where to start from. This is exactly what I am looking for, it's very detailed and explains everything from how to install required software to developing the first app. T. Panguluri.\nIS THIS COURSE RIGHT FOR ME?\nAbsolutely.\nIt doesn’t matter where you’re at in your coding journey.\nWhether you’re looking to become a sizzling coder, or you’ve got big dreams of building world-beating apps—this is for YOU.\nEach lecture is short and punchy. Each lesson, fun and memorable. Every section is meticulously crafted for speed, enjoyment and repeatability.\nTake your sweet time, or forge ahead like a bullet train.  Whatever your goal or learning style, The Complete iOS 12 Developer Course is your fast-track ticket to app developing success.\n* Some courses are too basic and teach you nothing, others move too fast and you can't keep up with what is being presented. Rob Perceval gives you just enough at once, then tests you, so that you're never lost. Perfect for beginner and professional coders alike. John Davies.\n* Rob is an awesome guy, and his explanations are incredibly thorough, logical, and well-paced! He does a great job of making a daunting task seem achievable. I definitely recommend this course! A. Method.\nSUPPORT THAT’S ALWAYS ON. DAY AND NIGHT\nThere’s always help when you need it.  Udemy forums, Twitter, email. Our responsive team are here to guide you through your learning journey.\nGot feedback? We love that too.  Your comments help shape all future courses, so don’t be shy. Talk to us!\n* I’m not a native English speaker but the teacher speaks very clear and the challenges allow to test frequently each lesson (or part of the lesson) learned. I have already experience in programming, but I don’t feel the course tired. Opposite, is very catching! Matteo. S.\nWHAT HAVE YOU GOT TO LOSE?\nClick that the buy now button… and discover the wonderful world of iOS 12 today.\n* All reviews from The Complete iOS 11 Developer Course.",
      "target_audience": [
        "Anyone wanting to learn how to build apps",
        "People wanting to make a living (or side-income) from app development",
        "Anyone who wants to learn to code"
      ]
    },
    {
      "title": "Learn basics of Redux in React Native in 2 hours!",
      "url": "https://www.udemy.com/course/learn-redux-in-react-native-in-less-than-2-hours/",
      "bio": "Learn how to create actions, reducers and build a basic counter app!",
      "objectives": [
        "Build larger apps using Redux",
        "Understand the reasoning behind Redux",
        "Understand Redux reducers",
        "Understand Redux actions",
        "Understand how to connect the Redux store to your React components",
        "Understand how to use Redux Thunk middleware to make async API calls"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use vanilla React Native at beginner level"
      ],
      "description": "Learn how to use Redux in React Native from the ground up - build great apps based on the knowledge you will gain in this course!\nLearn how to use Redux in React Native\nWhy use Redux at all?\nWhen to use Redux\nLearn how to create Redux Actions, Reducers, Store and start using it in your apps!\nLearn how to use API's using Redux Thunk\nIn the course we will first create a basic counter app in React Native to understand and grasp the basic Redux concepts.\nAfter that, we will learn how to use Redux middleware such as Redux Thunk and call a public open API.",
      "target_audience": [
        "Anyone who wants to learn about Redux in React Native"
      ]
    },
    {
      "title": "Build Real World Food Delivery App with Xamarin Forms",
      "url": "https://www.udemy.com/course/build-real-world-food-delivery-app-with-xamarin-forms/",
      "bio": "Learn Xamarin Forms Real World Application From Beginning to End",
      "objectives": [
        "Make Ecommerce App with Xamarin Forms",
        "Work as a freelance xamarin forms developer",
        "Create your first xamarin forms real world application",
        "Build fully-fledged apps for your startup or business",
        "Consume Restful api's"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with C# and Xamarin Forms. Because knowledge of C# and Xamarin is must for this course.",
        "At least 3-6 months experience with Xamarin Forms and XAML",
        "Visual Studio 2019 with windows Or Mac Edition whatever suits you.",
        "Postman Api Testing Tool"
      ],
      "description": "Welcome to the Real World Food Delivery App Development course with Xamarin Forms.\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of real world application in Xamarin Forms. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in Xamarin Forms.\n\nThis courses teaches you how to code using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a real world application with xamarin forms.\nConsume Restful Api's.\nTest Local Hosted Api's inside your Mobile Device.\nConsume Nuget's in xamarin forms.\nCreate a Complete Real World (Food Delivery) Application in Xamarin Forms From Scratch to End.\nHow to make asynchronous API calls, store and retrieve data from the api, and use the JSON format for server communication.\nMake application user friendly.\n\n\nRemember...\nAfter this course you'll get all the Xamarin Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you.\nIn this course I'll consume the api's via tunneling. If you want to publish the api's on Microsoft Azure then it's up to you. I will not cover the Microsoft Azure in this course neither I will answer queries regarding to Microsoft Azure issue because in this course we'll not cover Microsoft Azure.\nI want to set the right expectations because in this course we'll cover the Client Side of the Food Delivery Service Application. If you want to make a Admin Panel for delivery service then you can download the Rest Api source code along with the course and make a web application from my Rest Api code and your web development skills. Covering Web Development is a different thing. If you're looking for a course so that you can also make an admin panel then sorry this course is not right for you.\nSo what are you waiting for? Click the buy now button and join the Complete Real World Food Delivery App Development Course with Xamarin Forms.",
      "target_audience": [
        "If you've a 3 to 6 months xamarin forms experience , then take this course.",
        "If you are an intermediate xamarin forms developer, then take this course to get up to speed quickly with xamarin forms and native app development.",
        "If you are a pro xamarin developer and want to learn more advanced concepts with quick pace then take this course.",
        "If you're are already familiar with Xamarin Forms and wants to make an Ecommerce Application then take this course."
      ]
    },
    {
      "title": "Android N: From Beginner to Paid Professional",
      "url": "https://www.udemy.com/course/learn-android/",
      "bio": "Comprehensive Android Nougat app development",
      "objectives": [
        "Build Android Marshmallow apps",
        "Apply for Jr. Android app development jobs",
        "Program and code with Java",
        "Implement Object Oriented Programming with Java and Android"
      ],
      "course_content": {},
      "requirements": [
        "Must have PC with Windows 8+ OR macOS OR Linux/Ubuntu",
        "Recommend having an actual Android device but it is not required"
      ],
      "description": "Android: From Beginner to Paid Professional\nLearn to code the Devslopes way. At Devslopes we teach you the platform and the underlying coding principles. We believe in building engineers and not copy-and-paste students. You can get started with no experience or with lots of coding experience.\nLearn everything you need to know to have professional Android development skills.\nWhy This Course?\nDevslopes first flagship course iOS 9 & Swift:  From Beginner to Paid Professional took the world by storm and is the most effective course on iOS development on the Internet with thousands of 5 star reviews and tons of success stories.\nUsing that same formula for success we have brought you the even better Android course.\nLearn to code how the PROs code - not just copy and paste\nLearn the latest Android APIs and services - we don't teach old junk\nSUPER FUN - You will laugh and have fun while learning\nBeautiful Apps - We don't build trash - you'll create amazing real-world apps\nZero Experience needed to start\nBuild Real Projects - You'll get to build projects that help you retain what you've learned\nLive Help - I've brought on a bunch of Teacher's Aides who are always available to help in our online chatroom\nHow Long Will This Take?\nThis course with all of its exercises should take you a good 6 weeks if you spend 1-2 hours on it every day.\nHow Is The Course Structured?\nYou start by learning how to code with Java. Then you start building some simpler apps and move on to more complex fully-functional apps. You build projects in-between that allow you to stretch and grow using the principles you just learned, but without copying and pasting code.\n\nWhat Do I Get?\nTons of amazing Android learning content\n10 FREE App Asset Packs (Worth thousands of dollars)\nLive support in our online chatroom\nCertificate of completion (when completed)\nPotential for a whole new career / lifestyle",
      "target_audience": [
        "This course is for absolute beginners with no coding experience AND it is for existing programmers who want to learn Android",
        "This course is NOT for veteran Android developers"
      ]
    },
    {
      "title": "Microsoft PowerApps For Absolute Beginners",
      "url": "https://www.udemy.com/course/microsoft-powerapps-essential-training/",
      "bio": "Create Business Apps Without Code",
      "objectives": [
        "Getting Started with Powerapps",
        "Signing Up For Powerapps Trial",
        "Learn about data sources in powerapps",
        "Modifying the layouts of apps",
        "Update different records",
        "Work with versioning of app",
        "Working with templated app"
      ],
      "course_content": {},
      "requirements": [
        "You have basic knowledge of Microsoft Excel"
      ],
      "description": "PowerApps is an initiative by Microsoft that allows developers and non-technical users to build mobile applications from selectable templates. Microsoft touts an intuitive visual design for PowerApps, with drag-and-drop functionality and a familiar look and feel taken from applications like PowerPoint.This course is specially designed to leverage your powerapps skills to a new level.\nInstructor Shaher Yar Hamid explores how to leverage PowerApps to turn an Excel workbook into a simple business app that can be used on a mobile device or in a browser.\nThis course also includes how to edit layouts and apply themes and how to share an app and work with releases of apps. And last but not least is how to create an app from a Built-in template provided by powerapps.",
      "target_audience": [
        "Everyone who want to start career as a Powerapps developer."
      ]
    },
    {
      "title": "Android Development: Android App Development From Scratch",
      "url": "https://www.udemy.com/course/android-development-android-app-development-from-scratch/",
      "bio": "Learn java, android, android studio, android development and android app development with Android 11, become a developer",
      "objectives": [
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "Android is the most used operating system on the planet",
        "Learn Android App Development step by step",
        "Learn Java",
        "Learn the latest Android version (Android 11 - Android R)",
        "Android 11",
        "Android Studio",
        "Gradle Build System",
        "Android Components",
        "Learn Publishing Android App on Google Play",
        "Learn Releasing Android App",
        "We continually update the course, so you’ll learn the very latest as Android Oreo ( Android 8 )",
        "Become a professional Anroid App developer",
        "No previous experience is required!",
        "No programming knowledge required!",
        "Enroll now, start your own App business and work from anywhere in the world",
        "android",
        "android app development",
        "android development",
        "mobile development",
        "mobile app development"
      ],
      "course_content": {},
      "requirements": [
        "No prior Android knowledge is required!",
        "No programming Android App Development knowledge required!",
        "A Windows PC, Mac or Linux Computer",
        "Internet and Basic Computer Knowledge",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Don`t worry. Setup and installation instructions are included for each platform",
        "Watching the Android course videos completely, to the end and in order."
      ],
      "description": "Hi there,\nWelcome to Android Development: Android App Development From Scratch course.\nLearn java, android, android studio, android development and android app development with Android 11, become a developer\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nIf your answer is “yes” to these questions and if you want more, you are at the right place!\nAndroid is the most used operating system on the planet. In fact, it’s almost omnipresent in the mobile ecosystem and Android 11 has become the most popular Android version.\nMy \"Android Development: Android App Development From Scratch\" course will take you from beginner to advance level.\nYou will learn android development step-by-step with hands-on demonstrations. In this course, we will learn to build and publish 2 major apps. During the lectures, we will also be practicing with more than 10 examples.\nFirst of all, I will teach the java programming language that we will use while developing an android application. Java programming is a very old and widely used language. Developing an android application with java will make your job much easier. Thus, you will be able to easily develop your Android apps.\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\nWhat’s important\nThere’re a lot of people out there teaching Android 8 who are not developers. We’re developers with many years’ field experience with the Android platform. So you will learn from an expert who has great knowledge of Android. This course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\nIn this course you will learn;\nJava Environment Setup\nJava Development Environment\nJava Syntax\nJava Object Oriented Concept\nJava Strings\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nPublishing Your App on Google Play and more\nandroid app development\nandroid studio\nandroid studio java\nandroid development\nandroid\nandroid app development from scratch\nandroid app development java\nbecome an android developer from scratch\napp development\nandroid app development using java\napp development\nandroid app development using java\nandroid app android development from scratch\noak academy\nandroid app development\nandroid studio\nandroid app development with java\nandroid 11\nandroid java\njava android\nandroid 11 app development\nandroid development using java\nandroid developer from scratch\njava android studio\nandroid developer\nandroid studio app development\nandroid development java\nandroid from scratch app development from scratch\nkotlin\nmobile app development java for android\nandroid app development python\njava android app development\njava android app developer\nandroid development with java\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nVideo and Audio Production Quality\nAll our contents are created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications",
        "Anyone who has no previous coding experience but wants to become expert",
        "Anyone who wants to learn Android 11 ( Android R )",
        "Anyone who are planning job transformation",
        "Anyone who would like to work from anywhere in the world",
        "Those who want to develop an Android mobile application.",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Anyone who become an android developer from scratch"
      ]
    },
    {
      "title": "Level Up in Auto Layout - Swift & iOS",
      "url": "https://www.udemy.com/course/level-up-in-auto-layout/",
      "bio": "How to build iOS applications in Swift using Auto Layout",
      "objectives": [
        "How to layout UI components that will adjust for size and orientation",
        "How to leverage Auto Layout to layout and design beautiful apps",
        "Auto Layout programmatically (no Interface Builder here)"
      ],
      "course_content": {
        "House Keeping": [
          "Introduction - Welcome!",
          "Download Xcode",
          "Resources and Links"
        ],
        "Anchors": [
          "Intro: Anchors & How They Work",
          "Lab: Changing The World with Anchors",
          "What are Layout Guides?",
          "Lab: SafeAreaGuides",
          "Lab: Default Margin Guides",
          "Lab: Layout Margins as Spacer Guides",
          "Lab: ReadbleContent Guides",
          "Design Challenge: Spotify Configuration Screen",
          "Solution: Spotify Configuration Screen",
          "Links That Help"
        ],
        "Intrinsic Content Size": [
          "Intro: Intrinsic Content Size",
          "What is Intrinsic Content Size?",
          "Lab: Intrinsic Content Size Inaction",
          "Lab: Content Hugging & Compression Resistance",
          "Working with Images",
          "Design Challenge: Spotify Player",
          "Solution: Spotify Player",
          "Links That Help"
        ],
        "StackViews": [
          "Intro: The Humble StackView",
          "Demo: What's So Great About StackViews?",
          "The Trick to Understanding StackView Distributions",
          "Lab: StackView Distributions in Action",
          "Intro: Custom Views within StackViews",
          "Lab: Custom Views and StackViews",
          "Lab: Scrollable StackViews",
          "Lab: Styling StackViews",
          "Lab: Spacers & StackViews",
          "Design Challenge: Intro",
          "Design Challenge: Custom View",
          "Solution: Custom View",
          "Design Challenge: Stack View",
          "Solution: Stack View",
          "What You Need To Know",
          "Links That Help"
        ],
        "Adaptive Layouts": [
          "Introduction to Adaptive Layouts & Designs",
          "Techniques for Adapting Layouts & Designs",
          "Lab: How to Adapt Your Layout By Adjusting Constants",
          "Lab: How to Adapt Your Layout by Enabling & Disabling Constraints",
          "Lab: How to Adapt Layouts Using Visibility",
          "Design Challenge: Nudge the Label",
          "Lab: How to Adapt Layouts Using Spacer Views",
          "Design Challenge: Adaptive Spotify Player",
          "Solution: Adaptive Layout with Constraints",
          "Solution: Adaptive Layout with Spacers",
          "Links That Help",
          "Course PDF",
          "Final Words"
        ]
      },
      "requirements": [
        "Basic iOS knowledge",
        "Xcode",
        "Knowledge of Swift"
      ],
      "description": "Want to learn how to build beautiful iOS apps? Tired of not knowing how to get your layouts just right? Whether you are an up and coming iOS developer, or a professional who needs to get things done right, this course teaches you the fundamentals of Auto Layout, enabling you to build any app, exceed expectations in any job, and just build great looking iOS app’s professional or for yourself.\nLEVEL UP IN AUTO LAYOUT\nThis course teaches you all the fundamentals and concepts required to build iOS applications using Auto Layout.\nTOPICS COVERED\nConstraints\nPinning & Aligning\nIntrinsic Content Size\nContent Hugging & Compression Resistance\nLayout Guides\nSafe Areas\nPriorities\nStack Views\nScroll Views\nWHAT YOU GET\nHand crafted videos and walkthroughs on fundamentals of Auto Layout.\nCountless examples, challenges, and solution to most common problems.\nSolid foundation for becoming a professional iOS Engineer.\nTESTIMONIALS\nI highly recommend this course if you want to learn how to create your UI's programatically. This course is excellent and super easy to follow. The theory is explained really well making it easy to understand what it is exactly we are doing and how we are laying items out on the screen. Before this course I was struggling to create layouts programatically with UIKit without story boards. Just after finishing the first section, my foundation/basics were solidified and went on to effortlessly convert my previous projects into programatic UIKit removing my reliance on story boards.\nAmazing stuff!! Cannot find this information on YouTube\nJonathan is a great teacher, the examples he uses are clear and can be applied to real app designs.\nOutstanding course, explains Auto Layout very well, has a lot of very helpful examples, so this course can be highly recommended\nVery glad I am taking the course. The number one reason why I like the course is that the instructor provides decent examples programmatically (not by using Interface Builder)\nIt's amazing the way he teaches, delivers small chunks of knowledge then nudge us to try the solution. He answers all of your questions kindly. For me, it was an awesome course. We have great content, in CustomViews, StackView, Spacers, and share with us incredible tips/tricks which make better learning. I highly recommend his courses. Thank you, Jonathan.\nThis is the course I wish existed when I first started learning iOS development. Thank you Jonathan!\nGreat course, great teacher thank you for everything.\nI'm really enjoying the course. Jonathan makes learning iOS development easier to understand and fun. He does a great job of explaining the concepts and helps reinforce it with the labs and challenges. Highly Recommend for learning iOS Development",
      "target_audience": [
        "Beginner/Intermediate iOS developers who want to improve their Auto Layout skills",
        "Anyone who wants to become a professional iOS Engineer / Developer"
      ]
    },
    {
      "title": "Flutter+Firebase Build a Grocery App&WEB Admin Panel [2024]",
      "url": "https://www.udemy.com/course/flutter-210firebase-build-a-grocery-app-with-admin-panel/",
      "bio": "Flutter & Firebase Build a Grocery App with a WEB Admin panel From scratch with payment gateway integration 2024 Edition",
      "objectives": [
        "This Flutter course is a complete guide that helps learn and build a fully functioning Flutter application with Firebase.",
        "Teaching how to write Clean-code and avoid Boilerplate code",
        "A fully functional app that is ready for use and deployment",
        "Fully Functional Flutter Grocery app with WEB Admin panel",
        "Flutter SharedPreferences",
        "Clear state management with Flutter Provider State Management",
        "Flutter StreamBuilder & FutureBuilder",
        "Firebase Firestore, Authentication & Storage",
        "Payment gateway",
        "Write production-ready code following best practices and become a competent Flutter developer"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in Flutter and Dart",
        "A good Knowledge in Flutter and Dart is strongly recommended"
      ],
      "description": "Course prerequisites:\nBasic knowledge in programming to get started\nBasic understanding of Flutter and good knowledge is recommended\nConcepts are explained clearly. You will always learn what you're building and why and how to do it.\nHow this course can be of help:\nGaining more knowledge in Flutter and Firebase with Payment integration\nLearn how to make a shopping application simply with a web admin panel\nA fully functional app that is ready for use and deployment\nWhat's in the course:\nComplex UI has done simply\nBuild a Complete mobile app With a WEB admin portal\nState management\nFirebase\nClean code and avoid Boilerplate code\nStyles for UI\nState Management: setState, lifting state up via callbacks, global access, scoped access with Provider and ChangeNotifier\nNavigation & Custom navigation\nDart\nForms, input handling, and validation\nManaging and updating packages\nDatabases and Cloud Firestore\nListViews and multiple UI states\nFirebase Authentication\nFirebase Firestore\nFirebase Storage\nDart Programming Language - Fundamentals and intermediate&expert topics\nHow to understand Flutter Mobile Development by building apps incrementally.\nHow to design, build, and debug Flutter apps\nHow to get Flutter apps to communicate with a real-time database - Firestore\nHow to build robust apps with Flutter\nFlutter AppBar\nFlutter Material Design\nFlutter Row and Column\nFlutter ListView Builder\nPayment gateway\nCourse structure:\napproximately 17 hours of content and updated regally\nRequirements:\nWindows application development OR Mac application development\nAccess to a computer with an internet connection.\nand you are ready for the journey\nLove learning about applying cutting-edge algorithms to practical cases!\nWhat Should I Expect After this Course?:\nThe ability to build a fully functional shopping application with Firebase and payment integration\nNew information regarding Flutter\nNote that the course builds on Windows, so I didn't have a chance to cover the IOS configurations! But feel free to ask anything about it. I will be there to help.\n\n\nNote:\nThis course has 2 apps, One for the user \"ANDROID app in Portrait mode\", and one for the admin \"WEB\".\nNote that the ANDROID app is responsive only in portrait mode, it doesn't support landscape mode.\n\n\nThe search logic is done locally, and it is only available in the Android application since it is the same logic if you want to implement in the WEB Admin Panel.\nThe app is available on Playstore, please consider testing it before buying the course.",
      "target_audience": [
        "Flutter and Dart learning cravers",
        "To all people who are interest in Flutter",
        "For people who want to make a complete app in Flutter"
      ]
    },
    {
      "title": "Flutter & Firebase: build an E-commerce and Admin App [2024]",
      "url": "https://www.udemy.com/course/flutter-310-firebase-build-an-e-commerce-and-admin-app/",
      "bio": "Flutter & Firebase Mastery: build a fully functional E-commerce app with an Admin app, ready for deployment [2024]",
      "objectives": [
        "Flutter Mobile",
        "Firebase Firestore, Authentication & Storage",
        "Teaching how to write Clean-code and avoid Boilerplate code",
        "Admin App to upload and edit products",
        "Clear state management with Flutter Provider State Management",
        "Fully functional E-commerce app"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in Flutter and Dart"
      ],
      "description": "This course is in Arabic and English. but this is the English version of it\n\n\nCourse Description: Flutter & Firebase Mastery\nLearn to design, build, and debug fully functional shopping applications with Flutter and Firebase. This course offers in-depth knowledge of Flutter mobile development, Dart programming, and Firebase integration. By the end of the course, you will be equipped to manage freelance projects confidently and be well-prepared to take on a Flutter development position within a company.\n\n\nPrerequisites\nBasic knowledge of programming\nBasic understanding of Flutter\nExperience with Windows or Mac application development\nAccess to a computer with an Internet connection\nEnthusiasm for learning and applying cutting-edge algorithms to practical cases\nRecording Equipment:\nVideo Editing Software: Camtasia 2022\nMicrophone: Blue Yeti X\nThis top-of-the-line equipment ensures the highest possible audio and video quality for the course content.\n\n\n\n\nWhat You Will Learn\nThis course covers an extensive range of topics, including:\nGeneral\nDart Programming Language - Fundamentals to expert topics\nUnderstanding Flutter Mobile Development by building apps incrementally\nDesigning, building, and debugging Flutter apps\nBuilding robust apps with Flutter\nStyles & UI\nStyles for UI\nDynamic colors and themes\nComplex UI made simple\nCustom widgets\nFlutter Material Design\nListViews and multiple UI states\nFlutter Row and Column\nFlutter ListView Builder\nState Management - Provider\nClean code and boilerplate code avoidance\nsetState, lifting state up via callbacks, global access, scoped access with Provider and ChangeNotifier\nNavigation & Custom navigation\nForms, input handling, and validation\nManaging and updating packages\nFirebase\nDatabases and Cloud Firestore\nFirebase Authentication\nFirebase Firestore\nFirebase Storage\nReal-time communication with Firestore using Streams and StreamBuilder, Futures and FutureBuilder\nCourse Structure\nDuration: approximately 12-13 hours of content\nRegular updates\nWhat to Expect After This Course\nAfter completing this course, you will have:\nThe ability to build a fully functional shopping application with Firebase\nGained advanced knowledge in Flutter\nDeveloped readiness to explore expert topics in Flutter\nThe ability to handle and manage freelance projects\nAcquired the necessary skills and knowledge to take up a Flutter development position within a company confidently\nLimitations and Notes\nPlease note the following limitations and important information for this course:\nThis course focuses on Windows configurations. IOS configurations are not covered but feel free to ask questions about it. We will be there to help.\nThis course includes 2 apps, one for the Users, and another App for the Admin, both in \"Portrait mode\".\nThe Android app is designed to be responsive only in portrait mode; it does not support landscape mode.\nResources are attached to each lecture.\n24/7 support will be provided depending on the nature of your questions.",
      "target_audience": [
        "Flutter and Dart learning cravers",
        "To all people who are interested in Flutter",
        "For people who want to make a complete app in Flutter",
        "Companies Or Students who wants to build a ready app for production"
      ]
    },
    {
      "title": "Full Stack Web & Mobile App Development | Mern Stack Project",
      "url": "https://www.udemy.com/course/full-stack-web-mobile-app-development-mern-stack-project/",
      "bio": "Full Stack Web Development and Mobile App Development with React JS, React Native, NodeJS, MongoDB | MERN Stack Projects",
      "objectives": [
        "Dive in Mern Stack Mobile App Development, Web App Development with React JS and React Native",
        "Learn how to build single page applications with Full stack web development with React JS, NodeJS, MongoDB",
        "Learn to connect to an external API with ReactJS",
        "Create reusable React Components",
        "Set up our virtual environment for React and ReactNative",
        "Run Android and IOS simulator for React and React Native",
        "JSX syntax and expressions in React JS",
        "ES6 syntax in React",
        "See the content on the simulator in React",
        "User Inputs, Forms and Events in React",
        "Using React Portals to render Children Outside the DOM Hierarchy",
        "React JS Hooks and Context",
        "React’s modern face is to develop web applications with React Js Hooks and Context",
        "Creating Hooks and Context structures",
        "Routing with React Router",
        "Route Between Different Screens in React",
        "Data Transfer Between Different Screens with React Navigation",
        "Data Transfer Between Different Screens with React Navigation",
        "How to use coding techniques to make efficient development with React",
        "Build fast, user-friendly web apps with React",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Install MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "Full Stack Web Development using MERN",
        "Learn how to build backend API using node and express",
        "React Hooks, Async/Await & modern practices",
        "Learn how to build powerful and fully functional social media website using MERN",
        "Learn how to handling forms in React, Nodejs, Express JS",
        "Learn about Redux (Best state management tool)",
        "Learn styling with Material-ui",
        "Learn JWT Authentication",
        "Deployment",
        "Full stack mern stack mern projects with react js, nodejs, express js, mongodb",
        "Mern Full stack",
        "Full stack web development with mern stack project",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstra",
        "The good news is that web development generally uses light-weight code that is easier to learn than many other languages.",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, Mongodb",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "What is React? React is a front-end library in Javascript that was developed by Facebook",
        "The simplest definition of React is that it is a user interface library used for building UI components for the web.",
        "What is React used for? React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard",
        "The most common use of React is to build dynamic user interfaces for single-page web applications.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice.",
        "Nodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "Node is designed around an event loop, which allows for easy management of asynchronous functions.",
        "NodeJs is a server environment built for fast and easily scalable network applications.",
        "NodeJs is open-source, meaning it’s a free code for all developers.",
        "A runtime system is a platform where a software program runs",
        "Mern full stack with react js, express js, mongodb, nodejs",
        "Use React Native and your React knowledge to build native iOS and Android Apps - incl. Push Notifications, Hooks, Redux"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge is required about creating mern stack project with this course!",
        "A Windows PC, Mac or Linux Computer for Full Stack Web Development",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don’t need to be an expert",
        "Desire to learn React (with react router, react redux, react hooks and react context)",
        "Desire to learn Mern full stack projects with react, react native, nodejs, express, mongodb",
        "Desire to learn with react, nodejs, express, mongodb",
        "Desire to learn mern stack full stack react js, nodejs, express, mongodb",
        "Desire to create real world mern stack projects with react, redux, hooks and context, nodejs, mongodb, express",
        "Desire to learn react project with node js, express js, mongodb",
        "Desire to learn web development with mern full stack (mongodb, express js, react js, nodejs)",
        "Desire to create real world react projects, mern stack projects",
        "Desire to become Mobile App Developer or Web Developer (front end web developer and backend web developer)",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Desire to learn React Native with hooks and context for mobile development"
      ],
      "description": "Full Stack Web Development and Mobile App Development with React JS, React Native, NodeJS, MongoDB | MERN Stack Projects\n\nHello there,\nWelcome to Full Stack Web & Mobile App Development | Mern Stack Project course.\nIf your answer is \"Yes\", you are in the right place. This Mobile App Development and Web Application Development with Mern Stack Project course will be a perfect match.\nReact is one of the best choices for building modern web applications. If you are new to React or maybe you've been struggling to learn and truly understand what’s going on then this course is the best way for you to learn React.  Full stack web development, mern, mern stack, mern full stack, mern stack project, react, mern project, full stack, graphql, full stack Project, full stack web development project, react js, web development project\nLearning React Native is a great avenue through which to gain experience developing mobile apps. Udemy features top-rated React Native courses that take you through every level of the React Native framework, so that you can start writing better apps, faster.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that. React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser.\nBy learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\nThis course is for all levels. We will take you from beginner to advance level. You will learn to React development step-by-step with hands-on demonstrations. To be able to benefit from this course, all you need is a basic understanding of JavaScript.\nDo you want to learn React Js from scratch?\nDo you want to learn React Native from scratch?\nDo you want to learn the latest React features of the Hooks and Context system?\nDo you want to create an app with React React Router; in a very detailed way?\nDo you want to learn NodeJS from scratch?\nDo you want to learn Mongo DB from scratch?\nIn the course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer. Besides, with the Expo app, you will be able to run your apps on your own mobile device as well.\nLater on in the course, we are going to learn the basics of React and React Navigation. JSX, 'props system' and 'state system' are going to be crystal clear for you at the end of the course. We are going to create nice looking reusable components. You are going to be able to use these reusable components in your own future projects. You are going to go to different screens from the app with React-navigation.\nFinally, you are going to learn the latest React features \"Hooks and Context\" system. We are going to create two nice looking app, teach you \"Hooks and Context\" in a very detailed way. You are going to learn how to use \"state\" in functional components with the \"Hooks\" system and with \"Context API\" you won't need any third-party package to manage the Application state.\nWe tried to tell all complex topics in very detail on the course. We used some diagrams to tell some important topics and created a nice-looking mobile application. We showed two different ways to create a mobile app. We showed both react-native-cli and expo-cli in our course.\nBuild your mern stack projects with react js, redux, hooks and context, nodejs, express and mongodb, react projects\n\"Instaverse MERN Stack Project\". In this course, we will be building a full-stack Social Media project application using Node.js, Express, React, and MongoDB.\nThis is a practical hands-on course for building an app using the incredible MERN Stack.\nThis course project is probably the biggest and most exciting project you have built so far. It is packed with hundreds of tips and tricks that can help you build almost any type of full-stack app (not limited to this project).\nYou can build the biggest and most complex apps of your dream or as required at your job. Master the stack of all stacks and become the most productive and innovative developer on your team. I welcome you to be a part of this incredible journey.\nAt the end of the course, you will learn;\nBasics of React, React-Native, React-Navigation libraries\nHow to send an HTTP request from a mobile application\nHow to use flex-box system\nHow to create reusable components\nTo reach another app on the device from our app\nCreating your own mobile app both with react-native-cli and expo-cli\nCreating Context with Class-Based and Functional Components\nHow to Consume Context in Class-Based and Functional Components\nHow to Use Multiple Context in one single component\nHooks Functions(useState, useEffect, useReducer, useContext...)\nCreating Reducer and\nUsing Reducer is going to be clear for you.\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nBuilding an extensive backend API with Nodejs & Express\nBuilding our frontend to work with the API\nIntegrating React with our backend and creating a great workflow\nGet, Post, Patch and Delete Request using MongoDB\nState management with Redux\nReact Hooks, Async/Await & modern practices\nCreate a CRUD Application with MERN Stack\nHandling Forms\nJWT Authentication\nCreating a build script, securing our keys, and deploy to Heroku using Git\nFull stack web development\nMern stack\nMern Full Stack\nReact js, and react projects, mern stack projects\nReact Native\nReactNative, React JS with redux, hooks and context\nExpress js\nReact\nNodejs\nReact js\nExpress JS\nFull stack\nFull stack javascript\nFull stack react\nJavascript\nNodejs reactjs\nReact js and node js\nNode\nMern stack\nNode js react\nMern full stack\nMongodb\nMern Stack Project\nReact node\nReact nodejs\nNodejs express js mongodb\nReactjs and nodejs\nMern\nNode react\nWeb development with react js, mern stack\nReact js full stack\nMern full stack projects with express js, mongodb, nodejs\nFull stack react projects with redux, hooks and context\nFront end web development\nBackend web development\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and React is easy to understand for beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practices. I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\n\n\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our Full Stack Web & Mobile App Development | Mern Stack Project course.\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Beginner who wants to be React developer and Full Stack Developer",
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "Anyone planning a job transformation and wants to become a React developer, Full Stack Developer",
        "Anyone who wants to build amazing React single page web applications",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "People who are planning a career in the application world",
        "Developers who have researched React but have had trouble mastering some concepts",
        "Anyone who want to start from scratch and to move more advanced level",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in NodeJS",
        "Developers new to NodeJS, MongoDB",
        "Anyone who wants to learn MongoDB",
        "Professionals who are willing to learn MongoDB",
        "People who want to become mern stack developer",
        "People who want to create real world mern stack project with react js, mongodb, express js, nodejs",
        "People who want to create real world react projects with express js, node js, mongodb",
        "People who want to create react project with redux, hooks and context",
        "People who want to learn creating mern stack projects with react, express js, mongodb"
      ]
    },
    {
      "title": "Android App Development with 7 Real Android Apps and Java",
      "url": "https://www.udemy.com/course/build-real-android-apps-android-app-development-with-java/",
      "bio": "Android App Development with Android Studio & Java, boost your android development skills with 7 different Android Apps",
      "objectives": [
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. Oak android development course",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Android is the most used operating system on the planet",
        "Learn Android App Development step by step",
        "Learn Java",
        "Android Studio",
        "Gradle Build System",
        "Learn Publishing Android App on Google Play",
        "Learn Releasing Android App",
        "We continually update the course, so you’ll learn the very latest as Android ( Android R )",
        "In this course, we will building 7 different Android Apps from scratch together.",
        "Android applications' levels in this course are from easy to difficult",
        "Using SQLite database, you will understand how to work with external databases.",
        "You will be able to develop Android applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "With Firebase, you will be able to develop real-time applications",
        "You will learn how to make a messaging app using Firebase.",
        "You will be able to develop user-friendly interfaces using Material Design principles and components.",
        "Become a professional Anroid App developer",
        "No previous experience is required!",
        "No programming knowledge required!",
        "Enroll now, start your own App business and work from anywhere in the world",
        "android",
        "android app ddevelopment",
        "android development",
        "mobile app development",
        "mobile development",
        "Android Studio",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development"
      ],
      "course_content": {},
      "requirements": [
        "No prior Android knowledge is required!",
        "No programming Android App Development knowledge required!",
        "A Windows PC, Mac or Linux Computer",
        "Internet and Basic Computer Knowledge",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Don`t worry. Setup and installation instructions are included for each platform",
        "Determination to learn and patience for Android Development and Java",
        "Watching the Android course videos completely, to the end and in order."
      ],
      "description": "Hi there,\nWelcome to the \" Android App Development with 7 Real Android Apps and Java \" course.\nAndroid App Development with Android Studio & Java, boost your android development skills with 7 different Android Apps\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\n\nI really like the approach of this course. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide.\nThe Android platform is increasingly popular with developers, and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\n\nChances are, you’ve heard of Android many times. You may even have an Android smartphone, tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files),the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or deny permission. App permissions in Android ensure the user’s protection from malware and software viruses\nThis course is built to help beginners to start making applications in android studio.\n\nOnline course platforms have android app development courses, but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.  In this course, we are not lecturing theories but we are just focusing on real-world android app development with hands-on lectures.\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nIf your answer is “yes” to these questions and if you want more, you are at the right place!\n\nOnline course platforms have Android App Development courses, but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\nAndroid is the most used operating system on the planet. In fact, it’s almost omnipresent in the mobile ecosystem and Android 11 has become the most popular Android version.\nMy \"Build Real Android Apps: Android 11 App Development | Java\" course will take you from beginner to advance level.\nYou will learn Android development step-by-step with hands-on demonstrations. In this course, we will learn to build and publish 7 different major apps.\nFirst of all, I will teach the java programming language that we will use while developing an android application. Java programming is a very old and widely used language. Developing an android application with java will make your job much easier. Thus, you will be able to easily develop your Android apps.\nThis course is built to help anyone to start making applications in Android.\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\nWhat’s important\nThere’re a lot of people out there teaching Android 11 who are not developers. We’re developers with many years’ field experience with the Android platform. So you will learn from an expert who has great knowledge of Android. This course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\nIn this course you will learn;\nJava Environment Setup\nJava Development Environment\nJava Syntax\nJava Object Oriented Concept\nJava Strings\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nPublishing Your App on Google Play and more\nYou will reinforce your existing android information by applying.\nUsing SQLite database, you will understand how to work with external databases\nYou will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).\nYou will learn how to make a messaging app using Firebase.\nWith Firebase, you will be able to develop real-time applications\nYou will be able to develop user-friendly interfaces using Material Design principles and components.\nYou will be able to develop modern Android apps.\nandroid app development\nandroid\nandroid studio java\nandroid studio\nandroid development\nandroid app development java\nandroid java\njava\njava android\nandroid app\napp development\nandroid app development with java\njava android app development\nandroid development java\njava app\njava for android\nbuild android app\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nVideo and Audio Production Quality\nAll our contents are created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the \" Android App Development with 7 Real Android Apps and Java \" course.\nAndroid App Development with Android Studio & Java, boost your android development skills with 7 different Android Apps",
      "target_audience": [
        "A total beginner, with a curious mind and wants to be an Android app developer",
        "Anyone who wants to learn to java and android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications",
        "Anyone who has no previous coding experience but wants to become expert",
        "Anyone who are planning job transformation",
        "Anyone who would like to work from anywhere in the world",
        "Anyone who wants to learn Android ( Android R )",
        "Those who want to develop an Android mobile application.",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Anyone who become an android developer from scratch"
      ]
    },
    {
      "title": "MVVM Design Pattern in iOS Using SwiftUI",
      "url": "https://www.udemy.com/course/mvvm-design-pattern-in-swiftui/",
      "bio": "Covers consuming JSON, Client-Server MVVM architecture, Screen-View Pattern",
      "objectives": [
        "Understanding the MVVM design pattern",
        "Consuming a JSON API in SwiftUI application",
        "Building SwiftUI applications using MVVM design pattern",
        "Building server using NodeJS, ExpressJS using JavaScript"
      ],
      "course_content": {},
      "requirements": [
        "Swift Language Knowledge is recommended",
        "SwiftUI knowledge is recommended",
        "NodeJS, ExpressJS and JavaScript is recommended but not required",
        "Xcode 11.5 or above"
      ],
      "description": "SwiftUI is Apple’s new declarative framework for building applications for any Apple device. Although you can use any design pattern to build your SwiftUI apps, MVVM pattern is preferred due to the declarative nature of the SwiftUI framework.\nIn this course, you will learn how to build practical real world SwiftUI apps using MVVM Design Pattern. You will also learn how MVVM patterns behave in client/server applications.\n\n\nWhat is MVVM Design Pattern?\nIn this section you will learn the basics of MVVM Design Pattern. You will learn the purpose and need for MVVM and what problems it solves when developing SwiftUI applications.\n\n\nGetting Started with MVVM in SwiftUI Apps\nIn this section you will get started with building SwiftUI applications using MVVM framework. We will start slowly by building a simple counter application with some business rules. This section will set the foundation for the rest of the course.\n\n\nMovies App\nThe Movies App spans over multiple sections of the course. You will learn how to build a Movie app, which allows you to search movies using OMDB API. The app will showcase how to write a service layer, which fetches JSON from an API. The app will also demonstrate how to show the detail screen of the movie when selected.\n\n\nBank App\nThe Bank App consists of multiple sections of the course. In this section you will be responsible for building the complete backend using NodeJS, ExpressJS and JavaScript hosted on Glitch platform. This app will showcase how MVVM pattern is implemented for SwiftUI app in a distributed environment.\n\n\nI am super excited for this course and I am 100% confident that you will enjoy the course.\n\n\nThanks and happy coding!",
      "target_audience": [
        "Developers curious about how to build SwiftUI apps using MVVM Design Pattern",
        "Developers who wants to create more maintainable SwiftUI applications",
        "Developers who wants to create client/server applications in iOS"
      ]
    },
    {
      "title": "Android Course Build 3 Applications from Scratch with Java",
      "url": "https://www.udemy.com/course/android-course-build-3-applications-from-scratch-with-java/",
      "bio": "Master the Art of Android App Development with Java by Building Real-World Applications",
      "objectives": [
        "Android app development from scratch, starting with the basics and progressing to advanced concepts.",
        "Building three complete Android applications, including a word-guessing game, a simple calculator, and a long story app.",
        "Understanding the latest Android 14 version and ensuring backward compatibility with older Android devices.",
        "Downloading, installing, and configuring the necessary software, including Java Development Kit (JDK) and Android Studio.",
        "Creating their first Android app and gaining hands-on experience with the Android framework.",
        "Testing apps using emulators and real Android devices to ensure functionality and user experience.",
        "Mastering Java programming concepts and techniques required for Android app development.",
        "Developing apps that work seamlessly across different Android versions, devices, and screen sizes.",
        "Utilizing Android Studio 4, Google's premier Android development tool, to streamline the coding process.",
        "Harnessing the power of Constraint layout for efficient and intuitive screen design.",
        "Staying up-to-date with the latest industry trends and best practices in Android app development."
      ],
      "course_content": {},
      "requirements": [
        "A computer (PC) with internet access to download software and tools required for Android app development.",
        "Familiarity with Java programming language fundamentals, including variables, data types, control structures, and functions.",
        "Installation of Java Development Kit (JDK) on their computer to compile and run Java code.",
        "Android Studio, the official Integrated Development Environment (IDE) for Android app development, should be installed on their computer to build and test Android applications.",
        "Basic understanding of object-oriented programming (OOP) concepts, such as classes, objects, and inheritance."
      ],
      "description": "Build 3 Android Applications from Scratch with Java\nAre you aspiring to become an Android Developer and eager to publish your own apps? Are you seeking the convenience of learning from the comfort of your home without having to attend classes? Do you want to stay up-to-date with the latest technology and app development trends? If you have brilliant ideas and a strong desire to bring them to life by creating your own apps from scratch, then \"Build 3 Android Applications from Scratch with Java\" is the course designed especially for you.\n\n\nBy enrolling in this course today, you will gain invaluable knowledge and practical skills. Here's what you can expect:\n1. Android app development from the ground up: This comprehensive course will take you from zero to proficient in Android app development.\n2. Creation of three unique applications: By the end of the course, you will have developed three fully-functional Android applications, each serving as a testament to your growing expertise.\nLet's take a closer look at the applications you will be building throughout the course:\n1) Guess the Word Application: Exercise your creativity and coding skills by developing an engaging word-guessing game that will captivate users with its challenging gameplay and intuitive design.\n2) Simple Calculator Application: Gain hands-on experience in creating a practical utility app as you build a user-friendly calculator with essential arithmetic operations, providing users with a convenient tool for quick calculations on their Android devices.\n3) Long Story Application: Showcase your ability to build a narrative-based application as you construct a captivating long story app that allows users to immerse themselves in compelling tales, delivering an enhanced reading experience.\nDon't hesitate to embark on this exciting coding journey. Kickstart your coding career now by purchasing our course. I, Vijay Kumar, have successfully guided over 8,000 students in mastering Android development, and I am dedicated to helping you become the next proficient Android developer.\nInvest in your future and buy the course today. Time is of the essence, and there is no need to delay your progress any longer!\nRequirements:\n- A PC\n- Java Development Kit (JDK)\n- Android Studio\nKey Programs Covered:\n- Android Studio: We will utilize the powerful Android Studio environment, equipping you with the necessary tools to build high-quality Android applications.\nThroughout this course, you will acquire essential skills, including:\n- Developing apps for the latest Android version 14 while ensuring backward compatibility with older Android devices running earlier versions of the Android operating system.\n- Downloading, installing, and configuring the necessary (free) software required for app development.\n- Creating your first app from scratch, establishing a strong foundation for your future projects.\n- Building a range of applications that demonstrate key aspects of the Android framework, allowing you to grasp core concepts effectively.\n- Testing your apps on emulators or real Android devices, ensuring optimal functionality and user experience.\n- Mastering Java programming as it is fundamental to Android app development. The course includes Java tutorial videos to facilitate your learning process.\n- Ensuring your apps are compatible with both current and older Android versions on various phones and tablets.\n- Utilizing Android Studio 4, the latest version of Google's premier Android tool, to streamline your development workflow.\n- Exploring the all-new Constraint layout, a powerful \"drag and drop\" feature for efficient screen creation.\nSo, why waste any more time? Enroll now and dive into the world of Android coding. Let's embark on this rewarding journey together!",
      "target_audience": [
        "Aspiring Android developers looking to learn app development from scratch.",
        "Individuals who prefer self-paced online learning over traditional classroom settings.",
        "Students with creative ideas who want to bring their app concepts to life by developing their own Android applications."
      ]
    },
    {
      "title": "Flutter - How to Build an Ultimate Responsive App",
      "url": "https://www.udemy.com/course/build-a-responsive-app-in-flutter-for-android-ios-web/",
      "bio": "Learn Responsive Design and How to Build a Responsive App in Flutter that runs on Android, iOS and Web",
      "objectives": [
        "Responsive Design Guidelines and Patterns",
        "Implement Responsive Design in a Flutter App",
        "Build a Responsive Flutter App for Android, iOS and Web",
        "How to use Flutter Widgets to build Responsive Layouts",
        "Responsive Design based on Google's Material Design"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course"
        ],
        "Responsive Design Theory": [
          "Introduction to Responsive Design",
          "Responsive Layout Grid Concepts",
          "Responsive Patterns"
        ],
        "New to Flutter? Learn the Basics of Flutter UI": [
          "New to Flutter?",
          "Single Child Layout Widgets",
          "Multi-Child Layout Widgets - Using Row and Column Widgets",
          "Aligning, Sizing and Packing Widgets",
          "Common Layout Widgets - Introduction",
          "Using Container Widget",
          "Building Card UI Widget and Fixing Common Problem",
          "Using GridView Widget",
          "Using ListView Widget",
          "Using ListTile Widget",
          "Using Stack Widget",
          "Summary - Common Layout Widgets",
          "Project - Building a Places App"
        ],
        "Build A Responsive App In Flutter": [
          "Introduction - Building a Responsive Flutter App",
          "How to Use Flutter MediaQuery Widget",
          "How to Use Flutter LayoutBuilder Widget",
          "How to Use Flutter OrientationBuilder Widget",
          "Adaptive Components In a Flutter App",
          "Summary - Building a Responsive App in Flutter"
        ],
        "Project - Build A Responsive Places App In Flutter - Code Walk-through": [
          "Download Code Resources",
          "Build A Responsive App In Flutter - Code Walk-through",
          "Build Places App - A Responsive Flutter App"
        ],
        "Course Conclusion - Lessons Learnt": [
          "What We Learnt In This Course"
        ],
        "Optional extras - Flutter Animation Widgets": [
          "Using Animated Container Widget",
          "Using Animated DefaultTextStyle Widget",
          "Using Animated Align Widget",
          "Using Animated Padding Widget",
          "Using Animated Physical Model Widget",
          "Using Animated Positioned Widget"
        ]
      },
      "requirements": [
        "Basic programming knowledge"
      ],
      "description": "Hello and Welcome to this course on Building a Responsive App in Flutter.\nBy joining this course, you will learn responsive design guidelines and how to implement them in your next Flutter app. By the end of this course, you will be able to build a Responsive App in Flutter that works for Android, iOS and Web platforms.\n\n\nResponsive design is an important building block of developing an app with great user experience .\nIf you are an app developer or want to become one, this is an important skill that you should master. This course will build your foundation on it.\n\n\nThis course will provide you not only theoretical foundation but also practical implementation of Responsive Design in a Flutter App. First, you will learn Responsive Design Guidelines and Patterns based on Google's Material Design. And then you will learn how to implement these guidelines and patterns in a Flutter App. A Complete Flutter responsive app is demonstrated that works on Android, iOS and Web. You will be able to download the source code of this app at the end of this course.\n\n\nFor a multi-platform Flutter app with a single code base, the app UI needs to adapt to any screen size and any device. In other words, it needs to be responsive.\nHere are the challenges you will face when building a responsive app\nHow to handle your app UI for so many different screen sizes and devices on the market?\nHow many layouts would you implement for each app screen?\nAnd what would change in each of these layouts?\nIs it complicated and takes too long to build responsiveness?\nIn this course, we will address all these challenges. First, I will take you through the responsive design theory. Then I will show you how to implement these design guidelines and patterns in a Flutter app. Not only that I will provide a full code walkthrough of a responsive app called Places. You will be able to download the source code of this app at the end of this course.\n\n\nBy the end of this course, you will learn both design guidelines and implementation. And you will be able to build your next Flutter app that works responsively on any screen size, any device and any OS platform. I hope you enjoy this course and learn the fundamental building block of developing an awesome app. Enrol into this course now and build your next Flutter app responsively.",
      "target_audience": [
        "Flutter Developers",
        "Mobile App Developers",
        "Beginner App Developers",
        "Android App Developers",
        "iOS App Developers",
        "Web App Developers",
        "App developers curious about Responsive Design and Flutter"
      ]
    },
    {
      "title": "The Complete Guide to JSON Parsing Using Swift 5",
      "url": "https://www.udemy.com/course/ultimate-guide-to-json-parsing-with-swift/",
      "bio": "Learn the modern way of encoding and decoding JSON in Swift",
      "objectives": [
        "Learn to integrate JSON Web services with their app!",
        "Consume JSON using the new classes provided by Swift programming language"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you should know?",
          "Exercise Files",
          "Credits and Resources"
        ],
        "JSONSerialization": [
          "Parsing JSON Using JSONSerialization",
          "Mapping JSON Result to Customer Model",
          "BONUS - Fixing Playground Errors",
          "Mapping JSON Array Result to Customers List"
        ],
        "Beginning JSON Parsing Using JSONEncoder and JSONDecoder": [
          "Decoding JSON into Model",
          "Encoding Model to JSON",
          "Decoding JSON Array"
        ],
        "Intermediate JSON Parsing Using JSONEncoder and JSONDecoder": [
          "Decoding Basic Key-Value Types",
          "Decoding Key-Value Using Response Model",
          "Decoding a Nested Object",
          "Decoding Enums",
          "Decoding Dates from Timestamps",
          "Handling Property Name Mismatches",
          "Mapping Properties Using CodingKeys"
        ],
        "Advanced JSON Parsing Using JSONEncoder and JSONDecoder": [
          "Decoding Arbitrary Types",
          "Decoding Inherited Types",
          "Decoding from Different Types of Values",
          "Implementing Custom Encoding Strategy"
        ],
        "Decoding JSON to Flat Model": [
          "Preparing JSON and Model",
          "Decoding User",
          "Decoding Address"
        ],
        "Consuming JSON Web API": [
          "Fetching Data from the API Using URLSession",
          "Implementing and Populating Models with the API Result",
          "Implementing CodingKey to Use Custom Properties in Model"
        ],
        "Custom Key Decoding in Swift": [
          "Implementing Custom Key Decoding in Swift",
          "Source Code"
        ],
        "Conclusion": [
          "Bonus"
        ]
      },
      "requirements": [
        "Should be familiar with the iOS App Architecture",
        "Should have intermediate level understanding of the Swift programming language"
      ],
      "description": "Parsing JSON is an integral part of most of iOS applications. The new version of Swift introduced classes and APIs that make JSON parsing easy to handle. This course is all about JSON encoding and decoding using Swift language. You will encounter many different JSON responses and learn how to decode those responses to your models. This course is packed with real world examples and can help you gain a better understanding of consuming JSON APIs for your iOS applications.\nMy name is Mohammad Azam and I am the creator of many popular online courses including:\nMastering ARKit for iOS\nBlockchain Programming in iOS Using Swift\nMastering Core ML for iOS\nServer Side Swift Using Vapor\nBlockchain Programming Using JavaScript\nMastering Micro Services Using Java Spring Boot\nThe Complete Guide to Lean Controllers in iOS\nMastering Firebase for iOS Using Swift\nI have also created over 2 dozens apps and some of my apps were even featured by Apple on the App Store. I have worked with fortune 500 companies as a lead iOS developer and helped them grow their business ten folds.\nAt present I work as a lead instructor for DigitalCrafts where I teach Full Stack Web Development. Before joining DigitalCrafts, I worked full time with The Iron Yard as an iOS and Full Stack instructor. I also run a very successful YouTube channel with over 5000 subscribers.\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 3 hours.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nThis is amazingly good and makes me really excited. I appreciated Mohammad for creating this course. This 3 hours already worth than 20 hours!!\nI HIGHLY RECOMMEND this course to anyone, but make sure you have a basic understanding of JavaScript FIRST; otherwise, it will all sound foreign to you. If you want to learn Blockchain development using one of (if not the most widely used) languages in the world - JavaScript - then invest in this course. Thank you, Mr. Azam! I will definitely buy more blockchain courses from you.\nBuy this course today and this is what you’ll get.\nYou will learn the concepts behind JSON Encoding and Decoding in Swift and how you can consume JSON in your  iOS applications. I am going to teach you encoding and decoding JSON by running through a lot of examples.\n* Each lecture in the course is accompanied with complete code sample files.\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and I make sure that every questions is answered.\nCan you believe you get all this (and more) for just $199?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nWhy learn JSON Parsing?\nAn iOS app is not an island, an app is constantly communicating with a Web API to fetch or submit information. Consuming a JSON API is an integral part of any iOS application.\nBy learning the concepts of JSON Parsing in iOS, you will be able to consume third party APIs including News, iTunes, Movies, Real state properties etc.\nWho is this for?\nThis course is for anyone who wants to take their skills to the next level. JSON Parsing is an integral part of iOS app development and it allows your app to easily consume information from third party sources. This course is intended for intermediate developers, who have knowledge of iOS app architecture and Swift programming language.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the iOS community with a large following. I do a lot of speaking engagements in which I spread knowledge and education.\nWhat are the requirements?\nA Mac Computer\nXcode 9.3 or above\nUnderstanding of iOS framework is required\nBasic understanding of the Swift language and the iOS SDK - I'll teach you everything you need to know about JSON Parsing in Swift.\nWhat am I going to get from this course?\nLearn the concepts behind JSON parsing using real world examples.\nTake your existing iOS skills to the next level\nBecome a professional app developer, take freelance gigs and work from anywhere in the world\nBored with the same old, same old? Apply for a new job in a software company as an iOS developer",
      "target_audience": [
        "Intermediate Swift developers who wants to learn more about different ways of consuming JSON"
      ]
    },
    {
      "title": "Project-Based SwiftUI Course: Develop 12 Apps for iOS",
      "url": "https://www.udemy.com/course/swift-starter-kit/",
      "bio": "Build 12 iOS Apps from scratch & learn the basics of Swift, iOS Development in Xcode, and SwiftUI",
      "objectives": [
        "Swift 5 Programming",
        "iOS 14 App Development",
        "SwiftUI 2.0 Framework",
        "Xcode 12 IDE",
        "Constants and Variables",
        "Functions",
        "Structs and Classes",
        "If-Else Statements",
        "Timers",
        "Closures",
        "Switch-Case Statements",
        "Enumerators",
        "If-Let & Guard-Let",
        "Do, Try & Catch Blocks",
        "@StateObject",
        "@EnvironmentObject",
        "@State",
        "@Binding"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "The Hello World App": [
          "The Hello World App",
          "Create an Apple ID and Developer Account",
          "Install Xcode 12 (Beta 4)",
          "Create a New Project",
          "The Xcode IDE Interface",
          "Basic Project Structure",
          "Basic App Structure",
          "Create a Custom View",
          "Implement a Custom View",
          "Introduction to View Modifiers",
          "Add an App Icon",
          "Run Your App on a Device",
          "Xcode 12 (Beta 4) Bug",
          "Anatomy of SwiftUI Apps"
        ],
        "The Hello Universe App": [
          "Challenger App: Hello Universe",
          "Challenger App Solution: Hello Universe"
        ],
        "The Vision Board App": [
          "The Vision Board App",
          "Set Up the Project",
          "Prepare the Project Assets",
          "Add the Project Assets",
          "The Image View",
          "Stacking Views",
          "Refactoring Code - Part I",
          "Refactoring Code - Part II",
          "Swift Analysis: Constants and Variables",
          "Swift Analysis: Computed Variables",
          "Swift Analysis: Structs",
          "Swift Analysis: Data Types",
          "Custom Views and View Refactoring"
        ],
        "The Connections App": [
          "Challenger App: Connections",
          "Challenger App Solution: Connections"
        ],
        "The Push-Up Counter App": [
          "The Push-Up Counter App",
          "Set Up the Project",
          "Add the App Icon",
          "Create the User Interface",
          "Refactor the Code",
          "Integrate Functionality I: Classes",
          "Integrate Functionality II: Functions",
          "Integrate Functionality III: String Interpolation",
          "Integrate Functionality IV: State",
          "Integrate Functionality V: @StateObject",
          "Add the Reset Feature",
          "Swift Analysis: Structs vs. Classes",
          "Swift Analysis: String Conversion",
          "Swift Analysis: Functions",
          "Integrating Functionality"
        ],
        "The Workout App": [
          "Challenger App: Workout",
          "Challenger App Solution: Workout"
        ],
        "The Focus App": [
          "The Focus App",
          "Set Up the Project",
          "Create the User Interface I",
          "Create the User Interface II",
          "Download SF Symbols",
          "Integrate Functionality I: Create the Model",
          "Integrate Functionality II: Update Label State",
          "Integrate Functionality III: Initialize a Timer",
          "Integrate Functionality IV: Invalidate a Timer",
          "Integrate Functionality V: If-Else Statements",
          "Code Cleanup: Extensions and Marks",
          "Dynamic Progress Bar I: An Instance Dillema",
          "Dynamic Progress Bar II: @EnvironmentObject",
          "Upgradability I: Variable Start Time",
          "Upgradability II: Variable Progress Bar Color",
          "Refactor & Rename: The TimeRobot (Model)",
          "Swift Analysis: Conditionals I",
          "Swift Analysis: Conditionals II",
          "Swift Analysis: Closures I",
          "Swift Analysis: Closures II",
          "Models, Conditionals, and Closures"
        ],
        "The Pomodoro App": [
          "Challenger App: Pomodoro",
          "Challenger App Solution: Pomodoro"
        ],
        "The Calorie App": [
          "The Calorie App",
          "Update: A Quick Announcement",
          "Set Up the Project",
          "Add the App Icon",
          "User Interface I: Create the Title Card",
          "User Interface II: Create the Remaining Cards",
          "Integrate Functionality I: Move Between Cards",
          "Integrate Functionality II: Implement a Picker",
          "Integrate Functionality III: Implement a Slider",
          "Integrate Functionality IV: Calculate the Result",
          "Refactor I: Use a Switch Statement",
          "Refactor II: @State & @Binding",
          "Swift Analysis: Enumerators",
          "Swift Analysis: Switch Statements",
          "SwiftUI Basic Controls, Enum, & Switch Statements"
        ]
      },
      "requirements": [
        "A Mac running macOS Catalina 10.15 or higher",
        "35 GB of free hard drive space for the Xcode installation",
        "An Apple ID with a Free Apple Developer Account attached to it"
      ],
      "description": "Learning iOS development and creating compelling apps can become a comfortable and enjoyable endeavour with the right course. iOS 14, Swift 5 & SwiftUI - The  iOS Development Starter Kit is dedicated to creating the best possible learning experience with that in mind.\n\n\nMy name is Pao, the founder of Swift Starter Kit and your lead instructor for this course. You will learn how to build and deploy basic iOS apps from scratch using the latest and greatest in the Swift Programming language and the SwiftUI framework.\nThis course is for beginner-level developers who want to develop their own apps for the Apple ecosystem, primarily iOS and iPadOS. However, the skills you will gain from this course can also be used to create apps for macOS, tvOS, and watchOS. This course will focus primarily on development for iOS. You will learn everything about Apple app development and the Swift programming language from the ground up. No previous programming experience is necessary.\n\n\nSo what is the course all about? It’s about achieving three key things:\n1. Learn the foundations of Programming with Swift, no experience needed\nThe first thing that you will learn is the foundations of programming using Swift. You will not need to know any programming concepts beforehand, but it will certainly help. I will be taking you from the installation of the Xcode IDE up until getting your apps running on a real device, and everything in between.\n2. Learn SwiftUI, Apple’s native UI development framework\nThe second thing that you will achieve is learning how to use the SwiftUI framework. We will discuss this in more detail in the next lesson. Still, you should know that this course mainly focuses on SwiftUI, a new declarative framework for creating user interfaces built on top of the Swift programming language.\n3. Build and Deploy iOS Apps from Scratch, specially tailored for beginner developers\nThe third thing you will achieve is creating 12 beginner-friendly apps that will teach you all the essentials of swift programming and Xcode app development. By the end of this course, you will have had seven apps that you can open and use on your iOS device. You can use these apps as a foundation of knowledge for building even more complex and robust apps.\n\n\nSo, why take this particular course?\n1. A Project-Based Approach\nThis course tackles learning programming concepts through a project-based approach. This means you learn everything you need to know by creating projects in the form of apps. These projects are neatly organized to provide you with the best sequence to learn programming and app development.\n2. Contextual Learning\nThis course also relies heavily on contextual learning, which means concepts are introduced when we need to use them. The power of contextual learning is in introducing the “why” of each idea, allowing you to better understand the reasons behind the lines of code and why we are using them. This reduces the need for long lectures and makes programming concepts much easier to understand and remember.\n3. Hands-On Coding\nFinally, this course is not just going to be pure theory, but instead will focus on getting your hands dirty in a very hands-on approach. You will learn programming and app development by creating and coding things with your own hands and developing your skills at an accelerated rate in the process.",
      "target_audience": [
        "Beginner-Level Developers who are curious and want to learn iOS app development in iOS 14 and Xcode 12 with SwiftUI 2.0"
      ]
    },
    {
      "title": ".NET MAUI Mobile App Development",
      "url": "https://www.udemy.com/course/net-maui-mobile-app-development/",
      "bio": "Become a mobile app developer with .NET MAUI, and write robust cross platform mobile apps today!",
      "objectives": [
        "Learn the fundamentals of .NET MAUI",
        "Design Simple API with .NET Core",
        "Consume API in .NET MAUI App",
        "Understand XAML Controls and Syntax",
        "Implement Styles in .NET MAUI application",
        "MVVM Pattern using the MVVM Community Toolkit",
        "Using SQLite with a Mobile App",
        "Protect mobile app using authentication and authorization",
        "Create a minimal API",
        "Sign and publish Android App",
        "Publish API on Microsoft Azure"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introducing .NET MAUI": [
          "Introducing .NET MAUI"
        ],
        "Environment Setup": [
          "IMPORTANT - .NET 8/9 Version",
          "Environment Setup",
          "Install Visual Studio",
          "Install Visual Studio 2026 (Insiders Edition)",
          "Visual Studio Code",
          "IMPORTANT - Hyper-V and Hardware Acceleration"
        ],
        "Create Your First .NET MAUI App": [
          "Section Overview",
          "Create first MAUI App",
          "Debug MAUI App",
          "Understand MAUI Project Files",
          "Create Controls with C#",
          "Create Controls with XAML",
          "Understand MAUI Layouts",
          "Set Global Markup Values",
          "Define Platform Specific Values",
          "Shared Resources",
          "Navigating Multiple Pages",
          "Section Review"
        ],
        "Create A Car Listing App (MVVM and CRUD)": [
          "Section Overview",
          "Setup .NET MAUI Project",
          "Create Data Model",
          "Create Data Access Services",
          "Understanding the MVVM Pattern",
          "MVVM Toolkit Updates",
          "Implementing the MVVM Pattern",
          "Setup View Model and Command",
          "Understanding Dependency Injection",
          "Implement Data Template and Collection View",
          "Style Our List Page View",
          "Implement a Details Page",
          "Exploring Storage Options",
          "Add SQLite Database To App",
          "Setup Form To Add & Delete Records",
          "Section Review"
        ],
        "Develop Supporting API": [
          "Section Overview",
          "API Development Fundamentals",
          "Setup API Project",
          "Setup CORS Policy",
          "Setup Database",
          "Handling Migrations Using Terminal (Non-Windows machines)",
          "Configure API Endpoints",
          "Test API Functions",
          "Prepare Server for API Deployment",
          "Refactor and Publish API To Local Server",
          "IMPORTANT - How to edit Android Manifest file in Visual Studio",
          "Configure Mobile App For Network Connections",
          "Refactor MAUI App For API",
          "Essential Fixes",
          "Section Overview"
        ],
        "Implementing Authentication and Authorization": [
          "Section Overview",
          "Authentication vs. Authorization",
          "Add Identity To API",
          "Setup Login Endpoint",
          "Add App Loading Page",
          "Add App Login Page",
          "Seed Users and Roles",
          "Add Authentication and Authorization to API",
          "Setup JSON Web Token Generation",
          "Setup Login Logic and Flow",
          "Adjust App Flow and Layout",
          "Handle Logout",
          "Section Review"
        ],
        "Package and Publish Android App": [
          "Section Overview",
          "Publish API on Microsoft Azure",
          "Modify App for Published API",
          "Publish Android Mobile App",
          "Final Source Code"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Some knowledge of C# Programming",
        "A capable machine to run Visual Studio 2022 and Mobile Emulators"
      ],
      "description": "Let us start our journey together to build beautiful native cross-platform apps for iOS, Android, macOS, and Windows with .NET MAUI, C#, and Visual Studio! It is the evolution of Xamarin.Forms toolkit and allows us to use one code base to develop for all platforms.\nThis course reviews everything we need to know about building an app using .NET MAUI. You will learn the basics, including how to build user interfaces with XAML, the Model View View Model (MVVM) pattern and data binding; how to navigate between pages; how to access device storage, and so much more.\nThis course has everything you need to learn the basics and set you up for success when building apps with .NET MAUI!\nEverything in this course is .NET 6 / .NET 7 compatible.\nBy the end of this course, you will learn the following:\nWhat’s .NET MAUI, who is it for, and how does it work?\nHow to setup the development environment for .NET MAUI\nHow to build an Android App\nHow to use the MVVM Pattern and the MVVM Community Toolkit\nHow to use Dependency Injection\nHow to implement interfaces using XAML - Extensible Application Markup Language\nHow to develop using Event Driven Development\nHow to setup and use Shared Resources for styling.\nHow to use various MAUI Controls and MAUI Layouts\nHow to implement troubleshooting techniques during development\nHow to develop and Publish Minimal API with .NET Core\nHow to consume API in .NET MAUI App\nHow to secure API using JSON Web Tokens\nHow to implement .NET MAUI Authentication\nHow to publish and sign Android App\nHow to publish API on Azure for public access\n\nDevelopment Environment Constraints\nI use a Windows machine to develop the .NET MAUI application. I predominantly focus on building an app for Android, but you need an iPhone to test the iOS applications. Everything done in these demos is cross-platform.\nContent and Overview\nTo take this course, you will need to know C#. You can use my course C# Console and Windows Forms Development w/ Entity Framework. Even if you have little exposure to the .NET development stack, this course is beginner-friendly and has development tips.\nThe course content is smartly broken up to highlight related activities based on each module in the application being built. We will also look at troubleshooting and debugging errors as we go along, implementing best practices, writing efficient logic, and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course, and you will be challenged to be the best you can be.\nBy the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, including some files to make it easier for you to replicate the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\n\n\nIt's time to take action!\nSee you in the course!",
      "target_audience": [
        "Anyone interested in learning .NET MAUI",
        "Anyone who wants to make cross platform mobile applications with a single code base"
      ]
    },
    {
      "title": "iOS 13 & Swift 5: Chat App With Firestore | MVVM",
      "url": "https://www.udemy.com/course/ios-13-swift-5-chat-app-with-firestore-mvvm/",
      "bio": "Real Time Chat App with Cloud Firestore & Swift 5",
      "objectives": [
        "How to build a real time message iOS application",
        "How to user Cloud Firestore as a backend",
        "How to implement the Model View ViewModel (MVVM) architecture",
        "Advanced auto-layout and programmatic UI skills with Swift",
        "Register and authenticate users using Firebase",
        "Advanced UI/UX development to build a clean and visually appearing user interface",
        "Advanced UITableView and UICollectionView skills",
        "Advanced Swift techniques and architecture patterns",
        "How to build a user profile"
      ],
      "course_content": {
        "Introduction": [
          "Configure Project & Setup Home Screen",
          "Setup Home Screen Navigation Bar",
          "Setup Messages TableView"
        ],
        "Login & Sign Up User Interface & ViewModels": [
          "Setup Login Screen & Intro to AutoLayout",
          "Login Screen UI",
          "Login Screen UI Continued",
          "Input Container View Code Refactor",
          "Finish Login Screen UI",
          "Sign Up Screen UI",
          "Login View Model & Form Validation",
          "Selecting Profile Image & Sign Up Form Validation"
        ],
        "Setting Up Firestore & User Authentication": [
          "Setup Firebase",
          "Create A User",
          "Keeping A User Logged In",
          "Logging A User In",
          "API Code Refactor",
          "Progress HUD & Error Handling"
        ],
        "Fetching Users From Firestore": [
          "Setup NewMessageController",
          "Setup TableView & Navigation Bar",
          "UserCell UI",
          "User Data Model & Fetching User Info From Firestore",
          "Initializing User Object",
          "Populate TableView With Users"
        ],
        "Setting Up ChatController & Sending Test Messages": [
          "Setting Up ChatController",
          "Custom Input Accessory View For Sending Messages",
          "Setting Up Message Cells",
          "Sending Test Messages & MessageViewModel",
          "Finishing Up MessageViewModel"
        ],
        "Sending & Receiving Messages From Firestore": [
          "Message Model & Upload Message To Firestore",
          "Fetching Messages From Firestore",
          "Dynamic Cell Sizing & Finishing ChatController",
          "Upload & Fetch Conversations",
          "Populate TableView With Conversations"
        ],
        "User Profile": [
          "User Profile UI",
          "Populate Header With User Data",
          "Profile View Model",
          "Setup Logout Button",
          "Action Handlers For Profile Options"
        ],
        "Finishing Touches": [
          "Searching For Users",
          "Bug Fixes",
          "Duplicate Messages Bug Fix",
          "Show Error Messages To User"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift and Xcode is preferred",
        "A Mac computer"
      ],
      "description": "What are we building?\nIn this course, you will learn how to build a real time chat application using Firestore and Swift, ready to be published on the App Store. Throughout the process, you will develop high level programming, app design and app development skills.  We will be building this without the use of storyboards, fully programmatically.\n\n\nWhy take this course?\nLearning advanced development skills should be taught using real world examples. This course will teach you how to build a fully functional messaging app, that's completely ready to integrate into any one of your iOS Applications. You will be learning advanced front and backend development skills, from a real life professional developer. You will learn how to code like a pro, writing clean, scalable and maintainable code.  This also makes for a great project to add to your portfolio, which you can use to show off to potential employers if you're trying to become a pro.\n\n\nPrior Experience?\nSome programming and basic Xcode experience is preferred. The course will move a little fast if you're a complete beginner, but you will pick things up along the way.\n\n\nWhat will you learn?\nHow to build a fully functioning messaging interface\nComprehensive knowledge and understanding of Swift 5 & Xcode 11\nHow to Implement Model View ViewModel (MVVM) architecture\nAdvanced level programming and app development skills\nAdvanced level User Interface Design\nAdvanced level back end engineering\nHow to authenticate and register users with Firebase\nHow to communicate with a database (read/write)\nHow to monitor events in a database\nHow to upload images to Firebase\nHow to structure data for optimum performance\nHow to programmatically construct views and controllers\nHow to parse incoming JSON data from database\nHow to use CocoaTouch classes, UIKit, UserNotifications and more\nHow to use CocoaPods and custom third party APIs\nHow to implement/use protocols\nHow to implement custom subclasses for clean and reusable code\nHow to dynamically size collection view cells\nHow to create extensions and functions for clean and reusable code",
      "target_audience": [
        "Upper level beginner to intermediate"
      ]
    },
    {
      "title": "React Native Navigation",
      "url": "https://www.udemy.com/course/react-native-complete-navigation/",
      "bio": "Learn to build different types of navigation in a React Native Appliaction",
      "objectives": [
        "React Native",
        "Navigate between screens in a React Native App",
        "Build menus and stack navigators"
      ],
      "course_content": {
        "Introduction and Set Up": [
          "Overview",
          "Expo",
          "Android Studio",
          "XCode"
        ],
        "Drawer Navigation": [
          "Section introduction: Component and Dependencies",
          "Custom Drawer",
          "Generate Screens",
          "Drawer Navigator",
          "Header",
          "Drawer Navigation Exercise",
          "Drawer Icons",
          "Section Code"
        ],
        "Bottom Tab Navigation": [
          "Section introduction",
          "Set up Component",
          "Screens",
          "Navigation Tabs",
          "Tab Options",
          "Section Code"
        ],
        "Stack Navigation": [
          "Section introduction",
          "Set up Component",
          "Screens",
          "Stack Navigator",
          "Animations",
          "Section Code"
        ],
        "Top Bar Tab Navigation": [
          "Section Intro",
          "Set Up Component",
          "Components",
          "Safe Area Insets",
          "Nested Navigators",
          "Section Code"
        ],
        "Route Params": [
          "Section Intro",
          "Set Up Component",
          "Data and Home Component",
          "Custom Card",
          "Single Page",
          "Route Params",
          "Section Code"
        ],
        "Conclusion": [
          "Conclusion",
          "Source Code"
        ]
      },
      "requirements": [
        "Familiarity with React",
        "Internet connection"
      ],
      "description": "The React Native Complete Navigation Course will let learn several different types of navigation options by building in a React Native App.\nNavigation through pages is a corner stone of Web Applications and Mobile Applications for the same reason.\nIn this course we will learn how to make use of different types of navigations like Drawer Navigation, Bottom Tab Navigation, Material Top Tab Navigation, Stack Navigation and to navigate to a single screen dynamically with Route Parameters.\nWe will also learn how to nest 2 different kinds of Navigators in each other.\nWe will build and see how menus and navigation works both on Android and IOS platforms.\nBy the end of this course you will have a deep understanding how navigation works in React Native.\n\n\nReact Native is javascript framework that allows us to build cross-platform application both for iOS and Android and also for Web. This framework allied with Expo offers us several out of the box methods to build Mobile application for any case that we want.\n\n\nReact Navigation is third party library that we can make use to navigate between screens in our app by a gesture like press, long press or swipe, or by an action method that will run in our code.\n\n\nIn this course we will use React Navigation version 5.x so you should be able to follow using the latest version of this library.\n\n\nThis course will also be updated regularly, either with new content or updates to code itself.\n\n\nLEARNING OUTCOMES\nOver 2.5 hours of content.\nLearn to navigate through your React Native Application with React Navigation 5.x.\nDrawer Navigation.\nBottom Tab Navigation.\nMaterial Top Tab Navigation.\nStack Navigation.\nNested Navigators\nAnd navigate through Route Parameters.",
      "target_audience": [
        "Beginners that want to keep learning React Native",
        "Developers that want to add new feature to their React Native app"
      ]
    },
    {
      "title": "Rapidly Build 12 iPhone/Android Augmented Reality (AR) Apps",
      "url": "https://www.udemy.com/course/rapidly-build-12-iphoneandroid-augmented-reality-ar-apps/",
      "bio": "Build 12 AR Apps (Incl. Animated Cut Scenes) & Start Your Own App Building Business! No Coding - Latest Unity/Vuforia",
      "objectives": [
        "1. Create 12 Next-Gen Augmented Reality Apps for iOS/Android – Knowledge of Programming or coding is not required, a willingness to learn is all that is required",
        "2. At the end of the course, you should be able to create an AR app in under 10min or even 5min!",
        "3. Create your own AR App business by learning how to build practical Augmented Reality Apps including AR Business cards (with multiple video players), Drag/Drop AR object Apps (E.g. Furniture), AR books, AR animated cut scenes, AR greeting cards, User Defined Target AR Apps (Markeless), AR jump scare horror Apps and many more!",
        "4. Learn how to use the latest stable versions of Unity (2017.2 – with integrated Vuforia Editor) and Vuforia (6.5) for building out of this world AR Apps.",
        "5. High quality presentation with over 3 hours of HD video tutorials on key aspects related to Augmented Reality Applications."
      ],
      "course_content": {
        "Introduction": [
          "1.1 Course Objectives",
          "1.2 Augmented Reality Is Going To Be HUGE"
        ],
        "2. Installation & Overview – Unity, SDK & Vuforia": [
          "2.1 Installing Unity Android SDK & Java JDK",
          "2.2 Unity & Vuforia Overview – APK Installation & SDK Version Compatible With Mo",
          "2.3 Working With New & Old Versions Of Unity",
          "2.4 Building App – DON’T SKIP!",
          "2.5 Building Apps On iOS - DON'T SKIP!"
        ],
        "3. DON’T SKIP! App 1 & How To Use Vuforia Database": [
          "3.1 Setting Up Target Images - Download Files",
          "3.2 Importing Asteroid",
          "3.3 Changing Properties – Colour, Texture & Materials",
          "3.4 Animating The Asteroid"
        ],
        "4. App 2 - Importing & Animating Spaceship": [
          "4.1 Creating a Jet Spaceship",
          "4.2 Adding Atmospheric Elements & Sound FX",
          "4.3 Build And Test App"
        ],
        "5. App 3 - AR Furniture Placement": [
          "5.1 Setting Up The Scene",
          "5.2 Adding Controls - Move, Scale, Rotate & Test App"
        ],
        "6. App 4 – Working With Multiple AR Objects": [
          "6.1 Setting Up Unity For Multiple Targeting & Importing Objects"
        ],
        "7. App 5 – Soldier v Zombie": [
          "7.1 Setting Up The Scene",
          "7.2 Animating Zombie",
          "7.3 Animating Soldier And Zombie Clash!",
          "7.4 Creating Muzzle Flash, Add Sound FX, Build & Test App"
        ],
        "8. App 6 – User Defined Target – Markerless AR Earth": [
          "8.1 App 6 – User Defined Target – Markerless AR Earth"
        ],
        "9. App 7 – Boat On Water – Particle System": [
          "7.1 Boat On Water – Particle System"
        ],
        "10. App 8 – AR Book": [
          "10.1 Set Up & Animate Whale",
          "10.2 Animating a Dinosaur",
          "10.3 Animating a Butterfly and Test App"
        ]
      },
      "requirements": [
        "• A Windows or Mac PC/Laptop with internet (A MAC is required for building iPhone/iOS Apps)",
        "• Android Smartphone or an iPhone (An iPhone is required for testing iPhone/iOS Apps)",
        "• A willingness to become absolutely awesome"
      ],
      "description": "IMPORTANT:\n(1) There are several compatibility issues with Unity 2018, so, please download this version of Unity: 2017.2.0f3\n(2) The 3D models used in the course will eventually get updated/deleted  at the Unity Asset store but there will always be new models to use, so, use your imagination and go wild!\nAugmented Reality is the future\nAugmented reality (AR) is the real-time use of information in the form of 3D models, text, graphics, audio and other virtual enhancements integrated with real-world objects. It is this “real world” element that differentiates AR from virtual reality.  AR integrates and adds value to the user’s interaction with the real world, versus a simulation.\n\n\nAugmented reality starts with a camera-equipped device—such as a smartphone, a tablet, or smart glasses—loaded with AR software. When a user points the device and looks at an object, the software recognizes it through computer vision technology, which analyzes the video stream.\n\n\nPioneering organizations, including GE, Mayo Clinic, and the U.S. Navy, are using AR to improve productivity, quality, and training. By combining the strengths of humans and machines, AR will dramatically increase value creation.\n\n\nThough still in its infancy, AR is poised to enter the mainstream; according to one estimate, spending on AR technology will hit $60 billion in 2020.\n\n\nWhat Will I Learn?\nCreate 12 Next-Gen Augmented Reality Apps for iOS/Android – Knowledge of Programming or coding is not required, a willingness to learn is all that is required\nAt the end of the course, you should be able to create an AR app in under 10min or even 5min!\nCreate your own AR App business by learning how to build practical Augmented Reality Apps including AR Business cards (with multiple video players), Drag/Drop AR object Apps (E.g. Furniture), AR books, AR animated cut scenes, AR greeting cards, User Defined Target AR Apps (Markeless), AR jump scare horror Apps and many more!\nLearn how to use the latest stable versions of Unity (2017.2 – with integrated Vuforia Editor) and Vuforia (6.5) for building out of this world AR Apps.\nHigh quality presentation with over 3 hours of HD video tutorials on key aspects related to Augmented Reality Applications.\n\n\nRequirements\nA Windows or Mac PC/Laptop with      internet (A MAC is required for building iPhone/iOS Apps)\nAndroid Smartphone or an iPhone      (An iPhone is required for testing iPhone/iOS Apps)\nA willingness to become absolutely      awesome\n\n\nTarget Audience\n\nIndividuals who are absolute      beginners (Non-Coders) who prefer to spend time creating rather than      writing code!\nIndividuals who are interested in      starting an AR App building business by learning how to make practical and      popular AR apps.\nProfessionals looking to expand      their portfolio by offering services for production of Amazing AR Apps.\nIndividuals who are keen to learn      how to use the latest versions of Unity 3D (2017.2) and Vuforia (6.5) in      order to create amazing Augmented Reality experiences with Visual/Sound FX      and animated cut scenes.\n\n\nDescription\n\nIf you are a busy individual who wants to learn how to rapidly create next-Gen Augmented Reality Apps in the shortest period of time without having to learn coding, this is the perfect course for you!\n\n\nOn Completion, you will go from being a Total Beginner To A Professional who can make money by building Augmented Reality Apps for clients.\n\n\n\nThis course will provide you with the following comprehensive training:\n\n\n\nHow to create commercially viable Apps which could be used to set up your own AR App building business.\nHow to use the latest iteration of Unity (2017.2) to create several Next-Gen Augmented Reality Apps.\nHow to use Vuforia’s AR capabilities to your advantage and push App creation to its creative limits.\nHow to add touch gestures to you’re the AR objects in your Apps; this will open up a myriad of creative possibilities as far as App creation is concerned.\nHow to add various Visual Effects such as explosions, fog, snow, ocean water, fire, gunfire and more.\nHow to add 3D text, sound effects and music to your AR Apps.\nHow to build a story narrative by creating animated AR cut scenes.\nHow to create “user defined target” Apps which does not require a pre-defined marker.\nList of Augmented Reality (AR) Apps You Will Create\n1. Drag and Drop AR App\nWith this AR App, you can manipulate AR objects by using touch gestures; we will create an AR App which could be used to move, scale and rotate 3D furniture in your room.\n\n2. Augmented Reality Business Card\nAn interactive and dynamic AR business card with multiple video players (with pause button) which may be used to showcase your company’s capabilities.\n\n\n3. User Defined Target - Markerless Augmented Reality App\nThis App does not require a pre-defined marker to generate an AR object and the user is free to choose any target close to him/her. This provides a lot of flexibility and significantly improves the “user-friendliness” of your AR Apps.\n\n\n4. Augmented Reality Book\nLearn how to create AR books which come alive with animated characters, animals and objects. AR books are becoming extremely popular and it is great time to learn how to build them.\n\n\n5. Augmented Reality Minimalist Christmas Card\nWe will create a stylish and cool Minimalist AR Christmas card with animated snow, 3D text and music. After creating this AR card, you will be able to create virtually any type of AR greeting cards.\n\n\n6. Augmented Reality Animated Cut Scene\nYou will learn how to create a full-fledged cut scene with “animated characters”. This will enable you to create computer generated (CG) animations for computer games, advertising and films.\n\n\n7. Augmented Reality Horror App\nThis App will create an amazing jump scare by animating a Nightbeast which attacks the user’s “point of View” camera. Although, this is just for fun, this App gives rise to various filmic and animation possibilities for a budding filmmaker.\n\n\n8. Multiple AR Objects\nYou will learn to create AR Apps with multiple objects being tracked at the same time. This creates a multitude of possibilities with respect to generating different kinds of commercial Apps.\n\n\n9. Animated Jet – With Visual/Sound FX And Visible Terrain\nI will show how to create AR Apps with multiple objects being tracked at the same time. This creates a multitude of possibilities with respect to generating different kinds of commercial Apps.\n\n\n10. Animated Asteroid\nWe will create an animated asteroid that will hurtle towards the AR user’s point of view camera.\n\n\n11. Ship floating on water\nWe will take advantage of various Particle Systems to create a realistic water effect and create an AR App comprised of a ship floating on an ocean.\n\n\n12. 10 min Challenge - Animated Iguana\nWe will conclude the course with a challenge – try to create an AR App in under 10 minutes. I’m confident that you will be able to create one in under 5 minutes!",
      "target_audience": [
        "• Individuals who are absolute beginners (Non-Coders) who prefer to spend time creating rather than writing code!",
        "• Individuals who are interested in starting an AR App building business by learning how to make practical and popular AR apps.",
        "• Professionals looking to expand their portfolio by offering services for production of Amazing AR Apps.",
        "• Individuals who are keen to learn how to use the latest versions of Unity 3D (2017.2) and Vuforia (6.5) in order to create amazing Augmented Reality experiences with Visual/Sound FX and animated cut scenes."
      ]
    },
    {
      "title": "Product Management for Maximum Impact",
      "url": "https://www.udemy.com/course/product-strategy-growth/",
      "bio": "Product Management Videos, Insights, Success Metrics",
      "objectives": [
        "What Products are, how you manage product, and what defines and makes product successful",
        "Product Manager role (PM), key skills and responsibilities of Product Manager",
        "What distinguishes good Product Manager from bad Product Manager",
        "Who Product Manager is, what product manager is ultimately responsible for",
        "What makes an effective Product Manager",
        "New Product Success as a multiple of Market, Team, Product, and Luck",
        "Growth Product Success as Number of Customers, Growth Rate, Virality and K factor",
        "Mature Product Success as Customer Lifetime Value or LTV: Revenue, Gross Margin, Retention, Customer Acquisition Cost",
        "Key concepts around Product Management and Strategy",
        "Qualitative and quantitative aspects of Product Management",
        "Product lifecycle stages: New Product, Growth Product, Mature Product"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Part 1 - Core Product Strategy Concepts": [
          "Part 1 - Core Product Strategy Concepts"
        ],
        "Part 2 - Product Strategy Definition of Success": [
          "Part 2 - Product Strategy Definition of Success"
        ],
        "Part 3 - Product Strategy and Product Lifecycle": [
          "Part 3 - Product Strategy"
        ],
        "Part 4 New Product Strategy": [
          "Part 4-1 New Product Strategy",
          "Part 4-2 Go To Market Strategy"
        ],
        "Part 5 - Growth Product Strategy": [
          "Part 5 - Growth Product Strategy"
        ],
        "Part 6 - Mature Product Strategy": [
          "Part 6 - Mature Product Strategy"
        ],
        "Part 7 - Class Project": [
          "Part 7 - Class Project"
        ],
        "Part 9 - Go To Market Strategy": [
          "Part 9 - Go To Market Strategy"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "This class is based on instructor's real experience in top silicon valley companies such as Uber and Tesla",
        "No pre-requisites, familiarity with basic Product Management and Business concepts is helpful"
      ],
      "description": "Your Instructor:\nThis class is based on real product management experience with startups, small and large silicon valley companies\n\nIn this class we will focus on what Products are, how you manage product, and what defines and makes product successful. We will discuss Product Manager role (PM), key skills and responsibilities of PM, and what distinguishes good PM from bad PM.\nWho Product Manager is, what product manager is ultimately responsible for (setting the backlog of what is to be built) and how the go about doing that (knowledge of customer, market, data, industry, technology, etc.)\nWhat makes an effective PM (passion for product, strategic thinking, creativity, execution, leadership, cross-functional savvy, etc.).\nThen we will take a deeper look into how Strategy is set for New Products, Growth Products, and Mature Products, and how product lifecycle affects priorities.\nFor each product lifecycle stage will define key success formula which is essential to measuring right things and building Product Strategy that drives success. Formulas we will talk about are\nNew Product Success as a multiple of Market, Team, Product, and Luck,\nGrowth Product Success as Number of Customers, Growth Rate, Virality and K factor,\nMature Product Success as Customer Lifetime Value or LTV: Revenue, Gross Margin, Retention, Customer Acquisition Cost\nCourse Target Audience: Students, curious about what Product Management role is about and how different products are managed. They have a basic understanding of the business world and want to be successful product strategists. They want to know how they can apply the tenets of product strategy to their own business or product, and that's exactly what we are covering in this class.\nCourse Goals\nExplain key concepts around Product Management and Strategy\nExplain qualitative and quantitative aspects of Product Management and critical importance of both\nExplain product lifecycle stages: New Product, Growth Product, Mature Product and define success for each\nWhat class is NOT about\nHow to decide if Product Manager job is good for me\nHow to get a Product Manager job\nHow to acquire key skills to become a successful product manager",
      "target_audience": [
        "Students, curious about what Product Management role is about",
        "Product managers and aspiring product managers. Leaders in charge of automation efforts",
        "Anyone looking to get a job in Product Management",
        "Anyone wanting to transition into Product Management",
        "Product Managers who want to advance their skillset",
        "Entrepreneurs looking to master the product development process"
      ]
    },
    {
      "title": "Flutter 2.2 & Firebase, build a complete app from scratch",
      "url": "https://www.udemy.com/course/flutter-22-firebase-build-a-complete-app-from-scratch/",
      "bio": "Flutter 2.2 work OS app for companies using Flutter with Firebase (Setstate state management)",
      "objectives": [
        "This Flutter course a complete guide that helps in learning and building a fully functioning Flutter application with Firebase.",
        "Teaching how to write Clean-code and avoid Boilerplate code",
        "This course you how to make new designs and styles for your App",
        "Introduce new widgets and how to use them correctly",
        "Streams and FutureBuilder usage",
        "Firebase Firestore and Authentication"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Best price for the course",
          "What is Flutter? And what is the Firebase?",
          "App overview",
          "Udemy courses by me, and suggestions for you",
          "My Youtube channel",
          "MY SOCIAL ACCOUNTS TO REACH ME"
        ],
        "Set up the app": [
          "Important Note on Course Access and Feedback",
          "lock device orientation",
          "Project on Github",
          "Create a new project and set up our up theme"
        ],
        "Implement the app UI": [
          "Implement the animated background in the login screen",
          "Finish the login screen design",
          "Implement the Signup screen",
          "Allow the user to navigate between Text Field using keyboard button (FocusNode)",
          "Implement the forget password screen",
          "Implement the main screen design",
          "Change the drawer Icon color and Icon Data",
          "Implement the delete task dialog",
          "Implement the filter dialog design in the main screen",
          "Implement the drawer header, add a constant class and explain what static means",
          "Add the drawer body",
          "Implement the sign out dialog design",
          "Implement the add task screen design",
          "Add the drawer in the add task screen",
          "Implement the task category dialog in the add task screen",
          "Implement the choose date dialog",
          "Fix a null error if no date is picked",
          "Implement the all registered workers screen",
          "Create the user profile screen UI",
          "Change the sign up screen design and add more widgets to it",
          "Implement the image picker dialog",
          "Implement the image picker functions",
          "Implement the image cropper function",
          "Start implementing the task details screen",
          "Animated switcher to add a comment",
          "Implement the comment widget design",
          "Add dynamic border color for the commenter profile image",
          "Send message via whatsapp",
          "Send an email from the app",
          "Open contact dialer app to allow the user to reach other workers numbers"
        ],
        "Firebase": [
          "What is Firebase?",
          "Connect our app to Firebase",
          "Get started with Firebase Auth",
          "Initialize the Firebase app to fix the Firebase initialization error",
          "Allow the users to Signup using Email and Password",
          "Errors handling",
          "Allow the users to login",
          "Error Handling from one dart class only",
          "Show different screens wether the user is signed in or not",
          "Implement the sign out method and code improvement",
          "What is Firebase Firestore",
          "Save extra user data on the cloud Firestore",
          "Upload user image to the Firebase storage and save the link in the Firestore",
          "Fetch the user data and display it in the profile screen",
          "Show the correct data for each user in the profiel screen",
          "Start fetching all the workers from the Firebase Firestore",
          "Display the correct data for each worker",
          "Check if this is the same logged in user in the profile screen",
          "Start with uploading task to the Firestore database",
          "Generate a dynamic unique ID for each task",
          "Add a spinner and show a toast",
          "Handle empty task category and empty deadline date",
          "Clear the form",
          "Fetch the tasks from the Firestore",
          "Allow only the task uploader to delete the task",
          "Start fetching the task details",
          "Allow the uploader to change task state if done or not done and other improv",
          "Implement the Post a comment method ( write its function )",
          "Start fetching the comments from the Firestore",
          "Display the comments on the screen",
          "Allow the users to visit commenters profile"
        ],
        "Extra contents": [
          "Bonus contents",
          "Upon finishing the course"
        ]
      },
      "requirements": [
        "No prior knowledge is required"
      ],
      "description": "Course prerequisites:\nBasic knowledge in programming to get started\nBasic knowledge in Flutter\nConcepts are explained clearly. You will always learn what you're building and why, and then how to do it.\nHow this course can be of help:\nGaining more knowledge in Flutter and firebase\nLearn how to build fully functional apps and publish it to the Playstore\nWhat's in the course:\nComplex UI is done simply\nState management (SETSTATE)\nFirebase\nClean-code and avoid Boilerplate code\nStyles for UI\nState Management: setState, lifting state up via callbacks, global access, scoped access with Provider and ChangeNotifier\nNavigation\nDart\nForms, input handling, and validation\nManaging and updating packages\nDatabases and Cloud Firestore\nListViews and multiple UI states\nFirebase Authentication\nFirebase Firestore\nFirebase Storage\nDart Programming Language - Fundamentals and intermediate topics\nHow to understand Flutter Mobile Development by building apps incrementally.\nHow to design, build, debug Flutter Android and iOS Apps\nHow to get Flutter apps to communicate with a real-time database - Firestore\nHow to build robust apps with Flutter\nFlutter AppBar\nFlutter Material Design\nFlutter Row and Column\nFlutter ListView Builder\nCourse structure:\napproximately 10 hours of content and updated regally\nRequirements:\nWindows application development\nMac application development\nAccess to a computer with an internet connection.\nand you are ready for the journey\nLove learning about applying cutting-edge algorithms to practical cases!\nWhat Should I Expect After this Course?:\nThe ability to build any application using Flutter and Firebase. You will be an expert.\nNew information regarding Flutter\nNote that the course builds on windows, so I didn't have a chance to cover the IOS configurations! But feel free to ask anything about it. I will be there to help.",
      "target_audience": [
        "Flutter and Dart learning cravers",
        "For people who want to make a complete app in Flutter",
        "To all people who are interest in Flutter",
        "For the companies who wants to manage their tasks"
      ]
    },
    {
      "title": "Android & Firebase ML Kit in Java / Kotlin",
      "url": "https://www.udemy.com/course/firebase-ml-kit-for-android-developers/",
      "bio": "Smart Android app development",
      "objectives": [
        "Learn how to make your Android Applications smart",
        "Use built in Machine Learning and computer vision models in Android Applications using Android studio",
        "Use AutoML to train model on your own dataset and develop Android Application",
        "Build Android Application to recognize different types of precious stones",
        "Develop Android Application to recognize text in images and documents",
        "Detect faces of people ,facial landmarks and facial expression",
        "Develop Android Application to scan bar codes and QR codes",
        "Develop Android Application to recognize and label images",
        "Practical application of Machine Learning",
        "Apply Machine Learning without background knowledge of ML",
        "Android Application to translate between 59 languages"
      ],
      "course_content": {
        "Introduction": [
          "Firebase ML Kit for Android course introduction"
        ],
        "Java: Choosing or Capturing Images in Android": [
          "Creating a new Android Studio Project and build GUI of Application",
          "Choosing images from Gallery in Android",
          "One more Step",
          "Capturing Images using Camera in Android",
          "Converting Images into Bitmap in Android",
          "Image Picker in Android Overview"
        ],
        "Kotlin: Choosing or Capturing Images in Android": [
          "Creating a new Android Studio Project and build GUI of Application",
          "Choosing images from Gallery in Android",
          "Handling Permissions in Android",
          "Capturing Images using Camera in Android",
          "Converting Images into Bitmap in Android",
          "Image Picker in Android Overview"
        ],
        "Java: Image Labeling in Android": [
          "Setting Up Image Labeling With Images Project",
          "GUI of Image Labeling With Images Android Application",
          "Documentation of Image Labeling",
          "Adding Library in Android and Preparing Images for Image Labeling",
          "Initializing Image Labeler and Performing Image Labeling",
          "Testing Image Labeling With Images Application",
          "Formatting Output and Setting Confidence threshold",
          "Image Labeling With Images Overview"
        ],
        "Kotlin: Image Labeling in Android": [
          "Setting Up Image Labeling With Images Project",
          "GUI of Image Labeling With Images Android Application",
          "Documentation of Image Labeling",
          "Adding Library in Android and Preparing Images for Image Labeling",
          "Initializing Image Labeler and Performing Image Labeling",
          "Testing Image Labeling With Images Application",
          "Formatting Output and Setting Confidence threshold",
          "Image Labeling With Images Overview"
        ],
        "Recognize Text": [
          "Java Creating Android and Firebase Project",
          "Java Creating Android Application GUI",
          "Java Creating and Using Text Recognizer feature of Firebase ML Kit",
          "Java Running Text Recognition Android Application",
          "Kotlin Text Recognition Android Application using Firebase ML Kit",
          "Google Services file missing error"
        ],
        "Language Identification and Assignment": [
          "Message for Kotlin Developer's",
          "Android Firebase ML Kit: Creating Language Identifier",
          "Android Firebase ML Kit: Testing Language Identification Application",
          "Firebase ML Kit Assignment"
        ],
        "Translation Section": [
          "Setting up Android Text Translation Android Application",
          "Writing Firebase ML kit Text Translationcode",
          "Testing Android Translation Android Application using Firebase ML Kit"
        ],
        "Scan Bar-codes": [
          "Building Barcode Scanner Android Application using Firebase ML Kit",
          "Running Barcode Scanning Android Application"
        ],
        "Face and Landmark detection": [
          "Setting up project Face Detection Android Project",
          "Creating and Using Face Detector feature of Firebase ML Kit Android",
          "Java Detect Faces And Drawing Rectangles Android Firebase ML Kit",
          "Java Landmark detection using Android Firebase ML Kit",
          "Java Smile Detection using Android Firebase ML Kit",
          "Kotlin Setting up Android Face detection project",
          "Kotlin Creating and Using Face Detector using Android Firebase ML Kit",
          "Kotlin Detect Faces And Drawing Rectangles using Android Firebase ML Kit",
          "Kotlin Landmark detection using Android Firebase ML Kit",
          "Kotlin Smile detection using Android Firebase ML Kit"
        ]
      },
      "requirements": [
        "Very basic Knowledge of Android Development with java"
      ],
      "description": "Requirements\nYou should have some basic knowledge of Android App Development using Java or Kotlin\nFirebase ML Kit for Android Developer's\nMake your Android Applications smart, use ML trained model or train your own ML models explore the power of AI and Machine Learning.\nThis course was recorded using Android Studio 3.6.1 (which is a great introduction to the development environment!) For a smooth experience I'd recommend you use the same, but students can still use the latest Android Studio version available if they prefer!\n\n\nWish you’d thought of Object Recognition/Face Detection/Text Recognition?\nMe too.\nBut until I work out how to build a time machine.\nHere’s the next best thing.\nFirebase ML Kit for Android Developer's\nCurriculum:\nIn this course, we will explore the features of Firebase ML Kit for Android. We will start by learning about Firebase ML Kit and Features it provides. Then we will see how to integrate ML Kit inside your Android Application just using Android studio. After that, we will explore the features of ML Kit and develop Android Applications like\nText Recognition Android Application\nAndroid Application to Translate between Languages\nLanguage Detection Application\nFace Detection Application\nBarcode Scanner Android Application\nObject Detection Android App\nLandmark Recognition Application\nStones Recognition Application\nThen we will learn about Auto ML Vision edge feature of Firebase ML Kit using which we can train the Machine Learning model on our own dataset and build Android Application for that model. We will train model to recognize different types of stones and build an Android App for that model.\nAt the end of this course, we will combine different features of Firebase ML kit to build an Android Application to categorize images of mobile gallery.\n\n\nWhy choose me?\nMy name’s Hamza Asif, Udemy’s coding instructor.\nIt's not my first course on mobile Machine Leaning. I have a course named \"Complete Tensorflow Lite course for Android App Development\" on udemy.\nSo which course you should take?\nIt's recommended taking \"Machine Learning for Android Developer using Tensorflow lite\" first so that you can understand the working of Machine Learning.\nIf you want to learn a practical implementation and use of Machine Learning in Android using Firebase ML Kit............................................................................................................................................................................................................................................................................................................................................................. then that course is for you.\nThis is my 2nd course on Android Machine Learning and I am the only udemy instructor with more than one course on that topic. My goal is to promote the use of Machine Learning in Android and I am excited to share my knowledge with you.\n\n\nAndroid Version we will use?\nAndroid Pie, Android Q\nAll the Android Application we will develop in this course we will use Android Pie and Q to test them. So we are\\\n\n\nSo join my Firebase ML Kit for Android Developer's course today and here’s what you’ll get\nLearn practical implementation of Text Recognition, Language Identification, Face and expression detection, Barcode scanning, Landmark Recognition, Text Translation, and Object detection and recognition inside Android App Development using Android Studio and ML kit.\n\n\nLearn how to use Auto ML to train the model on your own dataset and use those models in Android Application\n\n\nLearn about both on-device and Cloud Machine Learning\n\n\nWhy take this course?\nMachine Learning use is at its peak so is the mobile tech but people having skills to implement both are rare. This course will enable you to empower your Android Applications with the practical implementation of Machine Learning, Computer Vision, and AI.\nHaving a little knowledge of Android App Development, this course will differentiate you from other developers because you will have something that is currently in demand.\nThis course will make provide you a smooth path to become a pro in using Machine Learning in your Applications.\nThis course will not just enable you to apply machine learning in limited scenarios but It will enable you to\nPrepare or download your own dataset\nTrain machine learning model\nDevelop Android Application\nSo if you have very basic knowledge of Android App Development and want to apply Machine Learning in Android Applications without knowing background knowledge of  Machine Learning this course is or you.\n\n\nIs this course for you?\nThis is a one-size-fits-all course for beginners to experts. So, this course is for you if you are:\nA total beginner, with a curious mind and a drive to make and create awesome stuff using Android App development and ML\nA fledgling developer, want to add Machine Learning implementation in his skillset\nA pro app developer-heavyweight, with an itch to build your dream app\nAn entrepreneur with big ideas\nBenefits to you\nRisk-free! 30-day money-back guarantee\nFreedom to work from anywhere (beach, coffee shop, airport – anywhere with Wi-Fi)\nPotential to work with forward-thinking companies (from cool start-ups to pioneering tech firms)\nRocket-fuelled job opportunities and powered-up career prospects\nA sense of accomplishment as you build amazing things\nMake any Android app you like (your imagination is your only limit)\nSubmit your apps to Google Play and potentially start selling within hours\nUse ML Kit just using Android Studio\n\n\n\n\nThanks for getting this far. I appreciate your time! I also hope you’re as excited to get started as I am to share the latest use of ML in Android development with you.\n\n\nAll that remains to be said, is this…\n\n\nDon’t wait another moment. The world is moving fast. And I know you’ve got ideas worth sharing.\n\n\nCoding really can help you achieve your dreams.\n\n\nSo click the button to sign up today – completely risk-free.\n\n\nAnd join me on this trailblazing adventure, today.\n\n\nWho this course is for:\nAnyone who wants to learn the practical implementation of Machine Learning and Computer Vision in their Android Applications.\nAnyone who wants to make their Android App Development smart.\nAnyone who wants to train and deploy Machine Learning models on his own data without background knowledge of Machine Learning.",
      "target_audience": [
        "Beginner Android Developers want to make their applications smart",
        "Android Developers want to use Machine Learning in their Android Applications",
        "Developers interested in practical implementation of Machine Learning and computer vision"
      ]
    },
    {
      "title": "Build Kotlin Multiplatform Mobile Apps for iOS and Android",
      "url": "https://www.udemy.com/course/build-kotlin-multiplatform-mobile-apps-for-ios-and-android/",
      "bio": "One Codebase, Two Platforms: Beginner Guide to Next-Gen Kotlin Multiplatform Technology with Native Performance!",
      "objectives": [
        "Kotlin Multi-platform technology",
        "Build Android and iOS app with Shared Kotlin logic",
        "Native App Performance",
        "The use of Kotlin Multi-platform Libraries",
        "Build app with Jetpack Compose and SwiftUI",
        "Actual/Expect mechanism explained",
        "Targets/Source sets explained",
        "Shared Ktor Networking library",
        "Comparison between Kotlin/Swift",
        "SKIE by Touchlab"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Requirements",
          "What is Kotlin Multiplatform?",
          "Understanding the Multiplatform Project Structure",
          "Target vs Source Sets",
          "Expect/Actual Mechanism explained",
          "Choosing an IDE",
          "Preparing the Environment",
          "Create and Explore a KMP for Mobile Project Template",
          "Project Source Code"
        ],
        "Shared Module": [
          "Add Dependencies",
          "Create DTO's",
          "Create RequestState wrapper",
          "Implement ProductsApi"
        ],
        "Android App": [
          "Create a ProductCard",
          "Fetch and Display the Data (Android)"
        ],
        "iOS App": [
          "Create a ProductView",
          "Fetch and Display the Data (iOS)"
        ]
      },
      "requirements": [
        "Kotlin programming language basics",
        "Jetpack Compose basics",
        "Macbook (Optional, not required)",
        "Swift programming langauage (Optional, not required)",
        "Internet Connection"
      ],
      "description": "Welcome to the future of mobile development. This is a short and concise course that will quickly get you into the world of iOS and Android development with Kotlin Multi-platform technology. Kotlin Multi-platform technology has just became stable. Building native mobile applications for both iOS and Android, with a shared logic written in Kotlin, is just one step away from you.\n\n\nIf you are an experienced Kotlin or Android developer and want to explore cross platform development, this is the right course for you. This course is adapted for beginners, which is why you will be able to follow along easily .\n\n\nYou will learn how to write shared code for your mobile apps to maximize efficiency and code reuse. You will explore the fundamentals and principles of multi-platform development, and gain practical insights into creating a single code-base for your mobile projects .\n\n\nAlong the way I'm going to explain a Swift syntax, and you will see how both Swift and Kotlin are very similar to each other. This is a short and concise course adapted to get you introduced with the topic quickly and efficiently without wasting a minute of your time .\n\n\nIt's filled with lots of important information that you are going to need, to understand how this technology works behind the scenes. As with all other courses of mine, this one will also include one project that we are going to build while learning this amazing technology.\n\n\nSo what are you waiting for?\nLet's go!",
      "target_audience": [
        "Mobile developers",
        "Android developers",
        "iOS developers",
        "Anyone who want to dive into the KMP technology",
        "Students",
        "Beginners"
      ]
    },
    {
      "title": "The Ultimate iOS 10, Xcode 8 Developer course. Build 30 apps",
      "url": "https://www.udemy.com/course/ios10developer/",
      "bio": "Learn to become a virtuosic developer with the most comprehensive iOS development course ever produced.",
      "objectives": [
        "Learn how to Code in Swift 3.0",
        "Design apps from scratch in Xcode, Illustrator and Photoshop",
        "Build apps quickly from start to finish",
        "Become a virtuoso programmer"
      ],
      "course_content": {
        "Introduction": [
          "Top 10 reasons why this course is awesome",
          "How to use this course",
          "How to download Xcode 8",
          "Multiple Intructors",
          "Updates"
        ],
        "Xcode for beginners": [
          "Xcode Crash course for beginners (Intermediates skip this tutorial)"
        ],
        "Deep Dive - Variables in Swift 3": [
          "Introduction to Variable Types + Booleans",
          "Integers",
          "Floats and Doubles",
          "Characters and Strings",
          "Optionals + Summary"
        ],
        "Deep Dive - If Statements in Swift 3": [
          "Basic If Statement",
          "Testing Multiple Conditions",
          "Else If Statement + Else Statement",
          "If Let Statements + Summary"
        ],
        "Deep Dive - Arrays in Swift 3": [
          "Boolean and Number Arrays",
          "Integer, Float, and Double Arrays + Character and String Arrays",
          "Array Elements",
          "Adding to Arrays",
          "Array Functions + Summary"
        ],
        "Deep Dive - For In Loops in Swift 3": [
          "Introduction + Increase Count by One",
          "Using Index Values",
          "Combining Arrays and For In Loops",
          "Constructing Arrays Using For In Loops",
          "Combining For In Loops and If Statements",
          "Summary"
        ],
        "05.) Deep Dive - Functions in Swift 3": [
          "Introduction + Return and No Return",
          "Functions with Parameters",
          "Functions with Return Types",
          "Functions with Multiple Return Values",
          "Functions with If Statements",
          "Functions with For In Loops",
          "Summary"
        ],
        "06.) Deep Dive - While Loops and Switch Statements in Swift 3": [
          "Introduction + Introduction to Switch Statements",
          "Example of a Switch Statement",
          "Introduction to While Loops",
          "Example of a While Loop",
          "Continue, Break, and Return Statements",
          "Summary"
        ],
        "07.) Deep Dive - Enumerations, Classes, and Structures": [
          "Introduction + Introduction to Enumerations",
          "Associated and Raw Values",
          "Introduction to Classes",
          "Introduction to Structures",
          "Structures and Classes Working Together + Summary"
        ],
        "08.) Deep Dive - Labels in Xcode": [
          "Introduction + Adding a Label to the Layout",
          "Connecting to the Code",
          "Changing Label Text",
          "Functions Used on Label Text + Changing Text Alignment",
          "Changing Text Color + Correcting Scaling Issues",
          "Summary"
        ]
      },
      "requirements": [
        "Must have a Mac Computer and Xcode 8",
        "PC development is not recommended or supported.",
        "Adobe Photoshop And Illustrator"
      ],
      "description": "This course is the result of a very successful KickStarter!\nDo you want to make apps? Do you want to learn to code? This course is for you! This course is the longest and most in depth iOS course ever created! Learn how to design and code practical apps that will springboard your career.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 150k students worldwide\nWho is this class for?\nPeople who want to improve their technical skills\nComplete beginners\nPeople who want to make money. I show people the tools on how to make money through various methods of passive income\nPeople who want to get ahead of the pack by learning online.\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "If you are an absolute beginner and want to learn to code",
        "If you are an absolute beginner and want to become an iOS developer"
      ]
    },
    {
      "title": "Flutter 3.0 Rest API crash course build a News app from zero",
      "url": "https://www.udemy.com/course/flutter-30rest-api-crash-course-build-a-news-app-from-zero/",
      "bio": "Flutter 3.0 & Rest API build a fully functional News app from scratch using 2 different Rest APIs",
      "objectives": [
        "This Flutter course is a complete guide that helps learn and build a fully functioning Flutter application with Rest Api.",
        "Rest API integration",
        "CRUD operations",
        "Teaching how to write Clean-code and avoid Boilerplate code",
        "A fully functional app that is ready for use and deployment",
        "Firebase real-time database Rest API"
      ],
      "course_content": {},
      "requirements": [
        "A good Knowledge in Flutter and Dart is strongly recommended"
      ],
      "description": "This course cover how to make a Fully Functional app for Android in portrait mode. Moreover it also cover how to integrate the Rest API in a Flutter application.\n\n\nThe used API's are:\nNews Rest API\nFirebase real-time database Rest API\nCourse prerequisites:\nBasic knowledge in programming to get started\nBasic knowledge of Flutter and a good knowledge is recommended\n\n\nHow this course can be of help:\nGaining more knowledge in Flutter and Rest API integration\nHttp requests\nJson serialization\nSearch using query, and get the results directly from the API\nSorting by\nPagination\nAdd to Bookmarks\nError Handling\nLearn how to make a News app with clear design\nA fully functional app that is ready for use and deployment\nWhat's in the course:\nComplex UI has done simply\nProvider State management\nFirebase Real-time database Rest API\nClean code and avoid Boilerplate code\nState Management: setState, lifting state up via callbacks, global access, scoped access with Provider and ChangeNotifier\nNavigation & Custom navigation\nAnimated Navigation\nAnimation\nManaging and updating packages\nListViews and multiple UI states\nDart Programming Language - Fundamentals and intermediate&expert topics\nHow to understand Flutter Mobile Development by building apps incrementally.\nHow to design, build, debug Flutter apps\nHow to get Flutter apps to communicate with a real-time database\nHow to build robust apps with Flutter\nFlutter AppBar\nFlutter Material Design\nFlutter Row and Column\nFlutter ListView Builder\nPayment gateway\nCourse structure:\napproximately 7 hours of content and updated regally\nRequirements:\nWindows application development OR Mac application development\nAccess to a computer with an internet connection.\nand you are ready for the journey\nLove learning about applying cutting-edge algorithms to practical cases!\nWhat Should I Expect After this Course?:\nThe ability to build a fully functional apps\nNew information regarding Flutter And API integration\nNote that the course builds on windows, so I didn't have a chance to cover the IOS configurations! But feel free to ask anything about it. I will be there to help.",
      "target_audience": [
        "Flutter and Dart learning cravers",
        "Anyone who want to understand how to integrate Rest API in a Flutter app",
        "For people who want to make a complete app in Flutter"
      ]
    },
    {
      "title": "React Native : The beginner guide",
      "url": "https://www.udemy.com/course/react-native-the-beginner-guide/",
      "bio": "Build Android and IOS mobile apps ! ( incl. Notifications push , Hooks, Navigation, Camera, ES6, FlexBox, Animations...)",
      "objectives": [
        "Build native cross-platforms app for Android et IOS with the same code",
        "Learn all the React / React Native core concepts",
        "Push notifications",
        "Hooks / Contexts",
        "Routing and navigation",
        "Use the last Javascript version: ES6",
        "Style your app with JSS",
        "Make asynchronous requests to consume an API",
        "Discover expo to increase your development speed",
        "Learn how to use a debugger",
        "Flex-box system",
        "Use the AsyncStorage to persist data in your app",
        "Access the mobile images gallery",
        "Build cool animations"
      ],
      "course_content": {},
      "requirements": [
        "Experience with HTML / CSS / JS is required"
      ],
      "description": "In this new edition of React Native, learn how to quickly build ultra-modern , cross-platform mobile applications (working on both Android and IOS) !\n\n\nReact Native is like React's little brother. It is developed by Facebook, with a \"Learn once, write everywhere\" policy.\n\n\nReact Native will allow you to develop native mobile applications running on IOS and Android with the same code, a real revolution!\n\n\nThis technology is exploding and is in high demand in the job market.\n\n\nReact Native uses the React library which allows web developers to get started quickly.\nYou will discover that developing a mobile app with React Native is a lot like web development.\n\nWe are going to use Expo, the most used tool to create apps in 2 steps 3 moves.\n\nWith it, we will be able to code have live updates on a real smartphone on an emulator.\n\nAlso we will be able to share our app in a snap.\n\nGoodbye mobile development with endless compilation times!\n\nWe will start together from the beginning and discover ReactJS and ReactNative in this course, so don't worry if you don't know React. The course will be progressive and we will develop several apps together.\n\n\nSummary :\n\n- The basic concepts of React\n- Create a React Native application with Expo\n- Styling\n- The flexbox system\n- Navigate between pages and send parameters using react-navigation\n- Permissions\n- Geolocation\n- Push-notifications\n- Access the smartphone gallery\n- Create a notification server\n- Communicate with an API\n- Learn to use ES6 functions (map, find ...)\n- Animations\n\n\nSee you soon!\n\nCodiku.",
      "target_audience": [
        "Javascript developpers that want to learn how to make a cross-platform mobile app.",
        "React developpers that want to be able to also develop cross-platform mobile app."
      ]
    },
    {
      "title": "Microsoft Powerapps Essential Training 2021",
      "url": "https://www.udemy.com/course/learn-microsoft-powerapps-from-scratch/",
      "bio": "Create Business Apps Without Coding",
      "objectives": [
        "Getting Started with Powerapps",
        "Signing Up For Powerapps Trial",
        "Identify Different Plans For Powerapps",
        "Working With Connection In Powerapps",
        "Working With CDS",
        "Creating An App From Common Data Service(CDS)",
        "Establishing data connection between powerapps and excel",
        "Work with Versions",
        "Create An App From a SharePoint list",
        "Signing Up For Sharepoint",
        "Saving and Sharing Apps With Stakeholders"
      ],
      "course_content": {
        "Getting Started with Powerapps": [
          "Welcome",
          "What is data flow programming?",
          "Microsoft Powerapps as LOB",
          "What is Powerapps?",
          "Working with data in Powerapps",
          "Types of Powerapps",
          "Signing up for Powerapps trial",
          "Connection in Powerapps",
          "Creating hello world app in powerapps",
          "Working with Image control",
          "Using the exercise files"
        ],
        "Create an app from Common Data service (CDS)": [
          "Introduction to CDS",
          "Setting up environment in CDS",
          "Working with Entities",
          "Adding & Customizing fields",
          "Importing excel data to CDS",
          "Adding relationship between Entities",
          "Defining business rule in CDS",
          "Customizing a view",
          "Customizing the main form",
          "Creating a canvas app using CDS"
        ],
        "Creating an App from a SharePoint list:": [
          "Signing up for SharePoint",
          "Establish data connection b/w SharePoint and powerapps",
          "Create an app from SharePoint List",
          "Changing the browse Screen",
          "Changing a function formula",
          "Reshuffle a SharePoint list",
          "Changing the display mode",
          "Changing search fields",
          "Delete an action",
          "Saving and Publishing powerapp"
        ],
        "New Section: Create Restaurant Review App In Powerapps": [
          "Using the exercise files",
          "Formatting data tables in excel",
          "Connect Powerapps with One drive for business",
          "Creating an app from excel data source",
          "Working with detail screen",
          "Working with edit screen",
          "Connect additional data source in powerapps",
          "Adding a drop-down menu",
          "Connect Drop down to data source",
          "Arranging data cards in powerapps",
          "Work with Versions",
          "Saving and sharing powerapp"
        ]
      },
      "requirements": [
        "You have basic knowledge of Microsoft Excel"
      ],
      "description": "PowerApps is an initiative by Microsoft that allows developers and non-technical users to build mobile applications from selectable templates. Microsoft touts an intuitive visual design for PowerApps, with drag-and-drop functionality and a familiar look and feel taken from applications like PowerPoint.This course is specially designed to leverage your powerapps skills to a new level.\nInstructor Shaher Yar Hamid explores how to leverage PowerApps to turn an Excel workbook into a simple business app that can be used on a mobile device or in a browser. This course also includes how to create an app from CDS and Sharepoint and how to share an app and work with releases of apps. And last but not least is how to create an app from a Built-in template provided by powerapps.",
      "target_audience": [
        "Everyone who want to start career as a Powerapps developer."
      ]
    },
    {
      "title": "From Sketch Design to iOS App with Swift and Xcode",
      "url": "https://www.udemy.com/course/from-design-to-code/",
      "bio": "Master Creating Custom User Interfaces for Your Apps: Design a Cool iOS App and Build it From Start to Finish",
      "objectives": [
        "Build a cool app, starting with designing it in Sketch and then build it from start to finish with Swift and Xcode",
        "Customize UIKit components like CollectionViews",
        "Implement cool and custom transitions between ViewControllers",
        "Translate a UI design into a real app",
        "Understand and apply the basics of prototyping in Sketch",
        "Design user interfaces in Sketch"
      ],
      "course_content": {
        "Introduction": [
          "Welcome and Overview",
          "Using the Project Files"
        ],
        "Design and Sketch Basics": [
          "iOS Design Themes",
          "Get Sketch",
          "Get to Know the Sketch UI",
          "What Are Artboards?",
          "Use UIKit Symbols",
          "Layout Constraints in Sketch",
          "Work with Symbols",
          "Export your Artwork"
        ],
        "Idea, Mockups and Prototyping": [
          "We have an App Idea",
          "An App Design in the Making",
          "Prototyping in Sketch"
        ],
        "First Development Steps": [
          "Design Translation for Development",
          "Project Setup and Data Model"
        ],
        "The Overview Screen": [
          "First Setup in Interface Builder",
          "Customise the Navigation Bar",
          "Custom CollectionView Cells",
          "Load Category Data",
          "Display Categories in the CollectionView",
          "Preparations for Selecting Images",
          "Perform a Segue and Transfer Data"
        ],
        "Custom ViewController Transitions": [
          "Custom Transitions: The Theory",
          "Basic Transition Setup",
          "Get the Transition Context Ready",
          "Define the Animation",
          "Animation & Navigation Controller",
          "The Final Step: ImageViews for Animation",
          "Back to Overview: Reverse Animation"
        ],
        "Image Selection Screen & UIScrollView": [
          "Export Button Assets with Sketch",
          "Transition Back to the Overview",
          "Setup the Image Selection UI",
          "Apply Auto Layout Contstraints",
          "Custom Photo Views with a XIB File",
          "Load Images with Custom View",
          "Paging with UIScrollView",
          "Beautify the Custom Transition"
        ],
        "Final Steps and Sharing Cards": [
          "Project Update and Runtime Attributes",
          "Basic Segue Transition and Data Transfer",
          "Start Transition with Gesture Recognizer",
          "Share a Card: ActivityViewController"
        ],
        "Conclusion": [
          "Next Steps"
        ]
      },
      "requirements": [
        "Have a good understanding of the Swift programming language",
        "You should know your way around the Xcode IDE",
        "You should know the basics of Auto Layout"
      ],
      "description": "This course is going to guide you through the complete process of designing a cool iOS app and then also build it from start to finish.\nIf you want to create apps that stand out you need the ability to translate a great user interface design from its concept stage as wireframes, mockups or interactive prototypes into a fully functional app.\n\n\nAmong other things you will learn:\nThe fundamental iOS design principles\nBasics of designing and prototyping in Sketch\nHow to design an app and then create it from start to finish\nHow to customize UIKit components like buttons, collection views or the navigation bar\nHow to work with custom views and xib files\nHow to create awesome transition animations: implementing a custom and animated view controller transition from a collection view cell to a new view controller\nHow to create simple animations\n\n\nBecome a more skilled developer\nThis course is suitable for you if you have already made your first experiences in building apps using Xcode and Swift. You won’t have to be an expert developer or an experienced designer. You will however learn a lot of useful tricks and techniques that will also broaden your general knowledge around the processes of designing and developing iOS apps with the powerful tools Sketch, Xcode and the Swift programming language.\n\n\nOur Roadmap\nBefore writing our first line of code we are going to have a look at fundamental iOS design principles followed by a quick introduction into Sketch. Sketch is a powerful tool for designing and prototyping and after completing this course you will be able to design your own application with it. Before building a complete iOS app, we are going to make a solid development plan starting with an app idea, the design of several mockups followed by a the creation of a simple prototype. Not until then are we going to launch Xcode.\nIn the actual development part of this course you are going to setup the user interface in Interface Builder, work with a modern data model, customize different UIKit components, and even create an awesome custom animated transition between two view controllers. For more detailed information about the content of this course have a look at the curriculum and the free videos.\nYou get this course complete with all the necessary project files, so that you’ll be able to work alongside the author as you work through each concept. In addition you will receive a verifiable certificate of completion upon finishing the course.",
      "target_audience": [
        "iOS developers who want to learn how to translate a UI design into a real app",
        "iOS developers who want to learn how to customize their apps",
        "iOS developers who want to learn the basics about designing with Sketch",
        "iOS developers who want to learn more about design and iOS design principles",
        "iOS developers who want to learn how to create custom ViewController transitions"
      ]
    },
    {
      "title": "SwiftUI 2 - Build Netflix Clone - SwiftUI Best Practices",
      "url": "https://www.udemy.com/course/swiftui-netflix/",
      "bio": "Build a functional Netflix clone using the latest SwiftUI features",
      "objectives": [
        "Bind Your Data With Your UI",
        "Using new SwiftUI views for iOS 14",
        "Features and functionality of new Xcode 12 beta",
        "Quickly building reusable views",
        "Implementing MVVM with SwiftUI",
        "New Swift 5 syntax"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Creating an Xcode project for SwiftUI"
        ],
        "Building The 'Home' View": [
          "Setting Up HomeView",
          "Large Movie Preview (Part 1)",
          "Large Movie Preview (Part 2)",
          "Large Movie Preview (Part 3)",
          "Large Movie Preview (Part 4)",
          "HomeView Top Row of buttons",
          "Building MovieDetail View (Part 1)",
          "Building MovieDetail View (Part 2)",
          "Building MovieDetail View (Part 3)",
          "Building MovieDetail View (Part 4)",
          "Custom Tab Switcher",
          "\"More Like This\" Grid",
          "\"Trailers & More\" List",
          "EpisodeView (Part 1)",
          "EpisodeView (Part 2)",
          "EpisodeView (Part 3)",
          "Integrating MovieDetail View with our Home View",
          "Top Row Buttons (Part 1 - Setting State Variables)",
          "Top Row Buttons (Part 2 - Responding To State Variables)",
          "Top Row Buttons (Part 3 - Showing Overlay Menus)"
        ],
        "Building A TabView": [
          "Building A TabView"
        ],
        "Building The Search View": [
          "Custom Search Bar (Part 1)",
          "Custom Search Bar (Part 2)",
          "Search View (Part 1)",
          "Search View (Part 2 - Custom Bindings)",
          "Search View (Part 3 - Popular)",
          "Search View (Part 4 - Lazy Grid)"
        ],
        "Building The 'Coming Soon' View": [
          "Coming Soon (Part 1)",
          "Coming Soon (Part 2 - Tracking Scroll View)"
        ],
        "Building The 'Downloads' View": [
          "Downloads View"
        ],
        "Xcode 12 Update!": [
          "Fix #1: Stretched images"
        ],
        "Building The 'Preview Page Scroller' View": [
          "Building the \"Preview Image Cell\" view",
          "Building the \"Preview Row\" - Row of Preview Images",
          "Building the \"Pager\" - A scrollable container of views",
          "Trailer Player View - Video Player Wrapper",
          "Preview View - FullScreen video playing view",
          "PreviewList - Scrollable list of videos",
          "Advanced Drag Gesture 1 - Showing & Hiding a fullscreen overlay",
          "Advanced Drag Gesture 2 - Combining Multiple Gestures"
        ]
      },
      "requirements": [
        "Basic Swift programming understanding",
        "Basic iOS Development understanding"
      ],
      "description": "Building real apps is always the most efficient way to quickly learn new software engineering concepts. In this course you will learn how to use SwiftUI for more than just playing with small prototypes.\n\nYou will be building a functional Netflix clone that has most of the features of the real app. The focus of this course is learning & perfecting SwiftUI concepts. We will be building all of the visual UI components from the Netflix app. We won’t handle networking and we’ll be loading our data locally to show up within the UI. The app is built with MVVM and you'll be able to easily integrate your own networking layer.\nSome parts of the course require iOS 14 and Xcode 12.\nMany lessons can be followed using Xcode 11 and the important concepts learned will still apply to iOS 13. But some views & functionality are only available in iOS 14 using Xcode 12. For example, the ‘Grid’ view is only availably in iOS 14+. For iOS 13, you would have to build your own implementation using a combination of VStacks & HStack.\n\nWhat is SwiftUI 2?\nApple has provided this new framework as a way to quickly build beautiful user interfaces for any Apple device using just one set of easy-to-use tools. With the new declarative syntax of SwiftUI, it takes less code to keep your code and design perfectly in sync.\nSwiftUI works seamlessly with new Xcode design tools and significantly speeds up development by showing your code changes in real time!\nAfter the latest features for iOS 14 announced at WWDC 2020, SwiftUI 2 is even more robust! New views, new functionality, less bugs, and faster performance with Swift 5.\n\nNo excuses to skip out on SwiftUI now.\nStart learning today!\n\nThis course is in no way affiliated with Netflix, Inc. No source code of the real Netflix application is ever shown. This code is my interpretation of how I would build the app using SwiftUI.",
      "target_audience": [
        "Experienced developers ready to jump into SwiftUI 2",
        "Beginner developers learning how to build real applications with SwiftUI 2",
        "Developers looking to practice their design skills",
        "Developers who learn best by building real project"
      ]
    },
    {
      "title": "Running a Mobile App Dev Business: The Complete Guide",
      "url": "https://www.udemy.com/course/the-complete-guide-to-running-a-mobile-app-dev-business/",
      "bio": "Learn how to start and grow a mobile app development business. Get up & running in less than 1 week.",
      "objectives": [
        "Choose the most effective platform strategy for your business",
        "Understand the advantages and disadvantages of Native vs. Hybrid and iOS vs. Android apps",
        "Predict the timeline for starting your business and effectively allocate your time",
        "Decide between hiring in-house employees or contractors",
        "Choose whether or not to offer generalized or specialized mobile services",
        "Understand the different types of contractors and where to find them",
        "Recognize the core components of successful mobile development firms",
        "Discover cheap and professional ways of creating an online presence",
        "Select a name that's attractive and conveys your core messaging",
        "Master the biggest platforms for contracting: Freelancer and Upwork",
        "Use advanced search techniques to find specialty contractors",
        "Create and organize a professional and effective portfolio",
        "Use uncommon techniques to grow your portfolio faster",
        "Utilize 15 different strategies to find and attract potential clients",
        "Create different types of proposals (using Proposify and Nusii) and understand when to use each",
        "Use ballpark estimates to strategically to close clients sooner",
        "Manage clients effectively and use your time efficiently",
        "Keep client retention rates high and minimize churn",
        "Sniff out a client's budget before they tell you",
        "Use advanced best practices to maintain your businesses growth",
        "Figure out the optimal pricing configuration for your rates",
        "Learn how to handle client meetings in person",
        "Make long term decisions about which clients to retain and which to lose",
        "Integrate Asana into your workflow to increase transparency and efficiency"
      ],
      "course_content": {
        "Introduction (26 minutes)": [
          "Course Overview",
          "Join our community on Slack!",
          "7 reasons to start a mobile app development business",
          "The Sprintkick story",
          "Section 1 review material",
          "Review sheets & resources - all in one PDF"
        ],
        "The Essentials (56 minutes)": [
          "The startup timeline",
          "How does this work as a programmer / non programmer?",
          "iOS versus Android",
          "Native versus hybrid",
          "Build yourself or contract?",
          "In-house hiring or out of house?",
          "In country or out of country?",
          "Section 2 review material"
        ],
        "Setting up your presence (65 minutes)": [
          "Focus on 80/20 solutions for your online presence",
          "Looking at other studios",
          "Going further in-depth looking at studios",
          "Picking and configuring a template on Templatemonster",
          "Picking and configuring a template on ThemeForest",
          "Selecting a name",
          "Advanced: Upgrade your presence with custom design",
          "Section 3 review material"
        ],
        "Finding subcontractors (66 minutes)": [
          "What makes a good long-term partner?",
          "Intro to Elance",
          "Intro to Elance 2",
          "Intro to Upwork",
          "Intro to Upwork 2",
          "Intro to Freelancer",
          "Finding freelancers elsewhere",
          "Section 4 review material"
        ],
        "Building a portfolio (22 minutes)": [
          "How important are portfolios?",
          "Use these tricks to grow your portfolio faster",
          "Thoughts about portfolios",
          "Buying testimonials and case studies",
          "Section 5 review material"
        ],
        "Getting clients (71 minutes)": [
          "Strategy: Email scrape and blast",
          "Strategy: Offer adjacent services to those hiring in-house",
          "Strategy: Discount offers to groups",
          "Strategy: Use your affiliations",
          "Strategy: Tag your work",
          "Strategy: Sell things that require maintenance",
          "Strategy: This sucks let me fix it",
          "Strategy: The perpetual discount",
          "Strategy: Build something and give it away",
          "Strategy: Making tutorials strategy",
          "Section 6 review material"
        ],
        "Building proposals (79 minutes)": [
          "Our technique, in-depth costs of everything",
          "Types of proposals",
          "Components of proposals",
          "Tools for getting proposals done faster",
          "How much do you customize?",
          "Ballpark estimate versus exacto",
          "Strategy: Introduce ideas and see if they stick",
          "Section 7 review material"
        ],
        "Managing clients (64 minutes)": [
          "Keeping the right distance",
          "Confidence is key",
          "Just enough jargon",
          "Sniffing out their budget",
          "Speed is important",
          "Client budgets and the difference they make",
          "Do you deliver what's good or what the client likes?",
          "Don't talk about problems, say what's happening",
          "Is the client always right?",
          "Section 8 review material"
        ],
        "Best Practices (102 minutes)": [
          "Should you submit the app for your client?",
          "Under promise, over deliver",
          "What is agile? Should I use it?",
          "Price per project, price per hour",
          "Should you worry about competition?",
          "Hedging your launch date",
          "Beautiful design makes beautiful development",
          "Running without contracts",
          "Red flags for bad clients",
          "Rich clients versus successful clients",
          "Tell when you're getting fizzled",
          "Don't quote off the top of your head",
          "Meeting in person",
          "Is there a benefit to delivering early?",
          "Repeat customers are the best",
          "Avoid assumers",
          "Section 9 review material"
        ],
        "Internal management is crucial (44 minutes)": [
          "Intro to Asana",
          "Getting more in-depth with Asana",
          "Making Asana work for you",
          "Turning Asana inside out",
          "Section 10 review material"
        ]
      },
      "requirements": [
        "No pre-requisites necessary.",
        "Programming experience is helpful but not necessary."
      ],
      "description": "The mobile app development industry is growing at a blazing 43% per year and shows no signs of slowing down. This represents a huge opportunity for you - bigger than it's ever been before. Whether you want to code or not, you can capitalize on the over 16 billion dollars of money spent per year on mobile app development services. Part-time or full-time, you can build an awesome portfolio and an even better income taking on mobile app development projects.\nOver the last four years I've personally overseen the launch of over 100 apps from concept to deployment. I've grown my business from one small client to over 100. Today, we make apps for big name brands such as Walmart, GNC, Dick's Sporting Goods, and other Fortune 500 companies.\n\nI created this course to teach you how you can hit the ground running by starting a mobile app development business - no coding necessary. I see a lot of people floundering to start or grow their mobile businesses because they don't have the mentorship or the guidance to do it right. This course is my answer for all of you who have reached out for help. I've piled everything I know and everything that has made my business successful into this course. I'm going to show you how to jumpstart your business, grow it quickly, and manage your business like a professional - all from the comfort of your laptop.",
      "target_audience": [
        "Mobile app developers who want to learn how to expand their skills into a business.",
        "Non-technical entrepreneurs who want to start a business building mobile apps.",
        "Established freelancers who want to add development services to their offerings.",
        "Marketing, strategy, and SEO consultants who want to expand their business and offer more to their clients."
      ]
    },
    {
      "title": "Android App Development Course Build 5 Real Android App",
      "url": "https://www.udemy.com/course/android-app-development-course-build-5-real-android-app/",
      "bio": "In This Android Course You Will Build Job Portal Android App, Expense Manager Android App,Online Store Android App",
      "objectives": [
        "You Will Build A Real World Job Portal Android App Using Firebase Database",
        "You Will Build A Real World Expense Manager Android App Using Firebase Database",
        "You Will Build A Real World Online Store Android App Using Firebase Database",
        "You Will Learn Advanced Android Apps Development",
        "You Will Learn Android Material Design",
        "You Will have Real World Complete Project",
        "You Will Become Master On Firebase Database",
        "You'll have a portfolio of Android app to apply for Android developer jobs",
        "You Will Learn Android Basics To Advanced Features"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Android Bottom NavigationBar || Work With Android Bottom Navigation": [
          "Bottom Bar Part-1",
          "Bottom Bar Part-2",
          "Bottom Bar Part-3",
          "Bottom Bar Part-4",
          "Bottom Bar Part-5"
        ],
        "Android Basics Features || Learn Android Basics Features to Develop Android App": [
          "Button Design Part-1",
          "Add Button Setonclicklistener And Toast Part-2",
          "Android Textview",
          "Design Toolbar",
          "Android Cardview",
          "Android Scroll View",
          "Create Menu Layout Part-1",
          "Menu Action Part-2",
          "Material Layout Design",
          "Work with android input field"
        ],
        "Android Fragment || Work With Android Fragment and Build an App Using Fragment": [
          "Fragment Part-1",
          "Fragment Part-2"
        ],
        "Your Profile Android App || Build Profile Android App for your Android Project": [
          "Your Profile App Part-1",
          "Your Profile App Part-2",
          "Your Profile App Part-3",
          "Your Profile App Part-4"
        ],
        "Sum of Number App || Build a Sum of Number App and Learn Project Structure": [
          "Design Layout Part-1",
          "Count Two Number Part-2"
        ],
        "Android Dialog || Work With Android Alert Dialog and Custom Alert Dialog": [
          "Alert Dialog Part-1",
          "Alert Dialog Part-2",
          "Custom Alert Dialog Part-1",
          "Custom Alert Dialog Part-2",
          "Custom Alert Dialog Part-3"
        ],
        "Android Date Picker || Work With Android Date Picker Dialog": [
          "Date Picker Dialog Part-1",
          "Date Picker Dialog Part-2"
        ],
        "Expense Manager App || Build Expense Manager Android App Using Firebase Database": [
          "Create Project and Login Layout Design Part-1",
          "Login Layout Design Part-2",
          "Registration Layout Design Part-3",
          "Login and Registration Part-4",
          "Registration Functionality Part-5",
          "Login Function Part-6",
          "Design Bottombar Part-7",
          "Design nav header and appbar Part-8",
          "Drawer design Part-9",
          "Implement navigation drawer Part-10",
          "Solve navigation icon issue Part-11",
          "Connect with fragment Part-12",
          "Floating Action Button Design Part-13",
          "Floating Button animation Part-14",
          "Custom dialog Input field design Part-15",
          "Connect custom dialog Part-16",
          "Insert data to firebase Part-17",
          "Work With expense data Part-18",
          "Insert expense data to database Part-19",
          "Income fragment design Part-20",
          "Income and expense recycler data item design Part-21",
          "Retrieve income data Part-22",
          "Retrieve expense data Part-23",
          "Update Alert dialog Layout Design and connect Part-24",
          "Setup data to update dialog layout Part-25",
          "Update data to server Part-26",
          "Expense Update Data design-Part-27",
          "Expense update data set to edit text Part-28",
          "Update expense data to server Part-29",
          "Calculate total Income In Dashboard Part-30",
          "Calculate Expense data In Dashboard Part-31",
          "Solve Some Design Issue Part-32",
          "Design dashboard Recycler Part-33",
          "Connect recycler data to dashboard Part-34",
          "Dashboard income and expense item Layout design Part-35",
          "Retrieve income data to dashboard Part 36",
          "Retrieve expense data to dashboard Part-37",
          "Logout Part-38"
        ],
        "Job Portal App || Build Real World Job Portal Android App Using Firebase": [
          "Create Project And Login Design Part-1",
          "Design Login Part-2",
          "Login Design Part-3",
          "Design Registration Layout Part-4",
          "Connect With Firebase Part-5",
          "Work With Login Function Part-6",
          "Work With Registration Function Part-7",
          "Validation Check For Registration Field Part-8",
          "Complete Registration Function Part-9",
          "Validation Check For Login field Part-10",
          "Complete Login Function Part-11",
          "Design Home Activity Layout Part-12",
          "Complete Home Activity Part-13",
          "Design Custom Toolbar Part-14",
          "Implement Toolbar To Home Activity Part-15",
          "Floating Button Design Part-16",
          "Work With Floating Button Part-17",
          "Design Insert job Layout Part-18",
          "Work-With Insert job post Part-19",
          "Validation-Check For Input Field Part-20",
          "Work With Model Class-Part-21",
          "Insert Job Post To Database Part-22",
          "Insert Job Post Part-23",
          "Design Job Item Data Part-24",
          "Connect Recycler View Part-25",
          "Set Recycler viewholder Part-26",
          "Complete Retrieve job-Post Part-27",
          "Design All Job post Layout Part-28",
          "Design-All job-Post Recycler Part-29",
          "Connect recycler For All job post-Part-30",
          "Work With custom Viewholder Class-Part-31",
          "Retrieve All job Post-Part-32",
          "Design Job details Layout-Part-33",
          "Pass Data To Details Activity Part-34",
          "Set Data To Details Activity Part-35",
          "Solve Some Design Issue Part-36",
          "Logout Part-37"
        ]
      },
      "requirements": [
        "No Need Any previous experience, i will teach from Basics",
        "Android Studio",
        "A Windows PC, Mac or Linux Computer",
        "Basics Of Java Language"
      ],
      "description": "Welcome to this Android Apps Development Course. If you want to learn Android Apps development from scratch, then this is the course for you.\nIn This Course First You Will Learn Basics of Android. After that, you will learn how to develop a complete Project. This course is designed to create real World Android Apps.\nHere is Some List of Android App That You Are going to develop in this course:\nYou, Will, Build Real World Job Portal Android App.\nYou, Will, Build Real World Expense Manager Android App.\nYou Will Build Real World Online Store Android App.\nYou Will Build Portfolio Profile Android App.\nYou Will Build Sum Of Number Android App.\nYou, Will, Build a Custom Material Design Android App.\n\n\nHere is Some List That You Are Going To Learn In This Android App Development Course:\nAndroid Layout Design XML/UI\nAndroid Date Picker Dialog\nAndroid Bottom Navigation Bar\nAndroid Menu bar\nAndroid Fragment, Develop an App Using Android Fragment\nDevelop an Android Project ShowCase App\nWork With Android Firebase Database\nWork With Firebase Authentication\nAndroid Custom Toolbar\nAndroid Scroll View\nAndroid Card View\nAndroid Firebase Insert Operation\nAndroid Firebase Update Operation\nAndroid Firebase Delete Operation\nAndroid FirebaseRecyclerAdapter\n\n\n\n\nSign Up To This Course and You Will Get:\nThis Course has 14 Hours Video Content\nProject Base Android App Development Video Lectures\nThis Course has 81 Lectures For Android App Development\nReal-World Example of Android Project\nBecome Master With Android Firebase Database\nDevelop Complex Android App Using Firebase Database\nHow To Become an Android App Developer? Step by Step Guide For Android App Development.\n\n\n\n\nHere are Some Feedbacks about this course from my Students:\n\n\n\"This course is enough good for start android apps development.This course cover all basic features of android and then real world android apps.I Mostly like Expense Manager App section using firebase. Best course so far.this course contain a lot of information about android development.\"\n\n\n\"I wanted an app development course that would show what is really important and that is what I got. I learned all features of Android for becoming Android developer. Certainly would recommend the course. \"\n\n\n\"Best android apps development course so far. First I learn basic of all android components. After that I learn how to develop real world android apps for client and App Store. I mostly like all firebase sections of this course. Instructor shows how to develop real world apps using firebase. After complete this section I learn a lot about firebase and I build many real world android apps. Thanks for your course.\"\n\n\n\"Best Android development course I have taken so far. The teacher has amazing teaching skills. He has the ability to describe all parts very clearly on a step-by-step basis. Highly recommended! \"\n\n\n\"Very well made course about Android Development. Will continue and hope to learn a lot more. I am very happy with what I have learned so far!\"",
      "target_audience": [
        "Anyone Can take this course",
        "Who is want to become an Android apps developer",
        "Who is Want to improve their Skills",
        "Who is want to work on a IT Company as an Android Apps Developer",
        "Who is Want to Build Real World Android App"
      ]
    },
    {
      "title": "Make Android Apps No Coding App Inventor 2 Complete Course",
      "url": "https://www.udemy.com/course/make-android-apps-no-coding-app-inventor-2-complete-course/",
      "bio": "Your complete guide to building awesome Android Apps using App Inventor 2.",
      "objectives": [
        "Make android apps on their own without coding."
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Setting Up Your Computer": [
          "Installing App Inventor 2 Software"
        ],
        "Getting Started": [
          "Logging into App Inventor 2"
        ],
        "Let's Create Our First App!": [
          "Creating Our First App Part 1",
          "Creating Our First App Part 2"
        ],
        "Our Second App!": [
          "Creating Our Second App Part 1",
          "Creating Our Second App Part 2"
        ],
        "Our Third App!": [
          "Creating Our Third App Part 1",
          "Creating Our Third App Part 2"
        ],
        "Our Fourth App!": [
          "Creating Our Fourth App Part 1",
          "Creating Our Fourth App Part 2",
          "Quiz 1"
        ],
        "Our Fifth App!": [
          "Creating Our Fifth App Part 1 The User Interface",
          "Creating Our Fifth App Part 2 Making The App Work",
          "Creating Our Fifth App Adding More Colors And A Clear Button",
          "Creating Our Fifth App Adding Save And Load"
        ],
        "Our Sixth App!": [
          "Creating Our Sixth App Part 1",
          "Creating Our Sixth App Part 2"
        ],
        "Our Seventh App!": [
          "Creating Our Seventh App",
          "Quiz 2"
        ]
      },
      "requirements": [
        "Students will need to know how to use the internet, a keyboard, and a mouse."
      ],
      "description": "My Udemy Courses have been taken by over 6,000 people in 135 countries. They have also received high ratings throughout Udemy.\nAndroid devices are used worldwide and over 1.15 billion Android Devices are predicted to ship this year. Did you know that's more than apple?\nMaking Android Apps has sort of always been thought of as some magical process that only programmers can do. It was never thought possible that anybody would be able to make Android Apps.\nI'm here to tell you that it is possible! Plus, you never have to write a single line of code! In this course I teach you how to use a tool called App Inventor 2 to make Android Apps using an easy mouse-driven drag and drop block system to make your app work. You build the user interface visually,and then just click the blocks together using the mouse to make it work.\nI know you might be thinking that apps you can make are limited, right? In all honesty, most any kind of app can be made using App Inventor 2, and they are updating it quite often.\nApp Inventor 2 is also free to use. It's run by MIT and you use your Google Account. Easy!\nIn this course I teach you, in over 5 hours of video instruction, how to leverage the power of App Inventor 2 to make Android Apps easily and without coding. It's set at a pace that starts out at a beginner level and works it's way up to a more advanced level to include making 2 games.\nWhat are the requirements?\nYou will need a computer with an internet connection. Can be Windows/Mac/Linux.\nYou should have an Android device, but not required. Although would make it easier.\nA desire to learn.\nWhat am I going to get from this course?\nOver 5 hours of video lectures showing you how to create Android Apps without coding!\nLearn how to make 2 games.\nYou learn the App Inventor 2 environment\nYou get periodic course updates.\nLearn how to monetize your apps with ads.\nA good understanding of how Android Apps are made and work.\nA way to make your ideas a reality.\nWhat is the target audience?\nBeginners interested in learning to make Android Apps.\nIntermediates who took my Make 5 Apps in 1 Hour course.\nAdvanced users who are coders that want to learn an easier way to make Android Apps\nAnybody interested in learning how to make Android Apps without coding.\nAnybody who has an app idea that needs to learn how to make it a reality.",
      "target_audience": [
        "This course is setup for beginner's and advanced students alike."
      ]
    },
    {
      "title": "Android Java Masterclass - Become an App Developer",
      "url": "https://www.udemy.com/course/master-android-7-nougat-java-app-development-step-by-step/",
      "bio": "Improve your career options by learning Android app Development. Master Android Studio and build your first app today",
      "objectives": [
        "You’re taught step by step HOW to build Android 7 apps for Google’s Nougat platform that will work on older Android versions.",
        "With each comprehensive step, the WHY you’re doing it is explained.",
        "You’ll have EXPERT LEVEL knowledge of the Java programming language and know exactly how each process of Android Nougat development works.",
        "The course is continually UPDATED, so you’ll learn the very latest as Android Nougat evolves.",
        "NEW CONTENT is always being added, and you're covered with full lifetime access to the course.",
        "SUPPORT is mind blowing – questions you have are answered that day.",
        "The EXPERTISE to be an Android Nougat app developer as taught by the best.",
        "The skills you’ll learn are in HIGH DEMAND. You’ve learned to program like an expert. Go get that job!"
      ],
      "course_content": {
        "Android App Development Fundamentals: Get Started with Java Masterclass": [
          "Welcome to the Android Java Masterclass: Start Your Developer Journey",
          "Mastering the Udemy Interface: Course Navigation, Q&A, and Resources",
          "Android OS Deep Dive: Multitasking, Navigation, and App Lifecycle Explained",
          "Android Studio 3.2 and SDK Management: Current Issues and Best Practices"
        ],
        "Android Studio IDE Setup: Download, Install, Configure (Windows, Mac, Linux)": [
          "Windows: Install Android Studio - Step-by-Step Setup Guide for 64-bit Systems",
          "macOS: Install Android Studio - Complete Setup Guide for Your Mac Environment",
          "Linux: Install Android Studio - Comprehensive Setup Guide for Ubuntu & More",
          "Cross-Platform SDK Configuration: Optimize Android Studio for All Systems",
          "Android Studio Optimization: Essential Settings for Enhanced Productivity",
          "BIOS Configuration: Enable VT-x (Virtualization) for Android Emulators"
        ],
        "Build Your First Interactive App: Android Fundamentals": [
          "Your Programming Career: Comprehensive Questions and Expert Answers",
          "Access Exclusive Programming Career Question and Answer Resources",
          "Introduction to Building Your First Android App: Emulator & Device Setup",
          "Navigating Android Studio's Project Templates for Efficient Development",
          "Android Studio 3.6 and Later: Understanding and Managing FAQ Templates",
          "Deep Dive into Android Templates: Customization and Best Practices",
          "Create the \"Hello World\" App: Your First Steps in Android Development",
          "Android Studio Environment: A Comprehensive Tour and Essential Overview",
          "Setting Up a Virtual Device: Configuring the Android Emulator Step-by-Step",
          "FAQ: Emulators on Windows 10 with an AMD Processor",
          "Running Your App on an Emulator: A Step-by-Step Guide for Beginners",
          "Running Your App on a Physical Android Device for Accurate Testing"
        ],
        "Mastering User Input: Building a Functional Button Counter Application": [
          "Comprehensive Introduction to Building a Button Click App in Android Studio",
          "Setting Up a Test Project for ConstraintLayout and UI Design Exploration",
          "Deep Dive into ConstraintLayout: Mastering UI Design in Android Studio",
          "Creating and Managing Constraints and Widget Resizing in Android Studio",
          "Advanced UI Positioning: Mastering ConstraintLayout and other Widgets",
          "Understanding Inner Lines Within a Widget for Precise Positioning",
          "Building Cross-Device Compatible Android Layouts for Various Screen Sizes",
          "Advanced Constraints: Creating Interactive and Responsive UI in Android",
          "Troubleshooting Layout Designer Rendering Errors: Text Display Workarounds",
          "Enhancing App Accessibility: Implementing Baseline Constraints, A Guide",
          "Aligning Text in your App: Getting the Most out of Baseline Constraints",
          "Solving Layout Issues: The ConstraintLayout and Scroll for Best Practices",
          "Improving App Usability with Horizontal and Vertical Scrolling Capabilities",
          "Creating Your First Interactive Android Application: A Step by Step",
          "Finalising the Layout: Designing and Structuring the User Interface",
          "Understanding Activities, Bundles, and Classes in Android Development",
          "Implementing Java Fields and Classes for Widget References in Android",
          "Enhancing User Experience: A Guide to Writing Clear and Concise Questions",
          "Implementing Button Click Functionality with onClickListener in Android",
          "Troubleshooting Common Issues and Implementing Solutions in Android Apps",
          "Retrieving User Input: Implementing getText and Null Checking in Android",
          "Addressing ID Confusion and Preparing for the Next Challenge in Android",
          "Preserving Application State: Implementing Save Instance State in Android",
          "Mastering the Activity Lifecycle: Exploring Methods and Implementation",
          "Overriding Methods: Customizing Your Activity by Adding Logging Functions",
          "Logging & Bundle Data: Debugging and Understanding the Activity Lifecycle",
          "The Activity Lifecycle: A Comprehensive Understanding for App Developers"
        ],
        "Comprehensive Java Programming Fundamentals for Android Development": [
          "Introduction to Java Programming Fundamentals for Android Development",
          "Setting Up Android Studio for Standard Java Code Execution",
          "Creating Your First Java Program: \"Hello World\" in Android Studio",
          "Understanding Java Data Types: Working with Strings and Integers",
          "Java Operators: Performing Arithmetic and String Concatenation",
          "Introduction to Classes: Building Blocks of Object-Oriented Java",
          "Mastering Encapsulation: Getters, Setters, and Data Validation in Java",
          "Java Constructors: Creating and Initializing Objects with Multiple Constructors",
          "Understanding \"this\" Keyword and Method Chaining in Java Development",
          "Object and Method Chaining in Java",
          "Exploring Java Collections: Utilizing ArrayList for Dynamic Data Storage",
          "Integrating Loot, Inventory, and Methods to Test Player Class Functionality",
          "Introduction to Inheritance in Java: Building Subclasses from Superclasses",
          "Creating Subclasses: Extending Functionality from Base Enemy Class",
          "Method Overloading vs. Overriding and the @Override Annotation",
          "Inheritance Challenge: Creating and Testing a Vampire King Subclass",
          "Mastering the While Loop: Repeating Code Blocks Conditionally in Java",
          "Java For Loops: Iterating with Index Variables and For Each Variations",
          "Implementing The Do While Loop",
          "Comparing Number and String Objects: Equals() vs. == in Java Explained"
        ],
        "Build a Feature-Rich Calculator App: UI Design and Functionality": [
          "Calculator App Project: Section Introduction and Overview",
          "Project Kickoff: Calculator App Functionality Showcase",
          "Laying Out the Foundation: Building the Calculator's User Interface",
          "Refining the Design: Advanced Calculator Interface Customization",
          "Ensuring Responsiveness: Advanced Layout Adjustments and Testing",
          "Adapting to Orientation: Implementing a Landscape Layout",
          "Troubleshooting Layouts: Comparing Files Using the Diff Tool",
          "Streamlining Development: Directory Comparison Techniques",
          "Programming the Core: Flowchart and Implementing onClickListeners",
          "Handling User Actions: Adding Functionality for Operations",
          "Error Handling and Input Validation: Implementing Operations Logic",
          "Enhancing Robustness: Implementing a Decimal Point Bug Fix",
          "Preserving Application State: Rotation Bug Fix Challenge",
          "Mastering Layout Control: Introduction to ConstraintLayout Guidelines",
          "Achieving Visual Harmony: Landscape Layout Optimization Techniques",
          "Add Neg Button to Landscape Layout",
          "Implementing Neg Button Functionality",
          "Replicating Neg Button in Portrait Layout"
        ],
        "Mastering RSS Feed Data Downloads and App UI Design": [
          "Asynchronous Data Handling and UI Responsiveness",
          "RSS Feeds, Background Tasks, XML Parsing, and ListViews",
          "Preventing ANR Errors: Implementing Background Tasks with AsyncTask",
          "Android Security: Enabling Cleartext Traffic for API Level 28+",
          "Executing Asynchronous Tasks: Initiating the RSS Feed Download",
          "Downloading and Preparing XML Data with doInBackground",
          "Handling Network Exceptions and Implementing a Buffered Reader",
          "Addressing Security Exceptions in Android Network Operations",
          "Using the Logcat: Advanced Filtering and Stack Trace Analysis",
          "Android Permissions: Requesting Internet Access at Runtime",
          "Creating a Data Model and XML Parsing with XmlPullParser",
          "Understanding XML Parsing: Factory Classes and PullParser",
          "Implementing the XML Parsing Logic: Main Loop and Tag Handling",
          "Validating the XML Parser: Testing and Displaying Parsed Results",
          "Creating Lists: Understanding Adapters and List Views",
          "Dynamically Displaying Data with ListViews and ArrayAdapter",
          "Building a Custom Layout for ListView Items: Challenge",
          "Understanding Android Context and LayoutInflater in Adapters",
          "Implementing a Custom Adapter: getView and getCount Methods",
          "Optimizing ListView Performance: Reusing Views Efficiently",
          "Enhancing ListView Efficiency: The ViewHolder Pattern",
          "Creating and Displaying Interactive Menus in Android Apps",
          "Handling Menu Item Selections and Downloading Dynamic Content",
          "Enhancing User Experience with Dynamic Menu Groups",
          "Implementing User Preferences: Top 10 and Top 25 Downloads",
          "Implementing State Saving and Intelligent Data Refresh",
          "Advanced Java: Using Generics with Custom ListAdapters"
        ],
        "Developing a Comprehensive YouTube Video Player Application for Android": [
          "Introduction to Integrating Third-Party Libraries Using the YouTube API",
          "YouTube Player App: Project Setup, Domain Configuration, and Key Details",
          "Downloading, Setting Up, and Configuring the YouTube API in Android Studio",
          "Creating a New Activity for YouTube Playback and Implementing API Methods",
          "Dynamically Adding Layouts and Widgets: Buttons and YouTubePlayerView",
          "Obtaining and Implementing a Google API Key for YouTube API Integration",
          "Implementing onInitializationFailure and Error Handling in YouTube Player",
          "Implementing onInitializationSuccess for YouTube Video Playback in Android",
          "Testing App Functionality, Event Listeners and Device Orientation Changes",
          "Exploring YouTube API Documentation, Callbacks, and Advanced Testing",
          "Demoing the Finished YouTube App and Creating the Main and Standalone Layout",
          "Building the Standalone Activity: Implementing onClickListeners and Intents",
          "Understanding Intents, Starting Activities, and Modifying the Manifest File",
          "Running and Testing the Complete YouTube Player Application on a Device",
          "Challenge Solution: Autoplaying Videos with YouTube's Standalone Player"
        ],
        "Flickr API Integration: Downloading, Parsing, and Displaying Images": [
          "Course Section Overview: Material Design, JSON, RecyclerView, and Flickr",
          "Flickr API Introduction: Public Feeds, Parameters, and Data Formats (JSON/XML)",
          "Advanced Flickr API: Multi-tag Searching, JSON Format, and Data Validation",
          "Validating JSON with JSONLint and Implementing Language Parameter in Flickr API",
          "Android Studio Project Setup: Creating a New Project for the Flickr Browser",
          "Implementing Asynchronous Data Download with AsyncTask in Android Development",
          "Implementing the doInBackground Method and Error Handling for Network Tasks",
          "Testing JSON Data Download and Implementing Callback Mechanisms in Android",
          "Creating a Project Diagram, Photo Data Class, Implementing Callback, GetFlickr",
          "Coding the GetFlickrJsonData Class: Implementing Interfaces and Callbacks",
          "Building Dynamic URLs with Uri.Builder: Constructing Flickr API Requests",
          "Refining Asynchronous Tasks, Callbacks, RunInSameThread, and JSON Processing",
          "Testing JSON Parsing, Implementing Callbacks, Background Thread Management",
          "Enhancing Asynchronous Task Handling: Safe Callback Invocation and Optimization",
          "Designing the User Interface, Recycler View, Managing Layout Files",
          "Implementing RecyclerView for Dynamic Image Display in Android",
          "Creating Search Functionality and Photo Detail Activities",
          "Advanced Layout Techniques: Nesting Linear Layouts in Android",
          "Dynamically Loading Images with RecyclerView Adapter",
          "Method Implementation and Picasso Library Integration",
          "Getting Picasso to Work to Load Images",
          "Mastering Gesture Detection in RecyclerView",
          "Analysing and Implementing Touch Events",
          "RecyclerView Interactions: Implementing Click and Long Press",
          "Activity Lifecycle and Data Transfer with BaseActivity and Serializable",
          "Displaying Images and Data in PhotoDetailActivity",
          "Introduction to Material Design Principles",
          "Exploring Material Design Continued",
          "Ensuring Backwards Compatibility in Android App Development",
          "Applying Material Design Themes and Styles in Android Applications",
          "Creating a Custom Style Sheet for Your Android Application",
          "Experimenting with Styles in Android Studio's XML Files",
          "Implementing Further Material Design Changes in Android",
          "Addressing API Level Differences and a Practical Challenge",
          "Utilizing String Resources Effectively in Android Development",
          "Implementing the Search Menu Code in Your Android Project",
          "Integrating and Configuring the Android SearchView Widget",
          "Managing Search Functionality with Android's SearchManager",
          "Implementing User-Friendly Searching in Your Android App",
          "Saving and Retrieving Data Using Android SharedPreferences",
          "Displaying a Message for Empty Searches, Section Summary"
        ],
        "Mastering Databases: Building a Comprehensive Contact Management System": [
          "Introduction to Contact Management and Database Fundamentals",
          "Comprehensive Guide to Understanding Relational Database Concepts",
          "Essential Database Terminology: Tables, Fields, Records, and More",
          "Setting Up the Command Line Interface: Windows Path Configuration",
          "Configuring the Command Line Interface on macOS for SQLite Access",
          "Setting Up the Command Line Environment on Ubuntu Linux for Database Work",
          "Getting Started with SQLite: Creating Databases and Tables with SQL",
          "Advanced SQLite: Inserting, Updating, and Deleting Database Records",
          "Querying Data in SQLite: Mastering SELECT Statements and Data Retrieval",
          "Mastering Advanced Querying: Ordering Data and Utilizing Table Joins",
          "Combining Tables with Complex Joins and Advanced Querying Techniques",
          "Leveraging Wildcards and Views for Efficient SQLite Data Management",
          "Database Housekeeping Challenge: Test Your SQL Skills",
          "Implementing Basic SQL Operations Within an Android Application",
          "Effective Strategies for Debugging SQL Statements in Android Code",
          "Navigating Through Data: Exploring Cursor Movement and Record Access",
          "Exploring the Android File System: Locating Your App's Database",
          "Introduction to Content Providers: Sharing Data Between Android Apps",
          "Setting Up a Contacts Database: Preparing for Content Provider Use",
          "Implementing a Content Provider Example: Accessing Contacts Data",
          "Accessing Contacts: Understanding and Applying ContactsContract.Contacts",
          "ContentResolver Explained: The Bridge Between Your App and Data",
          "Understanding and Implementing Runtime Permissions (API 22 and Earlier)",
          "Adapting to New Permissions: Handling Runtime Permissions (API 23+)",
          "Securing Your App: Requesting Permissions at Runtime Effectively",
          "Comprehensive Testing: Ensuring Your App Functions with Permissions",
          "Preventing App Crashes: Handling Denied Permissions and User Experience",
          "Enhancing User Feedback: A Deep Dive into Snackbars and Their Uses",
          "Deep Dive into Intents: Using setData and URIs for Advanced Interactions",
          "Best Practices: Always Checking State Versus Storing State Variables",
          "Implementing Robust Testing: Creating a Comprehensive Test Script",
          "TaskTimer App Project: Functional Overview and Feature Walkthrough",
          "Getting Started with Fragments: Creating a Basic Fragment for the App",
          "TaskTimer Database Design: Schema, Tables, and Data Relationships",
          "TaskContract Class: Defining Data Access Constants in Your Application",
          "Building the Foundation: Creating the AppDatabase and SQLiteHelper",
          "Database Interaction: Implementing the Query Method in Your Provider",
          "Content Provider Creation: Building a Custom Provider for Your Data",
          "UriMatcher in Depth: Understanding and Implementing URI Handling",
          "Deep Dive into Content Providers: Understanding the Architecture",
          "Implementing Content Provider Functionality: Testing the Query Method",
          "Secure Coding: Using Content Values and Preventing SQL Injection",
          "Data Manipulation: Adding Update and Delete to Your Content Provider",
          "Secure by Design: Implementing robust data inputs and SQL injection protection",
          "Designing the User Interface: Creating and Configuring the Main Menu",
          "Updating Your Android Project: SDK and Build Tools for Compatibility",
          "Implementing RecyclerView and LinearLayout in Fragment_Main XML Layout",
          "ConstraintLayout Deep Dive: Designing the Task_List_Items XML Layout",
          "Creating the 'add_edit' Layout: Designing the Data Input Interface",
          "Configuring Widget Properties for the 'add_edit' Layout Functionality",
          "Building the Task Data Model and Initializing the Add/Edit Fragment",
          "Examining the Generated Files when using Fragments within an Activity",
          "Integrating the Add/Edit Activity, Fragment, and Launching on Add Task",
          "Implementing Add and Edit Logic: Saving Data through Content Provider",
          "Responding to User Interaction: Implementing the OnClickListener",
          "Retrieving and Displaying Data: Implementing CursorLoader for RecyclerView",
          "Deprecation Notice: Updating to Support Library for LoadManager",
          "Integrating CursorLoader for Live Data Updates: Testing Functionality",
          "RecyclerView with Database: Creating Custom CursorRecyclerViewAdapter",
          "Correcting Errors, Extracting String Resources, and Implementing Adapter Logic",
          "Implementing Content Provider Notifications for RecyclerView Updates",
          "Testing Database Updates & Case-Insensitive SQLite Sorting Challenge",
          "Implementing Button Click Listeners and Interface Callbacks in Adapters",
          "Lecture Title: Refactoring OnClickListener and Understanding Callback Mechanisms",
          "Testing App Edits, Deletions and Understanding Skipped Frames",
          "Understanding and Dealing With Fragments in the Layout",
          "Creating an Alternative Landscape Layout Version",
          "Dynamically Adding Fragments to the Layout Based on Screen Configuration",
          "Implementing Fragment Transactions using FragmentManager",
          "Proper Data Passing to Fragments and Best Practices",
          "Implementing OnSaveClick Interface to Fix Portrait Mode Task Editing",
          "Understanding and Implementing Fragment Removal",
          "Implementing Fragment Removal and Refining the User Experience",
          "Reviewing Section Content: Databases, Content Providers and Loaders",
          "Introduction to Dialogs: Usage, Design Guidelines, Subclasses",
          "Mastering Callback Methods with Unique ID for Android Dialogs",
          "Implementing Bundle Arguments and Interface Handling for Dialogs",
          "Navigating User Interactions: Handling Dialog Cancellation in Android",
          "Implementing Delete Functionality with Confirmation Dialogs in Android",
          "Understanding and Fixing ClassCastExceptions in Android Development",
          "Ensuring Code Reliability: Assertions and BuildConfig in Android",
          "Troubleshooting and Fixing onDismiss Anomalies in Android Dialogs",
          "Handling onBackPressed: Confirming User Actions and Preventing Data Loss",
          "Code Refactoring and Best Practices: YAGNI Principle and Constant Management",
          "Handling Multiple Dialogs: Switching Logic and Preventing Memory Leaks",
          "Navigating with Precision: Implementing Dialogs and the Up Button",
          "Creating an Informative Custom About Dialog in Your Android Application",
          "Finalising the About Dialog: Text Formatting and Resource Management",
          "Showing Your Custom About Dialog: Integrating with Activity Lifecycle",
          "Running and Refining App: Dealing with Memory Leaks and Dialogue Issues",
          "Understanding Build.gradle and App Version Control",
          "Dialog Dismissal Methods: Handling User Interaction",
          "Ensuring App Compatibility Across Android Versions",
          "Solving Compatibility: Implementing URL Handling",
          "Creating a Layout Variant for API Level 21 and High",
          "Testing the App on API 16 and API 25 Emulators",
          "Understanding the Role of AppCompat in App Development",
          "Adapting the DialogFragment with the Support Libraries",
          "Exploring the Android Support Libraries",
          "Updating the About Dialog for Consistent UI Design"
        ]
      },
      "requirements": [
        "A computer - Windows, Mac, and Linux are all supported. Setup and installation instructions are included for each platform.",
        "Your ENTHUSIASM to learn the worlds #1 app development framework, and then to showcase it on your RESUME!",
        "Everything else needed to write apps for Android 7 Nougat is already included in the course."
      ],
      "description": "There’s no getting around it.\n\nAndroid accounts for 81.7% of all smartphones sold, but not all come packed with the very latest Android Nougat.\nThat won’t worry you because after completing this course, the apps you build will perform brilliantly on Android Nougat or any older Android operating system.\nNow that’s something most courses don’t teach you!\nSo, you want to be an Android 7 Nougat programmer?  Or you are interested in Android 8 Oreo?\nWell, I’m Tim Buchalka, one of your instructors, and I’ve designed the Android 7 Nougat App and Android 8 Orea Masterclass just for you!  Yes one, course covering both version!\nChoosing a course that’s perfect for you can be damn hard. You need Instructors:\n·      Who are passionate about what they do.\n·      Keep their courses continually updated.\n·      And most important, provide outstanding support and follow up to your questions.\nThat’s what I do. And that’s the reason why I made it into the Top 10 List of Outstanding Instructors in the 2015 Udemy Instructor Awards.\nKnow that you’re exactly in the right place to MASTER Android 7 Nougat app programming as well as Android 8 Oreo!\nYes, we are in the process right now of updating the entire course to Android Oreo now it has been released by Google!\nIn this course, you will discover the power of Android app development, and obtain the skills to dramatically increase your career prospects as a software developer. You’ll also have a head start over other developers using obsolete tools and earlier versions of Android.\nAndroid is continually being updated, so OLD versions of the operating systems will have features from the latest version. It's called AppCompat, which is a set of support libraries used to make apps developed with newer versions, work with older versions.\nBut it only works if the developer codes it a right way. It doesn’t just happen by default. The way I teach you in this Masterclass course is the right way!\nWith my course, you get the best of both worlds. You’re taught to write code for the latest version of Android Nougat with a strong focus on AppCompat. That way, the apps you build will also support older versions of Android.\nMost Android courses just focus on teaching app development for the current Nougat version. What that means is you’re only taught to make apps for the latest version of Android, and that alienates a huge user base.\nWith my course, that’s not the case. Your skill level is maximized so your app reaches more users, which means more downloads, which means more money.\nStarting is easy because no previous programming experience is needed. NONE! If you do have it, great. Or maybe you just want to brush up on your Android development skills, and that’s fantastic too.\nThe course is presented using a combination of video, slides and diagrams, all designed to teach you everything you need to know.\nThis is what you’ll learn in the course:\n·      Develop apps for the very latest version of Android 7 Nougat that also work on older Android devices running older versions of the Android operating system.\n·      Download, install and configure the necessary (free) software.\n·      Create your first app.\n·      Build a range of apps demonstrating key aspects of the Android framework.\n·      Test your apps on emulators or a real Android phone or tablet.\n·      You’ll learn Java programming because Android app development requires knowledge of Java. Included are Java tutorial videos that will get you up to speed fast.\n·      Ensure your apps work with current and older Android versions on phones and tablets.\n·      Use Android studio 2.3, the newest version of Google's premier Android tool.\n·      Learn how to use databases, web services, and even get your apps to speak!\n·      Understand the all new Constraint layout, for \"drag and drop\" screen creation.\n·      Use powerful libraries of code to play videos, download website data, manipulate images, and a whole lot more!\nTo reinforce what you’ve learnt during the course, there are numerous challenges designed to help you understand each concept being taught. You’re also shown the solution to the challenge so you know you’re always on the right track.\nThe course is continually updated and enhanced, and fully supports Android Nougat as it evolves. New content is added each week, guaranteeing what you’re learning is relevant for you today and will never be obsolete.\nWith many courses, it’s just set and forget. But not with mine! I’ve got a PROVEN track record of continually updating and adding new content. An example is my Java Masterclass course which now has 65 hours of content and counting, and benefited a whopping 80,000 students.\nAnd if you have any doubts about the course, be blown away by the glowing reviews left by students on this page.\nYour instructors are me and Jean-Paul Roberts. Between us we have a collective 60 years of commercial software development experience, meaning you’re learning the right way to program to maximize your future development potential.\nHere’s what’s important. There’re a lot of people out there teaching Android Nougat who are not developers. We’re developers with many years’ experience with the Android platform, who also teach Android Nougat.\nImportantly, our courses teach students the real-life skills needed to get those in-demand jobs or further your programming skills.\nTake this course in confidence today knowing you have just found the BEST Android 7 Nougat/Android 8 Oreo course on Udemy!  Don't delay. Every minute you’re not learning Android 7 is a missed opportunity for that PERFECT high paying job.\nClick the BUY NOW button and start learning. The world needs your new apps!\nTestimonials\n\"Tim is a great Teacher and makes this stuff really easy to understand. He takes you from Zero to Expert in no time at all and always answers any questions I ask him almost right away. I started with Tim's other \"Complete Java Developer Course\" which gave me a great Foundation in the principals of the Java Programming Language and unlike other Teachers on Udemy, Tim is ALWAYS adding new videos to his courses. If your thinking of taking this Course, I can tell you that when you learn the things Tim is teaching here, your Job prospects will be well enhanced. Thanks Again Tim.\" - Oliver Farren\n\"Excellent communicator. Videos are very well organized and Tim articulates the important information very well. As a software programmer for over 30 years he certainly knows his stuff!!!!\" - Dale Stewart",
      "target_audience": [
        "The course is 100% for you if you’re wanting to be a kickass Android 7 app programmer!",
        "No previous programming experience is assumed.",
        "However, if you’re already an expert Android 7 programmer with knowledge of all the latest updates, then this course is not for you."
      ]
    },
    {
      "title": "React Native: Learn React Native With Hands-On Practices",
      "url": "https://www.udemy.com/course/react-native-learn-react-native-with-hands-on-practices/",
      "bio": "Learn React Native from scratch. Use ReactNative for mobile development & deep dive into React-Native with React course",
      "objectives": [
        "Learn React Native from scratch with hands on examples",
        "React js and ReactNative Set up our virtual environment",
        "Install React-Native dependencies for MAC and Windows",
        "Run Android and IOS simulator with react native",
        "JSX syntax and expressions",
        "ES6 syntax",
        "See the content on the simulator",
        "Styling with React-Native and flex-box rules",
        "Send an HTTP request to a remote API",
        "State ve Props systems",
        "Reusable components",
        "Reach another react native android app on the phone from the React-Native app",
        "Created by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android a",
        "React, also known as React js, saves time and effort for developers since they only need one programming language.",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes.",
        "Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.",
        "Relying on existing code, Flutter is also a free and open-source framework for developers.",
        "React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language.",
        "Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces."
      ],
      "course_content": {
        "Introduction to the React Native: learn reactnative with hands on practices": [
          "What We Will Learn In This React Native Course?",
          "How To Get Help from This Mobile Development React Native Course?",
          "Project Files and Course Documents for This ReactNative course"
        ],
        "React Native - Setup For Windows": [
          "FAQ about React Native, React Native hands on practices",
          "React Native Free Tools For Windows",
          "Windows Setup for React Native",
          "React-Native: How To Start Emulator in Android Studio"
        ],
        "ReactNative: Setup For OSX": [
          "React Native: Android Emulator Setup Checklist",
          "Free Tools for IOS",
          "OSX Setup for React Native",
          "React Native: Start The Emulator"
        ],
        "React Native and JSX": [
          "React Native: MAC IOS Emulator Setup Checklist",
          "How To Create An App with React Native",
          "See Content On Emulator",
          "Why Do We Need React and React-Native?",
          "Es6 Syntax ( Let, Const, Var)",
          "First Component",
          "How To Show Component On Device",
          "How to Build Our First App with React Native",
          "How to Connect a Component To The Root Component",
          "Import a Component to Another Component",
          "quiz"
        ],
        "Styling For React Native": [
          "Styling with JSX",
          "Displaying Views",
          "Header Component’s Styling",
          "React Props",
          "How to Reuse Code With Props System",
          "ReactNative: Quiz"
        ],
        "API Request With React Native": [
          "How To Show a List To The User",
          "The List Component",
          "Func Component vs Class Based Component"
        ],
        "Lifecycle Methods": [
          "When Do We Need Lifecycle Methods?",
          "Lifecycle Methods",
          "Making Request With Axios",
          "quiz"
        ],
        "State In React Native": [
          "What Is State and How To Initial State?",
          "Using of State",
          "A Component’s Lifecycle With State",
          "List Component",
          "List Item Component",
          "Reusable Components",
          "Styled Component for List Items",
          "Usage of Props.Children",
          "Item Section",
          "ReactNative: Quiz",
          "Introduction to the Flexbox",
          "Section Header Component",
          "Quiz"
        ],
        "Layout With Flexbox": [
          "How to Show An Image",
          "Scrollable Content",
          "User Interaction with ReactNative",
          "Event Handlers",
          "How to Open Another App (Browser)",
          "What We Learned From This React Native Course?",
          "quiz"
        ],
        "Extra": [
          "React Native: Learn React Native With Hands-On Practices"
        ]
      },
      "requirements": [
        "No prior React and React-Native knowledge",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don't need to be an expert with Mobile Development",
        "Basic ES6 knowledge would be beneficial but not required",
        "Desire to learn React Native",
        "Computer with access to the internet",
        "Desire to learn react",
        "Desire to learn mobile app development",
        "Desire to learn react native with hands on examples",
        "Desire to learn differences between React and Google Flutter (google flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup",
        "Desire to learn react native android and android ios",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device"
      ],
      "description": "Hello there,\nWelcome to React Native: Learn React Native With Hands-On Practices course.\nLearn React Native from scratch. Use ReactNative for mobile development & deep dive into React-Native with React course\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nLearning React Native is a great avenue through which to gain experience developing mobile apps. Udemy features top-rated React Native courses that take you through every level of the React Native framework, so that you can start writing better apps, faster.\nThis react native course is for beginners. We will take you from beginner to advance level.  You will learn React development step-by-step with hands-on demonstrations. To be able to benefit from this course, all you need is a basic understanding of JavaScript.\nIn the react native course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run a react native Android and iOS simulator on your MAC or Windows computer.\nLater in the react native: learn react native with hands on examples. course, we are going to learn the basics of React.  JSX, 'props system', and 'state system' are going to be crystal clear for you at the end of the course.\nWe'll be creating nice-looking reusable components. So you will be able to use this reusable component on your own future projects.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\nIn this react native course, I explained all the complex topics in very detail but by making them simpler which I believe will help you a lot. I used some diagrams to tell some important topics and created a nice looking mobile application.\nAt the end of the course you will learn;\nBasics of React and React-Native libraries,\nHow to send an HTTP request from a mobile application,\nHow to use the flex-box system,\nHow to create reusable components,\nTo reach another app on the device from our app and\nCreating your own mobile app is going to be clear for you.\nReact native and react native android, react native ios\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from.\nReact is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn React Native\nThis course starts with very basics. First, you will learn some terminology. Then the show will start and you will learn everything with hands-on practice.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of React native and be hungry to learn more.\nFrequently asked questions\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and React JS, and which one should I learn?\nReact, or React JS is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\n\nDive in now!\nReact Native: Learn React Native With Hands-On Practices\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Programmers who want to learn React and React-Native",
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn mobile development and how to create complex applications",
        "Anyone who wants to create mobile applications with React Mobile app development",
        "People who are willing to make a career in the application world",
        "People who want to build app with using react",
        "People who want to build app with using react native",
        "People who want to learn react native with real world projects",
        "People who want to learn mobile development using react native with hands on practices"
      ]
    },
    {
      "title": "Python & Kivy The Right Way Mobile App [ A-to-Z , Projects ]",
      "url": "https://www.udemy.com/course/build-amazing-calculator-with-kivy-apps-and-other-projects/",
      "bio": "A complete kivy course that will teach you how to build Simple Mobile Apps ( 2020 )",
      "objectives": [
        "You will learn all the basics of the library and until get to build a simple calculator application",
        "You will build an application for Calculation",
        "You will build an application for Draw on the window",
        "How to connect your UI to Python code .",
        "Know all the basics and hidden aspects of the library",
        "Explanation of the theoretical and then explain the practical and then reviewed in each lesson in detail without prolongation",
        "You will build a Animation in python",
        "You will learn the use of Labels in python GUI application window",
        "You will learn the use of Random and sound in python GUI application window",
        "You will learn the use of ScrolViow in python GUI",
        "You will learn how to create buttons in python GUI"
      ],
      "course_content": {
        "Introduction": [
          "Intro Course"
        ],
        "Basics": [
          "Install Python And Kivy",
          "How to import kivy library",
          "What is RunTouchApp",
          "What is orientation in kivy",
          "learn how to use size hint , pos hint in kivy app",
          "Horizontal and vertical",
          "learn how to create function and a lot of property"
        ],
        "Layout": [
          "How to use BoxLayout with tool",
          "How to use FloatLayout with tool",
          "How to use GridLayout with tools",
          "RelativeLayout",
          "StackLayout",
          "How to create tools with PageLayout"
        ],
        "Button": [
          "Button Part 1",
          "Button Part 2",
          "Button Part 3"
        ],
        "label": [
          "How to create a Labels",
          "Connect Label with button",
          "Label With Disabled"
        ],
        "Font in Kivy": [
          "Font Properties",
          "Font Properties Part 2"
        ],
        "UX widgets": [
          "Action Bar Part 1",
          "Action Bar Part 2",
          "CheckBox Part 1",
          "CheckBox , RedioButton",
          "Progressbar in kivy",
          "Scatter in kivy",
          "Canvas in kivy",
          "AsyncImage in kivy"
        ],
        "Complex UX widgets": [
          "Spinner in kivy",
          "Accordion in kivy",
          "CheckBox project",
          "Slider with ProgressBar",
          "Text on window",
          "TextInput",
          "TextInput Part 2",
          "Carousel in kivy"
        ],
        "Advanced UX widgets": [
          "Text with Image in you window",
          "How to create Dropdwon in kivy",
          "How to create Animation"
        ],
        "Clock": [
          "How to create a Rotate",
          "How to have a rotation and speed"
        ]
      },
      "requirements": [
        "Very little knowledge of the basics of Python"
      ],
      "description": "Welcome to Python 3: Building Calculator  This is a comprehensive and concise guide that will teach you how to build a complete electronic calculator in python and it is designed to pick up every interested student from the state of \"knowledge\" to a state of \"hero-knowledge\" in kivy library. As a senior software developer and an instructor with many years of experience in the industry, I have mastered the best way to give my students packages that will help them to learn and understand Python programming in one course without the need to waste their hard earned money on different courses that will limit them to one side of Python programming and forcing them to pay to learn the other sides.\n\n\nthe instructor is a very high experienced teacher, software developer and have also worked with some reputable companies. He has also been teaching computer programming since 2013 and have mastered the art of conveying information for better understanding which have made many of his student to excel with less stress in computer programming. Students are advised to follow this course step by step so that they would understand it very well because every lecture is filled with vital information which should not be missed.\n\n\nHave you tried to learn his library kivy find a good source of learning? Do you learn Python and want to become a mobile application developer using your language? Well no further research. This course will take you through the process of creating your own application. This course is suitable for beginners and intermediate level programsmers and more. Handle this course as a step-by-step guide on how to create an iPhone, Android app from scratch using Python. Follow this course every step of the way and you will be developing your first application in less than 3 hours!\n\n\nFor less than a movie ticket, you'll get more than 3 hours of video lectures and free questions\nabout the course as you pass. :)\n_________________________________________\nWho is the target audience?\nFounders and businessmen\nMobile app developers\nBeginners Developers\nFull Starter Codec\nEveryone starts learning Python\nAnyone wanting to learn to create an application for Android phone\n________________________________________\nWhat should you know before taking the course?\nVery little knowledge of the very basics of Python",
      "target_audience": [
        "Students",
        "Junior developers",
        "Beginners in computer programming",
        "Create Android & iOS apps with Python",
        "Dealing with any programming code for the library",
        "Who want to understand the language in a simple way and get all the basics of the library"
      ]
    },
    {
      "title": "Android App Development with Android Studio and Android apps",
      "url": "https://www.udemy.com/course/android-mobile-app-development-for-everyone/",
      "bio": "Android App Development & Android Studio, build 12 different Android apps, learn android, android development in detail",
      "objectives": [
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "Learn the most used operating system on the planet",
        "Learn the latest version of Android. Here it is: Android (Android R)",
        "Learn Publishing Android App on Google Play",
        "Start from scratch and become a Professional Android App Developer",
        "In this course, we will building 12 different Android Apps from scratch together",
        "Android applications' levels in this course are from easy to difficult",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "You will reinforce your existing Android information by applying.",
        "Using SQLite database, you will understand how to work with external databases.",
        "You will be able to develop Android applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "With Firebase, you will be able to develop real-time applications",
        "You will learn how to make a messaging app using Firebase.",
        "You will be able to develop user-friendly interfaces using Material Design principles and components.",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "You will learn to develop games using Android Studio",
        "You will learn to develop applications by getting real-time data from the Internet",
        "You will have 12 different applications that you will publish on Google Play",
        "android",
        "android app development",
        "android development",
        "android studio",
        "mobile app development",
        "mobile development",
        "Android app",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android."
      ],
      "course_content": {
        "Introduction to Android App Development with Android Studio and Android apps": [
          "Android Ecosystem",
          "Installing Android Studio - Part 1",
          "Installing Android Studio - Part 2",
          "Creating a New Project on Android Studio",
          "Project Files and Course Documents",
          "FAQ About android app development",
          "quiz"
        ],
        "Android Studio Interface": [
          "Android Studio Interface",
          "Installing Android Virtual Device (AVD - Emulator)",
          "Enabling Virtualization (VT-x or AMD-V, SVM) in BIOS",
          "Installing Genymotion Emulator",
          "Gradle Build System",
          "Introduction to Manifest File",
          "Introduction to Resource",
          "R Java File",
          "quiz"
        ],
        "Components of Android Development": [
          "Layouts",
          "Textviews",
          "Buttons",
          "Edittexts",
          "Image View",
          "Checkbox",
          "Radio Buttons",
          "Toggle buttons",
          "Spinner",
          "Creating Top App Bar (Toolbar - Action bar)",
          "Adding Menu Items to Toolbar",
          "quiz"
        ],
        "User Interactions in Android App Development": [
          "Toast Messages",
          "Snackbar Messages",
          "Dialog Messages",
          "quiz"
        ],
        "Lists & Views in Android Development": [
          "Constraint Layout",
          "ListView",
          "Recycler View - Part 1",
          "Recycler View - Part 2",
          "Grid View",
          "Scroll View",
          "WebView",
          "quiz"
        ],
        "Components and LifeCycles in app development": [
          "Application Lifecycle",
          "Activity & Lifecycle",
          "Fragment & Lifecycle",
          "Services",
          "Receivers",
          "Intents",
          "quiz"
        ],
        "Shared Preferences and data Saving": [
          "Shared Preferences Class",
          "Saving Data Local Memory",
          "Calling Back Data",
          "quiz"
        ],
        "Device Compatibility": [
          "Multiple Language Support",
          "Supporting Different Pixel Densities",
          "Support Different Screen Sizes",
          "quiz"
        ],
        "Android Project 1": [
          "To Do List",
          "quiz"
        ],
        "Publishing Your App on Google Play": [
          "Apk Release Version",
          "Building APK Files",
          "Signing APK",
          "Google Play Developer Account",
          "Release Your App",
          "quiz"
        ]
      },
      "requirements": [
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "To have basic Android and Java Programming knowledge",
        "Having a working computer and internet",
        "Watching the course videos completely, to the end and in order",
        "Determination to learn and patience",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Welcome to the \"Android App Development with Android Studio and Android apps\" course.\nAndroid App Development & Android Studio, build 12 different Android apps, learn android, android development in detail\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\nWith the Android mobile application course, you will learn to write applications for Android from scratch with examples.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nChances are, you’ve heard of Android many times, and Do u want to android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android 11 is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or deny permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app and more?\nIf your answer is “yes” , you are at the right place!\nMy \"Android App Development with Android Studio | Android\" course will take you from beginner to advance level.\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course. In this course, you will learn Android app development step-by-step. While doing kind of show and tell in our lectures we are also explaining whys. During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 12 major apps.\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\nIn this course you will learn;\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nPublishing Your App on Google Play and more\nYou will reinforce your existing android information by applying.\nYou will learn to develop games using Android Studio\nYou will learn to develop applications by getting real-time data from the Internet.\nUsing SQLite database, you will understand how to work with external databases\nYou will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).\nYou will learn how to make a messaging app using Firebase.\nWith Firebase, you will be able to develop real-time applications\nYou will be able to develop user-friendly interfaces using Material Design principles and components.\nYou will be able to develop modern Android apps.\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\n\n\nThis course will take you from a beginner to a more experienced level.\nWe will take you from beginner to advance level. You will learn step-by-step with hands-on demonstrations.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now \"Android App Development with Android Studio and Android apps\" course.\nAndroid App Development & Android Studio, build 12 different Android apps, learn android, android development in detail\nWe offer full support, answering any questions.",
      "target_audience": [
        "Those who want to develop an Android mobile application",
        "Who wants to improve their existing android knowledge",
        "Those who want to develop applications using the Java programming language",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Firebase Real-Time Database, Architectural Components (View Model, Live Data, Room) and SQLite.",
        "Those who are curious about the Android Mobile game World",
        "Those who want to improve their application development skills using Android studio and java programming language",
        "A total beginner, with a curious mind and wants to be an app develope",
        "Anyone planning a job transformation and wants to become a Android developer",
        "Anyone who wants to learn to Android code",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications",
        "Anyone who wants to learn Android ( Android R )",
        "Anyone who become an android developer from scratch"
      ]
    },
    {
      "title": "Ionic Basics",
      "url": "https://www.udemy.com/course/ionic-basics/",
      "bio": "Learn to build mobile apps for Android and iOS using Web Technologies.",
      "objectives": [
        "Build apps with Ionic Framework and Angular",
        "Use Ionic Components and Features to build UI",
        "Build and deploy apps on Android and iOS",
        "Build competely cross platform apps for Android and iOS",
        "Use commands to create a build for release",
        "Release the apps to the Google Play Store"
      ],
      "course_content": {},
      "requirements": [
        "Understand of how mobile devices and apps work",
        "Introductory knowledge of HTML, CSS and JS",
        "Basic knowledge of TypeScript/Angular would be an advantage but not required",
        "A computer with an active internet connection"
      ],
      "description": "Ionic Framework is one of the most popular frameworks for cross-platform mobile app development. It lets you build truly hybrid mobile apps for both Android and iOS using web technologies like HTML, SCSS and TypeScript. This course covers the latest version of Ionic, Ionic Framework v3 which uses Angular as the backing framework.\nThis course is an essential for Web Developers, Professionals and Students who wish to develop Mobile Apps using the web development skills they have (HTML, SCSS and TypeScript).\nAt the end of this course, you will be able to develop mobile apps for Android and iOS using the web development skills you already have. We will start by understanding the basics of Ionic and Cordova. We will also understand the role of Angular in Ionic Apps and then move on to learning to create and run Ionic Apps. You  will learn to create user interfaces using basic and advanced Ionic Components. You will learn to use basic components like Buttons, Lists, Cards, Icons, RadioButtons, CheckBoxes, Inputs and much more. You will also learn to add interactivity to these components using Angular and TypeScript. Lastly, we will move on to using more advanced components like Loading, Toast, Alerts, Popovers and Modals. You will also learn about navigation between different pages within the app.\nWhile the course, you will learn how to use Angular to build apps that work on Android and iOS. Later in the course you will work on a real app called, \"WeatherIonic\", that tells weather information for any city in the world. Cool right?\nFinally, we will learn to build and publish Ionic Apps to the Google Play Store.\nAnd once you have started, sky is the limit.",
      "target_audience": [
        "Eventerpreneurs with an idea but no knowledge of complex app development",
        "Students willing to build mobile apps for Android, iOS and Windows using Web Technologies",
        "Professionals willing to build apps for multiple platforms in least amount of time",
        "Everyone who has web skills and wants to build mobile apps using web technologies",
        "Professionals who want to expand their skill set and learn to develop apps."
      ]
    },
    {
      "title": "Build Real World App with Xamarin Forms",
      "url": "https://www.udemy.com/course/build-real-world-app-with-xamarin-forms/",
      "bio": "Learn Xamarin Forms Real World Application From Beginning to End",
      "objectives": [
        "Be able to build any app you want in xamarin forms",
        "Work as a freelance xamarin forms developer",
        "Create your first xamarin forms real world application",
        "Build fully-fledged apps for your startup or business",
        "Consume Restful api's",
        "Consume Third Party UI Controls"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Overview",
          "Course Outline"
        ],
        "Diving into the basics": [
          "Create Xamarin Forms Project",
          "Explore Project Architecture",
          "Debugging Xamarin Forms Application",
          "Layouts",
          "Pages",
          "Tabbed Page in Xamarin Forms",
          "Adding Children's in Tabbed Page",
          "Bottom Tabbed Page"
        ],
        "Application Back-end": [
          "Download The Github Code For Web Api",
          "Create Azure Account",
          "Create Azure Web App",
          "Create Azure Database",
          "Publish Web Api to Azure",
          "Insert Data Via SQL Generated Script",
          "Azure Important Note",
          "Azure New Way to Create Web App and Sql Database 2020"
        ],
        "Application Tiers": [
          "Create Model Classes",
          "Create Service Layer : Get Menu Method",
          "Create Service Layer : Reserve Table Method"
        ],
        "Menu Page": [
          "Create Menu Page UI",
          "Menu Page Data Binding",
          "Menu Page Code Behind"
        ],
        "Sub Menu Page": [
          "Create Sub Menu Page UI",
          "Sub Menu Page Code Behind"
        ],
        "Reservation Page": [
          "Create Reservation Page UI",
          "Reservation Page Code Behind"
        ],
        "Information Page": [
          "Create Information Page UI",
          "Create Information Page Code Behind",
          "Xamarin Essentials : Integrate Xamarin Essentials",
          "Utilize Xamarin Essentials : Phone Dialer"
        ],
        "Polishing & Bug Fixing": [
          "What we're going to change",
          "Activity Indicator",
          "Listview Selection",
          "Styling Tabbed Page",
          "Change Navigation Bar Color",
          "Translucent Effect in Android Status Bar"
        ],
        "FF Image Loading in Xamarin Forms": [
          "FFImage Loading",
          "Integrate FF Image Loading Plugin",
          "Implement FFImage Loading in Xamarin Forms",
          "Source Code",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You should be familiar with C# and Xamarin Forms. Because knowledge of C# and Xamarin is must for this course.",
        "You need a windows OR mac machine for development."
      ],
      "description": "Welcome to the Real World App Development course with Xamarin Forms.\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of real world application in Xamarin Forms. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in Xamarin Forms.\n\nThis courses teaches you how to code using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a real world application with xamarin forms.\nConsume Rest Api's.\nConsume third party controls in xamarin forms.\nCreate a Complete Real World Application in Xamarin Forms From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Project in Xamarin Forms happily)\nHow to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nMake application user friendly.\n\n\nRemember...\nAfter this course you'll get all the Xamarin Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you. In this course I've used my personal Azure Account and I'll not give the access to the Azure Account. However if you want to test the api's then you'll need your own Microsoft Azure Account. Also inside this course I'll show you how you can publish your web api's to Microsoft Azure and preview your data inside Microsoft Azure.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First Complete Real World App Development Course with Xamarin Forms.",
      "target_audience": [
        "If you're a C# programmer , then take this course.",
        "If you are an intermediate xamarin forms developer, then take this course to get up to speed quickly with xamarin forms and native app development.",
        "If you are a pro xamarin developer and want to learn more advanced concepts with quick pace then take this course.",
        "If you're are already familiar with Xamarin Forms , C# , XAML then take this course."
      ]
    },
    {
      "title": "Kotlin Coroutines for Android Masterclass",
      "url": "https://www.udemy.com/course/kotlin-coroutines-in-android/",
      "bio": "Master Kotlin Coroutines in Android and gain hands-on experience with Coroutines by solving advanced exercises",
      "objectives": [
        "Understand the importance of concurrency in Android applications",
        "Use Kotlin Coroutines to implement simple and complex concurrent flows",
        "Handle cancellations and errors inside Coroutines",
        "Write unit tests for Coroutines-based code",
        "Find out the most common Coroutines-related issues and pitfalls",
        "Learn what Structured Concurrency is and how it helps you"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Tutorial Application",
          "Udemy Course Review System"
        ],
        "Coroutines Intuition": [
          "UI Thread Blocking",
          "Concurrency",
          "Background Threads",
          "Coroutines Basics",
          "Coroutines Basics Nuances",
          "Exercise 1",
          "Exercise 1 Solution",
          "Coroutines Cancellation Basics",
          "Exercise 2",
          "Exercise 2 Solution",
          "Concurrent Coroutines",
          "Suspension vs Blocking",
          "Coroutine Scope's Children Cancellation",
          "Exercise 3",
          "Exercise 3 Solution",
          "Coroutines Intuition Summary"
        ],
        "Coroutine Scope Cancellation": [
          "Coroutine Scope Cancellation",
          "Scope Cancellation vs Scope's Children Cancellation",
          "Coroutine Scope Inside ViewModel",
          "Coroutine Scope From Kotlin Extensions for ViewModel",
          "Coroutine Scope Cancellation Summary"
        ],
        "Structured Concurrency": [
          "Structured Concurrency Intro",
          "Fibonacci Computation",
          "Concurrent Fibonacci Computation",
          "Concurrent Fibonacci Computation with Callback on UI Thread",
          "Concurrent Fibonacci Computation Using ThreadPoster Library",
          "Structured Concurrency",
          "Concurrent Fibonacci Computation Using Coroutines (Callback)",
          "Concurrent Fibonacci Computation Using Coroutines (Suspending)",
          "Exercise 4",
          "Exercise 4 Solution",
          "Structured Concurrency Summary"
        ],
        "Design with Coroutines": [
          "The Main Rule of Concurrency in Android",
          "Encapsulating Concurrency in Use Cases",
          "Exercise 5",
          "Exercise 5 Solution",
          "Design with Coroutines Summary"
        ],
        "Coroutine Dispatchers": [
          "Coroutine Dispatchers",
          "Main Dispatcher",
          "Background Dispatchers",
          "Unconfined Dispatcher",
          "The Best Dispatching Strategy for Android Applications"
        ],
        "Coroutines Cancellation": [
          "Coroutines Cancellation Intro",
          "Cooperative Cancellation",
          "The Importance of Cancellation Exception",
          "Fragment Lifecycle Bug on Coroutine Cancellation",
          "Exercise 6",
          "Exercise 6 Solution",
          "NonCancellable",
          "Coroutines Cancellation Summary"
        ],
        "Coroutines Mechanics": [
          "Main Coroutines Building Blocks",
          "Coroutines Mechanics Part 1: CoroutineScope and CoroutineContext",
          "Coroutines Mechanics Part 2: CoroutineContext Elements",
          "Coroutines Mechanics Part 3: withContext Function",
          "Coroutines Mechanics Part 4: Jobs Hierarchy",
          "Coroutines Mechanics Part 5: Cancellation Propagation",
          "Coroutines Mechanics Part 6: NonCancellable vs Job()",
          "Exercise 7",
          "Exercise 7 Solution",
          "Exercise 7 Solution Amendment",
          "Coroutines Mechanics Summary"
        ],
        "Parallel Decomposition": [
          "Parallel Decomposition",
          "Exercise 8",
          "Exercise 8 Solution",
          "Shared Mutable State",
          "Async Coroutine Builder",
          "Exercise 9",
          "Exercise 9 Solution",
          "Parallel Decomposition Summary"
        ],
        "Exceptions Handling": [
          "Exceptions Handling Intro",
          "Uncaught Exception in a Coroutine",
          "CoroutineExceptionHandler",
          "Cancellation Chain on Uncaught Exception",
          "SupervisorJob",
          "Exercise 10",
          "Exercise 10 Solution",
          "Uncaught Exception in Async Coroutine",
          "The Best Way to Handle Exceptions in Coroutines",
          "Exceptions Handling Summary"
        ]
      },
      "requirements": [
        "Basic experience with Android and Kotlin"
      ],
      "description": "This course is your complete guide into the world of Kotlin Coroutines in Android. By the end of this course, you'll know how to use Coroutines to write reliable, maintainable and responsive Android applications.\nThe philosophy of this course is \"learn by coding\", so you'll be asked to solve a series of carefully designed, hands-on exercises. These exercises are built into a tutorial Android application, so they accurately reflect the \"real world\" use cases that you'll encounter in real Android apps.\nEven though the main goal of this course is to give you practical skills, it also covers the theory behind Kotlin Coroutines framework at a more conceptual level. In particular, you're going to learn what Structured Concurrency is, what benefits it provides and how Coroutines support this powerful paradigm.\nThese aspects of Kotlin Coroutines framework are covered in this course:\nCoroutines as concurrency framework\nSuspending vs blocking functions\nCoroutine Scope, Context and Jobs hierarchy\nCoroutines cancellation\nExceptions handling inside Coroutines\nStructured Concurrency\nUnit testing with Coroutines\nand more...\nIn this course we go beyond the functionality of Kotlin Coroutines framework itself and also discuss important design considerations that will help you write clean and maintainable code.\nKnowledge of Kotlin Coroutines is an essential skill for Android developers. After completing this course, you'll be able to use Coroutines in real-world Android projects, and you'll be ready to answer even the trickiest questions about this framework in job interviews.\nSo, if you're serious about Android development and you want to master Kotlin Coroutines, this course is perfect for you!",
      "target_audience": [
        "Professional Android developers"
      ]
    },
    {
      "title": "Reactive Programming in iOS Using Combine Framework",
      "url": "https://www.udemy.com/course/reactive-programming-in-ios-using-combine-framework/",
      "bio": "Supercharge Your iOS App Development with Combine: Harness the Reactive Power!",
      "objectives": [
        "Gain a solid understanding of the core concepts, including Publishers, Subscribers, Operators, and Subjects, and how they work within Combine",
        "Master asynchronous programming techniques for handling data flow, events, and networking in iOS applications",
        "Explore a wide range of Combine operators to transform, filter, and combine data streams efficiently and adapt to various use cases.",
        "Apply Combine to practical scenarios, including network requests, REST API calls, and error handling."
      ],
      "course_content": {},
      "requirements": [
        "Proficiency in Swift programming language",
        "Familiarity with iOS app development using UIKit and SwiftUI",
        "Basic understanding of asynchronous programming concepts"
      ],
      "description": "Unlock the iOS Combine Framework's power for reactive, efficient, and maintainable app development. Ideal for iOS developers, this course covers core concepts, operators, real-world applications, and more. Prerequisites include Swift proficiency and UIKit/SwiftUI familiarity.\n\n\nCourse Outline:\n1. Introduction to Combine Framework\n2. Publishers and Subscribers\n3. Operators\n4. Subjects\n5. Networking and Combine\n6. Combine in UIKit\n7. Combine in SwiftUI\n8. Custom Operators, Debugging and Testing Combine Code\n\n\nWho is this course for?\n\n\niOS Developers: If you're an iOS developer looking to enhance your skills and stay at the forefront of iOS app development, this course will equip you with the knowledge and expertise to harness the power of the Combine Framework.\nSwift Developers: Whether you're a seasoned Swift developer or a newcomer to the language, this course will provide valuable insights and hands-on experience in Combine, allowing you to create more robust and reactive iOS applications.\nAsynchronous Programming Enthusiasts: Anyone interested in mastering asynchronous programming and event-driven architectures will benefit from this course. It's an opportunity to dive deep into Combine and develop the skills needed to handle complex data flow scenarios\nThose Looking to Stay Updated: As the iOS ecosystem continues to evolve, staying up-to-date is crucial. This course is perfect for individuals who want to remain current with the latest iOS development trends and technologies.\nWhat will you learn in this course?\n\n\nCombine Framework Fundamentals: Gain a solid understanding of the core concepts, including Publishers, Subscribers, Operators, and Subjects, and how they work within Combine.\nEffective Asynchronous Programming: Master asynchronous programming techniques for handling data flow, events, and networking in iOS applications.\nOperator Expertise: Explore a wide range of Combine operators to transform, filter, and combine data streams efficiently and adapt to various use cases.\nReal-world Applications: Apply Combine to practical scenarios, including network requests, REST API calls, and error handling.\nUIKit and SwiftUI Integration: Learn how to seamlessly integrate Combine with both UIKit and SwiftUI for reactive UI development and state management.\nAdvanced Techniques: Dive into advanced Combine concepts, debugging, testing, and performance optimization, enabling you to create efficient, maintainable, and responsive iOS applications.\n\n\nBy the end of the course, students will have the knowledge and skills needed to harness the full potential of the Combine Framework, simplifying app architecture, managing data flow, and creating more reactive and efficient iOS applications.",
      "target_audience": [
        "For iOS Developers: Master Combine for cutting-edge iOS app development.",
        "Swift Developers: Enhance your iOS apps with Combine expertise.",
        "Swift Developers: Enhance your iOS apps with Combine expertise.",
        "Swift Developers: Enhance your iOS apps with Combine expertise.",
        "Asynchronous Programming Fans: Dive deep into Combine for complex data flows.",
        "App Architects and Designers: Make informed decisions with Combine knowledge.",
        "Stay Current: Stay up-to-date with the latest iOS trends and tech."
      ]
    },
    {
      "title": "ARKit and Unity : Build a Drivable Car in Augmented Reality",
      "url": "https://www.udemy.com/course/arkit-and-unity-build-a-realistic-drivable-car-in-ar/",
      "bio": "Make a Realistic Drivable car in Augmented Reality (AR) using Unity and ARKit framework.",
      "objectives": [
        "Learn to make a Realistic Drivable car using ARKit",
        "Use Focus Square (yellow colour quad) to place objects elegantly.",
        "Learn to interact with 3D virtual objects in AR",
        "Increase your skills in Unity 3D on a basic / intermediate level",
        "Understand how to use the ARKit Augmented Reality package",
        "Learn to add realistic shadows in unity",
        "Learn how to animate objects such as car doors",
        "Learn how to work with lightning in unity to add realistic effect to objects.",
        "Learn to work with the unity physics system",
        "Learn how the \"ARHitTestExample\" script works"
      ],
      "course_content": {
        "Introduction": [
          "PLEASE READ THIS BEFORE STARTING WITH THE COURSE! (Very Important)",
          "Installation",
          "ARKit Setup"
        ],
        "The Unity ARKit Plugin": [
          "ARHItTestExample Script (UPDATE!) notes",
          "Going over the \"ARHitTest\" script",
          "Interacting with 3D objects in AR",
          "Using FocusSquare to place objects"
        ],
        "Main functionality of the car": [
          "How are we going to do it?",
          "Wheel Colliders Part - 1",
          "Wheel Colliders Part - 2",
          "Adding the car model",
          "Rear Wheel Drive Script Part - 1",
          "Rear Wheel Drive Script Part - 2",
          "Adding touch controlls",
          "Resolving some issues and running the app (Don't skip this lecture)"
        ],
        "Adding Awesome features to our Car": [
          "Adding Lightning, shadows and reflections",
          "Changing the color of the car (part - 1)",
          "Changing the color of the car (part - 2)",
          "Adding Headlights",
          "Opening and Closing Door animation"
        ]
      },
      "requirements": [
        "Should know at least one object oriented language",
        "Basic Knowledge of unity will be helpful",
        "Should have a mac and a supported iOS device (an iOS device having A9 chip or higher i.e iPhone 6s and higher)"
      ],
      "description": "Augmented reality is here to stay.  If you are looking for a new extremely useful skill, this is your course. Augmented Reality is so much popular right now!!\n\nAccording to the recent reports, Augmented Reality is going to be a billion dollar industry by 2023.\nWe are going to build an Augmented Reality app using ARKit and Unity which will be able to place a Virtual model of the Car in the real world and we will be able to drive that car. (Sounds cool, Looks even more cool)\n\nThings you are going to learn :\nDrive the Car using touch screen buttons.\nRealistic suspension/ physics system / shockers.\nChange the color of the Car.\nReflective metallic surface of the car which will give it a realistic look.\nRealtime shadow of the car.\nDoor open / close animations.\nSwitch on / off the headlights of the car.\nLearn about ARKit plugin.\nAugmented Reality is the next big thing.\nSign up now to get a head start on others and really strengthen your portfolio.",
      "target_audience": [
        "Anyone who wants to learn How to make a drivable realistic car in Augmented Reality using ARKit."
      ]
    },
    {
      "title": "The Ultimate Hands-On Flutter & MVVM - Build Real Projects",
      "url": "https://www.udemy.com/course/flutter-dart-mvvm-design-pattern/",
      "bio": "Learn the Art of Building Modern Flutter Applications",
      "objectives": [
        "Cross platform development Using Google Flutter framework",
        "Implementing Flutter apps Using MVVM Design Pattern",
        "Networking and Consuming JSON API Using Flutter",
        "Building Flutter Maps App Using Google Maps API",
        "Retrieving NearBy Places Based on User's Location Using Google Places API",
        "Capturing Photos Using Phone Camera and Uploading Pictures to Custom Server",
        "Building a HackerNews Clone, displaying Articles and Comments for Users"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Tools, Editors and Framework Needed for this Course",
          "Exercise Files"
        ],
        "Understanding MVVM Design Pattern": [
          "What are Design Patterns?",
          "What is MVVM?",
          "Why MVVM?",
          "MVVM Architecture and Web APIs"
        ],
        "News App - Displaying News": [
          "What we will be building",
          "Registering with NewsAPI",
          "Creating NewsArticle Model",
          "Implementing Webservice to fetchTopHeadlines",
          "Creating NewsArticleList and NewsArticle View Models",
          "Populating Top Headlines, ChangeNotifier in NewsArticleListViewModel",
          "Displaying News in a ListView",
          "Another Method for Getting the Change Notifier Changes"
        ],
        "News App - Searching and Displaying News Details": [
          "Implementing Webservice fetchByKeyword Method",
          "Adding Search TextBox And TextEditingController",
          "Displaying Search Results on the Page",
          "Displaying Loading and Empty View",
          "Navigating to the News Article Details Screen",
          "Displaying News Details on a Details Screen"
        ],
        "Place Finder - Configuring and Displaying Google Maps": [
          "What we will be building",
          "Setting Up Google Cloud Platform Account",
          "Displaying Google Maps in Android App",
          "Displaying Google Maps in iOS App",
          "Enable Location Services for Android",
          "Enable Location Services for iOS",
          "Zooming to User's Current Location"
        ],
        "Place Finder - Finding Nearby Point of Interests": [
          "Enabling Google Places API in Google Cloud Console",
          "Testing the Google Places API",
          "Implementing Webservice to Perform Places Search",
          "Implementing and Mapping JSON to Models",
          "Implementing PlaceListViewModel and PlaceViewModel",
          "Adding TextField and Integrating ChangeNotifierProvider",
          "Adding Place Markers on the Map"
        ],
        "Place Finder - Displaying List and Performing Navigation": [
          "Toggling State of Show List Button",
          "Implementing PlaceList Widget to List all Places",
          "Displaying Images in PlaceList Widget",
          "Switching Map Types",
          "Launching Navigation from the Place Finder App"
        ],
        "City Care - Adding Incidents": [
          "What we will be building",
          "A Quick Tour of the Server",
          "Adding IncidentListPage and AddNewIncidentPage",
          "Adding Incident Model, IncidentListViewModel and IncidentViewModel",
          "Implementing Webservice Method to Save Incident",
          "Saving Incidents Using Provider in ReportIncidentViewModel",
          "City Care Server Code in Node"
        ],
        "City Care - Displaying Incidents": [
          "Implementing Webservice Method to Get All Incidents",
          "Updating IncidentListViewModel to Fetch All Incidents",
          "Displaying Incidents on the Page",
          "Adding Loading and EmptyView for the Incidents"
        ],
        "City Care - Uploading and Displaying Photos": [
          "Showing Menu to Choose from Photo Library or Camera",
          "Picking an Image from Photo Library Using Image Picker",
          "Downloading and Installing Camera Package",
          "Preview Camera Image on Android Emulator",
          "Capturing Photo from Camera and Displaying on Screen",
          "Uploading Image to the Server",
          "Displaying Image on the Incident List Screen"
        ]
      },
      "requirements": [
        "macOS Operating System",
        "Should have already installed Flutter on their machine",
        "Beginner level knowledge of Flutter and Dart is recommended"
      ],
      "description": "Google Flutter framework has taken the world by storm. Flutter allows developers to write a single codebase which targets both the iOS and Android devices. Flutter applications are fast and high performance and allows developers to quickly deploy apps for both platforms at the same time.\nIn this course, you will learn how to write Flutter apps using MVVM Design Pattern. You will learn how to create several different applications and write modular code, which is easy to understand, maintain and execute.\n\n\nCheck out the course outline below:\n\n\nUnderstanding MVVM Design Pattern\nIn this section, you will learn about the MVVM Design Pattern. This section will lay the foundational concepts which will be carried out throughout the course.\n\n\nNews App\nIn this section, you will learn how to build a complete News application. This application will integrate with NewsAPI and fetch the latest news to the user. You will learn how to implement the app using MVVM Design Pattern. You will also learn how to use the webview to display the details of the news.\n\n\nPlace Finder\nPlace Finder app allows users to search for their favorite restaurant near their location. In this section you will learn how to sign up and integrate your Flutter app with Google Maps API. You will list nearby places on the map and also display them in the list. And finally when the user selects, the app will launch either Google or Apple maps app to take the user to their destination.\n\n\nCity Care\nIn this section you will learn how to integrate camera and photo library in Flutter apps. You will also learn how to upload photos to a custom server and then display the data by fetching it from the server.\n\n\nHacker News App\nIn this section you are going to create Hacker News app using the Hacker News public API. You will learn how to fetch stories and associated comments from hacker news and display them in your app.\n\n\nHere are some reviews from my students:\nIt's really nice to find all of these hidden nuggets inside of each section. When you read the section header you think there is not much to the section but the instructor goes out of his way to bring in real life scenarios.\n\n\nIf you want to learn JSON decoding, encoding case by case, this is the course you have to take. I love the course because lecture planing is great.It is starting from beginner level, Mohammad teaches step by step and case by case and explanations are very clear. At the end you feel that you have mastered the whole subject.\n\n\nMohammad is a great instructor, I really like his courses.\n\n\nFinally I understood how encodable and decodable works!\n\n\nI really hope you enjoy the course and if you have any questions please don’t hesitate to contact me.\nEnjoy the course and start building Flutter apps!",
      "target_audience": [
        "Flutter developers who wants to learn how to implement MVVM Design Pattern",
        "Developers who wants to learn how to develop cross platform applications",
        "App Developers who wants to go independent and work on both platforms"
      ]
    },
    {
      "title": "Build Your First iPhone App - iOS 14 Apps Using Swift 5",
      "url": "https://www.udemy.com/course/build-your-first-iphone-app-ios-14-apps-using-swift-5/",
      "bio": "Create Apps and Submit Them to the App Store Using UIKit and Xcode 12 - Perfect Course for Complete Beginners",
      "objectives": [
        "Xcode",
        "Swift Programming",
        "TableViews",
        "CoreData (Mobile Database)",
        "Connecting with JSON APIs",
        "Designing with Storyboards",
        "Widgets",
        "App Clips",
        "Submitting to the App Store"
      ],
      "course_content": {
        "Introduction": [
          "Welcome!"
        ],
        "Xcode and Swift Basics": [
          "Xcode Tour",
          "Variables and Constants",
          "Strings and Ints",
          "Comments and Print",
          "Visual Design and Labels",
          "Storyboards and Errors",
          "Buttons and Actions",
          "If Statements",
          "Counting",
          "Source Code"
        ],
        "Next Steps for Swift and App Building": [
          "Math and Doubles",
          "Floats and Conversion",
          "TextFields",
          "Pulling Data from a TextField",
          "String Interpolation",
          "Booleans",
          "Source Code"
        ],
        "Emoji Dictionary - TableViews and Segues": [
          "Emoji Dictionary Preview",
          "Arrays",
          "TableViews",
          "Answering 2 Questions",
          "Arrays and TableViews",
          "Segues",
          "Passing Data",
          "Definitions",
          "Loops",
          "Source Code"
        ],
        "Object Oriented Programming with Swift": [
          "Functions",
          "Returning from a Function",
          "Classes",
          "Methods",
          "Inheritance",
          "Adding Classes to Our App",
          "Optionals",
          "Unwrapping Types",
          "Source Code"
        ],
        "Daily Journal - CoreData": [
          "Journal Walkthrough",
          "Date Pickers and Design",
          "Journal Entry Class",
          "Listing Entries",
          "CoreData",
          "Writing and Reading from CoreData",
          "Viewing and Deleting Entries",
          "Save on Changes",
          "Keyboard",
          "Designing Custom TableViewCells",
          "Dates",
          "Source Code"
        ],
        "Web APIs and JSON": [
          "APIs and JSON",
          "URLSession",
          "Codeable and Decoding",
          "Cell Design",
          "Downloading Images",
          "Source Code"
        ],
        "Submitting Your App to the App Store": [
          "Paid Developer Account",
          "Certificates and Profiles",
          "Uploading and App Icons",
          "Metadata and Submitting Your App"
        ],
        "iOS 14 Bonus - Widgets": [
          "Widgets",
          "Source Code"
        ],
        "iOS 14 Bonus - App Clips": [
          "App Clips",
          "Source Code"
        ]
      },
      "requirements": [
        "Must have a Mac computer"
      ],
      "description": "Welcome to my iOS 14 Course! If you're looking for a course that is fun and gets straight to the point, then this is the course for you. Apple released a TON of new stuff for developers at WWDC and this course will take you though everything you need to make awesome iOS 14 apps.\nOther mega courses on Udemy offer 40+ hours of video content, but I wanted to create a course that was more manageable and didn't include any fluff. In each video I dive straight into the topic, and don't waste your time going over things that you don't really need. I only focus on the essentials, and I give you hands-on practice so that you can easily master the things we are learning!\nThis course is designed to be taken over a two week period, with 1-2 hours dedicated to learning each day. This course is easy to commit to because you won't get overwhelmed with a mountain of content, and you don't need to quit your day job to learn how to code!\nOver the past four years I've taught over 200,000 people how to code, and I am a self-taught programmer so I know what it feels like to start from scratch. I care about your learning, but even more importantly... I care about you! I know your time is valuable, so I promise not to waste it.\nApps we create:\nCurrency Converter\nEmoji Dictionary\nDaily Journal\nAPI/JSON App\niOS 14 Topics:\nWidgets\nApp Clips\nFeel free to take a free preview of this course to see if it's a good fit for you. I am so confident that you will love my course. You have nothing to lose, so come join me and let's get started!",
      "target_audience": [
        "Beginners interested in making iPhone apps",
        "Students tired of learning from incomplete YouTube videos or tutorials"
      ]
    },
    {
      "title": "Xamarin & Firebase: Authentication and Firestore for Xamarin",
      "url": "https://www.udemy.com/course/xamarin-and-firebase/",
      "bio": "Create Android and iOS Apps that use Firebase Authentication and Cloud Firestore Services, and use Mobile DevOps (CI/CD)",
      "objectives": [
        "Source Control Basics with Git and GitHub",
        "Xamarin Forms Basics (XAML for UI Definition and C# for Code Behind Logic",
        "Using the MVVM Pattern in Xamarin Forms Apps",
        "Using Dependency Services in Xamarin Forms Apps",
        "Implement Firebase Authentication through Dependency Services",
        "Use Cloud Firestore databases in Xamarin Forms",
        "Mobile DevOps with App Center (Continous Integration and Continuous Delivery)"
      ],
      "course_content": {
        "Source Control with Git & Github Basics": [
          "Welcome!",
          "Initializing a Local Repository",
          "Commiting Changes to the Local Repository",
          "Working with Branches: Adding, Switching and Merging",
          "Remote Repositories with GitHub"
        ],
        "Xamarin Basics and the MVVM Pattern": [
          "Introduction to Xamarin: How to Get the Tools and What You Will Need.",
          "Installing the Xamarin Tools on Mac",
          "Installing the Xamarin Tools on Windows",
          "The Source code for this Section (available on Github)",
          "Creating a New Xamarin Project on Visual Studio 2019 (Windows & Mac)",
          "Introduction to XAML: The Language to Define the UI",
          "Code Behind: Using C# to Code the Logic for the Application",
          "Data Binding: Powerful XAML Feature to Enable MVVM",
          "The INotifyPropertyChanged Interface: Enabling View-ViewModel Communication",
          "The ObservableCollection<T> Class: The Ideal List for MVVM",
          "The ICommand Interface: How to React to User Interaction in MVVM"
        ],
        "Authentication with Firebase": [
          "The Register & Login User Interface",
          "Configuring our iOS App to use Firebase",
          "Configuring our Android App to use Firebase",
          "An Interface to Enable Dependency Services for Multiplatform Firebase Code",
          "The Android-Specific Implementation of Firebase Authentication",
          "The iOS-Specific Implementation of Firebase Authentication",
          "Using the Platform-Specific Implementation in Shared Code"
        ],
        "Cloud Firestore Databases": [
          "The App's Navigation: Adding the List and the \"Add New\" Page",
          "Cloud Firestore Setup & Dependency Services Interface",
          "Inserting to the Cloud Firestore Database (Adding Documents to the Collection)",
          "Testing the Insert Functionality on Android and iOS Devices",
          "Creating a ListView to List the Subscriptions",
          "The iOS Implementation for Reading Cloud Firestore Documents",
          "The Android Implementation for Reading Cloud Firestore Documents",
          "Creating and Navigating to a Details Page",
          "Updating Cloud Firestore Documents",
          "Deleting Cloud Firestore Documents"
        ],
        "Mobile DevOps with App Center: Continuous Integration and Continuous Delivery": [
          "Introduction to App Center: A Tool for Mobile DevOps",
          "Creating Android and iOS App Center Apps from Github",
          "Enabling Automatic Builds (Continuous Integration) in App Center",
          "Sign Android Builds to Enable Distribution",
          "Sign iOS Builds to Enable Distribution",
          "Continuous Delivery to Distribution Groups",
          "Installing the Android and iOS Apps on our Users' Devices",
          "Congratulations!"
        ]
      },
      "requirements": [
        "Some experience with Xamarin Forms is recommended, but the course also covers the basics.",
        "Some experience with Git & Github is recommended, but the course also covers the basics.",
        "A Mac will be necessary to build, test and deploy iOS apps, but alternatives are presented in the course."
      ],
      "description": "Welcome to the Xamarin & Firebase: Authentication and Firestore for Xamarin course, in which you will learn to Create Android and iOS Apps that use Firebase Authentication and Cloud Firestore Services, and use Mobile DevOps (CI/CD)\nI created this course because Mobile App Development is about so much more than just learning a language or a tool such as Xamarin.\nIt is about working in teams and have source control in your projects\nWorking with authentication services\nWorking with databases\nIt is also about delivering your app to your users, preferably automatically\nSo this course covers all of this and more. In this course, you will learn\nThe basics of Git & Github for version control\nThe basics of Xamarin Forms so you create native apps that share C# and XAML code\nPowerful Xamarin Forms features such as Data Binding and Dependency Services\nData Binding so that you use the MVVM architectural pattern\nDependency Services so that you implement platform-specific code and use it in the shared code\nFirebase authentication for registering and authenticating users with email and passwords\nCloud Firestore for real-time databases in the cloud\nThe basics of App Center so that you implement Continuous Integration and Continuous Delivery in your development process\nCI so that you create automatic —signed— builds of your code when you push new commits to Github\nCD so that you distribute the signed builds automatically to your users.\nWith 7+ hours of HD video, you will learn the step-by-step process of using each of these tools in your Xamarin development process.\nBy the end of this course, you will not only feel more comfortable using Xamarin to develop Android and iOS apps, but you will also have a complete arsenal of tools under your belt!\n\n\nDon't waste your time\nDon't waste your time looking through the entire internet for all the things you need to learn, spending weeks learning a tool just to figure out that there is another tool to learn. This course is designed to be self-contained so that everything that you need to know about developing Xamarin applications is here.\n\n\nWhy you should pick this course among many others?\nThis course is unique in the way that it covers so many tools individually. Sure if you watch the entire course you will learn all of them, but if right now you only want to learn one, you can do that too! And when you are ready to learn another tool, there is no need for you to go looking for another course, this one already covers it! Learn how to use Git and GitHub with your Xamarin apps, then how to create powerful Xamarin Forms apps with MVVM, then how to use Firebase Authentication, then how to use Cloud Firestore databases, and finally how to use Mobile DevOps with App Center, or one topic at the time! It is all in here.\n\n\nBy the way, I'm so confident that you'll learn so much in this course that I offer a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risks.\n\n\nSee you inside!",
      "target_audience": [
        "Xamarin Forms developers who want to implement Firebase authentication and Cloud Firestore in their apps",
        "Mobile Developers who want to get started with Xamarin and learn about Github, Firebase and Mobile DevOps in the process",
        "Anyone looking to start a Mobile Developer career and wants to learn the basics of it all (source control, databases, auth, and DevOps)"
      ]
    },
    {
      "title": "Build Great IOS Apps (Swift)",
      "url": "https://www.udemy.com/course/build-great-ios-apps-with-swift/",
      "bio": "Learn quick and fast by Building great iOS apps using swift",
      "objectives": [
        "Build great iOS apps",
        "Learn Swift",
        "Learn UIKit framework",
        "Build Twitter clone app",
        "Build Instagram clone app",
        "Push Notifications",
        "Remote Notifications",
        "Login in and Sign up View Contoller",
        "Design great app",
        "Autolayout and size classing",
        "in-App Purchased"
      ],
      "course_content": {
        "UIKit Framework": [
          "UIAlertView",
          "UIButton",
          "UILabel",
          "UITextField",
          "UIImageView",
          "UISegmentControl",
          "UIActionSheet",
          "UIActivityIndicatorView",
          "UIStepper",
          "UIWebView",
          "UINavigationBar",
          "UITabBar",
          "UITableView-Grouped",
          "UITableView",
          "Conclusion"
        ],
        "Parse Backend Online Server (Totally Free)": [
          "Introduction to Parse",
          "Create an application in parse",
          "Connect your app to Parse SDK"
        ],
        "Make Full Featured Twitter Clone App Written In Swift": [
          "Setup Xcode Project...Implement Function to Retrieve Data From Parse",
          "Adding Elements In UITableViewCell",
          "Creating a class to retrieve data from Parse",
          "Retrieve string data from Parse to Twitter clone app",
          "Generating Date and Time in Twitter Clone app and retrieve createdAt tweet",
          "Display UserName for a publisher who tweets",
          "Retrieve User's Profile image from Parse to Twitter Clone app",
          "Full Twitter Clone App Demo",
          "UPDATED Swift 1.2 & Parse 1.7.4 : Twitter clone app demo"
        ],
        "Xcode": [
          "Autolayout, size classing and constraints"
        ],
        "Code like a Pro": [
          "Embed Youtube video in Swift 1.2",
          "Dynamic cell height",
          "UIButton inside UITableViewCell"
        ]
      },
      "requirements": [
        "You should have OS X system, IOS device and Xcode",
        "Enrolled to Apple iOS program"
      ],
      "description": "I have an app called Yuppi built on Swift. It provides the simplest way to share photos and videos in moments and other people can collaborate also moment owner can set privacy groups. It's cool, elegant and simple user interface.\nI've been working so hard on making this app to be the next social network app so hopefully you can download it so you can give me your valuable feedback.\nCurrently Yuppi App is available on IOS 8+ only and soon will be available on android as well.\nIf you didn't download it yet, i encourage you to Download it Now. It's Free!!.\nTechnology is everywhere around us but none of us know to code !! This is disaster..\nI think everyone should know how to code because its only take few lines to make difference and touch people life.\nCoding its not about being smart or talent, its about ideas and stories telling millions of people about it.\n75 Billion Apps were already sold in the iOS App Store. If you ever wanted a chance to participate in this success, here is your chance.\nIn this course you are going to learn all the basics you need to know to create your own simple iOS applications using the new Swift programming language. After learning all about the basics of programming, you are going to build simple code for UIKit Framework which you are going to use to create awesome Apps. After getting in touch with many iOS User Interface components we are going to start using more advanced with Parse backend online database and integrate to our apps with powerful tools such that Push notifications, Retrieve Data, Upload data,Update Data and In-App purchased. The conclusion of this course is a real-life example that will help you connect all the dots and pieces of your newly acquired knowledge.",
      "target_audience": [
        "Have enough knowledge about Computer languages",
        "Students who are trying to learn new languages",
        "Students must have Passion and Motivated"
      ]
    },
    {
      "title": "Apple Watch Programming for iOS Developers - WatchOS 3 Apps",
      "url": "https://www.udemy.com/course/apple-watch-programming-for-ios-developers-watchos-3-apps-watchkit/",
      "bio": "Using Xcode 8 and Swift 3, learn how to make 3 complete WatchKit apps",
      "objectives": [
        "Make WatchOS 3 Apps"
      ],
      "course_content": {
        "Welcome": [
          "Thank You",
          "Get the Most out of This Course"
        ],
        "Time Tracker": [
          "Intro",
          "Sketch and Xcode Tour",
          "Tiny Little Storyboard",
          "Outlets and Actions",
          "Finishing the UI",
          "UserDefaults",
          "ClockIns and ClockOuts",
          "Timers",
          "Total Time",
          "Clean Up",
          "Outro"
        ],
        "Time Tracker Part 2": [
          "Intro",
          "Menus",
          "Delete the Data",
          "A New Interface Controller",
          "Table Basics",
          "Filling the Table with Our Data",
          "Pass the Dates",
          "Date Formatting",
          "Polish",
          "Outro",
          "Time Tracker Source Code"
        ],
        "BitPrice": [
          "Intro",
          "Sketch",
          "Design",
          "CoinDesk API",
          "JSON",
          "Polish",
          "Complications Basics",
          "Sample Template",
          "Live Update",
          "Large Complication",
          "Keeping Data Updated",
          "Outro",
          "BitPrice Source Code"
        ],
        "Distraction Journal": [
          "Intro",
          "Sketch",
          "FINISH ALL THE UI",
          "Distractions Table",
          "Watch Connectivity",
          "Communication is Live!",
          "CoreData",
          "Fill Up the Table",
          "Update in Realtime",
          "Polish the iOS App",
          "Watch Pickers",
          "Creating Notifications",
          "Permission",
          "Categories and Actions",
          "Responding to Actions",
          "Deleting Notifications",
          "Outro",
          "Distraction Journal Source Code"
        ],
        "Bonus": [
          "Bonus Lecture",
          "Thanks!"
        ]
      },
      "requirements": [
        "The Basics of iOS Programming",
        "Swift"
      ],
      "description": "Thank you for checking out my course :) \"Apple Watch Programming for iOS Developers\" will help you enter the exciting world of WatchKit. This course assumes you have some iOS programming experience and dives right into the specific tools you need to make WatchOS 3 apps.\n\nTopics we cover include:\nTables in WatchKit (surprising different from TableViews)\nNotifications\nComplications (have your app on the watch face!)\nSyncing Data Between Phone and Watch\nStandalone Apps\nTimers\nDesign Techniques Specific to Apple Watch\nIn this course, we'll be creating complete apps that you can install on your very own watch or upload to the App Store. For each app we make you will receive completed source code so that you can always check your work against mine as a reference.\n\nWhat makes Nick the right instructor?\nI have more than 10 iOS apps in the App Store which total over 300,000+ downloads\nSince the watch launched, I had a watch app in the App Store\nI've taught more than 23,000 other students in my conglomerate of highly rated iOS development Udemy courses\nI have personality! I keep things interesting for ya :)\nI would love to have you in the course. Take a look at the promo video and see you inside!\nAdditionally, I have made this course downloadable, so you can work through the class offline, making it as convenient as possible for you! Most instructors won't allow this, but I want you to be able to enjoy this course in whichever way is best for you :)",
      "target_audience": [
        "A great course for students who love project based learning",
        "If you are completely new to programming , this course is not for you"
      ]
    },
    {
      "title": "Learn Android Programming From Scratch - Basics",
      "url": "https://www.udemy.com/course/learn-android-programming-from-scratch-beta/",
      "bio": "A Fun Course For Learning Android Programming.",
      "objectives": [
        "By the end of the course you will be able to create Android applications based on your ideas",
        "Able to choose the best layout for your apps",
        "Learn the concept behind Android constructs",
        "Design your android app properly"
      ],
      "course_content": {
        "Introduction to Android Programming": [
          "Introduction to our course",
          "Course Summary",
          "Android Installation process",
          "A Hello World In Android",
          "Android App Lifecycle",
          "Activities in Android"
        ],
        "Activities And Intents": [
          "Activities in Detail",
          "Activities and Intents - Concepts",
          "Activities in Android"
        ],
        "User Interface Layouts and Controls": [
          "Layout in Android",
          "Layout and Control Discussion",
          "UI for Android"
        ],
        "List View and SQLlite": [
          "List Views",
          "List View Demo - Part 1",
          "SQLite and List Views",
          "List View Demo - Part 2",
          "List Views"
        ],
        "Services in Android": [
          "Services - Discussion",
          "Services - Part 1",
          "Services - Part 2",
          "Services - Part 3",
          "Services"
        ],
        "Multimedia and Google Play": [
          "Multimedia - Discussion",
          "Audio Playback - Example",
          "Video Playback - Example",
          "Google Play",
          "Multimedia Quiz",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "A PC or MAC machine with minimum 2GB RAM . SDK is completely free"
      ],
      "description": "The course provide an introduction to Android Programming and allows someone with a basic knowledge of programming to start creating Android Applications. It is a light course to cover fundamentals of Android. It will teach you the Android programming Paradigm and how to think while creating an Android program. We will cover topics such as Installation, Activities, Layouts, List Views, SQLite, Services Multimedia and Google Play.\nThe course is divided into 6 units covering each of the above topics. You will start with basic installation process and will move on to the first Android example which will outline the structure of Android Programs. You will then learn about the activities which forms the heart of Android application. Once you are clear with Activities and activity lifecycle you are ready to create small native applications of your own. You will then learn about Layouts for designing your UI and will learn it while creating sample applications along with it. You will then learn about the ListViews and SQLite for data persistence. The next unit will be about services which allows you to perform tasks in the background while UI activity is active on the screen. This unit will provide you enough examples to clarify your concepts for services. We will then move towards multimedia involving Audio and Video Playback. You will work on examples involving both of them. We conclude our course with a discussion on submitting your apps to Google Play.\nIt will be a fun learning course that is sure to help you get going with Android programming.",
      "target_audience": [
        "Anyone with basic knowledge of Java or any other programming language"
      ]
    },
    {
      "title": "Kotlin Java for Android App Development | Kotlin Android",
      "url": "https://www.udemy.com/course/learn-kotlin-java-develop-android-app-development-kotlin/",
      "bio": "Android App Development with Kotlin, Java and Android studio, improve your android development skills in Kotlin android",
      "objectives": [
        "Kotlin is popular for both Android developers and Java developers.",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Learn the most used operating system on the planet",
        "Learn Android App Development using the Kotlin programming language",
        "Learn the latest version of Android",
        "Android Studio",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "Start from scratch and become a professional Android App developer",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "Android app, android application development",
        "android",
        "kotlin",
        "android kotlin",
        "android app development with kotlin",
        "android application development",
        "android ecommerce app",
        "android game development",
        "app android",
        "android app design",
        "mobile app development",
        "mobile development",
        "android development",
        "What is Kotlin",
        "Kotlin Programming Language",
        "Kotlin Android Fundamentals",
        "Java Development Kit - JDK",
        "Android Studio",
        "Variables in Android Kotlin",
        "Kotlin Data Types",
        "Type Conversions in kotlin for android",
        "Arrays in The complete Android Kotlin Developer Course",
        "Operators in android app development kotlin",
        "Control Flow Statements",
        "Loops in Android App Development",
        "All concepts of Object-Oriented Programming",
        "kotlin java",
        "android studio kotlin",
        "kotlin for java developers",
        "java kotlin",
        "Proficiency in Java 11",
        "Obtain Core Java skills",
        "Essential Java basics",
        "What Java is and how it works",
        "Programming fundamentals with Java",
        "Java Development Kit - JDK",
        "You will learn to develop games using Java Programming Language and Android Studio",
        "Java is a programming language and platform initially developed by Sun Microsystems and now owned by Oracle.",
        "Java is an object-oriented programming (OOP) language, which means concepts or things are represented as “objects” that have data fields and methods.",
        "Java is a very versatile language. Several fields use Java, including Android app development, desktop applications that work on many operating systems, server.",
        "java",
        "java programming",
        "selenium",
        "selenium java",
        "java projects",
        "Oracle, the owner of the Java programming language, has the Oracle Certified Developer: Java SE 11 Developer program, which is easily the best certification.",
        "Java is a very popular language and has been for over 20 years. Because of its popularity, it’s built up a huge range of frameworks, toolkits, tutorials.",
        "Java developers have a huge number of career opportunities. Another pro of Java is platform independence.",
        "Java and JavaScript don’t have a lot in common, apart from the word Java. They are different languages, each with strengths and weaknesses."
      ],
      "course_content": {
        "Introduction to Kotlin Java for Android App Development | Kotlin Android": [
          "What You Will Learn In My Kotlin Course?",
          "Kotlin Overview",
          "Android Ecosystem",
          "Basic Programming Terms",
          "Project Files",
          "Documents",
          "FAQ about Learn Kotlin Java, Develop Android App Development | Kotlin",
          "Quiz"
        ],
        "Environment Setup in Android Studio Kotlin": [
          "Install Java on Windows",
          "Install Java on Mac",
          "Android Studio Installation - Part 1",
          "Android Studio Installation - Part 2",
          "Creating a New Project on Android Studio",
          "Android Studio Interface",
          "Quiz"
        ],
        "Fundamentals of Kotlin": [
          "First Kotlin Program",
          "Variables in Kotlin",
          "Data Types in Android Kotlin",
          "Type Conversions",
          "String Data Types",
          "Arrays in android app (kotlin)",
          "ArrayList",
          "Set",
          "Map",
          "Quiz",
          "Quiz"
        ],
        "Operators in Kotlin": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Unary Operators",
          "Equality and Relational Operators in ktln",
          "Conditional Operators in kotlin",
          "Operator Precedence in Kotlin",
          "The “rangeTo()” Function and “in” operator",
          "Console Input",
          "Quiz"
        ],
        "Control Flow Statements in Kotlin": [
          "If-Else Statement",
          "If-Else - If Ladder Statement, Nested If Statement",
          "Kotlin: When Statement",
          "Quiz"
        ],
        "Loops in Kotlin": [
          "Kotlin: For and For Each Loops",
          "Kotlin: While and Infinite Loop",
          "Kotlin: Do-While Loop",
          "Quiz"
        ],
        "Functions in Android Kotlin": [
          "Kotlin: Functions",
          "Types of Functions",
          "Quiz"
        ],
        "Kotlin: Object Oriented Programming (OOP)": [
          "Object and Class in Kotlin",
          "Access (Visibility) Modifiers",
          "Naming Convention",
          "Constructor - Part 1",
          "Constructor - Part 2",
          "Encapsulation",
          "Inheritance",
          "Function Overriding",
          "Abstract Classes",
          "Interfaces",
          "Quiz"
        ],
        "Introduction to Android App Development with Kotlin": [
          "Installing Android Virtual Device (AVD - Emulator)",
          "Enabling Virtualization (VT-x or AMD-V, SVM) in BIOS",
          "Installing Genymotion Emulator",
          "General Information About Gradle Build System",
          "Introduction to Manifest File in android app development",
          "Introduction to resources (Strings, Drawables etc)",
          "quiz"
        ],
        "Android Components in Kotlin": [
          "Layouts in Android App",
          "Constraint Layout in Android 11",
          "Textviews in Android App Development",
          "Buttons in Android",
          "Edittexts Android app",
          "ImageView in Android",
          "CheckBox in Android",
          "Radio Buttons in Android App Development",
          "Toggle Buttons in Android",
          "Spinner in Android App Development",
          "Creating Top App Bar (Toolbar - Action bar)",
          "Adding Menu Items to Toolbar",
          "quiz"
        ]
      },
      "requirements": [
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We prefered Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Watching the Android App Development course videos completely, to the end and in order.",
        "No prior android kotlin knowledge is required",
        "No Kotlin coding knowledge required",
        "Watching the course videos completely, to the end and in order",
        "Determination to learn and patience for Kotlin",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Desire to learn java projects",
        "Desire to learn Core Java",
        "Desire to learn selenium java",
        "Desire to learn Java and Android App Development",
        "No prior java programming knowledge is required"
      ],
      "description": "Hey there,\nWelcome to the \"Kotlin Java for Android App Development | Kotlin Android\" course.\nAndroid App Development with Kotlin, Java and Android studio, improve your android development skills in Kotlin android\n\nKotlin is popular for both Android developers and Java developers. Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language, OAK Academy has a top-rated course to help you achieve your goals.\nKotlin is a very new and up-to-date programming language. Kotlin android is accepted by Google as the official language for Android development. Therefore, it is a language that everyone who wants to be an android developer should know. In this course, we teach Kotlin programming language from beginner to advanced level, considering the importance of Kotlin.\nKotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices. Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.\nLearn core Java Programming with this core Java course. This java programming course will take you a more experienced level\nThis Java Programming online course is one of the most awesome OAK Academy courses which teach step by step and follow the methodology in introducing concepts and demos ( learn by doing ) to the students so that they can learn with ease Java and learn the core Java skills needed to apply for Java developer positions.\nOAK Academy's top-rated Java instructors specialize in a wide array of Java programming practices. Whether you need a basic introduction to Java and website building using Selenium WebDriver or are continuing your Android app developer education, OAK has you covered.\nLearn android, android app development, android development, android studio from scratch and become an android developer\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on  OAK Academy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n· Do you want to improve your career options by learning android?\n· Do you want to learn android app development from Scratch?\n· Do you want to learn android development from Scratch?\n· Do you want to be an android studio master?\n· Do you want to build your first app?\nIf your answer is “yes” , you are at the right place!\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nChances are, you’ve heard of Android many times, and Do u want to android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIf you don't know anything about the Kotlin, Java and Android Development and you want to improve yourself, this course is for you.\nIn this The complete Android Developer course with Java and Kotlin, you will learn;\n· What Kotlin is and how it works,\n· Programming Fundamentals with Kotlin,\n· Android Studio\n· Java Development Kit – JDK\n· Variables in android kotlin\n· Kotlin Data Types\n· Arrays in kotlin for android\n· Operators in android app development kotlin\n· Control Flow Statements\n· Loops in android studio kotlin\n· Functions\n· Kotlin for java developers\n· All Concepts of Object-Oriented Programming such as Class, Object, Constructor, Encapsulation, Inheritance etc.\n· What Java is and how it works,\n· Programming Fundamentals with Java,\n· Eclipse\n· Java Development Kit - JDK,\n· Java Runtime Environment – JRE,\n· Java Virtual Machine - JVM\n· All Concepts of Object-Oriented Programming\n· How To Use ‘Static’ Keyword and ‘Nested and Inner’ Classes\n· Super Classes and Sub Classes\n· Strings,\n· Wrapper Classes,\n· Throw and Throws\n· Exceptions,\n· Swing\n· Layouts and Grid Layout\n· Enum Types and more\n· Android Environment Setup - Download, install and configure the necessary software\n· Creating a New Project\n· Android Studio\n· Android Components\n· Components and Life Cycles\n· Publishing Your App on Google Play and more\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\nWhat skills do I need to be an Android Developer?\nAn Android developer works with the Android SDK (software development kit) and the Android operating system. They will need to understand the Android SDK, different versions of Android, and how these two things interact. An Android developer may need to know Java, Kotlin, C++, or all three languages and will need to understand the basics of SQL and XML. Java and Kotlin are programming languages used with Android, while SQL is used for database work, and XML is used for markup. Android developers should generally be competent programmers who understand both back-end and front-end development, emphasizing back-end or full-stack engineering. In terms of front-end knowledge, they should know the basics of UI (user interfaces) and UX (user experience). Android developers may work alone or in teams and may also need knowledge of project management strategies such as Agile.\nWhat is Android SDK and why is it important?\nAndroid SDK refers to the Android Software Development Kit. The Android SDK is a collection of tools that have been released and supported for the express purpose of creating Android software. Through the Android SDK, programmers can collect, create, and manage their code. It is a comprehensive development environment that is well-supported, not only by the Android team but also by its community. However, the Android SDK isn’t the only development environment available for Android technology. There are numerous solutions that will port programs out to the Android OS and Android-specific solutions such as Android Studio. Developers who are new to Android development will often start with the Android SDK, but they may decide that a different solution is ideal for them in the future. Android developers should have some experience with the Android SDK because it\nAt the end of this course, you will learn the Kotlin and Java programming languages and android app development in all details and you will have the necessary android development knowledge to be a good Android developer.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different languages on the OAK Academy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better Android developer. You will always have up-to-date content for this course at no extra charge.\nThis Android course takes you from absolute beginner core concepts, like showing you the free tools you need to download and install, to writing your very first Kotlin and Java program. You will learn the core Kotlin&java skills step by step with hands-on examples. If you are from the field and need a refresher this course will be a guide for you, too. Every time you come back to this course you will learn something new or improve yourself.\n\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\n· Seeing clearly\n· Hearing clearly\n· Moving through the course without distractions\nYou'll also get:\n· Lifetime Access to The Course\n· Fast & Friendly Support in the Q&A section\n· Udemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the \"Kotlin Java for Android App Development | Kotlin Android\" course.\nAndroid App Development with Kotlin, Java and Android studio, improve your android development skills in Kotlin android",
      "target_audience": [
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications using the Kotlin programming language",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "Anyone who would like to work from anywhere in the world",
        "Anyone who wants to learn the most up to date android",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "Anyone who is planning job transformation and want to become a Kotlin developer",
        "Anyone who wants to learn important subjects of kotlin android",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Those who want to develop an Android mobile application with Kotlin",
        "Who wants to improve their existing Android App Development Kotlin knowledge",
        "Anyone who are planning job transformation and want to become Java developer",
        "Anyone who wants to become a computer programmer like Java",
        "Those who want to develop applications using the Java programming language",
        "Those who want to improve their application development skills using Android studio and java programming language"
      ]
    },
    {
      "title": "Advanced iOS: Volume Two - All projects updated to Swift 5",
      "url": "https://www.udemy.com/course/practicalios11/",
      "bio": "Learn Core ML, Vision, ARKit, Drag & Drop, NFC reading, PDFKit, MusicKit, and more",
      "objectives": [
        "Work with Apple's newest API's"
      ],
      "course_content": {},
      "requirements": [
        "Xcode 10 is needed - Which is a free download from the App Store"
      ],
      "description": "Note: All finished projects and source code have been update to swift 5.0. So even though some lectures are shown using Swift 4.2, just reference the source code for any update you might need.\niOS gives us a whole range of powerful new tools for you to build intelligent apps, and this course helps you get started with them as quickly as possible: Core ML, Vision, ARKit, and more.\nMachine Learning: Take advantage of Core ML to deliver intelligent new apps that can proactively assist your users.\nARKit: Learn how to augment reality with slick interactive graphics thanks to Apple's new ARKit framework.\nDrag & Drop: Let users move data freely inside your app and others too using powerful new multi-touch gestures.\nPlus: NFC reading, PDFKit, Vision, MusicKit, and more!\nThis course is written by the award winning Swift programmer, Paul Hudson, it is from his best selling book, \"Advanced iOS: Volume Two\", made into a lecture style course, and these videos were made with his permission and support. Paul is the author of the Hacking With Swift series of tutorials, which is one of the most popular Swift coding sites online. Paul also has received high praise from the creator of the Swift language, Chris Lattner, for his outstanding method of teaching, and series of Swift tutorials. And working together with iOS developer Steve DeStefano, the Hacking with Swift series of programming training videos are simply the fastest way to learn how to code in the Apple eco-system.\nThis course incorporates the use of annotations, callouts, diagrams, highlighting, and deep explanations that help make complex subject matter, much easier to grasp, and guide you along the path of the code, each step of the way.\nPlease note: These are intermediate to advanced projects, and this course will not teach you the Swift language, or how to code, you should already have completed Paul Hudson's Swift tutorials at HackingWithSwift dot com, or gone through the Hacking With Swift beginner to pro course here on Udemy.\nAdvanced iOS: Volume Two includes seven new projects that teach some of the most powerful features in iOS, plus technique projects that deep-dive into smaller features:\n•  Project 1: Trade my Tesla Teach iOS how to evaluate the trade-in price of cars using machine learning.\n\nProject 2: Sightspotter Blend augmented reality with Core Location to help tourists find their way around a city.\n\nProject 3: Going Postal Create fun postcards using images, text, and colors, all powered by iOS's new drag and drop APIs.\n\nProject 4: Swift Sampler Learn to render PDFs with watermarks and interactive thumbnails, all using PDFKit.\n\nProject 5: Picture Protector Build an app that detects faces in photos and lets users interactively blur any they want.\n\nProject 6: Name that Tune Use MusicKit to fetch data from Apple Music and build a fast-paced two-player charts game.\n\nProject 7: Video X-Ray Let users record a video while the Vision framework silently detects and records all objects in the scene.\n\nAlong the way you'll learn all this and more:\nHow to use Core ML and the Vision framework to leverage machine learning in your own apps.\nBuilding both games and apps from scratch using ARKit's augmented reality technology.\nHow to integrate drag and drop into your apps using table views, collection views, and more\nThe all-new PDFKit framework, delivering fast and efficient PDF rendering on iOS.\nUsing the new depth-mapping APIs exposed through the iPhone camera.\nAutomatically detecting and blurring faces using the Vision framework.\nReading NFC tags using Core NFC.\nTaking advantage of the new MusicKit APIs to work with Apple Music.\nAnd more!\n\nIf you want to take advantage of some of the most advanced functionality provided in iOS, there's no faster way than the Advanced iOS series.",
      "target_audience": [
        "This course is meant for intermediate and advanced programmers as it does not teach the Swift language, or how to code"
      ]
    },
    {
      "title": "The Complete Flutter Development Bootcamp with Dart",
      "url": "https://www.udemy.com/course/flutter-bootcamp-with-dart/",
      "bio": "Officially created in collaboration with the Google Flutter team.",
      "objectives": [
        "Build beautiful, fast and native-quality apps with Flutter",
        "Become a fully-fledged Flutter developer",
        "Build iOS and Android apps with just one codebase",
        "Build iOS and Android apps using just one programming language (Dart)",
        "Build a portfolio of beautiful Flutter apps to impress any recruiter",
        "Understand all the fundamental concepts of Flutter development",
        "Become proficient in one of the fastest growing technologies"
      ],
      "course_content": {},
      "requirements": [
        "A Computer that has admin privileges",
        "Have 10GB of free space on your hard drive.",
        "All software we'll be using is free to download and install.",
        "Although you can build iOS apps on a Windows computer with Flutter, if you want to test it, you will need a Mac."
      ],
      "description": "Welcome to the Complete Flutter App Development Bootcamp with Dart - created in collaboration with the Google Flutter team.\nNow includes a brand new module on Flutter State Management!\nCovering all the fundamental concepts for Flutter development, this is the most comprehensive Flutter course available online.\nWe built this course over months, perfecting the curriculum together with the Flutter team to teach you Flutter from scratch and make you into  a skilled Flutter developer with a strong portfolio of beautiful Flutter apps.\nOur complete Flutter development bootcamp teaches you how to code using Dart and build beautiful, fast, native-quality iOS and Android apps. Even if you have ZERO programming experience.\nI'll take you step-by-step through engaging and fun video tutorials and teach you everything you need to know to succeed as a Flutter developer.\nThe course includes 28+ hours of HD video tutorials and builds your programming knowledge while making real world apps. e.g. Whatsapp, QuizUp and Yahoo Weather.\nBy the end of this course, you will be fluently programming in Dart and be ready to build your own Flutter apps and become a fully fledged Flutter developer.\nYou'll also have a portfolio of over 15 apps that you can show off to any potential employer.\nSign up today, and look forwards to:\nOver 28 hours of HD 1080p video content, everything you'll ever need to succeed as a Flutter developer.\nBuilding over 15 fully-fledged apps including ones that use Firebase Cloud Firestore, StreamBuilder, ListView, networking, external APIs and much much more.\nAll the knowledge you need to start building any app you want\n$8000+ Flutter development bootcamp course materials and curriculum\nFrom Beginner to Flutter Developer with Just One Course\nWe know that you're here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they're doing, you'd be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and we're always on hand to answer student questions.\nSo by the end of the course, you'll completely understand:\nFundamental Flutter concepts e.g. Stateful vs. Stateless Widgets, Widget tree, state management, animations, themes and much more.\nFundamental Dart concepts e.g. lists, maps, enums, loops, futures, streams, mixins, classes, and much more.\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, classes and protocols.\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\nData Structures: How to work with collections, such as Lists and Maps.\nSoftware Design: How to organise and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nNetworking: How to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nData Storage: How to use Firebase Cloud Firestore to act as a backend for your Flutter apps.\nAuthentication: How to use log in and register users for your Flutter apps.\nState Management: How to use setState, prop drilling, lifting state up, callbacks and the Provider package to manage app state.\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos on YouTube. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it and why over 35,000 students rated my courses 5 stars!\nDon't waste your money\nInside this course, you're getting exactly the same course materials and curriculum as our 12 week in-person programming bootcamp. Instead of spending $8000+ dollars and taking time off work, save loads of money by getting this course and do it at your own pace!\nDon't just take my word for it, see what my past students had to say about my courses:\n\"Angela is literally my favorite teacher. Ever. In the entire universe. She is hilarious and teaches in a lighthearted and fun way that is also very clear to understand. I instantly purchased this course as soon as I saw it was released because I know Angela delivers the highest quality educational content possible. 100% recommend this course (as well as every other course she's created). Thank you Angela for helping me as I make a career pivot into becoming a hybrid UX designer/mobile developer!\" - Jacob Pernell\n\"Angela is my favorite Udemy professor for coding courses. Her methods for building onto the material so that you're never progressing too fast or too slow make for a really engaging learning experience. She's thorough in her explanations, and uses fun projects to discuss the material. I had started a couple other Flutter courses before finding this one, and I've progressed more in 24hrs than I did in a week with the other courses. Would love an advanced Flutter course from Angela to tackle once I'm done with this one!\" - Jerome Llouche\n\"You will not find a better teacher than Angela. She does a wonderful job of encouraging you to learn swift the right way. I want to encourage everyone thinking about taking this class to get it, as it is the BEST programming class I've seen on anywhere and I've tried more than a few of them. If you are looking for an excellent swift programming course, stop there here because you have found it. You will learn Swift from the very beginning of programming all the way through making your own apps that you can upload to the App store.\" - Ian Hopjins\n\"SO GOOD!!! Retention rate is incredible because Angela does a great job in explaining and teaching every aspect of what we are doing. Most of the other instructors on Udemy put code on the screen and pretend nothing happened. This course is amazing! 5/5\" - Muhammad Ibrahim\n\"Angela is a spectacular teacher!\" - Marco Zanirato\n\"This course was terrific. Only after taking a few more courses from others that I realized how good this course was. This course taught me more than I was expecting, it provided great instructions and a lot of hands-on tasks to drill-in the concept.\" - Marc\n\"Best use of your money! I was a complete beginner but Angela made me a pro in weeks.\" - Burak Tunçbilek\n\"IT IS #1!!!!!!!!! Absolutely Amazing. The best iOS course i have ever taken. Angela explains everything the way it needs to be explained, so everything is easily understood. The concept of this course is built to make you learn, not just watch and repeat. Angela is highly educated and it is very much noticeable during the entire course. Again, it is fantastic. Thank you. Please create more courses!!!!!\" - Eduard Khachian\nAre you trying to choose between all the different Flutter courses on Udemy? Take a look at what students on my course had to say about this:\nI have revamped my expectation for what a 5 star course should be for Udemy. Angela, you're awesome! I already rated the course as 5 stars early on (at about 20% completion), but after completing roughly 70% of the course, I can say this is my favourite Udemy course as of today. Brilliant course Angela! - Alberto L\n\"I took a lot of courses on Udemy and elsewhere and non of them were as clear and perfectly paced as this one! Angelas approach is really awesome, deep and clear.\" - Žan Fras\n\"I have taken several iOS courses, so far this course had the best explanation on swift and xcode documentation. The lecturer is kinda humorous sometimes which make this course even more enjoyable.\" - Bryan Pukanda\n\"I have taken lots of courses on udemy and elsewhere for self learning and i can tell you with all the honesty this is one course which i did not want it to end. It is like one of those movies that you wish keeps going. Whatever concepts are covered were covered very beautifully and made learning quite simple. I got so many answers to Why? in this course like how closures work and why they work that way... why delegates work that way. Thank you so much for this course.\" - Arun Lakhera\n\"I compare this to another top iOS class on Udemy, but I think that this one beats it. The reason? Angela doesn't show you a plethora of material and then say that we will discuss this later, or say \"just do this. You will see why later.\" She goes into the reason for doing something before doing it.\"  - Clyde Addison\n\n\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's best Flutter development course.",
      "target_audience": [
        "If you have never programmed before, then take this course to learn Dart and build iOS and Android apps.",
        "If you know how to code, but are new to mobile development, then take this course to build apps with just one codebase.",
        "If you are a native app developer, then take this course to see how much time you can save building native-quality iOS and Android apps with Flutter.",
        "If you've tried Flutter before, then take this course to get a comprehensive curriculum that covers all the important aspects of Flutter development"
      ]
    },
    {
      "title": "Swift Essentials - Learn Swift 2.1 Step by Step",
      "url": "https://www.udemy.com/course/swift-learn-apples-new-programming-language-by-examples/",
      "bio": "Learn the basics of new language that will help you go on to programme on Apple iOS 9 and Mac OSX",
      "objectives": [
        "Video walkthroughs showing you how to use Swift",
        "Work with Xcode's new .playground file"
      ],
      "course_content": {
        "Welcome to Class!": [
          "Downloading Xcode",
          "Goals of the Class",
          "A Brief History of Swift",
          "Playgrounds and Your First Line of Code!"
        ],
        "Variables and Constants": [
          "Intro",
          "Xcode Tips",
          "Our First Variable",
          "Variables Can Change",
          "Our First Constant",
          "Constants Don't Change",
          "Emojis",
          "Challenge",
          "Solution"
        ],
        "Strings and Ints": [
          "Intro",
          "Strings",
          "Ints",
          "Interpolation",
          "Type Annotations",
          "Floats and Doubles",
          "Mixing Ints and Doubles",
          "Challenge",
          "Solution"
        ],
        "Comments and Print": [
          "Intro",
          "Single Line Comments",
          "Multi Line Comments",
          "Print",
          "Challenge",
          "Solution"
        ],
        "Booleans and If Statements": [
          "Intro",
          "Booleans",
          "If Satements",
          "Equal, Greater Than, Less Than",
          "Else",
          "And Or",
          "Challenge",
          "Solution"
        ],
        "Switches": [
          "Intro",
          "Switches",
          "Default",
          "Multiple Matches",
          "Interval Matching",
          "Challenge",
          "Solution"
        ],
        "Arrays": [
          "Intro",
          "Arrays",
          "Append",
          "Count",
          "Getting A Specific Item",
          "Remove and Insert",
          "Contains",
          "Challenge",
          "Solution"
        ],
        "Dictionaries": [
          "Intro",
          "Dictionaries",
          "Type and Empty Dictionaries",
          "Adding and Editing",
          "Removing",
          "Challenge",
          "Solution"
        ],
        "Sets": [
          "Intro",
          "Sets",
          "Insert and Remove",
          "Sort",
          "Contains",
          "Set Operations",
          "Challenge",
          "Solution"
        ],
        "Loops": [
          "Intro",
          "For Loops",
          "What Loop Are We On?",
          "For Loops and Arrays",
          "For Loops and Dictionaries",
          "While Loops",
          "Repeat While Loops",
          "Challenge",
          "Solution"
        ]
      },
      "requirements": [
        "A Mac computer that can run Xcode 7"
      ],
      "description": "Course updated December 2015!\nBecome one of the world's earliest Swift developers with this introductory course on Apple’s new programming language.\nInitial Setup and Swift Basics\nInts, Strings, Classes, and Collection Types\nControl Flow\nError Handling\n\n\nA Modern Language Evolved from Objective C\nSwift is a multi-paradigm programming language developed by Apple for use with iOS and OS X. Designed to replace Objective C, work began on Swift in 2010 and the first mobile app was debuted in June 2014 at the Worldwide Developers Conference. Despite its goal of replacing Objective C, Swift is capable of working alongside the more dated Objective C language while using the Cocoa and Cocoa Touch frameworks.\nSwift is built with the LLVM compiler included in Xcode 6 beta, and uses the Objective-C runtime, allowing Objective-C, Objective-C++ and Swift code to run within a single program. During it’s debut, Swift was described as “Objective C without the C” by Apple’s VP of Software Engineering Craig Federighi.\n\n\nContents and Overview\nThrough 140+ video lectures and 11 hours of content, you will be lead through setting up Swift locally, the basics of the language, how it compares to other common languages (including Objective C), and how to get started on new projects.\nThe course is designed to provide a comprehensive introduction to Swift, so that you can begin experimenting right away. Upon completion, you will understand the foundations of Swift code and will be able to develop custom applications. You will also get experience working with Xcode's new .playground file. By enrolling in this course you will be months ahead of other developers attempting learn the new Swift programming language by navigating Apple's 500-page instructional document.\nCourse material is regularly refreshed to include all of the newest updates and information, and since you’re granted lifetime access upon registering, you can rely on this course to keep your Swift skills on the cutting edge.",
      "target_audience": [
        "Objective-C developers wanting to learn Swift",
        "New programmers wanting to learn Swift"
      ]
    },
    {
      "title": "Build UICollectionView Apps with Swift & Xcode.",
      "url": "https://www.udemy.com/course/pinterest/",
      "bio": "Build the Pinterest Flow Layout, Drag & Drop Collection View Cells, and Learn EVERYTHING about UIView UICollectionViews.",
      "objectives": [
        "Everything UICollectionView",
        "Drag and Drop Cells / how to re-order cells in a collection view as a user feature",
        "how to build a slide menu",
        "UICollectionViewDelegate",
        "UICollectionViewDataSource",
        "UICollectionViewDelegateFlowLayout"
      ],
      "course_content": {
        "UICollectionView Review & Basics (optional section & beginner content.)": [
          "Project Overview.",
          "App Setup & UICollectionView Auto Layout.",
          "Cells & Utilizing CollectionViewDelegateFlowLayout and CollectionViewDataSource."
        ],
        "Building a complex Drag & Drop Grid": [
          "Project Overview.",
          "App Setup & UICollectionView Auto Layout.",
          "Creating Cells - UICollectoinViewDataSource & UICollectionViewDelegateFlowLayout",
          "UIImageVIew Content Mode & Auto Layout in Collection Cells.",
          "Calculating Cell Size Correctly! - Logical Error Fixes!",
          "UIDragSession - Utilize UICollectionViewDragDelegate to begin a drag session.",
          "Determining cell a drop zone with UICollectionViewDropDelegate & DropProposal",
          "Cell Drop with performBatchUpdates, insertItems and deleteItems at indexPath.",
          "Dragging cells out of bounds - Providing a case for every scenario.",
          "Project Outro."
        ],
        "Pinterest Layout PT 1": [
          "Project Overview.",
          "Setup a UICollectionView in a UIViewController.",
          "CV ContentInset & CollectionViewFlowLayout Minimum InterItem & Line spacing",
          "UIImageView - Placing an ImageView in our Collection Cells."
        ],
        "Custom UICollectionViewFlowLayout - Pinterest Layout PT 2": [
          "Project Overview & Subclassing UICollectionViewFlowLayout",
          "CONCEPT - understanding layoutAttributesForElements - UICollectionViewFlowLayout",
          "Calculating layout content size",
          "Creating collection view layout attributes inside of the prepare method",
          "Calculating cell X offset",
          "Fetching pinterest image height and width with protocols in Swift",
          "Correctly calculating image height",
          "Making our layout dynamic",
          "Pinterest Cell & Layout Fixes"
        ],
        "Pinterest Layout Part Two - Stack Views": [
          "Project Overview.",
          "Utilizing UIStackView in our PinterestCell.",
          "Adding a Custom UILabel to our horizontal stack view",
          "Icons Images for our Pinterest cell icon button."
        ],
        "Bonus": [
          "Bonus Lecture - iOS Course Codes."
        ]
      },
      "requirements": [
        "Xcode downloaded"
      ],
      "description": "You probably already know how to use a collectionView and if you don't, keep reading.\nWith a solid 3 focus curriculum, this course will teach you how to build UICollectionViews even if you have no experience, all while taking you the top of the UICollectionView skill pyramid.\nYou will learn how to build advanced layouts using  top Apple developer methods, protocols, and objects such as:\nUICollectionViewLayout, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, UICollectionViewDragDelegate, UICollectionViewDropDelegate, and even UICollectionViewDropCoordinator.\nAnd if this doesn't cover your needs, rest assured because your instructor, Maxcodes, periodically updates his courses based on review feedback, tweets, and personal messages.\nWelcome to Advanced UICollectionViews by Maxcodes\nBuild the iOS Pinterest Layout - Collection Views in Swift",
      "target_audience": [
        "iOS Developers, new or experienced, who want to master UICollectionViews."
      ]
    },
    {
      "title": "Flutter SQLite Database with full project",
      "url": "https://www.udemy.com/course/flutter-sqlite-database-full-project/",
      "bio": "Build a Flutter Database App with Flutter Bloc \"Cubit\" State Management, using localization to use multiple language...",
      "objectives": [
        "State Management",
        "Flutter Bloc \"Cubit\"",
        "SQLite \"SQFlite\"",
        "How to insert to database!",
        "Howt to delete from database!",
        "How to get data from database!",
        "Flutter Themes",
        "Splash Screen",
        "Localaization"
      ],
      "course_content": {
        "Introduction": [
          "Intro"
        ],
        "State Management": [
          "Cubit",
          "Cubit -2-",
          "Cubit -3-"
        ],
        "SqFlite Database": [
          "Introduction",
          "Create Database",
          "Insert to Database",
          "Get data from Database",
          "Update data from Database",
          "Delete data from Database"
        ],
        "Themes": [
          "Themes"
        ],
        "Ui design": [
          "Text Form Field Component",
          "Task screen",
          "Complete task screen",
          "Home Screen",
          "Splash Screen"
        ],
        "Localization": [
          "1st Localization",
          "2d Localization",
          "3d Localization"
        ],
        "Update data from database": [
          "Before seing Updating screen",
          "Update data on the screen",
          "Update data",
          "Change Theme Mode"
        ]
      },
      "requirements": [
        "Basics of Flutter and Dart"
      ],
      "description": "In this course you will learn the basics of Local Database \"SQLite\",\nWe will build a full flutter App, Using Local Database using SQFlte, to create our data base also to insert some data to our database and how to delete from our data base, how to use The flutter bloc in an easy way...\nBy Using SQFlite Package you can deal with :-\nHow to create your Database.\nHow to insert to Databasse.\nHow to delete from Database.\nHow to get from Database.\nBy using Cubit \"Flutter Bloc\" state management :-\nHow to create our States...\nHow to create our Cubit...\nHow to create Bloc Provider\nhow to get an object from our cubit to our screen...\nHow to consume your data to listen and build your project...\nBy using Localization :-\nHow to use multiple language and change from one to other.\nBy useing Themes (dark & Light Mode) :-\nHow to change your App from Light Mode to Dark Mode...\nAfter the course you can deal with SQFlite to create your own app with your own design with your own data...\nbut you have first to use your hands and do what i do!\nand understand everything i do to can deal with everything i do...",
      "target_audience": [
        "Everyone who intrested Flutter",
        "For every developer who wants to increase his information",
        "Beginner and Junior developer who wants to master flutter",
        "Developer who still needs more"
      ]
    },
    {
      "title": "Android Developer in 7 days | Step by Step",
      "url": "https://www.udemy.com/course/android-developer-in-7-days-step-by-step/",
      "bio": "Master Android Studio & Java || Build your first android app today!!",
      "objectives": [
        "Know about java in deep",
        "Make pretty much any Android app you like (your only limit is your imagination)",
        "Accelerate your carrier to android programmer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing netbeans -- Java best IDE",
          "Installing Android Studio",
          "Tour of android studio"
        ],
        "Day 1 : Basics of Java!! Get into journey": [
          "Variable Concept",
          "Priorities of Operations",
          "Increment & Decrement",
          "Build Logic",
          "If statements",
          "Switch Statements",
          "For Loop",
          "While ..... Do while loop",
          "Break .....Continue",
          "Function",
          "Local and Global Variable",
          "One Dimensional Array",
          "Two Dimensional Array"
        ],
        "Day 2 : Intermediate Java": [
          "Object Oriented Programming!!",
          "Making our first class!!",
          "Constructor!!",
          "Inheritance",
          "Encapsulation",
          "static keyword"
        ],
        "Day 3 : Advanced Java": [
          "Thread -- Theory",
          "Example of Thread!!",
          "Runnable",
          "Array list",
          "Linked-List"
        ],
        "Day 4 : Basics of android programming!!": [
          "xml basics",
          "Layout Basics -- Linear and Relative Layout",
          "Layout Basics --Table Layout",
          "Fragment",
          "Working with Intent!!",
          "Currency Converter App!!"
        ],
        "Day 5 : Advance Android Programming!!": [
          "ListView --Start advanced Android Programming",
          "Broadcast",
          "Working with Multi-Thread",
          "Using Runnable & Handler",
          "Services",
          "Work with notification!!"
        ],
        "Day 6 : Project : Tic Tac Toe game": [
          "TIc Tac Toe game : Making Layout",
          "Tic Tac Toe game : Play Game",
          "Tic Tac Toe game : Find Winner"
        ],
        "Secret of Programmer!!": [
          "Secret of Programmer!!"
        ]
      },
      "requirements": [
        "No previous programming experience is required! I will teach you what you need to know.",
        "You will need a computer running Microsoft Windows, or Linux, or a Mac running OS X."
      ],
      "description": "In this course, you'll learn the fundamentals of Android and build an app .  I will walk you through downloading the necessary software (Android Studio and the Java Development Kit), teach you the fundamentals of programming, and at the end we will build a two android apps.  You will accomplish all this in 7 days.",
      "target_audience": [
        "Anyone who wants to be an app developer: This is a complete course, just like my Complete Web, iOS and Apple Watch courses. It will teach you how to make money from your apps as well as how to code.",
        "Anyone who wants to learn to code: Java is a fantastic language to learn how to code with.",
        "Anyone who wants to learn android but afraid of contents"
      ]
    },
    {
      "title": "Instagram clone with Android Jetpack Compose, Firebase, MVVM",
      "url": "https://www.udemy.com/course/instagram_jetpack/",
      "bio": "Build a complete Instagram clone application using the latest Android Jetpack libraries and tools",
      "objectives": [
        "Jetpack Compose",
        "Instagram",
        "MVVM",
        "Coil",
        "Hilt",
        "Navigation",
        "Real world app example",
        "Complete Android project"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Requirements elicitation",
          "Functional requirements",
          "Gradle config",
          "Create project",
          "Connect to Firebase",
          "Emulators and images"
        ],
        "Authentication": [
          "MVVM and Hilt",
          "Navigation",
          "Signup screen UI",
          "Signup requirements",
          "Check unique username",
          "Error handling",
          "User profile creation",
          "Get user data",
          "Progress spinner",
          "Navigation",
          "Login screen UI",
          "Login screen functionality",
          "Auto login"
        ],
        "MyPostsScreen": [
          "Bottom navigation",
          "MyPosts Screen",
          "User Image Card",
          "Progress spinner"
        ],
        "Profile screen": [
          "Profile screen UI",
          "Save and update user info",
          "Upload image",
          "Logout functionality"
        ],
        "Post creation and display": [
          "New post image selection",
          "New post screen UI",
          "Create post",
          "Retrieve posts",
          "Displaying user posts"
        ],
        "Single Post Screen": [
          "Single post screen",
          "Single post UI",
          "Technical debt"
        ],
        "Search Screen": [
          "Search terms",
          "Search screen functionality",
          "Search screen UI",
          "Following and followers"
        ],
        "Feed screen": [
          "Feed screen functionality",
          "Feed screen UI",
          "Like post functionality",
          "Like animation",
          "Double tap functionality"
        ],
        "Comment screen": [
          "Create comment functionality",
          "Comment screen navigation",
          "Create comment UI",
          "Retrieve existing comments",
          "Display comments",
          "MyPostsScreen update"
        ],
        "Conclusion": [
          "Functionality review",
          "Conclusion"
        ]
      },
      "requirements": [
        "Jetpack Compose",
        "Android development"
      ],
      "description": "In this course we will build together an Instagram clone app from scratch.\nWe will use the most up to date Android development technologies. We will use Jetpack Compose, MVVM for the app architecture, Hilt for dependency injection, Jetpack Navigation for moving around in the app, Coil for image loading and Firebase for the backend API. We will even use Coroutines here and there.\nThis is a slightly more advanced course. It doesn't aim to teach you the basics of Jetpack Compose, but instead, how to use it in the context of a real project, to build a complete app from scratch. In this course we won't discuss the basics of Compose or any of the libraries we use. Instead we will focus on building an app. We will go step by step, line by line and build the application from scratch.\nWe will implement multiple Instagram specific and general features like:\nAuthentication using Firebase authentication\nProfile screens\nCreating posts\nFollow users\nLike posts\nComments\nSearch screen\nPost feed screen\nand more\nIf you've taken a Jetpack Compose course before and you know the basics, but you're not sure where to go from here, this is the course for you.\nThis is also an excellent project course for someone who wants to sharpen their Android development skills.\nSo sign up today and let's build an Instagram clone app with Jetpack Compose.",
      "target_audience": [
        "Beginner Android developers",
        "Intermediate Android developers"
      ]
    },
    {
      "title": "SwiftData - Declarative Data Persistence for SwiftUI",
      "url": "https://www.udemy.com/course/swiftdata-declarative-data-persistence-for-swiftui/",
      "bio": "Swiftly Persist & Query Data: Declarative Code for Seamless SwiftUI Integration",
      "objectives": [
        "The fundamentals of data persistence in Swift using SwiftData.",
        "How to use declarative code to easily persist data in their applications.",
        "Techniques for establishing and managing one-to-many relationships between data entities.",
        "Real-world application of SwiftData concepts through the development of a sample project."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files",
          "Resources",
          "IMPORTANT - Xcode 15 Beta 5 Updates"
        ],
        "SwiftUI State Management Updates": [
          "What has changed?",
          "@State",
          "@Bindable",
          "@Environment"
        ],
        "Getting Started with SwiftData": [
          "Saving a Movie",
          "Fetching and Displaying Movies",
          "Debugging SwiftData",
          "Deleting a Movie",
          "Updating a Movie",
          "Resources"
        ],
        "One-to-Many Relationship": [
          "NOTE: Xcode 15 Beta 6 Changes",
          "Understanding One-to-Many Relationship",
          "Adding Review Model and Configuring Relationship",
          "Saving Review",
          "NOTE: context.save vs context.insert",
          "Displaying all Reviews for a Movie",
          "Deleting Review",
          "FIX: Deleting Review"
        ],
        "Many-to-Many Relationship": [
          "Understanding Many-to-Many Relationship",
          "Adding Actor Model and Configuring Relationship",
          "Saving a New Actor",
          "Displaying All Actors",
          "Selecting Actors When Adding a New Movie",
          "Displaying Actors for a Movie",
          "Allowing Existing Actors to Select their Movies",
          "FIX - Adding Movie After Deleting Causes an Error"
        ],
        "Understanding Queries": [
          "IMPORTANT: Xcode 15 Updates for @Relationship and @Query",
          "Understanding @Query Property Wrapper",
          "Implementing Enum Based Sheets",
          "Creating the User Interface to Support Filter Screen",
          "Filter by Movie Title",
          "NOTE: Update about @Transient Macro",
          "Using @Transient Macro to Display Actors and Reviews Count for a Movie",
          "Filter by Reviews Count",
          "Filter by Actors Count"
        ],
        "Versioning/Migrations": [
          "What is Versioning?",
          "Xcode 15 Beta 5 - Changes",
          "Custom Migration (Unique Constraint on Movie Names)",
          "Lightweight Migration (Changing Property Names)"
        ],
        "Persisting Genre and Performing Filters Based by Genre": [
          "Understanding the Starter Project",
          "Implementing Genre Model",
          "Saving Genre",
          "Filtering Movies Based on Genre (Discovering Issues with Genre Enum)",
          "Filtering Movies Based on Genre (Using GenreId for Filter)",
          "Filtering Movies and Persisting State of the Filters"
        ],
        "Persisting and Displaying Transformable Properties in SwiftData": [
          "What we will be building?",
          "Implementing the Room Model",
          "Implementing UIColorTransformer",
          "Setting Up User Interface (ColorSelector)",
          "Persisting Room Using SwiftData",
          "Displaying All Rooms"
        ],
        "Testing": [
          "Understanding the Starter Project",
          "Setting Up Test Project and Writing Your First Test",
          "Writing Tests to Calculate Budget Total and Remaining Amount",
          "Setting Up Project for End-to-End Testing",
          "Writing End-to-End Test for BudgetCategory and Transaction Flow"
        ]
      },
      "requirements": [
        "Xcode 15 beta or above",
        "Knowledge of Swift language is required",
        "Knowledge of SwiftUI is recommended"
      ],
      "description": "Discover the power of SwiftData as you dive into the world of data persistence in Swift. This course provides an introduction to SwiftData, covering essential concepts such as declarative code, one-to-many relationships, many-to-many relationships, persistence, and querying. You will learn how to effortlessly persist data using SwiftData's intuitive approach. Explore the intricacies of establishing and managing relationships, enabling you to organize and associate data effectively. Unlock the ability to query and filter data with regular Swift code, unleashing the full potential of SwiftData. By the end of this course, you'll have a solid foundation in SwiftData, equipped with the skills to develop robust, data-driven applications with ease. Join now and master the art of data persistence and querying in Swift using SwiftData!\n\n\nWho is this course for:\n- Swift developers who want to expand their knowledge and skills in data persistence.\n- iOS app developers who want to learn how to effectively store and retrieve data in Swift applications.\n- Beginner developers looking to understand the fundamentals of data persistence and querying in Swift using declarative code.\n- Experienced developers who want to enhance their data handling capabilities and learn advanced techniques for querying and filtering data.\n- Developers interested in integrating data persistence seamlessly with SwiftUI for building robust and data-driven user interfaces.\n- Individuals seeking to develop efficient and scalable applications that rely on one-to-many relationships between data entities.\n- Programmers who want to leverage the power of SwiftData to streamline their development process and improve the efficiency of data management tasks.\n\n\nWhat will students learn in this course:\n\n\n- The fundamentals of data persistence in Swift using SwiftData.\n- How to use declarative code to easily persist data in their applications.\n- Techniques for establishing and managing one-to-many relationships between data entities.\n- Strategies for efficiently querying and filtering data using regular Swift code.\n- Integration of SwiftData seamlessly with SwiftUI for building data-driven user interfaces.\n- Real-world application of SwiftData concepts through the development of a sample project.\n- The skills and knowledge necessary to confidently develop robust and scalable applications with SwiftData.",
      "target_audience": [
        "Swift developers who want to expand their knowledge and skills in data persistence.",
        "iOS app developers who want to learn how to effectively store and retrieve data in Swift applications.",
        "Beginner developers looking to understand the fundamentals of data persistence and querying in Swift using declarative code.",
        "Developers interested in integrating data persistence seamlessly with SwiftUI for building robust and data-driven user interfaces."
      ]
    },
    {
      "title": "WebRTC Practical Course. Build Video Chat With React",
      "url": "https://www.udemy.com/course/webrtc-2021-practical-course-build-your-own-app-with-react/",
      "bio": "Learn WebRTC by creating React application with direct and group calls.",
      "objectives": [
        "Create own WebRTC implementation for video calls",
        "Add WebRTC data channels to exchange data",
        "Create video chat app in React",
        "How to switch to screen sharing in ongoing call",
        "How to create group call video chat",
        "How to create group call app with PeerJS"
      ],
      "course_content": {
        "Introduction to WebRTC": [
          "Course introduction",
          "Theory about WebRTC and how to establish peer-to-peer connection",
          "Course requirements and details",
          "Theory - What is WebRTC ?",
          "Theory - What is signaling server ?",
          "Theory - What is STUN server ?",
          "Theory - What is TURN server ?",
          "Theory - What is SDP ?",
          "Theory - What are ICE candidates ?",
          "Theory - How to establish direct connection between peers",
          "Preparing environment - Server",
          "Preparing environment - React",
          "React Router - Do not skip before next lecture !",
          "Adding routing to React application",
          "Adding Redux for state management",
          "Redux - why is so useful"
        ],
        "Creating VideoTalker dashboard": [
          "Creating login page",
          "Creating dashboard layout",
          "Preparing active users list",
          "Storing our active users in server",
          "Sending active users list to all clients",
          "Removing users from the server at disconnection",
          "Getting local stream",
          "Local stream - getDisplayMedia",
          "Creating local stream preview",
          "Adding call states for managing our components",
          "Creating dialogs related with direct calls"
        ],
        "WebRTC implementation for direct calls": [
          "Pre-offer - getting information if callee will agree for direct call",
          "Handle pre-offer and prepare pre-offer answer",
          "Handle pre-offer answer",
          "Call rejected - show rejected dialog",
          "Call rejected - test",
          "Creating Peer connection",
          "Peer connection",
          "Creating webRTC offer",
          "WebRTC offer",
          "Handling webRTC offer and creating webRTC answer",
          "WebRTC answer",
          "Handle webRTC answer",
          "Exchanging ICE candidates",
          "ICE candidates",
          "Checking peer connection state",
          "Displaying remote stream",
          "Creating conversation buttons",
          "Enabling/Disabling camera or microphone in active peer connection",
          "Screen sharing - add possibility to replace streams",
          "Add hang up possibility",
          "Direct calls minor changes",
          "Dashboard information"
        ],
        "Group Calls with PeerJs": [
          "Group calls introduction",
          "Connecting with peerJs server",
          "Creating rooms list",
          "Adding create room button",
          "Store created rooms in server",
          "Sending active rooms to all clients",
          "Adding create room functionality",
          "Joining group call",
          "Calling to new user in group call",
          "Preparing logic to display incoming streams",
          "Displaying incoming streams",
          "Leaving group call",
          "Closing group call as room creator",
          "Group calls minor changes"
        ],
        "WebRTC data channels": [
          "Introduction to WebRTC data channels",
          "Adding chat logic",
          "Creating small messenger"
        ],
        "Connecting to TURN server and deployment of our application": [
          "Preparing project for deployment",
          "Fetching TURN server credentials from Twilio",
          "Fetching TURN server credentials from our backend",
          "Deploying backend of our application",
          "Deploying frontend of our application",
          "Fixing bug with parsing TURN and STUN servers",
          "Testing connection with user connected to different network",
          "VideoTalker complete code"
        ],
        "What's next": [
          "What's next"
        ]
      },
      "requirements": [
        "React basic knowledge",
        "JavaScript basic knowledge"
      ],
      "description": "Learn WebRTC by creating project with React. We will go through all of the steps to create application with direct and group calls. We will write own WebRTC implementation for direct calls and we will use PeerJs for group calls to show how easily you can develop webRTC application. Only basic knowledge of React and Javascript is required. We will use also SocketIO as our signaling server for our application. After this course you will be able to create own application which will be using WebRTC. It does not matter if that will be the realtime communication game or video chat. You will now the process how to establish connection between two peers and more.\nIn our application we will use:\nWebRTC\nJavaScript\nSocketIO\nExpress.js\nNode.js\nReact\nRedux\nWe will keep React application simple and we will focus on things related with webRTC. Also you will get an knowledge how you can use SocketIO as your webSocket server.\nApp creating proccess:\nPrepare environment\nBuild frontend of our application in React\nConnect with SocketIO\nAdd our own WebRTC implementation for direct calls\nCreate group calls with Peer.js (library to make WebRTC implementation easier in small apps)\nAdd chat functionality to show how WebRTC data channels work\nI hope you will enjoy the course and after finishing it you will feel confident to start preparing and adjusting your own WebRTC implementation.",
      "target_audience": [
        "Programmers and students which wants to learn WebRTC and how it can be connected with React"
      ]
    },
    {
      "title": "iOS 8 and Swift - How to Make a \"Freaking\" iPhone App",
      "url": "https://www.udemy.com/course/ios-8-and-swift-how-to-make-a-freaking-iphone-app/",
      "bio": "Using Xcode and Swift, learn how to develop real world iOS apps for the App Store. No programming experience required!",
      "objectives": [
        "You will have apps you created in the App Store",
        "You will make apps that use GPS, the camera and the microphone",
        "You will make a social networking app",
        "By the end of this course, you will be an iOS developer"
      ],
      "course_content": {
        "Your First Freaking App": [
          "Welcome",
          "Download Xcode",
          "Turn Down For What!?",
          "Quiz Time"
        ],
        "Goals of the Class": [
          "Who Am I?",
          "Goals of the Class",
          "Tips for Success",
          "Steve Jobs",
          "Ready For A Quiz?"
        ],
        "*APP 1* - Emoji Dictionary": [
          "Source Code - Emoji Dictionary",
          "Intro",
          "App Idea",
          "Sketch It Out!",
          "Xcode Tour",
          "What's A View Controller?",
          "Storyboard To Code",
          "Our First TableView",
          "Data Source And Delegate",
          "Arrays",
          "Our Next View Controller",
          "Segues",
          "Navigation Controller",
          "Sending Over Emojis Part 1",
          "Sending Over Emojis Part 2",
          "Clean Up",
          "*CHALLENGE*",
          "Finishing Up"
        ],
        "Developer Account": [
          "Why Do I Need a Developer's Account?",
          "How to Make a Developer's Account"
        ],
        "*APP 2* - Soundboard": [
          "Soundboard Source Code",
          "Intro",
          "Sketchers, It's The \"S\"",
          "Setup The Table View",
          "Finish The Table View",
          "Playing Sound",
          "Sound Objects",
          "Sound View Controller",
          "Saving Sounds",
          "Setup Recorder",
          "Our First Recording",
          "Core Data Part 1",
          "Core Data Part 2",
          "Challenge",
          "Outro"
        ],
        "The App Store": [
          "App Store Tips",
          "Automatic Certificates",
          "Manual Certificates",
          "App IDs",
          "Provisioning Profiles",
          "iTunes Connect",
          "Metadata",
          "Uploading Your Build"
        ],
        "Swift": [
          "Intro",
          "What is Swift?",
          "Variables and Constants",
          "Strings and Ints",
          "If Statements and Booleans",
          "Arrays",
          "For Loops",
          "Dictionaries",
          "Functions",
          "Classes",
          "Outro"
        ],
        "Join the Developer Ecosystem": [
          "Intro",
          "Websites",
          "Groups and Events",
          "Outro"
        ],
        "*APP 3* - Patterns": [
          "Source Code - Patterns",
          "Intro",
          "Draw It Out",
          "List Our Patterns",
          "Creating Test Patterns",
          "Images in the Table View",
          "Pattern Details",
          "Pass the Pattern",
          "Zoom In Brah",
          "Make a Pattern",
          "Smile for the Camera"
        ],
        "Debugging": [
          "Intro",
          "What's Wrong / Google",
          "Breakpoints and Moving through Code",
          "Println",
          "Advanced Debugging",
          "Outro"
        ]
      },
      "requirements": [
        "You will need a Mac computer that runs the Mavericks or Yosemite operating system"
      ],
      "description": "We have a new class!\nSearch \"iOS 9 Adventure\" for the most up-to-date material.\n\nOr you can scroll down to the very bottom of this page, and find my iOS 9 class in More From Nick Walter.\nThis is the class I wish I had when I was trying to learn iOS development. I have a unique perspective to teach this class because I've been the newb that couldn't understand tutorials or blog posts. No prior programming experience is required.\n\nI will walk you through everything you need to start making apps. Getting Xcode (the program we use to make apps) setup and on your machine, making a developer account with Apple, and running the iPhone and iPad simulator on your mac.\nI firmly believe that the best way to learn is by doing. So we'll make a series of 8 killer apps, each app going into depth on teaching the most important iOS app development skills. Here is an overview of the apps we'll be making:\nApps that...\n...record audio with the microphone\n...use the front and rear cameras on iOS devices\n...leverage game principles (FLAPPY BIRD clone)\n...connect with Twitter\n...use GPS information\n...connect with PARSE to make a social network\n...use Bluetooth\n...and more\nOnce each of these apps are built, I'll teach you everything you need to know to submit these apps to the App Store. We'll also cover how to make money in iOS, and how you can continue to stay in the loop as an iOS developer and keep up with the latest and greatest. These topics could be a whole class in and of itself!\nWhat makes me the right teacher?\nI have 9 iOS apps in the App Store which total over 300,000+ downloads\nI teach more than 17,000 other students in my conglomerate of highly rated Udemy courses\nI use an energetic and engaging course style that involves students. I guess you could say, I'm far from a robot… and it should be entertaining :)\nI have been doing iOS development for 4+ years\nWhen I was first learning iOS development, I was often confused by wordy blog posts and tutorials. I'll never talk over your head.\nI created the first Udemy Swift course and also teach the highly rated “Apple Watch - Go From Newbie to Pro by Building 15 Apps\" course.\nWho is this class for?\nPeople who want to make apps. I will not be teaching wordy or complicated computer science philosophies. I will be teaching you how to make apps that you can play with, share with friends & family, and offer to the world!\nBeginners. You don't need any programming experience to take this class. I have been the absolute beginner before and I want to help you.\nThose programmers who are new to iOS 8 or Swift. Dive in with your prior experience and move more quickly, on to become an impressive iOS developer.\nEntrepreneurs who have an idea for an app. Don't pay somebody thousands to build your app. Do it yourself. Having the ability to create something you can think of is extremely powerful.\nCareer development professionals who want to earn money professionally via contract work, consulting, full-time employment, and so forth",
      "target_audience": [
        "No programming experience required",
        "Someone who hasn't had any luck with other tutorials",
        "Someone who doesn't care about the science and just wants to make A FREAKING APP"
      ]
    },
    {
      "title": "ARCore and Sceneform Masterclass for Android",
      "url": "https://www.udemy.com/course/arcore-and-sceneform-masterclass-for-android-q/",
      "bio": "Learn How to Make Powerful Augmented Reality Apps in Kotlin to Keep up With the Rapidly Changing Tech World.",
      "objectives": [
        "Make any kind of AR App for Android",
        "Select and place your own 3D models in your AR scene",
        "Transform models by using simple touch gestures",
        "Taking photos of your AR scene",
        "Recording videos of your AR scene",
        "All kinds of new terms regarding AR (WorldSpace, LocalSpace, Trackable, Quaternion, Pose, etc...)",
        "How to detect pre-defined images in real life to spawn your models on them",
        "How to use the arcoreimg tool to generate augmented image databases",
        "How to detect faces in your AR scene to apply snapchat-like filters on them",
        "How to animate 3D models in AR",
        "How to let models move through the AR space",
        "How to handle all kinds of 3D rotations and transformations",
        "How to use the ObjectAnimator class"
      ],
      "course_content": {
        "Introduction": [
          "What Will You Get With This Course?",
          "How to Use This Course? (IMPORTANT!)"
        ],
        "Project Setup": [
          "Creating Our AR Project",
          "Running AR Apps in the Emulator"
        ],
        "Try-Out-Furniture App": [
          "Creating the Layout",
          "Making Our BottomSheet Work",
          "Importing 3D Furniture Models",
          "Showing Models in the RecyclerView",
          "Selecting Models from the RecyclerView",
          "Loading Models from App Resources",
          "Adding Models to Our AR Scene",
          "Spawning Models by Double Tapping",
          "Make ViewNodes Always Look at the User",
          "Taking Photos of Our AR Scene",
          "Saving Photos in API 29+",
          "Requesting External Storage Permission",
          "Recording Videos of Our AR Scene (Part 1)",
          "Recording Videos of Our AR Scene (Part 2)",
          "Recording Videos of Our AR Scene (Part 3)",
          "BUG FIX - Images and Videos don't appear in Gallery on API Level < 28",
          "How to Improve This App?",
          "Augmented Reality Basics"
        ],
        "Applying Snapchat-like Filters on Your Face - Augmented Faces App": [
          "Setting up the AR Fragment",
          "Importing Face Model and Texture",
          "Loading Model and Texture",
          "Detecting Faces and Applying the Filter",
          "Augmented Faces Basics"
        ],
        "Summoning Pokémon on Our Books! - Augmented Images App": [
          "Letting the User Choose an Image for the Scan",
          "The arcoreimg Tool",
          "Using a Pre-Created Image Database",
          "Importing the Pokémon Model",
          "Creating Our Custom Node Class",
          "Animating the Pokémon",
          "Scanning the Environment for Your Images",
          "Augmented Images Basics"
        ],
        "Let Star Wars Spaceships Fly Through Your House! - Animating 3D Models": [
          "Creating Our Own Custom Animated Node",
          "Importing the Star Wars Models",
          "Creating the Spaceship Class",
          "Loading and Adding Spaceships to Our AR Scene",
          "Letting Spaceships Fly Around the User",
          "Object Animation Basics"
        ],
        "BONUS": [
          "Loading 3D Models at Runtime from Firebase Storage"
        ]
      },
      "requirements": [
        "Knowing the basics of Android Development with Kotlin"
      ],
      "description": "______________________________________________________________________________________________________________________________________________\nDISCLAIMER: The Sceneform plugin that is needed for this course is not available and will not be available for Android Studio 4.1 and higher. If you a version below that, you can take this course, otherwise you can't.\n______________________________________________________________________________________________________________________________________________\nWelcome to the World of Augmented Reality!\nLet it be an app to...\n...test furniture in your house\n...detect popular attractions to display additional information\n...try on clothes from online shops\n...apply funny filters on people's faces\nAll this stuff that so much sounds like future is becoming more and more reality. To keep up with the rapidly changing tech world, you need to be constantly learning new technologies. Augmented Reality is one of those highly trending technologies that especially takes over the mobile market.\nThis course starts to give you the perfect introduction to Augmented Reality with Android and gets more advanced while you follow through it. I designed it in a way that you only need basic knowledge about Android Development with Kotlin to dive into it.\nEvery single line of code that is not trivial will be explained!\n\n\nWhat do you get with this course?\nThis course will contain the complete source code for every single lesson, so you don't need to worry about encountering an error and not being able to continue that part of the course. You can just visit my GitHub and select the corresponding lesson to get the source code with which you can easily continue.\nYou will get a complete cheat sheet for all the important new AR terms mentioned in this course. Of course, I will explain them in very detail in the course, but if you encounter them again and want to quickly look up what they meant, you can easily do that with this cheat sheet.\nAlso, after each section, you will get a quiz to solidify what you have just learned.\nOf course, you will get all the 3D graphics, textures and website links I use in this course. However, feel free to choose your own ones.\nWhat will we make together in this course?\nIn the first part, you will learn how to set up Android Studio so you're ready to use AR. I will also show you how you can easily test your AR apps on your Android Emulator, so you don't always have that annoying cable plugging for USB-Debugging.\nIn the second part, you will understand all the basics of Augmented Reality. We will build a real app with which you can try out furniture 3D models in your own house. Of course, you can use your very own models here and also decide how many models you want to include in that app. In this app you will learn how to place 3D objects in the AR scene, move them, rotate them, change their size and delete them. And that is not enough! You will also learn how you can easily take pictures and videos of your AR scene. Moreover, you will get familiar with 3D specific terms like WorldSpace, LocalSpace, Vector3, Quaternions and more.\nThe third part covers a cool app that will apply a funny fruit filter on faces your phone's camera detects. This is very similar to Snapchat or Instagram. You will be able to use your very own filter and graphics here.\nIn the fourth part, all the Pokémon fans out there can be excited! We will detect pre-defined real life images that will automatically be detected in the app to let a cool animated Pokémon spawn on them! In my example, I spawn the model on book covers, but you can choose any surface that has some uniqueness and can therefore be recognized. You will be able to move the book around and carry your very own personal Pokémon through your house.\nFinally, in the last part of this course, you will let Star Wars spaceships fly around your house! The intention of that app is to teach you how to animate 3D models in the AR scene and let them fly around you. In this last part, you will get a deeper understanding of 3D calculations with Vectors and Quaternions to implement your very own behaviour of moving.\nAnd that is not enough! You will also get a bonus part in which I show you, how we can dynamically load 3D models remotely from Google Firebase. You will be able to choose any URL that leads to a 3D model and download it at runtime in your app to show it. I use Firebase for that because it is very popular in the world of Android, but feel free to use your own sources.\n\n\nLet's not longer wait and dive into the world of Augmented Reality together!",
      "target_audience": [
        "Android Developers who want to get a deep understanding of Augmented Reality"
      ]
    },
    {
      "title": "Machine Learning for Flutter - The Complete Mobile ML Guide",
      "url": "https://www.udemy.com/course/machine-learning-use-in-flutter-the-complete-guide/",
      "bio": "Most Comprehensive Flutter Machine Learning Course Available Online - Build 20+ Flutter ML and AI Apps - Flutter ML",
      "objectives": [
        "Train Custom Machine Learning Models for Flutter",
        "Use of Machine learning models with images from gallery and camera in Flutter",
        "Use of Machine Learning models with live camera footage in Flutter",
        "Use of Tensorflow lite models in Flutter App Development",
        "Train Custom Machine Learning Models for Image Classification in Flutter",
        "Train Custom Machine Learning Models for Object Detection in Flutter",
        "Training Machine Learning models for Flutter Applications",
        "How to integrate Google ML Kit in Flutter Applications",
        "Image classification in Flutter With Images & Videos",
        "Pose Estimation in Flutter With Images & Videos",
        "Image labeling in Flutter With Images & Videos",
        "Object Detection in Flutter With Images & Videos",
        "Barcode Scanning in Flutter With Images & Videos",
        "Face Detection in Flutter With Images & Videos",
        "Text Recognition in Flutter With Images & Videos",
        "Text Translation and Language identification in Flutter",
        "Building Machine learning based Realtime Flutter Applications",
        "Machine Learning models use in Flutter to build Smart Android and IOS Applications",
        "Recognize Handwritten Text in Flutter",
        "OCR in Flutter to scan images of documents",
        "Smart Reply Suggestions Flutter Application"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Setup for MacOS": [
          "Install the Flutter SDK",
          "Install Android Studio",
          "Install and Setup XCode",
          "Creating A Flutter Project and Installing in IOS Simulator",
          "Install the Android Emulator"
        ],
        "Setup for Windows": [
          "Installing Flutter on Windows",
          "Installing Android Studio",
          "Creating Android Virtual Device"
        ],
        "Choose Images from Gallery or capture Images using Camera in Flutter": [
          "Setting Up a new Flutter Project and Creating Application GUI",
          "Adding the Library and setting configurations for Android & IOS",
          "Choosing Images From Gallery In Flutter",
          "Capturing Images using Camera in Flutter",
          "Overivew"
        ],
        "Displaying Live Camera Footage in Flutter": [
          "Creating new Flutter project and Adding library",
          "Displaying Live Camera Footage in Flutter",
          "Getting Frames of Camera Footage One by One in Flutter",
          "Camera Package Overview"
        ],
        "Image Labeling / Classification in Flutter for Android & IOS": [
          "Flutter Image Labeling Section Introduction",
          "Setting up the Image Labeling With Images Flutter Project",
          "Adding Library in Flutter and Setup for Android and IOS",
          "Performing Image Labeling in Flutter With Images",
          "Showing ML models results on Screen to the User in Flutter",
          "Image Labeling with Images in Flutter Overview",
          "Building GUI of Image Labeling with Images Flutter Application",
          "Making Image Labeling Results Look better in Flutter",
          "Flutter Image labeling live feed application testing"
        ],
        "Realtime Image Labeling in Flutter": [
          "Setting up Real Time Image Labeling Project in Flutter",
          "Setting up Image Labeling Library for Android & IOS in Flutter",
          "Converting Camera Frames and Processing them one by one in Flutter",
          "Passing Frames on Image Classification model and Getting Results in Flutter",
          "Building GUI of Realtime Image Classification Flutter Application",
          "Showing Frame Image on Camera Footage in Flutter"
        ],
        "Barcode Scanning in Flutter for Android & IOS": [
          "Flutter Barcode Scanning Section Introduction",
          "Setting up Barcode Scanner Flutter Application",
          "Adding the library in flutter and creating barcode scanner",
          "Flutter Barcode Scanning code",
          "Barcode Scanning with Images in flutter overview",
          "Setting up Realtime Barcode Scanning Flutter Application Project",
          "Performing Barcode Scanning with frames of live camera footage in flutter",
          "Flutter Barcode Scanning Live feed flutter Application Testing",
          "Barcode Scanning Live Feed Flutter App Overview"
        ],
        "Text Recognition in Flutter for Android & IOS": [
          "Flutter Text Recognition Section Introduction",
          "Importing Starter code for Flutter Text Recognition",
          "Performing Text Recognition With Images in Flutter",
          "Exploring Structure Of Recognized Text in Flutter",
          "Text Recognition In Flutter With Images Overview",
          "Setting Up Realtime Text Recognition Application In Flutter",
          "Performing Text Recognition With Frames Of Live Camera Footage In Flutter",
          "Drawing Rectangles And Recognized Text On Screen in Flutter",
          "Testing Realtime Text Recognition Flutter Application",
          "Drawing Rectangles Around Each Line Of Detected Text in Flutter",
          "Testing Realtime Text Recognition Flutter Application",
          "Realtime Text Recognition Flutter Application Overview"
        ],
        "Face Detection in Flutter for Android & IOS": [
          "Flutter Face Detection Section Introduction",
          "Setting Up Face Detection With Images Flutter Project",
          "Adding the Library and Creating face detector in flutter",
          "Performing Face Detection In Flutter With Images",
          "Drawing Rectangles Around Detected Faces in Flutter",
          "Drawing Facial Contours On Detected Faces in flutter",
          "Drawing Facial Landmarks in Flutter",
          "Face Classification In Flutter With Images",
          "Face Detection In Flutter With Images Overview",
          "Setting Up Realtime Face Detection Flutter Project",
          "What we have done so far in flutter",
          "Creating Face Detector in flutter for realtime face detection",
          "Drawing Rectangles Around Detected Faces in flutter In Realtime",
          "Face Detector Painter class in flutter",
          "RealTime Face Detection flutter application testing",
          "Drawing Facial Contours in flutter In Realtime",
          "RealTime Facial Contours Detection Testing in flutter",
          "RealTime Face Detection In Flutter Overview",
          "Flutter Firebase ML Kit Quiz"
        ]
      },
      "requirements": [
        "Anyone who knows to develop Hello World Application in Flutter"
      ],
      "description": "Note: Lectures and Resources are updated in April 2024\nWelcome to the Machine Learning for Flutter - The Complete Flutter ML Guide\nCovering all the fundamental concepts of using ML models inside Flutter applications, this is the most comprehensive Google Flutter ML course available online.\nThe important thing is you don't need to have background working knowledge of Machine learning and computer vision to use ML models inside Flutter and train your custom machine learning models.\nStarting from a very simple example course will teach you to use advanced ML models in your Flutter ( Android & IOS ) applications. So after completing this course, you will be able to use both simple and advanced Tensorflow lite models along with a Firebase ML Kit in your Flutter ( Android & IOS ) applications.\nWhat we will cover in this course?\nLearning the use of existing machine learning models in Flutter (Android and IOS) applications\nLearn to train your own custom machine-learning models and build Flutter applications\nTrain Machine Learning models on Custom datasets for Image Classification and object Detection\nChoosing images from the gallery and capturing images using the camera  in Flutter\nDisplaying live camera footage and fetching frames of live camera footage in Flutter\nImage classification with images and live camera footage in Flutter (Android and IOS)\nObject Detection with Images and Live Camera footage in Flutter (Android and IOS)\nImage Segmentation to make images transparent in Flutter (Android and IOS)\nBarcode Scanning in Flutter to scan barcodes and QR codes\nPose Estimation in Flutter to detect human body joints\nText Recognition in Flutter to recognize text in images\nText Translation in Flutter to translate between different languages\nFace Detection in Flutter to detect faces, facial landmarks, and facial expressions\nSmart Reply in Flutter\nDigital Ink Recognition in Flutter\nLanguage Identification in Flutter\nTraining image classification models for Flutter (Android and IOS) applications\nTraining object detection models for Flutter (Android and IOS) applications\nRetraining existing machine learning models with transfer learning for Flutter (Android and IOS) applications\nUsing our custom machine learning models in Flutter (Android and IOS) applications\nCourse structure\nWe will start by learning about two important libraries\nImage Picker: to choose images from the gallery or capture images using the camera in Flutter\nCamera: to get live footage from the camera frame by frame in Flutter\nSo later we can use a computer vision model with both images and live camera footage in Flutter\nThen we will learn about the Firebase ML kit and the features it provides. We will explore the features of the Firebase ML Kit and build two flutter applications using each feature.\nThe flutter applications we will build in that section are\nImage labeling Flutter application using images of gallery and camera\nImage labeling Flutter application using live footage from the camera\nBarcode Scanning Flutter application using images of gallery and camera\nBarcode Scanning Flutter application using live footage from the camera\nText Recognition Flutter application using images of gallery and camera\nText Recognition Flutter application using live footage from the camera\nFace Detection Flutter application using images of gallery and camera\nFace Detection Flutter application using live footage from the camera\nObject Detection Flutter application using images of gallery and camera\nObject Detection Flutter application using live footage from the camera\nSmart Reply Flutter Application to generate smart reply suggestions in chat applications\nDigital Ink Recognition Application to Recognize handwritten text\nEntity Extraction Flutter Application to extract different entities from text\nPose Detection Flutter application using images of gallery and camera\nPose Detection Flutter application using live footage from the camera\nText Translation Flutter Application to translate between any two language\nLanguage Identification Flutter Application to identify the language of text\nAfter learning the use of Firebase ML Kit inside Google Flutter (Android& IOS) applications we will learn the use of popular pre-trained TensorFlow lite models inside Google Flutter applications. So we explore some popular machine learning models and build the following Google Flutter applications in this section\nImage classification Flutter application using images of gallery and camera\nImage classification Flutter application using live footage from the camera\nObject detection Flutter application using images of gallery and camera\nObject detection Flutter application using live footage from the camera\n\n\nAfter learning the use of pre-trained machine learning models using Firebase ML Kit and Tensorflow lite models inside Flutter ( Dart ) we will learn to train our own Image classification models without having any background knowledge of Machine Learning. So we will learn to\nGather and arrange the data set for the machine learning model training\nTraining Machine learning on some platforms with just a few clicks\nSo in that section, we will\nTrain a dog breed classification model for Flutter\nBuild a Flutter ( Android & IOS ) application to recognize different breeds of dogs\nTrain Fruit recognition model using Transfer learning\nBuilding a Flutter ( Android & IOS ) application to recognize different fruits\n\n\nSo the course is mainly divided  into three major sections\nFirebase ML Kit for Flutter\nPretrained TensorFlow lite models for Flutter\nTraining image classification models for Flutter\nIn the first section, we will learn the use of Firebase ML Kit inside the Flutter dart applications for common use cases like\nImage Labeling in Flutter with Images and live camera footage\nBarcode Scanning in Flutter with Images and live camera footage\nText Recognition in Flutter with Images and live camera footage\nFace Detection in Flutter with Images and live camera footage\nText Recognition Flutter with Images and live camera footage\nObject Detection Flutter application with Images and live camera footage\nSmart Reply Flutter Application to generate smart reply suggestions in chat based flutter applications\nDigital Ink Recognition Application to Recognize handwritten text\nEntity Extraction Flutter Application to extract different entities from text\nPose Detection Flutter application with Images and live camera footage\nText Translation Flutter Application to translate between any two language\nLanguage Identification Flutter Application to identify the language of text\nSo we will explore these features one by one and build Flutter applications. For each of the features of the Firebase ML Kit, we will build two applications. In the first application, we are gonna use the images taken from the gallery or camera, and in the second application, we are gonna use the live camera footage with the Firebase ML model. So apart from simple ML-based applications, you will also be able to build real-time face detection and image labeling applications in Google Flutter Dart using the live camera footage. After completing this section you will have a complete grip on Google Firebase ML Kit and also you will be able to use upcoming features of Firebase ML Kit for Google Flutter ( Dart ).\nAfter covering the Google Firebase ML Kit, In the second section of this course, you will learn about using Tensorflow lite models inside Google Flutter ( Dart ). Tensorflow Lite is a standard format for running ML models on mobile devices. So in this section, you will learn the use of pre-trained powered ML models inside Google Flutter Dart for building\nImage Classification Flutter\nObject Detection  Flutter\napplications. So not only you will learn to use these models with images but you will also learn to use them with frames of camera footage to build real-time flutter applications\nSo after learning the use of Machine Learning models inside Flutter Dart using two different approaches in the third section of this course, you will learn to train your Machine Learning models without any background knowledge of machine learning. So in that section, we will explore some platforms that enable us to train machine learning models for mobile devices with just a few clicks. So in the third section, you will learn to\nCollect and arrange the dataset for model training\nTraining the Machine Learning models from scratch using Teachable-Machine\nRetraining existing models using Transfer Learning\nUsing those trained models inside Google Flutter Dart Applications\nSo we will train the models to recognize different breeds of dogs and recognize different fruits and then build Google Flutter Applications using those models for Android and IOS\nBy the end of this course, you will be able\nUse Firebase ML kit inside Google Flutter dart applications for Android and IOS\nUse pre-trained Tensorflow lite models inside Android & IOS applications using Google Flutter dart\nTrain your own Image classification models and build Flutter applications\nYou'll also have a portfolio of over 20 Flutter apps that you can show off to any potential employer\nSign up today, and look forwards to:\nHD 1080p video content, everything you'll ever need to succeed as a Google Flutter Machine Learning developer\nBuilding over 20fully-fledged flutter applications including ones that use Objet detection, Text Recognition, Pose estimation models, and much much more\nAll the knowledge you need to start building the Machine Learning-based Flutter (Android or IOS) application you want\n$2000+ Source codes of 15 Applications\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risks and EVERYTHING to gain\nSo what are you waiting for? Click the buy now button and join the world's best Google Flutter ( Dart ) Machine Learning course.\nWho this course is for:\nBeginner Flutter ( Dart ) developer with very little knowledge of mobile app development in Google Flutter\nIntermediate Flutter ( Dart ) developer wanted to build a powerful Machine Learning-based application in Google Flutter\nExperienced Flutter ( Dart ) developers wanted to use Machine Learning models inside their applications.",
      "target_audience": [
        "Beginner Flutter Developer curious about Machine learning and computer vision use in Flutter",
        "Experienced Professional want to add Machine Learning models in their Flutter Applications",
        "Intermediate Flutter developers looking to enhance their skillset",
        "App developer want to learn use of Machine learning in their Flutter Applications"
      ]
    },
    {
      "title": "Protocol Oriented Programming in Swift 4 and iOS 11",
      "url": "https://www.udemy.com/course/protocol-oriented-programming-in-swift/",
      "bio": "Learn the power of Protocol Oriented Programming in Swift 4 and iOS 11",
      "objectives": [
        "Understand what Protocol Oriented Programming is in Swift",
        "Apply the Protocol Oriented Programming in developing iOS application.",
        "Identify the potential aspect of the project that can benefit from protocol oriented programming approach."
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "FAQ"
        ],
        "Class and Struct": [
          "Class in Object Oriented Programming",
          "Object Inheritance",
          "Struct",
          "Object Initialization"
        ],
        "Introduction to Protocol": [
          "What is Protocol?",
          "Should I Use { get } or { get set }",
          "Method Requirement",
          "Protocol Initializer"
        ],
        "In Depth with Protocol": [
          "Protocol Extension",
          "Protocol Inheritance",
          "Optional in Protocol",
          "How to Avoid Optional Protocol",
          "Protocol as Type",
          "Protocol Conformance",
          "Protocol Composition",
          "Composition with Typealias",
          "Protocol-Delegate Pattern"
        ],
        "What's Next": [
          "Next Step"
        ]
      },
      "requirements": [
        "You should be familiar with basic iOS development using Xcode. If you are new to iOS development, please check my course: Pirate Bay (Complete) in Swift."
      ],
      "description": "Protocol Oriented Programming has gained some traction and widely adopted ever since the WWDC talk by Dave Abrahams. Most of us already familiar with Object Oriented programming for so many years, especially with the fact that the Cocoa Touch library has been using this approach. Objective-C has used the Protocol to some degree but Swift has added more powerful features to Protocol Oriented Programming.\nIn this course we will look into Protocol Oriented Programming in Swift more closely and deeper to find out what it can deliver in helping us with our projects. We will start off with the understanding of Class and Struct, and how to properly initialized them based on our needs.\nClass and Struct have their differences and it will impact what kind and how they can adopt to certain Protocols.  Different types of Protocol property and method declarations will also affect the type of objects that can conform to its requirements.\nProbably the most common use of Protocol is its role on Protocol - Delegate pattern. However we will explore many different Protocol capabilities and features, such as Protocol as type, inheritance, extension, conformance, composition, typealias to name a few.\nI hope you can see the opportunity and the potential of what Protocol Oriented Programming can do in your project and am looking forward to have you joining this course.",
      "target_audience": [
        "You heard about protocol in Swift but not sure how it works or when to use it. This is perfect course.",
        "iOS developers who would like to up their development skills."
      ]
    },
    {
      "title": "Kotlin and Android Jetpack Compose masterclass",
      "url": "https://www.udemy.com/course/android-jetpack-compose/",
      "bio": "Study libraries and tools, Kotlin, Jetpack Compose, Navigation and many practical application",
      "objectives": [
        "Android app development",
        "Kotlin fundamentals",
        "Jetpack compose",
        "Android libraries and tools",
        "Build scalable, robust apps",
        "Create, build and publish Android apps",
        "Architectures and best practices",
        "Comprehensive portfolio of apps",
        "Join any team, add value to any project",
        "MVVM, Retrofit, Coroutines, Navigation, UI and much more"
      ],
      "course_content": {},
      "requirements": [
        "No experience needed. We will learn everything we need in this course",
        "Mac, Windows or Linux PC",
        "All knowledge is here. All you need is the motivation to learn it."
      ],
      "description": "This course will teach you everything you need to know about Android development and building mobile apps.\nI have over 10 years of professional Android development experience, and I have gathered all of that knowledge into this simple to follow, extensive and well documented video course.\n\n\nThere are many Android development resources online to choose from, but this course is special, as it provides you not only with a complete theoretical discussion on Android related topics, but also loads of exercises and interesting projects to build and practice your knowledge on.\n\n\nWe will start with an introduction to the Kotlin language fundamentals. We discuss all concepts that you need in order to get up and running with the language.\n\n\nFollowing on from that, we start to pick apart all concepts related to building apps. We discuss each concept in detail, its multiple aspects, and we implement it in an example application. After each section, we have a project that we build together and that puts in practice what we just learned. In this way, at the end of the course, you will not only have all the knowledge and expertise to build an Android app, but also a complete portfolio of finished apps that you can show a potential employer or collaborator.\n\n\nWe also discuss advanced concepts related to planning and growing your app. We will look in detail at several architectural patterns and discuss their respective pros and cons, so that you can make an informed decision when starting your own project. We will see how we can build apps in a way that is scalable and easy to grow and maintain.\nWe discuss project management and delivery, how to set up development, staging and production environments. How to set up testing environment to reduce bugs and issues as much as possible.\n\n\nFinally, we will talk about all the modern libraries and tools that are used professionally by Android developers. How can we make out development life easier and automate certain tasks? How can we easily create a backend environment and API that we can use in our app? We will talk extensively on all these topics.\nAll this and much more is all included in this one course.\n\n\nBy the end of this course you will:\nBe able to work professionally as an Android developer\nBuild a portfolio of Apps to showcase your skills\nJoin any team, add value to any project\nKnow the tools and libraries that are most commonly used in modern app development\nHave the knowledge and skills to build your own apps and publish them on the playstore\n\n\nThe goal is to take you from any level of development you are at now, and turn you into an expert, professional Android developer.\nSo sign up today and let's start learning how to build Android mobile apps.",
      "target_audience": [
        "Aspiring Android developers",
        "Beginner devs",
        "Intermediate devs",
        "People passionate about building apps"
      ]
    },
    {
      "title": "Master Sencha Touch & Ext JS: Build Apps from Scratch",
      "url": "https://www.udemy.com/course/sencha-touch/",
      "bio": "Create Stunning Mobile and Web Applications with Sencha Touch & Ext JS Through Hands-On Projects and Expert Instruction",
      "objectives": [
        "Understanding of Sencha EXT JS framework and its architecture",
        "Ability to create and customize reusable UI components",
        "Advanced techniques for data management and binding",
        "Best practices for optimizing performance in Sencha EXT JS apps",
        "Real-world examples of web apps built with Sencha EXT JS",
        "Hands-on experience in developing dynamic and robust web applications",
        "Improved web development skills and confidence",
        "A portfolio of completed projects to showcase to potential employers or clients."
      ],
      "course_content": {
        "Welcome to Sencha touch Course": [
          "Introduction",
          "Sencha Touch Apps Examples",
          "Your Feedback is Important"
        ],
        "Installation, Setup, and Your First App": [
          "Setting Up Your Environment, The Needed Software",
          "Web Server: LocalHost",
          "Welcome to Sencha Touch Framework",
          "Introduction to Sencha CMD",
          "Getting Started with Sencha Cmd",
          "Creating a New Project"
        ],
        "Getting Started with First Sencha Touch App": [
          "Introduction: Your First Sencha Touch App",
          "HTML5, CSS3 and javascript Editor: The IDE",
          "Index.html and App.js",
          "Exclusive Explanation: Understanding The MVC File Structure",
          "Introduction to Sencha Docs"
        ],
        "Designing Forms for Efficient Data Entry": [
          "Where to Start Editing",
          "Designing Form Panel",
          "Creating Text Field",
          "Adding Buttons",
          "Resetting And Submitting A Form Buttons",
          "Important Configurations Used In Textfield",
          "Creating Select Field",
          "Creating Number Field",
          "Adding Email & Password Field",
          "Creating An HTML Textarea Field On The Page",
          "The Spinner & The URL Field",
          "The Slider: Allow The User To Select A Value",
          "Specializing Toggle Field",
          "Checkbox: Enabling User To Choose One Or More Items",
          "Radio Field: Allowing User To Choose One Option Out Of A Selection",
          "DatePicker Field: Pick Up A Date",
          "FieldSet: Visually Separate Elements Of A Form",
          "The JSON Viewer",
          "Title Of Separate Elements Of A Form",
          "Rearranging Buttons",
          "Filefield: Working With Files",
          "Form Validation"
        ],
        "Buttons, Toolbar and Titlebar": [
          "New View With Buttons",
          "BadgeText",
          "The hbox Layout",
          "Segmented Button",
          "Allow Multiple Press",
          "Basic Toolbar",
          "Toolbar: Docked, Layout And Title"
        ],
        "Containers And Layouts": [
          "Overview",
          "The Container And The Layout",
          "Adding Child Elements",
          "Different Layouts"
        ],
        "General Views": [
          "The Data View",
          "XTemplate",
          "Filter On The Dataview",
          "Adding A New Entry",
          "Dataview: The List",
          "HashMap",
          "onItemDisclosure: Disclosing Items",
          "Plug-in: PullRefresh",
          "The indexBar",
          "NestedList And TreeStore",
          "DetailCard And Listeners",
          "The Navigation View",
          "The Action sheets",
          "The Menu"
        ],
        "Creating Your Final Sencha Touch App": [
          "Introduction",
          "Ext Singleton",
          "The Home View",
          "The HTML Content",
          "The Blog Posts View",
          "The TitleBar",
          "The Data Model",
          "The Data Store",
          "Using Local Storage",
          "Using External Storage \"Ajax\"",
          "The Ellipsis",
          "The itemCls",
          "Item Details",
          "Generate A Controller",
          "the Itemtap",
          "Push A New Data View",
          "The New Full Posts",
          "Overview Of Our New App"
        ],
        "Preparing for Release and Publishing Your App": [
          "Overview: Releasing And Publishing",
          "Build The Testing Version",
          "The Final Production of Your App",
          "Phonegap And Cordova",
          "Phonegap's Config.xml File",
          "Building Android, ios and Winphone App Versions",
          "The Final App in my Smartphone"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer with an internet connection",
        "Basic understanding of HTML, CSS, and JavaScript",
        "Familiarity with object-oriented programming concepts",
        "A text editor for writing code (e.g. Visual Studio Code, Sublime Text, etc.)"
      ],
      "description": "Launch Your App Development Journey!\nDive into the world of app development with the Master Sencha Touch & Ext JS course! Designed for beginners and aspiring developers, this course takes you from setting up your environment to building and publishing fully functional mobile and web apps using the powerful Sencha Touch and Ext JS frameworks. With over 85 lectures, you’ll master app design, form creation, data management, and deployment across Android, iOS, Windows Phone, and web platforms.\nWhy Take This Course?\nComprehensive Curriculum: Learn Sencha Touch for mobile apps and Ext JS for web/desktop applications, covering basics to advanced topics like MVC structure, local storage, and app publishing.\nHands-On Learning: Build your first mobile app with Sencha Touch and a web app with Ext JS, designing interactive forms and deploying them on your devices or browsers.\nBeginner to Expert: Start with no experience and progress to creating professional-grade apps for multiple platforms.\nMulti-Platform Deployment: Gain skills to release apps on Android, iOS, Windows Phone using PhoneGap, and web applications with Ext JS.\nReal-World Skills: Work with JSON, Ajax, Sencha CMD, and Ext JS components to create dynamic, user-friendly applications.\nWhat You'll Learn\nSetup and Basics: Install Sencha Touch and Ext JS, configure your environment, and create projects with Sencha CMD.\nApp Development: Design forms with text fields, sliders, checkboxes, and more using Sencha Touch; build robust web interfaces with Ext JS grids and layouts.\nData Management: Use local and external storage, work with models, stores, and JSON data in both frameworks.\nAdvanced Features: Explore toolbars, containers, action sheets in Sencha Touch, and advanced Ext JS components like charts and data views.\nPublishing: Build testing and production versions, integrate with PhoneGap for mobile, and deploy web apps with Ext JS.\nCourse Highlights\n85+ Lectures: Concise, actionable lessons with previews to kickstart your learning.\nPractical Projects: Develop a complete Sencha Touch mobile app and an Ext JS web app, from design to deployment.\nExpert Guidance: Clear explanations and examples tailored for all skill levels.\nFlexible Access: Learn at your own pace with lifetime access to course materials.\nWho Is This Course For?\nBeginners eager to learn mobile and web app development with Sencha Touch and Ext JS.\nDevelopers looking to expand their skills with versatile frameworks.\nProfessionals aiming to create cross-platform mobile and web applications.\nAnyone interested in mastering MVC architecture and app deployment.\nReady to Build Your First Mobile and Web Apps?\nJoin a community of learners transforming their coding skills with this course. Enroll now and start creating cutting-edge apps with Sencha Touch and Ext JS today!\nEnroll Today and Kickstart Your App Development Career!",
      "target_audience": [
        "Web developers who want to enhance their skills and build high-performance web applications",
        "Beginners who are new to web development and want to learn Sencha EXT JS from the ground up",
        "Experienced developers who want to dive deeper into Sencha EXT JS and its features",
        "Anyone interested in learning about web development and creating dynamic and robust web applications",
        "Web developers who want to expand their portfolio with practical, real-world projects",
        "Web developers who want to improve the performance of their web applications"
      ]
    },
    {
      "title": "Phonegap & Ludei - Build HTML5 CSS & JS Apps",
      "url": "https://www.udemy.com/course/phonegap-ludei/",
      "bio": "Learn the basic Phonegap/Cordova API's and get an insight into Ludei's CocoonJS canvas+ view for accelerated graphics!",
      "objectives": [
        "Understand the hybrid app architecture",
        "Have a better perspective and outlook of app development",
        "Setup Phonegap / Cordova on Mac, GNU and Windows",
        "Setup wifi testing",
        "Setup iOS simulation (Mac only!)",
        "Setup Android emulation on Mac, GNU and Windows",
        "Understand all the basic Cordova API's; Battery Status, Camera, Contacts, Device Info, Network Info, Status Bar, Accelerometer, Compass, Vibration, InAppBrowser, Dialogs (notification), Geolocation, Globalization, Media Capture, File System, File Transfer, Whitelist",
        "Understand how to debug and review returned content from Cordova",
        "Installing third party plugins",
        "General app store guidelines and principles",
        "Understand basic security and privacy guidelines",
        "Learn the different aspects of the Android and iOS platform's",
        "Understand the CocoonJS canvas+ view for accelerated graphics",
        "Compile Cordova app's locally and on the cloud",
        "Compile CocoonJS app's",
        "Have a general understanding of iOS and Android app store submission process"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Introduction to Hybrid Architecture",
          "Installing Phonegap OSX, GNU & Windows PDF",
          "Phonegap Testing",
          "OSX Wifi Testing",
          "OSX iOS Simulation",
          "OSX Android Emulation",
          "GNU Wifi Testing",
          "GNU Android Emulation",
          "Windows Wifi Testing",
          "Windows Android Emulation",
          "Phonegap or Cordova?",
          "Best Practices",
          "Phonegap Project",
          "Building our App Interface"
        ],
        "Cordova API": [
          "Console",
          "Device",
          "Events",
          "Vibration",
          "Battery Status",
          "In App Browser Part 1",
          "In App Browser Part 2",
          "Status Bar",
          "Networking",
          "Dialogs",
          "Accelerometer",
          "Compass",
          "Compass Part 2",
          "Geolocation",
          "Globalisation",
          "Contacts",
          "Contacts Part 2",
          "Camera",
          "Camera Part 2",
          "Media",
          "Media Capture",
          "File System",
          "File System Creating Directories and Files",
          "File System Reading and Writing",
          "Directory Entry Methods",
          "File Entry Methods",
          "File Transfer Upload",
          "File Transfer Download",
          "Special Links",
          "Installing Third Party Plugins",
          "Phonegap Security Guidelines"
        ],
        "Ludei, CocoonJS & Cordova": [
          "Introducing Ludei & CocoonJS",
          "Running CocoonJS Projects"
        ],
        "Building your app": [
          "Phonegap Build",
          "Android Distribution",
          "iOS Distribution",
          "Compiling a CocoonJS App",
          "Conclusion & Goodbye"
        ]
      },
      "requirements": [
        "Have a good understanding of HTML, CSS and especially Javascript"
      ],
      "description": "This course will cover all standard Cordova API’s in a clear, well structured way. Each lecture will guide you through how the hybrid app model works so you really get to understand what’s going off under the hood. You’ll be learning the most advanced API’s, also I tell you what an API is, such as the file system API that can be complex. However I’ll break every single API down and go into detail about how each API works. On top of that I’ll give you some general understanding of the hardware sensors such as the accelerometer, compass and geolocation sensor’s.\nAll in all this course is here to take you from a web developer and give you the skills to develop hybrid app’s. Also this course is not only giving you understanding of the API’s we go further than that! As an app developer I know what it’s like coming from a web developer background. Most people have to gain certain experience whilst they become an app developer. This course gives you real world knowledge of what you should and shouldn’t do; it gives you the correct perspective of UI and UX principles and finally gives you general understanding of security and privacy. The revolution of Edward Snowden and many scare stories makes understanding privacy and security and how to deal with your user’s is most important for any app developer today.\n\nOn top of all this you’ll learn how to use the CocoonJS platform which allows acceleration of HTML5’s 2D canvas element and WebGL for 3D graphics. This is impressive and really goes to show how developing in the hybrid app market is going to change rapidly. The future truly is bright for us hybrid app developers.\n\nIn short this course is an all rounder and will give you a massive leg up. Not just showing code and giving a general overview, but teaching you how your code is executed and how Cordova and the hybrid app model works under the hood. On top of all that you’ll get some real life experience! Not just coding but principles, guidelines and best practices for security or otherwise.",
      "target_audience": [
        "You must have good knowledge of Javascript before taking this course",
        "You must understand HTML and CSS",
        "You should take this course if you want to transfer your existing HTML, CSS and Javascript skill's to the hybrid app development world"
      ]
    },
    {
      "title": "Core Data and Realm - Master Data Persistence for iOS",
      "url": "https://www.udemy.com/course/core-data-and-realm-database/",
      "bio": "Learn to use Core Data, Realm, UserDefaults, NSCoder, iOS File System.",
      "objectives": [
        "Build apps that use Core Data for local device storage",
        "Build apps that save user data",
        "Understand the differences between Realm and Core Data and work with both"
      ],
      "course_content": {
        "Creating a To Do List App": [
          "The Clear App Clone that You'll Build By the End of This Module",
          "Subclassing a UITableViewController to Build a To Do List App",
          "TableView Delegate Methods and Accessories",
          "Creating a Textfield Inside UIAlert to Add New Items"
        ],
        "Using UserDefaults to Persist Data": [
          "Why Do We Need Persistent Local Data Storage?",
          "Using UserDefaults to Persist Data Locally",
          "UserDefaults Explained",
          "Learn About Swift Singletons"
        ],
        "Structure Our App with MVC (Model-View-Controller)": [
          "Creating a Custom Data Model",
          "Learn About the Ternary Operator in Swift",
          "Restructuring Our Project with MVC"
        ],
        "Persist User Data Locally With the File Storage System and NSCoder": [
          "iOS Sandboxing and What it Means for Your App",
          "Encoding Data with NSCoder",
          "Decoding Data with NSCoder"
        ],
        "Core Data": [
          "Introduction to Databases",
          "How to Setup and Configure Core Data",
          "How to Save Data with Core Data (Create in CRUD)",
          "How to View Your SQLite Database Backend for Core Data",
          "Core Data Fundamentals",
          "Reading Data from Core Data (Read in CRUD)",
          "Updating Data with Core Data (Update in CRUD)",
          "Removing Data from Core Data (Delete in CRUD)",
          "Querying Data Using Core Data and Creating a UISearchBar",
          "How to Dismiss the Search Bar and Grand Central Dispatch",
          "How to Create Relationship Graphs in Core Data",
          "[Solution to Challenge] Setting Up CategoryViewController",
          "Adding the Delegate Method"
        ],
        "Realm Database": [
          "Introduction to Realm",
          "How to Save Data Using Realm (Create in CRUD)",
          "Fetching Data Using Realm (Read in CRUD)",
          "Updating Data with Realm (Update in CRUD)",
          "Removing Data from Realm (Delete in CRUD)",
          "Querying Data Using Realm",
          "Review of How Our App Uses Realm"
        ],
        "User Interface Improvements - Making Our App Look Like the Clear App": [
          "Making Our Cells Swipeable with Cocoapods",
          "Inheriting from SwipableTableViewController",
          "[Solution to Challenge] Inheriting from SwipableTableViewController",
          "Adding Colour to Our Cells Using the Chameleon Framework",
          "[Solution to Challenge] Persisting the Colour Property",
          "Creating a Gradient TableView",
          "Updating the UI of the Navigation Bar"
        ]
      },
      "requirements": [
        "Basic understanding of iOS development and Swift programming",
        "A Mac laptop or iMac (or a PC running macOS)",
        "No paid software required - all lessons will be completed in Xcode 9"
      ],
      "description": "Do you have an idea for an app that needs to save user data locally?\nDo you need to learn about Core Data for your work or business?\nAre you looking to brush up on your iOS Development skills by learning about new technologies such as Realm Database?\nThen this is the course for you!\nJoin me as I take you step-by-step through building a to do list app that's like the Clear app.\nAlong the way, we'll cover all the essential topics such as:\nHow to Use Core Data\nHow to Use Realm Database\nHow to Properly Set Up a Project with Core Data\nHow to Incorporate Realm Database Using Cocoapods\nHow to Build a To Do List App\nHow to Save User Data Locally to the iPhone\niOS Sandboxing\niOS Backend Options and Databases\nHow to Store Data Using the iOS File System and NSCoder\nHow to Use UserDefaults Properly\nand much much more...\nTake a look at what other students have been saying about this course:\n\"I am about a third through this course and I have learned so much. This course is worth way more than what it cost but I'm thankful prices are low or I might have passed it up in the first place not knowing what I would get. I have used a couple Udemy courses and countless youtube tutorials. This is the best course I've ever took.\" - Jeffrey Nelson\n\"The course offers interesting concepts coupled with a teacher that explains things clearly. You get to make a bunch of interesting apps and expand your skills. Thanks Angela!\" - Megan Eding\n\"Clear tutorials, the lecturer explains everything well. It is one of the best courses I have participated in on Udemy.\" - Mark Garcia\n\n\"Angela is connecting the missing dots for me... \" - Tom Colenbrander\n\nWhat are you waiting for? Join the course today!",
      "target_audience": [
        "If you are a iOS developer wanting to get to grips with Core Data and Realm",
        "If you want to compare the different data persistence options",
        "If you want to create a project that requires local storage on the iPhone"
      ]
    },
    {
      "title": "Learn .NET MAUI while creating a Contacts App in .NET 7",
      "url": "https://www.udemy.com/course/learn-net-maui-by-creating-a-contacts-application/",
      "bio": "Learn .Net MAUI, Events Driven, MVVM, SQLite, Clean Architecture, Creating and Consuming ASP.NET Core minimal API",
      "objectives": [
        ".Net MAUI Project Structure",
        "URL based navigation",
        "ListView",
        "CollectionView",
        "SwipeView",
        "ContextActions",
        "StackLayout, Grid Layout",
        "SearchBar",
        "Databinding",
        "Field Validation",
        "Creating Reusable control",
        "Dependency Injection",
        "Clean Architecture",
        "Repository for encapsulating data accessing details",
        "Use Case Driven Development",
        "MVVM",
        "SQLite",
        "ASPNET Core Minimal API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "1. What is .Net Maui",
          "2. Prepare Development Environment & Create first project",
          "3. Project Structure of .Net Maui",
          "4. Three elements of stateful .Net Maui app",
          "5. Page, Layout & View, Namespaces",
          "Source Code"
        ],
        "Create the App using Events Driven approach": [
          "6. URL based navigation - .Net Maui",
          "7. Basics of ListView and Data Binding in .Net Maui",
          "8. Events Handling of ListView in .Net Maui",
          "9. Parameters in URL based Navigation & Static Repository in .Net Maui",
          "10. Stacklayout for Edit Contact page in .Net Maui",
          "11. View Contact Details & Update Contact (.Net Maui)",
          "12. Observable Collection",
          "13. Field Validation with .Net Maui CommunityToolkit",
          "14. Reusable Control in .Net Maui",
          "15. Grid Layout and Use reusable control in .Net Maui",
          "16. ContextActions & MenuItems in ListView for .Net Maui",
          "17. SearchBar in .NetMaui"
        ],
        "Adopting Clean Architecture": [
          "18. What is Clean Architecture",
          "19. Use Case Driven Development in Clean Architecture in .Net Maui",
          "20. Implement SearchContacts in Repository Plugin",
          "21. Dependency Injection",
          "22. Implement the ViewContact Use Case",
          "23. Implement the EditContact Use Case",
          "24. Implement Add Contact Use Case",
          "25. Implement Delete Contact Use Case"
        ],
        "Create the App with MVVM": [
          "26. What is MVVM (MVVM Part 1)",
          "27. MVVM Part 2",
          "28. MVVM Part 3 (Two way Data Binding)",
          "28.1 MVVM vs Clean Architecture",
          "29. Contacts ViewModel",
          "30. Contacts page with MVVM and CollectionView",
          "31. SwipeView",
          "32. Delete Contact with MVVM in SwipeView",
          "33. Edit Contact Page with MVVM",
          "34. Displaying Contact info in ContactControl using MVVM",
          "35. Update Contact with MVVM",
          "36. Add Contact with MVVM",
          "37. Form Validations with MVVM",
          "38. SearchBar with MVVM"
        ],
        "Persist Data in SQLite": [
          "39. Install and configure SQLite Nuget Package",
          "39.1 Configure the Contact Table",
          "40. Implement SQLite Repository",
          "41. Use SQLite Repository Plugin"
        ],
        "Consume ASP.NET Core Minimal API in .NET MAUI": [
          "42. WebAPI in our Architecture",
          "43. Create Web API project & Install EntityFrameworkCore packages",
          "44. Configure DbContext",
          "45. Run DB Migration",
          "46. Basics of Web API",
          "47. Get Contacts Endpoint",
          "48. Post Contacts EndPoint",
          "49. Update Contact Endpoint",
          "50. Delete Contact Endpoint",
          "51. Search Contacts Endpoint",
          "52. Create WebApi Repository to consume WebApi Endpoints",
          "53. Use the Web Api Plugin"
        ],
        "Next Steps": [
          "Thank you & Next Steps"
        ]
      },
      "requirements": [
        "Intermediate C# (you should have at least 3 - 6 months experience programming in C#).",
        "Basic SQL knowledge.",
        "Having strong desire to learn."
      ],
      "description": "Welcome to our comprehensive online course on .NET MAUI, where you'll learn to develop powerful mobile applications using the latest technologies in .NET 7. Our course is designed to provide you with a solid understanding of the fundamentals of .NET Maui and equip you with the skills and knowledge needed to create high-quality, cross-platform mobile apps with ease.\nIn this course, you'll learn all the essentials  of .NET MAUI while building a contacts app with Events Driven approach and then with MVVM approach, leveraging SQLite for data persistence, and adopting the Clean Architecture approach. Additionally, you'll learn how to create and consume ASP.NET Core minimal APIs in .NET Maui, making it easier to build fast, lightweight, and scalable mobile applications.\n\n\nThe course covers the following technical topics:\n.NET MAUI Project Structure\nURL based navigation.\nListView\nCollectionView\nContextActions\nStackLayout, Grid Layout\nSearchBar\nDatabinding\nField Validation\nCreating Reusable control\nDependency Injection\nClean Architecture\nRepository for encapsulating data accessing details\nUse Case Driven Development\nMVVM\nSQLite\nASP.NET Core Minimal API\n\n\nBy the end of the course, you will:\n\n\nBe able to independently build .NET MAUI mobile apps.\nBe able to use SQLite to persist data.\nBe able to create and consume ASP.NET Core Minimal APIs.\nUnderstand and be able to implement maintainable and scalable .NET MAUI app with Clean Architecture.\nAnd much more.\nOur course is designed to cater to both intermediate and advanced-level developers, with easy-to-follow, step-by-step tutorials, and hands-on projects that allow you to apply what you learn in real-world scenarios. By the end of this course, you'll have the confidence and skills to create robust and scalable mobile applications that run seamlessly across multiple platforms.\n\n\nWhether you're looking to start a new career in mobile development or want to upskill your existing skill set, our course is perfect for you. So why wait? Enroll now and take the first step towards building your next great mobile app with .Net Maui and .NET 7.\n\n\nPREREQUISITES\nIntermediate C# (you should have at least 3 - 6 months experience programming in C#).\nBasic SQL knowledge.\nHaving strong desire to learn.\n\n\nWho this course is for\nC# developers who want to become mobile developers.\nDevelopers who work with Xamarin or WPF and would like to transition to .NET MAUI.\nDevelopers who are curious about Microsoft newest Multi Platform framework: .NET MAUI\nDevelopers who want to learn about implementing Clean Architecture.",
      "target_audience": [
        "C# developers who want to become mobile developers.",
        "Developers who work with Xamarin or WPF and would like to transition to .NET MAUI.",
        "Developers who are curious about Microsoft newest Multi Platform framework: .NET MAUI",
        "Developers who want to learn about implementing Clean Architecture."
      ]
    },
    {
      "title": "Flutter testing : Unit, Widget & Integration testing",
      "url": "https://www.udemy.com/course/flutter-testing-unit-widget-integration-testing/",
      "bio": "Learn to write code with TDD approach for Flutter, Learn in detail about Unit, Widget & Integration Testing",
      "objectives": [
        "Flutter Unit Testing",
        "Futter Integration Testing",
        "Flutter Widget Testing",
        "Learn to write code with TDD"
      ],
      "course_content": {
        "Introduction": [
          "Is This Course Right for You?",
          "Introduction",
          "Why write tests?",
          "Testing Pyramid",
          "AAA Structure",
          "TDD"
        ],
        "Unit Testing": [
          "What is Unit Testing?",
          "How to write unit test?",
          "First unit test",
          "Unit test in more details & grouping of unit tests",
          "Unit test for email validation",
          "Unit test for password validation"
        ],
        "Widget Testing": [
          "What is widget testing?",
          "First widget test with TDD approach",
          "Login Screen - TDD",
          "Login Screen - Validation Error Case",
          "Login Screen - Validation Success Case"
        ],
        "Integration Testing": [
          "What is integration testing?",
          "How to write integration testing?",
          "First Integration test - Login Flow - Success Case",
          "Integration Test - Login Flow - Error case"
        ],
        "API Testing & Mocks": [
          "Books List Starter Project",
          "Books List Application Walkthrough",
          "Unit test for API call Success case",
          "Unit test for API call failure case",
          "Setup & TearDown methods"
        ],
        "Conclusion & Source Code": [
          "Useful links & Source Code to download",
          "Bonus - Additional Resources",
          "Conclusion"
        ]
      },
      "requirements": [
        "Flutter app development knowledge"
      ],
      "description": "The more features your app has, the harder it is to test manually. Automated tests help ensure that your app performs correctly before you publish it, while retaining your feature and bug-fix velocity.\n\n\nThis course will cover all the basics you need to know for Flutter Testing. Once you learned this course you will be stronger in basics and you are all set to automate any flutter app.\n\n\nYou may have a working app, but you want to test changes you’re making to extend the app. Maybe you already have tests written, but aren’t sure whether they’re the right tests. Or, you have started working on a new app and want to test it as you go.\n\n\nBy the end of this video course, you will have a very clear understanding of how to write Flutter tests.\nIf you are a freelance developer you might postpone learning how to unit test the Flutter app for some time. But if you are planning to join a bigger team, then unit testing is a must-have skill for you to be able to work on important app features.\n\n\nIn this course, you will learn -\nIntroduction to testing\nUnit Testing\nWidget testing\nIntegration Testing\nAPI Testing & Mocks\n\n\n\n\nGenerally speaking, a well-tested app has many unit and widget tests, tracked by code coverage, plus enough integration tests to cover all the important use cases. I hope you decide to take this course and upscale your skills for flutter testing!",
      "target_audience": [
        "Flutter Developers"
      ]
    },
    {
      "title": "Flutter & Dart : The complete beginners guide [2025]",
      "url": "https://www.udemy.com/course/flutter-course-for-complete-beginners/",
      "bio": "Learn Mobile App Building Step By Step",
      "objectives": [
        "Project setup",
        "Flutter project structure",
        "Flutter scaffolds and it's properties",
        "Flutter reusable widgets",
        "Flutter Bottom Navigation Bar",
        "Flutter RenderLayout Widgets",
        "Four beautiful and complex UI",
        "Dart core concepts like classes, abstract classes and constructors",
        "Dart core concepts List & Map in detail",
        "State management library BLoC, GetX and Riverpod 2.0",
        "Routing with GetX",
        "Loading json files from local storage"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Download necessary tools and install VS code | Flutter SDK | Android SDK | Tools": [
          "Intro to the section",
          "Download all the tools",
          "Install VS code",
          "Install Flutter and Android SDK and Command lines tools",
          "Create your first project using VS code (windows)"
        ],
        "Project setup and structure and github repo": [
          "Intro to the section",
          "Create project for Flutter app in Android Studio",
          "Understand project structure",
          "Create a git repo for the project",
          "Remove comments from main.dart"
        ],
        "Core understanding of Dart class, inheritance and Flutter": [
          "Intro to the section",
          "About main() function",
          "Understanding class and inheritance in Dart",
          "Understanding abstract class and constructor",
          "Understand class and stateful class",
          "More about Stateful class",
          "MaterialApp and Scaffold"
        ],
        "Quiz about Dart knowledge": [
          "All about Dart class and constructor"
        ],
        "Bottom Navigation module": [
          "Create BottomNavBar class",
          "BottomNavigationBarItem and List",
          "Style BottomNavigationBar",
          "Install icons for bottom nav bar",
          "Create dummy screens for BottomNavigationBar",
          "Access BottomNavigationBar's index",
          "Use setState() to update BottomNavigationBar"
        ],
        "Quiz section about BottomNavigationBar": [
          "Bottom Navigation Bar quiz"
        ],
        "Home screen module": [
          "Overview of the upcoming HomeScreen",
          "Home screen module and understand the layout part 1",
          "Understanding Container() widget",
          "About other nested widgets",
          "Understanding vertical and horizontal layout design",
          "Define widgets with layout",
          "Finish header layout with widgets",
          "Style Text() widgets",
          "Create separate style class",
          "Style Container for Image",
          "Show image on the screen",
          "Create a separate media file",
          "Create a search box layout",
          "Background color and remove AppBar",
          "Understand and create a reusable widget",
          "Understand copyWith method and create examples",
          "Understand the ticket view layout",
          "Create TicketView widget class",
          "Style TicketView left and right border",
          "TicketView destination text",
          "TicketView big dots",
          "Expanded widget and count of them",
          "Understanding Stack widget",
          "Understand the dynamically generated widget principle",
          "Create AppLayoutBuilderWidget",
          "Show and rotate plane icon",
          "Understand the degree and radians for angle",
          "Rotating using radians",
          "Show the second row in the blue part of the ticket",
          "Show the bottom part of the ticket",
          "Create big circle widget for ticket end",
          "Dart Ternary operator",
          "Show the ticket dash",
          "Change the text of the orange part",
          "Style first row bottom text",
          "Create reusable widgets for first row ticket",
          "Create reusable widgets for bottom row ticket",
          "Understand dart Map & List together in our ticket app"
        ],
        "Quiz about Home screen widgets": [
          "Home screen widgets cover dart and flutter widget questions"
        ],
        "Colorize android studio": [
          "Colorize android studio"
        ]
      },
      "requirements": [
        "Having a computer and Flutter SDK installed"
      ],
      "description": "This app covers Flutter for very beginners to advanced learners. In this tutorial step by step we will build a beautiful UI and learn the very core of Dart and Flutter.  At the beginning of the course we have given most necessary basic of dart to build an app. This course 3-5 minutes in each lecture so that students can follow us easily.\nNot only that, we have used a lot of pictures and graphics to make the understanding of Flutter easy.\nWe start from very simple ui like drawing text to complex layout using stack and mixture of column and row widget.\nWe also built reusable widget to reduce code amount. So at the end of this tutorial you learn how to build simple to complex reusable flutter widgets.\nAlong with you will master core Dart concept\n1. Class\n2. Inheritance\n3. List\n4. Map\n5. Method overriding\n\n\nAlong the way, we explained what's a stateful class and difference between a stateful class and stateless class. We also explained what's a bottom navigation bar and how to set up screens for bottom navigation bar. Bottom navigation bar mainly involves jumping to different screens and complex layout.\nHomepage UI\nHomepage UI includes greetings layout, ticket layout, colorful tickets, hotel view with images.\nTicket search\nTicket search UI includes searching tickets UI with upcoming flights.\nTicket UI\nTicket UI involves showing ticket information with bar code. This is beautiful.\nBook Ticket\nThis UI includes information about a certain flight.\n\n\nLater on, we explained how to work with different colors and separate color in a static file.\nThe widgets we built in this tutorial\n1. reusable style component\n2. reusable color pallet\n3. reusable column widget\n4. reusable layout builder widget\n5. reusable column widget\n6. reusable row widget\n7. reusable ticket widget\nAfter finishing this course, you will have much better understanding how flutter works and you will master app layout building.\nAt the same time we have covered, state management packages. We have covered Getx, Riverpod and most popular BLoC state management. Thus you learn about all the favourite state management and see the comparison among them.",
      "target_audience": [
        "Flutter Course for Beginners App Building Tutorial Step by Step"
      ]
    },
    {
      "title": "MVVM Design Pattern Using Swift in iOS",
      "url": "https://www.udemy.com/course/mastering-mvvm-for-ios/",
      "bio": "Learn the Art of Building Modern iOS Applications",
      "objectives": [
        "Have a deeper understanding of good iOS architecture apps",
        "Build iOS applications using MVVM design pattern"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Understanding MVC Architecture",
          "What is Wrong with MVC?",
          "Understanding MVVM Architecture"
        ],
        "Building News App Using MVVM Design Pattern": [
          "What we will be building",
          "Registering on NewsAPI Service",
          "Setting Up the User Interface",
          "Implementing Web Service",
          "Creating and Decoding JSON to Models",
          "Implementing View Models",
          "Creating Custom Self Sizing Cells",
          "Displaying News"
        ],
        "Building Coffee Ordering App Using MVVM Design Pattern": [
          "What we will be building?",
          "UPDATED: Coffee Ordering API",
          "Creating the User Interface",
          "Creating the Add New Order Interface",
          "Testing the Web API Using Postman",
          "Implementing Webservice Client",
          "Creating Models",
          "Testing Webservice Client",
          "Implementing View Models",
          "Displaying Orders in UITableView",
          "Populating Types of Coffee",
          "Populating Cup Sizes Using View Model",
          "Adding Checkmark for Selected Cells",
          "Populating AddCoffeeOrderViewModel",
          "Populating Model Using View Model",
          "Implementing the Resource for Creating New Orders",
          "Updating Webservice to Add Post",
          "Adding New Orders to UITableView Using Delegates",
          "Displaying All Orders on the Screen"
        ],
        "Understanding the Structure of GoodWeather App": [
          "What you will be building?",
          "Understanding Weather List Screen",
          "Understanding Add Weather Screen",
          "Understanding Settings Screen"
        ],
        "Implementing User Interface for GoodWeather App": [
          "Setting Up View Controllers",
          "Configuring Theme for Our App",
          "Displaying Hard-Coded Weather into TableView",
          "Designing the AddWeather Screen"
        ],
        "Implementing Web Services Layer": [
          "OpenWeatherMap API",
          "Implementing WebService Service",
          "Testing the Webservice Class"
        ],
        "Building ViewModels and Populating View Models": [
          "Implementing Models",
          "Decoding JSON into Models",
          "Implementing AddWeatherViewModel",
          "Passing WeatherViewModel back to the WeatherListTableViewController",
          "Displaying Weather on Screen"
        ],
        "Settings Screen to Change Temperature Unit": [
          "Understanding the Starter Project",
          "Implementing SettingsViewModel",
          "Displaying Temperature Units on Settings Screen",
          "Selecting and Deselecting a Temperature Unit",
          "Implementing SettingsDelegate",
          "Switching Between Temperature Units",
          "Fixing the Temperature Unit Issue"
        ],
        "Bindings": [
          "What are bindings?",
          "View to ViewModel Binding",
          "ViewModel to View Binding"
        ],
        "Unit Testing": [
          "What is Unit Testing?",
          "Setting Up Your Project",
          "Writing Your First Unit Test",
          "Refactoring Unit Tests"
        ]
      },
      "requirements": [
        "You should have beginner level experience in Swift language and iOS Development",
        "Familiarity with MVC design pattern is recommended"
      ],
      "description": "Are you interested in learning how to write iOS apps using MVVM design pattern?\nMVVM design pattern allows you to develop applications that are easily maintainable and testable, and now you can learn it from the comfort of your home.. in your own time.. without having to attend class.\nMy name is Mohammad Azam and I am the creator of many popular online courses including Mastering MapKit in iOS Using Swift and Creating Stickers and iMessages Applications in iOS 10 Using Swift 3, Mastering Micro Services Using JPA, Mastering Server Side Swift Using Vapor, Mastering ARKit for iOS, Mastering Core ML for iOS and more.\nI have created over 2 dozens apps and some of my apps were even featured by Apple on the App Store. I have worked with fortune 500 companies as a lead iOS developer and helped them grow their business ten folds.\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 4 hours. In fact if you think that the course fell short on delivering topics then we will give you your MONEY BACK.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nBuy this course today and this is what you’ll get.\nI will show you how to use MVVM design pattern to build your iOS applications. I will start from the very beginning covering the basics of MVVM design pattern and then dive into advanced concepts like live binding. I will also demonstrate how to implement a web services layer and create a complete app from scratch using MVVM design pattern.\nThe course is accompanied with all the code sample files.\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and make sure that every questions is answered.\nCan you believe you get all this (and more) for just $195?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nWhy learn MVVM?\nMVVM is the next step towards the future of apps. MVVM allows you to create apps that are easily maintainable and testable.\nMVVM allows iOS developers to use their existing skills to create amazing iOS applications.\nAs the application grows MVVM design allows the developers break the app into smaller components.\nWho is this for?\nThis course is for anyone who wants to take their skills to the next level. MVVM design pattern is an old pattern but it is relatively new in the iOS community. MVVM iOS applications can also help you to earn higher salary since now you know how to write a complete apps which can be tested and updated easily through the use of MVVM design principles.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the iOS community with a large following. I do a lot of speaking engagements in which I spread knowledge and education.\nIf you are not satisfied with the course then I offer a 100% REFUND. I am confident that you will enjoy the course and you will utilize the knowledge you learned in this course in your future applications.\nWhat are the requirements?\nA Mac Computer\nXcode 10 or above\niOS 12 or above\nBasic understanding of the Swift language and the iOS SDK - I'll teach you everything you need to know about MVVM.\nWhat am I going to get from this course?\nCreate amazing iOS apps using MVVM design pattern\nTake your existing iOS skills to the next level\nBecome a professional app developer, take freelance gigs and work from anywhere in the world\nBored with the same old, same old? Apply for a new job in a software company as an iOS developer",
      "target_audience": [
        "Anyone who wants to learn how to create iOS apps using MVVM design pattern",
        "Developers wanting to take their iOS skills to the next level"
      ]
    },
    {
      "title": "Android Office Task Management App Using Firebase(Real App)",
      "url": "https://www.udemy.com/course/android-office-task-management-app-using-firebasereal-app/",
      "bio": "Learn Android App Development, Build Complex Android App, Learn Android Firebase Database and Build Complete Android App",
      "objectives": [
        "Students Will Learn How To Develop A Complete Android App Using Firebase",
        "Work With Android Firebase Database",
        "Learn How to Work With Firebase Authentication",
        "Develop A Complete Office Task Management Android App Using Firebase Database",
        "Learn How To Design A Complex Android App UI And How To Complete it",
        "Improve App Development Skills",
        "Learn Android Material Design",
        "You'll have a portfolio of Android app to apply for Android developer jobs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Office Task Management App || Create Project and Connect With Firebase Database": [
          "Create Project And Layout Design Part-1",
          "Connect With Firebase Database Part-2"
        ],
        "Office Task Management App || Design App Layout": [
          "Design Login Layout Part-3",
          "Design Registration Layout Part-4"
        ],
        "Office Task Management App || Complete Firebase Registration And Login Function": [
          "Connect Registration Activity Part-5",
          "Complete Firebase Registration Part-6",
          "Connect Login Layout Part-7",
          "Complete Firebase Login Part-8"
        ],
        "Office Task Management App || Design Custom Toolbar": [
          "Design Custom Toolbar Part-9"
        ],
        "Office Task Management App || Work With Floating Action Button": [
          "Floating action Button Design Part-10"
        ],
        "Office Task Management App || Add Model Class": [
          "Add Model Class Part-11"
        ],
        "Office Task Management App || Design Input Layout and Work With Alert Dialog": [
          "Design Custom Input Field Part-12",
          "Work With Custom Dialog Part-13"
        ],
        "Office Task Management App || Insert Office Task To Firebase Database": [
          "Connect Input Field Part-14",
          "Insert Task To Firebase Database Part-15"
        ],
        "Office Task Management App || Implement RecyclerView And Design Item Data Layout": [
          "Add Recyclerview Part-16",
          "Design Recycler Item Data Layout Part-17",
          "Implement Viewholder Class Part-18"
        ]
      },
      "requirements": [
        "A Windows Computer, Mac or Linux PC",
        "Android Studio",
        "Basics of Java Programming Language"
      ],
      "description": "Welcome to this (Android Office Task Management) Project Base App Development Course. In This Android Course Students, Will Learn How to complete a Real-World Android App Using Firebase Database.\nYou, Will, Learn Many Android Features When you will develop this Android App. Here are Some Lists That You Are Going To Learn When you will Complete This Course\n\n\nAndroid Firebase CRUD Operation\nA Complete Android App Project\nAndroid RecyclerView\nAndroid Complex UI Layout Design\nAndroid Firebase Authentication\nAndroid Firebase Query\nAndroid Material Design\nAndroid Custom Alert Dialog\nYou, Will, learn how to work with android Card View.\n\n\nSign Up Today And You Will Learn:\nHow To Become an Android App Developer.\nHow To Develop A Complete Android App.\nYou, Will, Have A Good Project On your Profile that you can add to your CV When you Will Apply For Your Job.\nAfter Complete This Course You Can Upload This App On the Google Play store.\nYou Will Learn About Android Firebase From Basics To Advanced.\nYou, Will, Build A Complex Android App.\nYou, Will, learn how to develop An Office Task Management  Android App.\n\n\nHere are Some Feedbacks about my courses from my Students:\n\"I wanted an app development course that would show what is really important and that is what I got. I learned all features of Android for becoming Android developer. Certainly would recommend the course. \"\n\n\n\"Best android apps development course so far. First I learn basic of all android components. After that I learn how to develop real world android apps for client and App Store. I mostly like all firebase sections of this course. Instructor shows how to develop real world apps using firebase. After complete this section I learn a lot about firebase and I build many real world android apps. Thanks for your course.\"\n\n\n\"Best Android development course I have taken so far. The teacher has amazing teaching skills. He has the ability to describe all parts very clearly on a step-by-step basis. Highly recommended! \"\n\n\n\"Very well made course about Android Development. Will continue and hope to learn a lot more. I am very happy with what I have learned so far!\"",
      "target_audience": [
        "Anyone can take This course Who is want to become an Android App Developer.",
        "Who is want to improve their Android Development Skills.",
        "Who is Want to Develop A Complete Android App.",
        "Who is Want to develop a Complete Project and Want to add it on Their Profile.",
        "Who is want to Develop A Complete Android App Using Firebase."
      ]
    },
    {
      "title": "The Complete iOS 10 And Swift 3 Developer Course",
      "url": "https://www.udemy.com/course/the-complete-ios10-developer-course/",
      "bio": "The BEST online course for learning iOS development with practical approach and clear explanations",
      "objectives": [
        "Master iOS 10",
        "Master Swift 3",
        "Develop And Debug Apps",
        "Apply For Jobs"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "Downloading XCode",
          "Our First App"
        ],
        "Getting Started With Swift 3": [
          "Variables",
          "Comments",
          "Number Variables In More Detail",
          "Conditionals",
          "Conditionals A Deeper Look",
          "Switch And Case",
          "Operations With Variables",
          "Quiz 01",
          "Functions",
          "Manipulating Parameters Inside Of Functions",
          "Intro To Calculator App",
          "Calculator App Creation"
        ],
        "Getting Into Advanced Stuff": [
          "Auto Layout Basics",
          "Auto Layout Project",
          "Arrays",
          "Dictionaries",
          "Foor Loop",
          "While Loop",
          "Quiz 02",
          "Touch The Button Game"
        ],
        "Object Oriented Programming": [
          "Objects And Classes",
          "Initializers",
          "Objects And Functions",
          "Inheritance",
          "Polymorphism",
          "Optionals",
          "Data Encapsulation",
          "Quiz 03",
          "Warrior VS Zombies"
        ],
        "Advanced iOS Features": [
          "Navigation Bar And Tool Bar",
          "Working With Multiple View Controllers",
          "Model View Controller (MVC)",
          "Navigating Between View Controllers",
          "Passing Data Between View Controllers"
        ],
        "Table Views": [
          "Intro To Table Views",
          "Populating Table Views With Data",
          "Cells With Subtitles And Dequeing Reusable Cells",
          "UITableViewController",
          "Building Employee Tracker App Part 1",
          "Building Employee Tracker App Part 2",
          "Building Employee Tracker App Part 3",
          "Building Employee Tracker App Part 4"
        ],
        "Advanced iOS Features 2": [
          "Picker View And Date Picker",
          "Sliders And Custom Fonts",
          "Animations",
          "More Animations",
          "Playing Audio",
          "Shakes And Swipes"
        ],
        "Maps And Geolocation": [
          "Map View",
          "Adding Annotations",
          "Finding Users Location",
          "Saving Data With NSCoding",
          "Saving Places Project Part 1",
          "Saving Places Project Part 2",
          "Saving Places Project Part 3",
          "Saving Places Project Part 4"
        ],
        "Core Data": [
          "Intro To Core Data",
          "ManagedObject And ManagedObjectContext",
          "IMPORTANT MUST READ!",
          "Intro To Core Data 2",
          "Data Types, Passing The Context And Subclassing NSManagedObject",
          "Core Data Stack",
          "Finishing Our Core Data Stack",
          "Deleting And Editing Items In Core Data",
          "Relationships",
          "Sorting Our Data",
          "Searching For A Specific Item In Core Data",
          "Fetch Request Templates",
          "Asynchronous Fetching",
          "NSBatchUpdateRequest",
          "NSFetchedResultsController Intro",
          "NSFetchedResultsController",
          "Lightweight Migration"
        ],
        "Working With JSON And APIs": [
          "Working With JSON",
          "Whats The Weather App",
          "Downloading Images From The Web",
          "Saving Images With Core Data Part 1",
          "Saving Images With Core Data Part 2",
          "Saving Images With Core Data Part 3",
          "Saving Images With Core Data Part 4"
        ]
      },
      "requirements": [
        "A Computer Running OS X",
        "XCode(We Will Download It In Section 1)"
      ],
      "description": "So you want to learn how to create apps for iOS?\n\nWell you are at the right place!\n\nWe have built an impressive course that teaches you all fundamentals so you can build your own apps for iOS or apply for jobs!\n\nThe course is structured so that it begins slowly, giving you the basic stuff that you need to move forward, and after each video you will understand more and more about developing apps for iOS and what are best practices.\n\nWe take practical approach in teaching, so we are going to build real world apps that you can use for your portfolio or upload to the app store.\n\nYou will also benefit from my super fast response if you have any issues that you are stuck with(I check Udemy forums every day if someone posts a question). Oh and I have created a FREE live chat room where all the students gather to help each other out so you will have help available to you 24/7.\n\nSo what are you going to learn from this course:\n\nBasic And Advanced Features Of Swift\nWorking With Table Views\nAuto Layout\nObject Oriented Programming In Depth\nModel View Controller(MVC) Concept\nTable Views\nAdvanced Features Of Table Views\nAnimations\nPlaying Audio\nMaps And Geolocation\nSaving Data With NSCoding\nSaving Data With Core Data\nCore Data In Depth Such As Advanced Fetching, Sorting, NSBatchUpdateRequest, NSFetchedResultsController And Much More\nWorking With JSON And APIs\nDownloading Images From The Web\nSaving Images In Core Data\nWorking With Firebase\nAnd Much Much More\n\n\nUsing what you obtain in this course, you will be equipped with more than enough knowledge in order to continue improving yourself in the field of app development and you can also use the same skills to create Mac OS Apps.\n\nIf You ever had an idea for an awesome app, then enroll in this course and learn the tools that you need to develop Your next number ONE App!!!\n\nWhat is Your Risk By Taking This Course?\nNothing!! If you are not satisfied with the course, I promise I will give you a full refund of your money NO Questions asked!!\nEnroll Now!! You Will Not Be Disappointed!!",
      "target_audience": [
        "Absolute Beginners In Coding",
        "Absolute Beginners In iOS Development",
        "Experienced iOS Developers Looking To Refresh Knowledge And Gain New Skills"
      ]
    },
    {
      "title": "iOS Push Notifications: Beginner to Advanced",
      "url": "https://www.udemy.com/course/ios-push-notifications/",
      "bio": "Everything you could ever want to know about push notifications for iOS 11 in Swift",
      "objectives": [
        "Implement Local Notifications on iOS",
        "Implement push notifications with CloudKit & iCloud",
        "Implement push notifications with AWS",
        "Implement push notifications with Firebase",
        "Build custom server in Swift with Vapor",
        "Implement push notifications with Vapor"
      ],
      "course_content": {
        "Intro to Course": [
          "Introduction to this course",
          "Who this course is for?"
        ],
        "Local Notifications on iOS 11": [
          "Intro to App",
          "UI setup",
          "Setting up UNService",
          "Triggers Part 1",
          "Triggers Part 2",
          "Attachments",
          "Category and Actions",
          "Handling Notification Actions"
        ],
        "Working With iCloud & Push Notifications for iOS 11": [
          "Intro to App",
          "Setting up the UI",
          "Setting up iCloud",
          "Querying iCloud",
          "Receiving Silent Notifications",
          "Receiving Visible Notifications",
          "Handling Notifications"
        ],
        "Working With Firebase & Push Notifications for iOS 11": [
          "Intro to App",
          "UI Setup",
          "Setting up Push Notifications",
          "Firebase Database Part 1",
          "Firebase Database Part 2",
          "Firebase Messaging",
          "Topic Subscription",
          "Cloud Functions Up and Running",
          "Cloud Function Notification",
          "Notification Service Extension",
          "Outro"
        ],
        "iOS 11, Push Notifications, and Amazon AWS": [
          "Intro to App",
          "UI Setup",
          "Setting Up Persistence",
          "Setting Up User Notifications",
          "Up and Running with AWS",
          "Registering with SNS (Simple Notification Service)",
          "Subscribing and Publishing to Topics",
          "Adding Text Entry to Notifications",
          "Handling Notifications",
          "Notification Content Extension"
        ],
        "Launch Your OWN Push Server With Vapor & Swift": [
          "App Intro",
          "Installing Vapor",
          "Handling Get and Post",
          "Up and Running with Fluent",
          "Model Restructuring",
          "Sending Notifications",
          "Dynamic Notifications",
          "UP and Running My SQL",
          "Testing the App",
          "Outro"
        ]
      },
      "requirements": [
        "Requires computer running macOS",
        "Should have basic knowledge of Swift"
      ],
      "description": "iOS Push Notifications: Beginner to Advanced\nThis course will take you on a deep dive into push notifications. So many courses teach the bare bones minimum - but there is so much more to know in order to build systems that are actually useful, effective, and that can reach users in the right way.\nWhat You Will Learn\nYou'll start by learning the easiest form of notifications - Local Notifications. These type of notifications don't require a server, and are a quick way to reach users and deliver messages and content.\nAfter that, you will learn how to work with iOS's native CloudKit. Not only will you learn how to build out a robust push notification system, but you take advantage of some amazing CloudKit APIs and work with both silent & visible notifications.\nAfter CloudKit, you'll learn how to work with Firebase Cloud Messaging. Firebase is a powerful suite of tools that helps you build robust, scalable, mobile applications. You'll learn how to work with CloudFunctions and how to send both local and remote notifications for both iOS & Android.\nThen you'll learn AWS. AWS can be super confusing. We break it down super simple and help you build a push notification system on top of AWS that can scale to millions of users.\nLastly, we'll jump on the hot new Vapor tool. Vapor lets you write server-side applications all in Swift. You'll build your OWN server to deliver push notifications - and you'll do it all in Swift. So not only are you learning push, but full stack application development!\n\nThe Course Breakdown:\nLocal notifications\nCloudKit\nTriggers\nQueries\nBasic deep linking\nSilent & visible notifications\nFirebase Cloud Messaging\nFirebase Cloud Functions\nAWS Push notifications\nServer side Swift development w/ Vapor\nWho Should Take This Course\nAnyone who wants a better way to reach users in their iOS apps, should take this course. The course is designed to help you build robust push systems that can engage users and provide value to your customers.\nThis course assumes knowledge of Swift and goes far deeper into push notifications than any basic videos or tutorials you may have taken.\nDeveloper Support\nDon't forget, we offer a free Chat Community on our website where you can interact with over 10,000 other students and developers to network and get help.",
      "target_audience": [
        "Jr to Advanced iOS developers",
        "Anyone who wants to master Push Notifications",
        "Anyone who wants to use AWS, Firebase, CloudKit, or Vapor for Push"
      ]
    },
    {
      "title": "Kivy Bootcamp : Build 15 Project",
      "url": "https://www.udemy.com/course/build-15-simple-project-with-kivy/",
      "bio": "Build 15 Project With Kivy ..Learn How To Develop Your Own Cross Platform Application Easily",
      "objectives": [
        "Make Advanced Things In Kivy",
        "Add Some Good Things In Their Android Apps And Games",
        "Run Our Projects On Their Android Phones",
        "Make A Lot OF Projects With Kivy"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Overview",
          "Gift for you"
        ],
        "Installation": [
          "Install kivy",
          "Install Python",
          "kivy Code Part 1",
          "Kivy Code Part 2",
          "kivy with python",
          "How to install kivy on ubuntu"
        ],
        "Progict": [
          "Label text size",
          "Label text color",
          "TextInput",
          "Disabled Color",
          "Rotation",
          "Clock",
          "Popup",
          "Layout Project",
          "Label Mipmap",
          "Edit text",
          "Animation",
          "Scrolviow",
          "Carousel Button",
          "Button Animation",
          "ActionGroup Button",
          "Source Code For all lessons"
        ]
      },
      "requirements": [
        "Python Basics",
        "Some Kivy Basics (Recommended : Learn Kivy From Scratch Course)"
      ],
      "description": "Welcome In Build 15 Simple Project With Kivy , I Will Build 15 Project With Kivy To Make You Able To Build Your Own Applications Or Games Easily .. ِAll You Need Is Just  Some Python Basics And Some Kivy Basics (Recommended : Learn Kivy From Scratch) , In This Course I Will Learn You Hoe To Add Some Animations In Your Applications ,  Treat With Pop Up ,  Some Advanced Topics In Layout Management  , Scroll View And Some Other Advanced Lessons And Projects Which Will Enable You Yo Make Any Applications Or Games You Want .Wait My New Courses For More Projects With Python And Kivy  , Do Not Forget To Give Me Your Feedback About The Course",
      "target_audience": [
        "Any One Want To Develop Android Apps With Python And Kivy"
      ]
    },
    {
      "title": "iOS & Swift - Financial App with Stock APIs & Unit Tests",
      "url": "https://www.udemy.com/course/ios-14-swift-5-financial-app-with-stock-apis-unit-tests/",
      "bio": "Build a dollar cost averaging calculator to project potential returns for financial assets like stocks, equities & ETFs",
      "objectives": [
        "Parse financial data via Stock APIs on Alpha Vantage",
        "Rest API calls with API key",
        "Investment concepts like Dollar Cost Averaging",
        "Reactive programming via Combine framework",
        "Unit Tests",
        "Write reusable code using extensions & protocols",
        "Parse complex JSON data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Setup project",
          "Add search controller",
          "Add prototype cells"
        ],
        "Connecting with Stock APIs": [
          "Get API keys",
          "Create search results model",
          "Integrate API service"
        ],
        "Display Search Results": [
          "Handle search results",
          "Display search results on tableviewcell",
          "Add modes",
          "Implement tableview placeholder",
          "Show animation on search"
        ],
        "Setting up the Calculator": [
          "Setup calculator cell",
          "Add form cell",
          "Clean up UI",
          "Guard against empty search query"
        ],
        "Creating the models": [
          "Add time series monthly adjusted model",
          "Parse search query",
          "Add time series monthly adjust publisher",
          "Refactor API service",
          "Handle search results selection",
          "Sort time series dictionary",
          "Get month infos",
          "Create asset model",
          "Update currency labels",
          "Fix UI bug"
        ],
        "Add date selection": [
          "Show date selection",
          "Populate dummy date selection cells",
          "Update date selection cell",
          "Handle date selection",
          "Pop date selection tableviewcontroller",
          "Handle previous date selection",
          "Handle date slider",
          "Index out of range bug fix",
          "Observe textfields"
        ],
        "Dollar cost averaging service": [
          "Add dca service",
          "Get investment amount",
          "Get current value",
          "Get number of shares",
          "Refactor and manual test",
          "Update current value view"
        ],
        "UI Fix": [
          "Refactor UI",
          "Format gain label",
          "Update yield",
          "Update annual return",
          "Update UI",
          "Remove redundant animation",
          "Fix annual return bug",
          "Add app icon",
          "Disable tableview scroll"
        ],
        "Unit Tests": [
          "Setup for unit tests",
          "Unit tests crash course",
          "Add get investment amount tests",
          "Test case plan",
          "Add first unit test",
          "Complete first unit test",
          "Add second test case",
          "Add final test case",
          "Improve ui",
          "Add calculator presenter",
          "Add calculator presenter tests",
          "Refactor models and closing"
        ]
      },
      "requirements": [
        "1 year iOS experience",
        "Basic competency with Swift & Xcode"
      ],
      "description": "Welcome to the iOS  & Swift - Financial App with Stock APIs & Unit Tests course!\nThis course is designed for iOS developers with at least 1 year iOS experience who want to learn to work with Stocks APIs to build a finance investment app. You will learn to make Restful API calls to Alpha Vantage, a stock API provider to query asset prices and other financial data to build a dollar cost averaging calculator to project potential returns for financial assets like stocks, shares, equities & ETFs.\nYou will also learn how to write unit tests to ensure that the app logic is maintained and protected from erroneous change. This is an important skill to master if you are working in a huge team and with a high tier tech company.\nWe will also build this app using a reactive architecture where states are observed using the Combine framework with Swift 5 and Xcode 12. You will learn how to structure clean code that is both reusable, extensible and highly readable.\n\n\nHere are some of the comments by my students\n\n\nWell, I can say this course is really creating an \"Awesome Onboarding\" for me. Great job.\n- Hery Yang\n\nThis is most excellent course. you are speaking clearly, and at a good pace, :-) many thanks for answering my question about git and producing a video to explain its use, very easy to follow and it was just what I needed so I am now able to manage my mistakes!\n- Jason Walkins\n\nIt's a easy course and good for students who would like to start with iOS like me :)\n- ਦੀਪ ਗਿੱਲ\n\nThis is a great course, The instructor is very knowledgeable. consider taking this course if you already have iOS experience. The instructor brings real world knowledge that benefit me a lot.\n- Shushan Mordi\n\nThis course is as good as it gets. Kelvin is an extremely professional and thorough tutor that is very quick at getting back to your queries. I would highly recommend this course!\n- Michael\n\nExcellent Content, I appreciate the different styles of onboarding screens and all the great explanation!\n- Carey M\n\nThe instructor is knowledgeable and clear with his instructions. The course is great and informative for those who are planning to build a skeleton they can build on their own app projects Instructor is also helpful\n- Raphael Lim",
      "target_audience": [
        "You want to learn to build a financial investment app",
        "You have at least 1 year iOS experience",
        "You want to learn reactive programming using Combine framework",
        "You want to learn to write unit tests"
      ]
    },
    {
      "title": "Flutter & Dart Essentials-Build Mobile Apps like a Pro",
      "url": "https://www.udemy.com/course/flutter-dart-essentials-build-mobile-apps-like-a-pro/",
      "bio": "Build Android and iOS apps, learn Dart, Flutter, Provider, Riverpod, SQLite, Firebase, Network Request, Testing and more",
      "objectives": [
        "Dart Basics, Variables and Data Types, Operators, Loops, Control Statements, Data Structures - List Map and Set",
        "Dart Function, Lambda Expression, Optional Parameters",
        "Class Object and Constructor, Named Constructor, Inheritance, Polymorphism, Abstraction, Mixin",
        "Null Safety in Dart",
        "Asynchronous Dart, Future, Async Await",
        "Flutter Widgets - Layout Widgets, Multi Child Layout Widgets, Theme Widgets, Scrollable Widgets, Input Widgets, Drag and Drop Widgets, Code Refractoring",
        "State Management with Provider",
        "State Management with Riverpod",
        "Unit, Widget and Integration Tesing",
        "Navigation using Router (go_router)",
        "Local Persistance using SQLite, Make Call, Send SMS & Email",
        "Flutter Networking - Consume REST API, Location Detection",
        "Firebase - Authentication (Email Password & Google), Cloud Firestore, Storage, Cloud Messaging, Cloud Function",
        "Projects - Word Hurdle Puzzle Game, Virtual Visiting Card(Vcard), Earthquake Log App, ShopAtoZ (ecommerce app)"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "What's inside this course"
        ],
        "Dart Programming Language": [
          "Welcome to Dart",
          "Say Hello World!",
          "Number Types in Dart",
          "String Interpolation",
          "Var and Dynamic types",
          "Final and Const keywords",
          "Common Operators in Dart",
          "Quiz on Dart Basics",
          "If Else Statement",
          "Switch Statement and Expression",
          "Data Structure - List",
          "Data Structure - Map",
          "Data Structure - Set",
          "Loops in Dart",
          "Null Safety in Dart",
          "Function in Dart",
          "Lambda Expression in Dart",
          "Class Object and Constructor",
          "Named Constructor",
          "Inheritance in Dart",
          "Method Overriding",
          "Abstract Class in Dart",
          "Runtime Polymorphism",
          "Mixin in Dart",
          "Final and Static Components",
          "Asynchronous Components - Future and Async Await",
          "Wrap Up"
        ],
        "Setup SDKs and Tools": [
          "System requirements for tools installation",
          "Install Jetbrains Toolbox and download plus install Android Studio",
          "Install Flutter Plugins and Android Platform SDK Tools",
          "Create a new Virtual Android Device",
          "Download and install Flutter SDK using VSCode",
          "Create your first Flutter Project and Run",
          "About the following old lectures",
          "[OLD] Install Flutter SDK on Windows",
          "[OLD] Download and Install Android Studio on Windows",
          "[OLD] Install Flutter and Dart Plugins",
          "[OLD] Install Android Emulator"
        ],
        "Flutter Basic Widgets": [
          "Welcome to Flutter",
          "Hello Flutter - Our First App",
          "Quick Overview on Profect File Structure",
          "Center Widget - Put the text in Center",
          "MaterialApp - Our first theme widget",
          "Scaffold and AppBar",
          "Show Image from Network",
          "Column Widget and its Axis",
          "Row Widget and its Axis",
          "Design Practice",
          "Solution Code for Design Practice",
          "Code Refractoring",
          "Stack and Positioned Widget",
          "Another Design Challange",
          "Solution for Design Challange",
          "ListView vs Column",
          "Create ListView children dynamically",
          "ListView Builder Constructor",
          "GridView Builder Constructor",
          "Navigate using Material Page Route",
          "The Counter App from Scratch",
          "Introducing Stateful Widget",
          "Excercise on Stateful Widget",
          "Solution for Excercise on Stateful Widget",
          "Input Widgets - TextField",
          "Input Widgets - Checkbox",
          "Input Widgets - Radio",
          "Input Widgets - DropdownButton",
          "Assignment - ToDo App",
          "ToDo App Solution - Part 1",
          "ToDo App Solution - Part 2",
          "ToDo App Solution - Part 3",
          "ToDo App Solution - Part 4",
          "Hot Reload and Restart",
          "Wrap Up"
        ],
        "State Management with Provider": [
          "State Management Overview",
          "Ephemeral and App State",
          "Add Provider Library",
          "Replace setState with Provider in Counter App",
          "Few observations",
          "Your Assignment",
          "Assignment Solution"
        ],
        "Project-Word Hurdle": [
          "Project Overview",
          "Project and Library Setup",
          "Word Hurdle Page Overview",
          "Create Hurdle Provider",
          "Create the Hurdle Board",
          "Create KeyboardView",
          "Create VirtualKey Widget",
          "Collect the 5 letters",
          "Show letters on Hurdle Board",
          "Delete letters from Hurdle Board",
          "Check Input for Validation",
          "Check result and show dialog",
          "Mark letters on Hurdle Board",
          "Reset the Game",
          "Wrap up - A few suggestions",
          "Download full project"
        ],
        "Navigation using Go Router": [
          "Flutter Navigation Overview",
          "Setup project with Go Router package",
          "Navigate to different routes",
          "Navigate using Name",
          "Pass arguments as path parameters",
          "Pass arguments as extra",
          "Customize Error Page and Redirect Routes",
          "Router and Navigator Together",
          "Wrap Up"
        ],
        "Project-Virtual Card Holder": [
          "Project Overview",
          "Project and Library Setup",
          "Create Home Page",
          "Add BottomNavigationBar to HomePage",
          "Create Scan Page and add Camera Buttons",
          "Capture and Select Image",
          "Scan Text from Image",
          "Add LongPressDraggable Widget and make each line draggable",
          "Create Drop Target Widget",
          "Drop items on DropTarget Widget",
          "Add a Next Button",
          "Create Form page and Pass Contact Object",
          "Assign values to TextFormFields",
          "Modify ContactModel Class",
          "Create Database and Contact Table",
          "Write insert and query methods",
          "Save Contact and show in a list",
          "Update list after insert",
          "Bux Fixed",
          "Write Delete method",
          "Delete a Contact",
          "One more SILLY bug fixed",
          "Update Contact Favorite Field",
          "Show Favorite Contacts",
          "Migrate Database",
          "ContactDetailsPage with FutureBuilder",
          "Make Call and Send SMS",
          "Your Assignment",
          "Wrap Up",
          "Download Full Project"
        ],
        "Project Earthquake Log App": [
          "Earthquake App Overview",
          "About USGS API",
          "Project and Library Setup",
          "Create Dart Model class from JSON",
          "Create Earthquake Provider and declare properties",
          "Make Get Request",
          "Show Earthquake Data on HomePage",
          "Show Alert Color with Chip Widget",
          "Sort Earthquake Data",
          "Selet Date and Change Date Parameters",
          "Detect Device Current Location",
          "Convert coordinates to Placemark",
          "Wrap Up",
          "Download full project"
        ],
        "Firebase Project - Admin App": [
          "Module Overview",
          "Firebase Overview",
          "Create Firebase Project",
          "Add Flutter project to Firebase",
          "Create Login and Dashboard Page",
          "Enable Authentication Service and Create a User",
          "Redirect to Login or Dashboard Page",
          "Login with Email and Password",
          "Logout from App",
          "Create Firestore Database",
          "Create Admins Collection and Document",
          "Validate Admin Authorization",
          "Create Dashboard Items",
          "Create Brand Data Class and define database methods",
          "Create Brand Page and Telescope Provider",
          "Save Brands",
          "Telescope Data Overview",
          "Download Telescope resources",
          "Add Freezed Package",
          "Create ImageModel using freezed",
          "Create Telescope Model using freezed",
          "Declare Constants and Properties",
          "Add Telescope Page - Select Image and Brand",
          "Add Telescope Page - Build RadioGroup",
          "Add Telescope Page - Build Form Fields",
          "Important note on Firebase Storage",
          "Add Telescope Page - Create methods for uploading image",
          "Add Telescope Page - Create Telescope instance",
          "Add Telescope Page - Create methods to save telescope",
          "Add Telescope Page - Save Telescope to Firestore",
          "ViewTelescopePage - Show telescopes",
          "Telescope Details Page Overview",
          "Add and show additional images",
          "Delete image from Storage",
          "Add telescope description",
          "Update Description",
          "Update Telescope Price"
        ]
      },
      "requirements": [
        "Laptop/Desktop/MacBook",
        "Stable Internet Connection",
        "Basic knowledge on any programming language",
        "No experience needed for Mobile Application Development platform(Native/Cross/Hybrid). You will learn from scratch."
      ],
      "description": "Currently Flutter is one of the most popular cross platform framework amongst the developers. Flutter targets multiple platforms from a single code base. In this course, you will learn how to build apps for Android and iOS using the core components of Flutter. Also, you will learn syntaxes and essential features of Dart Programming Language since Dart is used to build Flutter projects.\nYou will begin with Dart Programming Language and you will begin from scratch. Dart is a powerful language and heavily optimized for Flutter. You will learn many features of Dart, specially those are required for Flutter. You will learn Lambda Expressions which will help you work functionally and alos Null Safety will protect your code from crashing due to Null Pointer Exception. You will learn about Object Oriented concepts like Inheritance, Polymorphism, Abstraction and Mixin that can help you to write your code in a modular format.\nYou will be introduced with many Widgets-the main core components of Flutter. The more you know about Widgets, the more you know Flutter. It's also important to take few considerations while chosing Widgets, because at the end of day, performance play a key role in any software development. Widgets need to be refractored and you will learn how to seperate codes into reusable Widgets and Methods. You will also learn the basic State Management approach using Stateful Widget and the necessity of Stateless and Stateful, where to use, when to use and why to use them in a proper way.\nYou will learn Provider - a simple yet powerful approach for State Management and also know how this approach can turn your project in a extendable, expandable pattern. You need to understand the state and then chose which approach is best for you. State Management is a very crucial part of Flutter and many developers are tempted with many approaches and end up overdoing things. You will learn exactly what you need to identify and manage the states of you app in an optimized way.\nTo persist data, this course covers both the local and cloud persistance. Local Database is important to cache data and also for apps those really dont' need to share its data to the world. You will learn SQLite and CRUD operations and migrations also. You will use Firebase for cloud solution, a powerful backend backed by Google. Firebase provides many services, both in free and paid subscription. Authentication, Realtime Database, Storage, Messaging, Functions are the key services that has been covered in this course.\nYou will learn how to make web requests and fetch JSON and convert it to Dart objects. Dart provides a convenient package for handling network operations and web requests.\nIn parallel with learning, you will be practicing the conventions and recommendations for writing good codes using principals, patterns and good practice approaches.\nBy the end of this course, you will be able to build any kind of mobile apps using Flutter and will have a strong foundation and clear concept.",
      "target_audience": [
        "For every self paced learners, who wants to learn Flutter, build beautiful mobile apps and upgrade their skills to the next level"
      ]
    },
    {
      "title": "GraphQL with iOS and SwiftUI: The Complete Developers Guide",
      "url": "https://www.udemy.com/course/graphql-in-ios-using-swift/",
      "bio": "Build GraphQL Apps in SwiftUI Using Apollo, NodeJS and MVVM Design Pattern",
      "objectives": [
        "GraphQL structured query language",
        "Integrating GraphQL in iOS applications using Apollo Framework",
        "Creating their own custom server, which serves GraphQL queries and mutations",
        "MVVM Design Pattern in SwiftUI Apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About the Instructor",
          "Prerequisites",
          "Exercise Files"
        ],
        "Understanding GraphQL": [
          "What is GraphQL?",
          "GraphQL vs REST",
          "Core Concepts",
          "Queries",
          "Resources: Queries",
          "Mutations",
          "Resources: Mutations",
          "Fragments",
          "Resources: Fragments",
          "Subscriptions",
          "Resources: Subscriptions"
        ],
        "Country App": [
          "What we will be building?",
          "What is Apollo for GraphQL?",
          "Installing Apollo CLI",
          "Resources - Installing Apollo CLI",
          "Adding Apollo Package to the SwiftUI App",
          "Resource: Adding Apollo Package to the SwiftUI App",
          "Downloading Schema and Adding Code Generation Script",
          "UPDATE - Code Generation Script",
          "Resource: Downloading Schema and Adding Code Generation",
          "Fetching All Countries",
          "Displaying Countries in SwiftUI List",
          "Implementing GetCountryByCode Query in GraphQL",
          "Displaying Country Info"
        ],
        "Understanding MVVM Design Pattern": [
          "What are Design Patterns?",
          "What is MVVM?",
          "Why MVVM?",
          "MVVM Architecture and Web APIs",
          "Difference Between ViewModel and Model"
        ],
        "Countries App - MVVM Design Pattern": [
          "Agenda",
          "Implementing CountryListViewModel and CountryViewModel",
          "Displaying Countries on Screen Using CountryListViewModel",
          "Implementing CountryDetailViewModel",
          "Displaying Country Details on the Screen"
        ],
        "Weather App": [
          "What we will be building?",
          "Resource",
          "Tour of the App",
          "Constructing GraphQL Query to Get Weather By City",
          "Implementing WeatherViewModel",
          "Fetching the Weather",
          "Displaying Weather on Screen"
        ],
        "GitHub App - Setup": [
          "What we will be building?",
          "Understanding GitHub GraphQL API",
          "Resource: GitHub GraphQL API",
          "Tour of the Starter Project"
        ],
        "GitHub App - Fetching and Displaying Latest Repositories": [
          "Constructing GetAllRepositoriesForUser GraphQL Query",
          "Generating GitHub Personal Access Token",
          "Sending Access Code with GraphQL Request in Headers",
          "Implementing RepositoryListViewModel and RepositoryViewModel",
          "Displaying List of All Latest Repositories",
          "Resources"
        ],
        "GitHub App - Mutations": [
          "Constructing the Create Repository Mutation Query",
          "Testing CreateRepository Mutation Query",
          "Resource: Mutation Query and Query Variables",
          "Implementing AddRepositoryViewModel",
          "Integrating AddRepositoryScreen with AddRepositoryViewModel",
          "SOLUTION: Integrating AddRepositoryScreen with AddRepositoryViewModel"
        ],
        "GitHub App - Fetching and Displaying Top Repositories": [
          "Constructing GraphQL Query for Top Repositories",
          "Implementing getTopRepositoriesForUser in RepositoryListViewModel",
          "Implementing RepositoryNode Protocol",
          "Switching Views Between Latest Repositories and Top Repositories"
        ]
      },
      "requirements": [
        "Knowledge of Swift Language is recommended",
        "Knowledge of SwiftUI is recommended",
        "Knowledge of NodeJS and JavaScript is recommended",
        "Xcode 12.5 or above"
      ],
      "description": "GraphQL is an open-source data query and manipulation language for APIs, and a runtime for fulfilling queries with existing data. GraphQL is gaining popularity at a very fast pace and more and more companies are exposing their data using GraphQL. Some are even saying that GraphQL is the new REST and in a span of few years, it will become the default way for implementing APIs.\nCheck out the contents of the course:\n\n\nUnderstanding GraphQL\nIn this section, you will learn the concepts behind GraphQL technology and how it is different from REST. You will learn about queries, mutations, fragments and subscriptions.\n\n\nCountries App\nIn this section, you will learn how to consume Countries GraphQL API. You will learn how to integrate the Apollo framework with your iOS application, download schema, generate models and then finally display them in your SwiftUI application.\n\n\nUnderstanding MVVM Design Pattern\nIn this section, you will learn the concepts behind the MVVM Design Pattern. You will learn the purpose of each component and how it fits in with the MVVM pattern.\n\n\nCountries App - Building Using MVVM Pattern\nIn this section, you will revisit the Countries App and reimplement it using the principles of MVVM Design Pattern. You will learn how to implement container view models, read only view models in SwiftUI application.\n\n\nWeather App\nIn this section, you will learn how to implement a Weather App in SwiftUI using GraphQL weather API. You will also implement the city search capability, which will allow you to search weather for a city by name.\n\n\nGitHub App\nIn this section, you will learn how to consume the GitHub GraphQL API. You will start by getting comfortable with the GitHub GraphQL API using their build-in explorer. Next, you will integrate it with your SwiftUI application. You will allow the user to list their ten most recent repositories, as well as top starred repositories. Finally, you will implement the mutation, so users can add new repositories to their GitHub profile from right within the iOS application.\n\n\nGetting Started with Apollo Server\nIn this section, you will learn how to implement a custom Apollo Server using NodeJS and JavaScript. You will learn about the GraphQL type system, schemas and how resolvers can be used to resolve the queries.\n\n\nMovies App\nIn this section, you are going to implement a complete Movies App. You will learn to construct a custom GraphQL server using the Apollo framework and then you will make the iOS client in SwiftUI framework.\n\n\nRequirements\n1) Knowledge of Swift Language is recommended\n2) Knowledge of SwiftUI is recommended\n3) Some knowledge of NodeJS and JavaScript is recommended but not required\n\n\nBy the end of this course, you will be comfortable using GraphQL with your iOS applications.\n\n\nHope you enjoy the course!",
      "target_audience": [
        "Students who wants to learn about GraphQL structured query language",
        "Students who wants to integrate GraphQL into their SwiftUI applications",
        "Students who wants to learn how to build their own custom GraphQL server in NodeJS"
      ]
    },
    {
      "title": "Android Architecture Masterclass",
      "url": "https://www.udemy.com/course/android-architecture/",
      "bio": "Master Android Architecture with the modern Android App Development tools: Jetpack Compose, MVVM, Hilt and more.",
      "objectives": [
        "Use modern Android Development tools in a real Android app: Kotlin, Jetpack Compose, Compose Navigation, MVVM, Hilt, Room, Coroutines",
        "Decouple the user interface logic from the rest of the application",
        "Organize the screens navigation logic in one class with a clean and convenient interface",
        "Leverage Dependency Injection to separate functional and construction concerns in your codebase",
        "Create reusable and testable Use Case classes for individual business flows",
        "Discover the drawbacks of the Repository Pattern",
        "Structure the app's packages to reflect its core business domain",
        "Avoid dirty code and God Classes in your Android application"
      ],
      "course_content": {
        "Introduction": [
          "Tutorial Application",
          "Software Architecture",
          "Udemy Review System"
        ],
        "Package Structure": [
          "Package Structure",
          "Package by Feature",
          "Package Presentation Logic",
          "Package Common and Generic Logic",
          "Package Structure Summary"
        ],
        "Presentation Layer": [
          "Presentation Layer",
          "Screens",
          "Screens (Refactoring)",
          "Centralizing the Navigation Logic in One Place",
          "Centralizing the Navigation Logic in One Place (Refactoring)",
          "Fixing a Bug in Bottom Tabs Navigation",
          "ScreensNavigator",
          "ScreensNavigator (Refactoring)",
          "Presenter",
          "Exercise 1",
          "Solution Exercise 1",
          "Simple Presenter Limitations",
          "Fixing a Bug in Coroutines Lifecycle",
          "ViewModel",
          "Exercise 2",
          "Solution Exercise 2",
          "Model View ViewModel (MVVM)",
          "Presentation Layer Summary"
        ],
        "Domain Layer": [
          "Domain Layer",
          "UseCase (Interactor) Objects",
          "Presentation vs Domain Layer Caching",
          "Exercise 3",
          "Solution Exercise 3",
          "Real-World UseCase Objects",
          "Decouple From the External Data Structures",
          "Repository (Anti) Pattern",
          "Domain Layer Summary"
        ],
        "Dependency Injection": [
          "Dependency Injection",
          "Manual (Pure) Dependency Injection vs Dependency Injection Frameworks",
          "Adding Hilt to the Project",
          "Hilt Application and Entry Point",
          "Injecting ViewModel Using Hilt",
          "Exercise 4",
          "Solution Exercise 4",
          "Decouple UI Logic with Dependency Injection",
          "Global Data Cache",
          "Dependency Injection Summary"
        ],
        "Course Summary": [
          "Course Summary",
          "Legacy Content"
        ],
        "[OLD COURSE] Architecture": [
          "Course Overview",
          "Software Architecture",
          "Udemy Review System"
        ],
        "[OLD COURSE] MVx Architectural Patterns": [
          "Presentation Layer Architectural Pattern",
          "MVx"
        ],
        "[OLD COURSE] Review of Android Architecture Blueprint": [
          "Offiicial Android Architecture Blueprints",
          "Review of MVP Architecture Blueprint"
        ],
        "[OLD COURSE] MVx in Android": [
          "My Journey to MVx in Android",
          "The Main Benefit of MVx",
          "Extracting UI Logic from Activities",
          "From MVx to MVC",
          "MVx in Android Summary"
        ]
      },
      "requirements": [
        "Hands-on experience with Android development"
      ],
      "description": "In this course you'll journey into the depths of Android Architecture and learn to build clean and maintainable Android applications.\nDeveloping an Android application takes effort and skill, but it's even more challenging to keep this application maintainable and extensible in the long term. Just writing code to \"make it work\", without giving consideration to the big picture, can easily lead to a messy codebase.\nUnfortunately, dirty code is all too common in Android development. Many projects suffer from classes containing hundreds or even thousands of lines of code, circular dependencies, excessive coupling, code duplication, obscure naming conventions, poorly structured packages, and other deficiencies. These are serious issues that impede project progress and can make Android development a miserable experience.\nSaid that, Android development doesn't have to be a struggle, even with mature and complex projects! In this course, you’ll learn advanced architectural techniques that will guarantee the long-term success of your Android applications:\n\n\nClean Architecture\nProper way to structure application's packages\nModel-View-X architectural patterns\nHow to create reusable components that adhere to the Single Responsibility Principle\nDependency Injection architectural pattern\nand more...\n\n\nAfter completing this course, you'll be writing clean and maintainable code. Different features will be encapsulated in focused, decoupled classes. The classes themselves will be distributed among well-organized, properly named packages. You'll be using standard architectural patterns, so other developers will have easier time understanding your code. Your business flows will be encapsulated in standalone, reusable components. And much more...\n\n\nNo more classes with hundreds of lines of code!\nNo more excessive coupling!\nNo more code duplication!\nNo more changes in many places each time you add a new feature!\nNo more spaghetti code!\n\n\nSo, if you want to master advanced Android development techniques to build well-architected, clean Android applications, this course is perfect for you!",
      "target_audience": [
        "Android developers"
      ]
    },
    {
      "title": "Build Augmented Reality (AR) apps with ARFOUNDATION & Unity",
      "url": "https://www.udemy.com/course/build-augmented-reality-ar-apps-with-arfoundation-unity/",
      "bio": "Using AR Foundation and Unity, develop an ARFoundation Augmented Reality portal and a Life-Size fountain",
      "objectives": [
        "Understand different forms of Augmented Reality and their applications",
        "Develop an Augmented Reality Portal using AR Foundation",
        "Place a Life-Size fountain in real world",
        "Best practices in AR Foundation and Unity",
        "Students will create AR apps by writing codes in C# programming language"
      ],
      "course_content": {
        "What is Augmented Reality and AR Foundation": [
          "What is Augmented Reality",
          "What is AR Foundation",
          "*IMPORTANT* ARCORE & ARKit supported smartphones for AR Foundation",
          "Installation of Unity"
        ],
        "Basics of Unity 2019": [
          "Basics of Unity | Section Intro",
          "Understanding different panels in Unity",
          "Moving, rotating & scaling Gameobjects in Unity",
          "Game Panel in Unity",
          "Physics in Unity",
          "Increasing the light intensity",
          "Adding colors to Gameobject",
          "Adding textures to Gameobject",
          "Parent and child Gameobjects in Unity",
          "Local/Global and Pivot/Center tools in Unity",
          "Prefabs in Unity",
          "What are Scripts?",
          "Rotating the spheres",
          "Revolving the spheres"
        ],
        "AR FOUNDATION ONE": [
          "Section Introduction | ARFoundation One",
          "The main gameobjects for Plane Tracking",
          "Problem with ARFoundation packages technique",
          "Building the app for Android platform",
          "Testing the output on an Android smartphone",
          "Building and running the app on an iOS device",
          "Adding a Fountain model inside scene",
          "Enable and Disable generated planes"
        ],
        "ARFoundation Memory Portal": [
          "Section Introduction | ARFoundation Memory Portal",
          "Designing the Portal Entrance",
          "Moving and rotating the Main Camera",
          "Introduction to Shader's in Unity",
          "PortalDoor Shader script",
          "Understanding Stencil Test with Whiteboard animation",
          "Stencil Comparison Shader script",
          "Customising a Plane & Cube GameObject behind the Portal",
          "Adding Stencil Comparison Code inside Plane & Cube shaders",
          "Surrounding the Portal with Wooden Walls",
          "Portal Door Script for entering the Portal",
          "Problems related to Culling and Stencil Test",
          "What is Cull? It's importance in Portal",
          "Adding Photo's inside the Portal",
          "Adding ARFoundation functionalities to the Portal",
          "Building the ARFoundatuin Memory Portal application"
        ],
        "360 Degree Video Portal": [
          "Importing the 360 video and setting up the project",
          "Playing the 360 video inside Portal",
          "Enabling and Disabling the Plane"
        ],
        "Image Tracking in ARFoundation": [
          "Image Tracking section introduction",
          "Setting up ARFoundation packages",
          "Capturing an Image Marker",
          "Projecting the Dragon on top of the marker",
          "Building for iOS",
          "Building for Android",
          "Customising the Animator controller",
          "Adding fire flames to the dragon",
          "Customising the fire flames using animation events"
        ],
        "Bonuses": [
          "Get any of Dinesh's courses for upto 90% Off"
        ]
      },
      "requirements": [
        "Mac or Windows laptop",
        "ARCore supported Android smartphone or ARKit supported iOS device",
        "Basics understanding of Unity and C# programming will be of great benefit"
      ],
      "description": "Curious about ARFoundation, You have come to the right place. Learn the basics fundamentals and programming techniques required for building fully functional AR Foundation apps. For this course you will need an ARCore supported Android smartphone or an ARKit supported iOS device along with a Windows or Mac PC for building the applications\nSo what is Augmented Reality?\nAccording to Wikipedia, Augmented reality (AR) is a live direct or indirect view of a physical, real-world environment whose elements are \"augmented\" by computer-generated or extracted real-world sensory input such as sound, video, graphics or GPS data.\nIn Augmented Reality the real view is modified by a computer (Smartphone in this case). Augmented reality enhances one’s current perception of reality, whereas in contrast, virtual reality replaces the real world with a simulated one. Augmentation techniques are basically performed in real time,\nEg : Displaying live scores and statistics inside a live video of a sporting event\nPower of Augmented Reality & AR Foundation\nI came across Augmented Reality in 2015 after watching a video of Augmented Reality Book. I was fascinated to know that such technology actually exists. So I started researching on different Augmented Reality platform. Vuforia platform seemed very promising as developers all over the World have used Vuforia for developing Augmented Reality apps.\nPokemon Go game is the best example of Augmented Reality. Other than that Augmented Reality apps expand over a wide range of topics from Education, Business, Architecture, Health Industry, Home Decoration and obviously mobile gaming.\nCourse Content and Overview\nThis course is designed for students interested in creating Augmented Reality application’s using AR Foundation & Unity. We will start from basics of Unity, C# platform and then move to higher topics\nIntro & Basics of Augmented Reality\nIn the first section you will first understand as to what is Augmented Reality? Next we will look at the four different augmented reality techniques and its application. After this we look at the Hardware & software requirement for building AR Foundation applications.\nBasics of Unity\nAre you a beginner in C# programming?\nNo PROBLEM, In this course students will first understand the basics of Unity platform so that they can used to Unity toolsets before we dive in to the core Augmented Reality platform\nAR FOUNDATION ONE\nARFOUNDATIONONE is the first ARFOUNDATION application which you are going to create. In this application you will\nImport ARFoundation packages inside Unity\nUnderstand the fundamentals of Plane Tracking\nAdd a Life Size Foundation 3D model and scale it according to real world dimension’s\nInstall the Xcode & Android sdk software\nBuild the ARFoundation One app and run it on an ARKit supported iOS device or ARCore supported Android smartphone\nAR FOUNDATION MEMORY PORTAL\nIn this AR FOUNDATION Memory Portal application you will\nDesign the Portal Entrance\nWrite Shader programs for viewing Gameobjects inside the portal\nBuild a PhotoStudio surrounding the Portal\nIntegrate AR Foundation and place the Portal in Real World",
      "target_audience": [
        "Computer programming students interested in C# programming for building Augmented Reality applications",
        "Unity Developers interested in building AR Foundation Augmented Reality applications"
      ]
    },
    {
      "title": "Android Clean Architecture:MVVM, Jetpack components + Kotlin",
      "url": "https://www.udemy.com/course/android-clean-architecture-mvvm-jetpack/",
      "bio": "The market best practices while building an e-commerce app. A guide of how to create a clean and testable codebase.",
      "objectives": [
        "Learn MVVM architecture, proposed architecture by Google to build clean and testable codebase.",
        "Get to know the market good practices, the best practices tech industries are using nowadays.",
        "Understand the Design Principles, be able to use and implement the SOLID principles.",
        "Jetpack components, Live Data, Room, Navigation Components and more.",
        "Write tests. Writing unit tests and handling async operations."
      ],
      "course_content": {
        "Course introduction": [
          "How this course is structured",
          "Present the E-commerce sample project.",
          "Project repository"
        ],
        "View Layer": [
          "Clean Architecture Explained",
          "Before we start coding.",
          "Checkout to the correct branches",
          "View and ViewStates.",
          "Fix the Bug: ViewStates",
          "Creating the ViewModel for the Product List",
          "Understanding Coroutines and asynchronous operations",
          "Implementing coroutines",
          "Fix the Bug: Coroutines",
          "Implementing Retrofit",
          "Implement the navigation from the List to the Details screen"
        ],
        "SOLID + Clean Architecture": [
          "SOLID Principles",
          "Why do we need dependency injection",
          "Dependency Injection with Hilt",
          "Organizing our codebase packages structure"
        ],
        "Domain + Repository Layer": [
          "Implementing the Presentation & Domain Layer",
          "Implementing the database with Room",
          "Creating Use Cases for the Wish List",
          "Implement a WishlistRepository with Shared Preferences"
        ],
        "Testing good practices + error handling": [
          "Introduction to testing good practices",
          "Testing the domain objects and entities",
          "Testing the ViewModel",
          "Error handling for Product List",
          "Shopping cart feature.",
          "What is next?"
        ]
      },
      "requirements": [
        "A machine so that the Android Studio tool can be downloaded and installed.",
        "Basic Kotlin knowledge so we can focus on more advanced content.",
        "Open mind to learn new things that could help you with your next step in your career."
      ],
      "description": "At this point you probably already know how to build an app, but are you confident that you are following the market best practices? How would your app perform with millions of users? How clean and testable is your codebase?\nThose questions were asked in many interviews during my 8+ years of experience in Android, and you not only need to know what to answer but also how to build it.\n\nIn this course you will learn all that while building an e-commerce app. This app will consist of a list of products and a product details screen, where we will fetch the data from an API call and we will also save some data locally in the device.\nWe will talk about the layers of the Clean Architecture and start building our app by the View layer. Then we will talk a lot about Coroutines, Lifecycle, Scope, Dispatchers and ViewModel, and how we will use those concepts to asynchronously fetch data in combination with Retrofit. The communication between the Model/Business layer and the View will be implemented using the concept of ViewState and LiveData, we will also navigate and pass data between screens using the Navigation Component. We will also talk about the SOLID principles and implement a Dependency Injection library. At  the end, we will save data in a Database using Room and talk about Error Handling.\nLet's not forget about Testing, we will be writing test for all parts of our app.\nDuring this course you will be coding the whole time and we will see improvements being made in our app in every section.\nThis is the moment for you to get that dream job, a promotion or build a maintainable app with quality code.\n\n\nFor every lecture, there will be a specific branch for that, for example lecture-4, lecture-5, and so forth.\nREMEMBER… Quality is essential! And there is a full 30 DAY-money-back guarantee case you don't like it ;)",
      "target_audience": [
        "Want to improve your knowledge and become more senior Android Developer.",
        "This course is perfect for developers that already know the basic of Android development and want to learn market good practices."
      ]
    },
    {
      "title": "Mobile App Development: Make iOS & Android Apps Without Code",
      "url": "https://www.udemy.com/course/mobile-app-development-make-ios-and-android-apps-without-code/",
      "bio": "Quickly produce quality iOS and Android apps without learning any code.",
      "objectives": [
        "Create both an iOS and Android app in just a few hours",
        "Monetize your apps with ads, in-app purchases, or app store sales",
        "Quickly bring your app ideas to life",
        "Freelance as an app developer",
        "Additional lectures that may be added to the course"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction + Proof of Income",
          "Optional Expenses",
          "Getting Started",
          "Exploring the Control Panel",
          "Getting Ideas From Plugins",
          "Choosing a Niche",
          "Installing XCode",
          "Installing Android Studio"
        ],
        "Developing Your Apps": [
          "Creating an Outline",
          "Importing to XCode",
          "Importing to Android Studio",
          "Creating an Advanced Menu Screen",
          "Custom Text/HTML Screen",
          "Button Menus",
          "Images & Links",
          "Custom URL Screens & Missing Plugin Errors",
          "Graphics & Styling"
        ],
        "Getting in the App Stores": [
          "Publishing to the iOS App Store",
          "Preparing an Android Project",
          "Publishing to the Google Play Store"
        ]
      },
      "requirements": [
        "No pre-knowledge required",
        "A Mac or PC",
        "Those with a little HTML and CSS knowledge may be able to create even better app designs"
      ],
      "description": "Course updated: October 2015\nUse these various tools and techniques to go from app idea to earning money in the app stores today! Save time by removing the hurdles that come with coding apps manually.\nProfitable iOS and Android Apps in Just a Few Hours\nStep by step instructions from app concept, to app store submission\nTips for selecting a profitable niche\nIncluding in-app purchases, ads, or paid apps\nSee your app changes instantly without resubmitting to the app store\nTools to quickly generate beautiful graphics to make your app stand out\nBuild apps with maps, directions, social media streams, videos, music, push notifications and more!\nEnable your clients to easily edit the content of the apps you've created for them\nLearn techniques to get better app reviews\nSave tons of time by avoiding the hurdles that come with learning code\nEasily create a Flappy Birds clone\nKeep all the source code for your app to change at anytime\nStart earning money from apps today!\nFirst, I'll show you how to download, install, and setup all of the tools you'll need to get started. Then, you'll learn how to select a profitable niche and create an outline of your app.\nFrom there, you'll be creating and editing your app while seeing your changes on your device or emulator in real time! You can create basic apps with simple features or more complex ones with many different screens and functions.\nThen, you'll see how to upload your app directly to the App Store and Google Play Store and begin generating income!\nWhether you know nothing about code or you just need a quicker way to make apps, this is the best course for you! Additional lectures may be added to the course, plus you'll get prompt, friendly, responsive support by email or on the Udemy forums to help you every step of the way.",
      "target_audience": [
        "Anyone wanting to make a residual income",
        "People who have a hard time learning code languages but still want to develop apps",
        "Everyone with an app idea but not enough time to learn coding"
      ]
    },
    {
      "title": "Learn Flutter from scratch",
      "url": "https://www.udemy.com/course/learn-flutter-from-scratch/",
      "bio": "Build native mobile apps for iOS and Android",
      "objectives": [
        "Start writing Native applications for both iOS and Android"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting up Flutter",
          "Creating a project",
          "Hello World"
        ],
        "Widgets": [
          "Text Fields",
          "Switches",
          "Checkboxes",
          "Radio buttons",
          "Sliders",
          "Buttons",
          "Containers",
          "Columns and rows",
          "Exercise"
        ],
        "Navigation & Routing": [
          "Tabs",
          "Bottom Tab Bar",
          "Side Menu",
          "Routing"
        ],
        "Lists and Dialogs": [
          "Lists",
          "Expansion Panels",
          "Dialogs"
        ],
        "Http": [
          "Making Requests",
          "Decoding a response",
          "Exercise"
        ],
        "Flutter and Firebase": [
          "Introduction to Firestore",
          "Reading data from collections",
          "Writing data to a collection"
        ],
        "Project": [
          "Adding a login screen",
          "Adding external assets to your app",
          "Validating your text fields",
          "Adding a Signup Page",
          "Add a dashboard",
          "Signing up new users",
          "Logging in and Logging out"
        ],
        "Solutions to exercises": [
          "Solution to exercise 1",
          "Solution to exercise 2",
          "Code for the project",
          "What next ?"
        ]
      },
      "requirements": [
        "A computer",
        "'I can accomplish this' attitude"
      ],
      "description": "Flutter is Google's new framework for building native cross platform mobile apps that run on both iOS and Android phones. It uses the Dart Programming language which is simple and easy to pick up if you are already familiar with Object Oriented Programming concepts.\nThis course is targeted towards absolute beginners and it helps them to understand how to create simple, beautiful apps in flutter. This course also touches upon some concepts of both Firebase's cloud Firestore and Firebase Authentication. i.e., how to integrate these backend services into your flutter apps so that you can provide a rich and seamless experience to the end-user.\n\nWhat you will learn: Bringing in different widgets into your app screen, the basics of flutter and building simple apps with what you have learnt. (Code included).\n\nPrerequisite: Nothing. You just need to have willingness to learn mobile app development. I have made this course as short as possible, so that it covers only what's needed for the beginners to get started.\nWhat Next: This is a beginner's course. I am in the process of making an advanced course where we'll be building a full-fledged application with flutter. Stay tuned.",
      "target_audience": [
        "Everyone"
      ]
    },
    {
      "title": "SwiftUI - Learn How to Build Beautiful, Robust, Apps",
      "url": "https://www.udemy.com/course/swiftui-course/",
      "bio": "Create stunning user interfaces across all Apple platforms with Swift 5",
      "objectives": [
        "Create Amazing Interfaces with SwiftUI",
        "Build Apps for All Apple Platforms",
        "Create Reuseable Views",
        "Leverage SwiftUI for Enhanced Accessibility",
        "View Your Code Changes IMMEDIATELY with Preview",
        "Bind Your Data With Your UI",
        "Animate With Simplicity",
        "Integreate SwiftUI Into Existing Projects"
      ],
      "course_content": {
        "Introduction": [
          "What You Need"
        ],
        "Your First SwiftUI App": [
          "New Xcode Project",
          "Images",
          "Stacks",
          "Customization",
          "Reusable Views",
          "Rows",
          "Lists",
          "Passing Data",
          "Source Code"
        ],
        "Xcode Previews": [
          "Testing Different Device and Text Sizes",
          "App Fixes",
          "Preview Pro Tips",
          "Source Code"
        ],
        "Views Deep Dive": [
          "View Basics",
          "Images",
          "Stacks",
          "Buttons",
          "Controls",
          "Subviews and Refactoring",
          "Source Code"
        ],
        "Data and SwiftUI": [
          "Data Setup",
          "State",
          "Bug",
          "NavigationLinks",
          "ObservedObject",
          "EnviromentObject",
          "Source Code"
        ],
        "Accessibility": [
          "Accessibility",
          "Source Code"
        ],
        "Drawing and Animation": [
          "Shapes",
          "Drawing Lines",
          "Shapes and Gradients",
          "Drawing Challenge",
          "Animation",
          "Transitions",
          "Source Code"
        ],
        "SwiftUI for MacOS, WatchOS, and TvOS": [
          "MacOS - tvOS - WatchOS",
          "Source Code"
        ],
        "SwiftUI In Existing Projects": [
          "SwiftUI In Existing Projects",
          "Source Code"
        ],
        "Outro": [
          "Where to Go Next"
        ]
      },
      "requirements": [
        "Some Swift Experience"
      ],
      "description": "Apple has just announced the biggest thing since Swift, and it is aptly named, SwiftUI. Apple changed the game with the release of Swift 5 years ago. It has helped millions of developers create amazing apps with easy to learn yet powerful clean code. SwiftUI brings that same ideal to the visual side of apps.\nSwiftUI helps developers by binding their User Interfaces with their data. When the data changes, so does the UI. When the UI changes, so does the data. SwiftUI is also incredibly reusable. Views you create can be reused time and time again.\nSwiftUI is also baked into the new Xcode 11 and uses Previews to show you in REAL TIME how your code changes will effect the look of your app.\nIn this course we'll cover:\nYour First SwiftUI App\nXcode Previews\nViews Deep Dive\nData and SwiftUI\nAccessibility\nDrawing and Animation\nSwiftUI for MacOS, WatchOS, and tvOS\nSwiftUI In Existing Projects\nCome join and learn the biggest developer tool released since Swift!",
      "target_audience": [
        "Swift developers wanting to learn SwiftUI, the future of app developement"
      ]
    },
    {
      "title": "Swift TDD - Test Driven Development for Swift no more bugs",
      "url": "https://www.udemy.com/course/tdd-swift/",
      "bio": "Prove your code is working every step of the way using a formalized test-driven development (TDD) process in Swift",
      "objectives": [
        "Understand Test Driven Development (TDD)",
        "Use apple unit test framework",
        "Use appe UI test framework",
        "Create and execute tests for Unit and UI",
        "Create and execute code coverage",
        "Create and execute code performance"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to this course",
          "Before we start I really want to hear from you"
        ],
        "Creating the Division App, Unit Test Extension, Test UI Extension and Basic UI": [
          "Creating the App with the Unit test Extension and UI Test Extension",
          "Setup the UI using stack view and constrains",
          "Adding the IBOutlets and IBActions"
        ],
        "Test Driven Development - The basics": [
          "Creating a Calculator Brain Unit",
          "Basics about Unit Testing in XCode",
          "Creating our first test case and implement our first function based on it",
          "XCTAssert, there are many they of them, lets check for nil values"
        ],
        "Test Driven Development - Beyond the basics": [
          "How to test completion blocks",
          "MeasureBlock, how fast or how slow is your function running",
          "New Online Class and Test Class",
          "Should it Pass or Should it Fails"
        ],
        "Asynchronous Tasks how to handle it with Expectations": [
          "Creating an Asynchronous call to the API service",
          "Allowing the app to make HTTP calls to the API",
          "When error happen in asynchronous call we may not see it",
          "Setting Expectations"
        ],
        "Code coverage": [
          "Code coverage"
        ],
        "UI Testing": [
          "Add functionality to the Calculate Button",
          "First simple UI testing",
          "Entering Values in the TextFields, Tapping Buttons and Reading Labels (manually)",
          "Recording the UI to generate the test \"automatically\""
        ],
        "Final test": [
          "Final test and training for an Interview"
        ],
        "Files and Resources": [
          "Files"
        ]
      },
      "requirements": [
        "Students should know how to program in Swift and/or Object-C before start this course"
      ],
      "description": "Did you ever had that feeling that you fix one bug and it creates another two? Well it maybe because you are and you don't know because you are not adopting TDD\n\nIf you are already a Swift developer and want to be the best in the field this course is for you, Test Driven Development also known as TDD is a must have skill for any serious professional or anyone tired of expend precious time \"hunting\" for bugs.\nEven the best programmer write bug codes, it is almost impossible to write the perfect code, even than, what work today may not work tomorrow, frameworks change, APIs change even the iOS every year we have a new one. Now how to find out if your old code is compatible with this new version? And if not what part isn't? Can you see how a little work before hand can make life much easier in the future?\nTDD the concept of start development from the test phase, ensure that all the relevant parts of your code is tested, running the automated test ensure that the new changes you just made didn't create a bug in the old functions.\nYou may ask, but how really important is TDD? Until XCode 5 TDD was a optional check box when creating an app, in XCode 6 Apple decide that all apps should have TDD so they auto create the Unit tests for you (even if you didn't want to, good on you Apple).\nInvest few hours now and few minutes while doing your applications and I promise you that you will save a lot of time and headaches in a short future, be it from clients that find that hidden bug, from your boss that give you long speeches every time one of your items get reopened or from your mother because that app you made to her for mothers day is crashing.",
      "target_audience": [
        "You should take this course if you a iOS developer (Swift or Object-C)",
        "You shouldn't take this course if you are a complete beginner as this is an advanced course"
      ]
    },
    {
      "title": "Learn MVVM in Xamarin Forms and C#",
      "url": "https://www.udemy.com/course/learn-mvvm-in-xamarin-forms/",
      "bio": "Build Xamarin Forms Application using Traditional MVVM & MVVM PRISM",
      "objectives": [
        "Be able to build xamarin forms apps with MVVM",
        "Learn the complete fundamentals of MVVM and MVVM Prism",
        "Create Quotes Application with MVVM Prism",
        "Resolve Dependencies via Unity IOC Container",
        "Take your C# and Xamarin skills to a professional level"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Course Structure : What will you be learning in this course": [
          "Course Structure",
          "Final Application",
          "Tooling and Prerequisites"
        ],
        "MVVM Architecture": [
          "How MVVM Works"
        ],
        "MVVM Fundamentals": [
          "Getting started with Xamarin Forms Project",
          "Data Binding",
          "Data Binding Modes",
          "Commanding",
          "INotifyPropertyChanged",
          "Navigations"
        ],
        "Create Application without MVVM": [
          "Important Notice About Api Url 2020",
          "Create Application & Implement Rest Api's"
        ],
        "Create Application with MVVM": [
          "Create Models , Views & View Models",
          "Unity , Dependency Injection & Inversion of Control",
          "DI and IOC Basics",
          "Source Code"
        ],
        "MVVM Prism": [
          "What you'll learn in this module",
          "What is Prism",
          "Why should I use Prism",
          "Prism Installation and First Application",
          "Prism Walk-through"
        ],
        "Understand Commanding in Prism": [
          "Delegate Commands"
        ],
        "Understand Navigation's in Prism": [
          "Basic Navigation",
          "Passing Paramaters"
        ],
        "Upgrade an Existing App According to Prism": [
          "Create Models , Services and Interfaces",
          "Create View, ViewModels and Consume Api's",
          "Listview Selection in MVVM Prism",
          "Source Code : MVVM Prism Quotes App",
          "Prism Official Documentation"
        ]
      },
      "requirements": [
        "You should be familiar with C#. Because knowledge of C# is must for this course.",
        "You should be familiar with Xamarin Forms and XAML.",
        "You need a windows OR mac machine for development."
      ],
      "description": "Welcome to the Traditional MVVM and MVVM Prism with Xamarin Forms and C#.\nAre you tired of boring outdated and incomplete courses , then let's dive in to this course.Well I'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of MVVM and MVVM Prism with real world application in Xamarin Forms. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to implement the MVVM and MVVM Prism in xamarin forms applications from scratch. And the purpose of this course is to train you to build your own apps and implement the MVVM pattern in your xamarin forms apps.\nThis courses teaches you how to implement MVVM using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow MVVM Works\nThe Complete Fundamentals of MVVM like Data Binding , Commanding , INotifyPropertyChanged , Navigation's etc.\nCreate Quotes Application without MVVM.\nCreate Quotes Application with MVVM.\nImplement Dependency Injection inside xamarin forms application via Unity IOC container.\nCreate Quotes Application with MVVM Prism.\nImplement MVVM Prism inside Xamarin Forms applications.\nImplement Dependency Injection and IOC principle along with MVVM Prism.\nImplement Prism Delegate Command , Prism Navigation and Listview Selection.\nCreate a Complete Quotes Application in Xamarin Forms From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete App with MVVM and MVVM Prism)\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos courses. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. In this course you'll get a best instructors with carefully crafted content, beautiful outline and proper structured material and learning by doing.\nI'll explain you each and every single line of code. I've been in your shoes and every time copy and paste is not a solution and that's why I've tried to create everything in front of you so that you can learn how to solve the errors. We'll learn every thing from scratch.\nAnd before this course you don't need my other courses. If you're a good C#  and xamarin forms developer and you think you can easily pick the Xamarin Forms MVVM concepts easily then you should go ahead with this course.\nAfter this course you'll be very much familiar with Xamarin Forms MVVM and MVVM Prism and you'll be able to create any kind of MVVM based application in xamarin forms quite easily as well as efficiently.\nSign up today, and look forward to:\nOver 2 hours of HD 720p video content\nBuilding a MVVM Based xamarin forms fully-fledged application including ones that use Rest Api's , Commanding , Navigation's , Dependency Injection , IOC , Delegate Commanding , Unity IOC Container , MVVM Prism and much more.\nAll the knowledge you need to start building any app you want\n$2000+  in person MVVM App Development Bootcamp course materials and curriculum.\nRemember...\nAfter this course you'll get all the Xamarin Forms Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you but you need your personal Azure Portal or any other hosting service  where you can launch your web api and test it in Xamarin Forms Application.However if you can't afford the Microsoft Azure or other hosting service then use my free api (I've shared the api link inside this course).\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First  MVVM and MVVM Prism Course with Xamarin Forms.",
      "target_audience": [
        "If you're a C# programmer , then take this course.",
        "If you are an intermediate xamarin developer, then take this course to get up to speed quickly with xamarin forms and native app development with MVVM.",
        "If you are a pro xamarin developer and want to learn more advanced concepts like MVVM and MVVM Prism with quick pace then take this course.",
        "If you're are already familiar with Xamarin Forms , C# , XAML then take this course."
      ]
    },
    {
      "title": "Introduction to Programming and App Development",
      "url": "https://www.udemy.com/course/intro-programming-and-app-development/",
      "bio": "for Android and iOS",
      "objectives": [
        "Start designing and making your own apps",
        "Work as a freelance developer or apply for app or software development positions",
        "Solid understanding of fundamental concepts in programming languages",
        "Specific knowledge related to designing and developing mobile apps",
        "Familiarity with Android & iOS app development",
        "Adequate familiarity and knowledge to be able to take off on your own, and use the web to find code snippets that suite your on-demand needs",
        "Approach programming from a place of high awareness and joyful presence using short centering meditation practice"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming knowledge necessary"
      ],
      "description": "Highlights\nIntro to Programming and App Design and Development Series\nCovers Android / Java and iOS / Swift\nPartly Based on an Upper-division Undergraduate Course at UCLA\n2 Sample Apps: Yoga Postures App (iOS/Android), Family Group Chat App (Android)\n14-Week Course (68 Lectures)\n19+ Hours of Video Instruction\n400+ Pages of Lectures Slides, Notes, Source Code\n4 Additional Weeks of Student Project: Online Q/A Support during \"Build Your Own App\" Project\nGet Started Making Your Own Apps for Fun, as a Freelancer, or to Become a Professional Software Developer\nNo Prior Knowledge or Experience Necessary\n\n\nOverview\n\nThis is an introduction to programming and app development class series, partly based on an upper-division undergraduate introductory programming languages course from the Computer Science department at UCLA.\nWhether you're interested to learn making apps for fun, would like to start app development as a side-job, or even want to pick up software development as a career, this course will give you the background and practice you need to get started and take off on your own.\nThis is a 14-week course. We will spend 8 weeks on principles of computer programming. Next we'll learn things specific to designing and developing mobile apps, for both iOS and Android, and we'll finish the course by developing two sample apps together in both these platforms: Yoga Postures App (iOS/Android), Family Group Chat App (Android).\nThe course covers concepts from Functional languages, Imperative languages, and Object-Oriented languages, in the context of the following languages: Java for Android, Swift for iOS. Over the course of the two sample apps, you will practice many aspects of app development, including Xcode and Android Studio IDEs, performing in them layout, generating views programmatically, scrollviews, using Google FireBase as a database backend, asynchronous listeners/callbacks for handling events, database exchanges, and much more.\n\nPerquisites\n\nNo prior knowledge or experience in programming is necessary and all ages are welcome\nTo be able to learn and practice programming languages concepts, you only need a computer with internet connection\nTo be able to practice making apps on your own, you will need a computer with Xcode (for iOS) or Android Studio (for Android) installed\nSections\nIntro: Introduction to this series\nWeek 1: Orientation, Swift Primer, Functional Languages, Functions, Types, Type Inference, Type Checkers\nWeek 2: Control, Imperative Languages\nWeek 3: Recursion, Data Structures\nWeek 4: Data Structures, Optional Types\nWeek 5: Scoping, Closures, Interpreted and Compiled Languages, Static and Dynamic Typing\nWeek 6: Object Oriented Languages, Interfaces, Inheritance, Polymorphism\nWeek 7: Object Oriented Programming Topics\nWeek 8: Generics, Concurrency, Asynchronous Computation, Exceptions\nWeek 9: Java Primer\nWeek 10: App Programming Primer: Layout, Layout in iOS (Sample App 1: Yoga Postures App)\nWeek 11: App Programming Primer: Coding in iOS (Sample App1: Yoga Postures App)\nWeek 12: App Programming Primer: Layout in Android (Sample App1: Yoga Postures App)\nWeek 13: App Programming Primer: Coding in Android (Sample App1: Yoga Postures App)\nWeek 14: Sample App 2: Family Group Chat App (Android)\nOutro: Final Lecture, Instructions to build your own app",
      "target_audience": [
        "Anyone interested in developing mobile apps, for fun or as a freelancer",
        "Or someone who wants to gain the background to become a professional software developer"
      ]
    },
    {
      "title": "Tinder Firestore Clone | Swift 5 & iOS 13 | MVVM",
      "url": "https://www.udemy.com/course/tinder-firestore-clone-swift-5-ios-13-mvvm/",
      "bio": "Tinder Clone for iOS 13 using Swift 5, Firestore and MVVM Architecture with Matchmaking, Swiping & More!",
      "objectives": [
        "Build a Tinder clone with iOS 13, Swift 5 & Firestore without the use of storyboards",
        "Use MVVM (Model-View-ViewModel) Framework",
        "Swiping capability with UIPanGestureRecognizer",
        "Build a fully functioning dating app with matchmaking capability",
        "Upload photos with Firebase Storage",
        "Advanced auto-layout and programmatic UI skills with Swift",
        "Register and authenticate users using Firebase",
        "Advanced UI/UX development to build a clean and visually appearing user interface",
        "Advanced UIStackView development",
        "Advanced Swift techniques and architecture patterns"
      ],
      "course_content": {},
      "requirements": [
        "You should have a Mac computer and some basic knowledge of Xcode is preferred"
      ],
      "description": "What are we building?\nIn this course, you will learn how to build a complete version of Tinder ready to be published on the App Store. Throughout the process, you will develop high level programming, app design and app development skills.  We will be building this without the use of storyboards, fully programmatically.\nPrior Experience?\nSome programming and basic Xcode experience is preferred. The course will move a little fast if you're a complete beginner, but you will pick things up along the way.\nWhy take this course?\nLearning advanced development skills should be taught using real world examples. This course will teach you how to build a fully functional dating application, from complete scratch. You will be learning advanced front and backend development skills, from a real life professional developer. You will learn how to code like a pro, and everything will be explained in detail along the way. This will teach you to build production ready applications, that are easily scalable and maintainable. This also makes for a great project to add to your portfolio, which you can use to show off to potential employers if you're trying to become a pro.\n\n\nWhat will you learn and what features are included?\nUser Authentication with Firebase\nSwiping capability to like or dislike users\nMatch with users\nLike or dislike with action buttons\nUpload multiple profile photos\nAbility to cycle through user photos\nUser profile page that displays user information and contains all user photos\nAbility to like or dislike user from profile page\nChange user information from settings page (photos, name, bio etc..)\nModel View ViewModel (MVVM) Architecture\nUI is built fully programatically without the use of storyboards\nReusable custom view subclasses and extensions that you can use in any app\nAssets that are exact replicas of tinder icons and images\nComprehensive knowledge and understanding of Swift 5 & Xcode 11\nAdvanced level programming and app development skills\nAdvanced level User Interface Design\nAdvanced level back end engineering\nHow to authenticate and register users with Firebase\nHow to communicate with a database (Firestore)\nHow to monitor events in a database\nHow to upload images to Firebase\nHow to structure data for optimum performance\nHow to build a fully functioning dating mobile application\nHow to programmatically construct views and controllers\nHow to parse incoming JSON data from database\nHow to use CocoaTouch classes, UIKit, UserNotifications and more\nHow to use CocoaPods and custom third party APIs\nHow to implement/use protocols and delegates\nHow to implement custom subclasses for clean and reusable code\nHow to dynamically size collection view cells\nHow to create extensions and functions for clean and reusable code",
      "target_audience": [
        "Beginners with some programming & Xcode experience"
      ]
    },
    {
      "title": "Professional iOS Chat App with Social Login using Firebase 3",
      "url": "https://www.udemy.com/course/ios-chat-apps-with-firebase-and-social-login/",
      "bio": "Learn to build high-quality, full-function iOS chat apps to serve millions of users.",
      "objectives": [
        "FREE preview first HALF of the course including social login with Firebase 3 and complete front-end in Swift.",
        "Build professional iOS chat apps which can be published on the app store right away to serve millions of users.",
        "Best coding practices and intuitive, high-level thinking to become a great iOS developer",
        "Master Firebase 3 for realtime iOS apps.",
        "Design attractive UI for iOS apps.",
        "Use Firebase to Implement a complete authentication system supporting social login such as Google Sign-In.",
        "Master Firebase storage and synchronization features to store and synchronize media data for realtime applications."
      ],
      "course_content": {
        "SWIFT 3 Source Code [Fully Updated]": [
          "Download Swift 3 Source Code of The App Here."
        ],
        "Part 1. Introduction and app layout": [
          "Introduction",
          "Rough layout and placeholder code",
          "Download the Resources folder",
          "Design login view: customize login buttons",
          "Design chat view and build view-switching feature"
        ],
        "Anonymous and Social Login with Firebase 3": [
          "Firebase introduction and installation",
          "Anonymous login with Firebase 3",
          "Combine login and view-switching; write clean and flexible code",
          "Google login with Firebase 3"
        ],
        "Build Chat Functionality with Fake Data": [
          "Start building chat functionality: integrate JSQMessagesViewController librar",
          "Display messages on the chat view",
          "Send photo messages",
          "Send video messages",
          "Play message videos in the app"
        ],
        "Handle Real-time Message Data with Firebase 3": [
          "Handle real-time data with Firebase: storing and retrieving",
          "Pull data from Firebase the right way",
          "Upload and retrieve text messages with Firebase 3",
          "What is Firebase Storage?",
          "Save photo and video data to the Firebase 3 with the Firebase Storage",
          "Retrieve photo and video messages from Firebase 3",
          "User logout with Firebase 3",
          "Structure user database and identify incoming-outgoing messages",
          "Properly construct user database and display user information on chat view",
          "Efficiently handle image data: Asynchronization",
          "Asynchronization is hard; let's use third-party libraries"
        ]
      },
      "requirements": [
        "You need a Mac, with XCode 7 installed (which is free).",
        "You should know Swift 2.3 basic."
      ],
      "description": "Half of this awesome course is FREE\nWe are happy to offer a half of the course for FREE. We strongly recommend you to go through the free lectures before deciding to join us. :D\nThis course is about becoming professional\nThis course teaches you to build a complete messaging app at an industry-standard level, which can be published on the app store right away to serve millions of people. The course spirit is to equips you with good coding practices and intuitive, high-level thinking, which are crucial in becoming a professional developer.\nYou will build the must-have feature backed by the must-learn framework\n\nIn this course, you’ll learn to build a pretty, full-function messaging app which lets users sign in with their social network accounts, and send text, photo, and video messages. During the course, you’ll learn how to use Firebase to handle real-time data and synchronize media data such as photos and videos. The course also helps you to easily integrate chat functionality into your own apps, which is a must in publishing an app these days.\n\nYou know the what and why of every single line of code\nThe course equips you with good coding practices and intuitive, high level thinking, which are crucial in becoming a decent developer. Each module or lecture starts with a clear roadmap to help you see the big picture and how each element fits in. Every step or line of code is well-motivated and followed by intuitive explanations. At anytime during the course, you will be able to fully aware of what you are doing and why you are doing that.\n\nYou will master the hottest backend service and messaging library in the hottest programming language\nIn this course, we'll teach you to build a full-function iOS messaging app using the JSQMessagesViewController library. The app will be written in Swift programming language with the new Firebase backend. We focus on helping you to write clean and extensible code so that you can build your own chat apps with various database and backend services, or integrate the chat functionality into your own apps.\n\nJSQMessagesViewController is a open-source iOS messaging library that becomes increasingly popular recently. It offers ready-to-use messaging features which can be easily integrated into your apps. You'll learn to use JSQMessagesViewController to build complete chat apps that allow users to send media messages such as photos and videos with thumbnails.\nFirebase is a mobile-backend-as-a-service that provides several features for building powerful mobile apps. Firebase has three core services: a realtime database, user authentication and hosting. With the Firebase iOS SDK, you can use these services to build powerful apps without writing a single line of server code.\nFirebase offers unlimited possibilities to sync your apps data to the cloud for storing and protection. When a Firebase database updates, all connected users receive updates in realtime automatically. With Firebase, power is in your hands - without learning other languages or frameworks.",
      "target_audience": [
        "Who know a bit of iOS programming but still don't know how to build a complete, viable iOS app.",
        "Anyone who wants to learn iOS programming.",
        "Anyone who wants to turn ideas into professional apps that can serve millions of users."
      ]
    },
    {
      "title": "Augmented Reality \"Watch Try-On\" app using Vuforia & Unity",
      "url": "https://www.udemy.com/course/augmented-reality-watch-try-on-app-using-vuforia-unity/",
      "bio": "Get started with Augmented Reality development using Vuforia, Unity & create an AR Watch Try-On app for iOS and Android",
      "objectives": [
        "Learn Basics of Unity Engine",
        "Learn Basics of Augmented Reality",
        "Learn Basics of Vuforia framework",
        "Learn how to create a watch try on app",
        "Learn how to add Lightning & Reflections in Unity",
        "Learn how to change the watch band colors",
        "Learn how to make a watch model look realistic"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Installation & Setup",
          "Introduction to Unity Engine",
          "Installing Vuforia",
          "Introduction to Vuforia Framework"
        ],
        "Creating the core functionality": [
          "How are we going to create it?",
          "Adding & setting up watch models in unity part - 1",
          "Adding & setting up watch models in unity part - 2",
          "Reflections in unity",
          "Adding watch models to image target",
          "Occlusion"
        ],
        "Creating the app UI & adding awesome features to the app": [
          "Creating the UI Part - 1",
          "Creating the UI Part - 2",
          "Watch swap part-1",
          "Watch swap part-2",
          "Watch swap part-3",
          "Changing the color of the watch band",
          "Next Steps"
        ]
      },
      "requirements": [
        "A Windows or a Mac machine is required",
        "An android or an iOS device is required",
        "Should have some experience with programming"
      ],
      "description": "If you are looking for a new & extremely useful tech skill, this is your course. Augmented Reality is so much popular right now!\nAccording to the recent reports, Augmented Reality is going to be a billion dollar industry by 2021.\n\n\nIn this course we are going to build an AR Watch Try-On app with Vuforia & Unity using which we will be able to try realistic virtual watch models on our wrist. We can swap between different watch models & also change the colour of the  watch band to see which one suits the best!\nSounds cool right? Briefly, here is how we will proceed -\nFirst we will download & setup the essential softwares & frameworks.\nThen I am going to give you a walkthrough of those softwares and frameworks.\nAfter that we will develop a basic Augmented Reality app.\nWe will then proceed with developing the AR Watch Try-On app & add interesting features to it!\nI will teach everything from scratch so you don't need any prior experience with Augmented Reality app development!\n\n*You need to have some experience with programming*",
      "target_audience": [
        "Anyone who wants to get started with Augmented Reality & create an AR Watch Try-On app"
      ]
    },
    {
      "title": "Build UBER Clone App Using Flutter and Firebase (2020)",
      "url": "https://www.udemy.com/course/flutter-uber-clone-app-with-firebase/",
      "bio": "Learn advanced Flutter concepts by building a functional Uber Clone app using Firebase & Flutter (Android & iOS)",
      "objectives": [
        "Learn to build complete android & iOS Uber Clone apps (driver and passenger) with Flutter and Firebase",
        "Learn to create, remove, update and delete records in Firebase Database",
        "Learn how to use Google Location and Map services in your Apps with Flutter",
        "Learn to find place address with location coordinates using Google Geocoding API",
        "Learn advanced state management concepts with the Provider Package",
        "Learn to create and design beautiful User Interfaces for android and iOS using Flutter",
        "Learn to initiate a phone call from your directly from your app",
        "Understand how to create Push Notification messages using Firebase (FCM)"
      ],
      "course_content": {
        "Introduction": [
          "How To Make The Best Out of This Course",
          "Setting up Your Project",
          "Testing Your App on iOS Simulator",
          "Testing your app on a Physical Android Device",
          "Testing your app on a Physical iOS Device"
        ],
        "Setting Up Firebase Backend": [
          "Choosing the Right Database for our App",
          "Setting Up Firebase Database and Authentication",
          "Setting Up and Initialising Firebase Database",
          "Completing Firebase Database Setup on iOS"
        ],
        "Login and Register with Firebase Authentication": [
          "Download Image Assets, Icons and Code files",
          "Importing our Custom Fonts and Images",
          "Login Page Design",
          "Registration Page Design",
          "Setting up Navigation and Routes",
          "Creating a Custom Reusable Button Widget",
          "Register a New User with Firebase Authentication",
          "Saving User Info to Firebase Database",
          "Login User with Firebase Authentication",
          "Setting up Progress Activity Indicator"
        ],
        "Rider's App Main Page Design": [
          "Setting up Google Map for Android and iOS",
          "Designing Search Destination Panel",
          "Adding Home and Work Address Panels",
          "Padding Google Map Correctly on Android and IOS",
          "Setting up Navigation Drawer"
        ],
        "Configuring Location Services using GeoLocator Package": [
          "Fetching User's Current Location",
          "Google's Geocoding Setup Guide",
          "Enabling Google Geocoding API",
          "Fetching Address of a Place Using Location Coordinates"
        ],
        "Advanced State Management with Provider Package": [
          "Setting up our Data Provider Class",
          "Saving our Current Location Address"
        ],
        "Configuring Place Search Functionality": [
          "Setting Up Search Place Page",
          "Prefilling Pickup Location TextField",
          "Enabling Places API on Developer Console",
          "The Place Request Setup Guides",
          "Getting Place Prediction Results",
          "Deserializing the Place Prediction Result",
          "Setting up ListView to display Prediction Results",
          "Retrieving Place Details Guides",
          "Get Place Details of the Selected Place"
        ],
        "Adding PolyLines and Markers using Data from Direction API": [
          "Google Direction Setup Guide",
          "Implementing Google Direction API",
          "Get Direction from Pickup Location to Destination",
          "Drawing PolyLine on Map from Pickup to Destination",
          "Fitting polyline on Map using LatLng Bounds",
          "Adding Markers and Circles on Map"
        ],
        "Ride Estimates and Properties": [
          "Designing Ride Estimates Panel",
          "Animating Display and Hide Ride Details Panel",
          "Calculating Ride fares Using Distance and Duration",
          "Resetting Ride Details"
        ],
        "Creating a Ride Request on Firebase": [
          "Designing and Animating Ride Request Panel",
          "Retrieve User Information from Database",
          "Creating a Ride Request on Firebase",
          "Cancel Ride Request on Firebase"
        ]
      },
      "requirements": [
        "Basic knowledge of Flutter and Dart",
        "A computer either widows or mac with a RAM size upto 4GB",
        "Android Studio or Visual Code with Flutter SDK installed"
      ],
      "description": "Build an UBER Clone App Using Flutter and Firebase (2020)\nThis course is designed to be a complete reference guide to building a fully functional Uber clone app using flutter. Search no further for a complete learning pack. The course content is very robust and covers several advanced concepts and topics ranging from Firebase Database and Authentication to Notifications and so much more.\n\n\nWhy Is This Course Right for Me?\nAbsolutely Yes, the best way to gain a good understanding of advanced concepts in Flutter is by practicing with real-life examples that implement these advanced concepts in ways you will probably use them while building your own custom app. So you will learn to build and design beautiful real-life app from the ground up, we will teach you everything you need to know.\nFlutter provides a very fast and easy way to build functional apps that could run on both Android and iOS. So save yourself a lot of time by learning advanced concepts by building a really real world ridesharing application.\n\n\nNot Convinced Yet?\nThis course will groom you to build your own app ideas, this comes in handy if you want to launch your own app and build a company around it. Modern-day business run on automation which is made possible with apps, somehow in your business, you will need a great functional app; and one way to achieve this without blowing your budget is by having hands-on experience on building a real-world functional application. you will literarily get most of the advanced knowledge you need for a price of cake.\nSecondly, having built a fully complete and functional Ridesharing application will be a very huge addition to your portfolio if you intend to get a high paying job. The job market these days are getting pretty competitive, you really need to show your worth. What's the best way to showcase your worth if not by showing real-world applications you built?\n\n\nWhat Should I Expect After this Course?\nBuild a Complete Ride-Sharing on iOS and Android Using Flutter\nGood understanding of Firebase Database\nHow to build a real-world application in a very structured and organized manner\n\n\nOther Things to Learn Includes\nFlutter UI and Design Basics\nFlutter Advanced State management techniques\nFirebase Database Development\nFirebase Authentication\nGoogle Location services\nRealtime Location Updates\nGoogle Maps and Map styles\nCalculating Distance and time difference between two points\nCreating Local Notifications\nMaking Web Calls Using Rest API\nProcessing Task in Background (Thread & Async)\nLoading and Displaying Data with Listview\nSave Data Locally on your Device",
      "target_audience": [
        "Those with basic knowledge of building apps with flutter",
        "People who want to take their Flutter knowledge to an advanced level",
        "Those who want to build real world application using flutter"
      ]
    },
    {
      "title": "Build Real World App with .NET MAUI",
      "url": "https://www.udemy.com/course/build-real-world-app-with-net-maui/",
      "bio": "Learn to make Real Estate App with .NET MAUI From Beginning to End",
      "objectives": [
        "Make Real Estate App with .NET MAUI",
        "Work as a freelance .NET MAUI developer",
        "Create your first .NET MAUI Real World Application",
        "Build fully-fledged apps for your startup or business",
        "Deploy Rest Api's to Microsoft Azure & Third Party Hosting Provider",
        "Consume Restful api's in .NET MAUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Tooling & Prerequisites",
          "Installation Guide"
        ],
        "Configure Application Backend": [
          "How to get Api's ?",
          "Create Azure Web App",
          "Create Azure MSSQL Database",
          "Seed Data in Azure SQL Database",
          "Publish Rest Api's to Azure"
        ],
        "Deploy Rest Api's to Third Party Hosting": [
          "Third Party Hosting Provider",
          "Create Web Site Domain & Database",
          "Create Database Tables via Migrations",
          "Deploy Rest Api's to Hosting Provider"
        ],
        "Test Rest Api Endpoints": [
          "Api Documentation",
          "Test Users Endpoints",
          "Test Categories Endpoint",
          "Test Properties Endpoints",
          "Test Bookmark Endpoints"
        ],
        "Getting Started with .NET MAUI Project": [
          "Project Overview",
          "Create a new Project",
          "Debug .NET MAUI Application",
          "Import Assets inside MAUI Project"
        ],
        "Create Model Classes": [
          "Create Model Classes For Users & Categories Section",
          "Create Model Classes For Properties Section",
          "Create Model Classes For Bookmarks Section"
        ],
        "Create Service Layer": [
          "Register User Method",
          "Login Method",
          "AppSettings Class & Static Methods",
          "Service Class Method For Categories",
          "Service Class Methods For Properties",
          "Service Class Methods For Bookmarks",
          "Note : For HTTP Url's"
        ],
        "Register Page": [
          "Design Register Page",
          "Implement Register Page Code Behind Functionality"
        ],
        "Login Page": [
          "Design Login Page",
          "Implement Login Page Code Behind Functionality",
          "Android Login Page Issue Resolve"
        ],
        "Tabbed Page and Pages Flow": [
          "Create Tabbed Page",
          "Customize Tabbed Page",
          "One time login with access token"
        ]
      },
      "requirements": [
        "You should be familiar with C# , Xamarin Forms or .NET MAUI.",
        "At least 3-6 months experience with Xamarin Forms / .NET MAUI and XAML",
        "Visual Studio 2022 with windows Or Mac Edition whatever suits you.",
        "Postman Api Testing Tool"
      ],
      "description": "Welcome to the First Real World App Development course with .NET MAUI.\nI'm Asfend Microsoft Most Valuable Professional (MVP) and Xamarin University Most Valuable Professional and in this course I'll explain you every single aspect of real world application in .NET MAUI.\nThis courses teaches you how to code and build beautiful Android and iOS apps by using .NET MAUI\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll be able to :\n\n\nBuild a real world application with .NET MAUI\nDeploy Rest Api's to Azure & Third Party Hosting Provider\nConsume Restful Api's.\nConsume Nuget's in .NET MAUI\nCreate a Complete Real World (Real Estate) Application in .NET MAUI From Scratch to End.\nHow to make asynchronous API calls, store and retrieve data from the api, and use the JSON format for server communication\nMake application user friendly\nWorking with Collection View and much more\n\n\nPrerequisites\nIn order to complete this course you must have a knowledge of C# and XAML .\n.NET MAUI or Xamarin Forms knowledge is must for this course.\n\n\nRemember\nWell in this course we'll use the MAC machine to develop the .NET MAUI applications. If you've a MAC machine then you'll be able to test both the android and IOS application but if you've a windows machine then you can only test the android application.\nBut don't worry because all the code we'll use in this course will be used on all the platforms including Android , Windows and IOS.\n\n\nWhat you'll get from this course ?\nAfter this course you'll get all the Application Source Code.\nYou'll get the helping material like code snippets and assets along with this course.\nPlus you'll also get the Rest Api's source code.\nI know time is money and that's why I've tried my level best to keep this course short so that you don't lose momentum and learn all things in .NET MAUI in short time.\n\n\nSo what are you waiting for? Click the buy now button and join the Complete Real World .NET MAUI Development Course and lets' start learning.",
      "target_audience": [
        "If you've a 3 to 6 months .NET MAUI experience , then take this course.",
        "If you're already a Xamarin Developer and wants to build application with .NET MAUI then take this course.",
        "If you want to make a complete Real World Application from start to finish then take this course."
      ]
    },
    {
      "title": "SwiftUI 2.0 Apps on iPhone, iPad, Mac, Watch & TV",
      "url": "https://www.udemy.com/course/swiftui-apps-on-all-devices-iphone-ipad-mac-watch-tv/",
      "bio": "Make Apps and Widgets for iOS 14, macOS 11, watchOS 7 and tvOS 14 using Xcode 12, Swift 5, WidgetKit and Apple Watch",
      "objectives": [
        "Fundamentals of SwiftUI Views",
        "Data Flow in SwiftUI",
        "Creating Widgets with SwiftUI",
        "SwiftUI for iPhones",
        "SwiftUI for iPads",
        "SwiftUI for Apple Watches",
        "SwiftUI for Macs",
        "SwiftUI for Apple TVs"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Swift Refresher"
        ],
        "SwiftUI Fundamentals - Views, Modifiers, and Controls": [
          "Xcode Tour",
          "Views",
          "Modifiers",
          "HStacks and VStacks",
          "Subviews",
          "Previews",
          "Controls",
          "Source Code"
        ],
        "HypedList iPhone and iOS Foundations": [
          "HypedList Walkthrough",
          "TabViews",
          "SF Symbols and NavigationView",
          "Displaying Views in a Sheet",
          "HypedEvent Class",
          "Forms and Controls",
          "Form Design",
          "UIKit ViewControllers in SwiftUI",
          "Button Styles"
        ],
        "iPhone Deeper Dive": [
          "Test Data",
          "ScrollViews",
          "HypedEvent Tile Design",
          "Dates and Swift Packges",
          "Data Controller",
          "Codable",
          "UserDefaults",
          "PastEvents",
          "Setting Up an API",
          "Processing the API",
          "Downloading Images",
          "HypedEvent Detail View",
          "Buttons",
          "NavigationLinks",
          "Edit and Delete"
        ],
        "Widgets! WidgetKit for iOS (and macOS really...)": [
          "Intro to WidgetKit",
          "Target Membership",
          "Widget Previews",
          "Widget Design",
          "Placeholders Snapshots and Timelines"
        ],
        "HypedList on an iPad - Designing for Large Screens": [
          "Size Classes",
          "Sidebar",
          "Detail View"
        ],
        "HypedList for the Watch - SwiftUI WatchOS": [
          "WatchOS",
          "List Design and Extensions",
          "Sending Data from Phone to Watch",
          "Watch to Phone",
          "Messages"
        ],
        "HypedList on MacOS - Merging Two Separate Worlds": [
          "MacOS and Big Sur",
          "Working Through Mac Errors",
          "Data and Buttons",
          "Create View",
          "Color Issues",
          "Mac Widgets"
        ],
        "HypedList on the TV - Making a Smooth tvOS App": [
          "tvOS",
          "TV Tabs",
          "Tile Design",
          "Big Sur Bug"
        ],
        "So Long!": [
          "Goodbye",
          "Bonus"
        ]
      },
      "requirements": [
        "A Mac Computer",
        "Some Knowledge of Swift (I have a refresher if you need it)"
      ],
      "description": "This one is SO much fun. We're gonna start by learning the basics of SwiftUI and then using it to the fullest extent! We're creating an app called HypedList first for the iPhone, and then for the iPad, Apple Watch, Mac Computer, and finally the Apple TV. Yes! ALL THE APPLE PLATFORMS. We'll even be creating widgets that run on iOS and macOS.\nYou'll get to learn the true magic of SwiftUI as we get to reuse a size-able chunk of our codebase across each platform. And, you'll see how to craft your apps for each platform to truly take advantage of each device to thrill your users.\nGet an idea of what the course is all about by watching the promo video and using the free previews.",
      "target_audience": [
        "iOS Developers wanting to make apps for other platforms",
        "Beginner SwiftUI learners"
      ]
    },
    {
      "title": "iOS 18, SwiftUI 6, & Swift 6 iOS Apps + AI (ChatGPT, Gemini)",
      "url": "https://www.udemy.com/course/ios-15-app-development-with-swiftui-3-and-swift-5/",
      "bio": "Learn iOS app development with SwiftUI 6 & Swift 6; use ChatGPT, Google Gemini, Grok and more to accelerate dev process",
      "objectives": [
        "iOS 18 App Development",
        "SwiftUI 6",
        "Swift 6",
        "Xcode 16",
        "Use Swift, SwiftUI, and Xcode to build apps for the new visionOS, as well as iOS, iPadOS macOS, watchOS, and tvOS",
        "Swift Types (String, Double, Int, and more)",
        "Essential SwiftUI layout tools (Grids, Stacks, Lists, and more)",
        "Object-Oriented Programming",
        "Classes, Structs, Enums",
        "Functions and Methods",
        "Optionals",
        "Concurrency",
        "Networking",
        "Async/Await",
        "Home Screen Widgets",
        "In-App Purchases",
        "Animations",
        "Audio",
        "App Icons and Image Assets",
        "Project-Based Approach",
        "Build complete apps from scratch",
        "Navigation, Scrolling, Sorting, Filtering"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome to the Course!",
          "Download and Install Xcode",
          "Get Free Access to 1000's of Images, Video, Audio, & App Icons You Can Use"
        ],
        "LOTR Converter - Currrency Converter App": [
          "LOTR Converter Intro",
          "Lesson 0 - How to Think Like a Programmer",
          "Lesson 1 - Create and Set Up New Xcode Project",
          "Lesson 2 - Laying Out Our Main Screen With Stacks",
          "Lesson 3 - Adding Views to Our Design",
          "Lesson 4 - Buttons & Properties",
          "Lesson 5 - TextFields & Bindings",
          "Lesson 6 - Laying Out Our Exchange Info Screen",
          "Lesson 7 - Duplicating Our Exchange Rate View",
          "Lesson 8 - Show and Dismiss a Screen",
          "Lesson 9 - Laying Out Our Select Currency Screen",
          "Lesson 10 - Grids & Loops",
          "Lesson 11 - Models & Enums",
          "Lesson 12 - Computed Properties",
          "Lesson 13 - Arrays",
          "Lesson 14 - Make Icon Grid Tappable",
          "Lesson 15 - IconGrid",
          "Lesson 16 - @Binding",
          "Lesson 17 - Convert Function",
          "Lesson 18 - Observe Properties",
          "Lesson 19 - More Observations",
          "Lesson 20 - TipKit",
          "Coding Exercise! - Conversions",
          "LOTR Converter Coding Challenges"
        ],
        "JP Apex Predators - Master Detail App": [
          "JP Apex Predators Intro",
          "Lesson 0 - How to Keep Your Programming Skills Sharp",
          "Lesson 1 - Create JP Apex Predators Project",
          "Lesson 2 - Build ApexPredator Model",
          "Lesson 3 - Build Predators Class",
          "Lesson 4 - List",
          "Lesson 5 - Navigation & Search",
          "Lesson 6 - Filter & Sort",
          "Lesson 7 - More About Filter",
          "Lesson 8 - All About Filter",
          "Lesson 9 - Predator Detail",
          "Lesson 10 - More Predator Details",
          "Lesson 11 - Gradient",
          "Lesson 12 - MapKit",
          "Lesson 13 - Map View",
          "Lesson 14 - Zoom Transition",
          "Lesson 15 - iMessage Stickers",
          "Coding Exercise! - Sort & Filter",
          "JP Apex Predators Coding Challenge"
        ],
        "BB Quotes - Say My Name - Networking App": [
          "BB Quotes Intro",
          "Lesson 0 - How to Think in Versions",
          "Lesson 1 - Project Setup & TabView",
          "Lesson 2 - URLs & Models",
          "Lesson 3 - Optionals",
          "Lesson 4 - Concurrency",
          "Lesson 5 - Fetch Quote",
          "Lesson 6 - More Fetch Functions",
          "Lesson 7 - ViewModel",
          "Lesson 8 - Init From Decoder",
          "Lesson 9 - Fetch Real Data",
          "Lesson 10 - AsyncImage",
          "Lesson 11 - Custom Colors",
          "Lesson 12 - Fetch Quote",
          "Lesson 13 - CharacterView",
          "Lesson 14 - DisclosureGroup",
          "Lesson 15 - Version 2.0",
          "Lesson 16 - More on TabView",
          "Lesson 17 - ScrollViewReader",
          "Lesson 18 - Extensions & Constants",
          "Lesson 19 - Episode Setup",
          "Lesson 20 - EpisodeView",
          "BB Quotes Coding Challenge"
        ],
        "Dex - Core Data App": [
          "Dex Intro",
          "Lesson 0 - Version Control with Git",
          "Lesson 1 - Core Data & SwiftData",
          "Lesson 2 - Core Data Model",
          "Lesson 3 - Core Data Optionals",
          "Lesson 4 - Fetch Pokemon from Core Data",
          "Lesson 5 - CodingKeys",
          "Lesson 6 - Containers",
          "Lesson 7 - Fetching & Storing Pokemon",
          "Lesson 8 - Pokedex List Design",
          "Lesson 9 - Sort & Filter with Core Data",
          "Lesson 10 - Filter by Favorites",
          "Lesson 11 - ContentUnavailableView",
          "Lesson 12 - Swipe Actions",
          "Lesson 13 - PokemonDetail",
          "Lesson 14 - Extend Pokemon",
          "Lesson 15 - SwiftCharts",
          "Lesson 16 - Sprites & Types",
          "Lesson 17 - Store Images with Core Data",
          "Lesson 18 - Convert Binary Data to Image",
          "Lesson 19 - WidgetKit",
          "Lesson 20 - Widget Designs",
          "Lesson 21 - App Group",
          "Lesson 22 - SwiftData",
          "Lesson 23 - SwiftData Model",
          "Lesson 24 - ModelContainer",
          "Lesson 25 - SwiftData Query",
          "Lesson 26 - SwiftData Predicate",
          "Lesson 27 - SwiftData Widget",
          "Dex Coding Challenge"
        ],
        "HP Trivia - Animations, Audio, & In-App Purchases": [
          "HP Trivia Intro",
          "Lesson 0 - Code Organization",
          "Lesson 1 - Folders",
          "Lesson 2 - Question Model & App Development Plan",
          "Lesson 3 - Instructions",
          "Lesson 4 - PhaseAnimator",
          "Lesson 5 - Transition Animation",
          "Lesson 6 - Audio",
          "Lesson 7 - Custom withAnimation",
          "Lesson 8 - Transition Challenge",
          "Lesson 9 - Opacity Transition",
          "Lesson 10 - Single Responsibility Principle",
          "Lesson 11 - Books & Questions",
          "Lesson 12 - SelectBooks",
          "Lesson 13 - Change Book Status",
          "Lesson 14 - Disable Dismiss",
          "Lesson 15 - Game Logic",
          "Lesson 16 - Game Logic Pt. 2",
          "Lesson 17 - Full Screen Cover",
          "Lesson 18 - Sound Effects",
          "Lesson 19 - Controls",
          "Lesson 20 - Hints",
          "Lesson 21 - Reveal Book",
          "Lesson 22 - Answers",
          "Lesson 23 - Sensory Feedback",
          "Lesson 24 - Celebration Screen",
          "Lesson 25 - Score",
          "Lesson 26 - Next Level",
          "Lesson 27 - Persist Scores",
          "Lesson 28 - In-App Purchases",
          "Lesson 29 - Store",
          "Lesson 30 - Purchase Products",
          "Lesson 31 - Watch For Updates",
          "Lesson 32 - Purchase Books",
          "Lesson 33 - Persist Statuses",
          "HP Trivia Coding Challenge"
        ],
        "Build With Me - Clue Calculator": [
          "Build With Me Intro",
          "Day 1 - My App Development Process",
          "Day 2 - Onboarding & Paywall Screen Designs",
          "Day 3 - Home, Character, & Game Screens",
          "Day 4 - Gameplay & Settings Screens",
          "Day 5 - Building An AI Prompt",
          "Day 6 - Building Our First Screens",
          "Day 7 - Models & Tab Bar"
        ]
      },
      "requirements": [
        "No programming experience required",
        "Xcode 16 (I'll show you how to download and install)"
      ],
      "description": "Welcome\nWelcome to my course on building apps for iOS 18 using SwiftUI 6 and Swift 6. I'm so excited to show you Apple’s latest and greatest development technologies to build complete iOS apps from scratch with Swift and SwiftUI, and give you the capabilities to launch a career worth over 120k a year, based on the latest data from Glassdoor.\nSwift and SwiftUI were built to be as universally applicable as possible, so even though the focus of this course is on building apps for iOS, what we’re learning can also be applied to iPadOS, macOS, watchOS, tvOS, and even the new visionOS.\n\n\n\"Easy to follow and good explanations!\" - 5-star student review.\n\"Easy to understand and get started.\" - 5-star student review.\n\n\nWhat are Swift and SwiftUI?\nSwift is the programming language we use to develop apps for all the Apple platforms. And SwiftUI is Apple's design tool of choice for building the best user experiences.\nFor the past few years, Apple has been putting their full efforts into the development of new and better Swift and SwiftUI features, so for anyone who is serious about developing iOS apps, Swift and SwiftUI are definitely some of the best things you can learn to make sure you’re up to speed with the most relevant mobile development practices.\nWith Swift and SwiftUI 6, Apple added tons of amazing new features, and I can't wait to show them to you throughout the course!\n\n\nWhy choose a career in iOS development?\nDeveloping iOS apps with Swift and SwiftUI is something that many employers are looking for in the developers they hire, so not only are you learning an awesome technology to build your own personal projects, but you’re also gaining a valuable skill that can help you get a top-paying development job from companies all around the world.\nAccording to Glassdoor, here are the average U.S. salaries for common developer positions:\n\n\niOS developer - $123,635\nAndroid developer - 116,257\nWeb developer - 92,816\n\n\nWho should take this course?\nThis course is for people at all levels of programming experience. If you’re an absolute beginner with no prior experience, this course will teach you everything you need to know, starting from scratch. If you’ve already been in the industry for a while, this course will introduce you to the latest additions to Apple’s most popular tools and frameworks.\nMany students have already gone through the course, and here's what they're saying so far:\n\"The way the instructor explained it, it's really clear and easy to understand.\"\n\"Easy to understand, good for beginners and instructor is very organized.\"\n\"Early into the course at the moment. I get bored easy and have tried a few different courses which simply haven’t engaged me or have had massive gaps. Instructor has clear and steady pace and has so far kept my interest.\"\n\"Very good course.\"\n\"Awesome course. explains everything very nicely and you can start with 0 knowledge.\"\n\"This is the best course for learning SwiftUI and iOS, I really recommend this course if you are new to iOS.\"\n\"The teacher is very good and knowledgeable about Swift and SwiftUI.\"\n\"Great course.\"\n\"Great explanation for beginners about SwfitUI. Learning alot. Thanks for your explanation.\"\n\"Yes, great instruction. I am learning a lot about SwiftUI.\"\n\n\nHow This Course Is Structured\nAfter the Intro & Welcome section, we jump straight into building our apps using the latest and greatest releases from Apple using iOS 18, SwiftUI 6, and Swift 6.\nLearn about new updates to images, SF Symbols, scrolling, animations, transitions, maps, data storage, and so much more!\n\n\nPersonally, I don't like boring courses, so we're going to be developing complete, real-world apps with fun themes like Lord of the Rings, Jurassic Park, Breaking Bad, Pokemon, and Harry Potter.\nBut don't let the \"fun\" part fool you. We're not skipping out on any of the learning part. We have a ton of topics to cover in this course, and I go over each one in great detail so you can really understand and use them in all your future apps.\n\n\nAfter the initial 5 apps, which lay the foundation and give you the essential iOS development skills you will need for every app you ever create, we dive into a special section where I pull back the curtain and let you see behind the scenes as I take one of my real app ideas all the way from idea to App Store. You'll see everything that goes into an app from start to finish.\nThis section is also where I'll show you how I combine the essential iOS knowledge with AI tools like ChatGPT, Google Gemini, Grok, Claude, and more to accelerate each phase of the app development process.\nAnd yes, I really will be releasing this app on the App Store, so you'll be able to download and use it when it's done.\nBut that's not all. In addition to seeing my real app development process, I'll also give you access to my app development project management tool that I use to guide me through my 6-Phase App Development Process. This free tool will help make sure you don't miss any crucial steps and it gives you a place to organize all your thoughts and resources needed for your apps. It includes instructions, checklists, and links to the tools I use and recommend.\n\n\nYou Can Shape the Future of this Course\nMy goal is to make this course the best iOS course available to really teach iOS app development, so I welcome all comments, questions, and feedback of any kind so I can make sure I’m serving you well.\n\n\n\"Super explained, learning material is perfectly prepared, it is a pleasure to complete this course. I hope more will follow soon and I'm already looking forward to it. Thanks for the great course experience, keep up the good work.\" - 5-star review\n\"Good pace and structure for beginning programmers. Easy to follow with clear instructions. Well done!\" - 5-star review\n\n\nLet's Get Started!\nIf you've read this far, you're almost there. Don't skip this opportunity to gain a valuable, fun, and monetizable skillset. You can do this! And I can help you.\nLet's get started!",
      "target_audience": [
        "People curious about iOS 18 app development with SwiftUI 6",
        "People who want to learn Swift programming with Swift 6",
        "Beginner developers who want a fun and easy way to jump into iOS app development",
        "People who want to start building their app portfolio with high-quality, well-designed apps",
        "Those who want to publish their own app on the App Store",
        "Those who want apps and skills to show to potential employers",
        "Learn one programming language and build apps for all Apple platforms, including the new visionOS, as well as iOS, iPadOS macOS, watchOS, and tvOS"
      ]
    },
    {
      "title": "Reactive Programming in iOS with RxSwift",
      "url": "https://www.udemy.com/course/reactive-programming-in-ios-with-rxswift/",
      "bio": "Learn how to use Reactive Extensions for Swift and Cocoa Touch",
      "objectives": [
        "Understand the fundamentals of reactive programming and reactive extensions",
        "Use marble diagrams to explore RxSwift operators",
        "Create and subscribe to observable sequences",
        "Work with subjects",
        "Work with traits",
        "Transform, filter, and combine observable sequences",
        "Perform side effects in an observable chain",
        "Understand and use schedulers to manage concurrency",
        "Bind user interface elements",
        "Bind data to and from user interface elements",
        "Bind table and collection views",
        "Use forward delegates to mix Rx and traditional code",
        "Debug Rx code with debug and total",
        "Handle errors",
        "Write unit tests against Rx code",
        "Perform networking operations"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Before you begin",
          "Using the exercise files"
        ],
        "Reactive Programming Concepts": [
          "What is reactive programming?",
          "What are Reactive Extensions?",
          "Using marble diagrams"
        ],
        "Reactive Extensions for Swift": [
          "Creating and subscribing to Observable sequences",
          "Understanding subjects",
          "Working with PublishSubject",
          "Working with BehaviorSubject",
          "Working with ReplaySubject",
          "Working with Variable",
          "Understanding traits",
          "Working with Single",
          "Working with Completable",
          "Working with Maybe",
          "Transforming Observable sequences",
          "Filtering Observable sequences",
          "Combining Observable sequences",
          "Performing side effects",
          "Understanding schedulers",
          "Using schedulers"
        ],
        "Reactive Extensions for Cocoa Touch": [
          "Understanding RxCocoa traits",
          "Binding UI elements",
          "Binding data elements",
          "Binding table views",
          "Binding collection views"
        ],
        "Taking Things Further": [
          "Using forward delegates",
          "Debugging with debug",
          "Debugging with total",
          "Handling errors",
          "Testing",
          "Networking"
        ],
        "Conclusion": [
          "Wrapping up and next steps"
        ]
      },
      "requirements": [
        "For this course, you’ll need a Mac, running the latest macOS, which is currently version 10, also known as Sierra.",
        "You’ll also need the latest version of Xcode installed, which is Apple’s integrated development environment for creating apps. You can download Xcode for free from the Mac App Store.",
        "You will be writing Swift 3 code throughout the course, in Swift playgrounds, and in iOS app projects, so experience with Swift and iOS app development would be beneficial. The skills you will gain from this course are intended to build upon your existing knowledge of how to develop iOS apps using Swift."
      ],
      "description": "Developing a great app these days requires writing code that can simultaneously handle user interactions, perform network operations, manage data, present dynamic content, and more. That means writing a lot of asynchronous and concurrent code, which can be difficult to get right, and even harder to maintain.\nThat's where Reactive Programming, and specifically, Reactive Extensions, comes in. Reactive Extensions for Swift and iOS enable writing asynchronous and concurrent code that is succinct, easy to follow, and flexible.\nHi, I’m Scott Gardner. I’ve been developing apps in iOS since 2010, using Swift since the day it was announced, and using RxSwift, now in version 3, since before version 1. I've also authored several video courses, books, tutorials and articles, and presented at numerous conferences, meetups, and online events on Swift, RxSwift, and iOS.\nIn this course, I’m going to get you up to speed on the Reactive Extensions for Swift and Cocoa Touch. I’ll go from concepts to clicks as I show you how to effectively use reactive extensions in your iOS app projects.",
      "target_audience": [
        "Experienced Swift and iOS app developers who want to learn reactive programming in iOS with RxSwift",
        "Developers with experience in reactive programming on other platforms who want to learn how to use the reactive extensions for Swift and Cocoa Touch"
      ]
    },
    {
      "title": "Become Expert in Xamarin Forms Layouts",
      "url": "https://www.udemy.com/course/xamarin-forms-layouts/",
      "bio": "Create Real world Layouts with Xamarin Forms",
      "objectives": [
        "Understand StackLayout",
        "Grid",
        "ScrollView",
        "Absolute Layout",
        "Relative Layout",
        "ListView",
        "CardView",
        "Real World Layouts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "StackLayout": [
          "StackLayout",
          "StackLayout Challenge #1",
          "Nested StackLayout",
          "StackLayout Challenge #2"
        ],
        "Scroll View": [
          "ScrollView"
        ],
        "Grid": [
          "Grid",
          "Span Grid",
          "Grid Challenge",
          "Mixture of Stack and Grid"
        ],
        "Absolute Layout": [
          "AbsoluteLayout",
          "Absolute Layout Challenge",
          "Benefits of Using Absolute Layout",
          "Absolute Layout Complex UI"
        ],
        "Relative Layout": [
          "Relative Layout",
          "Explore Relative Layout",
          "Mixture of Layouts"
        ],
        "ListView": [
          "ListView",
          "ListView Challenge",
          "Card View"
        ]
      },
      "requirements": [
        "The student's must have a laptop / PC and familiar with the Xamarin or Mobile Apps."
      ],
      "description": "The main focus of this course is only on the Xamarin Forms Designs and Layouts. So if you're a good C# programmer or if you have a basic knowledge of XAML and you want to create some cool UI with Xamarin Layouts then this is the right course for you.\nIn this course you will learn the complete Layouts in Xamarin Forms with real time implementation and XAML code. You will learn the Xamarin Forms Layouts with the complex challenging exercises. You'll also learn the Adaptive UI Layouts and design . Also one interesting thing for the Xamarin Forms developer is included in this course that is Card View .\nBuild a strong foundation in Xamarin Forms Layouts with this tutorial .\nStackLayout\nGrid\nScrollView\nAbsolute Layout\nRelative Layout\nListView\nCardView (for both Android and IOS)\nCombination of Layouts\nResponsive Layouts\nChallenge Exercises\n\n\nA valuable Skill at Your Fingertips  Learning the Xamarin Forms Layouts put a powerful and attractive look in your mobile apps. Xamarin is open source, easy to learn,  has excellent Microsoft and Xamarin support, and is the best  Cross Platform Tool for Desktop and Mobile Applications.\nJobs in Mobile development are plentiful, and being able to learn the Layouts with a professional look will give you a strong background to more easily pick up other challenging UI's etc.\nContent and Overview  Suitable for C# programmers, Xamarin  Developers , XAML Developers and software engineers, through this course , you’ll learn all of the Layouts  and establish a strong understanding of the concept behind Xamarin Forms and Layouts.\nYou can also understand the Layouts with complex and challenging exercises.\nWhat am I going to get from this course?\nLearn Xamarin Forms Layouts from a Microsoft (MVP) from your own desk.\nSuitable for beginner & intermediate  programmers, xamarin developers, C# developers and ideal for users who learn faster when shown.\nVisual training method, with Hands on Lab Practice , coding and challenge exercises.\nBreaks even the most complex scenarios down into simplistic steps.",
      "target_audience": [
        "Everyone who is willing to start career in Xamarin Forms and want to create the challenging applications with a professional UI look."
      ]
    },
    {
      "title": "The Complete Angular 5 Essentials Course For Beginners",
      "url": "https://www.udemy.com/course/angular5/",
      "bio": "In our complete course students will learn all of the Angular 5 essentials from a complete beginner to advanced user!",
      "objectives": [
        "How to build a web application using Angular4 and the new Angular 5!"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started With Our Beginners Guide To Angular 5!",
          "Introduction: Welcome To Our Angular Course For Beginners!",
          "Creating Your First Angular App using the Angular Cli",
          "A Look Around Your Angular Application",
          "What is the .ts file?",
          "Adding Outside CSS and JS libraries"
        ],
        "Components and Property Binding": [
          "Section 2 Introduction",
          "Creating a Component",
          "Property Binding",
          "Event Binding",
          "Creating a Component Using the Angular Cli",
          "More Information On ng generate",
          "Two Way Binding",
          "Components and Property Binding"
        ],
        "Directives": [
          "Section 3 Introduction",
          "What are Directives?",
          "Looping Through Items with the ngFor Directive",
          "Conditional Output Using ngIf Directive",
          "Styling with ngStyle",
          "Dynamic Class Names with ngClass",
          "ngSwitch the Angular Switch Statement",
          "Directives Practice"
        ],
        "Services, Observables, and Http": [
          "Section 4 Introduction",
          "Working with Services",
          "Dependency Injection",
          "Working with Observables",
          "Working with Observables Part 2",
          "The Subject Observable",
          "Http Request Using HttpClient"
        ],
        "Movie Database Project": [
          "Section 5 Intro",
          "Setting Up The App",
          "Creating the Component Structure",
          "Creating the HTML/CSS for Our Components",
          "The Movie Interface for Typing",
          "The Input and Outputs",
          "The Movie Service and the Current Movie",
          "Connecting to the Movie Service",
          "Faking the Search with Observables",
          "Setting Up Your Movie Db Account",
          "Getting Search Results from the API",
          "Getting the Photo Paths from the API"
        ]
      },
      "requirements": [
        "Students should have an understanding of Intermediate JavaScript: Promises, Classes, and Events",
        "Students should also know ES6 JavaScript Syntax"
      ],
      "description": "Want To Learn How to use the new Angular 5!?\nHave you always wanted to learn Angular, but you just don't know where to start?\nThen our Complete Angular Essentials Course is for You!\n\nWe are looking for students eager to learn the new Angular 5!\nAnd the best part, you do not need any prior experience to enroll in this course!\nWe teach you from scratch, step by step, how to start with Angular 5 Today!\n__________________________________________________________________________\nWelcome To The Complete Angular Essentials Course!\n⇉ This course is one of the Most Comprehensive Courses on Angular Ever Created!\n⇉ You get Over 40+ Lectures and 3+ hours of HD content!\n⇉ Join Over 950,000+ Students Have Enrolled in our Udemy Courses!\n\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nClick the \"Take This Course Now\" button For Instant Life-Time Access!\n__________________________________________________________________________\nIn our complete course you will learn:\nHow to create an Angular applicaitions using Component Compositition, make your application dynamic\nusing Directives and Services, and use Http to make request to Web Services like an API.\nBut thats not all...\nThe benefits to our course an absolutely unlimited!\nYou will learn useful skills about topics below:\nComponents\nProperty Binding\nEvent Binding\nDirectives\nObservables\nHttp\nServices\n__________________________________________________________________________\n\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin learning how to to use Angular Today!\nWhen we learn something new about Angular, I add it to the course -at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But it can be done!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button, top right, now...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys",
      "target_audience": [
        "A person who loves creating web applications and is interested in creating them with Angular4/5 framework"
      ]
    },
    {
      "title": "React: React Native Mobile Development: 3-in-1",
      "url": "https://www.udemy.com/course/react-react-native-mobile-development-3-in-1/",
      "bio": "Combine the power of React Native to build dynamic and stunning native mobile apps for Android and iOS",
      "objectives": [
        "Build custom reusable components for your mobile app and develop native apps for both iOS and Android",
        "Perform animations in your applications using the animation APIs",
        "Test and deploy your application for a production-ready environment",
        "Grasp the concepts of Redux state management to build scalable apps",
        "Add navigation to your App to build UX components for your React Native App",
        "Integrate with Firebase as a data store and learn how to authenticate a user"
      ],
      "course_content": {
        "Learning React Native Development": [
          "The Course Overview",
          "Installation and Setup",
          "Running the Simulator",
          "Understanding JSX",
          "App Overview",
          "Styling the Header",
          "Structuring the Photo Section",
          "Flexbox",
          "Styling the Photo Section",
          "Endpoint to Fetch Data",
          "Functional versus Class-Based Components",
          "Axios",
          "React States",
          "Lifecycle Methods",
          "Looping Through Photo Section",
          "Implementing the Like Button",
          "What Is Redux?",
          "Managing State Using Redux",
          "Action Creators",
          "Creating the Photos Reducer",
          "Calling Actions from Components",
          "Login Form Overview",
          "Structuring the Login Form",
          "Firebase Configuration",
          "Managing Input State",
          "Storing Form Input in Reducers",
          "Getting the Form Input Values",
          "Firebase Login API",
          "Login Wrapup",
          "App Overview of IdeaPad",
          "Configuring the Database",
          "Structuring the IdeaPad Form",
          "Submitting Ideas",
          "Showing List of Ideas",
          "React Native Navigation",
          "Navigating Between Screens",
          "Fetching Data from Firebase",
          "Editing Ideas",
          "Editing Action Creator",
          "Deleting Ideas",
          "Test your knowledge"
        ],
        "Building Your Application with React Native": [
          "The Course Overview",
          "Initializing a New Project",
          "Should You Primarily Test on Android or iOS?",
          "Going Double Down on React Native",
          "Goals of This Course",
          "Creating Your Environment for React Native",
          "High-Level React Native Architecture",
          "Working with ES2017 JavaScript",
          "Understanding RN Project Environment",
          "Introduction to Components",
          "Debugging on Chrome",
          "React Native Built-in and Common Functions",
          "Reading the Facebook RN Component Docs",
          "Typing Your Code with Flow",
          "Creating a Component",
          "Using Flexbox",
          "Introducing the Key React Native Components",
          "Working with ListView and FlatList",
          "Installing Third- Party Components Via GitHub",
          "Phases of Product Design",
          "Working with More Components to Make It Better",
          "Working with Guerrilla Design",
          "Crafting Reusable Components",
          "Introduction to Props and State",
          "Test your knowledge"
        ],
        "Publishing Your Application with React Native": [
          "The Course Overview",
          "Unidirectional Data Flow Versus Two-way Data Binding",
          "Setting Up a Dev Environment",
          "Redux, Global State Manager for Your App",
          "Installing Redux-Saga",
          "Managing API Calls",
          "API Data",
          "Handling API Errors",
          "Installing React Navigation",
          "Why UX Is Important",
          "Creating UX Components for Your React Native App",
          "Testing Your Components with Jest Snapshot Testing",
          "Intro to Animations in React Native",
          "Animated Module",
          "LayoutAnimation",
          "Adding Animations to Our App",
          "Example App – a Case Study",
          "How to Publish for iOS",
          "How to Publish for Android",
          "Demoing Applications for Clients"
        ]
      },
      "requirements": [
        "Prior programming experience of JavaScript is assumed."
      ],
      "description": "React Native is a JavaScript framework that lets you build native apps for both iOS and Android using a single language. A React native app is not a hybrid app so it's indistinguishable from native apps built with Java and Objective-C.\nReact has taken the web development world by storm. It's only natural that its unique architecture and third-party support ecosystem is applied to native application development. Using JavaScript, you can build an application that renders native UI components and accesses native device functionality.\nThis comprehensive 3-in-1 course is a step-by-step tutorial to building dynamic apps for iOS and Android with React Native. Design and build a fully-featured application using the newest features of React Native. Create increasingly complex real-world applications and explore React Native in depth.\nContents and Overview\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Learning React Native Development, covers developing dynamic and stunning native mobile apps for Android and iOS using JavaScript. Delve directly into React Native to build native mobile apps. Develop apps that are fun, unique, and responsive with React Native. Learn React Native fundamentals to build interactive and user-friendly apps. The course aims at teaching you React Native irrespective of the underlying platform so that you can learn once, write anywhere.\nThe second course, Building Your Application with React Native, covers making your application with React Native and master UI design. This video takes you from the basics of React Native development all the way through to advanced components. A lot of different development techniques go into creating an app. In this course, you’ll start with a quick intro to React Native and how to build basic UI components, then move on to discussing data flow and React Native animations. Finally, we will look at how to publish your applications to Play Store or to private devices.\nThe third course, Publishing Your Application with React Native, covers creating impressive applications using the different tools of React Native. In this video, you’ll start with a look at state management and how to keep your code usable by other developers, how to build for your ideal user, how to create animations that pop, and how to publish your apps to the App Store. With the core UI built, we can take off our designer hats and focus on creating code that is clean and easy to reuse.\nBy the end of the course, you will have created your own application using React Native and learned to publish your app in the App Store and Play Store.\nBy the end of the course, you’ll create and publish impressive applications using the different tools of React Native.\nAbout the Authors\nMiftaSintaha is a big enthusiast of new web technologies that are out there to make everyone's life easier. She is a Software Engineer, a Tech Lead, and a content creator in YouTube where she authors various concepts in Computer Science and MEAN stack frameworks. Her ability to simplify the explanation of complex topics is what enhanced her popularity in YouTube. She has over 4 years' experience in working with frontend frameworks such as Angular and React, and backend frameworks such as Express.js and Django. Get the opportunity to learn how to write production-ready code with her courses. Find out more about her tutorials at her YouTube channel: MiftaSintahaCS You can also look at her work on GitHub @msintaha\nAlvaro is a professional React Native developer with an interest in mobile technology, server-side API development, and iOS development. He plays bass in a rock band, and he enjoys road bikes and politics. The first thing he started programming was little buy scripts for Counter Strike. These were small hacks to buy faster and pick up all the necessary equipment. A few years later, he went to the University of Balearic Islands to study computer science. There he began to learn the fundamentals of computer programming using Ada, C, and Java. After finishing his B.Sc. in Computer Science, he started his M.Sc. That was when he started to do really fun things such as games in Lisp, creating a compiler of a subset of Ada instructions, and computer vision with OpenCV, among others. Before finishing his M.Sc, he started to work full-time, first as a developer for the hotels team at Logitravel (the second tourism dot com in Spain) and currently as an iOS developer at mola. He had no previous iOS or mobile development experience before entering mola, but he successfully managed to develop both server-side and mobile apps for a social network called Hoods. He also helped the awesome team at Mola in several other projects (Matchball, Zoco). Right now he is a mobile developer at APSL—Advanced Programming Solutions—and works on several products.",
      "target_audience": [
        "JavaScript developers who want to build native mobile applications.",
        "Frontend React developers who want to extend their skillset to mobile development. No knowledge of React Native and mobile development is needed."
      ]
    },
    {
      "title": "How to Dominate ARCore 1.x : Build 9 Augmented Reality Apps",
      "url": "https://www.udemy.com/course/master-arcore-in-unity-sdk-build-augmented-reality-apps/",
      "bio": "The Ultimate ARCore Course on how to Build Augmented Reality Apps in Unity from Scratch",
      "objectives": [
        "Learn all the fundamentals of ARCore from Motion tracking to Plane Detection and light estimation.",
        "Measure distances in Augmented Reality with high accuracy.",
        "Fly a drone in AR without having to worry about crashing it into a tree.",
        "Transport yourself into another world with AR Portal",
        "Immerse yourself into building your own Planetary Solar System in Augmented Reality",
        "Use Light Estimation to create real time horror-movie effects",
        "Fly a Dragon in AR.",
        "From Virtual to Reality with 4D Volumetric Hologram Sequences"
      ],
      "course_content": {},
      "requirements": [
        "Laptop/PC",
        "Unity 3D SDK and basic experience with Unity",
        "ARCore compatible Phone (Samung Galaxy S7 and later, Google Pixel and later) - Can get refurbished S7 for $220 on Amazon",
        "$25 worth of Required Unity Assets - Bill of materials can be found in FREE Preview lectures or on Github",
        "$20 Optional Unity Assets - Total Required + Optional = $45",
        "ARCore 1.0 or 1.1 recommended but also compatable with ARCore 1.2"
      ],
      "description": "Code Updated for ARCore 1.x - ARCore is now works cross platform with ARKit\n----------------------------------------------------------------------------------------------------------------\nDo you want to learn the new ARCore 1.x in Unity SDK?  This course will teach you all the fundamentals of the ARCore Augmented Reality in the shortest time so that you can get started developing your own Augmented Reality Apps. In the App section, we show you how you can apply the basics to more advanced apps for either gaming or for productivity-based apps.\nI am an AR Developer with a Masters Degree in Electronic Engineering. I have over 34000 students on Udemy. This course is designed to help you understand the fundamentals of Augmented Reality using the ARCore in Unity through practical and easy to understand labs. This class covers these capabilities, including getting started, simple and multiple target detection, smart terrain as well as leap motion integration. You will learn all the fundamentals through practice as you follow along with the training. Together we will build a strong foundation in AR in Unity SDK with this training for beginners.\nThis course will enable you to:\nWe designed this course for anyone who wants to learn the state of the art in using Googles ARCore SDK without the steep learning curve.  By the end of the course, you will be able to understand the fundamentals of ARCore SDK Core functionality from Motion Tracking, to Point and plane detection and even test light estimation. Thereafter you will soon be developing your own amazing Augmented of real-world applications.\nIn this course, we will begin with the fundamentals section by creating a simple hello AR app that will help you to quickly get something working.\nNext, we start with the first core functionality which is motion tracking and you will learn how spatial tracking works in AR.\nThe second core functionality of ARCore is Point and Plane detection. To detect Feature points and how coplanar feature points form into planes.\nThen we build a simple hit testing app where you can spawn random colored cubes or spheres with a simple touch using ray casting.\nThen we end of the basics with simple light estimation, to make a monster appear or disappear at a flick of a physical light switch.\nThen we move on to the exciting part of the course where we create some really amazing ARCore 1.4 apps.\nThe first lecture you can build your own accurate measuring app using ARCore. A lot of practical uses for this app.\nThereafter we learn how to transverse within an AR scene by building a dragon that can move and fly in any direction as well as breathe fire.\nNext, we take flying to another level by building a drone in Augmented Reality. Its great practice flying in AR before buying a real drone.\nFor education, we demonstrate how you can build your own solar system and how to use touch ray casting to bring up information on the planets, moons, and stars.\nIf this is not out of this world, then a portal app will definitely transport you to another place.\nThereafter we look at how we can import and use 4D volumetric sequences or volumetric holograms with ARCore to bring a sense of realism into your AR apps.\nApply shadows using shaders for AR Objects\nPerform Vertical Plane Detection using ARCore 1.2 - 1.4\nCreate a video wall using Augmented Images using ARCore 1.2 - 1.4\nImplement Cloud Anchors to experience multiplayer games using Photon.\nThis and much much more exciting apps that you shall learn in this course.\nI’m sure by now you are really excited to get started with ARCore, however, It is important to note that before you enroll in this course there are some training material (Unity Assets) and hardware you need to purchase beforehand to make this course the best learning experience. See the video for details.\nPersonal help within the course\nI donate my time to regularly hold office hours with students. During the office hours you can ask me any business question you want, and I will do my best to help you. The office hours are free. I don't try to sell anything.\nStudents can start discussions and message me with private questions. I answer 99% of questions within 24 hours. I love helping students who take my courses and I look forward to helping you.\nI regularly update this course to reflect the current marketing landscape.\nGet a Career Boost with a Certificate of Completion\nUpon completing 100% of this course, you will be emailed a certificate of completion. You can show it as proof of your expertise and that you have completed a certain number of hours of instruction.\nIf you want to get a marketing job or freelancing clients, a certificate from this course can help you appear as a stronger candidate for Augmented Reality jobs.\nMoney-Back Guarantee\nThe course comes with an unconditional, Udemy-backed, 30-day money-back guarantee. This is not just a guarantee, it's my personal promise to you that I will go out of my way to help you succeed just like I've done for thousands of my other students.\nLet me help you get fast results.  Enroll now, by clicking the button and let us show you how to Dominate ARCore with 9+ AR apps.",
      "target_audience": [
        "People who want to learn ARCore",
        "Students who want to get started in Augmented Reality and make really cool apps",
        "People who want to catch on to the latest game development trends with AR"
      ]
    },
    {
      "title": "Noob to App Store - iPhone Apps with Swift, SwiftUI & iOS 15",
      "url": "https://www.udemy.com/course/make-your-first-iphone-app-using-swift-swiftui-and-ios-15/",
      "bio": "Perfect Course for Complete Beginners - Create Apps and Submit Them to the App Store Using SwiftUI 3 Code and Xcode 13",
      "objectives": [
        "Create 5 Complete Apps",
        "SwiftUI - Apple's New Design Framework",
        "Submitting Apps to the App Store",
        "Xcode - Apple's Tool to Make Apps",
        "Swift The Programming Langauge",
        "Tips For Debugging When Things Go Wrong",
        "Bind Variables with TextFields",
        "List Data and Use ForEach",
        "Use Complex Views Like TabView and GridView",
        "CoreData - Apple's Mobile Database",
        "Working with APIs and JSON Data",
        "Create Multi-View Apps with NavigationViews",
        "The 3 Stacks: HStack, VStack, and ZStack"
      ],
      "course_content": {},
      "requirements": [
        "No prior experience needed, it's for true beginners!",
        "You'll need a Mac (any computer made by Apple)"
      ],
      "description": "Welcome to my iOS 15 Course! If you're looking for a course that is fun, for complete beginners, and gets straight to the point, then this is the course for you.\nOther mega courses on Udemy offer 40+ hours of video content, but I wanted to create a course that was more manageable and didn't include any fluff. In each video I dive straight into the topic, and don't waste your time going over things that you don't really need. I only focus on the essentials, and I give you hands-on practice so that you can easily master the things we are learning!\nThis course is designed to be taken over a two week period, with 1-2 hours dedicated to learning each day. This course is easy to commit to because you won't get overwhelmed with a mountain of content, and you don't need to quit your day job to learn how to code!\nOver the past four years I've taught over 240,000 people how to code, and I am a self-taught programmer so I know what it feels like to start from scratch. I care about your learning, but even more importantly... I care about you! I know your time is valuable, so I promise not to waste it.\nApps we create:\nPeople Counter\nText Formatter\nEmoji Dictionary\nToDo List\nAPI/JSON App\nAnd I'll show you how to submit your own apps the App Store! If you've ever had the goal of sharing your app idea with the world, this is the course for you.\nFeel free to take a free preview of this course to see if it's a good fit for you. I am so confident that you will love my course. You have nothing to lose, so come join me and let's get started!",
      "target_audience": [
        "Beginners who want to make an iPhone app!"
      ]
    },
    {
      "title": "The Complete Android Developer Course: Beginner To Advanced!",
      "url": "https://www.udemy.com/course/androidcourse/",
      "bio": "In this complete course students will learn how to build and develop Android Applications for smartphone and beyond",
      "objectives": [
        "Create their very own android applications from scratch!",
        "Understand the concepts and techniques used in creating applications.",
        "Learn how to use databases to store data from android applications",
        "Deploy self developed applications on android devices.",
        "Learn how games are developed in android using Libgdx.",
        "Learn how to create user interfaces for android applications."
      ],
      "course_content": {
        "Introduction And Software Installation": [
          "Introduction Video - Welcome To The Complete Android Developer Course",
          "Android Developer Course Benefits and How To Use This Course",
          "New updates for 2017 and Beyond!",
          "An Introduction & Basic Requirements For Creating Your Very Own Android Apps!",
          "Installing Java JDK",
          "Installing Android Studio",
          "Welcome To Our Android Course! Please Introduce Yourself To Your Classmates & I",
          "Important! Please Read This Before Moving Any Further In The Course!",
          "Notes & Source Code For This Course: How To Use it And Where To Find It!"
        ],
        "Android Basics": [
          "Creating Our Own Project.",
          "Running Our Own Hello World Application.",
          "Overview Of The Interface.",
          "Some Things To Learn About Android Studio.",
          "How To Create An Android Virtual Device.",
          "Android Application Overview."
        ],
        "Activities & States:": [
          "Understanding Activity States",
          "Example For Changing States",
          "Building The User Interface Part-1.",
          "Building The User Interface Part-2.",
          "Building User Interface Using Java"
        ],
        "Widgets, Pixels & Layout:": [
          "How To Add Properties To Widgets.",
          "How To Add Multiple Widgets.",
          "How To Convert DIP To Pixels.",
          "Understanding Layouts: Grid Layout."
        ],
        "Event Handling:": [
          "How To Handle Events In Android.",
          "Learning How To Use Event Listener",
          "How To Add Multiple Event Listeners."
        ],
        "Gestures & Fragments:": [
          "What Are Gestures.",
          "Gesture App.",
          "What Are Fragments.",
          "Designing Top Fragment.",
          "How To Create A Fragment Class."
        ],
        "Buttons And App Design:": [
          "Creating Design For A Simple Application.",
          "Creating Workout Advisor App Part -1",
          "Creating Workout Advisor App Part -2"
        ],
        "Text & Animations": [
          "Creating Workout Advisor App Part -3",
          "Creating Workout Advisor App Part -4",
          "Creating Workout Advisor App Part -5",
          "Running our application on an actual device.",
          "Creating Overflow Menu.",
          "How To Add Animations & Transitions To Your App."
        ],
        "Intents:": [
          "Understanding Intents.",
          "How To Send Intent Data.",
          "How To Send Broadcast Intents.",
          "How To Receive Broadcast Intents."
        ],
        "Threads": [
          "What Are Threads.",
          "Learning Thread Handelers"
        ]
      },
      "requirements": [
        "Students should have basic knowledge of Java.",
        "Students should have knowledge of basic Java concepts such as inheritance, classes and methods.",
        "Students should be familiar with the concepts like loops,variable and objects.",
        "Students should have a PC which has at least 4GB of RAM for running the apps on the emulator to run the normal apps. and students should have an android device to run heavy apps and games.",
        "A computer with internet access",
        "A willingness to learn and study Android Studio"
      ],
      "description": "Welcome To The Complete Android Developer Course: Beginner To Advanced\n⇉ Watch the promo video to see How You Can Begin Building And Developing Your Very Own Android Applications Today!\n\n⇉ This Course is MASSIVE! You receive over 17+ hours of video content & 140+ lectures!\n\n\n⇉ Join Over 950,000+ Students Who Have Enrolled In My Udemy Courses This Year!\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nThen this course is for you! Click \"Take This Course Now\" For Instant Life-Time Access!\n\"Thank you very much Ashutosh and Joe for such a simple and excellent course. I am still in the process of learning.\" -Mohammed Imran Farooqui\n\"It's good to follow a course from beginner to advanced! I am so excited... Thank you!\n-Asma Hawari\n\"Good course. The instructor is using a simple way to explain the course that every student could understand easily.\" -Salim Ben\n__________________________________________________________________________\n\nHere Is Everything You Will Learn In This Complete Course:\nHow to create android applications from scratch!\nWe will learn how we could use Java to make android applications.\nWe will learn what tools are required to develop android applications.\nWe will also learn about Android Studio, AVD to run apps on pc. Then we move on to learn how to make user interface for our application by using multiple widgets. Also we go through how we could add properties to widgets.\nWe then study the different types of layouts used to design the user interface for\nour application. we go through the methods used for handling events such as a touch.\nwe also learn how to handle multiple events. Understanding fragments and their use is the\nnext which we study in this course, we also learn how to use create fragments to merge multiple activities on a single screen. We have an overview about gestures and the techniques to handle them\nTo go through the basic concepts we develop a basic workout android applications which suggests workouts depending on the option selected by the user, this gives you an idea about how android apps work.Moving along we learn how to add animations and transitions to our app, so as to make it more attractive to the end user. We then move on to intents and from there we go on to study about threads and their usage in developing android applications. Next part includes concepts such as intent,services and list views.we study about them in depth as well.\nWe then move to the most important part of saving the data in database using SQLite.\nWe will then learn and understand the basic database queries such as adding and deleting data from database. After we are done with database we then move on to multimedia in which we study how to apply filters and styles to our image.\nLast but not the least we have a basic introduction to game development by studying the\ngame development platform Libgdx, here we study the basic structure of a game.\nAlso we learn how to animate characters while developing games for android. We also go through the sound effects while developing games using Libgdx.\nYou will learn all of this and so much more by enrolling in our course!\n__________________________________________________________________________\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin to move towards becoming an Android Developer!\nWhen we learn something new, I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course. If you ever have any questions please feel free to message us directly and we will do our best to get back to you as soon as possible!\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But You Can Do It!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button at the top right now!\n...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys & Ashutosh Pawar",
      "target_audience": [
        "Any student looking to learn how to develop android applications",
        "Students with basic knowledge of Java who want to develop android apps.",
        "Students who need a basic introduction to game development using platforms such as Libgdx."
      ]
    },
    {
      "title": "Create an App with no code",
      "url": "https://www.udemy.com/course/firebase-meets-appgyver/",
      "bio": "Firebase meets AppGyver",
      "objectives": [
        "Create an App for iOS and Android",
        "Setup a Database",
        "Add Authentication and a Signup Screen"
      ],
      "course_content": {
        "Introduction": [
          "Welcome"
        ],
        "Firebase - Quicktour": [
          "Introduction",
          "Landingpage & Pricing",
          "Console & Database",
          "Add a new Document",
          "Authentication",
          "Storage",
          "REST API",
          "Recap"
        ],
        "AppGyver - Quicktour": [
          "Introduction",
          "First Look",
          "Composer Pro - Editor",
          "Hot Reload - AppGyver Preview App",
          "Recap"
        ],
        "Essentials - What is JSON?": [
          "Introduction",
          "JSON - Crash Course",
          "Write your own JSON Data"
        ],
        "Essentials - What is a REST API?": [
          "Introduction",
          "jsonbox.io & Postman",
          "Using Postman to connect to a REST API"
        ],
        "Let's create a Todo-App": [
          "Introduction",
          "Setup Firebase",
          "Connect AppGyver with Firebase",
          "Display our Todo-Items",
          "Delete Todo-Items",
          "Create Todo-Items"
        ],
        "Damage Report - REST API": [
          "Introduction",
          "Firebase Setup",
          "Connect the REST API",
          "Display our Data on the App",
          "Format List Items",
          "Create 'Add Item' Page",
          "Toggle Items using HTTP directly",
          "Add 'Item Details' Page",
          "Delete Items"
        ],
        "Damage Report - Introducing Images": [
          "Introduction",
          "Understanding Google Storage",
          "Image Upload",
          "Deleting Images",
          "Upload Images via the App",
          "Link Image Upload with Item Creation",
          "Display Image in the List Item",
          "Checkbox & Delete Item",
          "Fast Refresh after Item Deletion"
        ],
        "Damage Report - Authentication": [
          "Introduction",
          "Understanding Authentication",
          "Add Sign Up to the App",
          "Add Sign Up to the App 2",
          "Secure Endpoints",
          "Use the Access Token in HTTP",
          "Display Images with Access-Token"
        ]
      },
      "requirements": [
        "You need a Google Account"
      ],
      "description": "Create almost any App without coding. You will learn how to use AppGyver to create almost any App in a fraction of the time regular developers need.\nYour Apps will be ready to publish in Google Play Store or Apples App Store.\nThis course covers all essentials to become a no code hero.",
      "target_audience": [
        "Beginner Course: No coding experience is required"
      ]
    },
    {
      "title": "CoreML - Master Machine Learning for iOS Apps",
      "url": "https://www.udemy.com/course/coreml-machine-learning-for-ios-apps/",
      "bio": "Build Intelligent iOS 11 apps using Apple's Native Machine Learning API - CoreML",
      "objectives": [
        "Build intelligent iOS apps that use machine learning.",
        "Create an app that uses the Inception V3 framework with CoreML to identify objects visually.",
        "Understand how the ImagePickerView works and how you can enable the camera functionality in your iOS apps.",
        "Make an app that recognises the name of a flower just from a picture."
      ],
      "course_content": {
        "Introduction to Machine Learning": [
          "Install the Required Software",
          "Introduction to Machine Learning",
          "Supervised Learning",
          "Unsupervised Learning",
          "Reinforcement Learning"
        ],
        "Apple's Latest API for iOS 11 - CoreML Framework": [
          "What is CoreML?",
          "What We'll Make By the End of This Module",
          "How to Import the Image Recognition Models and Enable Camera Functionality",
          "Getting Image Recognition Results Back from Our Inception V3 Model",
          "Hotdog or Not Hotdog?",
          "Download the Completed App Project"
        ],
        "Advanced CoreML - How to Convert Pre-Trained Models Using CoreML Tools": [
          "What We'll Make By the End of This Module",
          "Installing CoreML Tools Using Python",
          "Converting a Caffe Model in to MLModel",
          "[Challenge] Set up a UIImagePickerController",
          "[Solution] Set up a UIImagePickerController",
          "[Challenge] Getting Classifications from our Model",
          "[Solution] Getting Classifications from our Model",
          "[Challenge] Adding Cocoapods to Our Project",
          "[Solution] Adding Cocoapods to Our Project",
          "[Challenge] Making HTTP Get requests to Wikipedia using Alamofire and REST",
          "[Solution] Making HTTP Get requests to Wikipedia using Alamofire and REST",
          "[Challenge] Parsing the JSON Result using SwiftyJSON",
          "[Solution] Parsing the JSON Result using SwiftyJSON",
          "Displaying Images from a URL using SDWebImage",
          "[Bonus Lesson] Creating the App Icon from Scratch and Styling the App",
          "Download the Completed App Project"
        ],
        "[Bonus Section] Adding Machine Learning to iOS Apps Using IBM Watson": [
          "What We'll Make By the End of This Module",
          "A Note About RestKit",
          "How to Install and Use Carthage as a Dependency Manager",
          "The Many Ways of Installing Carthage",
          "How to Implement the Camera and Photo Library Functionality",
          "How to Use a Pre-Trained Neural Net from IBM to Classify Any Image",
          "How to Process the Data You Get Back from IBM Bluemix",
          "Let's Beautiful Our App and Make it Look like the Real Deal",
          "Download the Completed App Project"
        ]
      },
      "requirements": [
        "Familiar with basic iOS app development",
        "A Mac or PC running macOS Sierra 10.12.4 or later",
        "No paid software required - all apps will be created in Xcode 9 (which is free)"
      ],
      "description": "Have an app idea that requires machine learning?\nBut all the maths getting you down?\nWant a simple and easy way of implementing machine learning in your iOS apps?\nThen this course is for you!\nJoin me as we dive into Apple's latest iOS 11 API - CoreML - a native iOS framework built with Swift.\nAfter this course you fully understand:\nWhat is machine learning\nSupervised learning\nUnsupervised learning\nReinforcement learning\nHow CoreML works\nHow to implement image recognition in your iOS apps\nHow to convert existing trained models created using Caffe, Keras, TensorFlow or scikit Learn into a MLModel that you can drag and drop into your iOS apps.\nand much much more...\nTake a look at what other students have been saying about this course:\n\"I am about a third through this course and I have learned so much. This course is worth way more than what it cost but I'm thankful prices are low or I might have passed it up in the first place not knowing what I would get. I have used a couple Udemy courses and countless youtube tutorials. This is the best course I've ever took.\" - Jeffrey Nelson\n\"The course offers interesting concepts coupled with a teacher that explains things clearly. You get to make a bunch of interesting apps and expand your skills. Thanks Angela!\" - Megan Eding\n\"Clear tutorials, the lecturer explains everything well. It is one of the best courses I have participated in on Udemy.\" - Mark Garcia\n\"Angela is connecting the missing dots for me... \" - Tom Colenbrander\nWhat are you waiting for? Join the course today!",
      "target_audience": [
        "If you are an intermediate to advanced iOS developer looking to add more skills under your belt.",
        "If you are looking to quickly get up to date with the latest iOS 11 APIs.",
        "If you are a beginner and want to learn to create intelligent iOS apps using machine learning without having to understand a lot of complicated maths."
      ]
    },
    {
      "title": "To-Do App with Jetpack Compose MVVM - Android Development",
      "url": "https://www.udemy.com/course/to-do-app-with-jetpack-compose-mvvm-android-development/",
      "bio": "Build a To-Do App using Modern Declarative UI Toolkit called Jetpack Compose to Accelerate your UI and App development.",
      "objectives": [
        "Develop Android App from Scratch",
        "To-Do App with Jetpack Compose",
        "New Declarative way of Building UI",
        "Introducing with Jetpack Compose",
        "Composable Lifecycle",
        "Initial Composition and Re-composition",
        "States in Jetpack Compose",
        "Side Effects",
        "Layouts in Jetpack Compose",
        "Build Custom UI Components",
        "ROOM Database",
        "Compose Navigation",
        "ViewModel",
        "Dependency Injection with Dagger-Hilt",
        "Preferences DataStore",
        "Support for Dark and Light Themes",
        "Animate UI Components",
        "Animated Splash Screen",
        "Swipe to Delete Animation",
        "SharedViewModel",
        "Clean Architecture",
        "MVVM",
        "Transition Animations",
        "And many more!"
      ],
      "course_content": {
        "Introducing with Jetpack Compose": [
          "Introduction",
          "About Jetpack Compose",
          "About Recomposition",
          "States in Jetpack Compose",
          "Compose Lifecycle",
          "Side Effects",
          "Layouts"
        ],
        "Let's Build an App": [
          "Note: Before you start",
          "Create the New Project",
          "Add Dependencies",
          "Create Model Classes",
          "Introducing with ROOM Database",
          "Setup ROOM Database",
          "Introducing with Dependency Injection",
          "Introducing with Dagger-Hilt Library",
          "Setup Dagger-Hilt",
          "Create ToDoRepository",
          "Create SharedViewModel",
          "Introducing with Navigation in Jetpack Compose",
          "Setup Navigation Component",
          "List Screen - FAB",
          "List Screen - Default List App Bar",
          "List Screen - List App Bar Actions",
          "List Screen - Search App Bar",
          "List Screen - Search App Bar - Part 2",
          "Display All Tasks - Design Task Item",
          "Display All Tasks - Observe Database",
          "Display All Tasks - Show Empty Content",
          "Display All Tasks - Create RequestState",
          "Task Screen - New Task App Bar",
          "Task Screen - Existing Task App Bar",
          "Task Screen - Get Selected Task",
          "Task Screen - Priority Drop-Down",
          "Task Screen - Task Content",
          "Task Screen - Display Dynamic Content",
          "CRUD Operations - Limit Title Length",
          "CRUD Operations - Bug Fix & Fields Validation",
          "CRUD Operations - Add Task",
          "CRUD Operations - Display Snack Bar",
          "CRUD Operations - Update Task",
          "CRUD Operations - Delete Single Task",
          "CRUD Operations - Undo Deleted Task",
          "CRUD Operations - Search Database",
          "CRUD Operations - Delete All Tasks",
          "Alert Dialog - Delete Single Task",
          "Alert Dialog - Delete All Tasks",
          "Introducing with DataStore",
          "List Sorting - Create DataStoreRepository",
          "List Sorting - Apply Sorting in a List",
          "Priority Sort Drop-Down & TaskComposable FIX",
          "Swipe to Delete - Implementation",
          "Swipe to Delete - Animate Item Visibility",
          "Splash Screen - Design Splash Screen",
          "Splash Screen - Implement Splash Screen",
          "Splash Screen - Animate Splash Screen",
          "Navigation - Transition Animations"
        ],
        "Final Word": [
          "Final Word"
        ],
        "Course Updates": [
          "Update #1 - Intercept Back Button",
          "Update #2 - Code Cleanup - handleDatabaseActions()",
          "Update #3 - Dependency Update and Code Cleanup",
          "Update #4 - Configuration Change, SnackBar, SearchAppBar Bugs Fixed and more..",
          "Update #5 - Project Cleanup",
          "Update #6 - Private Setters",
          "Update #7 - Migrating to the new Splash API",
          "Update #8 - Accompanist Navigation library migration + Soft keyboard updated",
          "Update #9 - KAPT Migration and Undo Action fixed",
          "Update #10 - Material 3 Migration Guide",
          "Update #11 - SwipeToRefresh & SnackBar update",
          "Update #12 - Type-safe Navigation"
        ]
      },
      "requirements": [
        "Basics of Kotlin Programming Language",
        "Android Studio",
        "Motivation to Learn!"
      ],
      "description": "Hello there and welcome to my course! In this course I'm going to teach you how to build your first Android App from scratch, using a popular UI toolkit called Jetpack Compose.\nI know that lots of you have been waiting for this moment, a moment when Jetpack Compose became stable! Now it's the right time to be an Android Developer! With a Jetpack Compose building Android Apps is going to be exciting, fun and  a lot simpler then before. We are not going to need XML anymore.\nInstead we are going to build our UI with a regular Kotlin file, using the full power of Kotlin programming language.  Also creating custom UI component has been easier. So you want to build a custom UI component, no problem, just start by adding a simple function annotated with @Composable annotation.\nAnd of course how would this course look like without a real project? Our To-Do application which we are going to develop in this course will have a Single Activity and Zero Fragments. Sounds impossible? Well it isn't. So better get used to it, because that will greatly simplify the process of developing Android apps.\nNow at the beginning of this course I'm going to introduce you with Jetpack Compose in general and with some of the most important concepts as well. You will learn everything about the Lifecycle of a single composable and how Compose Compiler is doing all the hard work for you behind the scenes.\n\n\nIn this course we are going to use some of the most important Android Architecture components like:\n- ROOM Database: To save and read the data from a local database, plus we are going to write some custom SQL queries as well.\n- Compose Navigation: So we can navigate between our Screen Composables. And At the end of the course you will also learn how to add some beautiful transition animations as well.\n- ViewModel: Which will contain all the logic needed to work with our app.\n- Preference DataStore: To persist a simple key-value pairs.\n- And you'll learn about a popular dependency injection library called Dagger-Hilt. You will see how to inject a ViewModel with different  dependencies without needing to create a ViewModel Factory.\n\n\nBy default our application will support Dark Mode as well, and you will learn how easy it is to have two different themes of your app with a Jetpack Compose. You will also learn how to build your own custom UI components.We will use some of the most popular material components along with a Scaffold, which is an amazing composable function that uses SLOT API, to place all your UI components in the place they belong by the rules of material design documentation.\nTo-Do app on which we are going to work on will have an animated Splash Screen, as some other components in our app. Also an Animated Swipe to Delete functionality which will allow us to easily remove an item from the list. Along with that we will add a safety feature called UNDO deleted item, which will display a SnackBar whenever we delete an item from the list, so we can get it back by one click. You will learn planty of other things related to the new way of developing Android Apps.\nAnd finally this course will be constantly updated with new videos whenever needed. Whenever we find a bug in our app, then I'm going to record a video about it and we are going to fix it together. Plus you'll be in contact with me throughout this whole course, and you can always ask me a question related to this course and even suggest some code cleanup for the project if  you are skilled enough to find it.\n\n\nOverall this is going to be quite a journey.\nSo what are you waiting my friend, let's start learning!",
      "target_audience": [
        "Android Developers",
        "Android Designers",
        "Anyone who wants to learn new way of Developing Android Apps",
        "Anyone who wants to learn more about Jetpack Compose by working on a real project",
        "Anyone who wants to keep up with the Latest API's for Building Android Apps",
        "Anyone who wants to build Android Apps with ease",
        "Anyone who wants to improve skills and stay up to date"
      ]
    },
    {
      "title": "The Complete Android Oreo Tutorial - Make 30 Apps",
      "url": "https://www.udemy.com/course/the-complete-android-tutorial-for-beginners/",
      "bio": "Ideal for Beginners! Android 7.1 development: Become an Android developer, by making more than 30 Android mobile apps.",
      "objectives": [
        "Kick start into a new career with your new Android development skills and knowledge!",
        "Learn the skills needed to obtain a new career developing Android apps",
        "Step by step learn how to put Android applications together",
        "Work more efficiently with Android development by learning the best tools and practices",
        "Earn more with your new Android development skills",
        "Learn how to develop apps for Android phones and tablets",
        "Create your own professional quality Android apps",
        "Join a large group of people who really understand Android Lollipop and are Android enthusiasts",
        "Deploy Android app to the Google Play store",
        "Crack your Interview for a job anywhere in the world",
        "Feel proud with your new knowledge of Android app development"
      ],
      "course_content": {
        "Android Studio Installation": [
          "Java JDK Installation",
          "Install and Setup Android Studio",
          "Introduction to Android and it's internal Architecture"
        ],
        "Hello World using Android Studio": [
          "Android Studio - Create your First Application - Hurrey !",
          "Know your Project structure in Android Studio",
          "Let's set up your Android Virtual Device and Run our Application",
          "Manifest file",
          "User Interface overview",
          "Control Sizing",
          "Hello World !"
        ],
        "LogCat and it's Crucial Role for Application Developement": [
          "Understanding the concept behind LogCat",
          "Android Studio with LogCat Demo",
          "More on Android Studio LogCat"
        ],
        "Android Buttons and it's Various Types of EventListeners": [
          "Method - 1 - onClickListener Interface",
          "Android Studio - Method - 1 : OnClickListener Interface - continued!",
          "Android Studio - Distinguish between two buttons",
          "\" onClick \" Inner Class Listener",
          "Add listener of Button in XML file",
          "Listener in XML file : Demo"
        ],
        "Overview of Service, BroadCast Receivers, Intents, Activity and Content Provider": [
          "Let's check out the role of Activity, Services and Intents",
          "Let's see Broadcast Receiver and it's usage",
          "Android Application components"
        ],
        "Explicit Intents : Its all Three methods in detail": [
          "Explicit Intent and Explanation of three ways to Implement it",
          "Explicit Intent and it's Codes Demo"
        ],
        "Activity LifeCycle - In Context of TWO Activities": [
          "Activity LifeCycle : Complete Explanation of LifeCycle",
          "Activity LifeCycle : Live Explanation of Lifecycle through LogCat in Eclipse",
          "Activity LifeCycle : Concept of STACK attached to LifeCycle",
          "Activity Lifecycle Quiz Time"
        ],
        "Toast and it's alignment": [
          "Introduction",
          "Toast positioning",
          "Custom Toast with graphics and it's algorithm",
          "Custom Toast and alignment - Demo"
        ],
        "Screen orientation and it's attached lifecycle": [
          "Screen Orientation and it's Explanation of Attached Activity Lifecycle.",
          "Screen Orientation and it's Java Codes related to Activity Lifecycle"
        ],
        "Screen Orientation - Preserve the Variables and Widgets Value": [
          "Overview of Useful Methods - onSaveInstanceState() , onRestoreInstanceState()",
          "Preserving values by - onSaveInstanceState() , onRestoreInstanceState()"
        ]
      },
      "requirements": [
        "A PC or a Mac is required to use for development apps",
        "A real device is NOT REQUIRED. This course let you make use of Android Virtual Device or Emulator to deploy Android apps and debug it efficiently."
      ],
      "description": "2024 Update: My Udemy courses are not being updated anymore.\nI have joined Droidcon Academy and leading the platform. I will continue my passion for teaching by working with thousands of instructors and helping them create high-quality courses for you. Thank you for your enormous support.\n-\nAre you an aspiring Android Developer?\nDo you want to step into the world of Mobile application development and earn money?\nThen this is your destination.\nYou are going to build android apps from scratch by step by step tutorials designed in such a way that a real noob can also start making apps in professional way. You will start off by building basic apps, and progress to more complex apps by inculcating more complex advance features in you application.\nThe apps you will create, you will be shown how to publish those apps in the Google Playstore and reach billions of Android users world wide.\nAlso, learn how to monetise your application and earn thousands of dollars. How to prepare your playstore listing and also, how to make your apps rank higher in playstore search engine.\nGet familiar with two mostly used Tools for developing Android apps:\nAndroid Studio\nAndroid Studio is the official IDE by Google and is gradually picking up popularity. But at the same time if you belong to java background then you must be an eclipse lover. Yes, you will learn Android App development by Eclipse too.\nBoth the Tools Android Studio and Eclipse are well shown and explained how to make effective use of it.\nConfigure your own Virtual Android device - emulator which runs on your Mac or Windows which means you do not need your own personal device to run your android apps.\nSave your precious time while developing learn how to install 200% faster emulator- Genymotion on your Mac or PC.\nIf you have your own Android device then learn how to configure your IDE to deploy and test Android APK files on your real device.\nDebug your android apps in your Virtual device and also learn how to debug it in your real android device.\nBuilding these projects will help you understand the basics of Android development, and then in the coming weeks, the more advanced apps being added to the course will show you many of the new techniques and functionality built into the new Marshmallow SDK to really make your apps pop!\nAn all new app that takes advantage of the stunning new material design from Lollipop which brings all new and stunning visual, motion and interaction to your apps.\nYou'll will also learn how to take advantage of the all new enhanced notification functionality built into Lollipop as well as heads-up, display content and actions in a small floating window.\nConfigure your apps with Graphics and design, and give support for your application to run on Multiple Screens i.e. Make apps that are compatible with Tablets as well as Smartphones.\nLearn Animation - Give polished look to your apps\nExplore the android animation and it's implementation in your application. Attract more and more users by showing incredible animation effects in your apps.\nIntroducing brand new Oreo, Nougat, Marshmallow 6.0 and 5.0 Lollipop features.\nLearn about new Marshmallow/Lollipop feature such as Recycler View which is the advance version of Listview.\nImplement Grid View, Staggered View horizontal and also Staggered view Vertical with the help of Recycler View.\nImplement all new Lollipop Animation transitions in your Recycler view.\nWant to make your recycler view more attractive? Yes, here we go. Learn Android CardView in detail.\nLearn about Android Toolbar which is the trending feature of Android 5.0 that replaces old Action Bar.\nText to Speech feature - Learn how to convert Text to Speech and make your app speak and interact with the app user.",
      "target_audience": [
        "This course targets the absolute beginners as well as coding aspirants who want to enter into the world of Mobile apps and development with brand new Android Lollipop functionality.",
        "No coding experience is needed",
        "Web developers looking to get into mobile",
        "Anyone with a good idea and the drive to create it",
        "Ideal for complete beginners!"
      ]
    },
    {
      "title": "React Native - The Practical Guide [2025]",
      "url": "https://www.udemy.com/course/react-native-the-practical-guide/",
      "bio": "Use React Native and your React knowledge to build native iOS and Android Apps - incl. Push Notifications, Hooks, Redux",
      "objectives": [
        "Learn how to use ReactJS to build real native mobile apps for iOS and Android",
        "Develop cross-platform (iOS and Android) mobile apps without knowing Swift, ObjectiveC or Java/ Android",
        "Explore React Native basics and advanced features!",
        "Learn how to use key mobile app features like Google maps or the device camera"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome To This Course & What To Expect!",
          "What Is React Native?",
          "Join our Online Learning Community",
          "A Glance Under The Hood Of React Native",
          "Creating React Native Projects: Expo CLI vs React Native CLI",
          "Creating a New React Native Project",
          "Analyzing The Created Project",
          "Running Our First App On A Real Device!",
          "Setting Up A Local Development Environment",
          "Course Setup",
          "About This Course",
          "Course Resources, Code Snapshots & How To Use"
        ],
        "React Native Basics [COURSE GOALS APP]": [
          "Module Introduction",
          "Exploring Core Components & Component Styling",
          "Working With Core Components",
          "Styling React Native Apps",
          "React Native: Core Components, Styling & Colors - More Information",
          "Exploring Layouts & Flexbox",
          "React Native & Flexbox",
          "Using Flexbox To Create Layouts",
          "Flexbox - A Deep Dive",
          "Components, Styles, Layouts",
          "Improving The Layout",
          "Handling Events",
          "Managing A List Of Course Goals (in our Demo App)",
          "iOS & Android Styling Differences",
          "Making Content Scrollable with ScrollView",
          "Optimizing Lists with FlatList",
          "More Components & Lists",
          "Splitting Components Into Smaller Components",
          "Utilizing Props",
          "Working on the \"Goal Input\" Component",
          "Handling Taps with the Pressable Component",
          "Making Items Deletable & Using IDs",
          "Adding an Android Ripple Effect & an iOS Alternative",
          "Adding a Modal Screen",
          "Styling the Modal Overlay",
          "Opening & Closing the Modal",
          "Working with Images & Changing Colors",
          "App Finishing Touches",
          "Module Summary"
        ],
        "Debugging React Native Apps (Introduction)": [
          "Module Introduction",
          "Handling Errors",
          "Logging to the Console",
          "Debugging JavaScript Remotely",
          "Using the React DevTools",
          "Using the Documentation"
        ],
        "Diving Deeper into Components, Layouts & Styling - Building a Mini-Game App": [
          "Module Introduction & What We'll Build",
          "Starting Setup & Analyzing the Target App",
          "Setting Up our Screen Components",
          "Creating Custom Buttons",
          "Styling for Android & iOS",
          "Styling the \"Number Input\" Element",
          "Configuring the TextInput Field",
          "Adding Visual Feedback to the Buttons",
          "Improving the Buttons",
          "Coloring the Components & The Overall App",
          "Adding a Linear Gradient",
          "Adding a Background Image",
          "Getting Started with the Game Logic",
          "Handling User Input & Showing an Alert Dialog",
          "Switching Screens Programmatically",
          "Starting Work on the Game Screen",
          "Respecting Device Screen Restrictions with the SafeAreaView",
          "Creating a Title Component",
          "Managing Colors Globally",
          "Creating, Using & Displaying Random Numbers",
          "Adding Game Control Buttons (\"+\" & \"-\") to the App",
          "Checking for \"Game Over\"",
          "Improving the Game Screen Visuals",
          "Using \"Cascading Styles\"",
          "Working with Icons (Button Icons)",
          "Adding & Using Custom Fonts with React Native Apps",
          "Adding a (Foreground) Image",
          "Using & Styling Nested Text",
          "Adding Logic to (Re-)Start Games & Displaying a Summary Screen",
          "Logging Game Rounds",
          "Outputting Log Data with FlatList",
          "Styling the Game Round Logs",
          "Finishing Touches",
          "Module Summary"
        ],
        "Building Adaptive User Interfaces (Adapt to Platform & Device Sizes)": [
          "Module Introduction",
          "Setting Dynamic Widths",
          "Introducing the Dimensions API",
          "Adjusting Image Sizes with the Dimensions API",
          "Understanding Screen Orientation Problems",
          "Setting Sizes Dynamically (for different Orientations)",
          "Managing Screen Content with KeyboardAvoidingView",
          "Improving the Landscape Mode UI",
          "The Dimensions API & Responsive UIs",
          "Further Improvements with useWindowDimensions",
          "Writing Platform-specific Code with the Platform API",
          "Styling the Status Bar"
        ],
        "React Native Navigation with React Navigation [MEALS APP]": [
          "Module Introduction",
          "What Is Navigation?",
          "Getting Started with the App & Outputting Meal Categories",
          "Displaying Items in a Grid",
          "Getting Started with the React Navigation Package",
          "Implementing Navigation Between Two Screens",
          "Setting the Default Screen",
          "Understanding the useNavigation Hook",
          "Working with Route Parameters To Pass Data Between Screens",
          "Displaying Meals",
          "Adding Images & Styling",
          "Styling Screen Headers & Backgrounds",
          "Setting Navigation Options Dynamically",
          "Adding & Configuring the Meal Details Screen",
          "Outputting Content in the Meal Detail Screen",
          "Finishing the Meal Detail Screen",
          "Adding Header Buttons",
          "Adding an Icon Button to a Header",
          "Adding Drawer Navigation & Creating a Drawer",
          "Configuring the Drawer Navigator & The Drawer",
          "Adding, Configuring & Using Bottom Tabs",
          "Nesting Navigators",
          "App Finishing Touches",
          "Module Summary"
        ],
        "App-wide State Management with Redux & Context API": [
          "Module Introduction",
          "Getting Started with React's Context API",
          "Managing App-wide State with Context",
          "Using the Created Context with useContext",
          "Managing Favorite Meals with the Context API",
          "Getting Started with Redux & Redux Toolkit",
          "Working with Redux Slices",
          "Managing Redux State & Dispatching Actions",
          "Using Redux State in Components",
          "Module Summary"
        ],
        "Time To Practice - The Expense Tracker App": [
          "Module Introduction & What We'll Build",
          "The Starting Setup",
          "Adding Navigation (with React Navigation) & Configuring Navigation",
          "Adding Global Colors & Editing Navigation Configuration",
          "Creating Key App Components to Display Expenses",
          "Continuing Work on the Expense-related Components",
          "Adding Dummy Expense Data",
          "Outputting a List of Expenses",
          "Improving App Layout & Styling",
          "Working on Expense List Items",
          "Formatting Dates",
          "Adding a Header Button & Making Expense Items Tappable",
          "Navigating Programmatically Between Screens",
          "Styling The Expense Management Screen",
          "Supporting Different Editing Modes & Using Route Parameters",
          "Adding a \"Delete\" Button",
          "Adding Custom Buttons",
          "Closing A Modal Programmatically",
          "Managing App-wide State With Context",
          "Using Context From Inside Components",
          "Deleting & Updating Expenses",
          "Finishing Touches"
        ],
        "Handling User Input": [
          "Module Introduction",
          "Building a Custom Input Component",
          "Creating an Overall Form",
          "Configuring the Form Input Elements",
          "Adding Styling",
          "Setting the Form Layout",
          "Handling User Input in a Generic Way",
          "Managing Form State & Submission",
          "Working with Entered Data",
          "Setting & Using Default Values",
          "Adding Validation",
          "Providing Visual Validation Feedback",
          "Adding Error Styling",
          "Module Summary"
        ],
        "Sending Http Requests": [
          "Module Introduction",
          "Backend Setup (Firebase)",
          "Installing Axios",
          "Sending POST Http Requests",
          "Fetching Backend Data (GET Requests)",
          "Transforming & Using Fetched Data",
          "Using Response Data from POST Requests",
          "Updating & Deleting Backend Data (UPDATE & DELETE Requests)",
          "Managing the Loading State",
          "Handling Request Errors",
          "Module Summary"
        ]
      },
      "requirements": [
        "React knowledge is a must (but you absolutely DON'T have to be an expert)",
        "JavaScript knowledge is a must, next-gen JavaScript knowledge (i.e. ES6+) is recommended",
        "NO Android/ Java or iOS (Swift, ObjectiveC) development experience is required"
      ],
      "description": "Mobile apps are one of the best ways to engage with users - no wonder everyone wants to build one!\nBut wouldn't it be amazing if you could use your web development knowledge, combined with your React knowledge, to build mobile apps with that?\nThat's exactly what React Native allows you to do!\nNo need to learn Java, Android, Swift, ObjectiveC or anything of that - React and JavaScript is all you need to create awesome native mobile apps that work on both Android and iOS. That's probably the reason why Instagram, AirBnB, Skype and many other global companies are using it to build their mobile apps!\nWith this course, you can join this league. I'll teach you all you need to create your own React Native apps, publish them to the Google Play Store and Apple App Store and dive really deep into the React Native ecosystem.\nYou'll learn all about the theory behind React Native, its core concepts, how to build responsive designs that work on different device sizes, how to navigate around, use maps and the camera and so much more!\nAnd which better way to learn than by building a real app? We'll build the \"Favorite Places\" app in this course, an app where users can share amazing pictures and the location where they took them. This app will allow you to see things like using maps, the camera, user authentication, connecting to a server and much more in action.\nBy the end of the course, we'll of course also go through all steps required to get it into an app store.\nHere's a detailed look at what you'll get:\nThe core concepts and theory\nHow to use React, JavaScript and native components\nUnderstand how to navigate in React Native apps\nA closer look at styling and animating React Native apps\nInstructions on how to use third-party libraries in your React Native app\nDetailed examples on how to use maps or an image picker\nA full user authentication flow\nHow to connect to a backend server from your app\nDebugging instructions\nAnd so much more!\nWhat will you need to succeed in this course?\nNO Android, Java, Swift or ObjectiveC knowledge is required!\nJavaScript and React (for the web) knowledge is required though - you don't need to be an expert but the basics need to be set (though there are refresher sections in this course!)\nI'd be very happy to welcome you in the course!\nMax",
      "target_audience": [
        "Anyone who wants to use React to build native mobile apps",
        "Every mobile developer who wishes to learn only one language to write cross-platform mobile apps",
        "Every mobile or web developer who's interested in writing high-performance native apps with JavaScript"
      ]
    },
    {
      "title": "Fastlane for React Native: Deploy your app autonomously!",
      "url": "https://www.udemy.com/course/fastlane-for-react-native/",
      "bio": "Deploy your React Native apps with a click of a button!",
      "objectives": [
        "You will be able to autonomously deploy apps to both app stores with the push of a button.",
        "Impress potential employers or co-workers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to ask for help",
          "Github repository for the course",
          "Course Structure",
          "What is Fastlane?",
          "What is Fastlane lane?"
        ],
        "Sample App and Fastlane installation": [
          "Sample App creation",
          "Fastlane Installation",
          "Note on Fastlane aliases"
        ],
        "Fastlane for Android": [
          "Android Introduction",
          "Fastlane for Android configuration overview",
          "Setup automated app signing",
          "Build a signed APK",
          "Setup Google Play Store API",
          "Configure our app in Google Play Console",
          "Rollout your app to Alpha",
          "Initialize Fastlane for Android",
          "Building our first lane",
          "Auto-increment our builds",
          "Building beta and production lanes",
          "Executing our Alpha lane",
          "Post execution of our first lane execution"
        ],
        "Fastlane for iOS": [
          "iOS Fastlane introduction",
          "Fastlane vs Manual App Store submission",
          "Apple Developer Account setup",
          "Using Fastlane Produce",
          "Initialize Fastlane for iOS",
          "Building out Fastlane iOS lanes",
          "Setting up Fastlane Match",
          "Setting up Fastlane Match part 2",
          "Considerations for Cocoapods",
          "Metadata and screenshot preparation",
          "Upload to Testflight",
          "Preparation for App Store submission"
        ],
        "Conclusion": [
          "Thank you!"
        ]
      },
      "requirements": [
        "A working computer",
        "A macOS computer is required for the iOS sections."
      ],
      "description": "Fastlane has revolutionized the application deployment process. No longer will you have to manually build, sign, and upload your APK's and IPA's manually. Fastlane will take care of that for you. Fastlane also automates the metadata, screenshot, certificate, and provisioning profile setup so you don't have to. If you are serious about deploying apps to the Android and iOS app stores, Fastlane is a must have for your toolkit portfolio.\nWith this course, we will dive deep into the inner workings of Fastlane. By the end of the course, you will be able to intelligently talk about the app deployment process and how Fastlane automates each task. We do this by breaking down each step piece by piece using a visual based learning approach with flow diagrams and charts. You will also be able to follow me step by step in a real app deployment process.\nCome join me!",
      "target_audience": [
        "Anyone with basic react native knowledge",
        "Aspiring React Native Developers"
      ]
    },
    {
      "title": "Android App Development with Kotlin | Intermediate Android",
      "url": "https://www.udemy.com/course/android-app-development-with-kotlin-intermediate-android/",
      "bio": "Kotlin Android | Android App Development with Firebase, Android Studio, android development, app development projects",
      "objectives": [
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "You can enroll this course if you want to develop advanced Android Applications using web integrated, online database.",
        "During the course the latest Android technologies and software methodologies are used",
        "In this Android course, we will cover very important topics such as fragments, list fragment, dialog fragment, sending an email via android app and much more.",
        "Sending Data Between Screens",
        "Fragments",
        "Fragment Operations",
        "List Fragment",
        "Dialog Fragment",
        "Sending an SMS message",
        "Making a Call",
        "Speech to Text in android app development",
        "Sending an email",
        "Android",
        "android development",
        "android app development",
        "android studio",
        "mobile development",
        "mobile app development",
        "app development",
        "Android app",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development",
        "Android 11",
        "Android 12",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices.",
        "Kotlin is popular for both Android developers and Java developers.",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language, Udemy has a top-rated course to help you",
        "What is Android SDK and why is it important? Android SDK refers to the Android Software Development Kit.",
        "What skills do I need to be an Android Developer? An Android developer works with the Android SDK (software development kit) and the Android operating system.",
        "Is Kotlin or Java better for Android Development? If you are building new Android apps, Kotlin is better suited because it is the recommended programming",
        "Is Android Development a good career? With over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance you",
        "What are some of the important tools for Android Development? The tools you will use for Android development depend on how you would like to focus your career",
        "What is Android Development? Android development is a software creation process that focuses on applications, better known as apps, that are compatible with dev",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform."
      ],
      "course_content": {
        "Intro to Android App Development with Kotlin | Intermediate Android": [
          "Introduction and What Will We Learn In This Android App Development Course?",
          "Documents: Android App Development with Kotlin",
          "FAQ - Android App Development with Kotlin"
        ],
        "Fragment Operations in Android App Development, Kotlin": [
          "Introduction to Fragment Topic in Android App Development, Kotlin",
          "General Information About Fragments",
          "Fragment Creation in Android App Development, Kotlin",
          "Replacing the Fragment in the Activity with Another Fragment",
          "Fragment Backstack Part 1 in Android App Development, Kotlin",
          "Fragment Backstack Part 2 in Android App Development, Kotlin",
          "List Fragment Part 1 in Android App Development, Kotlin",
          "List Fragment Part 2 in Android App Development, Kotlin",
          "List Fragment Part 3 in Android App Development, Kotlin",
          "Dialog Fragment Part 1 in mobile app development and android app development",
          "Dialog Fragment Part 2 in mobile app development and android app development",
          "quiz"
        ],
        "Sending Data Between Screens in Mobile App Development and Android App": [
          "Sending Data from Activity to Activity Part 1 in Android kotlin development",
          "Sending Data from Activity to Activity Part 2 in Kotlin, android app development",
          "Sending Data from Activity to Fragment Part 1 in Kotlin",
          "Sending Data from Activity to Fragment Part 2 in Android App Development",
          "Sending Data from Fragment to Activity Part 1 in Android App Development",
          "Sending Data from Fragment to Activity Part 2 in android app development, kotlin",
          "Sending Data Between Fragments in android app development, kotlin",
          "quiz"
        ],
        "Accessing the Features of Android Device in android app development, kotlin": [
          "Sending an SMS Message in Android, Kotlin, Java",
          "Sending E-Mail in Android, Kotlin, Java",
          "Making a Call in Android, Kotlin, Java",
          "Converting Speech to Text in Android, Kotlin, Java",
          "Project Files",
          "quiz"
        ],
        "Notification": [
          "Introduction to Notification?",
          "Local Notification",
          "Repeated Notifications Part 1",
          "Repeated Notifications Part 2",
          "Notification Procedures Part 1",
          "Notification Procedures Part 2",
          "Notification Procedures Part 3",
          "Push Notification",
          "quiz"
        ],
        "Architectural Room Database in Android App Development with Kotlin": [
          "What is the Database?",
          "SQLite Database",
          "Room Database",
          "Architectural Components",
          "Introducing Note-Taking Application with Kotlin",
          "Creating New Projects and Adding Required Libraries",
          "Creating Entity",
          "Creating Dao",
          "Creating Database",
          "Creating Repository",
          "Creating View Model",
          "User Interface Design",
          "Adapter Class - Showing Data in the Database in RecyclerView",
          "Adding New Data to the Database - Part 1",
          "Adding New Data to the Database - Part 2",
          "Deleting Data From Database",
          "Updating the Data in the Database - Part 1",
          "Updating the Data in the Database - Part 2",
          "quiz"
        ],
        "Introduction to Firebase: Firebase for Android App Development using Kotlin": [
          "What is Firebase?",
          "FAQ about Firebase, Andoid App Development, Kotlin",
          "Products Offered by Firebase",
          "Project File Link; Firebase Android",
          "Firebase Pricing Policy, Limits and Quotas",
          "Useful links about Firebase, Android App Development, Kotlin",
          "quiz"
        ],
        "Firebase Realtime Database": [
          "Creating a Firebase Database",
          "Firebase – Android Studio Integration",
          "Adding Real-time Data to The Database via Firebase Console",
          "Adding Data into Real-Time Database via Android App",
          "Retrieving Real-Time Data From Database to Application",
          "Quiz"
        ],
        "User Registration App in for Android App Development": [
          "Introduction to Project",
          "The Application Design - Part 1",
          "The Application Design - Part 2",
          "Adding User to the Realtime Database",
          "Retrieving Data From the Firebase Realtime Database",
          "Showing Retrieved Data on the RcyclerView - Part 1",
          "Showing Retrieved Data on the RcyclerView - Part 2",
          "User Registration App - Updating Data - Part 1",
          "User Registration App - Updating Data - Part 2",
          "User Registration App - Deleting Selected User",
          "User Registration App - Deleting All Users from Database",
          "Quiz ; Firebase"
        ],
        "Authentication with Firebase": [
          "Introduction to Authentication",
          "Email and Password Authentication - Part 1",
          "Email and Password Authentication - Part 2",
          "Email and Password Authentication - Part 3",
          "User Remembering with Firebase",
          "Adding Forgot Password Option",
          "Authentication with Phone - Part 1",
          "Authentication with Phone - Part 2",
          "Quiz; Firebase"
        ]
      },
      "requirements": [
        "This Android course is based on Kotlin programming language. If you have basic understanding on Kotlin programming then it will be a fun to learn Android application development.",
        "If you have basic Android knowledge and want to learn the advanced levels of Android, this course is for you",
        "After completing this Android tutorial you will find yourself at a advanced level of expertise in Android programming.",
        "Basic understanding on Android",
        "Basic understanding on Android Studio",
        "Desire to learn Android Application Development",
        "Watching the Android course videos completely, to the end and in order.",
        "Desire to learn android app development",
        "Desire to learn android developer, android app developer"
      ],
      "description": "Hi there,\nWelcome to \"Android App Development with Kotlin | Intermediate Android\" course\nKotlin Android | Android App Development with Firebase, Android Studio, android development, app development projects\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform My android development course on Oak Academy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more Kotlin, android app development, android, android kotlin, android app development kotlin, kotlin android, android development, android developer, android app, app development, android development with kotlin, android app development with kotlin, android development kotlin\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nIf your answer is “yes”, you are at the right place!\nKotlin is popular for both Android developers and Java developers Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to the language, Udemy has a top-rated course to help you achieve your goals\nKotlin is a very new and up-to-date programming language Kotlin android is accepted by Google as the official language for Android development Therefore, it is a language that everyone who wants to be an android developer should know In this course, we teach Kotlin programming language from beginner to advanced level, considering the importance of Kotlin\nAndroid is the most used operating system on the planet In fact, it’s almost omnipresent in the mobile ecosystem With millions of Android devices in use, and an incredible 500,000+ new Android devices activated daily, the popularity of Android applications is increasing exponentially - and with it, the demand for Android application developers is soaring\nI really like the approach of this course about the Android app The instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones As the course title indicates, it is the complete guide to learn android application development\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development\n\nChances are, you’ve heard of Android many times, and Do u want to be an android developer? You may even have an Android smartphone, app android tablet, watch, or TV But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google The Android OS is Linux kernel-based So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS More like a small part of an OS, but an important one The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things For example, for an application to access the phone’s File System (internal files), the user must give access first This means the app developer must let the user know, in advance, what the app they are installing wants to access For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera The app user has the power to either grant or deny permission App permissions in Android ensure the user’s protection from malware and software viruses\nThis course is built to help beginners to start making applications in android studio and android application development or android app design\nIf you want to develop yourself in Android Apps, this course is for you Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part This course is designed to fill this gap\n\nIf you're interested in developing new and innovative applications for the world’s #1 mobile platform, this course is a perfect match for you\nThis course is a mid-level android app development course which means we will not be starting this course from scratch\n\nIn this course, we will use Kotlin as the programming language So you need to know the Kotlin programming language beforehand\n\nYou will also need to have basic android and android studio knowledge for this course\nThis course will take help you to find a job as an Android Developer Because in this course you will learn the advanced topics with hands-on practices Android Development is a challenging form of programming However, the personal and financial rewards can be great Keep in mind that the career of a programmer involves a lifetime of learning and that learning Android application development is just part of that lifelong journey\nWith the information you learned in this course, you will be able to develop great large-scale, Web-integrated applications, not simple Android apps\nIn this course, we will cover very important topics such as fragments, data transfer between screens, make a call, send an email or SMS message and more\nDuring the course, you will learn all topics practically\n\nIn this Android course, you will learn\nSending Data Between Screens\nFragments\nFragment Operations\nSending email\nSpeech to Text in android\nMaking a Call and much more\nandroid app development\nmobile app development\nandroid\nandroid studio\nandroid development\nandroid\nandroid mobile app development\napp development\nandroid app\nandroid pie\nandroid app development\nandroid fragment\noak academy\nandroid expert\nandroid app development course\nmobile app development android\nandroid mobile app\nandroid firebase\nappy pie\nandroid apps\nandroid course\nandroid mobile development\nandroid architecture\nandroid development course\nandroid app development with java\nandroid app development kotlin\nandroid app developer course with pie\nfirebase android\nandroid java\nmobile app development course\nandroid studio course\nandroid mobile\nmobie app\nandroid app development with android\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\nIs Android Development a good career?\nWith over 2 5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow the latest trends\nVideo and Audio Production Quality\nAll our content are created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions\nSee you in the Android App Development with Kotlin | Intermediate Android course!\nKotlin Android | Android App Development with Firebase, Android Studio, android development, app development projects",
      "target_audience": [
        "If you are planning a career as an Android Application Developer and want to find a job in software companies in this field, this course will be an excellent choice for you",
        "If you have basic Android knowledge and want to learn the advanced levels of Android, this course is for you.",
        "Anyone who wants to develop advanced Android Applications using web integrated, online database",
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing android knowledge.",
        "Those who want to develop applications using the Kotlin programming language.",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "Anyone who is planning job transformation and want to become a Kotlin developer",
        "Anyone who wants to become a computer programmer like android 11, android 12"
      ]
    },
    {
      "title": "MV Design Pattern in iOS - Build SwiftUI Apps Apple's Way",
      "url": "https://www.udemy.com/course/mv-design-pattern-in-ios-for-swiftui/",
      "bio": "Harness the power of SwiftUI framework and start building amazing apps!",
      "objectives": [
        "Writing SwiftUI apps using MV pattern",
        "Learn to build SwiftUI apps based on Apple's recommendations",
        "Learn how MVVM might be adding unnecessary code to your SwiftUI apps",
        "Learn to write end-to-end tests for your application",
        "Apply MV pattern for client/server applications",
        "Learn to build Core Data apps and @FetchRequest and @Environment property wrappers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Exercise Files",
          "Prerequisites"
        ],
        "Understanding MV Pattern": [
          "Understanding MVVM Pattern",
          "MVVM in WPF vs SwiftUI",
          "Limitations of MVVM in SwiftUI",
          "Resources",
          "Consuming JSON and Displaying Products on Screen Using MVVM",
          "Consuming JSON and Displaying Products on Screen Using MV Pattern",
          "Apple Sample Apps and Documentation"
        ],
        "Validation": [
          "Simple Form Validation",
          "Form Validation with Error Messages and LoginFormError",
          "Form Validation with View Model",
          "Form Validation with Summary Messages"
        ],
        "Coffee Order App - Getting Started and Displaying Orders": [
          "What we will be building?",
          "Understanding the App Architecture",
          "Tour of the Server",
          "Resource: TEST Server Endpoints",
          "Resource: PROD Server Endpoints",
          "Implementing Webservice and Order Model",
          "Implementing CoffeeModel Aggregate Root",
          "Displaying All Coffee Orders"
        ],
        "Coffee Order App - End to End Testing and Adding New Coffee Orders": [
          "Configuring App Environment for Testing",
          "Writing End-to-End Testing for No Orders Found",
          "Implementing Webservice to Place an Order",
          "Implementing Add New Order View",
          "Validating New Order",
          "Placing an Order",
          "Writing End-to-End Test for Placing an Order"
        ],
        "Coffee Order App - Updating and Deleting Orders": [
          "Implementing Delete Order",
          "Writing End-to-End Test for Deleting an Order",
          "Implementing Update Order Webservice and CoffeeModel",
          "Implementing OrderDetailView",
          "Implementing Update Order User Interface",
          "Writing End-to-End Test for Updating an Existing Order"
        ],
        "Budget App - Setting Up Core Data and Adding Budget Categories": [
          "What we will be building?",
          "Creating Core Data Models",
          "Setting Up the Core Data Manager",
          "Adding a New Budget Category",
          "Displaying Budget Categories",
          "Implementing BudgetListView",
          "Deleting a Budget Category",
          "Preview, Dismiss and Refactoring"
        ],
        "Budget App - Adding Transactions": [
          "Creating the Transaction Core Data Model",
          "Implementing BudgetDetailView",
          "Saving a Transaction",
          "Displaying All Transactions",
          "Displaying Remaining and Overspending Amounts"
        ],
        "Budget App - Editing Budget Categories and Deleting Transactions": [
          "Deleting a Transaction",
          "Resources",
          "Implementing Sheet Action",
          "Updating the Budget Category",
          "Refactoring and Completing the App"
        ],
        "Conclusion": [
          "Next Steps",
          "Resources",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Knowledge of SwiftUI framework is required",
        "Knowledge of Swift language is required",
        "Understanding of MVVM pattern is recommended",
        "Xcode",
        "Mac"
      ],
      "description": "MVVM is the default pattern when building SwiftUI applications. I have been personally using the MVVM pattern since the inception of SwiftUI in 2019.\n\n\nAfter building hundreds of demos and prototypes, I started to notice issues with using MVVM patterns for SwiftUI applications. These issues resulted in adding needless complexity and constantly fighting the SwiftUI framework.\n\n\nIn this course, I will explain a different pattern for building SwiftUI apps. This pattern is used by Apple to build their SwiftUI applications. The pattern is called the MV pattern, where M stands for Model and V is for View.\n\n\nLet’s check out the contents of the course:\n\n\nUnderstanding MV Pattern\n\n\nIn this section you will learn the thinking behind the MV pattern and how it is different from the MVVM pattern. We will compare SwiftUI with WPF and conclude that in SwiftUI, the View is also the View Model.\n\n\nValidation\n\n\nIn this section, you will learn how to perform validation using MV pattern. These validation techniques are inspired from the React framework. You will learn how to perform simple validation, inline validation and even validation summary.\n\n\nCoffee Order - [Project Time]\n\n\nIn this section, you will be building a complete Coffee Ordering application integrated with a JSON API. You will learn how to create an aggregate root model and webservice layer, which allows the app to consume and present data. You will also learn how to write end-to-end tests for your application.\n\n\n\n\nBudget App - [Project Time]\n\n\nIn this section, you will learn how to build a SwiftUI app using MV pattern, which uses Core Data to persist information on the device. You will learn to use property wrappers including @FetchRequest and @Environment, which makes working with Core Data a breeze.\n\n\n\n\nWho is this course for?\n\n\nDevelopers who wants to learn Apple’s way of building SwiftUI applications\nDevelopers who wants to stop fighting the SwiftUI framework and start building iOS apps\nDevelopers who wants to start using all the power and flexibility provided by the SwiftUI framework\nDevelopers who wants to write less code to achieve more\n\n\nThis course will serve as an eye opener to many developers and will provide a lot of information on a different and easier way for building SwiftUI applications.\n\n\nAfter this course, you will be ready to start building your apps using the MV pattern.\n\n\nLet’s get started.",
      "target_audience": [
        "Developers who wants to learn how to build SwiftUI apps using MV pattern",
        "Developers who wants to learn how to Apple constructs their SwiftUI applications",
        "Developers who wants to stop fighting the SwiftUI framework and start being productive"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/build-a-grocery-ecommerce-mobile-app-without-coding-using-flutterflow/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Android & Java Developer Bootcamp",
      "url": "https://www.udemy.com/course/android-java-app-development-masterclass/",
      "bio": "Learn Android App Development, Java, Android Studio & IntelliJ IDEA from Scratch.",
      "objectives": [
        "Learn Android development, Java programming and Android studio from scratch",
        "Learn Java programming from a professional trainer from your own desk",
        "Create fun, engaging and real world Android apps (using Java) you can show to your friends and family",
        "Learn how to work with APIs, web services and advanced databases",
        "Visual training method, offering users increased retention and accelerated learning",
        "Have all the tools you need to successfully design, code and sell your Android apps",
        "Breaks even the most complex applications down into simplistic steps"
      ],
      "course_content": {},
      "requirements": [
        "This course is highly recommended for you if you've never written a line of code",
        "No programming experience is required",
        "Passion for learning android app development with Java",
        "A PC, MAC or Linux with internet connection"
      ],
      "description": "Are you Looking to boost your income as an Android Developer? Maybe you have a lot of app ideas but don't know where to start. Or you are seeking a career in Android Development and Java Programming that will finally give you the freedom and flexibility you have been looking for?\nBuild a strong foundation in Android Development, Android Studio, IntelliJ IDEA, and object-oriented Java Programming with this tutorial and complete course.\nBuild Android apps from scratch using Android Studio, IntelliJ IDEA, and Java Programming language\nUpload your apps to Google Play and reach Millions of Android users\nMake Money from your apps by displaying ads.\nContent and Overview\nThis course will take you from knowing nothing about Android O app development to a complete Android developer in 5 weeks. You will learn the following:\nIntelliJ IDEA and build User Interface (Set up and walkthrough)\nAndroid Studio and build User Interface (Set up and walkthrough)\nFundamentals of Java Programming used to build Android apps\nInputs, Buttons, and Reactive (Tap) Interfaces\nAndroid Building blocks\nVariables, Arrays, Loops, ArrayLists, ListView\nNavigate between screens\nPassing information between screens\nLearn how professional android apps developers think and work\nLearn how to design android apps\nBuild several amazing apps - Hands-on\nPublish your apps on Google Play\nBuild Sound Box app\nEarn Money from your Android apps - How to integrate ads in your apps\nAnd Learn much more by Building Real World Apps ...\nWHY ANDROID?\nAndroid is known to be one of the most versatile and most used operating systems. We are in an age where every other person uses a handheld device or a cell phone which makes use of Android. If one goes deep into the world of android, we would see that there is a scope and a lot of potentials in the world of android for individuals who are tech geeks (like us)! As vast as this world is, learning about it is as simple and as easy as a piece of cake. You can make your own app easily and show your true potential to the world of google and android.\nHere are some numbers to get you in the mood!\nDID YOU KNOW? Android is the primary operating system for over 90 tablets, 6 E-Readers, and 300 smartphones. There are over 1,460,800 apps in the Google Play store &they’re growing at an astounding pace! Every day about 1.5 million Android devices are activated all around the world. About 60% of the apps available at the Google play store are absolutely free!\nWhy learn android development? Learning android development is both fun and can reap many profits in the long run. It is said that by the year 2018, there will be about 4 billion android users, hence doubling the current market. It is safe to say that android development has potential and can reap various benefits in the long run. If one knows android development, not only will you be having a stable and sound career but can unleash your hidden talents as a developer.\nCourse description if you take this course (which you should!!) know that you are on your way to building a solid and stable foundation for Android Development, Android Studio and object-oriented Java Programming. You don’t need to spend years and years on learning, with us you can learn in 5 weeks!!!! YES! That is right, in five weeks you’ll be able to make and develop your own app and you never know, you could have it running at the app store and be an instant hit!\nWe have built this course in a way that everything that you learn, you will be able to retain for a long time. This is why we have distributed the whole course into various sections and not sessions. The reason why we did this is that our course is live and ON DEMAND. Once you buy this course, you have LIFETIME ACCESS to it. You can always refer back to any section that you want to revise and move along. Every section of ours has been built to test your ability. You not only get the content but also are given quizzes and assignments to ensure that what you have learnt is retained and you fully understand the content. (Don’t worry, we won’t scold you if you have some problem, we will be throughout). We assure you, with us, you’ll be an android developer in no time!\nNO NEED TO BE A PRO! Our course is designed specifically for people who have ZERO prior experience in programming and have never even programmed a single thing before. It doesn’t matter if you have absolutely no idea about the basics (that is why we are here!), we will teach you everything that you need to know about developing and programming in just 5 weeks. All you need is loads of passion, a hint of dedication, an internet connection and a laptop or PC. It’s that easy!!\nWhat do I learn from this course?\nYou will be able to learn android app development and Java programming in just 5 weeks.\nYou can create engaging and real-world Android apps (which you can later show off to your family and friends).\nYou'll learn by building real apps that include big buzzword apps such as the popular Flappy Bird clone, calculator, YouTube video player, and a simple and basic application as a Headstart, a mood setter application and what not!\nThis course is offered via visual training that engages students and has a better chance of retention. You will have a personal trainer at your desk at all times that will guide you fully.\nWe aren’t finished!  You can learn how to work with APIs, web services and advanced databases Upload your android apps to Google play and reach millions of android users and EARN MONEY by monetizing your applications and allowing advertisements to run on them!\nWhy choose us? Obviously, once you’ve made up your mind to become an expert developer, you will question the fact that why should you choose us. The answer is that we are passionate about android, we breathe, live and eat android! We have been in the industry for more than a decade and along with our knowledge, we can teach you with hands-on experience. We have a decade of experience in our bags of solid programming experience along with five years of application development experience. Our experience can be measured by our having over fifty applications and games (developed by us) on not only the Android Google Play but also on the Apple App Store. You’ll be taught by people who have more than 5 years of training and teaching experience, are Registered Android Developers on Google Play and manage a large community that consists of more than 10 thousand Developers.\nAre you sold yet? No? we are dedicated teachers and want to spread the joy we receive by developing to others as well, we have made and developed this course by making sure that that joy is kept alive in every section and every lesson.\nIf you’re a … Everyone can learn this course! Whether you want to develop apps as a hobby, whether you’re an entrepreneur who’s looking to save costs and develop his/her own applications, newbies who are new to the tech world or a student looking to develop skills for extra income. You are welcome to join us and this course!\nIf you have any questions or queries related to us or our course you can contact us by email or through any Udemy forum. We shall help you before, during and after the course as well.\nEnrol now.\nWe'll be really excited to see you inside!",
      "target_audience": [
        "Recommended for people with no programming or app developer experience",
        "Suitable for beginner programmers and ideal for users who learn faster when shown",
        "Best course for Web / iOS developers or any programmers to learn android development",
        "Software developers who need to architect, create and deploy commercial applications on Google's Android platform",
        "Entrepreneurs who want to learn app development and save money on development & outsourcing"
      ]
    },
    {
      "title": "iOS & Swift - MVVM, Combine, SnapKit, Snapshot/UI/Unit Tests",
      "url": "https://www.udemy.com/course/ios-swift-mvvm-combine-snapkit-snapshot-ui-unit-tests/",
      "bio": "Master the skills needed to become a senior iOS engineer like MVVM, Reactive & Protocol Orientated Programming",
      "objectives": [
        "Build a MVVM architecture app with confidence",
        "Combine framework (reactive programming, communication between VMs and VCs)",
        "SnapKit (layout views programmatically)",
        "Unit Test (increase robustness in business logic)",
        "UI Test (preserve the integrity of business flows)",
        "Snapshot Test (preserve the integrity of views from unwarranted modification)"
      ],
      "course_content": {
        "Introduction": [
          "Setup Project",
          "Setup Root Programatically"
        ],
        "Setup UI": [
          "Create High Level Components With Layout",
          "Add Theme Constants",
          "Add Logo View Details",
          "Add Result View",
          "Add Amount View",
          "Add Bill Input View Details",
          "Add Header View Details",
          "Add Tip Input View Details",
          "Add Split Input View Details",
          "Clean Up Views"
        ],
        "Setup View Model": [
          "Add View Model",
          "Observe Bill Input View",
          "Observe Tip Input View",
          "Handle Custom Tip Button",
          "Handle Custom Tip Button Selection State",
          "Observe Split Input View",
          "Compute Result In View Model"
        ],
        "Integrate UI With ViewModel": [
          "Display Result In Result View",
          "Format Currency Values",
          "Add Tap Gestures",
          "Send Gesture Tap Publisher To VM",
          "Add Sound Effect On LogoView Tap",
          "Implement Calculator Reset"
        ],
        "Setup Unit Tests": [
          "Setup Unit Tests",
          "Add More Tests",
          "Test Logo View Double Tap",
          "Clean Up Test Code"
        ],
        "Setup Snapshot Tests": [
          "Add Image Snapshot Tests",
          "Add Snapshot Test With Custom Values"
        ],
        "Setup UI Tests": [
          "Add UI Tests",
          "Add All Identifiers",
          "Add All Screen Elements",
          "Test Regular Tip Flow",
          "Test Custom Tip Flow",
          "Closing"
        ],
        "Project files": [
          "Source code",
          "README"
        ]
      },
      "requirements": [
        "3 years iOS development experience (strictly, please)",
        "Professionals"
      ],
      "description": "Welcome to the iOS & Swift - MVVM, Combine, SnapKit, Snapshot/UI/Unit Tests course!\nIn this course, I share my learnings as a professional iOS developer with 6 years experience on the topics that are relevant to the industry today. The materials I've prepared are knowledge that I wish I knew as a 3 year old developer struggling with concepts like:\nProtocol orientated programming\nReactive programming\nMVVM architecture (why not MVC?)\nCoding views programatically with SnapKit (without Storyboards)\nWriting unit tests\nWriting Snapshot tests\nWriting UI tests\nIn this course, I explain and implement the above-mentioned concepts through a simple Tip Calculator application step by step. I start off by building the UI, then the ViewModel which house the business logic and finally implement the various tests to ensure that we preserve the integrity of our code.\nThese concepts are extremely important to a senior iOS developer because of the expectations and responsibilities placed on you by the various stakeholders in your company. As such, you need the SKILLS to\nDebug issues quickly\nUpkeep code coverage and testability to ensure CI passes\nSet an example to junior members in your team with high quality coding standards\nAvoid on-call nightmares (paper duty ringing non-stop)\nFix and stop adding new tech debts\nMaintain your sanity as your app grows over time\nSo this course targets developers who have been working for around 3 years who want to get to the next level. I am confident you will grow after completing this course.",
      "target_audience": [
        "Full time developers with at least 3 years of professional experience",
        "Again I reiterate - a least 3 years of professional experience or you won't be able to follow"
      ]
    },
    {
      "title": "Ionic Apps for WooCommerce: Build an eCommerce Mobile App",
      "url": "https://www.udemy.com/course/ionic-apps-for-woocommerce-build-an-ecommerce-mobile-app/",
      "bio": "Learn Ionic Framework and start building your own eCommerce app for Android and iOS using HTML, CSS and AngularJS.",
      "objectives": [
        "Create amazing mobile apps using Ionic",
        "Create apps that work on both Android and iOS",
        "Build eCommerce Apps",
        "Build Apps that use WooCommerce as a backend",
        "Write apps by using HTML and JS",
        "Write and understand AngularJS apps",
        "Build and deploy apps on Android"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction",
          "Tools and IDE Required"
        ],
        "Starting with Ionic and Cordova": [
          "Introduction to Ionic and Cordova",
          "Installing Ionic and Cordova",
          "Creating and Running an Ionic App",
          "Understanding Ionic Folders and Files"
        ],
        "Introduction to WooCommerce and WC API": [
          "WooCommerce and WC API",
          "What's coming"
        ],
        "Learning Ionic Framework Basics": [
          "Ionic Header and Footer",
          "Ionic Buttons and Icons (Ionicons)",
          "Ionic Lists",
          "Ionic Forms and Inputs",
          "Ionic with AngularJS and Controllers",
          "Ionic Lists Advanced",
          "Ion Refresher and Spinners",
          "Ion Infinite Scroll",
          "Ionic Loading and Ionic Modal"
        ],
        "Building WooIonic - The eCommerce App for WooCommerce": [
          "Building WooIonic",
          "Creating WooIonic App Structure",
          "Sliding Side Menu and Home",
          "Getting categories in Side Menu",
          "Creating the Home Template",
          "Creating Controllers.js file",
          "Creating the Browse Template",
          "Adding Pull Down to Refresh and Infinite Scroll",
          "Adding Add to Cart Functionality",
          "Showing Cart Products with Ionic Modal",
          "Adding Categories State to WooIonic",
          "Adding Category State to WooIonic",
          "Creating the Product Template - 1",
          "Creating the Product Template - 2",
          "Creating User Signup Template - 1",
          "Creating User Signup Template - 2",
          "Creating User Signup Template - 3"
        ],
        "Building WooIonic - Login and Checkout": [
          "Login Introduction and Plugins",
          "Creating Login State",
          "Showing and Hiding Menu Items",
          "Creating the Checkout State - 1",
          "Creating the Checkout State - 2",
          "Closing Words about WooIonic",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You just need a little bit of knowledge of HTML and JS",
        "All the tools used are free and explained in the lectures.",
        "Tools will be downloaded and configured during the course itself.",
        "You don't need to be an expert in any technology, just willing enough to create something amazing."
      ],
      "description": "This course is for everybody who wants to build amazing Android and iOS apps. In this course, you will learn all about Ionic Framework with AngularJS from scratch, which allows you to build amazing mobile apps with just HTML, CSS and JS.\nIn this course, we will start by learning about the world's most popular eCommerce platform, WooCommerce and how we can use WooCommerce with Ionic. We will then learn about Ionic Framework from scratch and then we will start building an eCommerce App using Ionic Framework knowledge that we have gathered during first half of the course.\nAll you need is a little bit of familiarity with HTML and JS. If you are a web developer and want to build mobile apps, Ionic will be your piece of cake. You will be able to write amazing apps that will work on both Android and iOS.\nFor every lecture there is a Github branch in the Repo created for this course so if you are stuck, you can always refer the branch, All the code is open source and you can create even more than taught. Sky is the limit.",
      "target_audience": [
        "Students wanting to step into the app market",
        "Eventerpreneurs with an idea but no knowledge of complex app development",
        "Professionals who want to expand their skill set and learn to develop apps.",
        "Web developers and designers who want to develop apps for their websites."
      ]
    },
    {
      "title": "Chatbots for Multiple Platforms with No Coding",
      "url": "https://www.udemy.com/course/chatbots-no-coding/",
      "bio": "UPDATED Oct, 2017: Build Chatbots for Facebook, Slack, Skype, KiK, Telegram and others. No coding needed.",
      "objectives": [
        "You will learn how to create chatbots for many different platforms without writing a single line of code.",
        "You will understand the power of chatbots in the entertainment, travel, work, and retail environment.",
        "You will be able to develop sophisticated chatbots that use buttons and AI to create great customer experiences.",
        "At the end you will be able to make chatbots that are able to perform many different operations.",
        "You will be able to deploy your chatbots to various different messanging services including Facebook Messenger, KiK, Slack, Telegram, Skype, and to Websites."
      ],
      "course_content": {
        "Introduction to Chatbots": [
          "Introduction",
          "Chatbot Examples"
        ],
        "Building a Chatbot in Gupshup.io": [
          "Update - Gupshup - New Bot System",
          "Introduction to Gupshup",
          "Gupshup Travel Bot Part 1",
          "Gupshup Improving the User Experience",
          "Gupshup Order an Uber",
          "Gupshup Helsinki Sights",
          "Gupshup Helsinki Weather",
          "Gupshup Publishing Your Bot"
        ],
        "Gobot Easy and Powerful Ready Made Chatbot Services": [
          "Gobot Introduction",
          "Get Gobot",
          "GoBot Site Example",
          "Gobot Parts of the System",
          "Gobot Make a bot Part 1",
          "Gobot Make a bot Part 2",
          "Gobot Publishing your Bot"
        ],
        "A Facebook Messenger Bot": [
          "Introducing Chatfuel",
          "Understanding A Chatfuel Bot - Test Bot",
          "Building Our Own Facebook Messenger Bot - A Retail Example part 1",
          "Catfuel and Images - Getting them right",
          "Chatfuel Product Gallery with More Information",
          "Chatfuel - Plugins - Adding an RSS feed with Subscription",
          "Chatfuel - Plugins - YouTube Integration",
          "Chatfuel - Collecting Uder Input via Email",
          "Chatfuel - Advanced Features",
          "Chatfuel - Work Around for Button Linking Problem",
          "Chatfuel - Add a Site Search - Bing or Google Search",
          "Chatfuel - Publish Your Bot - Two Options"
        ],
        "UPDATE - MiniApp Chatbot Building System": [
          "Introduction to MiniApp",
          "Connecting a MiniApps Bot to the Microsoft Bot Framework",
          "MiniApps Creating the Bot Interactions",
          "MiniApps Connecting your bot to Skype",
          "MiniApps Simple now but other options are possible",
          "MiniApps Conslusion"
        ],
        "Building a Chatbot in Motion.ai": [
          "Update - Motion.ai new accounts disabled - Update coming",
          "Looking at the Motion.ai Interface",
          "Motion.ai Interface Part 2"
        ],
        "Building Our First Bot - A travel bot": [
          "Part 1 - Setting up the Travel Bot",
          "Part 2 - Looking at The Connections",
          "Part 3 - Adding Buttons via HTML and Cards",
          "Part 4 - Adding Other Content with Widgets - Weather Example",
          "Part 5 - Connecting Your Bot to Another Bot - Uber Example",
          "Part 6 - Creating Multiple Cards - Travel Sights Bot",
          "Part 7 - Clean-up - Global Settings and Help"
        ],
        "Entertainment bot Example - The Bender Bot": [
          "Bender Bot Part 1 - Looking at how the bot works",
          "Bender Bot Part 2 - Advanced - Adding a new interaction",
          "Bender Bot Part 3 - Final connnections and things to think about with Motion.ai"
        ],
        "Thank You": [
          "Thank you and contacts"
        ]
      },
      "requirements": [
        "The tools we use are all web based. Nothing to download - Nothing to Install. If you have an Internet connection and a Web browser you are ready to go.",
        "The only recommendation is to have Google Chrome, as I have found it works the best for some of the tools - but it is NOT required."
      ],
      "description": "UPDATE: Two new bot building platforms have been added which allow for exciting new powerful bots to be built.  Both are free to use and require no coding experience.  Check them out and join the bot revolution.\n\nThis course will help you to gain the skills to use one of the fastest growing mobile technologies,  Chatbots.  Now you too can learn to build sophisticated Chatbots for your customers all with NO Coding.\nThis course is for those in Web design, marketing and graphics, who want to be able to offer their clients something new and exciting.\nI will cover Chatbots for Websites, for Facebook, for KiK, and for Slack - although the bots created can be used also on many other services.  I will show you examples of travel bots, entertainment bots, productivity bots, and retail bots.\nCome join us for what is a fun course to learn a technology with a lot of profit potential.",
      "target_audience": [
        "This course is for people who want to make great bots, but don't want to bother learning a lot of coding.",
        "This course is for all levels of students. I will show you step-by-step how to create the bots and use tools that are easy to understand and use.",
        "Chatbots are an emerging technology and one of the few in history that are starting without having to spend 100s of hours in learning to code. Yes, you really can make pro-level bots without coding!",
        "This is especially for graphical artists, Web designers, and marketing people who have a high level of creativity."
      ]
    },
    {
      "title": "Twitter iOS Clone | Swift 5/Firebase | No Storyboards | MVVM",
      "url": "https://www.udemy.com/course/twitter-ios-clone-swift/",
      "bio": "Build a fully programmatic Twitter Clone for iOS 13 using Swift 5, Firebase and MVVM Architecture",
      "objectives": [
        "Build a Twitter clone with iOS 13, Swift 5 & Firebase without the use of storyboards",
        "Use MVVM (Model-View-ViewModel) Framework",
        "Build a fully functioning social network",
        "Advanced backend development and architecture skills using Firebase",
        "Advanced auto-layout and programmatic UI skills with Swift",
        "Register and authenticate users using Firebase",
        "Advanced UI/UX development to build a clean and visually appearing user interface",
        "Build a custom slide up menu with custom actions",
        "Advanced UITableView and UICollectionView skills",
        "Advanced Swift techniques and architecture patterns",
        "Implement Hashtags & Mentions"
      ],
      "course_content": {
        "Building Main User Interface": [
          "Configure Project & Setup Root ViewController",
          "Setup Main Tab Bar Controller",
          "Setup Navigation Controllers",
          "Setup Navigation Bars",
          "Setting Up Sticky Action Button Programmatically |Intro to Auto-Layout",
          "Where To Get The Completed Source Code (that includes additional features)",
          "Button Custom Color & Action Handler"
        ],
        "Login/Signup UI": [
          "Getting Started With Login UI",
          "Creating Input Container View",
          "Refactoring Input Container View For Reusability",
          "Finishing Login UI",
          "Registration UI",
          "Selecting Profile Image"
        ],
        "Getting Started With Firebase": [
          "Setup Firebase",
          "Authenticate User",
          "Upload User Data",
          "Upload User Profile Image",
          "Refactor API Code Into Service Class",
          "Root ViewController Setup & Keeping User Logged In",
          "Logging A User In",
          "Update UI After Authentication"
        ],
        "Fetching User Data From Firebase": [
          "Fetch User Data From Firebase",
          "Create Custom User Object (Model)",
          "SDWebImage Install & Passing User To FeedController",
          "Load User Profile Image"
        ],
        "Sending Tweets": [
          "Upload Tweet Controller Setup",
          "Continue With UI Setup",
          "Adding Caption TextView",
          "Uploading Tweet To Firebase"
        ],
        "Loading Tweets In Feed": [
          "Fetch Tweets From Firebase & Create Tweet Object",
          "Setup CollectionView For Feed",
          "TweetCell UI",
          "Populate Feed With Tweets",
          "Populate Each Cell With Tweet",
          "Fetching User For Tweet",
          "Tweet View Model",
          "Tweet Timestamp"
        ],
        "User Profile": [
          "Showing Profile Controller",
          "Profile CollectionView Setup",
          "Profile Header UI",
          "Profile Header Filter Bar",
          "Filter Bar Selection Animation",
          "Profile Filters Data Model",
          "Profile Header View Model",
          "Dismissing User Profile",
          "User Tweet Database Structure",
          "Fetching User Tweets",
          "Populating Header With User Data"
        ],
        "Following, Unfollowing & Searching Users": [
          "Search Page UI",
          "Fetching & Displaying Users",
          "Search For Users",
          "Following User",
          "Unfollow User",
          "Check If User Is Followed In Database",
          "Bug Fix",
          "Updating User Follower/Following Stats"
        ],
        "Tweet Replies": [
          "Tweet Display Controller Setup",
          "Tweet Header UI",
          "Action Button Setup",
          "Populating Tweet Header",
          "Dynamic Cell Sizing & Bug Fix",
          "Getting Started With Replies",
          "Use ViewModel To Populate Data",
          "Uploading Reply To Firebase",
          "Fetching & Displaying Replies"
        ],
        "Custom Action Sheet": [
          "Getting Started",
          "Setting Up Table View",
          "Animating Table View / Fade View",
          "Action Sheet Cell & Cancel Button",
          "Action Sheet Data Model + View Model",
          "Check If User Is Followed & Tap Handler",
          "Finishing Up With Tap Handler"
        ]
      },
      "requirements": [
        "You should have a Mac computer"
      ],
      "description": "What are we building?\nIn this course, you will learn how to build a complete version of Twitter ready to be published on the App Store. Throughout the process, you will develop high level programming, app design and app development skills.  We will be building this without the use of storyboards, fully programmatically.\nPrior Experience?\nSome programming and basic Xcode experience is preferred. The course will move a little fast if you're a complete beginner, but you will pick things up along the way.\nWhy take this course?\nLearning advanced development skills should be taught using real world examples. This course will teach you how to build a fully functional social network, from complete scratch. You will be learning advanced front and backend development skills, from a real life professional developer. You will learn how to code like a pro, and everything will be explained in detail along the way. This will teach you to build production ready applications, that are easily scalable and maintainable. This also makes for a great project to add to your portfolio, which you can use to show off to potential employers if you're trying to become a pro.\n\n\nWhat will you learn?\nComprehensive knowledge and understanding of Swift 5 & Xcode 11\nImplement Model View ViewModel (MVVM) architecture\nAdvanced level programming and app development skills\nAdvanced level User Interface Design\nAdvanced level back end engineering\nHow to authenticate and register users with Firebase\nHow to communicate with a database (read/write)\nHow to monitor events in a database\nHow to upload images to Firebase\nHow to structure data for optimum performance\nHow to build a fully functioning social network\nHow to programmatically construct views and controllers\nHow to parse incoming JSON data from database\nHow to use CocoaTouch classes, UIKit, UserNotifications and more\nHow to use CocoaPods and custom third party APIs\nHow to implement/use protocols\nHow to implement custom subclasses for clean and reusable code\nHow to dynamically size collection view cells\nHow to create extensions and functions for clean and reusable code",
      "target_audience": [
        "Beginners with some programming & Xcode experience"
      ]
    },
    {
      "title": "iOS 11 & Swift 4: From Beginner to Paid Professional™",
      "url": "https://www.udemy.com/course/devslopes-ios11/",
      "bio": "Build iOS Apps & Learn iOS 11, Swift 4, ARKit (Augmented Reality), CoreML (Machine Learning)",
      "objectives": [
        "Build iOS 11 & Swift 4 apps",
        "Work as an iOS contractor",
        "Apply to jr. iOS development jobs",
        "Submit iOS apps to the Apple App Store"
      ],
      "course_content": {
        "Getting Started With Xcode 9 & iOS 11": [
          "iOS 11 Course Overview",
          "Install Xcode 9",
          "Xcode 9 Beta 4 Update",
          "App: Hustle - Your first iOS 11 App"
        ],
        "Learn to Code With Swift 4": [
          "Variables, operators, and how computers work",
          "Source Code",
          "Strings in Swift",
          "Working with numbers in Swift",
          "Swift functions",
          "Booleans & conditional logic in Swift",
          "Constants & logical operators in Swift",
          "Array data structure in Swift",
          "Swift loops",
          "Dictionary data structure in Swift",
          "Object oriented programming in Swift",
          "Inheritance & OOP in Swift",
          "Polymorphism & OOP in Swift",
          "Optionals",
          "Enumerations",
          "Extensions: Part 1",
          "Extensions: Part 2",
          "Intro to Protocols/Delegates - Numbers Example",
          "Intro to Protocols/Delegates Part 2 - Question Generator",
          "Protocols/Delegates - Building Color Magic App UI",
          "Protocols/Delegates - Using the Delegate Method in Color Magic App",
          "Protocols/Delegates - Using Mutating Functions in Types",
          "Swift 4 Quiz",
          "Dev Tip: How to retain knowledge"
        ],
        "Version Control With Git": [
          "Git & version control - the fun way!",
          "Terminal Basics - Changing directories",
          "Terminal Basics - Creating directories & files",
          "Terminal Basics - Copying & renaming files",
          "Terminal Basics - Deleting files & directories",
          "Git Basics",
          "Setting up Github",
          "Working with Local & Remote Repositories",
          "Handling Git Merge Conflicts",
          "Dev Tip: Focus on today"
        ],
        "Core iOS 11: Auto Layout, Segues, and Professional Apps": [
          "App: Swoosh 01 - Creating the welcome screen",
          "App: Swoosh 02 - Working with frames",
          "App: Swoosh 03 - Intro to auto layout (support multiple screen sizes)",
          "App: Swoosh 04 - Working with stack views",
          "App: Swoosh 05 - Intro to segues (changing screens)",
          "App: Swoosh 06 - Refactoring in Xcode 9",
          "App: Swoosh 07 - Debugging: setValue forUndefinedKey",
          "App: Swoosh 08 - Programmatic segues",
          "App: Swoosh 09 - IBActions (handling events) & data models",
          "App: Swoosh 10 - Passing data between view controllers",
          "App: Dev Profile 01 - Auto layout for iPhones",
          "App: Dev Profile 02 - Auto layout for iPads (size classes)",
          "App: Window Shopper 01 - Custom text fields",
          "App: Window Shopper 02 - Input accessory views & IBDesignable",
          "App: Window Shopper 03 - Unit testing our data",
          "App: Window Shopper 04 - Calculation algorithm",
          "App: Window Shopper 05 - Custom drawing with drawRect",
          "Dev Tip: Don't ever do this one thing"
        ],
        "iOS 11 Tables & Data": [
          "App: Coder Swag 01 - Project creation & IBOutlets",
          "App: Coder Swag 02 - Tableviews, delegate, and data source",
          "App: Coder Swag 03 - Collection views (grid layouts)",
          "App: Coder Swag 04 - Working with data models",
          "App: Coder Swag 05 - Displaying data in collection view cells",
          "Dev Tip: How to not get discouraged learning to code"
        ],
        "Networking, APIs, REST, and Building a Slack Clone": [
          "Intro to Chat App",
          "App: Smack - Project Setup",
          "App: Smack - SWReveal",
          "App: Smack - ChannelVC UI",
          "App: Smack - LoginVC UI",
          "App: Smack - CreateAccountVC UI",
          "App: Smack - Web request and API",
          "App: Smack - Hosting API",
          "App: Smack - Locally Hosting API",
          "App: Smack - Creating a web request in Xcode",
          "App: Smack - Registering a User",
          "App: Smack - Logging in a user",
          "App: Smack - Creating a user",
          "App: Smack - Avatar Picker Part 1",
          "App: Smack - Avatar Picker Part 2",
          "App: Smack - Generate a Avatar BG Color",
          "App: Smack - LoggedIn Interface",
          "App: Smack - Profile View",
          "App: Smack - Logging in users",
          "App: Smack - Getting channels",
          "App: Smack - Channels TableView",
          "App: Smack - Add Channel VC",
          "App: Smack - Sockets and Channels",
          "App: Smack - Refining Login Flow",
          "App: Smack - Fetching Messages",
          "App: Smack - Sending first message",
          "App: Smack - Displaying chat messages",
          "App: Smack - Sockets and Messages",
          "App: Smack - Typing Users",
          "App: Smack - Unread Channels",
          "Where to go from here",
          "I'm Back!",
          "Dev Tip: Depth over breadth"
        ],
        "Maps & GPS": [
          "Intro to App: Pixel City",
          "Creating Xcode Project: Pixel City",
          "Installing Alamofire / AlamofireImage Cocoapods",
          "Building MapVC UI /Conforming to MKMapViewDelegate /Setting Delegate of mapView",
          "Requesting Location Services in iOS 11 / Centering Map On User Location",
          "Adding UITapGestureRecognizer to Drop Custom Pins on MapView",
          "Setting a Custom Map Annotation Color",
          "Animating Photos View / Programmatically adding spinner and label subviews",
          "Adding UILabel for Pull Up View / Adding UICollectionView Programmatically",
          "Getting API Key from Flickr / Using Flickr API URL Format",
          "Using Alamofire to Download URLS",
          "Using Alamofire to Download Images / Cancelling All Sessions",
          "Setting Up UICollectionView / Adding Images / Reloading UICollectionView",
          "Building PopVC / Presenting PopVC When UICollectionViewCell is Tapped",
          "Adding 3D Touch Peek & Pop to UICollectionView",
          "Challenge",
          "Dev Tip: Put yourself out there"
        ],
        "iOS 11 In App Purchases & Google Ads (Admob)": [
          "Setting up developer & iTunes accounts",
          "Implementing Google AdMob",
          "Fetching a list of products",
          "Starting an in-app purchase",
          "Testing in-app purchases",
          "Restoring in-app purchases after app deletion",
          "Dev Tip: How to create a successful app"
        ],
        "Intro to Core Data": [
          "Intro to App: GoalPost",
          "Creating Xcode Project / Project Folders",
          "Building GoalsVC",
          "Building GoalCell",
          "What is Core Data?",
          "Creating Goal Core Data Entity & Attributes",
          "Displaying Static GoalCells in UITableView / Creating GoalType Enum",
          "Building CreateGoalVC",
          "Creating a UIViewController Extension",
          "Creating a UIView / UIButton Extension",
          "Building FinishGoalVC / Passing Data from CreateGoalVC",
          "Saving Goal Data to Persistent Store",
          "Fixing Dismissal of FinishGoalVC",
          "Fetching Data from Persistent Store / Filling UITableView with Fetched Data",
          "Removing Objects from Persistent Store using UITableView Delete Action",
          "Setting Goal Progress for UITableViewCell",
          "Challenge"
        ],
        "Full Stack Development With Firebase": [
          "Intro to App: Breakpoint",
          "Creating Xcode Project / Setting Up Project Folders",
          "Creating Firebase Project",
          "Setting Up DataService / Creating Firebase Database Users",
          "Building AuthVC and LoginVC in Interface Builder",
          "Creating InsetTextField and ShadowView Subclasses",
          "Setting up AuthService",
          "Building FeedVC and GroupsVC in Interface Builder",
          "Presenting LoginVC from AppDelegate / Allowing Login with Email",
          "Building MeVC and Adding to UITabBarController",
          "Creating CreatePostVC and Uploading Posts to Firebase",
          "Creating UIView Extension for Binding Views to Keyboard",
          "Building FeedCell",
          "Writing the Message Model and Getting All Feed Messages from Firebase",
          "Converting UIDs into Emails and Reversing the Order of a TableView",
          "Creating CreateGroupVC and Connecting @IBOutlets/Actions",
          "Creating UserCell",
          "Searching for Email Accounts to Add to Group",
          "Adding Users to Group with didSelectRowAt indexPath",
          "Creating Groups and pushing them to Firebase",
          "Creating GroupCell",
          "Creating Group Model and Getting All Groups from Firebase",
          "Building GroupFeedVC",
          "Initializing Group Data for a Group and Presenting on GroupFeedVC",
          "Downloading All Message for a Group and Animating Upon New Message",
          "Creating a UIViewController Extension for Presenting GroupFeedVC",
          "Challenge",
          "Dev Tip: Make A Schedule"
        ]
      },
      "requirements": [
        "Must have a computer with OSX or macOS on it"
      ],
      "description": "Welcome to the world's most comprehensive course on iOS development. This course is designed like an in-person coding bootcamp to give you the most amount of content and help with the least amount of cost.\nNO PRIOR CODING EXPERIENCE REQUIRED\nHere are some of the things you'll be able to do after taking this course:\nSubmit apps to the app store\nUnderstand programming & basic algorithms\nWork fluently with Swift 4 & iOS 11\nApply to jr iOS development jobs\nWork as an iOS contractor\nWho this course is for:\nPeople who want to build apps!\nThose who want to create their own startup\nThose looking to get a full time job as a developer\nBusiness owners\nStudents & teenagers\nPeople who want to make money building apps\nIf you are absolutely new to programming you should start at the beginning of the course and go to the end.\nI've designed this course to take you down a guided learning path. Lectures are not broken out by specific topics. You build apps and then learn a ton of principles within those apps. So don't skip around!\nIf you already know Swift then you can skip the Swift section since the changes between Swift 3 and Swift 4 are minor.\nIf you've never programmed before, make sure you DO take the Swift lessons. We'll teach you core foundational principles so you can build complex apps.\nIf you are a student of iOS 10: From Beginner to Paid Professional then feel free to start taking this iOS 11 course.\nKeep in mind that this iOS 11 course has a bunch of new apps. So there is a HUGE benefit to ALSO go through the iOS 10 course - or you'll miss out on awesome content.\nDon't forget to join the free live community where you can get free help anytime from other students.\nHere are a few things you'll learn:\nSwift 4\nXcode 9\nInterface Builder\nFirebase\nBuild a Slack Clone\nMaps & GPS\nCore Data\nARKit & Augmented Reality\nCoreML & Machine Learning\nTables & Data\nAPIs, HTTP, and Networking\nApp Design\nStoryboards & Segues\nAnd a lot more...",
      "target_audience": [
        "If you are an absolute beginner to coding take this course",
        "If you are an absolute beginner to iOS or mobile development then take this course"
      ]
    },
    {
      "title": "Multi-Modular Ecommerce App for Android & iOS (KMP)",
      "url": "https://www.udemy.com/course/multi-modular-ecommerce-app-for-android-ios-kmp/",
      "bio": "From Figma to KMP: Design & Build an E-Commerce App for Android & iOS using Firebase SDK & Compose Multiplatform.",
      "objectives": [
        "Build an Ecommerce App for Android & iOS",
        "Share the UI Layer using Compose Multiplatform framework",
        "From Figma to Jetpack Compose (UI Design process)",
        "Multi-modular Architecture for Scalable Apps",
        "Shopping Cart feature to allow Users to add Products",
        "Automated Emails when a New Order is created",
        "Admin Panel",
        "Pay on Delivery feature",
        "Pay with PayPal integration",
        "Kotlin Multiplatform technology",
        "Firebase KMP SDK",
        "Firebase Firestore (+ Security rules)",
        "Firebase Authentication",
        "Firebase Storage",
        "Firebase Cloud Functions",
        "Firebase Cloud Messaging",
        "Push Notifications",
        "CRUD operations",
        "and more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Is this course for you?",
          "Project Design Overview",
          "Project Architecture Overview",
          "Why Firebase?"
        ],
        "Introduction to Figma": [
          "Getting Started with Figma",
          "Essential Design Tools & Techniques",
          "Variables and Tokens",
          "Styles",
          "Auto Layout",
          "Components and Variants"
        ],
        "Let's Design our NutriSport App!": [
          "Clone my Design Project",
          "Choosing Font, Colors & Icons",
          "Design inspirations",
          "Authentication Screen",
          "BottomBar Component",
          "Spacing Principles in UI Design",
          "Secondary ProductCard Component",
          "Main ProductCard Component",
          "TopAppBar Component",
          "Shopping Cart Screen",
          "Empty Cart State",
          "Categories Screen",
          "Category Search Screen",
          "Empty Category Search State",
          "Button Component",
          "Details Screen",
          "Custom Navigation Drawer",
          "Profile Screen",
          "Dialog component",
          "Admin Panel Screen",
          "Add New Product",
          "Edit Product",
          "Checkout Screen",
          "Payment Processed Screen (Paypal)"
        ],
        "Project Setup": [
          "Project Source Code",
          "Development Environment requirements",
          "Dependencies",
          "Firebase Setup",
          "Splash Screen on Android",
          "Splash Screen on iOS",
          "Fonts, Colors and Resources"
        ],
        "Authentication": [
          "Authentication Screen",
          "Sign in with Google implementation"
        ],
        "Navigation": [
          "Navigation Setup"
        ],
        "Dependency Injection": [
          "DI Setup",
          "Create a Customer"
        ],
        "Nested Bottom Bar Navigation": [
          "Remember Authenticated state",
          "Bottom Bar component",
          "Nested Navigation"
        ],
        "Custom Navigation Drawer": [
          "Update System Bars",
          "Custom Drawer component",
          "Animate CustomDrawer & HomeGraph",
          "Sign out the User"
        ],
        "Profile Screen": [
          "Custom TextField component",
          "Alert TextFIeld component",
          "Primary Button component",
          "Profile Form",
          "Country Picker Dialog component",
          "Country Picker implementation",
          "Read the Customer information",
          "Test the iOS App",
          "Update a Customer information",
          "Info Card component"
        ]
      },
      "requirements": [
        "Knowledge of Jetpack Compose framework",
        "Knowledge of Kotlin programming language",
        "Knowledge of Android Development"
      ],
      "description": "From Figma Design project, to the actual Android and iOS application.\n\n\nWe're gonna build a complete E-commerce solution from scratch, and I mean truly from scratch. Together, we'll design the UI in Figma, and then bring that design to life using Jetpack Compose — for both Android and iOS — using Kotlin Multiplatform.\n\n\nWhat’s Inside?\nWe’ll follow a clean, multi-modular architecture with the MVVM pattern to keep the project scalable, maintainable, and production-ready.\n\n\nOur app will be a food supplements store, featuring products from multiple categories. And yes — we’re building for real-world usage.\n\n\nKey Features\nUser Authentication – Sign in with Google using Firebase Auth.\nShopping Cart – Users can browse, select, and add products to their cart. Some products include customizable options like flavors.\nCheckout & Payments – We’ll implement two payment options:\n- Pay on Delivery\n- Pay with PayPal — and I’ll show you how to integrate the PayPal API to handle transactions securely.\nEmail Order Confirmation – Once an order is placed, an automated email is sent with all the order details: product info, total price, payment method, and shipping details.\nAdmin Panel – A secure area accessible only to store owners where you can add, update, or delete products.\n\n\nBackend with Firebase\nWe’ll use a full suite of Firebase services:\nAuthentication – Sign in with Google.\nCloud Firestore – As our main database, with security rules.\nFirebase Storage – For storing product images.\nCloud Functions – To automate email notifications.\nCloud Messaging – For push notifications.\n\n\n30 Hours of Practical Content\nThis course packs nearly 30 hours of high-quality, real-world development. I didn’t cut out the bugs, issues, or debugging moments — you'll see everything, so you can learn how to handle real development challenges.\n\n\nWho is this course for?\nThis is not a beginner-level course. You should already be familiar with Kotlin and Jetpack Compose. If you're just starting out, I’d recommend learning the basics first.\n\n\nBut if you're ready to take your skills to the next level and build a cross-platform, real-world E-commerce app using KMP, this course is packed with value and practical knowledge.\n\n\n\n\nLet's build something great!",
      "target_audience": [
        "Kotlin programmers",
        "Mobile developers",
        "Android developers",
        "iOS developers",
        "Anyone who wants to build real Startup ideas",
        "Anyone who wants to improve their Tech-Stack",
        "Anyone interested in KMP Technology"
      ]
    },
    {
      "title": "React Native Expo from Beginner to Pro :: Also with MeteorJS",
      "url": "https://www.udemy.com/course/react-native-expo-from-beginner-to-pro-also-with-meteorjs/",
      "bio": "New to programming? Want to create awesome apps? This is the perfect course for you.",
      "objectives": [
        "Build React Native Apps for iOS and Android",
        "Have a basic understanding of React and React Native",
        "Connect a MeteorJS server to a React Native app",
        "Use Expo components",
        "Use Native Base components"
      ],
      "course_content": {
        "Introduction": [
          "Promo Video",
          "Completed Code",
          "First App!"
        ],
        "Todo App": [
          "Important Installations",
          "Getting Expo Ready",
          "Explaining React",
          "Building our first React component",
          "First styles object",
          "Adding React Native components",
          "Using the React state",
          "Displaying the state",
          "Rendering a list to the screen",
          "Using arrays with the state",
          "Removing items from an array in state",
          "Adding styles to our app",
          "Material colors and more styling",
          "Finish styling and wrapping up"
        ],
        "PokeSearch": [
          "Using expo to start our next project",
          "Putting an image in the assets folder",
          "Adding first styles and handling platform compatibility",
          "Installing native-base for easy styles",
          "Setting up the landing page",
          "Making a second component",
          "Making a simple router with state",
          "Creating our search header",
          "Dividing up components",
          "Adding a loading gif",
          "Making an API call with axios",
          "Capturing the data from the API",
          "Displaying some data on screen",
          "Displaying more data on screen",
          "Displaying even more data on screen",
          "Finishing up PokeSearch"
        ],
        "PokeMap": [
          "New app and installing Meteor",
          "Setting up our project",
          "Firing up our server",
          "Understanding Meteor and installing packages",
          "Making a new component",
          "Making the sign in screen look nice",
          "Getting input for email on screen",
          "Adding in a password field and button",
          "Styling the sign in some more",
          "Securing our server and adding packages",
          "Fixing the bcrypt error",
          "Adding in our first Meteor function",
          "Looking at the Meteor object and connecting to the server",
          "We \"fixed\" the \"glitch\"",
          "IMPORTANT :: Changing localhost",
          "Making a user",
          "Handling the user sign in",
          "Setting up the imports for the map component",
          "Exploring AirBnB maps and adding our own",
          "Styling our map",
          "Adding FABs and creating a state",
          "Getting the location of the map center",
          "Adding a database of pokemon images",
          "Starting a server function to add pokemon",
          "Finishing a server function to add pokemon",
          "Meteor data for the app",
          "Subscribing to data on the app",
          "Displaying and adding pokemon to the map",
          "Adding ability to remove pokemon",
          "Front side account handling and wrapping up"
        ]
      },
      "requirements": [
        "You should have some programming experience. Skills with HTML, CSS, and JS are helpful."
      ],
      "description": "This course is perfect for anyone who wants to learn how to program apps easily with React Native Expo. Expo is the hottest new expansion to the world of React Native programming. It gives you plenty of new tools to quickly get your app started and it is incredibly easy to use. Whether you have little experience with programming or you are a seasoned React Native developer looking to understand Expo, this course will help you learn a lot!\nWe cover:\nInstalling and using the Expo XDE\nThe basics of React and React Native\nHow to make API requests to a database with axios\nHow to build a MeteorJS server and connect it to our app\nBuild a Mongo Database with Meteor and hook up accounts to log into\nAnd so much more!",
      "target_audience": [
        "Anyone who wants to make apps now!",
        "People interested in rudimentary React Native and Expo learning.",
        "Anyone who wants to mix React Native with Meteor."
      ]
    },
    {
      "title": "iOS 10 and Xcode 8 - Complete Swift 3 & Objective-C Course",
      "url": "https://www.udemy.com/course/ios-10-xcode-8/",
      "bio": "A Complete iOS 10 and Xcode 8 Course with Swift 3 & Objective-C",
      "objectives": [
        "Full understanding of Xcode 8 and all it has to offer",
        "Learn how to program for IOS 10 to create your own apps",
        "Create fully featured games",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS 10 development",
        "Develop in Objective-C and Swift 3",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic Xcode": [
          "Xcode Introduction",
          "Downloading & Installing Xcode 8",
          "Navigating Xcode",
          "Using iOS Simulators",
          "Creating Actions and Outlets",
          "Building My First iOS Application",
          "Auto Layout"
        ],
        "Learning Swift 3": [
          "Swift 3 Introduction",
          "Swift 3 Playground",
          "Swift 3 Working with Variables",
          "Swift 3 Working with Arrays",
          "Swift 3 Working with If, Else & Or Statements",
          "Swift 3 While Loops",
          "Swift 3 For Loops",
          "Learning Swift 3 Quiz"
        ],
        "Swift 3 Functions": [
          "Functions Introduction",
          "Displaying Text",
          "Dismissing the Keyboard",
          "Changing the Text Properties",
          "Displaying External Custom Fonts",
          "Using NSTimers",
          "Display the Time and Date",
          "iOS 10 APP: Traffic Lights Part 1",
          "iOS 10 App: Traffic Lights Part 2",
          "Fading Objects",
          "Hiding Objects",
          "Enabling and Disabling Objects",
          "iOS 10 App: Tap Me Fast Part 1",
          "iOS 10 App: Tap Me Fast Part 2",
          "Creating a Random Number Generator",
          "Creating a Random Word Generator",
          "iOS 10 App: Random Facts",
          "Swift 3 Functions Quiz"
        ],
        "Swift 3 Actions": [
          "Actions introduction",
          "UISwitches",
          "UISegmentedControls",
          "iOS 10 App: Digital Clock",
          "UISliders",
          "iOS 10 App: Temperature Calculator Part 1",
          "iOS 10 App: Temperature Calculator Part 2",
          "UIActionSheets",
          "Shake Gestures",
          "iOS 10 App: Shake Me Silly Part 1",
          "iOS 10 App: Shake Me Silly Part 2",
          "URL Links",
          "Using Delayed Actions",
          "iOS 10 App: Calculator Application",
          "Swipe Gestures",
          "iOS 10 App: Simon Says Part 1",
          "iOS 10 App: Simon Says Part 2",
          "Swift 3 Actions Quiz"
        ],
        "Swift 3 Views": [
          "Views Introduction",
          "Controlling UIScrollViews",
          "Using UIViews",
          "Displaying UIAlertViews",
          "Using UIStackViews",
          "Switching Views in Storyboards",
          "Switching to a XIB View",
          "Removing The Status Bar",
          "iOS 10 App: Web View Application Part 1",
          "iOS 10 App: Activity Indicator Part 2",
          "iOS 10 App: Web View Search Bar Part 3",
          "iOS 10 App: Map View Application Part 1",
          "iOS 10 App: Map View Pins Part 2",
          "iOS 10 App: Map View Locations Part 3",
          "iOS 10 App: Map View Directions Part 4",
          "Swift 3 Views Quiz"
        ],
        "Swift 3 Visuals": [
          "Visuals Introduction",
          "Displaying Images",
          "Retina Images",
          "Changing Image Gallery",
          "Adding Images To Buttons",
          "Displaying Images From URL'S",
          "iOS 10 App: Snap Attack Part 1",
          "iOS 10 App: Snap Attack Part 2",
          "Displaying PDF'S",
          "Background Colours",
          "Playing Animations",
          "Adding Object Styling",
          "iOS 10 App: Image Gallery Collection View Part 1",
          "iOS 10 App: Image Gallery Collection View Part 2",
          "Creating App Icons",
          "Adding App Icons",
          "Universal Launch Screen",
          "Adding Loading Screens/Launch Images",
          "Swift 3 Visuals Quiz"
        ],
        "Swift 3 Drawing Application": [
          "Drawing Introduction",
          "iOS 10 App: Doodle Bug - Drawing on the Screen Part 1",
          "iOS 10 App: Doodle Bug - Preset Colours and Erase Part 2",
          "iOS 10 App: Doodle Bug - Creating a Settings View Part 3",
          "iOS 10 App: Doodle Bug - Changing the Brush Size Part 4",
          "iOS 10 App: Doodle Bug - Adding Opacity Options Part 5",
          "iOS 10 App: Doodle Bug - Saving the Artwork Part 6",
          "Swift 3 Drawing Application Quiz"
        ],
        "Sticker Pack Application": [
          "Sticker Pack Introduction",
          "iOS 10 App: Creating Stickers Part 1",
          "iOS 10 App: Adding Stickers to the Application Part 2"
        ],
        "Swift 3 Audio & Video": [
          "Audio & Video Introduction",
          "Playing a Sound File",
          "Adding Volume Controls",
          "iOS 10 App: Soundboard Application",
          "Playing a Local Video File",
          "Streaming a Video File",
          "Streaming Youtube Videos",
          "Vibrating The Device"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 8"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad iOS 10 Apps but are not sure where to start or even begin? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is the perfect course for you!\nThis iOS 10 and Xcode 8 - Complete Swift 3 & Objective-C Guide will give you everything your need to start your new career in IOS 10 development, The course has been structured to support Swift 3 and Objective-C, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nCreate Over 20 Real iOS 10 Applications throughout the course from fun and simple games to powerful utility apps using the native features of IOS 10 devices to help you understand the process of creating applications within Swift 3 and Objective-C.\nCreate Sticker Pack Applications One of the many new features in iOS 10 create your own iMessage extensions and sticker pack applications.\nSell Your App to Millions of Users and earn extra revenue from Ad networks, Making money has never been so easy!\nNot only do you get the best online IOS 10 development course online but you also get first class responsive support by email, Twitter or on the forums, So you can rest assure you have full guidance in your new career!\nWhy Choose This iOS 10 & Xcode 8 Course?\nMany programmers learning to create there first iOS 10 application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This iOS 10 & Xcode 8 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 8 and to offer any advice needed and before you know if you will have created your first iOS 10 app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode 8, iOS 10, Interface Builder, Simulator and Project Types\nLanguage basics and building blocks\nSwift 3: Get to know the new updated language\nObjective-C: Full guide to creating full featured apps\nCreate over 20 real iOS 10 applications in both languages\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nPlaying and Streaming Video Support\nFull Featured iOS 10 Apps\nEarning Revenue Ad Networks\nIn App Purchases\nFun and Simple iOS 10 Games\nCore Data Applications\nCamera Support Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS 10 Apps",
        "Anyone looking for a new career"
      ]
    },
    {
      "title": "iOS 12 & Swift 5 - App Design, UI/UX plus Development",
      "url": "https://www.udemy.com/course/app-design-uiux-plus-ios-development/",
      "bio": "The three-in-one course that teaches app design, UI/UX and iOS development. Includes Sketch and Figma.",
      "objectives": [
        "Design app assets, icons and logos from scratch.",
        "Design wireframes, mockups and prototypes.",
        "Build aesthetic, clean and beautiful iOS apps that stand out on the app store.",
        "Apply animation and motion based design to bring interactivity to your app.",
        "Become an all-in-one UI/UX designer and iOS developer.",
        "Understand the thinking and principles behind great user experience and app design.",
        "Create custom controls that supercharge your UI.",
        "Learn how to build custom UI components and never rely on overused libraries."
      ],
      "course_content": {
        "Course Roadmap": [
          "[OPTIONAL] Course Roadmap"
        ],
        "-----------------PART 1: App Design and UI/UX--------------": [
          "Welcome to App Design and UI/UX",
          "Design Inspiration"
        ],
        "Sketch Basics": [
          "Why Sketch",
          "Understanding the Sketch Interface: Part 1",
          "Boolean Operations",
          "Getting Apple Design Resources",
          "Understanding the Sketch Interface: Part 2",
          "Challenge"
        ],
        "App Asset and Icon Design": [
          "Creating a Settings Icon",
          "Creating a Home Icon",
          "Flattening Icons",
          "Creating an Add Icon",
          "Making Icons Pixel Perfect",
          "Rulers and Grids",
          "Creating a Profile Icon",
          "Creating a Friends Icon",
          "Creating a Refresh Icon",
          "Symbols",
          "Artboards",
          "Points and Pixels - The Reason We Need @2x and @3x Icons",
          "Challenge"
        ],
        "Foundational Design Principles": [
          "UI vs UX Design: What is the Difference?",
          "Design Methods",
          "iOS Design Themes and Principles",
          "Choosing a Color Scheme: Part 1",
          "Choosing a Color Scheme: Part 2",
          "iOS Color Systems: Understanding RGBA, HSB, HEX, CYMK and GrayScale",
          "The Importance of Color Spaces and Gamut",
          "Typography",
          "How to Install a Custom Font in XCode",
          "Challenge"
        ],
        "App Logo Design and The Vector Tool": [
          "Introducing the Vector Tool",
          "[OPTIONAL] The Origins of the Bezier Curve",
          "Vector Tool Practice",
          "Creating a Weather App Logo",
          "Importing our App Logo into Xcode",
          "Challenge"
        ],
        "Low Fidelity Wireframing (Lo-Fi)": [
          "Introduction to Wireframes and Mockups",
          "Planning the Wireframe",
          "Planning the Screens",
          "The Home Screen Wireframe",
          "Symbolising the Tab Bar",
          "The Friends Screen Wireframe",
          "The Profile Screen Wireframe",
          "Challenge"
        ],
        "High Fidelity Wireframing (Hi-Fi) and Atomic Design": [
          "Atomic Design and Colour Palette",
          "Story Post Atomic UI - Part 1",
          "Creating the Heart Icon",
          "Story Post Atomic UI - Part 2",
          "Creating the GPS Icon",
          "Story Post Atomic UI - Part 3",
          "The Home Screen Wireframe",
          "The Friends Screen Wireframe",
          "Friends Post Atomic UI",
          "The Profile Screen Wireframe",
          "Challenge"
        ],
        "Mockups": [
          "Mockup Design Strategy",
          "Home Screen Mockup Part 1",
          "Home Screen Mockup Part 2",
          "Friends Screen Mockup",
          "Profile Screen Mockup",
          "Challenge"
        ],
        "Foundational User Experience (UX) Principles": [
          "A Practical Understanding of User Experience",
          "The 4 Key Elements of User Experience",
          "Iteration and the App Design Process",
          "The 5 Stages of the Design Thinking Process",
          "5 Essential UX Design Patterns",
          "Challenge"
        ]
      },
      "requirements": [
        "No previous coding or design knowledge is needed.",
        "An Apple MacBook laptop or iMac.",
        "Sketch (optional). If you can't get Sketch we use Figma as an alternative because it's free."
      ],
      "description": "Welcome to the course that will take you from app design to code. This is a three-in-one course aimed at helping you master app design, UI/UX and iOS app development from absolute beginner to advanced professional.\nThe top iOS apps clearly set themselves apart from all the rest with amazing user interfaces and modern user experience design. We see them featured on the iOS App Store and as winners of Apple's Design Awards. This simply means that app design and UI/UX are key factors for successful apps. But surprisingly, traditional iOS courses only go as far as teaching you how to build apps with nothing on app design and UI/UX. This course is different in that it goes well beyond just teaching you how to code.This course includes app design and UI/UX to help you build the kind of apps that stand out on the App Store.\nWe will cover how to use app design tools like Sketch and Figma to create app assets, icons, logos, wireframes, mockups and prototypes. We will learn essential UI/UX principles such as usability testing, user journey mapping, motion design, micro-interactions, typography and much more. We will also master iOS development to bring our app design to code and build over 20 different apps along the way.\nWhat kind of improvements to your app can you expect by the end of this course? A recent study by Forrester Research concluded a well designed user interface could raise conversion rates by up to 200% and a better UX design could raise conversion rates up to 400%. Clearly, learning app design and UI/UX is well worth the effort. It just might be what makes or breaks your app.\nThis course is perfect for app designers who would like to learn how to code and app developers who would like to learn how to design. If you are an absolute beginner in both design and code you are still in the right place. This course starts by assuming you have never designed or coded before and builds up at a comfortable pace before getting into more advanced topics.\nThe trick to really mastering design or code is practice and this course recognises that. All our app designs will be created from scratch and our apps will be coded line by line without any help from libraries. Plus, there are dozens of quizzes and challenges to reinforce everything we learn. For more enthusiastic learners, there are further reading topics and bonus articles to help you go beyond this course's main curriculum.\nAll the tools we use in this course are free. Sketch is the only exception to this because Sketch requires a paid license to use. If you cannot afford Sketch then that's no problem! This course includes Figma as an alternative to Sketch and Figma is free. We will cover the same topics in Figma as we do Sketch so there's nothing you will miss. If you are feeling like taking on an extra challenge, you are more than welcome to master both Sketch and Figma!\nI certainly hope to see you around in this course where we have quite the journey ahead of us. Let's get started with mastering app design, UI/UX and iOS development!",
      "target_audience": [
        "iOS developers who would like to learn how to both design and code.",
        "Graphic or UI/UX designers who would like to learn how to bring their app designs to code.",
        "iOS developers looking to learn how to design great looking apps that also deliver incredible user experience."
      ]
    },
    {
      "title": "Programmatic Uber Clone App |Swift /Firebase| No Storyboards",
      "url": "https://www.udemy.com/course/programmatic-uber-clone-swift-firebase-no-storyboards/",
      "bio": "Build a fully programmatic Uber Clone with iOS 13 and the latest versions of Swift & Firebase, without storyboards!",
      "objectives": [
        "Build a fully functioning clone of the Uber App using Swift 5.0 and Firebase",
        "Fully programmatic approach without the use of storyboards",
        "Geolocation capability using GeoFire",
        "Advanced backend development and architecture skills using Firebase",
        "Advanced UI techniques using Swift",
        "Advanced CoreLocation and MapKit techniques",
        "Advanced animations for a premium user experience",
        "Build a side menu and user profile",
        "Build an App that has different user types with different flows",
        "Build a settings page",
        "Ability to log in/out and register users",
        "Trigger events in application between users in realtime"
      ],
      "course_content": {
        "Introduction": [
          "Project Setup",
          "Programmatic Intro To UI",
          "Setting Up Reusable Function For Constraints",
          "Getting Started With Login UI",
          "Code Refactor & Continuing Login UI",
          "Finishing Login UI & UIColor Extension For Custom Colors",
          "Configure Navigation Controller & Show Registration Controller",
          "Registration UI"
        ],
        "Setup Firebase, Create Users & Setup Map": [
          "Firebase Setup",
          "Creating Users",
          "Log User In",
          "Setup Main View Controller",
          "Keep User Logged In & Setup Main Controller After Login / Sign Up"
        ],
        "Setup User Location Services": [
          "Requesting User Location",
          "Display User Location On Map"
        ],
        "Location Input User Interface": [
          "Location Input Activation View UI",
          "Location Input Activation View Delegate",
          "Location Input View UI & Dismissal",
          "Location Input View UI Wrap Up",
          "Setup Locations TableView",
          "Animating TableView Presentation & Dismissal",
          "Location TableView Cell + Sections"
        ],
        "Fetching User Data With Firebase": [
          "Fetching User Data",
          "Set Fullname Label With User Info",
          "Create Custom User Object"
        ],
        "Displaying Nearby Drivers On Map": [
          "Register Driver & Upload Location To Database",
          "Fetching Nearby Drivers From Database",
          "Display Driver On Map",
          "Render Custom Driver Annotation",
          "Update Driver Position In Real Time"
        ],
        "Search & Display Locations": [
          "Log In / Sign Up Bug Fix",
          "Searching For Locations",
          "Populating Cells With Location Data & Custom MKPlacemark Extension",
          "Selecting & Displaying Location On Map",
          "Configure Action Button For Side Menu / Dismissal",
          "Removing Annotation & Code Refactor",
          "Adding/Removing Route To Destination",
          "Zoom To Fit Relevant Annotations"
        ],
        "Ride Action View Setup": [
          "User Interface Setup",
          "Animating View To Show/Hide",
          "Configure Destination Data",
          "Zoom To FIt Annotations"
        ],
        "Requesting Rides, Creating Custom Trip Object & Driver Side of App": [
          "Requesting A Ride",
          "Creating Custom Trip Object",
          "Setting Up Driver Side Of App"
        ],
        "Fetching & Accepting Trips": [
          "Fetching & Observing Trips As A Driver",
          "Pickup Controller UI",
          "Adding Pickup Annotation To Map",
          "Accepting A Trip"
        ]
      },
      "requirements": [
        "Have some knowledge of Xcode and Swift"
      ],
      "description": "Fully Programmatic Uber Clone | Swift 5 | Firebase | No Storyboards | iOS 13\n\nWelcome! In this course you will learn how to build a fully functioning clone of the famous Uber application. We will be building this app from the ground up, fully programmatically without the use of storyboards.\nIn addition, we will be using Firebase for our backend database, which we will engineer completely from scratch. Along the way, you will learn all kinds of advanced programming techniques, best practices, professional architecture, and more!\n*BASIC KNOWLEDGE OF SWIFT AND XCODE IS ASSUMED\nWHY TAKE THIS COURSE?\nLearning advanced development skills should be taught using real world examples. In this course you're going to learn to code from a real life, professional developer. You will learn how to code like a pro, and everything will be explained in detail along the way. This will teach you to build production ready applications, that are easily scalable and maintainable.\nHere are some of the things you'll be able to do after taking this course:\nUnderstand advanced Firebase backend development\nWork fluently with iOS & Firebase\nApply to jr iOS development jobs\nWork as an iOS contractor\nWho this course is for:\nPeople who want to build advanced iOS apps!\nThose who want to create their own startup\nThose looking to get a full time job as a developer\nBusiness owners\nStudents & teenagers\nPeople who want to make money building apps\nWHAT YOU WILL LEARN:\nMajor focus on user experience, using advanced animations and a clean UI\nEngineering a database from scratch using Firebase\nIntegration Cocoa Pods\nCustom CocoaTouch View Subclasses\nUIView extensions\nUIViewController extensions\nCreating a sliding menu\nCreating a settings page\nSearching for locations\nDisplaying locations on map\nFirebase sign in and authentication\nLocation Services & Geolocation\nSaving and showing real time driver annotations on the map\nUsing Firebase for real time user requests\nMapViews\nAnd much more!\n\nWho this course is for:\nIf you have basic experience with iOS development take this course\nIf you have basic experience with iOS or mobile development then take this course",
      "target_audience": [
        "Mobile app developers looking to improve their skills and build an awesome app!"
      ]
    },
    {
      "title": "Build Real World Vehicle Selling App with Xamarin Forms",
      "url": "https://www.udemy.com/course/build-real-world-app-with-xamarin-forms-5/",
      "bio": "Learn Xamarin Forms Real World Application From Beginning to End",
      "objectives": [
        "Be able to build any app you want in xamarin forms",
        "Work as a freelance xamarin forms developer",
        "Create your first xamarin forms real world application",
        "Build fully-fledged apps for your startup or business",
        "Consume Restful api's",
        "Upload Images to the Server"
      ],
      "course_content": {
        "Overview": [
          "Introduction",
          "App Demo",
          "Course Structure"
        ],
        "Api Deployment to Azure": [
          "Get Application Backend",
          "Create Microsoft Azure Account",
          "Create Azure Web App",
          "Create Azure MSSQL Database",
          "Publish Web Api"
        ],
        "Test Api's": [
          "Load Endpoints in Postman",
          "Testing Accounts Endpoints : Register , Login , Edit User Profile",
          "Testing Accounts Endpoints : Change Password , Edit Phone , Get User Image",
          "Testing Categories Endpoints",
          "Testing Vehicles and Images Endpoints",
          "Testing Vehicles : My Ads Endpoint",
          "Hot and New Ads Endpoint"
        ],
        "Getting Started with Xamarin Forms": [
          "Create Blank Project",
          "Debug Xamarin Forms Application"
        ],
        "FFImage Loading": [
          "Why we need FFImage Loading ?",
          "Integrate FFImage Loading",
          "Implement FFImage Loading"
        ],
        "Xamarin Essentials : Preferences": [
          "Xamarin Essentials Preferences",
          "Store value in Preferences",
          "Retrieve value from preferences"
        ],
        "Assets For Android & IOS": [
          "How to get assets ?"
        ],
        "Create Model Classes": [
          "Model Classes For Accounts",
          "Model Classes For Categories and Images",
          "Model Classes For Vehicles"
        ],
        "Create Service Layer": [
          "Register User",
          "Static Method and Classes",
          "Login",
          "Change Password",
          "Edit Phone Number",
          "Edit User Profile",
          "Get User Profile Image",
          "Get Categories",
          "AddImage",
          "Get Vehicle Details",
          "Get Vehicles By Category",
          "Search Vehicle",
          "Add Vehicle",
          "Get Hot & New Ads",
          "Get My Ads"
        ],
        "Signup Page": [
          "SignupPage Design",
          "Implement Signup Functionality"
        ]
      },
      "requirements": [
        "You should be familiar with C# and Xamarin Forms. Because knowledge of C# and Xamarin is must for this course.",
        "At least 3-6 months experience with Xamarin Forms and XAML",
        "Visual Studio 2017 Or 2019 with windows Or Mac Edition whatever suits you.",
        "Postman Api Testing Tool",
        "Microsoft Azure Account (If you want to publish your rest api's over the internet)"
      ],
      "description": "Welcome to the Real World App Development course with Xamarin Forms.\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of real world application in Xamarin Forms. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in Xamarin Forms.\n\nThis courses teaches you how to code using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a real world application with xamarin forms.\nConsume Restful Api's.\nUpload Images to the Server.\nConsume Nuget's in xamarin forms.\nCreate a Complete Real World Application in Xamarin Forms From Scratch to End.\nHow to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nMake application user friendly.\n\n\nRemember...\nAfter this course you'll get all the Xamarin Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you. In this course I've used my personal Azure Account and I'll not give the access to the Azure Account. However if you want to test the api's then you'll need your own Microsoft Azure Account. Also inside this course I'll show you how you can publish your web api's to Microsoft Azure and preview your data inside Microsoft Azure.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the Complete Real World App Development Course with Xamarin Forms.",
      "target_audience": [
        "If you've a 3 to 6 months xamarin forms experience , then take this course.",
        "If you are an intermediate xamarin forms developer, then take this course to get up to speed quickly with xamarin forms and native app development.",
        "If you are a pro xamarin developer and want to learn more advanced concepts with quick pace then take this course.",
        "If you're are already familiar with Xamarin Forms , C# , XAML then take this course."
      ]
    },
    {
      "title": "iOS 10 & Objective-C - Complete Developer Course",
      "url": "https://www.udemy.com/course/objective-c-ios10/",
      "bio": "A Complete iOS 10 and Xcode 8 Course with Objective-C",
      "objectives": [
        "Full understanding of Xcode 8 and all it has to offer",
        "Learn how to program for IOS 10 to create your own apps",
        "Create fully featured games",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS 10 development",
        "Develop in Objective-C",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {},
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 8"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad iOS 10 Apps but are not sure where to start or even begin? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is the perfect course for you!\nThis iOS 10 & Objective-C - Complete Developer Course will give you everything your need to start your new career in IOS 10 development, The course has been structured to support Objective-C, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nCreate Over 20 Real iOS 10 Applications throughout the course from fun and simple games to powerful utility apps using the native features of IOS 10 devices to help you understand the process of creating applications within Objective-C.\nCreate Sticker Pack Applications One of the many new features in iOS 10 create your own iMessage extensions and sticker pack applications.\nSell Your App to Millions of Users and earn extra revenue from Ad networks, Making money has never been so easy!\nNot only do you get the best online IOS 10 development course online but you also get first class responsive support by email, Twitter or on the forums, So you can rest assure you have full guidance in your new career!\nWhy Choose This iOS 10 & Objective-C Course?\nMany programmers learning to create there first iOS 10 application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This iOS 10 & Objective-C course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 8 and to offer any advice needed and before you know if you will have created your first iOS 10 app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode 8, iOS 10, Interface Builder, Simulator and Project Types\nLanguage basics and building blocks\nObjective-C: Full guide to creating full featured apps\nCreate over 20 real iOS 10 applications in both languages\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nPlaying and Streaming Video Support\nFull Featured iOS 10 Apps\nEarning Revenue Ad Networks\nIn App Purchases\nFun and Simple iOS 10 Games\nCore Data Applications\nCamera Support Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS 10 Apps",
        "Anyone looking for a new career"
      ]
    },
    {
      "title": "Test Driven Development in iOS Using Swift",
      "url": "https://www.udemy.com/course/test-driven-development-in-ios-using-swift/",
      "bio": "Covers: Unit Tests, UI Tests, Mocking, Code Coverage and End to End Testing",
      "objectives": [
        "Learn the benefits and the reasoning behind writing tests",
        "Implementing unit tests for the core domain model",
        "Writing tests for the user interface",
        "Understanding mocking and benefits of mocking",
        "Implementing domain driven design"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Resource: MVVM Design Pattern",
          "Exercise Files"
        ],
        "Understanding Test Driven Development": [
          "What is TDD?",
          "Why should you use TDD?",
          "What you should test and what you should not?",
          "When should you use TDD?",
          "Common misconceptions about TDD?",
          "Rules of writing good test"
        ],
        "Tip Calculator - Writing Your First Unit Test": [
          "Understanding the App",
          "Setting Up Unit Test Project",
          "Implementing Test to Calculate Tip",
          "Writing Test to Check for Thrown Exceptions",
          "Integrating TipCalculator to the SwiftUI App"
        ],
        "Tip Calculator - Writing UI Tests": [
          "Setting Up User Interface Test Project in Xcode",
          "Writing Unit Testing When Content View is Shown",
          "Refactoring Tests",
          "Writing UI Tests For Calculating Tip",
          "Writing UI Tests for Invalid Input for Total",
          "Implementing PageObject Pattern"
        ],
        "Recording User Interface Tests and Code Coverage": [
          "How to Record a UI Test Using the Recording Tool?",
          "What is Code Coverage?",
          "Code Coverage Demo"
        ],
        "Mocking": [
          "What is Mocking?",
          "Understanding the Starter Project",
          "Writing Test to Validate Required Fields",
          "Writing Test Confirm User Navigation to Dashboard Upon Authentication",
          "Implementing MockedWebService",
          "Writing Test to Display Message for Invalid Credentials",
          "Implementing PageObjects Design Pattern"
        ],
        "Todo App - End to End Testing": [
          "Tour of the App",
          "Resource: Core Data Debug Tag",
          "Writing Test to Save Task to Database",
          "Deleting App Before Running Each Test Using Springboard",
          "Writing Test to Check Duplicate Task Titles are Not Allowed",
          "Writing Test to Make Sure Task is Deleted Successfully",
          "Writing Test to Make Sure Updating Task Favorite Works as Expected"
        ],
        "Quiz App - Unit Testing the Domain": [
          "Architecture Overview",
          "Understanding Starter Project and Quiz Stories",
          "Writing Test to Make Sure Quiz Points are Calculated Correctly",
          "Writing Test to Grade Exam Based on Score",
          "Write Test to Grade Exam Based on User's Submission"
        ],
        "Quiz App - User Interface Testing": [
          "Writing Test to Display Available List of Quizzes",
          "Writing Test to Navigate to Questions Screen",
          "Writing Test to Make Sure Error Message is Displayed When No Choices Selected",
          "Writing Test to Display Grade for the User"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Intermediate knowledge of Swift language is recommended",
        "Knowledge of SwiftUI framework is recommended",
        "Xcode 13.X or above",
        "Familiarity with the MVVM Design Pattern"
      ],
      "description": "As a software developer you must always aspire to write quality code. You must also make sure that any future code you write does not break existing features. Test Driven Development provides you with a great way to implement software. It provides a safety net, which allows you to make changes with confidence. In this course, you will learn how to apply the principles of test driven development in iOS using Swift language.\n\n\nLet’s check out the contents of the course:\n\n\nUnderstanding Test Driven Development\nIn this section you will learn about the concepts behind Test Driven Development. You will learn why testing is important, when to write unit tests and even misconceptions behind testing in software development.\n\n\nTypes of Testing\nIn this section you will learn about types of testing. You will learn the differences between unit testing, user interface testing, integration testing, acceptance testing and performance testing.\n\n\nWriting Your First Unit Test\nIn this section you will learn how to write your first unit test. We will implement a simple Tip Calculator and write your code using the principles of test driven development. You will learn how using test driven development allows you to architect your app.\n\n\nWriting UI Tests\nIn this section you will learn how to write user interface tests. You will learn how to automate your user interface and perform actions on the elements on the screen. You will also learn how to use the PageObject pattern to reuse elements from the screen.\n\n\nMocking\nIn this section you will learn the concept of mocking. You will learn how to create a mocked version of the login service, which will allow the user to continue with their tests without having a dependency on a real login service and network connection.\n\n\nEnd to End Testing\nIn this section you will learn how to perform end to end integration testing. You will learn how to invoke a real network service and make sure that all components of the app are working correctly together.\n\n\nProject Time - Quiz App\nFinally, you are going to put all your skills to test by implementing a Quiz App in SwiftUI using the principles of test driven development. You will start by testing the core domain and then move on to write user interface tests.\n\n\nWho is this course for?\nDevelopers interested in learning about writing great software based on the principles of test driven development.\nDevelopers interested in learning about the application domain using unit tests.\nDevelopers who want to educate themselves on how to architect an application using test driven development.\nDevelopers who want to take their skills to the next level\n\n\nI had so much fun in creating this course and I really hope you enjoy it too.\nThanks and let’s start coding!",
      "target_audience": [
        "Developers interested in learning about writing tests",
        "Developers who wants to implement unit tests for the core domain model",
        "Developers who wants to learn how to write user interface tests",
        "Developers who wants to learn how mocking works and benefits of mocking"
      ]
    },
    {
      "title": "Build a WhatsApp Chat App clone for Android Jetpack Compose",
      "url": "https://www.udemy.com/course/whatsapp/",
      "bio": "Create your own chat app using Jetpack compose, Firebase, MVVM, Hilt dependency injection, coroutines and more",
      "objectives": [
        "Build a WhatsApp like Chat Android App",
        "Learn Android for beginners",
        "Build a real world application",
        "Firebase Database, Storage and User Authentication",
        "Real Time communications"
      ],
      "course_content": {
        "Introduction": [
          "Course intro",
          "A quick word about Udemy reviews",
          "Course update notification",
          "Engage on social media",
          "gradle files",
          "Create project",
          "Firebase integration"
        ],
        "Navigation": [
          "Screen placeholders",
          "Navigation foundation",
          "Vector assets and navigation items",
          "Bottom navigation menu"
        ],
        "Hilt": [
          "Hilt"
        ],
        "Authentication": [
          "Signup screen code",
          "Signup screen UI",
          "Error handling",
          "Signup functionality",
          "User data type",
          "Create user in firestore",
          "Automatically sign in",
          "Login functionality",
          "Login screen code",
          "Login screen UI",
          "Logout functionality"
        ],
        "Profile screen": [
          "Profile screen code",
          "Profile screen UI part 1",
          "Profile screen UI part 2",
          "Profile screen functionaity",
          "Select and display image",
          "Upload and display image"
        ],
        "Chat screen": [
          "Chat data type",
          "Chat list screen code",
          "Chat list screen UI",
          "Add chat functionality",
          "Retrieve chats",
          "Update chat list screen UI",
          "Send message",
          "Single chat screen code",
          "Single chat screen UI",
          "Retrieve chat messages",
          "Display messages and live chat"
        ],
        "Status screen": [
          "Upload status functionality",
          "Status list screen code",
          "Status list screen UI",
          "Retrieve status functionality",
          "Update status list UI",
          "Single status screen code",
          "Single status screen"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Old - Introduction": [
          "Old course videos",
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media",
          "How to take this course",
          "Android Studio",
          "Install Android Studio on a Mac",
          "Install Android Studio on a PC"
        ],
        "Old - Project Setup": [
          "Project Setup",
          "Add code",
          "Main Screen Pager Layout",
          "Main Screen Pager Functionality",
          "Main Navigation",
          "Import Image Assets"
        ]
      },
      "requirements": [
        "PC or Mac",
        "Interest in app development",
        "Kotlin knowledge"
      ],
      "description": "Social media now has the largest user base ever.\nHave you ever thought of owning a chat app similar to WhatsApp, WeChat, Line or Telegram?\nNow you can\nThis course teaches you how to build a real world chat application. We will be coveting topics such as User Accounts, Profiles, Sending and Receiving messages, creating statuses and much more.\nI will show you step by step how to build the app from scratch. Previous development experience is useful, but not strictly necessary, as we will write every line of code together and I will explain what it does.\n\n\nMore features than any WhatsApp clone app out there.\nWe will build several Whatsapp features like:\nUser accounts with signup and login\nInitiate chats with contacts on your phone\nSend sms messages to users that aren't signed up\nUser profiles\nUser details screen and potential enhancements\nLive chat functionality\nLive status updates\n\n\nWe will also be learning about more advanced topics such as Firebase Firestore, Real time communication and Threading.\nIf you have a passion for building things and are interested in Chat apps, this course is for you.\nI will show you step by step how to build an Android app similar to WhatsApp, how to program it and what each step means. It's never been easier to have your own chat app.\n\n\nSign up today and start creating your own app.\nAnd who knows, you might even get a date out of this.\n\n\n30 day money back guarantee provided by Udemy\nHighly rated instructor with over 10.000 active students and growing monthly.\n\n\nStudent feedback:\n*****\n\"Great teacher! His courses brought me a lot bring me a lot of praise, thank you!\" - Eduard\n\n\n*****\n\"Yep, it is really WhatsApp clone course. Thank you Stefan for creating another wonderful and useful course. I highly recommend this course.\" - Cyrus",
      "target_audience": [
        "Beginner developers",
        "People with an interest in apps",
        "People who use Chat Apps"
      ]
    },
    {
      "title": "The Complete Xamarin Developer Course: iOS And Android!",
      "url": "https://www.udemy.com/course/complete-xamarin-developer-course-ios-and-android/",
      "bio": "Build Cross Platform Android and iOS apps with Xamarin Forms, Xamarin Classic, Azure Mobile App Services, Rest and more",
      "objectives": [
        "Create native Android and iOS apps that share up to 100% code",
        "Apply for junior mobile development positions (Android and iOS)",
        "Increased career options as a Multiplatform developer",
        "Learning Xamarin opens up opportunities to build Windows Desktop, Windows Store, Mac, and even smart watch apps that share the logic of your iOS and Android app"
      ],
      "course_content": {},
      "requirements": [
        "A Windows computer preferably with 8.1 or higher required for first part of the course (Xamarin Forms) or you can use Windows 7 or higher for the Xamarin classic part of the course.",
        "A Mac computer with OS X El Capitan (10.11) or higher if you want to use a Mac for Xamarin development.",
        "If you want to test iOS apps you need a Mac, however you can code and design them from Windows."
      ],
      "description": "So you've learnt some programming, but are struggling to get an interview, let alone a job.\n\nOr you are stuck in a low paying programming job, and want to move up to a better, more senior position.\nMaybe you have never programmed before, and are looking for a way to get into programming for the first time.\nBut, just how do you get employers to notice you?  How do you make your resume stand out of the crowd of programmers looking for work?\nBy learning to create cross platform applications targeting both iOS and Android from the one codebase, using Xamarin.\nWhat is Xamarin?\nXamarin is a Microsoft owned company, that allows developers, using a C#-shared codebase, to write native Android, iOS (and even Windows and MacOS) apps with native user interfaces and share code.\nThis means you can create an application once, and deploy it to both Android and iOS, both which run natively on the platform.  One codebase, two platforms.\nLearning to create apps with Xamarin makes you more valuable to your employer or clients as a result.\nWhat does Xamarin mean to you?\nYou can create native Android and iOS apps that share up to 100% code! No more writing separate versions of apps for both platforms.\nThis is especially useful for indie developers or small teams who may not have had the resources to target both platforms.  Now they can code once, and deploy to both platforms.\nOngoing maintenance costs are reduced because you have one code base!  It also means by learning one language (C#) you can now write apps for both platforms.\n\nThe Microsoft Visual Studio software package is available on Windows and Mac, and both are shown in the course.  You can use and deploy Xamarin whether you have a Windows machine or a Mac.\nXamarin creates native apps unlike most other cross platform tools, meaning the code you write and deploy from Xamarin is faster, and more efficient because it can target the inbuilt features of each platform.\nBecause Xamarin was recently purchased by Microsoft, you can be sure that it is getting the attention of small and large companies alike, meaning more opportunities are available for developers who have learnt and can use this technology to build apps (and you will learn to do that in this course).\nSome of the key Xamarin things you will learn and be able to put to use in your own apps after going through this course include Xamarin Forms, Xamarin Classic, Using Azure Mobile App Services, Consuming REST services, Implementing SQLite databases and using the MVVM pattern (very important to learn and understand).\nWhy enrolling in this course is the best decision you can make.\nMost other Xamarin courses only focus on Xamarin.Forms or Xamarin classic.  BOTH are covered in this course.  Also this course teaches you all about Azure Mobile App services (cloud database integration), which no other course teaches.\nYour instructor, Eduardo Rosas, is a certified Xamarin Mobile Developer with 3 years of experience using the platform, and 5 years of experience using C#. He started developing apps for Windows Phone 7 back in 2012, which, just like Windows 8 and Windows 10, use C# and XAML, and uses those two languages for building Xamarin.Forms apps.\nThis means you are learning from someone who has all the professional training, skills, and experience you need to teach you how to become proficient in Xamarin the right way, as fast as possible.\nIf you are ready to get that first paid programming job, or to move up to a more senior programming position, then this course is for you!\n\nAfter completing this course, you will have the necessary skills to be able to use Xamarin and create your own apps that target both iOS and Android.\n\nThe sooner you sign up for this course, the sooner you will have the skills and knowledge you need to increase your job or consulting opportunities.    Xamarin skills are in high demand, as are Azure Mobile App services, and you will understand and be able to use both after going through this course.\n\nYour new job or consulting opportunity awaits!\nWhy not get started today?\nClick the Signup button to sign up for the course!",
      "target_audience": [
        "Anybody who wants to learn how to code in Xamarin",
        "Some knowledge of programming is desirable, but not essential"
      ]
    },
    {
      "title": "iOS & Swift - The Complete iOS App Development Bootcamp",
      "url": "https://www.udemy.com/course/ios-13-app-development-bootcamp/",
      "bio": "From Beginner to iOS App Developer with Just One Course! Fully Updated with a Comprehensive Module Dedicated to SwiftUI!",
      "objectives": [
        "You will create a portfolio of 15 apps to be able apply for junior developer jobs at a technology company",
        "You will learn Xcode, UIKit and SwiftUI, ARKit, CoreML and CoreData.",
        "You will learn by doing, where every lesson is incorporated into a real-world app project.",
        "After the course, you will be able to build any app you want.",
        "Start your own app based business",
        "Become a digital nomad by working as a freelance iOS developer",
        "Master creating Augmented Reality apps using Apple’s new ARKit",
        "Create apps that use Machine Learning using Apple’s new CoreML",
        "Master app design so you'll know how to wireframe, mockup and prototype your app idea",
        "Master app marketing so you can publish your apps and generate downloads"
      ],
      "course_content": {
        "Getting Started with iOS Development and Swift 5": [
          "Intro to the Course. What's coming up?",
          "Download the Course Syllabus",
          "The Giant List of Resources",
          "How does an App Work?",
          "How to Make an App",
          "How to Get All the Free Stuff",
          "Download your Massive Bundle of Assets",
          "Download the 12 Rules to Learn to Code eBook PDF",
          "How to Make the Most of the Bootcamp",
          "How to Get Help When You're Stuck",
          "Can I use Windows to develop iOS apps? (and other FAQs)",
          "Developing for iOS - Tools and Materials",
          "Getting set up with Xcode",
          "Pathfinder"
        ],
        "Xcode Storyboards and Interface Builder": [
          "The I am Rich App",
          "A Note About the Next Lesson",
          "Let's Create a Brand New Xcode Project",
          "A Walkthrough of the Xcode Development Environment",
          "Let's Design the User Interface!",
          "Let's Incorporate Some Image Assets",
          "How to Design and Add an App Icon",
          "A Note About the Next Lesson",
          "Run Your App on Your iPhone or Simulator",
          "Join the Student Community",
          "How to Ace this Course"
        ],
        "Xcode Storyboard and Interface Builder Challenge": [
          "What You Will Create",
          "Step 1: Create a New Xcode Project",
          "Step 2: Add a Label Element from the Object Library",
          "Step 3: Add an Image View to the Storyboard",
          "Step 4: Add an App Icon",
          "Step 5: Run Your App",
          "Step 6: Show off your work!",
          "Tip from Angela - Habit Building with the Calendar Trick"
        ],
        "Swift Programming Basics - Collections, Constants & Variables": [
          "What You'll Make by the End of This Module",
          "Cloning from GitHub and How to Download the L.A.B. Project Stubs",
          "How to Design Your App",
          "Let's Link Our Design to Our Code",
          "Responding to User Interactions with IBActions",
          "Bug Hint ?Thread 1: signal SIGABRT and \"Not Key Value Coding Compliant\"",
          "[Swift Deep Dive] Naming Conventions, Commenting and String Interpolation",
          "Storing Data using Variables and Arrays",
          "[Swift Deep Dive] Variables",
          "[Coding Exercise] Variables",
          "[Swift Deep Dive] Arrays",
          "[Code Exercise] Arrays",
          "How to Randomise the Dice Images",
          "?How to Solve the Error: \"Maximum number of apps for free development reached\"",
          "[Swift Deep Dive] Constants, the Range Operator and Randomisation",
          "[Code Exercise] Constants",
          "[Code Exercise] Randomisation",
          "Download the Completed App Project",
          "Do You Want This?",
          "Tip from Angela - Dealing with Distractions"
        ],
        "Swift Programming Basics Challenge": [
          "What You Will Create",
          "Step 1: Clone the Starting Project",
          "Step 2: Design the User Interface",
          "Step 3: Link Up the Design with Code",
          "Step 4: Use Code to Change the 8 Ball Image",
          "Step 5: Make the Ball Image Random",
          "Step 6: Show off your work!",
          "Download the Completed Project",
          "Tip from Angela - Nothing Easy is Worth Doing!"
        ],
        "Auto Layout and Responsive UIs": [
          "Why do we need Auto Layout?",
          "Size Classes Explained",
          "Setting Constraints and working with the Safe Area",
          "How to use Alignment and Pinning",
          "Working with Containers and Subviews",
          "Stack Views",
          "Auto Layout (Optional) Boss Challenge",
          "Download the Completed Project",
          "Calculator Challenge Solution and Walkthrough",
          "Tip from Angela - How to Deal with Procrastination"
        ],
        "Using and Understanding Apple Documentation": [
          "What You'll Make by the End of this Module",
          "Setting up the Xylophone Project",
          "The 5 Step Approach to Solve Any Programming Problem",
          "[Swift Deep Dive] Functions and Scope",
          "[Coding Exercise] Functions Part 1",
          "Linking Multiple Buttons to the Same IBAction",
          "[Swift Deep Dive] Functions with Inputs and Type Inference",
          "[Coding Exercise] Functions Part 2",
          "Playing Different Xylophone Sounds",
          "Boss Challenge",
          "Download the Completed App Project",
          "Tip from Angela - Building a Programming Habit"
        ],
        "Intermediate Swift Programming - Control Flow and Optionals": [
          "What You'll Make by the End of this Module",
          "Setting up the Egg Timer Project and Linking the Storyboard and ViewController",
          "[Swift Deep Dive] If-Else Control Flow",
          "[Coding Exercise] IF/ELSE",
          "[Swift Deep Dive] Switch Statements",
          "[Coding Exercise] Switch",
          "Conditional Statements Challenge Solution",
          "[Swift Deep Dive] Dictionaries",
          "[Coding Exercise] Dictionaries",
          "[Swift Deep Dive] Defining and Unwrapping Optionals",
          "[Coding Exercise] Optionals",
          "Dictionary Challenge Solution",
          "Implementing a Countdown Timer Challenge",
          "Egg Timer Challenge Solution",
          "Showing the Timer to the User with a Progress View",
          "Calculating the Progress Percentage",
          "Using the 5 Step Approach to Debug our App",
          "Download the Completed App Project",
          "Tip from Angela - Set Your Expectations"
        ],
        "iOS App Design Patterns and Code Structuring": [
          "What You'll Make by the End of this Module",
          "Setting up the Quizzler Project and Showing the Questions",
          "Checking Answers using 2-Dimensional Arrays",
          "[Swift Deep Dive] Structures, Methods and Properties",
          "[Coding Exercise] Structures",
          "Creating a Question Struct",
          "Giving the User Feedback and working with a ProgressView",
          "Understand the MVC Design Pattern",
          "Implementing MVC and Understanding Parameter Names",
          "[Swift Deep Dive] Functions with Outputs and Return Types",
          "[Coding Exercise] Functions Part 3",
          "Refactoring to Implement the MVC Design Pattern",
          "[Swift Deep Dive] Immutability",
          "Using Mutating Functions to Track the Score",
          "Download the Completed App Project",
          "Tip from Angela - The 20 Minute Method"
        ],
        "iOS App Design Pattern Challenge": [
          "What You'll Create",
          "Step 1: Clone the Starting Project",
          "Step 2: Update the storyLabel and Button Titles",
          "Step 3: Create a Structure",
          "Step 4: Update the Story",
          "Step 5: Apply MVC",
          "Step 6: Make the StoryBrain more Scalable",
          "Step 7: Show off your Work!",
          "Download the Completed App Project",
          "Tip from Angela - Retrieval is How You Learn"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "A Mac computer running macOS 10.15 (Catalina) or a PC running macOS.",
        "No paid software required - all apps will be created in Xcode 11 (which is free to download)",
        "I'll walk you through, step-by-step how to get Xcode installed and set up"
      ],
      "description": "Welcome to the Complete iOS App Development Bootcamp. With over 39,000 5 star ratings and a 4.8 average my iOS course is the HIGHEST RATED iOS Course in the history of Udemy!\nAt 55+ hours, this iOS 13 course is the most comprehensive iOS development course online!\nThis Swift 5.1 course is based on our in-person app development bootcamp in London, where we've perfected the curriculum over 4 years of in-person teaching.\nOur complete app development bootcamp teaches you how to code using Swift 5.1 and build beautiful iOS 13 apps for iPhone and iPad. Even if you have ZERO programming experience.\nI'll take you step-by-step through engaging and fun video tutorials and teach you everything you need to know to succeed as an iOS app developer.\nThe course includes 55+ hours of HD video tutorials and builds your programming knowledge while making real world apps. e.g. Pokemon Go, Whatsapp, QuizUp and Yahoo Weather.\nThe curriculum has been completely revamped for iOS 13 and Xcode 11. Including comprehensive modules on Apple's latest technology - SwiftUI iOS, iPadOS and macOS app interface design, ARKit for making Augmented Reality apps as well as CoreML & CreateML for making intelligent apps with Machine Learning. You'll be building 3D augmented reality apps that look like Pokemon Go and Harry Potter's magical newspapers!\nBy the end of this course, you will be fluently programming in Swift 5.1 and be ready to make your own apps or start a freelancing job as an iOS 13 developer.\nYou'll also have a portfolio of over 25 apps that you can show off to any potential employer.\nSign up today, and look forwards to:\nOver 55 hours of HD 1080p video content, everything you'll ever need to succeed as a iOS developer.\n\nBuilding over 25 fully-fledged apps including ones that use machine learning and augmented reality\n\nAll the knowledge you need to start building any app you want\n\nA giant bundle of design assets\n\nOur best selling 12 Rules to Learn to Code eBook\n\n$8000+ app development bootcamp course materials and curriculum\n\nFrom Beginner to iOS 13 App Developer with Just One Course\nWe know that you're here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they're doing, you'd be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and the videos are fully up to date with the latest versions of Swift and Xcode.\nSo by the end of the course, you'll completely understand:\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, structures, classes and protocols.\n\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\n\nData Structures: How to work with collections, such as arrays and dictionaries.\n\nSoftware Design: How to organise and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern, Apple's favourite delegation pattern and the publisher pattern.\n\nNetworking: How to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\n\nPersistent Local Data Storage: How to use Core Data, Realm, Codable and User Defaults to store your app data locally.\n\nHow to Implement In-App Purchases with Apple StoreKit\n\nMachine Learning: How to make artificially intelligent apps and build your own machine learning models using iOS 13's new CoreML2 and CreateML frameworks.\n\nAugmented Reality: How to create 3D objects in augmented reality and create incredible 3D animations and real-life interactions using Apple's latest ARKit2 framework.\n\nSwiftUI: How to use Apple's brand new UI framework to create user interfaces programmatically that look good across all Apple products.\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos on YouTube. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it and why over 39,000 students rated it 5 stars!\nDon't waste your money\nInside this course, you're getting exactly the same course materials and curriculum as our 12 week in-person programming bootcamp. Instead of spending $8000 dollars and taking time off work, save loads of money by getting this course and do it at your own pace!\nDon't just take my word for it, see what my past students had to say about the course:\n\"You will not find a better teacher than Angela. She does a wonderful job of encouraging you to learn swift the right way. I want to encourage everyone thinking about taking this class to get it, as it is the BEST Swift programming class I've seen on anywhere and I've tried more than a few of them. If you are looking for an excellent swift programming course, stop there here because you have found it. You will learn Swift from the very beginning of programming all the way through making your own apps that you can upload to the App store.\" - Ian Hopjins\n\"SO GOOD!!! Retention rate is incredible because Angela does a great job in explaining and teaching every aspect of what we are doing. Most of the other instructors on Udemy put code on the screen and pretend nothing happened. This course is amazing! 5/5\" - Muhammad Ibrahim\n\"Angela is a spectacular teacher!\" - Marco Zanirato\n\"This course was terrific. Only after taking a few more courses from others that I realized how good this course was. This course taught me more than I was expecting, it provided great instructions and a lot of hands-on tasks to drill-in the concept.\" - Marc\n\"Best use of your money! I was a complete beginner but Angela made me a pro in weeks.\" - Burak Tunçbilek\n\"IT IS #1!!!!!!!!! Absolutely Amazing. The best iOS course i have ever taken. Angela explains everything the way it needs to be explained, so everything is easily understood. The concept of this course is built to make you learn, not just watch and repeat. Angela is highly educated and it is very much noticeable during the entire course. Again, it is fantastic. Thank you. Please create more courses!!!!!\" - Eduard Khachian\nAre you trying to choose between all the different iOS courses on Udemy? Take a look at what students on my course had to say about this:\nI have revamped my expectation for what a 5 star course should be for Udemy. Angela, you're awesome! I already rated the course as 5 stars early on (at about 20% completion), but after completing roughly 70% of the course, I can say this is my favourite Udemy course as of today. Brilliant course Angela! - Alberto L\n\"I took a lot of courses on Udemy and elsewhere and non of them were as clear and perfectly paced as this one! Angelas approach is really awesome, deep and clear.\" - Žan Fras\n\"I have taken several iOS courses, so far this course had the best explanation on swift and xcode documentation. The lecturer is kinda humorous sometimes which make this course even more enjoyable.\" - Bryan Pukanda\n\"I have taken lots of courses on udemy and elsewhere for self learning and i can tell you with all the honesty this is one course which i did not want it to end. It is like one of those movies that you wish keeps going. Whatever concepts are covered were covered very beautifully and made learning quite simple. I got so many answers to Why? in this course like how closures work and why they work that way... why delegates work that way. Thank you so much for this course.\" - Arun Lakhera\n\"I compare this to another top iOS class on Udemy, but I think that this one beats it. The reason? Angela doesn't show you a plethora of material and then say that we will discuss this later, or say \"just do this. You will see why later.\" She goes into the reason for doing something before doing it.\" - Clyde Addison\nDo you have some experience developing iOS apps and wonder if this course is for you? Take a look at what students on my course had to say about this:\n\"This is the best-organized course for starting Swift that I've seen. The course is excellent for teaching Swift programming including vital information using Xcode, Github, Cocoapods, Stack Overflow, Alamofire, Firebase, REST APIs and all the services commonly used by app developers. They show all the ways of using Xcode and other services that took me months to learn willy nilly. Wish I had this course a year ago but even with a year of Swift experience I still found a lot of great information and helpful tips. Love all the extras the course provides especially the assets(graphics, sound files, etc) for practice projects as I'm always taking too much time to find some assets to play with. This course understands how to teach programmers by giving them the toolsets and abilities they need to build apps. The course teaches the foundation of the language as well as skills to build your knowledge and improve your troubleshooting skills. Angela is a wonderful speaker and should do the voiceovers on everyone's instructional videos, seriously. :)\" - Marcy Vernon\n\"Def. an amazing and awesome class for learning iOS programming. I've been coding for years and taken many programming related classes on Udemy and this is def. one of the best. The instructor walks you through all the in's and out's of developing apps for the iOS platform. Top Shelf A++ class.\" - Mirko Cukich\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's most highly rated iOS 13 app development course.",
      "target_audience": [
        "If you are an absolute beginner to coding, then take this course.",
        "If you are a seasoned programmer, then take this course to to get up to speed quickly with Swift 5.1 and native app development. Start with the Xcode walkthrough lesson and we'll get you familiar with iOS development in no time!",
        "If you are switching from Objective-C to Swift then this is a fast-track way of doing it. You can get started straight away with the Intermediate Swift Language module.",
        "If you are a pro iOS developer and want to quickly get up to date with Apple's latest technology, then start with the modules on SwiftUI, ARKit and CoreML."
      ]
    },
    {
      "title": "iOS 9 & Swift 2 - Make 20 Applications",
      "url": "https://www.udemy.com/course/the-complete-ios-9-swift-20-guide-make-20-applications/",
      "bio": "A Complete Swift 2, Xcode 7 and iOS 9 Course.",
      "objectives": [
        "Full understanding of Xcode 7 and all it has to offer",
        "Learn how to program for IOS 9 to create your own apps",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS 9 development",
        "Develop in Swift 2",
        "Earn revenue from your apps"
      ],
      "course_content": {
        "Swift 2 Introduction": [
          "Swift 2 Introduction"
        ],
        "Getting To Grips With Swift 2": [
          "Section 1 introduction",
          "Purchasing a Developer Licence",
          "Download and Installing Xcode 7",
          "Create, Download and Install Certificates",
          "Creating an App ID",
          "Project Types, What's Best For Me?",
          "What are Classes, InfoPLists and Delegates?",
          "Using the Interface Builder",
          "Building on the IOS 9 Simulator",
          "Building to a Device",
          "Variables",
          "Arrays",
          "Functions",
          "Actions and Outlets",
          "App 1: Creating a Hello World Application",
          "Universal Constraints"
        ],
        "Understanding Swift 2 Functions": [
          "Section 2 introduction",
          "Displaying Text",
          "Dismissing The Keyboard",
          "Text Properties",
          "Custom Fonts",
          "NSTimers",
          "Display Time and Date",
          "If Statements",
          "App 2: Reaction Game",
          "Fading Objects",
          "Hiding Objects",
          "Enabling and Disabling Objects",
          "App 3: Tapping Game",
          "Random Number Generator",
          "Random Word Generator",
          "App 4: Joke Generator"
        ],
        "Creating Swift 2 Actions": [
          "Section 3 introduction",
          "UISwitches",
          "UISegmentedControls",
          "UISliders",
          "App 5: Temperature Calculator",
          "UIActionSheets",
          "Shake Gestures",
          "App 6: Shake Me Game",
          "URL Links",
          "Using Delayed Actions",
          "App 7: Calculator App"
        ],
        "Getting A Good View in Swift 2": [
          "Section 4 introduction",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Using UIWebViews",
          "Controlling UIWebviews",
          "Activity Indicator",
          "App 8: Browser Application",
          "Using UIMapViews",
          "Controlling UIMapViews & Displaying Location",
          "App 9: Maps Application",
          "Switching Views in Storyboards",
          "Switching to a XIB View",
          "Removing The Status Bar"
        ],
        "Making An App Look Good in Swift 2": [
          "Section 5 introduction",
          "Importing Files",
          "Displaying Images",
          "Displaying Retina Images",
          "Changing Images",
          "Adding Images To Buttons",
          "Displaying Images From URL'S",
          "App 10: Snap Game",
          "Displaying PDF'S",
          "Background Colours",
          "Animations",
          "Object Styling",
          "App 11: Image Gallery - Creating the Collection View Part 1",
          "App 11: Image Gallery - Displaying the Detailed Image Part 2",
          "Universal Launch Screen",
          "Adding Loading Screens/Launch Images",
          "Adding App Icons"
        ],
        "Coming In Loud And Clear in Swift 2": [
          "Section 6 Introduction",
          "Playing a Sound File",
          "Volume Slider",
          "App 12: Soundboard Application",
          "App 13: YouTube Videos",
          "Vibrating the Device"
        ],
        "Creating A Swift 2 Tab Bar Application": [
          "Section 7 introduction",
          "App 14: Tab Bar Application - Set Up Part 1",
          "App 14: Tab Bar Application - Customising Part 2"
        ],
        "Creating A Swift 2 Table View Application": [
          "Section 8 introduction",
          "App 15: Table View - Populating a Table View Part 1",
          "App 15: Table View - Pushing to a Detail View Part 2",
          "App 15: Table View - Populating a Detail View Part 3"
        ],
        "Core Data - Creating Swift 2 Databases": [
          "Section 9 introduction",
          "App 16: Database - Creating a Database Part 1",
          "App 16: Database - Adding Data Part 2",
          "App 16: Database - Editing Data Part 3",
          "App 16: Database - Deleting Data Part 4"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 7"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad Apps but are not sure where to start? Are you ready to jump right into the exciting world of Swift 2 mobile development but have little or no programming experience? Then this is your course!\nThis Complete IOS 9 Swift 2 Guide - Make 20 Applications will give you everything your need to start your new career in IOS 9 development using Xcode 7, The course has been structured to support Swift 2, Teaching you all you need to know from creating your first project in Xcode 7 to Submitting to the AppStore.\nCreate 20 Real Swift 2 Applications throughout the course from fun and simple games to powerfull utility apps using the native features of IOS 9 devices to help you understand the process of creating applications\nSell Your Swift 2 App to Millions of Potential Users and earn extra revenue from Ad networks, Making money has never been so easy!\nNot only do you get the best online Swift 2 IOS 9 development course for Xcode 7 but You also get first class responsive support by email, Twitter or on the Udemy forums, So you can rest assure you have full guidance in your new career!\nWhy Choose This Swift 2, iOS 9 & Xcode 7 Course?\nMany programmers learning to create there first Swift 2 application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This Swift 2, iOS 9 & Xcode 7 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 7 and to offer any advice needed and before you know if you will have created your first Swift 2 app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode 7, Interface Builder, Simulator and Project Types\nSwift 2: Get to know the new updated language\nCreate 20 real applications in Swift 2\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nFull Featured Swift 2 Apps\nEarning Revenue Ad Networks\nFun and Simple Swift 2 Games\nCore Data Applications\nCamera Support Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone looking to start iOS 9 development",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to make money from IOS 9 Apps",
        "Anyone who is looking to freshen up there skills"
      ]
    },
    {
      "title": "Android development tutorial for Beginners",
      "url": "https://www.udemy.com/course/complete-android-development-course/",
      "bio": "Android Course:Become an Android Developer & Make your own Apps",
      "objectives": [
        "They can build their own custom Apps and sell on google play store.",
        "Start a career in Android Development",
        "Become professional app Developer and can start a business of building APP for other companies",
        "With Android Development, they will get a FREE JAVA course too."
      ],
      "course_content": {
        "Outline of the course": [
          "Introduction",
          "Introduction about different views in Android",
          "Introduce yourself",
          "Time for our first quiz",
          "Quiz 2",
          "Update about the review",
          "Quiz Solution",
          "Introduction to Programming and Android Studio",
          "installing java",
          "Download Android Studio",
          "Create a new project in Android Studio",
          "Text View",
          "Valid XML syntax",
          "Quiz",
          "Quiz Solution",
          "What is Density Independent Pixels",
          "Quiz",
          "Quiz Solution",
          "Error and Android Resources",
          "Wrap Content",
          "Image View",
          "Image View:attribute to change the height and Width",
          "Recap of View and Style in our App",
          "View Group: Linear Layout",
          "Quiz on View Group",
          "View Group: Relative and Linear Layout",
          "Look at the code for Linear layout",
          "Orientation Attribute in Linear Layout",
          "How to change the Orientation in Linear Layout???",
          "Different options for layout_width and layout_height :wrap_content, match_parent",
          "android:layout_weight attribute in Linear Layout",
          "What does android:layout_weight mean ???"
        ],
        "Laying out Views in RelativeLayout programmatically": [
          "What is the use of Relative Layout in Android????",
          "Align TextView elements:layout_alignParentLeft ,layout_alignParerentRight",
          "How to allign TextView horizontal center using android:layout_centerHorizontal",
          "How can I assign an ID to a view programmatically via XML???",
          "Time for Practice: Relative layout Quiz",
          "Using attirbutes like layout_toRightOf , layout_toLeftOf in relativelayout"
        ],
        "Difference between a View's Padding and Margin": [
          "How to use margins and paddings in Android layout ?",
          "Android's padding and layout_margin attributes"
        ],
        "Building and Running your App from Android Studio": [
          "Run the app from Android Studio",
          "How to create a new Android Studio project ???",
          "Overview of our ORDER app for our Phone/Tablet",
          "What are different Views,View Group and Styles in our ORDER App??",
          "Solution for the Quiz",
          "How to add a textview and a button to linear layout programmatically via XML",
          "How to add button click event in android studio?",
          "Adding Price",
          "Main Activity class code",
          "Variable and Data type",
          "Crash App",
          "Increment and Decrement",
          "App Overview",
          "Nested View Group",
          "NestedView group",
          "String data type",
          "Android final app",
          "What is String Data type??",
          "What are methods, how to define and call methods in android??",
          "What is a class and Objects in Android??",
          "Common Android Views"
        ]
      },
      "requirements": [
        "ZERO programming knowledge required - I'll teach you everything you need to know",
        "A Windows PC, Mac or Linux Computer"
      ],
      "description": "Android Development for Beginners – Build Apps with Java & Android Studio\nLearn to Build Android Apps from Scratch and Launch Your Career in Just 6 Weeks\nAre you ready to turn your ideas into real Android apps? Maybe you’ve always dreamed of creating an app but didn’t know where to start. Or perhaps you’re looking for a career in Android Development that can open doors to high-paying jobs and even allow you to start your own app business on the side.\nThis course is designed to take you from absolute beginner to a confident Android Developer — even if you’ve never written a single line of code before.\nOver 5000 students have already enrolled and are now on their way to building and publishing Android apps. Now it’s your turn.\nWhy Android Development?\nAndroid powers the majority of smartphones across the world. From social media apps to banking solutions, millions of businesses and entrepreneurs rely on Android developers to bring their ideas to life.\nAndroid is the primary OS for more than 90 tablets, 6 e-Readers, and 300 smartphones.\nThe Google Play Store has over 1.4 million apps, and it’s growing every day.\nAround 1.5 million new Android devices are activated worldwide — every single day.\nLearning Android Development means opening the door to a future-proof, high-demand skill set that can change your career and unleash your creative potential.\nWhat You’ll Learn\nThis hands-on course will guide you step by step through:\nSection 1: Building Layouts\nWriting XML for Android apps\nUsing TextViews, ImageViews, and styling your views\nPositioning elements with LinearLayout and RelativeLayout\nSection 2: Making an App Interactive\nLearning Java while building the JustJava Coffee Ordering App\nHandling button clicks and user interaction\nDeclaring and using variables\nWorking with strings, integers, and layouts\nSection 3: Working with the Android Framework and Control Flow\nWriting and calling methods\nUnderstanding parameters and return values\nIntroduction to Object-Oriented Programming\nUsing if/else logic to control app behavior\nDynamically changing your app’s attributes\nBy the end, you’ll have a strong foundation in Java, Android Studio, and app development — plus your very own working apps.\nWhat Makes This Course Different?\nLearn by Doing: From the second lecture, you’ll be building apps — not just reading slides.\nBeginner-Friendly: Designed for students with zero programming background.\nReal Support: Access resources, developer forums, and instructor guidance when you’re stuck.\nLifetime Access: Revisit lessons, assignments, and projects anytime.\nQuizzes and Assignments: Reinforce your skills with practical exercises.\nThis course doesn’t just teach you concepts — it makes you a developer.\nWhy Learn From Me?\nI live and breathe Android. With over a decade of programming experience, five years of app development, and more than fifty published apps and games across Google Play and the Apple App Store, I know what it takes to succeed.\nMy mission is simple: to help you become an Android Developer in the shortest possible time, without skipping the fundamentals that matter.\nYour Future Starts Here\nIn just six weeks, you’ll go from zero programming knowledge to creating apps and even publishing them on the Google Play Store — reaching millions of potential users.\nYou don’t need to be a pro. You don’t need prior experience. All you need is curiosity, dedication, and the willingness to learn.\nEnroll today in Android Development for Beginners – Build Apps with Java & Android Studio and take the first step toward a rewarding career and the freedom to bring your ideas to life.",
      "target_audience": [
        "Anyone with no programming experience before and wanted to make Apps",
        "Anyone who wants to learn programming: JAVA is one of the best language to start with.",
        "Anyone who wants to make a career as Android developer.",
        "Anyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work is your key to a hugely powerful world"
      ]
    },
    {
      "title": "Instagram Firestore App Clone | Swift 5 + iOS 14 | MVVM",
      "url": "https://www.udemy.com/course/instagram-firestore-app-clone-swift-5-ios-14-mvvm/",
      "bio": "Build an Instagram iOS App Clone with Cloud Firestore, Swift 5, iOS 14 & No Storyboards",
      "objectives": [
        "Build an Instagram clone with iOS 14, Swift 5 & Firestore without the use of storyboards",
        "Modified MVVM Architecture",
        "Build a social network (Posts, Notifications, Following, Likes etc.)",
        "Engineer a backend using Cloud Firestore",
        "Advanced auto-layout and programmatic UI skills with Swift",
        "Register and authenticate users using Firebase",
        "Advanced UI/UX development to build a clean and visually appearing user interface",
        "Advanced Object Oriented Programming skills"
      ],
      "course_content": {
        "Project Setup & Getting Started With Main UI": [
          "Configure Project",
          "Setup Tabbed User Interface",
          "Finish Tab Bar Setup"
        ],
        "Creating Feed User Interface Programatically": [
          "Setting Up CollectionView Programmatically",
          "Feed Cell UI & Intro To Programmatic Constraints",
          "Finishing Up Feed Cell UI"
        ],
        "User Authentication UI & ViewModels": [
          "Login Page UI",
          "Creating Custom Subclasses for Reusability",
          "Registration Page UI",
          "Authentication View Model & Form Validation",
          "Finishing Form Validation",
          "Selecting Profile Photo"
        ],
        "Setting Up Firebase & User Authentication": [
          "Setting Up Firebase & CocoaPod Bug Fix",
          "Image Uploader & Authentication Service",
          "Register User In Firebase",
          "Root View Controller With Authentication"
        ],
        "User Profile UI": [
          "Setting Up Profile Collection View",
          "Finishing Up Profile UI"
        ],
        "Fetching & Displaying User Data From Firestore": [
          "Get User Data From Firestore & Create Data Model",
          "Profile Header View Model",
          "Update User After Authentication",
          "Search Controller UI",
          "Fetching & Displaying Users",
          "Searching For Users"
        ],
        "Following/Unfollowing Users": [
          "Following Users",
          "Unfollowing User & Updating UI",
          "Check If User Is Followed",
          "User Stats"
        ],
        "Uploading Posts & Displaying In Feed": [
          "Image Selector",
          "Upload Post UI",
          "Custom Input Text View",
          "Upload Post To Firebase Storage",
          "Loading Indicator For Post Upload",
          "Fetching Posts From API & Post Data Model",
          "Post View Model",
          "Post User Data",
          "Adding Pull Down Refresher To Feed",
          "Sorting Posts by Timestamp & Updating Feed After Post",
          "User Profile Posts"
        ],
        "Post Comments": [
          "Getting Started With Comment UI",
          "Comment UI Continued",
          "Finish Up Comment UI & Setup Delegate Method",
          "Upload Comment To Firestore",
          "Fetch Comments From API",
          "Comment View Model & Dynamic Cell Height",
          "Go To User Profile From Comment Tap"
        ],
        "Post Likes": [
          "Liking A Post",
          "Upload Like Info To Firestore",
          "Unliking A Post",
          "Check If User Liked Post",
          "Likes Recap"
        ]
      },
      "requirements": [
        "Mac computer",
        "Some programming experience and knowledge of Xcode is preferred"
      ],
      "description": "What are we building?\nIn this course, you will learn how to build a complete version of Instagram ready to be published on the App Store. We will be building all the core components of a social network. This includes following users, making posts, liking/commenting on posts, in-app notifications, creating a user profile, and registering users. Throughout the process, you will develop high level programming, app design and app development skills.  We will be building this without the use of storyboards, fully programmatically.\nPrior Experience?\nSome programming and basic Xcode experience is preferred. The course will move a little fast if you're a complete beginner, but you will pick things up along the way.\nWhy take this course?\nLearning advanced development skills should be taught using real world examples. This course will teach you how to build a fully functional social network, from complete scratch. You will be learning advanced front and backend development skills, from a real life professional developer. You will learn how to code like a pro, and everything will be explained in detail along the way. This will teach you to build production ready applications, that are easily scalable and maintainable. This also makes for a great project to add to your portfolio, which you can use to show off to potential employers if you're trying to become a pro.\nWhat will you learn?\nComprehensive knowledge and understanding of Swift 5 & Xcode 11\nImplement Model View ViewModel (MVVM) architecture\nHow to engineer a backend server using Cloud Firestore\nHow to authenticate and register users with Firebase\nHow to communicate with a database (read/write)\nHow to monitor events in a database\nHow to upload images to Firebase Storage\nHow to structure data for optimum performance in Cloud Firestore\nHow to build a fully functioning social network (likes, comments, follow, posts, notifications)\nHow to programmatically construct views and controllers\nHow to parse incoming JSON data from database\nHow to use CocoaTouch classes, UIKit, UserNotifications and more\nHow to use CocoaPods and custom third party APIs\nHow to implement/use protocols\nHow to implement custom subclasses for clean and reusable code\nHow to dynamically size collection view cells\nHow to create extensions and functions for clean and reusable code\nAdvanced level programming and app development skills\nAdvanced level User Interface Design\nAdvanced level back end engineering\nWhat features are included?\nCreate users\nCreate a user profile\nAuthenticate users with Firebase\nSearch for users\nUpload posts\nHome feed with posts from followers\nLike posts\nComment on posts\nIn app notifications for following, post likes and post comments\nFollow/Unfollow users from profile\nFollow/Unfollow user from notifications screen\nGo to post or profile from notifications screen\nDisplay timestamp on posts and notifications\nLogging in and logging out",
      "target_audience": [
        "Anyone who wants to learn how to build the famous Instagram iOS App!"
      ]
    },
    {
      "title": "Master PowerApps: Build a Timesheet Solution Step-by-Step",
      "url": "https://www.udemy.com/course/timesheet-management-solution-with-powerapps/",
      "bio": "Create a real-world Power Apps solution for timesheet tracking with seamless SharePoint & Microsoft 365 integration",
      "objectives": [
        "Learn to create a real-life business solution with PowerApps / Microsoft Power Platform",
        "Create a trial Office 365 tenancy (if you don't want to experiment in your production tenancy)",
        "Prepare data sources for the Timesheet Management PowerApp solution with provided SharePoint list templates",
        "Create required SharePoint lists, initialize necessary data, and create data connections for the PowerApp",
        "Create the Timesheet Management PowerApp's landing screen with buttons for different functions",
        "Create the Timesheet Submission screen and submission form - select a week, select an approver, fill timesheet and submit",
        "Create the View My Timesheets screen - to allow the employees to view their own timesheets securely",
        "Create the Approve Timesheets screen - to allow the managers/approvers to approve timesheets",
        "Create email notification functionality - to send automatic emails to approvers and employees",
        "Create the Search Timesheets screen - to allow the app admins or Payroll officers to search all employees' timesheets",
        "Create People Picker control for Approver and Admins searching and selection",
        "Create the Delete timesheets functionality for the App admins",
        "Create the Timesheet Reporting function - to allow the app admins or Payroll officers to reprot on all timesheets",
        "Create the App's Settings screen - to allow the app admins to configure various settings of the app",
        "Use variables, collections, galleries, tables, forms, data connections, and various PowerApps functions to build the whole solution",
        "Integrate Timesheet Reports with the PowerApp",
        "Test the Timesheet App with test data and end-to-end timesheet submission and approval workflow",
        "Export and deploy the Timesheet Management solution in your production Office 365 tenancy"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Outline",
          "Create Microsoft Outlook.com account",
          "Create Free Trial Office 365 E5 Tenant (Revised 2025)"
        ],
        "Setup Data Sources for our Timesheet Management App": [
          "Section 2 Introduction: Data Sources",
          "Create the SharePoint site (Revised 2025)",
          "Create SharePoint lists using the provided list template files (Revised 2025)",
          "Initialize SharePoint lists with required data"
        ],
        "Create Timesheet Management PowerApp's Home Screen": [
          "Section 3 Introduction: Timesheet Home Screen",
          "Create the new PowerApp (Revised 2025)",
          "Setup App's Start parameters",
          "Design Home Screen",
          "Add Buttons for Various Functions - Subit, View, Search, etc."
        ],
        "Create Data Connections": [
          "Section 4 Introduction: Data Connections",
          "Create Data Connections for SharePoint Lists",
          "Create Data Connections for Outlook and Office 365 Users"
        ],
        "Create Submit Timesheets Screen": [
          "Section 5 Introduction: Submit Timesheets",
          "Create Submit Timesheets Screen",
          "Create Week selection drop down control",
          "Calculate and Display selected week's Start and End dates",
          "Create People Picker Control to select the timesheet Approver",
          "Filter People Picker Control",
          "Create the Collection for Timesheet Form - Part 1",
          "Create the Collection for Timesheet Form - Part 2",
          "Create the Timesheet Submission Form - Part 1",
          "Create the Timesheet Submission Form - Part 2",
          "Timesheet Form: Calculating Number of Working Hours",
          "Create the Timesheet Submission Form - Part 3",
          "Create the Save Timesheet functionality",
          "Adjust the Form for Pre-saved Timesheets",
          "Adjust the Save Timesheet functionality",
          "Create the Submit Timesheet for Approval functionality",
          "Send Email Notification to Approvers",
          "Perform Form Data Validation",
          "Create Preloader Spinner Component for Data Saving/Loading",
          "Section Conclusion",
          "Share screenshots of Home as well as Submit Timesheet screens"
        ],
        "Create Approve Timesheets Screen": [
          "Section 6 Introduction: Approve Timesheets",
          "Create Approve Timesheets Screen",
          "Create Employee and Week selection drop-down controls",
          "Display selected timesheet that needs approval",
          "Create Approve functionality with Email Notification for Employee",
          "Create Reject timesheet functionality with Email Notification"
        ],
        "Create View My Timesheets Screen": [
          "Section 7 Introduction: View Timesheets",
          "Create View My Timesheets Screen",
          "Create Timesheet Status and Week selection drop-down controls",
          "Display selected timesheet data",
          "Display Approver Comments for Approved/Rejected timesheets",
          "Create the Resubmission functionality for rejected timesheets - Part 1",
          "Create the Resubmission functionality for rejected timesheets - Part 2"
        ],
        "Create Search Timesheets Screen for App Administrators with Delete functionality": [
          "Section 8 Introduction: Search and Delete Timesheets",
          "Create the Search Timesheets Screen with Selection Dropdowns",
          "Display selected timesheet data and Approver comments",
          "Create Delete Timesheet functionality"
        ],
        "Integrate Timesheet Report and Create App Settings Screen": [
          "Section 9 Introduction: Timesheet Report and App Settings",
          "Integrate Report button with a Timesheet data report",
          "Create Settings Screen and basic settings fields",
          "Define default Start and End Times for the Timesheets",
          "Manage App Administrators from Settings Screen"
        ],
        "Secure and Test the Timesheet App with End-to-End test data": [
          "Section 10 Introduction: Secure and Test the App",
          "Secure the App from Unauthorized Access",
          "Test with a full timesheet workflow"
        ]
      },
      "requirements": [
        "A basic understanding of Microsoft 365 tenant",
        "A basic understanding of PowerApps and SharePoint Lists",
        "An Office 365 or Microsoft 365 tenant to build the solution. We will show you how to create trial Office 365 tenant."
      ],
      "description": "** Course updated in 2025 **\nMany courses teach you what PowerApps is, but only a few show you how to build real-life business solutions. This course takes a hands-on, step-by-step approach to building a fully functional Timesheet Management system that integrates with Microsoft 365, SharePoint, and Power Automate.\nTimesheet management is a critical need for businesses of all sizes, enabling employees to track time efficiently and managers to streamline approvals. In this course, you will learn how to develop, customize, and deploy a PowerApps-based timesheet solution that automates workflows and enhances productivity.\nWhy This Course?\nReal-world project – Learn by building an actual Timesheet Management app.\nMicrosoft 365 integration – Seamlessly connect with SharePoint and Power Automate.\nTime-saving templates – Use pre-built code, SharePoint lists, and app components.\nPractical, hands-on learning – No fluff, just step-by-step implementation.\nFaster deployment – Get your app up and running quickly in your organization.\nWho Should Take This Course?\nPowerApps users who want to build practical business applications.\nIT professionals and business analysts seeking to automate time tracking.\nDevelopers and consultants looking to create Microsoft 365 solutions.\nOrganizations that need a robust timesheet management system.\nIf you have basic knowledge of PowerApps and want to apply your skills to a real business scenario, this course is for you. Start building your timesheet solution today!",
      "target_audience": [
        "Anyone wanting to learn PowerApps and implement the knowledge at the same time in their own production environment",
        "Beginner PowerApps developers wanting to build real-life business solutions",
        "Anyone wanting to learn medium to advanced concepts of PowerApps and other Power Platform tools",
        "Anyone wanting to create business solutions using Microsoft Power Platform",
        "PowerApps users who want to build practical business applications",
        "Organizations that need a robust timesheet management system."
      ]
    },
    {
      "title": "Hacking with watchOS 5 - Build Amazing Apple Watch Apps",
      "url": "https://www.udemy.com/course/watchos3/",
      "bio": "The Hacking with watchOS tutorial series is designed to make it easy for beginners to get started coding for watchOS 5",
      "objectives": [
        "Place your own amazing watch apps into the hands of thousands of people through the Watch App Store",
        "Become completely proficient with Swift 4.2 and watchOS app development"
      ],
      "course_content": {
        "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources": [
          "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources"
        ],
        "Introduction - Whats it like to build for watchOS 4?": [
          "Introduction - Whats it like to build for watchOS 4?"
        ],
        "DOWNLOAD ALL COMPLETE PROJECTS HERE FOR THIS COURSE - UPDATED TO THE LATEST CODE": [
          "DOWNLOAD ALL COMPLETED PROJECTS FOR THIS COURSE HERE"
        ],
        "Whats new in Swift 4": [
          "Whats new in Swift 4"
        ],
        "The Swift Language": [
          "Variables - Part 1",
          "Variables - Part 2 - Data Types - Type Annotation - Type Inference continued",
          "Operators Part 1 - Unary, Binary, Ternary, Assignment, and Remainder operators",
          "Operators Part 2 - Increment, Decrement, Minus Unary, Compound Assignment",
          "Operators Part 3 - Range, and Logical operators",
          "Optionals",
          "Structs",
          "Computed Properties",
          "Property Observers",
          "Extensions",
          "Protocols Part 1 - Syntax and declaring - Adding functions",
          "Protocols Part 2 - Adding properties -Delegation - Static keyword",
          "Enums Part 1 - Raw values - Associated values",
          "Enums Part 2 - Implicitly assigned raw values",
          "Enums Part 3 - Initializing - recurssive enums",
          "Generics Part 1",
          "Generics Part 2",
          "Type Casting - Part 1 - The \"as\" and \"is\" operators",
          "Type Casting - Part 2 - Using AnyObject and Any",
          "Nested Types",
          "Tuples part 1 - Using and accessing values",
          "Tuples part 2 - Using them with functions and optionals",
          "Closures Part 1 - Syntax and Optimizations",
          "Closures Part 2 - Trailing Closures",
          "Closures Part 3 - Capturing Values"
        ],
        "Control Flow": [
          "if statement - else if - nested if's",
          "Switch",
          "for in loop",
          "while and repeat while loops"
        ],
        "Collections": [
          "Arrays Part 1 - Declaring and initialiizing an array",
          "Arrays Part 2 - Accessing and modifying an array",
          "Arrays Part 3 - More of accessing and modifying an array",
          "Dictionaries - Part 1",
          "Dictionaries - Part 2",
          "Sets Part 1 - Declaring and initializing sets",
          "Sets Part 2 - Accessing and modifying sets"
        ],
        "Functions": [
          "Functions Part 1 - Declaring - Syntax - Return",
          "Functions Part 2 - Working with functions",
          "Functions Part 3 - Working with more functions",
          "Functions Part 4 - Nested Functions"
        ],
        "Strings": [
          "Strings Part 1 - Literals-mutability-interpolation-characters",
          "Strings Part 2 - Accessing and modifying strings",
          "Strings Part 3 - Comparing strings",
          "Strings Part 4 - Even more of accessing and modifying strings"
        ],
        "Classes - Properties - inits - Subclassing": [
          "Classes - initializers - properties",
          "Subclassing Part 1",
          "Subclassing Part 2"
        ]
      },
      "requirements": [
        "You will need a Mac, and Xcode 10 which is a free download from the Mac App Store, and simply a desire to transform your ideas into amazing apps"
      ],
      "description": "Note: All finished projects and source code have been update to swift 5.0. So even though some lectures are shown using Swift 4.2, just reference the source code for any update you might need.\nThis course is produced from the \"Hacking with watchOS\" series of tutorials, which are written and authored by the award winning Swift programmer, Paul Hudson,  and these videos were made with his permission and support. You can always be guaranteed you're learning the latest and greatest Apple technologies in the Hacking with Swift tutorials. Here you learn smart, powerful, and expressive Swift 5, and watchOS 5, the way it was meant to be written. You learn while you make real-world Apple watch apps, which means you get to apply your new skills immediately and see them work in context. Hacking with Swift is one of the most popular Swift tutorial series online, which uses an approach that teaches you Swift programming incredibly quickly, and you end up with a huge library of finished projects that are yours to develop further, or ship to the  App Store. Paul has received high praise from the creator of the Swift language himself, Chris Lattner, for his outstanding method of teaching, and series of Swift tutorials. And working together with iOS developer Steve DeStefano, the Hacking with Swift series of programming training videos are simply the fastest way to learn how to code in the Apple eco-system.\nCheck out all of Paul Hudson's Swift tutorials and books at HackingWithSwift - from beginner to pro, Paul will teach you to write Swift code in very little time.\nWant to learn how to build amazing watch apps?\nThis course has all the step by step instruction you need to create awesome apps to submit to the App Store.\nBuilding a watch app uses the same Swift language as iOS apps.\nIf you're completely new to coding, don’t worry, we have you covered, as there is also a language section in the course that starts at the very beginning, and covers the Swift 5 language.\nThe term \"Hacking with watchOS\" means we are \"playing\" with the Swift language, and using it in unique and interesting ways.\nWatch apps are fun to build, simply add your own unique creativity, and follow along in the lectures, and before you know it, you've created a masterpiece.....how cool is it to have your very own creation in the App Store, and on the wrists of thousands of people?\nThis course makes use of annotations, callouts, diagrams, highlighting, and deep explanations that help make complex subject matter much easier to grasp, and guides you along the path of the code each step of the way.\nThis course also makes the perfect reference tool kit, to be used in conjunction with the Apple docs, so that you can go back and scrub through any of the lectures very quickly to pull out relevant code or instruction that you need, or use all of the downloadable code and create your own ready made set of docs. There's tons of information here, and no wasted chatter, it's strictly on point with Swift 5 and watchOS 5.\nSome of the topics that will be covered:\nFeaturing apps built by the award winning Swift programmer - Paul Hudson - HackingWithSwift\nBuild 12 projects - each one teaching a new aspect of watchOS\nWe use Swift 5 in all the finished source code, watchOS 5 and Xcode 10\nThe Swift 5 language - we go from variables to creating our own functions and more\nLearn by use of annotations - diagrams - highlighting - callouts\nHow to use controls - outlets and actions\nUsing delegates and protocols\nThe ins and outs of GCD\nDictate notes into your watch and convert voice to text\nWork with paged based interfaces - sliders - pickers\nCreate SpriteKit games for the watch\nUserDefaults to persist data\nParse JSON from a website and load its data into your watch\nAdd alerts - menus - notifications to your watch apps\nAnimations\nLearn the various ways to receive user input on a watch\nRecord audio\n\nLearn how to work with Time Travel and Complications\nCreate a cool \"Safe Crack\" app where you use the digital crown to simulate the lock on a safe\nCreate a workout app with a twist, using HealthKit\nUse the WatchConnectivuty class to pass data between the iPhone and watch and vise versa\nAnd a ton more!\nAll videos are recorded in HD for maximum resolution and clarity\nSwift is the new language of the future, and with this course you will get plenty of instruction on how to implement it in unique ways to create beautiful watch apps.\n\nThis course assumes you have no programming experience, so its perfect for the beginner. Its also a nice fit for the intermediate and experienced coder as well because the projects get more detailed as we proceed further.\nIf you think this might be too difficult for you, think again, and come code along with me in a step by step format....just add a big portion of your own unique creativity, and before you know it, you will have built many amazing watch apps that you can submit to the App Store, and place on the wrists of thousands of people. See you inside the course.\nHappy Coding :-)",
      "target_audience": [
        "This course is for anyone who has a burning desire to get their own creative ideas translated into Apple Watch apps. We cover the complete Swift 4 language and go from beginner to advanced",
        "This is the perfect course if your coming from another language like Objective C or any other language, and you'll see how easy it is to transition to swift 4."
      ]
    },
    {
      "title": "The Complete React Native + Hooks Course",
      "url": "https://www.udemy.com/course/the-complete-react-native-and-redux-course/",
      "bio": "Understand React Native with Hooks, Context, and React Navigation.",
      "objectives": [
        "Create real-world native apps using React Native",
        "Make truly reusable components that look great",
        "Understand the terminology and concepts of Redux",
        "Prototype and deploy your own applications to the Apple and Google Play Stores",
        "Get up to speed with React design principles and methodologies",
        "Discover mobile design patterns used by experienced engineers"
      ],
      "course_content": {
        "Getting Started": [
          "How to Get Help",
          "Course Resources",
          "Join Our Community!",
          "Course Overview",
          "Installing Node.js and Prerequisite Info",
          "Setting Up iOS Simulator",
          "Setting up Android Studio",
          "Starter Files Download, Installation and Startup",
          "Making Changes"
        ],
        "Working with Content": [
          "Overview of React Components",
          "Showing a Custom Component",
          "Common Questions and Answers",
          "Rules of JSX",
          "One Common Error",
          "JSX Exercise Overview",
          "JSX Solution"
        ],
        "List Building - With Style!": [
          "Building Lists",
          "The FlatList Element",
          "Rendering a FlatList",
          "Why a Key Property?",
          "Solving the Key Issue",
          "A Few Props Around FlatList",
          "Exercise Overview",
          "Exercise Solution"
        ],
        "Navigating Users Between Screens": [
          "Button Types",
          "Buttons in Action",
          "Touchable Opacity in Action",
          "Navigating with React Navigation",
          "Destructuring Props"
        ],
        "Building Reusable Components": [
          "Component Reuse with Props",
          "Exercise Solution",
          "Parent-Child Relationships",
          "Communicating from Parent to Child",
          "Images Download",
          "Showing Images",
          "Passing Images as Props",
          "Exercise Outline",
          "Exercise Solution"
        ],
        "State Management in React Components": [
          "State in Components",
          "Screen Boilerplate",
          "State in Action",
          "Notes on State",
          "App Overview",
          "Generating Random Colors",
          "Adding Random Colors",
          "Showing Colors with a FlatList",
          "App Overview",
          "Reusable Color Adjusters",
          "Coordinating State",
          "Passing Callbacks to Children",
          "Tying State Values Together",
          "Validating State Changes",
          "Reusable State Updates",
          "Introduction to Reducers",
          "Creating a Reducer",
          "Applying State with a Reducer",
          "Restoring Validation",
          "Community Convention in Reducers",
          "Exercise Outline",
          "Exercise Solution",
          "Handling Text Input",
          "Showing a Text Input",
          "Two Important Props",
          "Weird Things with Text and State",
          "Updating State",
          "Exercise Outline",
          "Exercise Solution"
        ],
        "How to Handle Screen Layout": [
          "Layout with React Native",
          "Basics of Box Object Model",
          "AlignItems with Flex",
          "Flex Direction",
          "Justify Content",
          "Flex Values",
          "Align Self on Children",
          "The Position Property",
          "Top, Bottom, Left, Right",
          "Absolute Fill Objects",
          "Applying Layout Systems",
          "Exercise Overview",
          "Exercise Solution"
        ],
        "Putting It All Together - Restaurant Search App": [
          "Starter Files Download, Installation and Startup",
          "App Overview",
          "Yelp API Info and Workarounds",
          "Yelp Signup",
          "Yelp Walkthrough",
          "React Navigation",
          "Assembling a Navigator",
          "Architecture Approach",
          "Starting the SearchBar",
          "Displaying Icons",
          "Search Bar Styling",
          "A Touch More Styling",
          "Managing State",
          "Detecting Editing Completion"
        ],
        "Using Outside API's": [
          "Configuring Axios",
          "Making the Request",
          "Error Handling",
          "Running an Initial Search"
        ],
        "Making Hooks Reusable": [
          "The useEffect Hook",
          "Extracting Hook Logic",
          "Showing Search Results",
          "Grouping Results",
          "FlatList Rendering"
        ]
      },
      "requirements": [
        "All you need is basic understanding of Javascript"
      ],
      "description": "If you're tired of spinning your wheels learning Swift or Android, this is the course for you.\nAuthentication? You will learn it.  Hooks? Included.  Navigation? Of course!\nThis course will get you up and running with React Native quickly, and teach you the core knowledge you need to deeply understand and build React components for mobile devices.\nBoth OSX and Windows supported - develop iOS or Android!\nThis course includes content on both v0.62.2 and the legacy v0.30.x, which is widely used in industry.\n\nWe'll start by mastering the fundamentals of React, including JSX, “props\", “state\", and event handling. Source code is provided for each lecture, so you will always stay up-to-date with the course pacing.  Special attention has been paid to creating reusable components that you'll be able to make use of on your own fantastic projects.\nReact Native is an excellent solution for developing apps on mobile in a fraction of the time it takes to make an equivalent iOS or Swift app.  You'll love seeing your changes instantly appear on your own device, rather than waiting for Swift/Java code to recompile!  This quick feedback loop, along with excellent cross platform support, is what has catapulted React Native to the top must-have skill for Javascript engineers.\nIf you are new to React, or if you've been working to learn it but sometimes feel like you still don't quite 'get it', this is the React course for you! To learn React you have to understand it.\nLearn how to use React's custom markup language, JSX, to clean up your Javascript code\nMaster the process of breaking down a complex component into many smaller, interchangeable components\nGrasp the difference between “props\" and “state\" and when to use each\nRender interactive, media-rich components in beautifully styled apps\nDevelop apps that are unique, fun, and responsive\nBuild on both Android and iOS platforms\nMaster integration with Firebase for user authentication\nLearn the core principles of navigation with React Native\n\n\nI've built the course that I would have wanted to take when I was learning React Native. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "This course is for anyone looking to make native apps with React Native"
      ]
    },
    {
      "title": "Xamarin: Build Native Cross Platform Apps with C# Codes",
      "url": "https://www.udemy.com/course/xamarin-build-native-cross-platform-apps-with-c-codes/",
      "bio": "Use your C# skills, learn to build native mobile apps with Xamarin for Android, iOS and Windows | Xamarin C# ( uwp )",
      "objectives": [
        "Whether you’re interested in learning Xamarin Forms, Xamarin Classic, or Azure Mobile Services, OAK has a course to help you create cross-platform mobile apps",
        "The Xamarin Mobile Platform lets you write code once in C# and then compile that code to run natively on Android, iOS, and Windows.",
        "This course also has excellent combo of Web APIs with ASP .Net. I've even made my own REST API and consumed it in my cross-platform Xamarin Forms application.",
        "Having C# experience will be enough",
        "Build Native Cross-Platform Apps with Xamarin",
        "Create native apps for Android, IOS and Windows using C# programming language",
        "Build Native Cross-Platform Apps with Xamarin Forms",
        "Use free tools and platforms for Xamarin Visual Studio",
        "Build Native Cross-Platform Apps with C# Codes",
        "Build user-interfaces with XAML and C# code",
        "Use Xamarın Forms Previewer",
        "Learn to get platform-specific functions with Dependency Service",
        "Test projects on the Xamarin Android Emulator",
        "Test projects on the iOS Simulator",
        "This course will teach you Xamarin from scratch",
        "You do not need to learn Java, Kotlin, Objective-C, Swift or anything of that",
        "If you know C# Object Oriented Programming, it will be a huge advantage for you.",
        "Thanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C",
        "C# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft.",
        "Encapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members .",
        "C# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications",
        "As is true for many skills, you can learn C# by taking Oak Academy courses, reading documentation, and practicing coding hands-on.",
        "If you know xamarin, xamarin android, uwp, xamarin c#, xamarin native, c#xamarin, xamarin forms, cross platform it will be a huge advantage for you."
      ],
      "course_content": {
        "Do You Wonder What We Covered In Our Xamarin Course?": [
          "What We Will Learn in Xamarin Course?",
          "Frequently Asked Questions about Xamarin",
          "Project Files and Course Documents",
          "FAQ about Xamarin, Build Native Cross Platform Apps"
        ],
        "Let`s Talk About Xamarin": [
          "What is Xamarin?",
          "Why Xamarin?"
        ],
        "Set Up Visual Studio and Xamarin": [
          "Setting Up Visual Studio 2019 and Xamarin",
          "How To Install Visual Studion On Mac?",
          "How To Install Visual Studio 2022 On Windows?",
          "Useful Information For Xamarin"
        ],
        "Your Very First Xamarin Forms App": [
          "Create First Xamarin Forms App Using Visual Studio",
          "Meeting with Xamarin Forms Project Architecture",
          "Creating an Android Emulator",
          "Deploying App on Emulator"
        ],
        "Creating Pages and Navigation in Xamarin": [
          "Content Page for Xamarin",
          "Navigation Page and Toolbar Items",
          "Tabbed Page",
          "Carousel Page",
          "Master Detail Page",
          "Navigation Between Pages",
          "What We Have Learned"
        ],
        "Adding and Using Elements": [
          "Button in Xamarin",
          "Label in Xamarin forms",
          "Entry and Editor in Xamarin form",
          "Search Bar in xamarin (oak academy)",
          "Switch and Checkbox for xamarin project",
          "Slider",
          "Stepper in Xamarin",
          "Progress Bar",
          "Box View in Xamarin app",
          "Image",
          "Picker in Xamarin",
          "Date Picker and Time Picker",
          "Activity Indicator in Xamarın",
          "Web View",
          "Let’s practice: Register Page",
          "Xamarin - 3"
        ],
        "App Design with Layouts": [
          "Stack Layout in Xamarin",
          "Grid",
          "Absolute Layout in Xamarin",
          "Relative Layout in Xamarin form",
          "Let’s Practice: Login Page Design",
          "Xamarin - 2"
        ],
        "Table View and Custom Cells": [
          "Table View in Xamarin",
          "Text Cell",
          "Switch Cell in Xamarın",
          "Entry Cell",
          "Image Cell in Xamarin form",
          "View Cell",
          "Let’s Practice: Settings Page",
          "What is OOP?",
          "Class and Object",
          "Xamarin - 3"
        ],
        "Displaying Pop-Ups": [
          "Displaying Alerts",
          "Action Sheet",
          "What We Have Learned?"
        ],
        "List View and Data Binding Basic": [
          "Creating a List View",
          "Adding Items in List View with Data Binding",
          "Getting Selected Item",
          "Adding Header and Footer",
          "Pull to Refresh",
          "Using Search Bar",
          "Grouping on List View",
          "Let’sPractice: Café Menu App",
          "Enum"
        ]
      },
      "requirements": [
        "Having C# experience will be enough",
        "If you know C# Object Oriented Programming, it will be a huge advantage for Xamarin",
        "A computer for installing all the free software and tools needed to practice",
        "Microsoft Windows 7, 8, 10 or Apple Mac OS X 10.12 and later versions for Xamarin Android",
        "A strong work ethic, willingness to learn, and plenty of excitement about the back door of the digital world",
        "Nothing else! It’s just you, your computer and your ambition to get started to xamarin c# today",
        "Curiosity for build native cross platform apps with c# codes",
        "Having visual studio 2019 xamarin",
        "Desire to learn xamarin xamarin android uwp xamarin c# xamarin native c# xamarin",
        "Determination to learn and patience for complete xamarin forms cross platform visual studio 2019 xamarin c# oak academy mobile app xamarin ios"
      ],
      "description": "Hi there,\nWelcome to the Xamarin: Build Native Cross-Platform Apps with C# Codes course.\nUse your C# skills, learn to build native mobile apps with Xamarin for Android, iOS and Windows | Xamarin C# ( uwp )\n\nBeing able to develop mobile apps for multiple platforms is the quickest way a developer can boost their productivity. Whether you’re interested in learning Xamarin Forms, Xamarin Classic, or Azure Mobile Services, Udemy has a course to help you create cross-platform mobile apps more efficiently.\nWriting separate versions of the same app for each major mobile platform can be a huge drain on developer resources. The Xamarin Mobile Platform lets you write code once in C# and then compile that code to run natively on Android, iOS, and Windows.\nThe best course is right in front of your eyes. This is the most complete course that teaches you how to build Native Cross-Platform Apps with C# Codes.\nWe believe building apps shouldn't be painful. That's why we created this Xamarin course.\nXamarin is a framework that allows us to create native apps for Android, IOS and Windows using C# programming language which means you only code once then the rest will be sorted as Xamarin will build your app for each platform. It is that simple.\nIn this Xamarin with C# codes course, we will develop cross-platform apps with Xamarin Forms. You do not need to learn Java, Kotlin, Objective-C, Swift or anything of that. Just know C#. But knowing C# Object-Oriented Programming will be a plus.\nNo prior knowledge is needed!\nThis Xamarin course starts at beginner levels so you don’t need to have previous knowledge except for C# experience.\nFree Tools\nIn this course Free tools and platforms used, so you don’t need to buy any tool or application.\nIn this course, you will learn:\nInstalling Visual Studio and Xamarin libraries\nCreating a custom Emulator\nRunning project on the Emulator\nDeveloping native mobile apps for Android, iOS and UWP\nBuilding user-interfaces with XAML and C# code\nUsing Xamarin Forms Previewer\nManaging NuGet packages\nCreating pages and navigation between them\nAdding and using elements\nDesigning with Layouts\nTableView and Cells\nDisplaying popups\nListView and data binding basic\nGetting platform-specific functions with Dependency Service\nUsing native controls with Custom Renderers\nGetting to build native cross platform apps with c# codes\nHaving visual studio 2019 xamarin\nxamarin\nc#\nxamarin forms\nxamarin android\nxamarin form\nandroid\nxamarin native\nvisual studio 2019 xamarin\ncross platform\nxamarin ios\nc# mobile app\nxamarin xamarin android uwp xamarin c# xamarin native c# xamarin xamarin forms cross platform visual studio 2019 xamarin c# oak academy mobile app xamarin ios uno platform c# mobile xamarin form c# apps xamarin native ios xamarin visual studio xamarin 2019 c# app xamarin app xamarin oak academy xamarın xamarin mobile app cross platform app development xamarin course xamarin project c# mobile apps c# ios\nBy registering the course you will have lifetime access the all resources, practice videos and will be able to ask questions about related topics whenever you want.\nWhat is C# ?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its .NET initiative. The .NET framework and .NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL. C# is open-source and was designed to be simple yet modern, flexible yet powerful and versatile yet easy to learn and program with. Many programming languages in the past were designed for specific purposes. C# was developed with business and enterprise needs in mind. By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages. That includes generics, var types.\n\nWhat are the advantages of c# over C++ ?\nThanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C, an older but widely used language, and C++ became the de-facto language for building applications for Windows as well as infrastructure and low-level applications. Visual Basic was for business applications. What C# does is combine the rapid development capabilities of VB with the power of C++. C# also has many new data types, type-safety, to ensure you do not unknowingly reuse initialized variables. It uses a simplified syntax, a huge improvement over the complex coding often required in C++. C# also removes memory management issues thanks to .NET’s garbage collection scheme. You do not have to reference items for garbage collection; the system can reclaim that memory as required.\nWhy use encapsulation in C# ?\nEncapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members so that they are treated as a single object. It is a means to prevent the user of a given class from manipulating program objects in ways that were not intended by the designer or developer. Encapsulation hides how a program operates without affecting how it works while still allowing users to service requests for functionality and add or modify internal data or methods to meet changing needs. For example, suppose you have an object called “Patient” that contains patient-related data. In that case, you can use encapsulation to provision patient-specific data to those who need it without exposing all patient data. In addition to information hiding, you can use encapsulation in C# to improve your code's reusability.\n\nWhat is C# used for?\nC# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications and game development. In web application development, you can build dynamic websites and apps using .NET or another open-source platform of your choice. Also, since Microsoft created C# for Microsoft, C# is a popular language for building Windows applications. There are rich resources and a vibrant C# community that can support and documentation for applications and programs specific to Microsoft platform architectures, making it easier than ever to develop applications in this space. Finally, C# is a popular language to use in game-building, especially with Unity, a game engine that runs on C++ and C#.\nWhat is a constructor? What is a destructor?\nTo understand constructors and destructors, we need to understand methods. A method is a block of code that contains a series of statements. Programs run by executing methods. A constructor is a special method of a class that is automatically called whenever an instance of a given class is created. A constructor contains the instructions that execute when an object is created. Developers use it to assign specific initial values to the data members of the same class. In C#, you will get a compile-time error if you try to read from an uninitialized variable. You must first initialize your variables by giving them an initial value, which is what the constructor does. On the other hand, destructors are methods used to destroy instances of a class when they are no longer needed. Destructors are called implicitly by the garbage collector in .NET\nHow do I learn C#?\nAs is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on. There are many resources available for all of the above, including real-time compiler applications that will show you the output of your code as you type it. However, it is best to plan ahead, and you should have an outline of what you need to learn before beginning your journey. The first thing to learn about is what C# is, how and where it is used, and why it was developed. From there, you can learn about data types, variables, keywords, and functions. Once you’ve grasped the basics, you can move on to learning about conditional tests and operators, functions, arguments, object orientation, arrays, strings, classes, methods, structs, debugging, and exception handling.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy's seasoned developers' expertise.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\nStudent Says That:\nAn absolutely amazing course it was! I've got a very good idea of how to make a real-world application with the help of Xamarin Forms. This course also has an excellent combo of Web APIs with ASP. Net. I've even made my own REST API and consumed it in my cross-platform Xamarin Forms application.\n\nLet's dive in now my Xamarin: Build Native Cross-Platform Apps with C# Codes course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Passion for learning to build Native Cross-Platform Apps and uwp with C# Codes",
        "Developers who want to utilize their existing C# skills to build native mobile apps for xamarin forms",
        "Anyone who wants learn to build native mobile apps with Xamarin for Android, iOS and Windows",
        "Those who wants to start learning Xamarin native from scratch and move forward",
        "Entrepreneurs who want to start building Cross-Platform Apps with Xamarin",
        "People who want to learn visual studio 2019 xamarin c# oak academy mobile app xamarin ios uno platform c# mobile",
        "Anyone who want to learn programming with xamarin form c# apps xamarin native ios xamarin visual studio xamarin 2019 c# app xamarin app xamarin oak academy",
        "People who want to learn xamarın xamarin mobile app cross platform app development xamarin course xamarin project c# mobile apps c# ios"
      ]
    },
    {
      "title": "Flutter API & JSON Course Build Real ios&Android(4 Real App)",
      "url": "https://www.udemy.com/course/flutter-api-json-course-build-real-iosandroid4-real-app/",
      "bio": "In This Flutter API And JSON Parsing Course You will Build Real World ios and Android App,Flutter Weather App Using Json",
      "objectives": [
        "You Will Build Flutter Weather App Using Weather API",
        "You Will Build Flutter Sunrise and Sunset Time Finder App Using Json Data",
        "Work With Complex API",
        "Flutter Real World App for ios and Android",
        "Flutter Material Design",
        "You Will Build 4 Flutter App Using API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "**Simple Json Parsing Project** || Create Project": [
          "Create Project Part-1"
        ],
        "**Simple Json Parsing Project** || Drawer Design": [
          "Drawer Design Part-2"
        ],
        "**Simple Json Parsing Project** || Future Function and get API Data Part-3": [
          "Future Function and get API Data Part-3"
        ],
        "**Simple Json Parsing Project** || Get Data From API": [
          "Get Data From API Part-4"
        ],
        "**Simple Json Parsing Project** || Show Data in Vertical List View Part-5": [
          "Show Data in Vertical List View Part-5"
        ],
        "**Simple Json Parsing Project** || Final Product Part-6": [
          "Final Product Part-6"
        ],
        "**Weather APP** || Create Project": [
          "Create Project Part-1"
        ],
        "**Weather APP** || Get API Data": [
          "Get API Data Part-2"
        ],
        "**Weather APP** || Get All Data From API": [
          "Get All Data From API Part-3"
        ]
      },
      "requirements": [
        "A Windows PC, Mac or Linux Computer",
        "Android Studio or Any other IDE"
      ],
      "description": "Welcome to this (Flutter API & JSON Course Build Real ios&Android(4 Real App))App Development Course. In This Flutter Course, You Will Learn How to build  complete Real World ios and Android App Using JSON Data and API.\nWhen you will Complete This Course. Here are Some Lists That You Are Going To Learn:\nFlutter Weather App\nFlutter Sunrise and Sunset Time Finder App\nHow to get JSON Array Data\nHow to get JSON Map Data\nHow to get Complex Query\nFlutter Navigation Drawer\nFlutter AppBar\nFlutter Material Design\nFlutter Card View\nFlutter Widget\nFlutter Row and Column\nFlutter ListView Builder.\nios and Android App Development Using Flutter\nYou, Will, Build Real World Flutter Application.\nYou Will Learn Flutter Horizontal Listview\nYou Will Learn Flutter Vertical ListView\n\n\nSign Up Today And You Will Learn:\nHow To Become a Flutter Developer\nHow To Work With JSON Data\nHow To Work With API\nHow To Work With Complex API Data\nHow To Develop A Complete ios and Android App\nHow To Develop Weather App\nHow To Develop Sunrise Find Timer App\n\n\nHere are Some Feedbacks about my courses from my Students:\n\n\n\"I wanted an app development course that would show what is really important and that is what I got. I learned all features of Android for becoming Android developer. Certainly would recommend the course. \"\n\n\n\"Best android apps development course so far. First I learn basic of all android components. After that I learn how to develop real world android apps for client and App Store. I mostly like all firebase sections of this course. Instructor shows how to develop real world apps using firebase. After complete this section I learn a lot about firebase and I build many real world android apps. Thanks for your course.\"\n\n\n\"Best Android development course I have taken so far. The teacher has amazing teaching skills. He has the ability to describe all parts very clearly on a step-by-step basis. Highly recommended! \"\n\n\n\"Very well made course about Android Development. Will continue and hope to learn a lot more. I am very happy with what I have learned so far!\"",
      "target_audience": [
        "Who is want to become a Flutter Developer",
        "Who is Want to Build ios & Android App Using Flutter",
        "Who is Want to Build Real World ios and Android App",
        "Who is Want to Build Real World Weather App",
        "Who is Want to learn Flutter Material Design"
      ]
    },
    {
      "title": "Android App Development in 34 Hours : MobDevOps+ Android 15",
      "url": "https://www.udemy.com/course/android-kotlin-development/",
      "bio": "You don't need 34+hours for learning kotlin! START !Learn Kotlin in 34 Hours and write you own applications - Android 15",
      "objectives": [
        "Learn how to develop Android apps using the powerful Kotlin programming language.",
        "Discover why Kotlin is the best language for developing Android apps.",
        "Understand how to use Android Studio and the Android SDK to build amazing apps.",
        "Learn about motion layout and how to create stunning visual effects in your apps.",
        "Discover the benefits of using the libraries for creating animations in your apps.",
        "Learn how to build user interfaces that are responsive and easy to use.",
        "Understand the basics of Android app architecture and how to build robust apps.",
        "Learn about the Android activity lifecycle and how to handle common events.",
        "Discover how to use fragments and layouts to create dynamic and flexible apps.",
        "Understand how to use material design principles to create beautiful and intuitive user interfaces.",
        "Learn how to build apps that work across different screen sizes and resolutions.",
        "Discover how to use the Android Jetpack library to build apps with better performance and scalability.",
        "Understand how to use Android notifications to keep your users informed and engaged.",
        "Learn how to use the Android intent system to communicate between different parts of your app.",
        "Discover how to use the Android navigation component to create navigation graphs and simplify navigation in your app.",
        "Understand how to use Android resources to create apps with different languages and themes.",
        "Learn how to use data binding to simplify your code and create more maintainable apps.",
        "Discover how to use the Android Room library to create apps with local data storage.",
        "Understand how to use the Android view model to create apps with better separation of concerns.",
        "Learn how to use the Android LiveData library to create reactive and responsive apps.",
        "Discover how to use the Android work manager to perform background tasks in your app.",
        "Understand how to use the Android camera and media APIs to create apps with multimedia capabilities.",
        "Learn how to use the Android location and maps APIs to create apps with location-based features.",
        "Discover how to use the Android material components library to create apps with a modern and consistent look and feel.",
        "Understand how to use the Android testing frameworks to create automated tests for your app.",
        "Learn how to publish your app to the Google Play Store and reach millions of users.",
        "Discover how to monetize your app with ads, in-app purchases, and subscriptions.",
        "Understand how to optimize your app for performance and battery life.",
        "Learn how to troubleshoot common issues and debug your app.",
        "Get hands-on experience by building a complete Android app from scratch!",
        "Learn how to integrate third-party libraries and APIs into your app.",
        "Discover how to create custom views and animations for your app.",
        "Understand how to use the Android support library to create apps that work on older devices.",
        "Learn about the best practices for designing and developing Android apps.",
        "Discover how to use Kotlin coroutines to create responsive and asynchronous apps.",
        "Understand how to use Android data binding to create a clean and maintainable codebase.",
        "Learn how to use Android resources to create apps that work in different screen orientations and resolutions.",
        "Discover how to use Android fragments to create dynamic and flexible user interfaces.",
        "Understand how to use Android services to create background tasks and long-running operations.",
        "Learn how to use Android broadcast receivers to receive and process system events.",
        "Discover how to use Android content providers to share data between apps.",
        "Understand how to use Android material design principles to create apps that look and feel modern.",
        "Learn how to use Android view models to separate your app's UI from its business logic.",
        "Discover how to use Android navigation to create a seamless and intuitive user experience.",
        "Understand how to use Android notifications to keep your users engaged and informed.",
        "Learn how to use Android data binding to create a clean and maintainable codebase.",
        "Discover how to use Android view animations to create visual effects and improve user experience.",
        "Understand how to use Android RecyclerView to create lists and grids in your app.",
        "Learn how to use Android shared preferences to store app settings and preferences.",
        "Discover how to use Android location services to add location-based features to your app.",
        "and other awesome topics ->"
      ],
      "course_content": {
        "How take most of this course ?": [
          "Why you need to learn Kotlin for Mobile Development ?"
        ],
        "Introduction Android Studio User Interface": [
          "Starting first Project",
          "Android Studio Interface",
          "Quick Overview to Android Studio UI",
          "Android Studio Editor - with or without XML"
        ],
        "Setting Up Android Studio Development Environment": [
          "First steps to creating android project",
          "Creating AVD and Configuring"
        ],
        "Anatomy of Android Architecture": [
          "The Android System Architecture"
        ],
        "Kotlin - Starting": [
          "Kotlin Variables",
          "Defining Variables",
          "Kotlin Semicolon",
          "Assignment, Addition and Substraction operators in Kotlin",
          "Division, Multiplaction, Increment and Decrement operators",
          "Demo Application with String Templates"
        ],
        "Kotlin - Operators": [
          "Kotlin Equality operators",
          "Kotlin Logical AND , Logical OR Operators"
        ],
        "Kotlin - Conditions": [
          "If and Else Conditions",
          "Kotlin Nested If",
          "When Conditions"
        ],
        "Kotlin - Loops": [
          "While and DOWHILE loop",
          "For LOOPS"
        ],
        "Kotlin - Functions": [
          "Introduction to Kotlin Function",
          "Return Keyword",
          "Kotlin Advanced Function Arguments",
          "Kotlin - Declaring Functions",
          "Kotlin - Parameters",
          "Test"
        ],
        "Kotlin - OOP": [
          "Introduction to Kotlin OOP",
          "Class - Functions",
          "Class Variables",
          "Kotlin OOP - Encapsulation",
          "Kotlin - Visibility Modifiers Public and Private",
          "Kotlin - Visibility Modifiers Final",
          "Primary and Secondary Constructors",
          "Game with OOP - Part 1",
          "Game with OOP - Part 2",
          "Game with OOP - Part 3",
          "Introduction to Kotlin Inheritance",
          "Inheritance",
          "Inheritance Part 2",
          "Abstract Class - Part 1",
          "Kotlin Super Class",
          "Game with OOP - Final",
          "Exercies"
        ]
      },
      "requirements": [
        "No programming requirements needed you'll learn ALL here !",
        "4GB RAM and 9GB Available Disk Space (For Android Studio)"
      ],
      "description": "Kotlin is the most popular programming language for building Android apps and it can also be can be used for any kind of development.\n*Earn the Official Certificate after Completing the Course\nOcsaly Academy is proud to offer a comprehensive course on Android Development with Kotlin. With this course, you'll learn how to use Kotlin, the modern programming language, to build beautiful, functional, and high-performing Android apps. Whether you're a beginner or an experienced developer, you'll find this course to be a valuable resource for learning Kotlin and Android development.\nHere's what you can expect to learn:\nThe basics of Kotlin programming language\nBuilding and publishing your own Android apps\nEffective use of Android Studio and Android SDK\nBest practices for Android development\nNetworking and APIs integration\nDatabase management and local storage\nMaterial design, animations, and advanced topics\nan other high value topics on android.\nThe course is taught by experienced developers and certified Kotlin and Android experts. With their guidance and the support of a supportive community, you'll have everything you need to master Kotlin and Android development. The course includes over 100 lectures and 13 hours of video content, and you'll have lifetime access to all of the course materials.\nEnroll in Ocsaly Academy's Android Development with Kotlin course today and take the first step towards a successful career in Android development. With a 30-day money-back guarantee, you have nothing to lose and everything to gain. Start building amazing Android apps with Kotlin now!\"\nAre you trying to start a career in Android programming, but haven't found the right way in? Do you have a great idea for an app, but don't know how to make it a reality? Or maybe you're just frustrated that to learn Android, you must already know Kotlin. If so, then this course is for you\nQuickly putting together a prototype of an idea, refining it, and then deciding to run with it and wire it up into a fully-fledged app, is such an exciting and rewarding process. Any programming can be fun – I have been programming all my life – but creating for Android is somehow extraordinarily rewarding..\n\n\nKotlin is the most succinct language, and therefore is the least error-prone, which is great for beginners. Kotlin is also the most fun language, mainly because the succinctness means you can get results faster and with less code. Google considers Kotlin an official (first-class) Android language. There are some other advantages to Kotlin that make it less error-prone and less likely to make mistakes that cause crashes. We will discover the details of these advantages as we proceed.\nKotlin is an object-oriented language. This means that it uses the concept of reusable programming objects. If this sounds like technical jargon, another analogy will help. Kotlin enables us and others (like the Android API development team) to write code that can be structured based on real-world things, and here is the important part – it can be reused.\n\n\nKotlin remains one of the most widely used and fastest-growing programming languages in recent years. Developers across the globe prefer using Kotlin for a range of projects such as data science, server-side or cloud development, etc. The demand for Kotlin is on the rise and it will continue to grow in the years to come. In this post, let’s explore the top five reasons why Kotlin is a great programming language to learn in 2023.\n1. Modern language\nIt is a modern programming language that brings together the best of object-oriented and functional programming. Some of the most promising features of Kotlin include clean compact syntax, secure, general-purpose, and more.\n2. Great materials\nThere are ample materials available on Kotlin that learners can leverage to have a good grasp of the programming language. There are numerous courses that a beginner can start with. Most of these courses are self-paced and offer great insights into the programming language. Also, the developer community is quite huge so if learners get stuck or have queries they can always seek solutions from the developer community.\n3. Easy to learn\nKotlin’s syntax is easy to learn for beginners and it offers a host of powerful features. It can be a great language to upskill for experienced programmers. It has a shallow learning curve especially if you have experience in Python or Java. The programming language is also quite easy for iOS developers as it is based on familiar concepts of modern technology.\n4. Career prospects\nMany leading brands use Kotlin for their software and Kotlin skills are highly in demand. If estimates are to be believed, job postings related to Kotlin skills are skyrocketing since 2023 by 1400%.\n5. Community support\n\n\nAre you ready to dive into the exciting world of mobile app development? Join our \"Android App Development in 34 Hours Bootcamp\" and learn everything you need to know to create amazing Android apps from scratch!\nIn just 34 hours, you'll gain hands-on experience with the latest tools and techniques for building cutting-edge apps that will run on millions of devices around the world. Our expert instructors will guide you through each step of the development process, from designing your user interface to integrating powerful features like GPS, camera access, and push notifications.\nWhether you're an aspiring developer looking to kick-start your career, or a seasoned pro looking to sharpen your skills, this bootcamp is the perfect way to take your Android app development skills to the next level. So why wait? Sign up today and start building the apps of tomorrow!",
      "target_audience": [
        "Beginner Android Developers"
      ]
    },
    {
      "title": "Taxi App in React Native",
      "url": "https://www.udemy.com/course/taxi-app-in-react-native/",
      "bio": "Make a basic taxi app in React Native!",
      "objectives": [
        "How to get device location in React Native",
        "How to make a passenger app and driver communicate via. Sockets",
        "How to install react-native-maps for both iOS and Android",
        "How to use Google Maps Places API for places autosuggestions",
        "How to use Google Maps Routes API for route directions",
        "How to draw polyline directions on the map",
        "How to send drivers location in background to passenger app",
        "How to create JWT authentication with Nodejs",
        "How to create a simple Socket-io backend"
      ],
      "course_content": {
        "Introduction to Socket.io - building a simple chat app in 30 mins": [
          "Why build a chat app - I thought we're making a taxi app?",
          "If you have this issue...",
          "Building a simple chat app in React Native and Socket.io",
          "Nice job!"
        ],
        "Installing react-native-maps": [
          "Installing react-native-maps on Android",
          "Getting location in React Native",
          "Installing react-native-maps on iOS"
        ],
        "Using Google Maps API's": [
          "Using Places Autocomplete API",
          "Using Google Directions API and drawing route"
        ],
        "Taxi App and Socket.io": [
          "Backend starting point",
          "Requesting a ride from passenger to taxi",
          "Sending location in background",
          "Creating mock route and loading mock route in simulator",
          "Using Higher Order Components",
          "Creating a REST API for login with Nodejs Express",
          "Express Router & Controller for User creation",
          "Creating and using JWT for authentication in Nodejs Express",
          "Creating Login form in React Native",
          "Passenger/Driver selection screen and token state"
        ]
      },
      "requirements": [
        "Basic JavaScript ES6",
        "Basic knowledge of React Native"
      ],
      "description": "Please note that this is not a \"full taxi app\", it's definitely lacks some functionality before you can either sell it or deploy it to a app store. It doesn't have any fare monitoring or payment functionality. I see this sort of a \"early access\" version of the course, and I intend on updating it based on my students requests in the future. First of all, I'm excited to see how my students take in the hours of content there already is.\nThat being said, I hope you will enjoy this course, and if you have any questions or request, don't hesitate to message me or use Udemy's Q&A. Thank you!\nHello and welcome to my little course!\nIn this course you will learn how to make a very basic taxi app in React Native. You will learn how to make a side both for the driver and passenger, and how to make the two devices communicate with each other.\nYou'll learn how to install and use react-native-maps, how to use Google Maps API's to get places suggestions and routes.\nYou'll learn how to send a request from a passenger to a driver, and updating the passenger with the driver location.",
      "target_audience": [
        "Developers familiar with React who wants to get a headstart at making a taxi app"
      ]
    },
    {
      "title": "Learn React by Building the Simplest App from Scratch",
      "url": "https://www.udemy.com/course/build-a-simple-react-app-from-scratch/",
      "bio": "Learn the core concepts needed to build a solid ReactJS app — in just one day",
      "objectives": [
        "Learn to build a ReactJS website with ViteJS",
        "Learn to build React MVP projects",
        "Learn React by building a micro web application",
        "Create a quick POC (proof of concept)",
        "Learn to code a basic and robust JavaScript application with the best technologies out there!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "2 - Where to work on - What to install",
          "3 - Setup our project with Vite"
        ],
        "Extra - Customize your shell": [
          "Setup p10k on your terminal"
        ],
        "Let's start our project": [
          "5 - Open our project in WebStorm",
          "6 - Let's start coding in React! ?",
          "7 - Store counting in a Local Storage",
          "8 - Commit your changes with Git",
          "9 - Setup your SSH key"
        ],
        "Adding UI styles": [
          "10 - Adding styling. Let's play with React Styled-Components",
          "11 - Adding Chakra UI library",
          "Good practice: Remove unused packages"
        ],
        "Source Code": [
          "Final Project Source Code"
        ],
        "Beyond this React Course": [
          "List of JavaScript Sandboxes (handy for quick debugging)",
          "Chrome / Brave Dev Extensions",
          "All My VS Code Extensions",
          "Where to Follow Me"
        ]
      },
      "requirements": [
        "Basic knowledge in JavaScript and general web development",
        "Basic knowledge in using command-line interface / shell commands on a terminal",
        "Willing to learn and research on the web"
      ],
      "description": "Through this course, you will learn how to build powerful and responsive web applications using the latest React technology, while leveraging the power of Vite to streamline your development process.\nWhether you're a beginner or an experienced developer looking to take your skills to the next level, this course has something for you.\nIn fact, this course covers everything you need to know to start building your own React projects from scratch.\n\nYou will learn how to set up a Vite environment and use it to develop and deploy a simple React application, as well as how to work with components and UI additions with Chakra.\nWith a focus on best practices and real-world examples, this course will give you the skills and knowledge you need to build high-performance React applications with Vite.\nYou will learn the basics of React, including JSX, components, and state management, as well as the Vite development environment, which allows for fast and efficient development with React.\n\nWith hands-on coding exercises, real-world projects, and expert instruction, you'll be ready to build powerful, responsive web apps with React and Vite.\n\nStart learning the fundamental knowledge today to becoming an amazing React developer in the near future!",
      "target_audience": [
        "Want to learn the power of React",
        "Quickly building a React website in less than one hour",
        "Learn how to install third-party libraries in a React project"
      ]
    },
    {
      "title": "Android App Development using Kotlin",
      "url": "https://www.udemy.com/course/android-app-development-using-kotlin/",
      "bio": "Develop Android apps in Kotlin and publish it to Play Store",
      "objectives": [
        "Build Your First Mobile App with Kotlin",
        "Explore the basic functionality of how an Android app works using Kotlin",
        "Use Android APIs such as save data permanently and implement Navigation Drawer",
        "Implement Lists using RecyclerView and learn about Kotlin Data classes",
        "Utilize the Power of Kotlin in an Android app such as Extension Functions, Lambda expressions, Default Params, Null Safety Operators and a lot more.",
        "Style your app for an enhanced user experience",
        "Learn to localise String resources, colors and themes of your app.",
        "Publish your app to Google Play Store by preparing Store listing and Exporting APK"
      ],
      "course_content": {
        "Getting Started with Android Apps using Kotlin": [
          "Introduction to Kotlin",
          "Installing Softwares on Mac, Windows and Linux",
          "Creating your First Android App using Kotlin",
          "Running your Android app in AVD",
          "Exploring Project Structure",
          "Section 1: Test Your Skills"
        ],
        "Exploring Android App Structure in Depth": [
          "Activity, User Interface and Views",
          "Designing Layout and Handle Events",
          "Navigating between Activities",
          "Share Data using Explicit Intent",
          "Share Data using Implicit Intent",
          "Section 2: Test Your Skills"
        ],
        "Implementing Lists and Kotlin Classes": [
          "Introduction to RecyclerView and CardView",
          "Adding RecyclerView and CardView",
          "Define Model Class",
          "Creating Adapter Class",
          "Link RecyclerView and Custom Adapter",
          "Section 3: Test Your Skills"
        ],
        "Leverage the Power of Kotlin": [
          "Code Cleanup",
          "Implementing Extension Function",
          "Using Default Parameters",
          "Applying Null Safety",
          "Using Companion Object and Object Declaration",
          "Section 4: Test Your Skills"
        ],
        "Finishing Touches and Styling Our App": [
          "Performing String Localisation",
          "Updating App Launcher Icon",
          "Styling App: Material Design Colors",
          "Styling App: Applying Themes",
          "Section 5: Test Your Skills"
        ],
        "Publish Your App to Google Play Store": [
          "Creating Developer Account",
          "Creating APK: Exporting our App",
          "Publishing App to Google Playstore",
          "Section 6: Test Your Skills"
        ]
      },
      "requirements": [
        "No previous programming knowledge required. I'll teach you what you need.",
        "You'll need a system either Mac, Windows or Linux. Choice will be yours."
      ],
      "description": "2024 Update: My Udemy courses are not being updated anymore.\nI have joined Droidcon Academy and leading the platform. I will continue my passion for teaching by working with thousands of instructors and helping them create high-quality courses for you. Thank you for your enormous support.\n-\nBuilding Android apps using Java requires a lot of boilerplate and ceremonial code. Do you want to build apps in Android in an easy and effective way? Move to Kotlin a first class language for Android apps. It has made the life of developers quite easy.\nThis course will get you acquainted with Kotlin and build effective Android applications. The course teaches you in creating an Android app using Kotlin-Android extension plugin easily. Next, you will see how to use features of Kotlin like Object Oriented features, Companion Objects , Kotlin classes, to implement them in your android application. Finally, the course teaches you how to style your application and publish it to the Google Play Store and make it available to the world.\nBy the end of the course you will learn to use Kotlin for developing your Android Application in a easy and effective way.\nWhat you'll learn?\nBuild Android apps using Kotlin Programming Language\nExplore the basic functionality of how an Android app works using Kotlin\nUse Android APIs such as save data permanently and implement Navigation Drawer\nImplement Lists using RecyclerView and learn about Kotlin classes\nUtilize the Power of Kotlin in an Android app\nStyle your app for an enhanced user experience\nPublish your app to Google Play Store",
      "target_audience": [
        "The course is designed for those who are excited to learn how to develop Android apps using Kotlin and Publish it on to Google Playstore"
      ]
    },
    {
      "title": "Job ready Flutter complete course with Firebase and Dart",
      "url": "https://www.udemy.com/course/job-ready-flutter-crash-course-with-firebase/",
      "bio": "Master the art of building cross platform application using Flutter and Firebase | Android & IOS & Web",
      "objectives": [
        "Cover Dart basics including syntax, data types, functions, conditionals, loops and many more.",
        "Familiarize with Flutter framework, its architecture, and advantages for cross-platform app development.",
        "Teach about various built-in widgets in Flutter, such as Text, Image, Container, Button, etc., and their usage in constructing UI.",
        "Explain the concepts of stateful and stateless widgets, demonstrating how to handle and update app state effectively.",
        "Guide through different navigation techniques in Flutter, enabling them to build multi-screen apps with smooth transitions.",
        "Show how to handle user input, including text input, button presses, gestures, and form validation.",
        "Introduce asynchronous programming in Flutter using Dart's Future, async, and await keywords, allowing students to perform non-blocking operations.",
        "Teach how to interact with RESTful APIs using packages like http or dio, enabling them to fetch and display data from web services.",
        "Integrate Firebase Authentication for user login, Firebase Cloud Storage for file management, and Firestore database for real-time data syncing.",
        "Best practices for handling errors and exceptions in Flutter apps, ensuring graceful error messages and recovery options.",
        "Encourage to apply their knowledge by working on hands-on projects throughout the course, reinforcing concepts and building their portfolio."
      ],
      "course_content": {
        "Introduction to Dart language": [
          "Lets Dive into Dart",
          "Variables and Data type",
          "String & String interpolation",
          "Final & Const Keywords",
          "Conditional Statements",
          "Lists",
          "Maps",
          "Looping Statements",
          "Break and Continue",
          "Declaring Functions and Short hand Syntax",
          "Types of Parameters in Function",
          "What are Classes and Objects",
          "Generic Type & Inheritance",
          "Exception Handling using Try Catch",
          "Static variables and methods",
          "Ternary operator and Null safety"
        ],
        "Introduction to Flutter Framework": [
          "Creating a new Project and understanding file structure",
          "What are Widgets",
          "Working with Assets & Pubspec file"
        ],
        "Exploring basic Flutter Widgets": [
          "Text & Scaffold Widget",
          "Center & Floating Action Button",
          "Changing Color and Styling",
          "What are Stateless Widget",
          "Asset and Network Image",
          "Icon and Button Widget",
          "Container Widget",
          "TextField Widget",
          "Column and Row",
          "ListTile and ListView"
        ],
        "Understanding Stateful Widget": [
          "What is a State",
          "The setState() method",
          "Stateful Widget in action",
          "What is initState() function",
          "Understanding Widget lifecycle"
        ],
        "Navigation Concept": [
          "Stack concept behind Navigation",
          "Push And Pop method",
          "Understanding Named Route",
          "Passing data via Constructors",
          "Drawer Navigation Widget",
          "Bottom Navigation Bar"
        ],
        "Handling User Input": [
          "Deep Dive into TextField Widget",
          "Adding a TextEditing Controller",
          "Validating User Input",
          "Decoration and other properties",
          "Alert Dialog Widget",
          "Displaying Snackbar"
        ],
        "Asynchronous Programming": [
          "Understanding Futures",
          "Async Await Concept",
          "What are Streams",
          "FutureBuilder and StreamBuilder Widget"
        ],
        "Working with Rest API": [
          "Introduction to http request",
          "Implement GET request to a server",
          "Fetching Json Data from the API",
          "Basic shopping application",
          "Handling POST request",
          "PUT and DELETE request",
          "Make Authenticated requests"
        ],
        "Model Class": [
          "Why we need models",
          "Creating our first model class",
          "Changes required in frontend",
          "Tool to generate Models easily",
          "Consume a new rest api"
        ],
        "Introduction to Firebase and Authentication": [
          "Understanding Firebase Products",
          "Setup Firebase into Project",
          "Register and Login UI",
          "Authenticate using Email Password",
          "Exception Handling",
          "Loading Indicator while authenticating",
          "Check authentication state",
          "Setup Project for Google Sign In",
          "Implement Google Sign In and Sign out"
        ]
      },
      "requirements": [
        "Eagerness to learn",
        "Patience to practice"
      ],
      "description": "If you follow the tech world then you might have heard about Flutter and its growing popularity day by day. There are lot of jobs around this new framework but the supply of skilled developers are less. So its high time that we upgrade our skill and grab those opportunities as soon as possible. You will learn the basics till advance concepts in this course which is enough to get you started applying for your dream job.\nFlutter is free, and open-source Software Development Kit used to develop high performing cross platform applications with a single code base. The real perk of choosing Flutter with Firebase as backend is that it offers you a complete package of application management. Right from cloud storage to real-time database, hosting to authentication services, Firebase will provide everything at one place and seamlessly meet the needs of the startups.\n\n\nWhat you will learn in this Course ?\nIntroduction to Dart language\n· Variables and data types\n· Conditional Statements\n· Understanding Loops\n· Declaring functions\n· Exception Handling\n· Classes and objects\n· Null Safety\n\n\nFlutter In dept Concepts\n· What are widgets\n· Stateless vs Stateful Widgets\n· Exploring various Widgets\n· What is a State\n· How to manage State\n· Navigation Concepts\n· Handling User Input\n· Asynchronous Programming\n· Handling REST API\n· Types of HTTP Requests\n· What are Models\n\n\nFirebase Integration\n· Setup Firebase Project\n· Authenticate using Email Password\n· Google Sign In\n· Firestore Database\n· CRUD operations\n· Firebase Storage\n· Compress Image",
      "target_audience": [
        "Designed for individuals with little to no prior experience in Flutter app development.",
        "Those who have an interest in building cross-platform mobile apps using Flutter.",
        "Developers experienced in other programming languages looking to expand their skills in Flutter.",
        "Students studying computer science or related fields, as well as technology enthusiasts eager to learn app development.",
        "Freelancers or entrepreneurs seeking to develop their own Flutter apps to showcase their skills or launch their business ideas.",
        "Those who want to learn how to integrate Firebase services such as Authentication, Cloud Storage, and Firestore into their Flutter apps."
      ]
    },
    {
      "title": "Complete Kotlin Coroutines development course",
      "url": "https://www.udemy.com/course/coroutines/",
      "bio": "Foundational and advanced Kotlin Coroutines concepts, Android app applications, Retrofit, Room, MVVM",
      "objectives": [
        "Kotlin Coroutines",
        "Asynchronous programming",
        "Coroutines + Retrofit + MVVM",
        "Coroutines + Room + MVVM",
        "Coroutines background processing",
        "Coroutines flow in an Android app",
        "Android background processing",
        "Advanced Coroutines topics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Required software",
          "Important message about Udemy reviews",
          "Engage on social media",
          "How to get the Coroutines project code"
        ],
        "Coroutines basics": [
          "Section intro",
          "Coroutines",
          "Hello world",
          "Coroutines are lightweight",
          "Scope",
          "Context",
          "Suspending functions",
          "Jobs",
          "Dispatchers",
          "async",
          "withContext",
          "Exception handling"
        ],
        "Android: Coroutines and background image processing": [
          "Project intro",
          "Setting up the project",
          "Gradle dependencies",
          "Downloading an image",
          "Challenge",
          "Applying the filter"
        ],
        "Android: Coroutines with Retrofit": [
          "Project intro",
          "Setting up the project",
          "Gradle dependencies",
          "Setting up Retrofit",
          "Creating the coroutines"
        ],
        "Android: Coroutines with Room database": [
          "Project intro",
          "Project setup",
          "Room gradle dependencies",
          "Database file",
          "Setting up Room",
          "SignupFragment",
          "Coroutines gradle dependencies",
          "SignupViewModel - first coroutine with Room",
          "MainFragment",
          "MainViewModel",
          "Challenge",
          "LoginFragment",
          "LoginViewModel"
        ],
        "Coroutines Asynchronous flow": [
          "Section intro",
          "Asynchronous flow",
          "Creating flows",
          "Flow properties: cold, cancellation, builders",
          "Operators part 1",
          "Operators part 2",
          "Buffering",
          "Composing flows",
          "Exception handling"
        ],
        "Android: Coroutines flow news ticker": [
          "Project intro",
          "Project setup",
          "Gradle dependencies",
          "Setup Retrofit",
          "Using the flow"
        ],
        "Coroutines Channels": [
          "Section intro",
          "Channels",
          "Channel producer",
          "Pipelines",
          "Fan-out",
          "Fan-in",
          "Buffered channels",
          "Ticker channels"
        ],
        "Coroutines concurrency and shared state": [
          "Section intro",
          "Shared state problem",
          "Atomic variables",
          "Thread confinement",
          "Mutual exclusion locks (mutex)"
        ],
        "Conclusion": [
          "Conclusion",
          "Further resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Android development knowledge",
        "Kotlin",
        "Retrofit",
        "MVVM",
        "Room database"
      ],
      "description": "This is the most complete resource online for learning about Kotlin coroutines.\nCoroutines are the hot new topic in Kotlin development. They will impact everything you do, and make your applications multithreaded. Efficiency is the main goal, and with this course you will become an expert in designing multi threaded, parallel applications. This is the best resource you will find online to learn about Kotlin coroutines.\nThis course will take you step by step, through each concept related to coroutines, discuss it in detail, then apply it in a practical project in Kotlin.\nWe will cover topics such as:\nScope\nContext\nSuspending functions\nJobs\nDispatchers\nasync\nwithContext\nException handling\nAsynchronous flow\nProperties\nFlow cancellation\nOperators\nBuffering\nComposing flows\nChannels\nProducer\nPipelines\nFan-in and fan-out\nBuffered channels\nTicker channels\nWe will go through all these topics and explain them in detail. We will also implement many coding examples to make sure you fully understand and are able to apply the concepts.\nIn addition, we will also be working on several Android apps to apply the knowledge we learned.\nA background image processing app\nA network communications app using Coroutines, Retrofit and MVVM\nA Room database using coroutines\nA news ticker app using Asynchronous Flows, Retrofit and MVVM\nThis course is great if you want to take your multithreading and parallel processing skills to the next level.\nSign up today and let's start learning about Kotlin Coroutines.",
      "target_audience": [
        "Android developers",
        "Students looking to improve their parallel processing knowledge"
      ]
    },
    {
      "title": "Twitter SwiftUI Clone | iOS 14 & Swift 5 | Firestore | MVVM",
      "url": "https://www.udemy.com/course/twitter-swiftui-clone-ios-14-swift-5-firestore-mvvm/",
      "bio": "Build A Twitter Clone With Swift UI | iOS 14 | MVVM | Swift 5 with Direct Messaging",
      "objectives": [
        "How to build a full scale application with SwiftUI 2.0",
        "How to use the MVVM framework with in depth explanations",
        "How to build a complex UI with animations using SwiftUI",
        "How to create and interact with data models and APIs using SwiftUI",
        "How to engineer a back end from scratch with Cloud Firestore",
        "Fundamental programming and SwiftUI skills",
        "How to upload and download data from an API",
        "How to use SwiftPackageManager instead of CocoaPods"
      ],
      "course_content": {
        "Building The Main User Interface": [
          "Introduction To SwiftUI",
          "Creating A Tab View",
          "Creating A Floating Action Button",
          "Creating A Scrollable List of Tweets",
          "Creating A Search View & Search Bar",
          "User Cells",
          "Resources"
        ],
        "Building A Messaging Framework": [
          "Building The Conversations View",
          "Navigation Links & Presenting A View Modally",
          "Getting Started With The Chat View",
          "Chat Bubble UI & View Logic",
          "Integrating Mock Data Model Into Chat View",
          "Message View Refactor",
          "Starting A New Chat"
        ],
        "User Profile View": [
          "Navigation To Profile & Profile Header",
          "Profile Action Button View UI & Logic",
          "Filter Button View & Finishing Profile"
        ],
        "Upload Tweet User Interface": [
          "Building Upload Tweet View",
          "Creating A Custom Text Editor With Placeholder"
        ],
        "Authentication User Interface": [
          "Getting Started With Login UI & Custom Text Field",
          "Finishing Up Login Screen",
          "Building Registration Screen",
          "Image Picker With UIViewControllerRepresentable",
          "Selecting Profile Image"
        ],
        "Firebase Integration & User Authentication": [
          "Integrating Firebase Into Our Project",
          "Register User With Firebase",
          "Uploading User Data To Firestore",
          "Logging In/Out & Presenting Main Interface",
          "Show Main Interface After Authentication",
          "Creating User Data Model"
        ],
        "Fetch/Display Users & Populate User Profile": [
          "Fetching Users & Populating User Cells",
          "MVVM Breakdown",
          "Load User Data In Profile"
        ],
        "Following Users": [
          "Follow User",
          "Unfollow User",
          "Check If User Is Followed"
        ],
        "Uploading & Fetching Tweets": [
          "Navigation Bar Buttons",
          "Authentication Bug Fix",
          "Uploading Tweet To Firestore",
          "Dismissing View After Upload Completion",
          "Data Model | Fetching & Displaying Tweets"
        ],
        "Tweet Detail View & Tweet Likes": [
          "Building Tweet Detail View",
          "Liking A Tweet",
          "Unlike Tweet | Check If User Liked Tweet"
        ]
      },
      "requirements": [
        "Basic understanding of Swift and Xcode is preferred"
      ],
      "description": "What are we building?\nIn this course, you will learn how to build an MVP version of Twitter with strictly Swift UI using the MVVM architecture. This is the only course on the market that builds a fully functioning app as complex as Twitter using nothing but SwiftUI. We will be building this completely from scratch, starting with the User Interface skeleton, and working our way up to integrating our API with Firestore and data models. This course WILL take your development skills to the next level, using the latest and greatest techniques in modern programming.\nWe will be building all the core components of a social network. This includes following users, uploading/liking tweets, direct messaging, creating a user profile, and registering users. Throughout the process, you will develop high level programming, app design and app development skills.  We will be building this without the use of storyboards, fully programmatically.\nPrior Experience?\nSome programming and basic Xcode experience is preferred. The course will move a little fast if you're a complete beginner, but you will pick things up along the way.\nWhy take this course?\nLearning advanced development skills should be taught using real world examples. This course will teach you how to build a fully functional social network, from complete scratch. You will be learning advanced front and backend development skills, from a real life professional developer. You will learn how to code like a pro, and everything will be explained in detail along the way. This will teach you to build production ready applications, that are easily scalable and maintainable. This also makes for a great project to add to your portfolio, which you can use to show off to potential employers if you're trying to become a pro.\nWhat will you learn?\nComprehensive knowledge and understanding of SwiftUI & Xcode 11\nHow to implement Model View ViewModel (MVVM) architecture\nHow to engineer a backend server using Cloud Firestore\nHow to authenticate and register users with Firebase\nHow to communicate with a database (read/write)\nHow to monitor events in a database\nHow to upload images to Firebase Storage\nHow to structure data for optimum performance in Cloud Firestore\nHow to build a fully functioning social network (likes, follow, tweets, messaging)\nHow to programmatically construct views and controllers\nHow to parse incoming JSON data from database\nHow to use CocoaTouch classes, UIKit, UserNotifications and more\nHow to use CocoaPods and custom third party APIs\nHow to implement/use protocols\nHow to implement custom subclasses for clean and reusable code\nHow to dynamically size collection view cells\nHow to create extensions and functions for clean and reusable code\nAdvanced level programming and app development skills\nAdvanced level User Interface Design\nAdvanced level back end engineering\nWhat features are included?\nDirect Messaging\nCreate users\nCreate a user profile\nAuthenticate users with Firebase\nSearch for users\nUpload tweets\nHome feed with tweets\nLike tweets\nFollow/Unfollow users from profile\nLogging in and logging out",
      "target_audience": [
        "Developers looking to improve their SwiftUI skills by building a full scale app like Twitter"
      ]
    }
  ]
}